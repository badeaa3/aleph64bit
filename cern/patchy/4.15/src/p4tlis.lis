1YEDIT    executing with Files / Options

   1  OLD1   11    ../p4pam.pam
   2  NEW1   21   -
      OPT         DK
      CCH         ?+
   5  READ    5   TTY
   6  PRINT   3   =P4TLIS.lis
   7  OLD2   12   -    ...

 VERSION  PATCHY  4.15 /1  911211 12.02           .RJP, TODAY:  201007  1549

                    OPTIONS ...D......K......R............


 CONTROL-CHARACTER SUBSTITUTION,  CHANGE  ? TO +

 ...                                ... ?STREAM, NEW1, LUN=21, T=ATT      .=:P4TLIS
 ATTACH 'NEW1'

 ...                                ... ?COPY, P=FLDIALG.
 RESUME 'OLD1'

     P=*TITLE*     0 . --- PATCHY  4.15 /1  911211 12.02           Composed for  LNX                       

     P=ALLPX*      1 . D=
                   2 . D=BLANKDEK
     P=CORRECT     3 . D=
     P=ALLX*       4 . D=
                   5 . D=BLANKDEK
     P=PATCHY*     6 . D=
                   7 . D=BLANKDEK
     P=YTOBCD*     8 . D=
                   9 . D=BLANKDEK
     P=YTOBIN*    10 . D=
                  11 . D=BLANKDEK
     P=YTOCETA*   12 . D=
                  13 . D=BLANKDEK
     P=YFRCETA*   14 . D=
                  15 . D=BLANKDEK
     P=YCOMPAR*   16 . D=
                  17 . D=BLANKDEK
     P=YEDIT*     18 . D=
                  19 . D=BLANKDEK
     P=YINDEX*    20 . D=
                  21 . D=BLANKDEK
     P=YLIST*     22 . D=
                  23 . D=BLANKDEK
     P=YSEARCH*   24 . D=
                  25 . D=BLANKDEK
     P=YSHIFT*    26 . D=
                  27 . D=BLANKDEK
     P=CERNFE*    28 . D=
                  29 . D=BLANKDEK
     P=MNOSBE*    30 . D=
                  31 . D=BLANKDEK
     P=MNOS*      32 . D=
                  33 . D=BLANKDEK
     P=MCYBX      34 . D=
                  35 . D=BLANKDEK
     P=MCDCV*     36 . D=
                  37 . D=BLANKDEK
     P=MCDC76*    38 . D=
                  39 . D=BLANKDEK
     P=MCDCX      40 . D=
                  41 . D=BLANKDEK
                  42 . D=DELETES 
                  43 . D=USEMAINS
     P=MALT*      44 . D=
                  45 . D=BLANKDEK
     P=MAPO10*    46 . D=
                  47 . D=BLANKDEK
     P=MAPO*      48 . D=
                  49 . D=BLANKDEK
     P=MCRAY*     50 . D=
                  51 . D=BLANKDEK
                  52 . D=USEMAINS
     P=MCRU*      53 . D=
                  54 . D=BLANKDEK
     P=MCSE*      55 . D=
                  56 . D=BLANKDEK
                  57 . D=USEMAINS
     P=MCVX*      58 . D=
                  59 . D=BLANKDEK
     P=MCVY*      60 . D=
                  61 . D=BLANKDEK
     P=MDGE*      62 . D=
                  63 . D=BLANKDEK
                  64 . D=USEMAINS
     P=MHPX*      65 . D=
                  66 . D=BLANKDEK
     P=MIBM*      67 . D=
                  68 . D=BLANKDEK
                  69 . D=USEMAINS
     P=MIBX*      70 . D=
                  71 . D=BLANKDEK
     P=MIRT*      72 . D=
                  73 . D=BLANKDEK
     P=MLNX*      74 . D=
                  75 . D=BLANKDEK
     P=MND3*      76 . D=
                  77 . D=BLANKDEK
     P=MND2*      78 . D=
                  79 . D=BLANKDEK
     P=MPDP*      80 . D=
                  81 . D=BLANKDEK
                  82 . D=USEMAINS
     P=MSGI*      83 . D=
                  84 . D=BLANKDEK
     P=MSUN*      85 . D=
                  86 . D=BLANKDEK
     P=MUNO*      87 . D=
                  88 . D=BLANKDEK
                  89 . D=USEMAINS
     P=MVAX*      90 . D=
                  91 . D=BLANKDEK
     P=MVMI*      92 . D=
                  93 . D=BLANKDEK
     P=A4         94 . D=
                  95 . D=BLANKDEK
     P=A5         96 . D=
                  97 . D=BLANKDEK
     P=A6         98 . D=
                  99 . D=BLANKDEK
     P=A8        100 . D=
                 101 . D=BLANKDEK
     P=A10       102 . D=
                 103 . D=BLANKDEK
     P=NOTA8M    104 . D=
     P=HOLLAPO   105 . D=
     P=DOMQAUGM  106 . D=
     P=ASCILOW   107 . D=
                 108 . D=BLANKDEK
     P=ASCIINT   109 . D=
                 110 . D=BLANKDEK
     P=EBCDINT   111 . D=
                 112 . D=BLANKDEK
     P=LUNPREM   113 . D=
                 114 . D=BLANKDEK
     P=FORCELOA  115 . D=
     P=IOXPACK   116 . D=
     P=IOFORTR   117 . D=
     P=IOVPACK   118 . D=
                 119 . D=BLANKDEK
                 120 . D=VARIAB  
                 121 . D=FIXED   
     P=PCDE      122 . D=
                 123 . D=WSPEL   
                 124 . D=WSP     
                 125 . D=WSPX    
                 126 . D=WSPEQ   
                 127 . D=DEFAULTS
     P=*ALT      128 . D=
                 129 . D=BLANKDEK
     P=*APO      130 . D=
                 131 . D=BLANKDEK
     P=*CDCV     132 . D=
                 133 . D=BLANKDEK
     P=*FTN      134 . D=
                 135 . D=BLANKDEK
     P=*CRU      136 . D=
                 137 . D=BLANKDEK
     P=*CRAY     138 . D=
                 139 . D=BLANKDEK
     P=*CVX      140 . D=
                 141 . D=BLANKDEK
     P=*DGE      142 . D=
                 143 . D=BLANKDEK
     P=*HPX      144 . D=
                 145 . D=BLANKDEK
     P=*IBMVS    146 . D=
                 147 . D=BLANKDEK
     P=*IBMSI    148 . D=
                 149 . D=BLANKDEK
     P=*IBM4     150 . D=
                 151 . D=BLANKDEK
     P=*IBM      152 . D=
                 153 . D=BLANKDEK
     P=*IBX      154 . D=
                 155 . D=BLANKDEK
     P=*IRT      156 . D=
                 157 . D=BLANKDEK
     P=*LNX      158 . D=
                 159 . D=BLANKDEK
     P=*NORD3    160 . D=
                 161 . D=BLANKDEK
     P=*PDP10    162 . D=
                 163 . D=BLANKDEK
     P=*SGI      164 . D=
                 165 . D=BLANKDEK
     P=*SUN      166 . D=
                 167 . D=BLANKDEK
     P=*UNIVAC   168 . D=
                 169 . D=BLANKDEK
     P=*UNO      170 . D=
                 171 . D=BLANKDEK
     P=*VAX      172 . D=
                 173 . D=BLANKDEK
     P=*VMI      174 . D=
                 175 . D=BLANKDEK
     P=QCDE      176 . D=
                 177 . D=QCDE    
                 178 . D=QCDCMLAN
                 179 . D=QIBMMLAN
                 180 . D=QND3MLAN
                 181 . D=QPDPMLAN
                 182 . D=QUNIMLAN
                 183 . D=QVAXMLAN
     P=EXPLNX    184 . D=
                 185 . D=LNXD    
     P=EXPVMI    186 . D=
                 187 . D=VMID    
     P=INSHELL   188 . D=
                 189 . D=BOOTSTRA
                 190 . D=TESTJOBS
                 191 . D=RELEASE 
     P=MAINUIX   192 . D=
                 193 . D=BLANKDEK
                 194 . D=YPATCH  
                 195 . D=YTOBCD  
                 196 . D=YTOBIN  
                 197 . D=YTOCET  
                 198 . D=YFRCET  
                 199 . D=YCOMPA  
                 200 . D=YEDIT   
                 201 . D=YINDEX  
                 202 . D=YLIST   
                 203 . D=YSEARC  
                 204 . D=YSHIFT  
     P=FLDIALG   205 . D=
                 206 . D=FLPARA  
                 207 . D=FLKRAK  
                 208 . D=FLINK   
                 209 . D=FLOPER  
                 210 . D=HELPPR  
                 211 . D=APOASC  

 ...                                ... ?GET, P=QABEND.
     P=QABEND    212 . D=
                 213 . D=BLANKDEK
                 214 . D=NOIA    

 ...                                ... ?GET,, P=PINIT.
     P=PINIT     215 . D=

 ...                                ... ?GET,, P=ARRIVE, LEV=2.
     - PEND          - D=
     - RUN           - D=
     - ACTION        - D=
     P=ARRIVE    216 . D=

 ...                                ... ?GET, ARBIN.
                     -   ARRIVE  
                     -   ARBCD   
                 217 . D=ARBIN   

 ...                                ... ?GET,, P=YTOCETA, LEV=2.
     - DEPART        - D=
     - PUTIL         - D=
     - YTOBCD        - D=
     - YTOBIN        - D=
     P=YTOCETA   218 . D=

 ...                                ... ?GET, TOCETA.
                     -   BLANKDEK
                     -   YTOCEX  
                 219 . D=TOCETA  

 ...                                ... ?GET,, P=YFRCETA.
                     -   TOSETU  
     P=YFRCETA   220 . D=

 ...                                ... ?GET, FRCETA.
                     -   YFRCEX  
                 221 . D=FRCETA  

 ...                                ... ?GET, P=AUXINI,L=2.
     - YCOMPAR       - D=
     - YEDIT         - D=
     - YINDEX        - D=
     - YLIST         - D=
     - YSEARCH       - D=
     - YSHIFT        - D=
     P=AUXINI    222 . D=

 ...                                ... ?GET, P=POPIN.
     - PLOAD         - D=
                     -   PLOAD   
     - CCKRAK        - D=
                     -   CCKRAK  
     - PILECT        - D=
                     -   PILECT  
     - PILEUP        - D=
                     -   PILEUP  
     P=POPIN     224 . D=
                 225 . D=POPIN   

 ...                                ... ?GET, -AUXFIL, P=SERVAUX.
     - POPOFF        - D=
                     -   POPREW  
                     -   POPOFF  
                     -   PRTITL  
                     -   NOTITL  
     P=SERVAUX   226 . D=
                 227 . D=AUXFIL  

 ...                                ... ?GET, -IOFILX, P=SERVICE.
                     -   CREBUF  
                     -   INCHCH  
                     -   JARTPX  
                     -   LOGLV   
                     -   SETID   
     P=SERVICE   228 . D=
                 229 . D=CCTOUP  
                 230 . D=IOFILE  
                 231 . D=IOFILX  

 ...                                ... ?GET, QABEND-PABEND.
                     -   IOTYPE  
                     -   JARTYP  
                     -   KDNGO   
                     -   KDNREW  
                     -   KDNEXTVX
                     -   KDNEXIBX
                     -   KDNEXTCH
                     -   KDNEXT  
                     -   KDSTEP  
                     -   KDCOPY  
                     -   KDFILL  
                     -   LIFTBK  
                     -   NAMEFL  
                     -   NOMEM   
                     -   QEND    
                 232 . D=QABEND  
                 233 . D=RQTELLD 
                 234 . D=PABEND  

 ...                                ... ?SKIP, F=,L=2.
     - PAMEND        - D=
 HOLD   'OLD1'   AFTER FILE  1  WITH   532 RCRDS,   532 TOTAL.

 ...                                ... ?XSKIP, F=KERNFOR, LEV=2.
0      *TITLE*       -     HYDRA                                                                           

     - QMALT         - D=
     - QMAPO         - D=
     - QMCDCV        - D=
     - QMCDC         - D=
     - QMCRY         - D=
     - QMCVX         - D=
     - QMDGE         - D=
     - QMHPX         - D=
     - QMIBM         - D=
     - QMIBX         - D=
     - QMIRT         - D=
     - QMLNX         - D=
     - QMND3         - D=
     - QMPDP         - D=
     - QMSGI         - D=
     - QMSUN         - D=
     - QMUNI         - D=
     - QMUNO         - D=
     - QMVAX         - D=
     - QMVMI         - D=
     - QMALL         - D=
     - QIOV          - D=
     - QIOX          - D=
     - QDEBUG        - D=
     - QTELETY       - D=
     - QEND          - D=
     - MQ            - D=
     - QUTYALT       - D=
     - QUTYAPO       - D=
     - QUTYCDC       - D=
     - QUTYCRY       - D=
     - QUTYCVX       - D=
     - QUTYHPX       - D=
     - QUTYIBM       - D=
     - QUTYIRT       - D=
     - QUTYND3       - D=
     - QUTYPDP       - D=
     - QUTYSGI       - D=
     - QUTYSUN       - D=
     - QUTYUNI       - D=
     - QUTYUNO       - D=
     - QUTYVAX       - D=
     - QUTIL         - D=
     - QPAMEND       - D=
 HOLD   'OLD1'   AFTER FILE  2  WITH   190 RCRDS,   722 TOTAL.
0      *TITLE*       -     KERNLNX                                                                         

     - KERNLNX       - D=
     - *KLNX         - D=
     - QMLNX         - D=
     - LNXPROGS      - D=
     - LNXGS         - D=
     - PAMEND        - D=
 HOLD   'OLD1'   AFTER FILE  3  WITH    44 RCRDS,   766 TOTAL.

 ...                                ... +DEL.
0      *TITLE*       -     KERNFOR                                                                         


 ...                                ... +QUIT.
 REWIND 'NEW1'   AFTER FILE  1  WITH   285 RCRDS,   285 TOTAL.
 DETACH 'OLD1'   AFTER FILE  4  WITH     2 RCRDS,   768 TOTAL.
1YINDEX   executing with Files / Options

   1  PAM    11    P4TLIS.pam
      OPT         -
   3  PRINT   3   +P4TLIS.lis

 VERSION  PATCHY  4.15 /1  911211 12.02           .RJP, TODAY:  201007  1549

                    OPTIONS .................R............

 RESUME 'PAM '

 F=PATCHY    -----     0 .--- PATCHY  4.15 /1  911211 12.02           Composed for  LNX                       

       P= ALLPX*       1 . D= 
                       2 . D= BLANKDEK
       P= CORRECT      3 . D= 
       P= ALLX*        4 . D= 
                       5 . D= BLANKDEK
       P= PATCHY*      6 . D= 
                       7 . D= BLANKDEK
       P= YTOBCD*      8 . D= 
                       9 . D= BLANKDEK
       P= YTOBIN*     10 . D= 
                      11 . D= BLANKDEK
       P= YTOCETA*    12 . D= 
                      13 . D= BLANKDEK
       P= YFRCETA*    14 . D= 
                      15 . D= BLANKDEK
       P= YCOMPAR*    16 . D= 
                      17 . D= BLANKDEK
       P= YEDIT*      18 . D= 
                      19 . D= BLANKDEK
       P= YINDEX*     20 . D= 
                      21 . D= BLANKDEK
       P= YLIST*      22 . D= 
                      23 . D= BLANKDEK
       P= YSEARCH*    24 . D= 
                      25 . D= BLANKDEK
       P= YSHIFT*     26 . D= 
                      27 . D= BLANKDEK
       P= CERNFE*     28 . D= 
                      29 . D= BLANKDEK
       P= MNOSBE*     30 . D= 
                      31 . D= BLANKDEK
       P= MNOS*       32 . D= 
                      33 . D= BLANKDEK
       P= MCYBX       34 . D= 
                      35 . D= BLANKDEK
       P= MCDCV*      36 . D= 
                      37 . D= BLANKDEK
       P= MCDC76*     38 . D= 
                      39 . D= BLANKDEK
       P= MCDCX       40 . D= 
                      41 . D= BLANKDEK
                      42 . D= DELETES 
                      43 . D= USEMAINS
       P= MALT*       44 . D= 
                      45 . D= BLANKDEK
       P= MAPO10*     46 . D= 
                      47 . D= BLANKDEK
       P= MAPO*       48 . D= 
                      49 . D= BLANKDEK
       P= MCRAY*      50 . D= 
                      51 . D= BLANKDEK
                      52 . D= USEMAINS
       P= MCRU*       53 . D= 
                      54 . D= BLANKDEK
       P= MCSE*       55 . D= 
                      56 . D= BLANKDEK
                      57 . D= USEMAINS
       P= MCVX*       58 . D= 
                      59 . D= BLANKDEK
       P= MCVY*       60 . D= 
                      61 . D= BLANKDEK
       P= MDGE*       62 . D= 
                      63 . D= BLANKDEK
                      64 . D= USEMAINS
       P= MHPX*       65 . D= 
                      66 . D= BLANKDEK
       P= MIBM*       67 . D= 
                      68 . D= BLANKDEK
                      69 . D= USEMAINS
       P= MIBX*       70 . D= 
                      71 . D= BLANKDEK
       P= MIRT*       72 . D= 
                      73 . D= BLANKDEK
       P= MLNX*       74 . D= 
                      75 . D= BLANKDEK
       P= MND3*       76 . D= 
                      77 . D= BLANKDEK
       P= MND2*       78 . D= 
                      79 . D= BLANKDEK
       P= MPDP*       80 . D= 
                      81 . D= BLANKDEK
                      82 . D= USEMAINS
       P= MSGI*       83 . D= 
                      84 . D= BLANKDEK
       P= MSUN*       85 . D= 
                      86 . D= BLANKDEK
       P= MUNO*       87 . D= 
                      88 . D= BLANKDEK
                      89 . D= USEMAINS
       P= MVAX*       90 . D= 
                      91 . D= BLANKDEK
       P= MVMI*       92 . D= 
                      93 . D= BLANKDEK
       P= A4          94 . D= 
                      95 . D= BLANKDEK
       P= A5          96 . D= 
                      97 . D= BLANKDEK
       P= A6          98 . D= 
                      99 . D= BLANKDEK
       P= A8         100 . D= 
                     101 . D= BLANKDEK
       P= A10        102 . D= 
                     103 . D= BLANKDEK
       P= NOTA8M     104 . D= 
       P= HOLLAPO    105 . D= 
       P= DOMQAUGM   106 . D= 
       P= ASCILOW    107 . D= 
                     108 . D= BLANKDEK
       P= ASCIINT    109 . D= 
                     110 . D= BLANKDEK
       P= EBCDINT    111 . D= 
                     112 . D= BLANKDEK
       P= LUNPREM    113 . D= 
                     114 . D= BLANKDEK
       P= FORCELOA   115 . D= 
       P= IOXPACK    116 . D= 
       P= IOFORTR    117 . D= 
       P= IOVPACK    118 . D= 
                     119 . D= BLANKDEK
                     120 . D= VARIAB  
                     121 . D= FIXED   
       P= PCDE       122 . D= 
                     123 . D= WSPEL   
                     124 . D= WSP     
                     125 . D= WSPX    
                     126 . D= WSPEQ   
                     127 . D= DEFAULTS
       P= *ALT       128 . D= 
                     129 . D= BLANKDEK
       P= *APO       130 . D= 
                     131 . D= BLANKDEK
       P= *CDCV      132 . D= 
                     133 . D= BLANKDEK
       P= *FTN       134 . D= 
                     135 . D= BLANKDEK
       P= *CRU       136 . D= 
                     137 . D= BLANKDEK
       P= *CRAY      138 . D= 
                     139 . D= BLANKDEK
       P= *CVX       140 . D= 
                     141 . D= BLANKDEK
       P= *DGE       142 . D= 
                     143 . D= BLANKDEK
       P= *HPX       144 . D= 
                     145 . D= BLANKDEK
       P= *IBMVS     146 . D= 
                     147 . D= BLANKDEK
       P= *IBMSI     148 . D= 
                     149 . D= BLANKDEK
       P= *IBM4      150 . D= 
                     151 . D= BLANKDEK
       P= *IBM       152 . D= 
                     153 . D= BLANKDEK
       P= *IBX       154 . D= 
                     155 . D= BLANKDEK
       P= *IRT       156 . D= 
                     157 . D= BLANKDEK
       P= *LNX       158 . D= 
                     159 . D= BLANKDEK
       P= *NORD3     160 . D= 
                     161 . D= BLANKDEK
       P= *PDP10     162 . D= 
                     163 . D= BLANKDEK
       P= *SGI       164 . D= 
                     165 . D= BLANKDEK
       P= *SUN       166 . D= 
                     167 . D= BLANKDEK
       P= *UNIVAC    168 . D= 
                     169 . D= BLANKDEK
       P= *UNO       170 . D= 
                     171 . D= BLANKDEK
       P= *VAX       172 . D= 
                     173 . D= BLANKDEK
       P= *VMI       174 . D= 
                     175 . D= BLANKDEK
       P= QCDE       176 . D= 
                     177 . D= QCDE    
                     178 . D= QCDCMLAN
                     179 . D= QIBMMLAN
                     180 . D= QND3MLAN
                     181 . D= QPDPMLAN
                     182 . D= QUNIMLAN
                     183 . D= QVAXMLAN
       P= EXPLNX     184 . D= 
                     185 . D= LNXD    
       P= EXPVMI     186 . D= 
                     187 . D= VMID    
       P= INSHELL    188 . D= 
                     189 . D= BOOTSTRA
                     190 . D= TESTJOBS
                     191 . D= RELEASE 
       P= MAINUIX    192 . D= 
                     193 . D= BLANKDEK
                     194 . D= YPATCH  
                     195 . D= YTOBCD  
                     196 . D= YTOBIN  
                     197 . D= YTOCET  
                     198 . D= YFRCET  
                     199 . D= YCOMPA  
                     200 . D= YEDIT   
                     201 . D= YINDEX  
                     202 . D= YLIST   
                     203 . D= YSEARC  
                     204 . D= YSHIFT  
       P= FLDIALG    205 . D= 
                     206 . D= FLPARA  
                     207 . D= FLKRAK  
                     208 . D= FLINK   
                     209 . D= FLOPER  
                     210 . D= HELPPR  
                     211 . D= APOASC  
       P= QABEND     212 . D= 
                     213 . D= BLANKDEK
                     214 . D= NOIA    
       P= PINIT      215 . D= 
       P= ARRIVE     216 . D= 
                     217 . D= ARBIN   
       P= YTOCETA    218 . D= 
                     219 . D= TOCETA  
       P= YFRCETA    220 . D= 
                     221 . D= FRCETA  
       P= AUXINI     222 . D= 
                     223 . D= AUXINI  
       P= POPIN      224 . D= 
                     225 . D= POPIN   
       P= SERVAUX    226 . D= 
                     227 . D= AUXFIL  
       P= SERVICE    228 . D= 
                     229 . D= CCTOUP  
                     230 . D= IOFILE  
                     231 . D= IOFILX  
                     232 . D= QABEND  
                     233 . D= RQTELLD 
                                    1 - +SEQ, QCARD1, R=RQTELL. 
                     234 . D= PABEND  
 HOLD   'PAM '   AFTER FILE  1  WITH   285 RCRDS,   285 TOTAL.
 EOI ON  PAM 
 REWIND 'PAM '
1   INDEX OF PATCHES
    -------- -------

       128 = *ALT    .
       130 = *APO    .
       132 = *CDCV   .
       138 = *CRAY   .
       136 = *CRU    .
       140 = *CVX    .
       142 = *DGE    .
       134 = *FTN    .
       144 = *HPX    .
       152 = *IBM    .
       150 = *IBM4   .
       148 = *IBMSI  .
       146 = *IBMVS  .
       154 = *IBX    .
       156 = *IRT    .
 IF -11111 = *KAPOL  .
       158 = *LNX    .
       160 = *NORD3  .
       162 = *PDP10  .
       164 = *SGI    .
       166 = *SUN    .
       168 = *UNIVAC .
       170 = *UNO    .
       172 = *VAX    .
       174 = *VMI    .
       102 = A10     .
 IF     94 = A4      .
        96 = A5      .
 IF -11111 = A5M     .
        98 = A6      .
 IF    100 = A8      .
         1 = ALLPX*  .
         4 = ALLX*   .
       216 = ARRIVE  .
       109 = ASCIINT .
       107 = ASCILOW .
 IF -11111 = ATTACHOP.
       222 = AUXINI  .
 IF -11111 = CDC64CH .
        28 = CERNFE* .
 IF -11111 = CERNWYL .
 IF -11111 = CETA2FR .
 IF -11111 = CETA2TO .
 IF -11111 = CETAFMTU.
 IF -11111 = CMS     .
         3 = CORRECT .
 IF -11111 = CVFORLOW.
       106 = DOMQAUGM.
       111 = EBCDINT .
       184 = EXPLNX  .
       186 = EXPVMI  .
 IF -11111 = F77     .
 IF -11111 = FILL    .
       205 = FLDIALG .
       115 = FORCELOA.
       105 = HOLLAPO .
       188 = INSHELL .
 IF -11111 = IOERREX .
       117 = IOFORTR .
 IF -11111 = IOPACK  .
       118 = IOVPACK .
       116 = IOXPACK .
 IF -11111 = JARTYPQU.
 IF -11111 = LG      .
       113 = LUNPREM .
       192 = MAINUIX .
        44 = MALT*   .
        48 = MAPO*   .
        46 = MAPO10* .
        38 = MCDC76* .
        36 = MCDCV*  .
        40 = MCDCX   .
        50 = MCRAY*  .
        53 = MCRU*   .
        55 = MCSE*   .
        58 = MCVX*   .
        60 = MCVY*   .
        34 = MCYBX   .
        62 = MDGE*   .
        65 = MHPX*   .
        67 = MIBM*   .
        70 = MIBX*   .
        72 = MIRT*   .
 IF     74 = MLNX*   .
        78 = MND2*   .
        76 = MND3*   .
        32 = MNOS*   .
        30 = MNOSBE* .
 IF     80 = MPDP*   .
        83 = MSGI*   .
        85 = MSUN*   .
 IF -11111 = MULTI   .
        87 = MUNO*   .
 IF     90 = MVAX*   .
 IF     92 = MVMI*   .
       104 = NOTA8M  .
 IF -11111 = OVERLAY .
 IF      6 = PATCHY* .
       122 = PCDE    .
       215 = PINIT   .
       224 = POPIN   .
 IF -11111 = PSEUDO  .
       212 = QABEND  .
       176 = QCDE    .
 IF -11111 = QDEBUG  .
 IF -11111 = QMALT   .
 IF -11111 = QMAPO   .
 IF -11111 = QMAPO10 .
 IF -11111 = QMCDC   .
 IF -11111 = QMCRU   .
 IF -11111 = QMCVX   .
 IF -11111 = QMCVY   .
 IF -11111 = QMHPX   .
 IF -11111 = QMIBM   .
 IF -11111 = QMIBX   .
 IF -11111 = QMIRT   .
 IF -11111 = QMLNX   .
 IF -11111 = QMND3   .
 IF -11111 = QMPDP   .
 IF -11111 = QMSGI   .
 IF -11111 = QMSUN   .
 IF -11111 = QMUNI   .
 IF -11111 = QMUNO   .
 IF -11111 = QMVAX   .
 IF -11111 = QMVMI   .
 IF -11111 = QUNIT2B .
       226 = SERVAUX .
       228 = SERVICE .
 IF -11111 = SKIPFULL.
 IF -11111 = VSFORT  .
 IF     16 = YCOMPAR*.
 IF     18 = YEDIT*  .
       220 = YFRCETA .
 IF     14 = YFRCETA*.
 IF     20 = YINDEX* .
 IF     22 = YLIST*  .
 IF     24 = YSEARCH*.
 IF     26 = YSHIFT* .
 IF      8 = YTOBCD* .
 IF     10 = YTOBIN* .
       218 = YTOCETA .
 IF     12 = YTOCETA*.
0           INDEX OF  DECKS
            --------  -----

      211 = FLDIALG . APOASC  
      217 = ARRIVE  . ARBIN   
      227 = SERVAUX . AUXFIL  
      223 = AUXINI  . AUXINI  
        2 = ALLPX*  . BLANKDEK
        5 = ALLX*   . BLANKDEK
        7 = PATCHY* . BLANKDEK
        9 = YTOBCD* . BLANKDEK
       11 = YTOBIN* . BLANKDEK
       13 = YTOCETA*. BLANKDEK
       15 = YFRCETA*. BLANKDEK
       17 = YCOMPAR*. BLANKDEK
       19 = YEDIT*  . BLANKDEK
       21 = YINDEX* . BLANKDEK
       23 = YLIST*  . BLANKDEK
       25 = YSEARCH*. BLANKDEK
       27 = YSHIFT* . BLANKDEK
       29 = CERNFE* . BLANKDEK
       31 = MNOSBE* . BLANKDEK
       33 = MNOS*   . BLANKDEK
       35 = MCYBX   . BLANKDEK
       37 = MCDCV*  . BLANKDEK
       39 = MCDC76* . BLANKDEK
       41 = MCDCX   . BLANKDEK
       45 = MALT*   . BLANKDEK
       47 = MAPO10* . BLANKDEK
       49 = MAPO*   . BLANKDEK
       51 = MCRAY*  . BLANKDEK
       54 = MCRU*   . BLANKDEK
       56 = MCSE*   . BLANKDEK
       59 = MCVX*   . BLANKDEK
       61 = MCVY*   . BLANKDEK
       63 = MDGE*   . BLANKDEK
       66 = MHPX*   . BLANKDEK
       68 = MIBM*   . BLANKDEK
       71 = MIBX*   . BLANKDEK
       73 = MIRT*   . BLANKDEK
       75 = MLNX*   . BLANKDEK
       77 = MND3*   . BLANKDEK
       79 = MND2*   . BLANKDEK
       81 = MPDP*   . BLANKDEK
       84 = MSGI*   . BLANKDEK
       86 = MSUN*   . BLANKDEK
       88 = MUNO*   . BLANKDEK
       91 = MVAX*   . BLANKDEK
       93 = MVMI*   . BLANKDEK
       95 = A4      . BLANKDEK
       97 = A5      . BLANKDEK
       99 = A6      . BLANKDEK
      101 = A8      . BLANKDEK
      103 = A10     . BLANKDEK
      108 = ASCILOW . BLANKDEK
      110 = ASCIINT . BLANKDEK
      112 = EBCDINT . BLANKDEK
      114 = LUNPREM . BLANKDEK
      119 = IOVPACK . BLANKDEK
      129 = *ALT    . BLANKDEK
      131 = *APO    . BLANKDEK
      133 = *CDCV   . BLANKDEK
      135 = *FTN    . BLANKDEK
      137 = *CRU    . BLANKDEK
      139 = *CRAY   . BLANKDEK
      141 = *CVX    . BLANKDEK
      143 = *DGE    . BLANKDEK
      145 = *HPX    . BLANKDEK
      147 = *IBMVS  . BLANKDEK
      149 = *IBMSI  . BLANKDEK
      151 = *IBM4   . BLANKDEK
      153 = *IBM    . BLANKDEK
      155 = *IBX    . BLANKDEK
      157 = *IRT    . BLANKDEK
      159 = *LNX    . BLANKDEK
      161 = *NORD3  . BLANKDEK
      163 = *PDP10  . BLANKDEK
      165 = *SGI    . BLANKDEK
      167 = *SUN    . BLANKDEK
      169 = *UNIVAC . BLANKDEK
      171 = *UNO    . BLANKDEK
      173 = *VAX    . BLANKDEK
      175 = *VMI    . BLANKDEK
      193 = MAINUIX . BLANKDEK
      213 = QABEND  . BLANKDEK
      189 = INSHELL . BOOTSTRA
      229 = SERVICE . CCTOUP  
      127 = PCDE    . DEFAULTS
       42 = MCDCX   . DELETES 
      121 = IOVPACK . FIXED   
      208 = FLDIALG . FLINK   
      207 = FLDIALG . FLKRAK  
      209 = FLDIALG . FLOPER  
      206 = FLDIALG . FLPARA  
      221 = YFRCETA . FRCETA  
      210 = FLDIALG . HELPPR  
      230 = SERVICE . IOFILE  
      231 = SERVICE . IOFILX  
      185 = EXPLNX  . LNXD    
      214 = QABEND  . NOIA    
      234 = SERVICE . PABEND  
      225 = POPIN   . POPIN   
      232 = SERVICE . QABEND  
      178 = QCDE    . QCDCMLAN
      177 = QCDE    . QCDE    
      179 = QCDE    . QIBMMLAN
      180 = QCDE    . QND3MLAN
      181 = QCDE    . QPDPMLAN
      182 = QCDE    . QUNIMLAN
      183 = QCDE    . QVAXMLAN
      191 = INSHELL . RELEASE 
      233 = SERVICE . RQTELLD 
      190 = INSHELL . TESTJOBS
      219 = YTOCETA . TOCETA  
       43 = MCDCX   . USEMAINS
       52 = MCRAY*  . USEMAINS
       57 = MCSE*   . USEMAINS
       64 = MDGE*   . USEMAINS
       69 = MIBM*   . USEMAINS
       82 = MPDP*   . USEMAINS
       89 = MUNO*   . USEMAINS
      120 = IOVPACK . VARIAB  
      187 = EXPVMI  . VMID    
      124 = PCDE    . WSP     
      123 = PCDE    . WSPEL   
      126 = PCDE    . WSPEQ   
      125 = PCDE    . WSPX    
      199 = MAINUIX . YCOMPA  
      200 = MAINUIX . YEDIT   
      198 = MAINUIX . YFRCET  
      201 = MAINUIX . YINDEX  
      202 = MAINUIX . YLIST   
      194 = MAINUIX . YPATCH  
      203 = MAINUIX . YSEARC  
      204 = MAINUIX . YSHIFT  
      195 = MAINUIX . YTOBCD  
      196 = MAINUIX . YTOBIN  
      197 = MAINUIX . YTOCET  
0                      INDEX OF  SEQUENCE  DEF.
                       --------  --------

      122 = PCDE    .         Z= ARRCOM  
      122 = PCDE    .         Z= ARRVRQ  
      113 = LUNPREM .         Z= AUXINI2 
      113 = LUNPREM .         Z= AUXINI3 
       94 = A4      .         Z= AUXINIDA
       94 = A4      .         Z= AUXINIDA
      105 = HOLLAPO .         Z= AUXINIDA
      127 = PCDE    .DEFAULTS Z= AUXINIDA
      122 = PCDE    .         Z= CCHCH   
      122 = PCDE    .         Z= CCPARA  
      122 = PCDE    .         Z= CCPARU  
      122 = PCDE    .         Z= CCTEXT  
       44 = MALT*   .         Z= CCTOUP11
       48 = MAPO*   .         Z= CCTOUP11
       50 = MCRAY*  .         Z= CCTOUP11
       53 = MCRU*   .         Z= CCTOUP11
       55 = MCSE*   .         Z= CCTOUP11
       58 = MCVX*   .         Z= CCTOUP11
       60 = MCVY*   .         Z= CCTOUP11
       62 = MDGE*   .         Z= CCTOUP11
       65 = MHPX*   .         Z= CCTOUP11
       70 = MIBX*   .         Z= CCTOUP11
       72 = MIRT*   .         Z= CCTOUP11
       74 = MLNX*   .         Z= CCTOUP11
       76 = MND3*   .         Z= CCTOUP11
       80 = MPDP*   .         Z= CCTOUP11
       83 = MSGI*   .         Z= CCTOUP11
       85 = MSUN*   .         Z= CCTOUP11
       87 = MUNO*   .         Z= CCTOUP11
       90 = MVAX*   .         Z= CCTOUP11
       92 = MVMI*   .         Z= CCTOUP11
      228 = SERVICE .         Z= CCTOUP11
      228 = SERVICE .         Z= CCTOUP11
      107 = ASCILOW .         Z= CCTOUP12
      109 = ASCIINT .         Z= CCTOUP12
      111 = EBCDINT .         Z= CCTOUP12
       48 = MAPO*   .         Z= CCTOUP24
       50 = MCRAY*  .         Z= CCTOUP24
       53 = MCRU*   .         Z= CCTOUP24
       55 = MCSE*   .         Z= CCTOUP24
       58 = MCVX*   .         Z= CCTOUP24
       60 = MCVY*   .         Z= CCTOUP24
       70 = MIBX*   .         Z= CCTOUP24
       72 = MIRT*   .         Z= CCTOUP24
       74 = MLNX*   .         Z= CCTOUP24
       80 = MPDP*   .         Z= CCTOUP24
       83 = MSGI*   .         Z= CCTOUP24
       85 = MSUN*   .         Z= CCTOUP24
       87 = MUNO*   .         Z= CCTOUP24
       90 = MVAX*   .         Z= CCTOUP24
       92 = MVMI*   .         Z= CCTOUP24
      107 = ASCILOW .         Z= CCTOUP24
      109 = ASCIINT .         Z= CCTOUP24
      111 = EBCDINT .         Z= CCTOUP24
       58 = MCVX*   .         Z= CCTOUPDE
       60 = MCVY*   .         Z= CCTOUPDE
      107 = ASCILOW .         Z= CCTOUPDE
      109 = ASCIINT .         Z= CCTOUPDE
      111 = EBCDINT .         Z= CCTOUPDE
      122 = PCDE    .         Z= CCTYPE  
      122 = PCDE    .         Z= CETAEQ2 
      122 = PCDE    .         Z= CETAEQU 
       67 = MIBM*   .         Z= CETARDX 
       76 = MND3*   .         Z= CETARDX 
       53 = MCRU*   .         Z= CETAREAD
       67 = MIBM*   .         Z= CETAREAD
       87 = MUNO*   .         Z= CETAREAD
      116 = IOXPACK .         Z= CETAREAD
       67 = MIBM*   .         Z= CETARSEL
       76 = MND3*   .         Z= CETARSEL
       67 = MIBM*   .         Z= CETAWRIT
       87 = MUNO*   .         Z= CETAWRIT
       67 = MIBM*   .         Z= CETAWRX 
       76 = MND3*   .         Z= CETAWRX 
       67 = MIBM*   .         Z= CETAWSEL
       76 = MND3*   .         Z= CETAWSEL
      109 = ASCIINT .         Z= CETUPCCO
      111 = EBCDINT .         Z= CETUPCCO
       40 = MCDCX   .         Z= CETUPINI
       44 = MALT*   .         Z= CETUPINI
       48 = MAPO*   .         Z= CETUPINI
       50 = MCRAY*  .         Z= CETUPINI
       53 = MCRU*   .         Z= CETUPINI
       55 = MCSE*   .         Z= CETUPINI
       58 = MCVX*   .         Z= CETUPINI
       60 = MCVY*   .         Z= CETUPINI
       62 = MDGE*   .         Z= CETUPINI
       65 = MHPX*   .         Z= CETUPINI
       67 = MIBM*   .         Z= CETUPINI
       70 = MIBX*   .         Z= CETUPINI
       72 = MIRT*   .         Z= CETUPINI
       74 = MLNX*   .         Z= CETUPINI
       76 = MND3*   .         Z= CETUPINI
       80 = MPDP*   .         Z= CETUPINI
       83 = MSGI*   .         Z= CETUPINI
       85 = MSUN*   .         Z= CETUPINI
       87 = MUNO*   .         Z= CETUPINI
       90 = MVAX*   .         Z= CETUPINI
       92 = MVMI*   .         Z= CETUPINI
       36 = MCDCV*  .         Z= CETUPK  
       62 = MDGE*   .         Z= CETUPK  
      220 = YFRCETA .         Z= CETUPK  
       40 = MCDCX   .         Z= CETUPKIM
       62 = MDGE*   .         Z= CETUPKIM
      109 = ASCIINT .         Z= CETUPMIS
      111 = EBCDINT .         Z= CETUPMIS
      111 = EBCDINT .         Z= CETUPMIS
      107 = ASCILOW .         Z= CETUPSMA
      109 = ASCIINT .         Z= CETUPSMA
      111 = EBCDINT .         Z= CETUPSMA
      122 = PCDE    .         Z= COMCET  
      122 = PCDE    .         Z= CONST   
      177 = QCDE    .QCDE     Z= CQC     
       34 = MCYBX   .         Z= DEFMODEL
       94 = A4      .         Z= DEPMSG1 
       96 = A5      .         Z= DEPMSG1 
       98 = A6      .         Z= DEPMSG1 
      100 = A8      .         Z= DEPMSG1 
      102 = A10     .         Z= DEPMSG1 
       94 = A4      .         Z= DEPMSG2 
       96 = A5      .         Z= DEPMSG2 
       98 = A6      .         Z= DEPMSG2 
      100 = A8      .         Z= DEPMSG2 
      102 = A10     .         Z= DEPMSG2 
      105 = HOLLAPO .         Z= DEPMSG2 
      127 = PCDE    .DEFAULTS Z= DEPMSG2 
       40 = MCDCX   .         Z= DOASM1  
       67 = MIBM*   .         Z= DOASM4  
       67 = MIBM*   .         Z= DOASM5  
       40 = MCDCX   .         Z= DOASM7  
       40 = MCDCX   .         Z= DOSPEC67
      120 = IOVPACK .VARIAB   Z= DPEXE7  
      120 = IOVPACK .VARIAB   Z= DPEXEFM 
      120 = IOVPACK .VARIAB   Z= DPEXGO7 
      120 = IOVPACK .VARIAB   Z= DPEXGO7 
      120 = IOVPACK .VARIAB   Z= DPEXGOFM
       94 = A4      .         Z= DPLINE  
       96 = A5      .         Z= DPLINE  
       98 = A6      .         Z= DPLINE  
      100 = A8      .         Z= DPLINE  
      102 = A10     .         Z= DPLINE  
      121 = IOVPACK .FIXED    Z= DPLIST2 
      121 = IOVPACK .FIXED    Z= DPLIST6 
      118 = IOVPACK .         Z= DPLIST7 
      121 = IOVPACK .FIXED    Z= DPLISTFM
      121 = IOVPACK .FIXED    Z= DPMIX2  
      118 = IOVPACK .         Z= DPMIX6  
      121 = IOVPACK .FIXED    Z= DPMIX7  
      121 = IOVPACK .FIXED    Z= DPMIXFM 
      122 = PCDE    .         Z= DPWORK  
      122 = PCDE    .         Z= EDTEXT  
      126 = PCDE    .WSPEQ    Z= EEQACT  
      126 = PCDE    .WSPEQ    Z= EEQCRA  
      104 = NOTA8M  .         Z= EEQIDAR 
      126 = PCDE    .WSPEQ    Z= EEQIDAR 
      104 = NOTA8M  .         Z= EEQIDNEW
      126 = PCDE    .WSPEQ    Z= EEQIDNEW
      104 = NOTA8M  .         Z= EEQIDOLD
      126 = PCDE    .WSPEQ    Z= EEQIDOLD
      126 = PCDE    .WSPEQ    Z= EEQINC  
      126 = PCDE    .WSPEQ    Z= EEQLADR 
      126 = PCDE    .WSPEQ    Z= EEQLCR  
      126 = PCDE    .WSPEQ    Z= EQACT   
      126 = PCDE    .WSPEQ    Z= EQINC   
      126 = PCDE    .WSPEQ    Z= EQLADR  
      126 = PCDE    .WSPEQ    Z= EQLCR   
      205 = FLDIALG .         Z= FLKRAC  
      116 = IOXPACK .         Z= FORXEOF 
      116 = IOXPACK .         Z= FORXRDIN
       94 = A4      .         Z= FRCETA3 
       96 = A5      .         Z= FRCETA3 
       98 = A6      .         Z= FRCETA3 
      100 = A8      .         Z= FRCETA3 
      102 = A10     .         Z= FRCETA3 
       67 = MIBM*   .         Z= FRCETEND
       76 = MND3*   .         Z= FRCETEND
       87 = MUNO*   .         Z= FRCETEND
      220 = YFRCETA .         Z= FRCETEND
       67 = MIBM*   .         Z= FRCETGO 
       76 = MND3*   .         Z= FRCETGO 
       87 = MUNO*   .         Z= FRCETGO 
      220 = YFRCETA .         Z= FRCETGO 
      220 = YFRCETA .         Z= FRCETGO 
       50 = MCRAY*  .         Z= FRCETUPK
       53 = MCRU*   .         Z= FRCETUPK
       74 = MLNX*   .         Z= FRCETUPK
       90 = MVAX*   .         Z= FRCETUPK
       92 = MVMI*   .         Z= FRCETUPK
       94 = A4      .         Z= HEADFMT 
       96 = A5      .         Z= HEADFMT 
       98 = A6      .         Z= HEADFMT 
      100 = A8      .         Z= HEADFMT 
      102 = A10     .         Z= HEADFMT 
      188 = INSHELL .         Z= HERETERM
      226 = SERVAUX .         Z= INCHCHIN
      122 = PCDE    .         Z= IOFCOM  
      105 = HOLLAPO .         Z= IOFILE2 
      127 = PCDE    .DEFAULTS Z= IOFILE2 
       76 = MND3*   .         Z= IOFILX4 
       80 = MPDP*   .         Z= IOFILX4 
      228 = SERVICE .         Z= IOFILX62
       67 = MIBM*   .         Z= IOFILXAT
       87 = MUNO*   .         Z= IOFILXAT
       67 = MIBM*   .         Z= IOFILXCE
       74 = MLNX*   .         Z= IOFILXCE
       76 = MND3*   .         Z= IOFILXCE
       87 = MUNO*   .         Z= IOFILXCE
       90 = MVAX*   .         Z= IOFILXCE
       92 = MVMI*   .         Z= IOFILXCE
       40 = MCDCX   .         Z= IOFILXDT
       44 = MALT*   .         Z= IOFILXDT
       48 = MAPO*   .         Z= IOFILXDT
       50 = MCRAY*  .         Z= IOFILXDT
       53 = MCRU*   .         Z= IOFILXDT
       55 = MCSE*   .         Z= IOFILXDT
       58 = MCVX*   .         Z= IOFILXDT
       60 = MCVY*   .         Z= IOFILXDT
       62 = MDGE*   .         Z= IOFILXDT
       65 = MHPX*   .         Z= IOFILXDT
       70 = MIBX*   .         Z= IOFILXDT
       72 = MIRT*   .         Z= IOFILXDT
       74 = MLNX*   .         Z= IOFILXDT
       76 = MND3*   .         Z= IOFILXDT
       80 = MPDP*   .         Z= IOFILXDT
       83 = MSGI*   .         Z= IOFILXDT
       85 = MSUN*   .         Z= IOFILXDT
       87 = MUNO*   .         Z= IOFILXDT
       90 = MVAX*   .         Z= IOFILXDT
       92 = MVMI*   .         Z= IOFILXDT
       76 = MND3*   .         Z= IOFILXEE
       40 = MCDCX   .         Z= IOFILXEQ
       50 = MCRAY*  .         Z= IOFILXEQ
       87 = MUNO*   .         Z= IOFILXRV
      122 = PCDE    .         Z= IQCC    
       50 = MCRAY*  .         Z= IQCCEQU 
       53 = MCRU*   .         Z= IQCCEQU 
       58 = MCVX*   .         Z= IQCCEQU 
      100 = A8      .         Z= IQCCEQU 
      102 = A10     .         Z= IQCCEQU 
      104 = NOTA8M  .         Z= IQCCEQU 
       50 = MCRAY*  .         Z= JARTPX1 
       53 = MCRU*   .         Z= JARTPX1 
       58 = MCVX*   .         Z= JARTPX1 
       60 = MCVY*   .         Z= JARTPX1 
       74 = MLNX*   .         Z= JARTPX1 
       90 = MVAX*   .         Z= JARTPX1 
       92 = MVMI*   .         Z= JARTPX1 
       48 = MAPO*   .         Z= JARTPX4 
       50 = MCRAY*  .         Z= JARTPX4 
       53 = MCRU*   .         Z= JARTPX4 
       55 = MCSE*   .         Z= JARTPX4 
       58 = MCVX*   .         Z= JARTPX4 
       60 = MCVY*   .         Z= JARTPX4 
       74 = MLNX*   .         Z= JARTPX4 
       80 = MPDP*   .         Z= JARTPX4 
       90 = MVAX*   .         Z= JARTPX4 
       92 = MVMI*   .         Z= JARTPX4 
       48 = MAPO*   .         Z= JARTPX7 
       50 = MCRAY*  .         Z= JARTPX7 
       53 = MCRU*   .         Z= JARTPX7 
       55 = MCSE*   .         Z= JARTPX7 
       58 = MCVX*   .         Z= JARTPX7 
       60 = MCVY*   .         Z= JARTPX7 
       70 = MIBX*   .         Z= JARTPX7 
       72 = MIRT*   .         Z= JARTPX7 
       74 = MLNX*   .         Z= JARTPX7 
       80 = MPDP*   .         Z= JARTPX7 
       83 = MSGI*   .         Z= JARTPX7 
       85 = MSUN*   .         Z= JARTPX7 
       90 = MVAX*   .         Z= JARTPX7 
       92 = MVMI*   .         Z= JARTPX7 
       48 = MAPO*   .         Z= JARTYP4 
       50 = MCRAY*  .         Z= JARTYP4 
       53 = MCRU*   .         Z= JARTYP4 
       55 = MCSE*   .         Z= JARTYP4 
       58 = MCVX*   .         Z= JARTYP4 
       60 = MCVY*   .         Z= JARTYP4 
       74 = MLNX*   .         Z= JARTYP4 
       80 = MPDP*   .         Z= JARTYP4 
       90 = MVAX*   .         Z= JARTYP4 
       92 = MVMI*   .         Z= JARTYP4 
      177 = QCDE    .QCDE     Z= JQC     
      177 = QCDE    .QCDE     Z= JQFLAG  
       50 = MCRAY*  .         Z= KDNEXTER
      228 = SERVICE .         Z= KDNEXTFM
       44 = MALT*   .         Z= KDNEXTFP
       48 = MAPO*   .         Z= KDNEXTFP
       53 = MCRU*   .         Z= KDNEXTFP
       55 = MCSE*   .         Z= KDNEXTFP
       58 = MCVX*   .         Z= KDNEXTFP
       60 = MCVY*   .         Z= KDNEXTFP
       62 = MDGE*   .         Z= KDNEXTFP
       65 = MHPX*   .         Z= KDNEXTFP
       70 = MIBX*   .         Z= KDNEXTFP
       72 = MIRT*   .         Z= KDNEXTFP
       74 = MLNX*   .         Z= KDNEXTFP
       76 = MND3*   .         Z= KDNEXTFP
       83 = MSGI*   .         Z= KDNEXTFP
       85 = MSUN*   .         Z= KDNEXTFP
       90 = MVAX*   .         Z= KDNEXTFP
       92 = MVMI*   .         Z= KDNEXTFP
      228 = SERVICE .         Z= KDNEXTFP
       44 = MALT*   .         Z= KDNEXTR 
       48 = MAPO*   .         Z= KDNEXTR 
       50 = MCRAY*  .         Z= KDNEXTR 
       53 = MCRU*   .         Z= KDNEXTR 
       55 = MCSE*   .         Z= KDNEXTR 
       58 = MCVX*   .         Z= KDNEXTR 
       60 = MCVY*   .         Z= KDNEXTR 
       62 = MDGE*   .         Z= KDNEXTR 
       65 = MHPX*   .         Z= KDNEXTR 
       67 = MIBM*   .         Z= KDNEXTR 
       70 = MIBX*   .         Z= KDNEXTR 
       72 = MIRT*   .         Z= KDNEXTR 
       74 = MLNX*   .         Z= KDNEXTR 
       76 = MND3*   .         Z= KDNEXTR 
       80 = MPDP*   .         Z= KDNEXTR 
       83 = MSGI*   .         Z= KDNEXTR 
       85 = MSUN*   .         Z= KDNEXTR 
       90 = MVAX*   .         Z= KDNEXTR 
       92 = MVMI*   .         Z= KDNEXTR 
      116 = IOXPACK .         Z= KDNEXTR 
      117 = IOFORTR .         Z= KDNEXTR 
      118 = IOVPACK .         Z= KDNEXTR 
       40 = MCDCX   .         Z= KDNEXTRU
       80 = MPDP*   .         Z= KDNEXTRU
       48 = MAPO*   .         Z= KDNEXTSE
       70 = MIBX*   .         Z= KDNEXTSE
       72 = MIRT*   .         Z= KDNEXTSE
       74 = MLNX*   .         Z= KDNEXTSE
       83 = MSGI*   .         Z= KDNEXTSE
       85 = MSUN*   .         Z= KDNEXTSE
       90 = MVAX*   .         Z= KDNEXTSE
       92 = MVMI*   .         Z= KDNEXTSE
       74 = MLNX*   .         Z= KDNEXTTE
       90 = MVAX*   .         Z= KDNEXTTE
       92 = MVMI*   .         Z= KDNEXTTE
      111 = EBCDINT .         Z= KDNEXTTE
       70 = MIBX*   .         Z= KDNXCH3 
       34 = MCYBX   .         Z= KDNXT762
       34 = MCYBX   .         Z= KDNXT767
       34 = MCYBX   .         Z= KDNXT768
      122 = PCDE    .         Z= KDPKCM  
       40 = MCDCX   .         Z= KDPKCMP1
       80 = MPDP*   .         Z= KDPKCMP1
       87 = MUNO*   .         Z= KDPKCMP1
      122 = PCDE    .         Z= KDPKCMP1
       40 = MCDCX   .         Z= KDPKCMP2
       74 = MLNX*   .         Z= KDPKCMP2
       80 = MPDP*   .         Z= KDPKCMP2
       87 = MUNO*   .         Z= KDPKCMP2
       90 = MVAX*   .         Z= KDPKCMP2
       92 = MVMI*   .         Z= KDPKCMP2
      122 = PCDE    .         Z= KDPKCMP2
      122 = PCDE    .         Z= LUNSLN  
       69 = MIBM*   .USEMAINS Z= MAINALL 
       89 = MUNO*   .USEMAINS Z= MAINALL 
      122 = PCDE    .         Z= MODTT   
       34 = MCYBX   .         Z= MPFILESP
       34 = MCYBX   .         Z= MPYTOCE4
      177 = QCDE    .QCDE     Z= MQCALL  
      177 = QCDE    .QCDE     Z= MQCF    
      177 = QCDE    .QCDE     Z= MQCM    
      179 = QCDE    .QIBMMLAN Z= MQCMIBM 
      178 = QCDE    .QCDCMLAN Z= MQCMMLAN
      181 = QCDE    .QPDPMLAN Z= MQCMPDP 
      182 = QCDE    .QUNIMLAN Z= MQCMUNI 
      177 = QCDE    .QCDE     Z= MQCT    
      178 = QCDE    .QCDCMLAN Z= MQCTMLAN
      127 = PCDE    .DEFAULTS Z= MQINITFA
      127 = PCDE    .DEFAULTS Z= MQINITNA
      127 = PCDE    .DEFAULTS Z= MQINITPR
      122 = PCDE    .         Z= NAMES   
      192 = MAINUIX .         Z= NCNAME  
      205 = FLDIALG .         Z= NCNAME  
      122 = PCDE    .         Z= NUMVAL  
       44 = MALT*   .         Z= PABENDX 
       48 = MAPO*   .         Z= PABENDX 
       55 = MCSE*   .         Z= PABENDX 
       58 = MCVX*   .         Z= PABENDX 
       60 = MCVY*   .         Z= PABENDX 
       62 = MDGE*   .         Z= PABENDX 
       65 = MHPX*   .         Z= PABENDX 
       70 = MIBX*   .         Z= PABENDX 
       72 = MIRT*   .         Z= PABENDX 
       74 = MLNX*   .         Z= PABENDX 
       76 = MND3*   .         Z= PABENDX 
       80 = MPDP*   .         Z= PABENDX 
       83 = MSGI*   .         Z= PABENDX 
       85 = MSUN*   .         Z= PABENDX 
       90 = MVAX*   .         Z= PABENDX 
       92 = MVMI*   .         Z= PABENDX 
      127 = PCDE    .DEFAULTS Z= PABENDX 
      205 = FLDIALG .         Z= PAMPUBLI
       80 = MPDP*   .         Z= PDPUBLIC
       67 = MIBM*   .         Z= PEND34  
       76 = MND3*   .         Z= PEND34  
       90 = MVAX*   .         Z= PEND34  
      127 = PCDE    .DEFAULTS Z= PEND34  
      192 = MAINUIX .         Z= PGMSTOP 
       40 = MCDCX   .         Z= PILEUP61
       50 = MCRAY*  .         Z= PILEUP61
       36 = MCDCV*  .         Z= PILEUPDA
       40 = MCDCX   .         Z= PILEUPDA
       50 = MCRAY*  .         Z= PILEUPDA
      113 = LUNPREM .         Z= PINIT1  
      113 = LUNPREM .         Z= PINIT2  
      113 = LUNPREM .         Z= PINIT3  
       34 = MCYBX   .         Z= PINITMQ 
       40 = MCDCX   .         Z= PLOAD3  
       50 = MCRAY*  .         Z= PLOAD3  
       53 = MCRU*   .         Z= PLOAD3  
       58 = MCVX*   .         Z= PLOAD3  
       60 = MCVY*   .         Z= PLOAD3  
       74 = MLNX*   .         Z= PLOAD3  
       80 = MPDP*   .         Z= PLOAD3  
       87 = MUNO*   .         Z= PLOAD3  
       90 = MVAX*   .         Z= PLOAD3  
       92 = MVMI*   .         Z= PLOAD3  
      115 = FORCELOA.         Z= PLOAD9  
      115 = FORCELOA.         Z= PLOADEC 
       28 = CERNFE* .         Z= POPOFF2 
      118 = IOVPACK .         Z= POPOFF2 
      118 = IOVPACK .         Z= POPOFF2 
       28 = CERNFE* .         Z= POPOFF9 
      118 = IOVPACK .         Z= POPOFF9 
      118 = IOVPACK .         Z= POPOFF9 
       36 = MCDCV*  .         Z= PREADY2 
       38 = MCDC76* .         Z= PREADY2 
       44 = MALT*   .         Z= PREADY6 
       48 = MAPO*   .         Z= PREADY6 
       58 = MCVX*   .         Z= PREADY6 
       60 = MCVY*   .         Z= PREADY6 
       65 = MHPX*   .         Z= PREADY6 
       70 = MIBX*   .         Z= PREADY6 
       72 = MIRT*   .         Z= PREADY6 
       74 = MLNX*   .         Z= PREADY6 
       83 = MSGI*   .         Z= PREADY6 
       85 = MSUN*   .         Z= PREADY6 
       87 = MUNO*   .         Z= PREADY6 
       92 = MVMI*   .         Z= PREADY6 
       87 = MUNO*   .         Z= PREADY7 
       50 = MCRAY*  .         Z= PREADYDC
       50 = MCRAY*  .         Z= PREADYOP
      125 = PCDE    .WSPX     Z= PX      
      123 = PCDE    .WSPEL    Z= PX1     
      123 = PCDE    .WSPEL    Z= PX2     
      123 = PCDE    .WSPEL    Z= PX3     
      123 = PCDE    .WSPEL    Z= PX4     
      123 = PCDE    .WSPEL    Z= PX4A1   
      123 = PCDE    .WSPEL    Z= PX4A2   
      123 = PCDE    .WSPEL    Z= PX5     
      123 = PCDE    .WSPEL    Z= PX5D1   
      123 = PCDE    .WSPEL    Z= PX5D2   
      125 = PCDE    .WSPX     Z= PXA     
      125 = PCDE    .WSPX     Z= PXAD    
      125 = PCDE    .WSPX     Z= PXD     
      124 = PCDE    .WSP      Z= PY      
      123 = PCDE    .WSPEL    Z= PY1     
      123 = PCDE    .WSPEL    Z= PY2     
      123 = PCDE    .WSPEL    Z= PY3     
      123 = PCDE    .WSPEL    Z= PY4     
      123 = PCDE    .WSPEL    Z= PY4A1   
      123 = PCDE    .WSPEL    Z= PY4A2   
      123 = PCDE    .WSPEL    Z= PY4A2I1 
      123 = PCDE    .WSPEL    Z= PY4A2I2 
      123 = PCDE    .WSPEL    Z= PY5     
      123 = PCDE    .WSPEL    Z= PY5D    
      123 = PCDE    .WSPEL    Z= PY5W    
      124 = PCDE    .WSP      Z= PYA     
      124 = PCDE    .WSP      Z= PYAD    
      124 = PCDE    .WSP      Z= PYAI    
      124 = PCDE    .WSP      Z= PYAID   
      124 = PCDE    .WSP      Z= PYD     
      152 = *IBM    .         Z= Q       
      177 = QCDE    .QCDE     Z= Q       
      130 = *APO    .         Z= Q$ANDOR 
      132 = *CDCV   .         Z= Q$ANDOR 
      134 = *FTN    .         Z= Q$ANDOR 
      138 = *CRAY   .         Z= Q$ANDOR 
      148 = *IBMSI  .         Z= Q$ANDOR 
      150 = *IBM4   .         Z= Q$ANDOR 
      166 = *SUN    .         Z= Q$ANDOR 
      177 = QCDE    .QCDE     Z= Q$ANDOR 
      128 = *ALT    .         Z= Q$CBYT  
      130 = *APO    .         Z= Q$CBYT  
      132 = *CDCV   .         Z= Q$CBYT  
      134 = *FTN    .         Z= Q$CBYT  
      138 = *CRAY   .         Z= Q$CBYT  
      142 = *DGE    .         Z= Q$CBYT  
      144 = *HPX    .         Z= Q$CBYT  
      148 = *IBMSI  .         Z= Q$CBYT  
      150 = *IBM4   .         Z= Q$CBYT  
      160 = *NORD3  .         Z= Q$CBYT  
      162 = *PDP10  .         Z= Q$CBYT  
      166 = *SUN    .         Z= Q$CBYT  
      177 = QCDE    .QCDE     Z= Q$CBYT  
      128 = *ALT    .         Z= Q$JBIT  
      130 = *APO    .         Z= Q$JBIT  
      132 = *CDCV   .         Z= Q$JBIT  
      134 = *FTN    .         Z= Q$JBIT  
      138 = *CRAY   .         Z= Q$JBIT  
      140 = *CVX    .         Z= Q$JBIT  
      142 = *DGE    .         Z= Q$JBIT  
      144 = *HPX    .         Z= Q$JBIT  
      148 = *IBMSI  .         Z= Q$JBIT  
      150 = *IBM4   .         Z= Q$JBIT  
      160 = *NORD3  .         Z= Q$JBIT  
      162 = *PDP10  .         Z= Q$JBIT  
      166 = *SUN    .         Z= Q$JBIT  
      170 = *UNO    .         Z= Q$JBIT  
      177 = QCDE    .QCDE     Z= Q$JBIT  
      128 = *ALT    .         Z= Q$JBYTET
      130 = *APO    .         Z= Q$JBYTET
      132 = *CDCV   .         Z= Q$JBYTET
      134 = *FTN    .         Z= Q$JBYTET
      138 = *CRAY   .         Z= Q$JBYTET
      140 = *CVX    .         Z= Q$JBYTET
      142 = *DGE    .         Z= Q$JBYTET
      144 = *HPX    .         Z= Q$JBYTET
      148 = *IBMSI  .         Z= Q$JBYTET
      150 = *IBM4   .         Z= Q$JBYTET
      160 = *NORD3  .         Z= Q$JBYTET
      162 = *PDP10  .         Z= Q$JBYTET
      166 = *SUN    .         Z= Q$JBYTET
      177 = QCDE    .QCDE     Z= Q$JBYTET
      128 = *ALT    .         Z= Q$SBIT  
      130 = *APO    .         Z= Q$SBIT  
      132 = *CDCV   .         Z= Q$SBIT  
      134 = *FTN    .         Z= Q$SBIT  
      138 = *CRAY   .         Z= Q$SBIT  
      140 = *CVX    .         Z= Q$SBIT  
      142 = *DGE    .         Z= Q$SBIT  
      144 = *HPX    .         Z= Q$SBIT  
      148 = *IBMSI  .         Z= Q$SBIT  
      150 = *IBM4   .         Z= Q$SBIT  
      160 = *NORD3  .         Z= Q$SBIT  
      162 = *PDP10  .         Z= Q$SBIT  
      166 = *SUN    .         Z= Q$SBIT  
      177 = QCDE    .QCDE     Z= Q$SBIT  
      130 = *APO    .         Z= Q$SHIFT 
      132 = *CDCV   .         Z= Q$SHIFT 
      134 = *FTN    .         Z= Q$SHIFT 
      138 = *CRAY   .         Z= Q$SHIFT 
      148 = *IBMSI  .         Z= Q$SHIFT 
      150 = *IBM4   .         Z= Q$SHIFT 
      166 = *SUN    .         Z= Q$SHIFT 
      177 = QCDE    .QCDE     Z= Q$SHIFT 
      178 = QCDE    .QCDCMLAN Z= QASSL   
      177 = QCDE    .QCDE     Z= QBCD    
      182 = QCDE    .QUNIMLAN Z= QBCDUNI 
       67 = MIBM*   .         Z= QCARDL  
       87 = MUNO*   .         Z= QCARDL  
      142 = *DGE    .         Z= QCARDL  
      177 = QCDE    .QCDE     Z= QCARDL  
      177 = QCDE    .QCDE     Z= QCN     
      179 = QCDE    .QIBMMLAN Z= QCNIBM  
      178 = QCDE    .QCDCMLAN Z= QCNMLAN 
      181 = QCDE    .QPDPMLAN Z= QCNPDP  
      182 = QCDE    .QUNIMLAN Z= QCNUNI  
      183 = QCDE    .QVAXMLAN Z= QCNVAX  
      152 = *IBM    .         Z= QDIM    
      177 = QCDE    .QCDE     Z= QDIM    
       87 = MUNO*   .         Z= QEND7   
      127 = PCDE    .DEFAULTS Z= QFATALRE
      177 = QCDE    .QCDE     Z= QHC     
      128 = *ALT    .         Z= QHEADP  
      130 = *APO    .         Z= QHEADP  
      138 = *CRAY   .         Z= QHEADP  
      140 = *CVX    .         Z= QHEADP  
      142 = *DGE    .         Z= QHEADP  
      144 = *HPX    .         Z= QHEADP  
      152 = *IBM    .         Z= QHEADP  
      154 = *IBX    .         Z= QHEADP  
      156 = *IRT    .         Z= QHEADP  
      158 = *LNX    .         Z= QHEADP  
      160 = *NORD3  .         Z= QHEADP  
      162 = *PDP10  .         Z= QHEADP  
      164 = *SGI    .         Z= QHEADP  
      166 = *SUN    .         Z= QHEADP  
      168 = *UNIVAC .         Z= QHEADP  
      170 = *UNO    .         Z= QHEADP  
      172 = *VAX    .         Z= QHEADP  
      174 = *VMI    .         Z= QHEADP  
      177 = QCDE    .QCDE     Z= QHEADP  
      181 = QCDE    .QPDPMLAN Z= QHELOPDP
      177 = QCDE    .QCDE     Z= QMACH   
      132 = *CDCV   .         Z= QMACHFIX
      134 = *FTN    .         Z= QMACHFIX
      138 = *CRAY   .         Z= QMACHFIX
      140 = *CVX    .         Z= QMACHFIX
      162 = *PDP10  .         Z= QMACHFIX
      170 = *UNO    .         Z= QMACHFIX
      177 = QCDE    .QCDE     Z= QMACHFIX
      179 = QCDE    .QIBMMLAN Z= QMLIBM  
      181 = QCDE    .QPDPMLAN Z= QMLPDP  
      182 = QCDE    .QUNIMLAN Z= QMLUNI  
      183 = QCDE    .QVAXMLAN Z= QMLVAX  
      127 = PCDE    .DEFAULTS Z= QNATUR  
      177 = QCDE    .QCDE     Z= QNATUR  
      180 = QCDE    .QND3MLAN Z= QND3FORT
      180 = QCDE    .QND3MLAN Z= QND3REGS
      177 = QCDE    .QCDE     Z= QNOLIST 
      150 = *IBM4   .         Z= QNORETN 
      177 = QCDE    .QCDE     Z= QNORETN 
      177 = QCDE    .QCDE     Z= QOVLAY  
      177 = QCDE    .QCDE     Z= QSTATE  
      127 = PCDE    .DEFAULTS Z= QTOFATAL
      182 = QCDE    .QUNIMLAN Z= QUNIRETM
      182 = QCDE    .QUNIMLAN Z= QUNIRETM
      182 = QCDE    .QUNIMLAN Z= QUNIRETM
      177 = QCDE    .QCDE     Z= QUNIT   
      183 = QCDE    .QVAXMLAN Z= QVAXLCML
       53 = MCRU*   .         Z= READFULL
      116 = IOXPACK .         Z= READFULL
      117 = IOFORTR .         Z= READFULL
      118 = IOVPACK .         Z= READFULL
      118 = IOVPACK .         Z= READFULL
       53 = MCRU*   .         Z= READSHRT
      116 = IOXPACK .         Z= READSHRT
      117 = IOFORTR .         Z= READSHRT
      118 = IOVPACK .         Z= READSHRT
      118 = IOVPACK .         Z= READSHRT
       34 = MCYBX   .         Z= ROLLEX  
      106 = DOMQAUGM.         Z= ROLLEX  
       40 = MCDCX   .         Z= ROLLIN  
      130 = *APO    .         Z= RQTRAPCA
      130 = *APO    .         Z= RQTRAPDC
       44 = MALT*   .         Z= SPACEAUX
       48 = MAPO*   .         Z= SPACEAUX
       55 = MCSE*   .         Z= SPACEAUX
       62 = MDGE*   .         Z= SPACEAUX
       65 = MHPX*   .         Z= SPACEAUX
       67 = MIBM*   .         Z= SPACEAUX
       70 = MIBX*   .         Z= SPACEAUX
       72 = MIRT*   .         Z= SPACEAUX
       74 = MLNX*   .         Z= SPACEAUX
       76 = MND3*   .         Z= SPACEAUX
       80 = MPDP*   .         Z= SPACEAUX
       83 = MSGI*   .         Z= SPACEAUX
       85 = MSUN*   .         Z= SPACEAUX
       90 = MVAX*   .         Z= SPACEAUX
       92 = MVMI*   .         Z= SPACEAUX
      127 = PCDE    .DEFAULTS Z= SPACEAUX
       28 = CERNFE* .         Z= SPACEPAT
       44 = MALT*   .         Z= SPACEPAT
       48 = MAPO*   .         Z= SPACEPAT
       55 = MCSE*   .         Z= SPACEPAT
       62 = MDGE*   .         Z= SPACEPAT
       65 = MHPX*   .         Z= SPACEPAT
       67 = MIBM*   .         Z= SPACEPAT
       70 = MIBX*   .         Z= SPACEPAT
       72 = MIRT*   .         Z= SPACEPAT
       74 = MLNX*   .         Z= SPACEPAT
       76 = MND3*   .         Z= SPACEPAT
       80 = MPDP*   .         Z= SPACEPAT
       83 = MSGI*   .         Z= SPACEPAT
       85 = MSUN*   .         Z= SPACEPAT
       90 = MVAX*   .         Z= SPACEPAT
       92 = MVMI*   .         Z= SPACEPAT
      127 = PCDE    .DEFAULTS Z= SPACEPAT
      152 = *IBM    .         Z= SQ      
      177 = QCDE    .QCDE     Z= SQ      
      178 = QCDE    .QCDCMLAN Z= SQASSL  
       62 = MDGE*   .         Z= TOCETAB 
      218 = YTOCETA .         Z= TOCETAB 
       67 = MIBM*   .         Z= TOCETEND
       76 = MND3*   .         Z= TOCETEND
       87 = MUNO*   .         Z= TOCETEND
      218 = YTOCETA .         Z= TOCETEND
       67 = MIBM*   .         Z= TOCETGO 
       76 = MND3*   .         Z= TOCETGO 
       87 = MUNO*   .         Z= TOCETGO 
      218 = YTOCETA .         Z= TOCETGO 
       50 = MCRAY*  .         Z= TOCETPK 
       53 = MCRU*   .         Z= TOCETPK 
       74 = MLNX*   .         Z= TOCETPK 
       90 = MVAX*   .         Z= TOCETPK 
       92 = MVMI*   .         Z= TOCETPK 
       74 = MLNX*   .         Z= TOCETUPK
       90 = MVAX*   .         Z= TOCETUPK
       92 = MVMI*   .         Z= TOCETUPK
       62 = MDGE*   .         Z= TOSETAB 
      218 = YTOCETA .         Z= TOSETAB 
      111 = EBCDINT .         Z= TOSETUMC
      111 = EBCDINT .         Z= TOSETUMC
       94 = A4      .         Z= YLISEX2 
      105 = HOLLAPO .         Z= YLISEX2 
       34 = MCYBX   .         Z= YLIST4  
       69 = MIBM*   .USEMAINS Z= YPATCHY2
       89 = MUNO*   .USEMAINS Z= YPATCHY2
       69 = MIBM*   .USEMAINS Z= YPATCHY3
       69 = MIBM*   .USEMAINS Z= YPATCHY3
      118 = IOVPACK .         Z= YSFIND7 
       40 = MCDCX   .         Z= YTOBCD4 
       50 = MCRAY*  .         Z= YTOBCD4 
      118 = IOVPACK .         Z= YTOBCD6 
      118 = IOVPACK .         Z= YTOBCD7 
       40 = MCDCX   .         Z= YTOBCD9 
       50 = MCRAY*  .         Z= YTOBCD9 
       36 = MCDCV*  .         Z= YTOBCDDA
       40 = MCDCX   .         Z= YTOBCDDA
       50 = MCRAY*  .         Z= YTOBCDDA
       40 = MCDCX   .         Z= YTOBCDFM
       50 = MCRAY*  .         Z= YTOBCDFM
       50 = MCRAY*  .         Z= YTOBCDRP
       40 = MCDCX   .         Z= YTOCEX60
       50 = MCRAY*  .         Z= YTOCEX60
       53 = MCRU*   .         Z= YTOCEX60
1YLIST    executing with Files / Options

   1  PAM    11    P4TLIS.pam
      OPT         W3
   3  PRINT   3   +P4TLIS.lis

 VERSION  PATCHY  4.15 /1  911211 12.02           .RJP, TODAY:  201007  1549

                    OPTIONS .................R....W......3

 RESUME 'PAM '

    0 PATCHY    ================================================== P=*TITLE*  D=          1 ============================

         1.     1 - PATCHY  4.15 /1  911211 12.02           Composed for  LNX                       

    1 PATCHY    ================================================== P=ALLPX*   D=          1 ============================

         2.     0 + +PATCH, ALLPX*,    T=JOIN.  

    2 PATCHY    ================================================== P=ALLPX*   D=BLANKDEK  1 ============================

         3.     0 + +DECK,BLANKDEK. 
         4.     1 + +USE, PATCHY*.  
         5.     2 + +USE, ALLX*.    
         6.     3 + +USE, CORRECT.  

    3 PATCHY    ================================================== P=CORRECT  D=          1 ============================

         7.     0 + +PATCH, CORRECT, T=JOIN, REPEAT.    

    4 PATCHY    ================================================== P=ALLX*    D=          1 ============================

         8.     0 + +PATCH, ALLX*.  

    5 PATCHY    ================================================== P=ALLX*    D=BLANKDEK  1 ============================

         9.     0 + +DECK,BLANKDEK. 
        10.     1 + +USE, YTOBCD*.  
        11.     2 + +USE, YTOBIN*.  
        12.     3 + +USE, YTOCETA*. 
        13.     4 + +USE, YFRCETA*. 
        14.     5 + +USE, YCOMPAR*. 
        15.     6 + +USE, YEDIT*.   
        16.     7 + +USE, YINDEX*.  
        17.     8 + +USE, YLIST*.   
        18.     9 + +USE, YSEARCH*. 
        19.    10 + +USE, YSHIFT*.  

    6 PATCHY    ================================================== P=PATCHY*  D=          1 ============================

        20.     0 + +PATCH, PATCHY*,   T=JOIN.  

    7 PATCHY    ================================================== P=PATCHY*  D=BLANKDEK  1 ============================

        21.     0 + +DECK,BLANKDEK. 
        22.     1 + +USE, PCDE, PINIT, PEND, RUN, ACTION.   
        23.     2 + +USE, ARRIVE, DEPART, PUTIL.    
        24.     3 + +USE, PLOAD, CCKRAK.    
        25.     4 + +USE, SERVICE.  

    8 PATCHY    ================================================== P=YTOBCD*  D=          1 ============================

        26.     0 + +PATCH, YTOBCD*,   T=JOIN.  

    9 PATCHY    ================================================== P=YTOBCD*  D=BLANKDEK  1 ============================

        27.     0 + +DECK,BLANKDEK. 
        28.     1 + +USE, PCDE, YTOBCD. 
        29.     2 + +USE, AUXINI, PLOAD, POPIN. 
        30.     3 + +USE, SERVICE, SERVAUX. 

   10 PATCHY    ================================================== P=YTOBIN*  D=          1 ============================

        31.     0 + +PATCH, YTOBIN*,   T=JOIN.  

   11 PATCHY    ================================================== P=YTOBIN*  D=BLANKDEK  1 ============================

        32.     0 + +DECK,BLANKDEK. 
        33.     1 + +USE, PCDE, YTOBIN. 
        34.     2 + +USE, AUXINI, PLOAD, CCKRAK, PILEUP, POPOFF.    
        35.     3 + +USE, SERVICE, SERVAUX. 

   12 PATCHY    ================================================== P=YTOCETA* D=          1 ============================

        36.     0 + +PATCH, YTOCETA*,  T=JOIN.  

   13 PATCHY    ================================================== P=YTOCETA* D=BLANKDEK  1 ============================

        37.     0 + +DECK,BLANKDEK. 
        38.     1 + +USE, PCDE, YTOCETA.    
        39.     2 + +USE, AUXINI, PLOAD, CCKRAK, POPIN. 
        40.     3 + +USE, SERVAUX, SERVICE. 

   14 PATCHY    ================================================== P=YFRCETA* D=          1 ============================

        41.     0 + +PATCH, YFRCETA*,  T=JOIN.  

   15 PATCHY    ================================================== P=YFRCETA* D=BLANKDEK  1 ============================

        42.     0 + +DECK,BLANKDEK. 
        43.     1 + +USE, PCDE, YFRCETA.    
        44.     2 + +USE, AUXINI, PLOAD, CCKRAK, PILECT, POPOFF.    
        45.     3 + +USE, SERVAUX, SERVICE. 
1  16 PATCHY    ================================================== P=YCOMPAR* D=          1 =================== PAGE   1

        46.     0 + +PATCH, YCOMPAR*,  T=JOIN.  

   17 PATCHY    ================================================== P=YCOMPAR* D=BLANKDEK  1 ============================

        47.     0 + +DECK,BLANKDEK. 
        48.     1 + +USE, PCDE, YCOMPAR.    
        49.     2 + +USE, AUXINI, PLOAD, POPIN. 
        50.     3 + +USE, SERVICE, SERVAUX. 

   18 PATCHY    ================================================== P=YEDIT*   D=          1 ============================

        51.     0 + +PATCH, YEDIT*,    T=JOIN.  

   19 PATCHY    ================================================== P=YEDIT*   D=BLANKDEK  1 ============================

        52.     0 + +DECK,BLANKDEK. 
        53.     1 + +USE, PCDE, YEDIT.  
        54.     2 + +USE, AUXINI, PLOAD, CCKRAK, PILEUP, POPIN, POPOFF. 
        55.     3 + +USE, SERVICE, SERVAUX. 

   20 PATCHY    ================================================== P=YINDEX*  D=          1 ============================

        56.     0 + +PATCH, YINDEX*,   T=JOIN.  

   21 PATCHY    ================================================== P=YINDEX*  D=BLANKDEK  1 ============================

        57.     0 + +DECK,BLANKDEK. 
        58.     1 + +USE, PCDE, YINDEX. 
        59.     2 + +USE, AUXINI, PLOAD, CCKRAK, POPIN. 
        60.     3 + +USE, SERVICE, SERVAUX. 

   22 PATCHY    ================================================== P=YLIST*   D=          1 ============================

        61.     0 + +PATCH, YLIST*,    T=JOIN.  

   23 PATCHY    ================================================== P=YLIST*   D=BLANKDEK  1 ============================

        62.     0 + +DECK,BLANKDEK. 
        63.     1 + +USE, PCDE, YLIST.  
        64.     2 + +USE, AUXINI, PLOAD, CCKRAK, POPIN. 
        65.     3 + +USE, SERVICE, SERVAUX. 

   24 PATCHY    ================================================== P=YSEARCH* D=          1 ============================

        66.     0 + +PATCH, YSEARCH*,  T=JOIN.  

   25 PATCHY    ================================================== P=YSEARCH* D=BLANKDEK  1 ============================

        67.     0 + +DECK,BLANKDEK. 
        68.     1 + +USE, PCDE, YSEARCH.    
        69.     2 + +USE, AUXINI, PLOAD, CCKRAK, POPIN. 
        70.     3 + +USE, SERVICE, SERVAUX. 

   26 PATCHY    ================================================== P=YSHIFT*  D=          1 ============================

        71.     0 + +PATCH, YSHIFT*,   T=JOIN.  

   27 PATCHY    ================================================== P=YSHIFT*  D=BLANKDEK  1 ============================

        72.     0 + +DECK,BLANKDEK. 
        73.     1 + +USE, PCDE, YSHIFT. 
        74.     2 + +USE, AUXINI, PLOAD, CCKRAK, POPIN, POPOFF. 
        75.     3 + +USE, SERVICE, SERVAUX. 

   28 PATCHY    ================================================== P=CERNFE*  D=          1 ============================

        76.     0 + +PATCH, CERNFE*.    
0       77.     1 + +KEEP, COMMENT,    T=DUMMY. 
        78.     2 . THIS PATCH IS SPECIAL FOR THE CERN FRONT-END MACHINE:   
        79.     3 . WE HAVE A CDC 6500 FRONT END DRIVING A CDC 7600.    
        80.     4 . THE DEFAULT FORMATS FOR BINARY FILES ARE DIFFERENT ON THE 2 MACHINES.   
        81.     5 .     
        82.     6 . BUT WE WANT TO HAVE PAM-FILES  OF   O N E  S I N G L E   FORMAT ONLY,   
        83.     7 . THIS FORMAT IS TO BE THE 7600 STANDARD, I.E.   RT=W, UNBLOCKED  
        84.     8 .     
        85.     9 . THIS WE ENFORCE BY RECORD-MANAGER OPEN-TIME MACROS AND SPECIAL WRITING  
        86.    10 .       WRITE:   RT=U, BT=C WITH SELF-MADE W CONTROL-WORD AS 1ST DATA 
        87.    11 .       READ:    RT=W, BT=C   
        88.    12 .     
        89.    13 . ON A STAND-ALONE CDC 6500 ONE WOULD NOT DO THIS AND SIMPLY ACCEPT   
        90.    14 . WHATEVER STANDARD FORMAT THERE IS, I.E. RT=W, BT=I WITH  SCOPE 3.4.3    
        91.    15 .     
0       92.    16 + +KEEP, SPACEPAT.    
        93.    17 .      +,            ISPACE(14000), LAST  
0       94.    18 + +KEEP, POPOFF2,    P=POPOFF, D=POPOFF.  
        95.    19 .       MWK(1) = IQ(LA)   
        96.    20 .       CALL X6SETW (IQ(LA))  
        97.    21 .       WRITE (LUNEW) (IQ(J),J=LA,LE) 
        98.    22 .       IQ(LA) = MWK(1)   
0       99.    23 + +KEEP, POPOFF9,    P=POPOFF, D=POPOFF.  
       100.    24 .       CALL X6SETW (MWK(11)) 
       101.    25 .       WRITE (LUNEW) (MWK(J+10),J=1,4)   

   29 PATCHY    ================================================== P=CERNFE*  D=BLANKDEK  1 ============================

       102.     0 + +DECK,BLANKDEK. 
       103.     1 + +USE, CERNFE.   
       104.     2 + +USE, MNOSBE*.  
       105.     3 + +USE, P=SERVICE, D=IOFILX, T=INH.   
1  30 PATCHY    ================================================== P=MNOSBE*  D=          1 =================== PAGE   2

       106.     0 + +PATCH, MNOSBE*.    

   31 PATCHY    ================================================== P=MNOSBE*  D=BLANKDEK  1 ============================

       107.     0 + +DECK,BLANKDEK. 
       108.     1 + +USE, MCYBX.    

   32 PATCHY    ================================================== P=MNOS*    D=          1 ============================

       109.     0 + +PATCH, MNOS*,     T=JOIN.  

   33 PATCHY    ================================================== P=MNOS*    D=BLANKDEK  1 ============================

       110.     0 + +DECK,BLANKDEK. 
       111.     1 + +USE, MCYBX.    

   34 PATCHY    ================================================== P=MCYBX    D=          1 ============================

       112.     0 + +PATCH, MCYBX,     T=JOIN.  
0      113.     1 + +KEEP, ROLLEX,     P=RUN, D=DOSPEC, IF=OVERLAY. 
       114.     2 . C NO MEMORY INCREASE WITH OVERLAYS  
0      115.     3 + +KEEP, MPYTOCE4,   P=MAIN7600, D=YTOCETA.   
       116.     4 .       NOPTVL(4) = 0 
0      117.     5 + +KEEP, YLIST4,     P=MAIN7600, D=YLIST. 
       118.     6 .       NOPTVL(4) = 0 
0      119.     7 + +KEEP, MPFILESP,   P=MAIN7600, D=MPFILE.    
       120.     8 .       NOPTVL(4) = 16    
0      121.     9 + +KEEP, PINITMQ,    P=PINIT, D=. 
       122.    10 .       N = IQ(1) + 1 
       123.    11 .       CALL MQINIT (IQ(N))   
0      124.    12 + +KEEP, KDNXT762,   P=MLCDC76, D=KDNEXT. 
       125.    13 .           GET   X1,X2   
       126.    14 .           SA1   STOFIT  
       127.    15 .           FETCH X1,RL,X3       X3= NCH  
0      128.    16 + +KEEP, KDNXT767,   P=MLCDC76, D=KDNEXT. 
       129.    17 .           STORE X1,RT=Z 
       130.    18 .           STORE X1,BT=C 
       131.    19 .           STORE X1,FL=120   
       132.    20 .           STORE X1,MRL=120  
0      133.    21 + +KEEP, KDNXT768,   P=MLCDC76, D=KDNEXT. 
       134.    22 .           REWINDM X1,SQ 
0      135.    23 + +KEEP, DEFMODEL.    
       136.    24 .  MODEL    MICRO 1,,*74* 

   35 PATCHY    ================================================== P=MCYBX    D=BLANKDEK  1 ============================

       137.     0 + +DECK,BLANKDEK. 
       138.     1 + +USE, MCDCV*,  IF= F77. 
       139.     2 + +USE, MCDC76*, IF=-F77. 
       140.     3 + +USE, MPCDC60.               PROGRAM STATEMENTS 
       141.     4 + +USE, DOMQAUGM, MQAUGM, T=INH.  

   36 PATCHY    ================================================== P=MCDCV*   D=          1 ============================

       142.     0 + +PATCH, MCDCV*. 
0      143.     1 + +KEEP, PREADY2,    P=PINIT, D=PREADY.   
       144.     2 .       DATA  LUNAV  /L"PAM",L"ASM",L"ASMA",L"ASMD",L"ASMX",L"ASMY",  
       145.     3 .      +              L"ASM2",L"ASMA2",L"ASMD2",L"ASMX2",L"ASMY2" /   
0      146.     4 + +KEEP, YTOBCDDA.    
       147.     5 .       DATA  MMEOR  /O"46464646 55051722 5555"/  
0      148.     6 + +KEEP, PILEUPDA.    
       149.     7 .       DATA  MMEOR  /O"46464646 55051722 5500"/  
0      150.     8 + +KEEP, CETUPK,     P=YFRCETA, D=CETUP.  
       151.     9 .       CALL UBLOW (  
       152.    10 .      + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-*/()$= ,.# !:"_]&@?[><\^;'    
       153.    11 .      +,                      IQ(LORGH+1),63)    
       154.    12 .     

   37 PATCHY    ================================================== P=MCDCV*   D=BLANKDEK  1 ============================

       155.     0 + +DECK,BLANKDEK. 
0      156.     1-+ +SELF.                       Machine patch for CDC 7600, FORTRAN V  
       157.     2 + +USE, F77.  
       158.     3 + +USE, B60, B60M, B48M, B36M.    
       159.     4 + +USE, A10, A8M, A6M, A5M.   
       160.     5 + +USE, CDCH,FILN,LG,MULTI,6BIT.  
       161.     6 + +USE, TSIXZ,     IF=-CDC64CH.   
       162.     7 + +USE, CHK,TNORM, IF=CDC64CH.    
       163.     8 + +USE, MLCDC76.  
       164.     9 + +USE, IOVPACK.  
       165.    10 + +USE, IOVPACK, D=FIXED, T=INH.  
       166.    11 + +USE, MCDCX.       COMMON CDC SUB-PILOT 
       167.    12 + +USE, *CDCV.                 Hydra Pilot    

   38 PATCHY    ================================================== P=MCDC76*  D=          1 ============================

       168.     0 + +PATCH, MCDC76*.    
0      169.     1 + +KEEP, PREADY2,    P=PINIT, D=PREADY.   
       170.     2 .       DATA  LUNAV  /3LPAM,3LASM,4LASMA,4LASMD,4LASMX,4LASMY,    
       171.     3 .      +              4LASM2,5LASMA2,5LASMD2,5LASMX2,5LASMY2 /    
1  39 PATCHY    ================================================== P=MCDC76*  D=BLANKDEK  1 =================== PAGE   3

       172.     0 + +DECK,BLANKDEK. 
0      173.     1-+ +SELF.                       Machine patch for CDC 7600, FORTRAN 4  
       174.     2 + +USE, B60, B60M, B48M, B36M.    
       175.     3 + +USE, A10, A8M, A6M, A5M.   
       176.     4 + +USE, CDCH,FILN,MULTI,6BIT. 
0      177.     5-+ +SELF.  
       178.     6 + +USE, TSIXZ,           IF=-CDC64CH. 
       179.     7 + +USE, IOXPACK,         IF=-CDC64CH. 
0      180.     8-+ +SELF.  
       181.     9 + +USE, CHK,TNORM,       IF=CDC64CH.  
       182.    10 + +USE, IOVPACK,LG,      IF=CDC64CH.  
       183.    11 + +USE, IOVPACK, D=FIXED, T=INH.  
0      184.    12-+ +SELF.  
       185.    13 + +USE, DOMQAUGM. 
       186.    14 + +USE, MLCDC76.  
       187.    15 + +USE, MCDCX.       COMMON CDC SUB-PILOT 
       188.    16 + +USE, *FTN.                  Hydra Pilot    

   40 PATCHY    ================================================== P=MCDCX    D=          1 ============================

       189.     0 + +PATCH, MCDCX.  
0      190.     1 + +KEEP, KDPKCMP1.    
       191.     2 .       PARAMETER      (KDNWT=8,  KDNWT1=7, KDNCHW=10,KDBITS=6)   
0      192.     3 + +KEEP, KDPKCMP2.    
       193.     4 .       PARAMETER      (KDPOST=1, KDBLIN=45,KDMARK=0, KDSUB=51 JPOSIG=55) 
0      194.     5 + +KEEP, PLOAD3,     P=PLOAD, D=. 
       195.     6 .       CALL SBYT  (0,KDEOD(1),1,6)   
0      196.     7 + +KEEP, ROLLIN,     P=RUN, D=DOSPEC. 
       197.     8 .       CALL QFATAL   
0      198.     9 + +KEEP, DOSPEC67,   P=RUN, D=DOSPEC. 
       199.    10 .       IOPARF(3) = KFILE(1)  
0      200.    11 + +KEEP, DOASM1,     P=RUN, D=DOASM.  
       201.    12 .       DOUBLE PRECISION  MFILEN, KFILE   
       202.    13 .       EQUIVALENCE (MFILEN,IQUEST(1))    
0      203.    14 + +KEEP, DOASM7,     P=RUN, D=DOASM.  
       204.    15 .       IF (IQ(LASM+7).EQ.0)   GO TO 44   
       205.    16 .       IQ(LASM+10) = IQ(LASM+7)  
       206.    17 .       CALL FNZERO (IQ(LASM+10)) 
       207.    18 .       GO TO 47  
       208.    19 .    44 J = 0 
       209.    20 .    45 J = J + 1 
       210.    21 .       MFILEN = KFILE (J)    
       211.    22 . C     IF (IQUEST(1).EQ.0)    CALL QFATAL                                 DEBUG  
       212.    23 .       IF (IQUEST(2).NE.IQ(LASM+5))  GO TO 45    
       213.    24 .       IQ(LASM+10) = IQUEST(1)   
       214.    25 .    47 CONTINUE  
0      215.    26 + +KEEP, YTOBCDDA,   P=YTOBCD, D=YBCDEX.  
       216.    27 .       DATA  MMEOR  /46464646 55051722 5555B/    
0      217.    28 + +KEEP, YTOBCD4,    P=YTOBCD, D=YBCDEX.  
       218.    29 .       IF (MOPTIO(6) .NE.0)   GO TO 61   
0      219.    30 + +KEEP, YTOBCD9,    P=YTOBCD, D=YBCDEX.  
       220.    31 . C----              UNPACK CARD BY CARD, WITH FLAGS-OPTION   
       221.    32 .     
       222.    33 .    61 DO 64  I=1,NCT    
       223.    34 .       IF (ICHCH.NE.0)  J=JARTPX(IQ(LTK))    
       224.    35 .       CALL KDCOPY (IQ(LTK)) 
       225.    36 .       IF (NWTK.NE.1)         GO TO 63   
       226.    37 .       IF (KIMA(1).NE.MMEOR)  GO TO 63   
       227.    38 .       CALL WEOR (LUNEW) 
       228.    39 .       GO TO 64  
       229.    40 .     
       230.    41 .    63 WRITE (LUNEW,1000) (KIMA(J),J=1,NWTK) 
       231.    42 .    64 CONTINUE  
       232.    43 .       GO TO 47  
       233.    44 .     
0      234.    45 + +KEEP, YTOBCDFM.    
       235.    46 .  1000 FORMAT (8A10) 
0      236.    47 + +KEEP, PILEUPDA,   P=PILEUP, D=.    
       237.    48 .       DATA  MMEOR  /46464646 55051722 5500B/    
0      238.    49 + +KEEP, PILEUP61,   P=PILEUP, D=.    
       239.    50 .       IF (NCHKD.LT.-1)       GO TO 72   
       240.    51 .       NCHKD = 0 
       241.    52 .       IF (MOPTIO(9).NE.0)    GO TO 42   
       242.    53 .       IF (MOPTIO(6).EQ.0)    GO TO 72   
       243.    54 .       IQ(L) = MMEOR 
       244.    55 .       NCARDP= NCARDP + 1    
       245.    56 .       LN    = L + 1 
       246.    57 .       IF (LN.LT.LEND)        GO TO 41   
       247.    58 .       NCHKD = 8 
       248.    59 .       NWKD  = 1 
       249.    60 .       GO TO 74  
0      250.    61 + +KEEP, IOFILXEQ,   P=SERVICE, D=IOFILX. 
       251.    62 .       CALL FNZERO (IOPARF(3))   
       252.    63 .       CALL EQUBUF (IOPARF(3),LUN,1HN)   
0      253.    64 + +KEEP, IOFILXDT,   P=SERVICE, D=IOFILX. 
       254.    65 .       CALL DETACH (LUN) 
1  40                                                              P=MCDCX    D=          2                     PAGE   4

       255.    66 + +KEEP, KDNEXTRU,   P=SERVICE, D=KDNEXT. 
       256.    67 .       CALL SBYT (KDBLAN,MV(8), 1,48)    
0      257.    68-+ +SELF.     ----    FOR CETA I/O    ---- 
0      258.    69 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       259.    70 .       DATA  INICET / 96,  8,0,28800,0,0,  6,10,0,0,0,  55,63 /  
0      260.    71 + +KEEP, CETUPKIM,   P=YFRCETA, D=CETUP.  
       261.    72 .       IQ(LORGI+49) =  56    
       262.    73 .       IQ(LORGI+51) =  51    
       263.    74 .       IQ(LORGI+52) =  52    
       264.    75 .     
0      265.    76 + +KEEP, YTOCEX60,   P=YTOCETA, D=YTOCEX. 
       266.    77 .       J = MOD (NSECTS,10)   
       267.    78 .       MWK(79) = IQNUM(J+1)  
       268.    79 .       MWK(80) = IQBLAN  
       269.    80 .       MWKX(37) = 0  
       270.    81 .       MWKX(38) = 0  
       271.    82 .       CALL UBUNCH (MWK(79),MWK(1),40)   
       272.    83 .       CALL REMARK (MWK) 

   41 PATCHY    ================================================== P=MCDCX    D=BLANKDEK  1 ============================

       273.     0 + +DECK,BLANKDEK. 
0      274.     1-+ +SELF.                       COMMON CDC SUB-PILOT   

   42 PATCHY    ================================================== P=MCDCX    D=DELETES   1 ============================

       275.     0 + +DECK, DELETES,    P=MCDCX. 
       276.     1 + +USE, SERVICE, D=KDNGO,KDNREW,KDNEXT, T=INH.    

   43 PATCHY    ================================================== P=MCDCX    D=USEMAINS  1 ============================

       277.     0 + +DECK, USEMAINS,   P=MCDCX, T=JOIN. 
       278.     1 + +USE, QABEND,              IF=PATCHY*, IF=QDEBUG.   
       279.     2 + +USE, MAIN7600, D=XPATCHY, IF=PATCHY*, IF=QDEBUG.   
       280.     3 + +USE, MAIN7600, D=YPATCHY, IF=PATCHY*, IF=-QDEBUG.  
       281.     4 + +USE, MAIN7600, D=YTOBCD,  IF=YTOBCD*.  
       282.     5 + +USE, MAIN7600, D=YTOBIN,  IF=YTOBIN*.  
       283.     6 + +USE, MAIN7600, D=YTOCETA, IF=YTOCETA*. 
       284.     7 + +USE, MAIN7600, D=YFRCETA, IF=YFRCETA*. 
       285.     8 + +USE, MAIN7600, D=YCOMPAR, IF=YCOMPAR*. 
       286.     9 + +USE, MAIN7600, D=YEDIT,   IF=YEDIT*.   
       287.    10 + +USE, MAIN7600, D=YINDEX,  IF=YINDEX*.  
       288.    11 + +USE, MAIN7600, D=YLIST,   IF=YLIST*.   
       289.    12 + +USE, MAIN7600, D=YSEARCH, IF=YSEARCH*. 
       290.    13 + +USE, MAIN7600, D=YSHIFT,  IF=YSHIFT*.  
       291.    14 + +USE, MAIN7600, D=MPFILE.   

   44 PATCHY    ================================================== P=MALT*    D=          1 ============================

       292.     0 + +PATCH, MALT*.     Patchy Machine patch for ALLIANT 
0      293.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
       294.     2 .       CALL UCTOH1 ( 
       295.     3 .      + '+-CDECK  ID>, +.-|DECK  ID>, +.--/*DECK ID>, +. */---'  
       296.     4 .      +, MWKX(1),60) 
0      297.     5 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       298.     6 .       JVAL = ishft (MV(JCH),-24)    
0      299.     7 + +KEEP, IOFILXDT.    
       300.     8 .       CLOSE (UNIT=LUN)  
0      301.     9 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       302.    10 .       READ (LUNPAM,8000,END=41) MV  
0      303.    11 + +KEEP, KDNEXTFP,   P=SERVICE.   
       304.    12 .  9001 FORMAT ($,' y> ') 
0      305.    13 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       306.    14 .       STOP  99  
0      307.    15 + +KEEP, SPACEPAT.    
       308.    16 .      +,            ISPACE(50000),LAST   
0      309.    17 + +KEEP, SPACEAUX.    
0      310.    18-+ +SELF.     ----    FOR CETA I/O    ---- 
       311.    19 + +USE, CETAFJCL. 
       312.    20 + +USE, CETA2TO, CETA2FR. 
0      313.    21 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       314.    22 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   45 PATCHY    ================================================== P=MALT*    D=BLANKDEK  1 ============================

       315.     0 + +DECK,BLANKDEK. 
       316.     1 + +USE, F77.  
       317.     2 + +USE, B32.  
       318.     3 + +USE, A4.   
       319.     4 + +USE, HEX.  
       320.     5 + +USE, LG,T8ZERO.    
       321.     6 + +USE, HOLLAPO.  
       322.     7 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       323.     8 + +USE, ASCIINT.               Internal character repres. in ASCII    
       324.     9 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       325.    10 + +USE, PROMPTIN.              Prompting for TTP  
       326.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
       327.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       328.    13 + +USE, IOVPACK.  
       329.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
       330.    15 + +USE, *ALT.                  Hydra Pilot    
       331.    16 + +USE, CHREAD.                Character READ  faster than Hollerith  
1  45                                                              P=MALT*    D=BLANKDEK  2                     PAGE   5

       332.    17 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
       333.    18 + +USE, SPECALT.  
       334.    19 + +USE, INITRH.                Initialize Routine Header cards    

   46 PATCHY    ================================================== P=MAPO10*  D=          1 ============================

       335.     0 + +PATCH, MAPO10*.   Patchy Machine patch for APOLLO 10000    

   47 PATCHY    ================================================== P=MAPO10*  D=BLANKDEK  1 ============================

       336.     0 + +DECK,BLANKDEK. 
       337.     1 + +USE, MAPO*.    

   48 PATCHY    ================================================== P=MAPO*    D=          1 ============================

       338.     0 + +PATCH, MAPO*,T=J. Patchy Machine patch for APOLLO  
0      339.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
       340.     2 .       CALL UCTOH1 ( 
       341.     3 .      + '+-CDECK  ID>, +.-|DECK  ID>, +.--/*DECK ID>, +. */---'  
       342.     4 .      +, MWKX(1),60) 
0      343.     5 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       344.     6 .       MM(2) = RSHFT (IT,24) 
       345.     7 .       IF (MM(2).EQ.43)       GO TO 21   
0      346.     8 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       347.     9 .       MM(1) =  OR (LSHFT(MM(2),24), NBLANK) 
0      348.    10 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
       349.    11 .       MM(2) = RSHFT (IT,24) 
       350.    12 .       IF (MM(2).EQ.43)       GO TO 21   
0      351.    13 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       352.    14 .       JVAL = RSHFT (MV(JCH),24) 
0      353.    15 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
       354.    16 .       MV(JCH) =  AND (MV(JCH), MASKU)   
0      355.    17 + +KEEP, IOFILXDT.    
       356.    18 .       CLOSE (UNIT=LUN)  
0      357.    19 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       358.    20 .       READ (LUNPAM,8000,END=41) MV  
0      359.    21 + +KEEP, KDNEXTFP,   P=SERVICE.   
       360.    22 .  9001 FORMAT (' y> ',$) 
0      361.    23 + +KEEP, KDNEXTSE, P=SERVICE. 
       362.    24 .       KKK(J) =  AND (KKK(J), MASK00)    
0      363.    25 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       364.    26 .       STOP 99   
0      365.    27 + +KEEP, SPACEPAT.    
       366.    28 .      +,            ISPACE(50000),LAST   
0      367.    29 + +KEEP, SPACEAUX.    
       368.    30 .      +,            LOCALS(40),ISPACE(20000),LAST    
0      369.    31-+ +SELF.     ----    FOR CETA I/O    ---- 
       370.    32 + +USE, CETAFJCL. 
       371.    33 + +USE, CETA2TO, CETA2FR. 
0      372.    34 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       373.    35 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   49 PATCHY    ================================================== P=MAPO*    D=BLANKDEK  1 ============================

       374.     0 + +DECK,BLANKDEK. 
       375.     1 + +USE, F77.  
       376.     2 + +USE, B32.  
       377.     3 + +USE, A4.   
       378.     4 + +USE, HEX.  
       379.     5 + +USE, LG,T8ZERO.    
       380.     6 + +USE, HOLLAPO.  
       381.     7 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       382.     8 + +USE, ASCIINT.               Internal character repres. in ASCII    
       383.     9 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       384.    10 + +USE, PROMPTIN.              Prompting for TTP  
       385.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
       386.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       387.    13 + +USE, IOVPACK.  
       388.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
       389.    15 + +USE, *APO.                  Hydra Pilot    
       390.    16 + +USE, CHREAD.                Character READ  faster than Hollerith  
       391.    17 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
       392.    18 + +USE, INITRH.                Initialize Routine Header cards    

   50 PATCHY    ================================================== P=MCRAY*   D=          1 ============================

       393.     0 + +PATCH, MCRAY*. 
0      394.     1 + +KEEP, IQCCEQU. 
       395.     2 .                                  EQUIVALENCE  (IQMSQ(1), IQCC(2), IQ(4))    
0      396.     3 + +KEEP, PLOAD3,     P=PLOAD, D=. 
       397.     4 .       CALL SBYT  (0,KDEOD(1),1,8)   
0      398.     5 + +KEEP, PREADYDC,   P=PINIT, D=PREADY.   
       399.     6 .       EQUIVALENCE (LUNAV(1),LUNVL(1))   
0      400.     7 + +KEEP, PREADYOP,   P=PINIT, D=PREADY.   
       401.     8 .       MOPTIO(4) = 1 
1  50                                                              P=MCRAY*   D=          2                     PAGE   6

       402.     9 + +KEEP, YTOBCDDA,   P=YTOBCD, D=YBCDEX.  
       403.    10 .       DATA  MMEOR  / 8H---- EOR /   
0      404.    11 + +KEEP, YTOBCDRP,   P=YTOBCD, D=YBCDEX.  
       405.    12 .       DATA  MMEREP / 8H/EOF     /   
0      406.    13 + +KEEP, YTOBCD4,    P=YTOBCD, D=YBCDEX.  
       407.    14 .       IF (MOPTIO(6) .NE.0)   GO TO 61   
0      408.    15 + +KEEP, YTOBCD9,    P=YTOBCD, D=YBCDEX.  
       409.    16 . C----              UNPACK CARD BY CARD, WITH FLAGS-OPTION   
       410.    17 .     
       411.    18 .    61 DO 64  I=1,NCT    
       412.    19 .       IF (ICHCH.NE.0)  J=JARTPX(IQ(LTK))    
       413.    20 .       CALL KDCOPY (IQ(LTK)) 
       414.    21 .       IF (NWTK.NE.2)         GO TO 63   
       415.    22 .       IF (KIMA(1).NE.MMEOR)  GO TO 63   
       416.    23 .       IF (KIMA(2).NE.IQBLAN) GO TO 63   
       417.    24 .       KIMA(1) = MMEREP  
       418.    25 .       NWTK = 1  
       419.    26 .     
       420.    27 .    63 WRITE (LUNEW,1000) (KIMA(J),J=1,NWTK) 
       421.    28 .    64 CONTINUE  
       422.    29 .       GO TO 47  
       423.    30 .     
0      424.    31 + +KEEP, YTOBCDFM.    
       425.    32 .  1000 FORMAT (10A8) 
0      426.    33 + +KEEP, PILEUPDA,   P=PILEUP, D=.    
       427.    34 .       DATA  MMEOR  / 8H---- EOR /   
0      428.    35 + +KEEP, PILEUP61,   P=PILEUP, D=.    
       429.    36 .       IF (NCHKD.LT.-2)       GO TO 72   
       430.    37 .       IF (MOPTIO(9).NE.0)    GO TO 42   
       431.    38 .       IF (MOPTIO(6).EQ.0)    GO TO 72   
       432.    39 .       NCHKD = 8 
       433.    40 .       NWKD  = 2 
       434.    41 .       IQ(L)  = MMEOR    
       435.    42 .       IQ(L+1)= '       'L   
       436.    43 .       NCARDP = NCARDP + 1   
       437.    44 .       LN     = L + 2    
       438.    45 .       IF (LN.LT.LEND)        GO TO 41   
       439.    46 .       GO TO 74  
0      440.    47 + +KEEP, JARTPX1,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       441.    48 . C-    PARAMETER    ( NBLANK = Z'0020202020202020' ) 
       442.    49 .       PARAMETER    ( NBLANK =   000040 10020040 10020040B ) 
0      443.    50 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       444.    51 .       MM(2) = SHIFTR (IT,56)    
       445.    52 .       IF (MM(2).EQ.43)       GO TO 21   
0      446.    53 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       447.    54 .       MM(1) = SHIFTL(MM(2),56) .OR. NBLANK  
0      448.    55 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
       449.    56 .       MM(2) = SHIFTR (IT,56)    
       450.    57 .       IF (MM(2).EQ.43)       GO TO 21   
0      451.    58 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       452.    59 .       JVAL = SHIFTR (MV(JCH),56)    
0      453.    60 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
       454.    61 .       MV(JCH) = MV(JCH) .AND. SHIFT (MASK(63),61)   
0      455.    62 + +KEEP, IOFILXEQ,   P=SERVICE, D=IOFILX. 
       456.    63 .       IOPARF(1) = IOPARF(3) 
       457.    64 .       CALL FNZERO (IOPARF(1))   
0      458.    65 + +KEEP, IOFILXDT,   P=SERVICE, D=IOFILX. 
       459.    66 .       CALL DETACH (LUN) 
0      460.    67 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       461.    68 .       READ (LUNPAM,8000,END=41) MV  
0      462.    69 + +KEEP, KDNEXTER,   P=SERVICE, D=KDNEXT. 
0      463.    70-+ +SELF.     ----    FOR CETA I/O    ---- 
0      464.    71 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       465.    72 .       DATA  INICET / 90,  8,0,28800,0,0,   8,8,0,0,0,  57,255/  
0      466.    73 + +KEEP, YTOCEX60,   P=YTOCETA, D=YTOCEX. 
       467.    74 .       J = MOD (NSECTS,10)   
       468.    75 .       MWK(79) = IQNUM(J+1)  
       469.    76 .       MWK(80) = IQBLAN  
       470.    77 .       MWKX(37) = 0  
       471.    78 .       MWKX(38) = 0  
       472.    79 .       CALL UBUNCH (MWK(79),MWK(1),40)   
       473.    80 .       CALL REMARK (MWK) 
0      474.    81 + +KEEP, TOCETPK,    P=YTOCETA, D=TOCETA. 
       475.    82 .       CALL PACK (IQ(LCETA),8,IQ(LSTART),NCHCEU) 
0      476.    83 + +KEEP, FRCETUPK,   P=YFRCETA, D=FRCETA. 
       477.    84 .       CALL UNPACK (IQ(LREAD),8,IQ(LTAKE),NCHCEU)    

   51 PATCHY    ================================================== P=MCRAY*   D=BLANKDEK  1 ============================

       478.     0 + +DECK,BLANKDEK. 
0      479.     1-+ +SELF.                       Machine patch for CRAY 1   
       480.     2 + +USE, F77.  
       481.     3 + +USE, B64, B60M, B48M, B36M.    
       482.     4 + +USE, A8, A8M, A6M, A5M.    
       483.     5 + +USE, FILN. 
1  51                                                              P=MCRAY*   D=BLANKDEK  2                     PAGE   7

       484.     6 + +USE, T8ZERO.   
       485.     7 + +USE, IOVPACK.  
       486.     8 + +USE, IOVPACK, D=FIXED, T=INH.  
       487.     9 + +USE, DOMQAUGM.              Automatic Memory increase  
       488.    10 + +USE, ASCIINT.               Internal character repres. in ASCII    
       489.    11 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       490.    12 + +USE, CVFORLOW.              Accept lower case on C/C   
       491.    13 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       492.    14 + +USE, *CRAY.                 Hydra Pilot    

   52 PATCHY    ================================================== P=MCRAY*   D=USEMAINS  1 ============================

       493.     0 + +DECK, USEMAINS,   P=MCRAY*, T=JOIN.    
       494.     1 + +USE, QABEND,              IF=PATCHY*, IF=QDEBUG.   
       495.     2 + +USE, MAINCRY, D=.  

   53 PATCHY    ================================================== P=MCRU*    D=          1 ============================

       496.     0 + +PATCH, MCRU*.  
0      497.     1 + +KEEP, IQCCEQU. 
       498.     2 .                                  EQUIVALENCE  (IQMSQ(1), IQCC(2), IQ(4))    
0      499.     3 + +KEEP, PLOAD3,     P=PLOAD, D=. 
       500.     4 .       CALL SBYT  (0,KDEOD(1),1,8)   
0      501.     5 + +KEEP, READFULL, IF=-LG.    
       502.     6 .       J = 511   
       503.     7 .       CALL READ (LUNUSE,IQ(LINBIN+1),J,ISTAT)   
       504.     8 .       IF   (ISTAT.GE.4)      GO TO 80   
       505.     9 .       IF   (ISTAT.GE.2)      GO TO 81   
       506.    10 .       IF   (ISTAT.EQ.1)      GO TO 21   
       507.    11 .       IQ(LINBIN) = J    
0      508.    12 + +KEEP, READSHRT, IF=-LG.    
       509.    13 .       J = 3 
       510.    14 .       CALL READ (LUNUSE,IQ(LINBIN+1),J,ISTAT)   
       511.    15 .       IF   (ISTAT.GE.4)      GO TO 80   
       512.    16 .       IF   (ISTAT.GE.2)      GO TO 81   
0      513.    17 + +KEEP, JARTPX1,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       514.    18 . C-    PARAMETER    ( NBLANK = Z'0020202020202020' ) 
       515.    19 .       PARAMETER    ( NBLANK =   000040 10020040 10020040B ) 
0      516.    20 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       517.    21 .       MM(2) = SHIFTR (IT,56)    
       518.    22 .       IF (MM(2).EQ.43)       GO TO 21   
0      519.    23 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       520.    24 .       MM(1) = SHIFTL(MM(2),56) .OR. NBLANK  
0      521.    25 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
       522.    26 .       MM(2) = SHIFTR (IT,56)    
       523.    27 .       IF (MM(2).EQ.43)       GO TO 21   
0      524.    28 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       525.    29 .       JVAL = SHIFTR (MV(JCH),56)    
0      526.    30 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
       527.    31 .       MV(JCH) = MV(JCH) .AND. SHIFT (MASK(63),61)   
0      528.    32 + +KEEP, IOFILXDT,   P=SERVICE, D=IOFILX. 
       529.    33 .       CLOSE (UNIT=LUN)  
0      530.    34 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       531.    35 .       READ (LUNPAM,8000,END=41) MV  
0      532.    36 + +KEEP, KDNEXTFP,   P=SERVICE.   
       533.    37 .  9001 FORMAT (' y> ',$) 
0      534.    38-+ +SELF.     ----    FOR CETA I/O    ---- 
0      535.    39 + +KEEP, CETAREAD,   P=YFRCETA, D=FRCETA. 
       536.    40 .       CALL READ (LUNOLD,IQ(LREAD),NWCEIN,ISTAT) 
       537.    41 .       IF   (ISTAT.GE.4)           GO TO 42  
       538.    42 .       IF   (ISTAT.GE.2)           GO TO 44  
       539.    43 .       IF   (ISTAT.GE.1)           GO TO 51  
0      540.    44 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       541.    45 .       DATA  INICET / 90,  8,0,28800,0,0,   8,8,0,0,0,  57,255/  
0      542.    46 + +KEEP, YTOCEX60,   P=YTOCETA, D=YTOCEX. 
       543.    47 .       J = MOD (NSECTS,10)   
       544.    48 .       MWK(79) = IQNUM(J+1)  
       545.    49 .       MWK(80) = IQBLAN  
       546.    50 .       MWKX(37) = 0  
       547.    51 .       MWKX(38) = 0  
       548.    52 .       CALL UBUNCH (MWK(79),MWK(1),40)   
       549.    53 .       CALL REMARK (MWK) 
0      550.    54 + +KEEP, TOCETPK,    P=YTOCETA, D=TOCETA. 
       551.    55 .       CALL PACK (IQ(LCETA),8,IQ(LSTART),NCHCEU) 
0      552.    56 + +KEEP, FRCETUPK,   P=YFRCETA, D=FRCETA. 
       553.    57 .       CALL UNPACK (IQ(LREAD),8,IQ(LTAKE),NCHCEU)    

   54 PATCHY    ================================================== P=MCRU*    D=BLANKDEK  1 ============================

       554.     0 + +DECK,BLANKDEK. 
0      555.     1-+ +SELF.                       Machine patch for CRAY system UNICOS   
       556.     2 + +USE, F77.  
       557.     3 + +USE, B64, B60M, B48M, B36M.    
       558.     4 + +USE, A8, A8M, A6M, A5M.    
       559.     5 + +USE, T8ZERO.   
       560.     6 + +USE, IOVPACK.  
       561.     7 + +USE, IOVPACK, D=FIXED, T=INH.  
1  54                                                              P=MCRU*    D=BLANKDEK  2                     PAGE   8

       562.     8 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       563.     9 + +USE, ASCIINT.               Internal character repres. in ASCII    
       564.    10 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       565.    11 + +USE, PROMPTIN.              Prompting for TTP  
       566.    12 + +USE, CVFORLOW.              Accept lower case on C/C   
       567.    13 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       568.    14 + +USE, *CRU.                  Hydra Pilot    

   55 PATCHY    ================================================== P=MCSE*    D=          1 ============================

       569.     0 + +PATCH, MCSE*.     Patchy Machine patch for CSEE SG 6180    
0      570.     1 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       571.     2 .       MM(2) = SHIFT (IT,-24)    
       572.     3 .       IF (MM(2).EQ.43)       GO TO 21   
0      573.     4 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       574.     5 .       MM(1) = SHIFT (MM(2),24) .OR. NBLANK  
0      575.     6 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
       576.     7 .       MM(2) = SHIFT (IT,-24)    
       577.     8 .       IF (MM(2).EQ.43)       GO TO 21   
0      578.     9 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       579.    10 .       JVAL = SHIFT (MV(JCH),-24)    
0      580.    11 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
       581.    12 .       MV(JCH) = MV(JCH) .OR. MASKU  
0      582.    13 + +KEEP, IOFILXDT.    
       583.    14 .       CLOSE (UNIT=LUN)  
0      584.    15 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       585.    16 .       READ (LUNPAM,8000,END=41) MV  
0      586.    17 + +KEEP, KDNEXTFP,   P=SERVICE.   
       587.    18 .  9001 FORMAT (4H y> )   
0      588.    19 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       589.    20 .       STOP 99   
0      590.    21 + +KEEP, SPACEPAT.    
       591.    22 .      +,            ISPACE(50000),LAST   
0      592.    23 + +KEEP, SPACEAUX.    
       593.    24 .      +,            LOCALS(40),ISPACE(20000),LAST    
0      594.    25-+ +SELF.     ----    FOR CETA I/O    ---- 
       595.    26 + +USE, CETAFJCL. 
0      596.    27 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       597.    28 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   56 PATCHY    ================================================== P=MCSE*    D=BLANKDEK  1 ============================

       598.     0 + +DECK,BLANKDEK. 
       599.     1 + +USE, F77.  
       600.     2 + +USE, B32.  
       601.     3 + +USE, A4.   
       602.     4 + +USE, HEX.  
       603.     5 + +USE, LG,T8ZERO.    
       604.     6 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       605.     7 + +USE, ASCILOW.               Normal char. are lower case ASCII  
       606.     8 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       607.     9 + +USE, SKIPFULL.              read skipped records in full   
       608.    10 + +USE, PROMPTIN.              Prompting for TTP  
       609.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
       610.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       611.    13 + +USE, IOVPACK.  
       612.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
       613.    15 + +USE, *CSE.                  Hydra Pilot    
       614.    16 + +USE, SPECCSE.  

   57 PATCHY    ================================================== P=MCSE*    D=USEMAINS  1 ============================

       615.     0 + +DECK, USEMAINS,   P=MCSE*, T=JOIN. 
       616.     1 + +USE, QABEND,              IF=PATCHY*, IF=QDEBUG.   
       617.     2 + +USE, MAINCSE, D=.  

   58 PATCHY    ================================================== P=MCVX*    D=          1 ============================

       618.     0 + +PATCH, MCVX*.     Patchy Machine patch for Convex 64-bit   
0      619.     1 + +KEEP, IQCCEQU. 
       620.     2 .                                  EQUIVALENCE  (IQMSQ(1), IQCC(2), IQ(4))    
0      621.     3 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
       622.     4 .       CALL UCTOH1 ( 
       623.     5 .      + '+-CDECK  ID>, +.-;DECK  ID>, +.--/*DECK ID>, +. */---'  
       624.     6 .      +, MWKX(1),60) 
0      625.     7 + +KEEP, PLOAD3,     P=PLOAD, D=. 
       626.     8 .       CALL SBYT  (0,KDEOD(1),1,8)   
0      627.     9 + +KEEP, JARTPX1,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       628.    10 .       PARAMETER    ( NBLANK = '0020202020202020'X ) 
0      629.    11 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       630.    12 .       MM(2) = ishft (IT,-56)    
       631.    13 .       IF (MM(2).EQ.43)       GO TO 21   
0      632.    14 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       633.    15 .       MM(1) = ISHFT(MM(2),56) .OR. NBLANK   
1  58                                                              P=MCVX*    D=          2                     PAGE   9

       634.    16 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
       635.    17 .       MM(2) = ishft (IT,-56)    
       636.    18 .       IF (MM(2).EQ.43)       GO TO 21   
0      637.    19 + +KEEP, CCTOUPDE,   P=SERVICE, D=CCTOUP. 
       638.    20 .       PARAMETER    (MASKU = 'DFFFFFFFFFFFFFFF'X)    
0      639.    21 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       640.    22 .       JVAL = ishft (MV(JCH),-56)    
0      641.    23 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
       642.    24 .       MV(JCH) = MV(JCH) .AND. MASKU 
0      643.    25 + +KEEP, IOFILXDT,   P=SERVICE, D=IOFILX. 
       644.    26 .       CLOSE (UNIT=LUN)  
0      645.    27 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       646.    28 .       READ (LUNPAM,8000,END=41) MV  
0      647.    29 + +KEEP, KDNEXTFP,   P=SERVICE.   
       648.    30 .  9001 FORMAT (' y> ',$) 
0      649.    31 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       650.    32 .       STOP 99   
0      651.    33-+ +SELF.     ----    FOR CETA I/O    ---- 
       652.    34 + +USE, CETAFJCL. 
       653.    35 + +USE, CETA2TO, CETA2FR. 
0      654.    36 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       655.    37 .       DATA  INICET / 90,  8,0,28800,0,0,   8,8,0,0,0,  57,255/  

   59 PATCHY    ================================================== P=MCVX*    D=BLANKDEK  1 ============================

       656.     0 + +DECK,BLANKDEK. 
0      657.     1-+ +SELF.                       Machine patch for CONVEX   
       658.     2 + +USE, F77.  
       659.     3 + +USE, B64, B60M, B48M, B36M.    
       660.     4 + +USE, A8, A8M, A6M, A5M.    
       661.     5 + +USE, LG.   
       662.     6 + +USE, T8ZERO.   
       663.     7 + +USE, IOVPACK.  
       664.     8 + +USE, IOVPACK, D=FIXED, T=INH.  
       665.     9 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       666.    10 + +USE, ASCIINT.               Internal character repres. in ASCII    
       667.    11 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       668.    12 + +USE, PROMPTIN.              Prompting for TTP  
       669.    13 + +USE, CVFORLOW.              Accept lower case on C/C   
       670.    14 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       671.    15 + +USE, *CVX.                  Hydra Pilot    
       672.    16 + +USE, CHREAD.                Character READ  faster than Hollerith  
       673.    17 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
       674.    18 + +USE, INITRH.                Initialize Routine Header cards    

   60 PATCHY    ================================================== P=MCVY*    D=          1 ============================

       675.     0 + +PATCH, MCVY*.     Patchy Machine patch for Convex 32-bit   
0      676.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
       677.     2 .       CALL UCTOH1 ( 
       678.     3 .      + '+-CDECK  ID>, +.-;DECK  ID>, +.--/*DECK ID>, +. */---'  
       679.     4 .      +, MWKX(1),60) 
0      680.     5 + +KEEP, PLOAD3,     P=PLOAD, D=. 
       681.     6 .       CALL SBYT  (0,KDEOD(1),1,8)   
0      682.     7 + +KEEP, JARTPX1,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       683.     8 .       PARAMETER    ( NBLANK = '00202020'X ) 
0      684.     9 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       685.    10 .       MM(2) = ishft (IT,-24)    
       686.    11 .       IF (MM(2).EQ.43)       GO TO 21   
0      687.    12 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       688.    13 .       MM(1) = ISHFT(MM(2),24) .OR. NBLANK   
0      689.    14 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
       690.    15 .       MM(2) = ishft (IT,-24)    
       691.    16 .       IF (MM(2).EQ.43)       GO TO 21   
0      692.    17 + +KEEP, CCTOUPDE,   P=SERVICE, D=CCTOUP. 
       693.    18 .       PARAMETER    (MASKU = 'DFFFFFFF'X)    
0      694.    19 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       695.    20 .       JVAL = ishft (MV(JCH),-24)    
0      696.    21 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
       697.    22 .       MV(JCH) = MV(JCH) .AND. MASKU 
0      698.    23 + +KEEP, IOFILXDT,   P=SERVICE, D=IOFILX. 
       699.    24 .       CLOSE (UNIT=LUN)  
0      700.    25 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       701.    26 .       READ (LUNPAM,8000,END=41) MV  
0      702.    27 + +KEEP, KDNEXTFP,   P=SERVICE.   
       703.    28 .  9001 FORMAT (' y> ',$) 
0      704.    29 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       705.    30 .       STOP 99   
0      706.    31-+ +SELF.     ----    FOR CETA I/O    ---- 
       707.    32 + +USE, CETAFJCL. 
       708.    33 + +USE, CETA2TO, CETA2FR. 
1  60                                                              P=MCVY*    D=          2                     PAGE  10

       709.    34 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       710.    35 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   61 PATCHY    ================================================== P=MCVY*    D=BLANKDEK  1 ============================

       711.     0 + +DECK,BLANKDEK. 
0      712.     1-+ +SELF.                       Machine patch for CONVEX   
       713.     2 + +USE, F77.  
       714.     3 + +USE, B32.  
       715.     4 + +USE, A4.   
       716.     5 + +USE, LG.   
       717.     6 + +USE, T8ZERO.   
       718.     7 + +USE, IOVPACK.  
       719.     8 + +USE, IOVPACK, D=FIXED, T=INH.  
       720.     9 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       721.    10 + +USE, ASCIINT.               Internal character repres. in ASCII    
       722.    11 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       723.    12 + +USE, PROMPTIN.              Prompting for TTP  
       724.    13 + +USE, CVFORLOW.              Accept lower case on C/C   
       725.    14 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       726.    15 + +USE, *CVY.                  Hydra Pilot    
       727.    16 + +USE, CHREAD.                Character READ  faster than Hollerith  
       728.    17 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
       729.    18 + +USE, INITRH.                Initialize Routine Header cards    

   62 PATCHY    ================================================== P=MDGE*    D=          1 ============================

       730.     0 + +PATCH, MDGE*.     Patchy Machine patch for DATA GENERAL MV ECLIPSE 
0      731.     1 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       732.     2 .       JVAL = ISHFT (MV(JCH),-24)    
0      733.     3 + +KEEP, IOFILXDT.    
       734.     4 .       CLOSE (UNIT=LUN)  
0      735.     5 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       736.     6 .       READ (LUNPAM,8000,END=41) MV  
0      737.     7 + +KEEP, KDNEXTFP,   P=SERVICE.   
       738.     8 .  9001 FORMAT (' y> ',$) 
0      739.     9 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       740.    10 .       STOP 99   
0      741.    11 + +KEEP, SPACEPAT.    
       742.    12 .      +,            ISPACE(25000),LAST   
0      743.    13 + +KEEP, SPACEAUX.    
       744.    14 .      +,            LOCALS(40),ISPACE(20000),LAST    
0      745.    15-+ +SELF.     ----    FOR CETA I/O    ---- 
       746.    16 + +USE, CETAFJCL. 
0      747.    17 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       748.    18 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  
0      749.    19 + +KEEP, CETUPK,     P=YFRCETA, D=CETUP.  
       750.    20 .       CALL UBLOW (  
       751.    21 .      +63HABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-*/()$= ,.#'!:"_ &@? ><  ;    
       752.    22 .      +,                      IQ(LORGH+1),63)    
0      753.    23 + +KEEP, CETUPKIM,   P=YFRCETA, D=CETUP.  
       754.    24 .       IQ(LORGI+54) =  93         ! CLOSE SQUARE BRACKET 
       755.    25 .       IQ(LORGI+58) =  91         ! OPEN  SQUARE BRACKET 
       756.    26 .       IQ(LORGI+62) =  94         ! UP ARROW 
       757.    27 .     
       758.    28 + +USE, TYPINCET.   YTOCETA Tab conversion in Fortran decks   
0      759.    29 + +KEEP, TOCETAB,    P=YTOCETA, D=TOCETA. 
       760.    30 .     
       761.    31 . C--               HANDLE 'TAB' ON DGC MACHINES  
       762.    32 .     
       763.    33 .       IF (JINHO.NE.9)          GO TO 29 
       764.    34 .       IF (JTAKE.LE.NCH)        GO TO 25 
       765.    35 .       IF (N.NE.0)              GO TO 37 
       766.    36 .       NBL = 1   
       767.    37 .       GO TO 28  
       768.    38 .     
       769.    39 .    25 NBL = 8 - JBYT (N,1,3)    
       770.    40 .       IF (JMODDK.NE.0)         GO TO 28 
       771.    41 .       IF      (N.LT.6)         GO TO 26 
       772.    42 .       IF (N+NBL.LT.68)         GO TO 28 
       773.    43 .       NBL = NBL + NX    
       774.    44 .       GO TO 28  
       775.    45 .     
       776.    46 .    26 NX  = 2   
       777.    47 .       NBL = NBL - NX    
       778.    48 .       N   =   N + NX    
       779.    49 .    28 CALL VFILL (IQ(LPUT),NBL,45)  
       780.    50 .       LPUT = LPUT + NBL 
       781.    51 .       N    = N    + NBL 
       782.    52 .       GO TO 22  
       783.    53 .    29 CONTINUE  
0      784.    54 + +KEEP, TOSETAB,    P=YTOCETA, D=TOSETU. 
       785.    55 .       IQ(LXREF+201) = 1201  

   63 PATCHY    ================================================== P=MDGE*    D=BLANKDEK  1 ============================

       786.     0 + +DECK,BLANKDEK. 
       787.     1 + +USE, F77.  
       788.     2 + +USE, B32.  
       789.     3 + +USE, A4.   
       790.     4 + +USE, HEX.  
       791.     5 + +USE, LG, T8ZERO.   
       792.     6 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
1  63                                                              P=MDGE*    D=BLANKDEK  2                     PAGE  11

       793.     7 + +USE, ASCIINT.               Internal character repres. in ASCII    
       794.     8 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       795.     9 + +USE, PROMPTIN.              Prompting for TTP  
       796.    10 + +USE, CVFORLOW.              Accept lower case on C/C   
       797.    11 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       798.    12 + +USE, IOVPACK.  
       799.    13 + +USE, IOVPACK, D=FIXED, T=INH.  
       800.    14 + +USE, *DGE.                  Hydra Pilot    
       801.    15 + +USE, SPECDGE.  

   64 PATCHY    ================================================== P=MDGE*    D=USEMAINS  1 ============================

       802.     0 + +DECK, USEMAINS,   P=MDGE*, T=JOIN. 
       803.     1 + +USE, QABEND,              IF=PATCHY*, IF=QDEBUG.   
       804.     2 + +USE, MAINDGE, D=.  

   65 PATCHY    ================================================== P=MHPX*    D=          1 ============================

       805.     0 + +PATCH, MHPX*.     Patchy Machine patch for HP Unix 
0      806.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
       807.     2 .       CALL UCTOH1 ( 
       808.     3 .      + '+-CDECK  ID>, +.-|DECK  ID>, +.--/*DECK ID>, +. */---'  
       809.     4 .      +, MWKX(1),60) 
0      810.     5 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       811.     6 .       JVAL = ishft (MV(JCH),-24)    
0      812.     7 + +KEEP, IOFILXDT.    
       813.     8 .       CLOSE (UNIT=LUN)  
0      814.     9 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       815.    10 .       READ (LUNPAM,8000,END=41) MV  
0      816.    11 + +KEEP, KDNEXTFP,   P=SERVICE.   
       817.    12 .  9001 FORMAT ($,' y> ') 
0      818.    13 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       819.    14 .       STOP 99   
0      820.    15 + +KEEP, SPACEPAT.    
       821.    16 .      +,            ISPACE(50000),LAST   
0      822.    17 + +KEEP, SPACEAUX.    
0      823.    18-+ +SELF.     ----    FOR CETA I/O    ---- 
       824.    19 + +USE, CETAFJCL. 
       825.    20 + +USE, CETA2TO, CETA2FR. 
0      826.    21 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       827.    22 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   66 PATCHY    ================================================== P=MHPX*    D=BLANKDEK  1 ============================

       828.     0 + +DECK,BLANKDEK. 
       829.     1 + +USE, F77.  
       830.     2 + +USE, B32.  
       831.     3 + +USE, A4.   
       832.     4 + +USE, HEX.  
       833.     5 + +USE, LG,T8ZERO.    
       834.     6 + +USE, HOLLAPO.  
       835.     7 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       836.     8 + +USE, ASCIINT.               Internal character repres. in ASCII    
       837.     9 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       838.    10 + +USE, PROMPTIN.              Prompting for TTP  
       839.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
       840.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       841.    13 + +USE, IOVPACK.  
       842.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
       843.    15 + +USE, *HPX.                  Hydra Pilot    
       844.    16 + +USE, CHREAD.                Character READ  faster than Hollerith  
       845.    17 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
       846.    18 + +USE, INITRH.                Initialize Routine Header cards    

   67 PATCHY    ================================================== P=MIBM*    D=          1 ============================

       847.     0 + +PATCH, MIBM*.  
0      848.     1 + +KEEP, PEND34,     P=PEND.  
       849.     2 .       IF (NDKASM.EQ.0)       GO TO 32   
       850.     3 .       CALL SBIT1 (MACTIV,JM)    
       851.     4 .       GO TO 36  
       852.     5 .     
       853.     6 .    32 LUN = IQ(LASM+5)  
       854.     7 .       IF (JM.EQ.2)           GO TO 34   
       855.     8 .       IF (JM.NE.7)           GO TO 36   
       856.     9 .     
       857.    10 .    34 WRITE (LUN,9034)  
       858.    11 .  9034 FORMAT (10X,6HEND   ) 
       859.    12 .       NCASM = 1 
0      860.    13 + +KEEP, DOASM4, IF=CMS.  
       861.    14 .       IF (JCCPZ.NE.0)        GO TO 28   
0      862.    15 + +KEEP, DOASM5, IF=CMS.  
       863.    16 .       CALL CBYT (NS,13, IOSPEC,13, 1)   
0      864.    17 + +KEEP, IOFILXAT,   P=SERVICE, IF=CMS.   
       865.    18 .       CALL FLKRAK   
0      866.    19 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       867.    20 .       READ (LUNPAM,8000,END=41) MV  
0      868.    21 + +KEEP, SPACEPAT.    
       869.    22 .      +,            ISPACE(25000),LAST   
1  67                                                              P=MIBM*    D=          2                     PAGE  12

       870.    23 + +KEEP, SPACEAUX.    
       871.    24 .      +,            LOCALS(40),ISPACE(20000),LAST    
0      872.    25 + +KEEP, QCARDL,     T=NOLIST.    
0      873.    26-+ +SELF.     ----    FOR CETA I/O    ---- 
       874.    27 + +USE, CETAFJCL. 
       875.    28 + +USE, CETA2TO, CETA2FR, IF=IOPACK.  
0      876.    29 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       877.    30 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  
0      878.    31 + +KEEP, CETAWSEL,   P=YTOCETA, D=TOCETA, IF=IOPACK.  
       879.    32 .       IF (MOPTIO(9).EQ.0)    GO TO 56   
0      880.    33 + +KEEP, CETAWRX,    P=YTOCETA, D=TOCETA, IF=IOPACK.  
       881.    34 .       N  = 4*NWOUT  
       882.    35 .       CALL IORITE (LUNEW,IQ(LCETA),N,ISW)   
       883.    36 .       IF (ISW.EQ.0)          GO TO 58   
       884.    37 .       WRITE (IQPRNT,9843) ISW   
       885.    38 .  9843 FORMAT (1X/' *****  ERROR',I3,' FROM IORITE.')    
       886.    39 .       CALL PABEND   
0      887.    40 + +KEEP, CETAWRIT,   P=YTOCETA, D=TOCETA, IF=-VSFORT. 
       888.    41 .       CALL XOUTCF (LUNEW,IQ(LCETA),NWOUT)   
0      889.    42 + +KEEP, TOCETGO,    P=YTOCETA, IF=-VSFORT, IF=IOPACK.    
       890.    43 .       IOSPEC = MOPTIO(9)    
0      891.    44 + +KEEP, TOCETEND,   P=YTOCETA, IF=-VSFORT, IF=IOPACK.    
       892.    45 .       IOSPEC = MOPTIO(9)    
       893.    46 .       IF (IOSPEC.NE.0)  CALL IOSTOP 
0      894.    47 + +KEEP, CETARSEL,   P=YFRCETA, D=FRCETA, IF=IOPACK.  
       895.    48 .       IF (MOPTIO(9).EQ.0)    GO TO 56   
0      896.    49 + +KEEP, CETARDX,    P=YFRCETA, D=FRCETA, IF=IOPACK.  
       897.    50 .       N  = 4*NWCEIN 
       898.    51 .       CALL IOREAD (LUNOLD,IQ(LREAD),N,ISW)  
       899.    52 .       IF (ISW.EQ.2)               GO TO 44  
       900.    53 .       IF (ISW.NE.0)               GO TO 42  
       901.    54 .       GO TO 58  
0      902.    55 + +KEEP, CETAREAD,   P=YFRCETA, D=FRCETA, IF=-VSFORT. 
       903.    56 .       CALL XINCF (LUNOLD,IQ(LREAD),NWCEIN)  
       904.    57 .       IF   (NWCEIN.EQ.0)          GO TO 44  
       905.    58 .       IF   (NWCEIN.LT.0)          GO TO 42  
       906.    59 .     
0      907.    60 + +KEEP, FRCETGO,    P=YFRCETA, IF=-VSFORT, IF=IOPACK.    
       908.    61 .       IOSPEC = MOPTIO(9)    
0      909.    62 + +KEEP, FRCETEND,   P=YFRCETA, IF=-VSFORT, IF=IOPACK.    
       910.    63 .       IOSPEC = MOPTIO(9)    
0      911.    64 + +KEEP, IOFILXCE,   P=SERVICE, D=IOFILX, IF=-VSFORT, IF=IOPACK.  
       912.    65 .       IF (IOSPEC.EQ.0)       GO TO 91   
       913.    66 . C  -  CALL IOSTOP done in YTOCEX    
       914.    67 .       IOTON = 7 
       915.    68 .       GO TO 98  

   68 PATCHY    ================================================== P=MIBM*    D=BLANKDEK  1 ============================

       916.     0 + +DECK,BLANKDEK. 
0      917.     1-+ +SELF.                       Machine patch for IBM  
       918.     2 + +USE, B32.  
       919.     3 + +USE, A4, HEX.  
       920.     4 + +USE, LG,T8ZERO.    
       921.     5 + +USE, ATTACHOP, IF=CMS.      Allow T=ATTACH on +PAM, etc    
       922.     6 + +USE, EBCDINT.               Internal character repres. in EBCDIC   
       923.     7 + +USE, CVFORLOW.              Accept lower case on C/C   
       924.     8 + +USE, IOVPACK.  
       925.     9 + +USE, IOVPACK, D=FIXED, T=INH.  
       926.    10 + +USE, *IBMVS, IF=VSFORT.     select the right HYDRA pilot   
       927.    11 + +USE, *IBMSI, IF=F77, IF=-VSFORT.   
       928.    12 + +USE, *IBM4, IF=-F77.   
       929.    13 + +USE, CHREAD.                Character READ  faster than Hollerith  
       930.    14 + +USE, CHWRITE, IF=F77.       Character WRITE faster than Hollerith  
       931.    15 + +USE, SPECIBM.  

   69 PATCHY    ================================================== P=MIBM*    D=USEMAINS  1 ============================

       932.     0 + +DECK, USEMAINS,   P=MIBM*, T=JOIN. 
       933.     1 + +USE, MAINS, D=.    
0      934.     2 + +KEEP, YPATCHY2,   P=MAINS, D=MYPATCHY. 
       935.     3 .       CALL RDYOPT   
0      936.     4 + +KEEP, YPATCHY3,   P=MAINS, D=MYPATCHY, IF=QDEBUG.  
       937.     5 .       NVGARB(3) = 4000  
       938.     6 .       CALL REENT (QFATAL)   
0      939.     7 + +KEEP, YPATCHY3,   P=MAINS, D=MYPATCHY. 
       940.     8 .       NVGARB(3) = 4000  
0      941.     9 + +KEEP, MAINALL,    P=MAINS. 
       942.    10 .       CALL RDYOPT   

   70 PATCHY    ================================================== P=MIBX*    D=          1 ============================

       943.     0 + +PATCH, MIBX*.     Patchy Machine patch for IBX 
0      944.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
       945.     2 .       CALL UCTOH1 ( 
       946.     3 .      + '+-CDECK  ID>, +.-*DECK  ID>, +.--/*DECK ID>, +. */---'  
       947.     4 .      +, MWKX(1),60) 
1  70                                                              P=MIBX*    D=          2                     PAGE  13

       948.     5 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       949.     6 .       MM(1) = IOR (ISHFT(MM(2),24), NBLANK) 
0      950.     7 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
       951.     8 .       JVAL = ISHFT (MV(JCH),-24)    
0      952.     9 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
       953.    10 .       MV(JCH) =  IAND (MV(JCH), MASKU)  
0      954.    11 + +KEEP, IOFILXDT.    
       955.    12 .       CLOSE (UNIT=LUN)  
0      956.    13 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
       957.    14 .       READ (LUNPAM,8000,END=41) MV  
0      958.    15 + +KEEP, KDNEXTFP,   P=SERVICE.   
       959.    16 .  9001 FORMAT (' y> ')   
0      960.    17 + +KEEP, KDNXCH3,    P=SERVICE, D=KDNEXTCH.   
       961.    18 .       KCH = ' ' 
0      962.    19 + +KEEP, KDNEXTSE,   P=SERVICE.   
       963.    20 .       KKK(J) =  IAND (KKK(J), MASK00)   
0      964.    21 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
       965.    22 .       STOP 99   
0      966.    23 + +KEEP, SPACEPAT.    
       967.    24 .      +,            ISPACE(160000),LAST  
0      968.    25 + +KEEP, SPACEAUX.    
0      969.    26-+ +SELF.     ----    FOR CETA I/O    ---- 
       970.    27 + +USE, CETAFJCL. 
       971.    28 + +USE, CETA2TO, CETA2FR. 
0      972.    29 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
       973.    30 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   71 PATCHY    ================================================== P=MIBX*    D=BLANKDEK  1 ============================

       974.     0 + +DECK,BLANKDEK. 
       975.     1 + +USE, F77.  
       976.     2 + +USE, B32.  
       977.     3 + +USE, A4.   
       978.     4 + +USE, HEX.  
       979.     5 + +USE, LG,T8ZERO.    
       980.     6 + +USE, HOLLAPO.  
       981.     7 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
       982.     8 + +USE, ASCIINT.               Internal character repres. in ASCII    
       983.     9 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
       984.    10 + +USE, PROMPTIN.              Prompting for TTP  
       985.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
       986.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
       987.    13 + +USE, IOVPACK.  
       988.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
       989.    15 + +USE, CHREAD.                Character READ  faster than Hollerith  
       990.    16 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
       991.    17 + +USE, *IBX.                  Hydra Pilot    
       992.    18 + +USE, INITRH.                Initialize Routine Header cards    

   72 PATCHY    ================================================== P=MIRT*    D=          1 ============================

       993.     0 + +PATCH, MIRT*.     Patchy Machine patch for IRT 
0      994.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
       995.     2 .       CALL UCTOH1 ( 
       996.     3 .      + '+-CDECK  ID>, +.-|DECK  ID>, +.--/*DECK ID>, +. */---'  
       997.     4 .      +, MWKX(1),60) 
0      998.     5 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
       999.     6 .       MM(1) = IOR (ISHFT(MM(2),24), NBLANK) 
0     1000.     7 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1001.     8 .       JVAL = ISHFT (MV(JCH),-24)    
0     1002.     9 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1003.    10 .       MV(JCH) =  IAND (MV(JCH), MASKU)  
0     1004.    11 + +KEEP, IOFILXDT.    
      1005.    12 .       CLOSE (UNIT=LUN)  
0     1006.    13 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1007.    14 .       READ (LUNPAM,8000,END=41) MV  
0     1008.    15 + +KEEP, KDNEXTFP,   P=SERVICE.   
      1009.    16 .  9001 FORMAT (' y> ',$) 
0     1010.    17 + +KEEP, KDNEXTSE, P=SERVICE. 
      1011.    18 .       KKK(J) =  IAND (KKK(J), MASK00)   
0     1012.    19 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1013.    20 .       STOP 99   
0     1014.    21 + +KEEP, SPACEPAT.    
      1015.    22 .      +,            ISPACE(80000),LAST   
0     1016.    23 + +KEEP, SPACEAUX.    
0     1017.    24-+ +SELF.     ----    FOR CETA I/O    ---- 
      1018.    25 + +USE, CETAFJCL. 
      1019.    26 + +USE, CETA2TO, CETA2FR. 
0     1020.    27 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1021.    28 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  
1  73 PATCHY    ================================================== P=MIRT*    D=BLANKDEK  1 =================== PAGE  14

      1022.     0 + +DECK,BLANKDEK. 
      1023.     1 + +USE, F77.  
      1024.     2 + +USE, B32.  
      1025.     3 + +USE, A4.   
      1026.     4 + +USE, HEX.  
      1027.     5 + +USE, LG,T8ZERO.    
      1028.     6 + +USE, HOLLAPO.  
      1029.     7 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
      1030.     8 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1031.     9 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1032.    10 + +USE, PROMPTIN.              Prompting for TTP  
      1033.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
      1034.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
      1035.    13 + +USE, IOVPACK.  
      1036.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
      1037.    15 + +USE, CHREAD.                Character READ  faster than Hollerith  
      1038.    16 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
      1039.    17 + +USE, *IRT.                  Hydra Pilot    
      1040.    18 + +USE, INITRH.                Initialize Routine Header cards    

   74 PATCHY    ================================================== P=MLNX*    D=          1 ============================

      1041.     0 + +PATCH,MLNX*.   
0     1042.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
      1043.     2 .       CALL UCTOH1 ( 
      1044.     3 .      + '+-CDECK  ID>, +.-;DECK  ID>, +.--/*DECK ID>, +. */---'  
      1045.     4 .      +, MWKX(1),60) 
0     1046.     5 + +KEEP, KDPKCMP2.    
      1047.     6 .       PARAMETER      (KDPOST=25,KDBLIN=32,KDMARK=0, KDSUB=63,JPOSIG=1)  
0     1048.     7 + +KEEP, PLOAD3,     P=PLOAD, D=. 
      1049.     8 .       CALL SBYT  (0,KDEOD(2),25,8)  
0     1050.     9 + +KEEP, JARTPX1,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1051.    10 .       PARAMETER   ( NBLANK = '20202000'X )  
0     1052.    11 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1053.    12 .       MM(2) = AND(IT,255)   
      1054.    13 .       IF (MM(2).EQ.43)       GO TO 21   
0     1055.    14 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1056.    15 .       MM(1) = OR (MM(2), NBLANK)    
0     1057.    16 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
      1058.    17 .       MM(2) = AND(IT,255)   
      1059.    18 .       IF (MM(2).EQ.43)       GO TO 21   
0     1060.    19 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1061.    20 .       JVAL = AND (MV(JCH),255)  
0     1062.    21 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1063.    22 .       MV(JCH) = AND (MV(JCH), 'FFFFFFDF'X)  
0     1064.    23 + +KEEP, IOFILXDT.    
      1065.    24 .       CLOSE (UNIT=LUN)  
0     1066.    25 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1067.    26 .       READ (LUNPAM,8000,END=41) MV  
0     1068.    27 + +KEEP, KDNEXTFP,   P=SERVICE.   
      1069.    28 .  9001 FORMAT (' y> ',$) 
0     1070.    29 + +KEEP, KDNEXTTE, P=SERVICE. 
      1071.    30 .       IF (AND(KKK(J),'FF000000'X).NE.'20000000'X)  THEN 
0     1072.    31 + +KEEP, KDNEXTSE, P=SERVICE. 
      1073.    32 .       KKK(J) = AND(KKK(J),  '00FFFFFF'X)    
0     1074.    33 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1075.    34 .       STOP 99   
0     1076.    35 + +KEEP, SPACEPAT.    
      1077.    36 .      +,            ISPACE(160000),LAST  
0     1078.    37 + +KEEP, SPACEAUX.    
      1079.    38 .      +,            LOCALS(40),ISPACE(80000),LAST    
0     1080.    39-+ +SELF.     ----    FOR CETA I/O    ---- 
      1081.    40 + +USE, CETAFJCL. 
      1082.    41 + +USE, CETA2TO, CETA2FR. 
0     1083.    42 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1084.    43 .       DATA  INICET /180,  8,4,0,0,0,       8,4,0,0,0,   1,255/  
0     1085.    44 + +KEEP, TOCETUPK,   P=YTOCETA, D=TOCETA. 
      1086.    45 .       CALL UPKBYT(KARD(1),1,MWK(1),NCH,IPAKKD(1))   
0     1087.    46 + +KEEP, TOCETPK,    P=YTOCETA, D=TOCETA. 
      1088.    47 .       CALL PKBYT  (IQ(LSTART),IQ(LCETA),1,NCHCEU,IPAKCE(1)) 
0     1089.    48 + +KEEP, FRCETUPK,   P=YFRCETA, D=FRCETA. 
      1090.    49 .       CALL UPKBYT (IQ(LREAD),1,IQ(LTAKE),NCHCEU,IPAKCE(1))  
0     1091.    50 + +KEEP, IOFILXCE,   P=SERVICE, D=IOFILX. 
      1092.    51 .       CLOSE (LUN)   
      1093.    52 .       IOTON = 7 
      1094.    53 .       GO TO 98  

   75 PATCHY    ================================================== P=MLNX*    D=BLANKDEK  1 ============================

      1095.     0 + +DECK,BLANKDEK. 
1  75                                                              P=MLNX*    D=BLANKDEK  2                     PAGE  15

      1096.     1-+ +SELF.                       Machine patch for LINUX    
      1097.     2 + +USE, HOK, T=INH.   
      1098.     3 + +USE, F77.  
      1099.     4 + +USE, B32.  
      1100.     5 + +USE, A4.   
      1101.     6 + +USE, HEX.  
      1102.     7 + +USE, LG, T8VAX.    
      1103.     8 + +USE, HOLLAPO.  
      1104.     9 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
      1105.    10 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1106.    11 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1107.    12 + +USE, FORCELOA.              Fix problem with sequential library    
      1108.    13 + +USE, TYPINCET.              YTOCETA to know the deck type for tabs 
      1109.    14 + +USE, PROMPTIN.              Prompting for TTP  
      1110.    15 + +USE, CVFORLOW.              Accept lower case on C/C   
      1111.    16 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
      1112.    17 + +USE, IOVPACK.  
      1113.    18 + +USE, IOVPACK, D=FIXED, T=INH.  
      1114.    19 + +USE, CHREAD.                Character READ  faster than Hollerith  
      1115.    20 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
      1116.    21 + +USE, *LNX.                  Hydra Pilot    
      1117.    22 + +USE, INITRH.                Initialize Routine Header cards    

   76 PATCHY    ================================================== P=MND3*    D=          1 ============================

      1118.     0 + +PATCH, MND3*.  
0     1119.     1 + +KEEP, PEND34,     P=PEND.  
      1120.     2 .    34 IF ((JM.NE.2).AND.(JM.NE.7))  GO TO 35    
      1121.     3 .       IF (MOPTIO(24).NE.0)          GO TO 35    
      1122.     4 .       LUN = IQ(LASM+5)  
      1123.     5 .       WRITE (LUN,9735)  
      1124.     6 .  9735 FORMAT (7X,4H$EOF)    
      1125.     7 .       NCASM = NCASM + 1 
      1126.     8 .    35 IF (NCASM.EQ.0)        GO TO 37   
0     1127.     9 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1128.    10 .       JVAL = ISHFT (MV(JCH),-24)    
0     1129.    11 + +KEEP, IOFILX4,    P=SERVICE, D=IOFILX. 
      1130.    12 .       DATA  JEXPAM / 4HPAM  /   
      1131.    13 .       DATA  JEXCAR / 4HSYMB /   
0     1132.    14 + +KEEP, IOFILXDT.    
      1133.    15 .       CLOSE (UNIT=LUN)  
0     1134.    16 + +KEEP, IOFILXEE,   P=SERVICE.   
      1135.    17 .       IF (IOMODE(5).EQ.0)    GO TO 98   
      1136.    18 .       IOTOFF = 1    
0     1137.    19 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1138.    20 .       READ (LUNPAM,8000,END=41) MV  
0     1139.    21 + +KEEP, KDNEXTFP,   P=SERVICE.   
      1140.    22 .  9001 FORMAT (/4H$y> )  
0     1141.    23 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1142.    24 .       STOP 'ABEND'  
0     1143.    25 + +KEEP, SPACEPAT.    
      1144.    26 .      +,            ISPACE(40000),LAST   
0     1145.    27 + +KEEP, SPACEAUX.    
      1146.    28 .      +,            LOCALS(40),ISPACE(20000),LAST    
0     1147.    29-+ +SELF.     ----    FOR CETA I/O    ---- 
      1148.    30 + +USE, CETA2TO, CETA2FR. 
0     1149.    31 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1150.    32 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  
0     1151.    33 + +KEEP, CETAWSEL,   P=YTOCETA, D=TOCETA. 
      1152.    34 .       IF (MOPTIO(13).EQ.0)   GO TO 56   
0     1153.    35 + +KEEP, CETAWRX,    P=YTOCETA, D=TOCETA. 
      1154.    36 .       ISW = MAGTP (1,IQ(LCETA), LUNEW,NWOUT,NW) 
      1155.    37 .       IF (ISW.EQ.0)          GO TO 58   
      1156.    38 .       WRITE (IQPRNT,9843) ISW   
      1157.    39 .  9843 FORMAT (1X/' *****  ERROR STATUS =',O13,'B FROM MAGTP.')  
      1158.    40 .       CALL PABEND   
0     1159.    41 + +KEEP, TOCETGO,    P=YTOCETA.   
      1160.    42 .       IOSPEC = MOPTIO(13)   
0     1161.    43 + +KEEP, TOCETEND,   P=YTOCETA.   
      1162.    44 .       IOSPEC = MOPTIO(13)   
      1163.    45 .       IF (IOSPEC.NE.0)  THEN    
      1164.    46 .           N = 0 
      1165.    47 .           CALL MAGTP (12B,N,LUNEW,N,N)  
      1166.    48 .           CALL MAGTP (12B,N,LUNEW,N,N)  
      1167.    49 .         ENDIF   
0     1168.    50 + +KEEP, CETARSEL,   P=YFRCETA, D=FRCETA. 
      1169.    51 .       IF (MOPTIO(13).EQ.0)   GO TO 56   
0     1170.    52 + +KEEP, CETARDX,    P=YFRCETA, D=FRCETA. 
      1171.    53 .       ISTAT = MAGTP (0,IQ(LREAD),LUNOLD,NWCEU,NWCEIN)   
      1172.    54 .       IF   (ISTAT.EQ.0)           GO TO 58  
      1173.    55 .       IF   (ISTAT.EQ.3)           GO TO 44  
      1174.    56 .       IF (ISTAT.NE.171B)  THEN  
      1175.    57 .           CALL ERMSG (ISTAT)    
      1176.    58 .         ELSE    
      1177.    59 .           ISTAT = MAGTP (24B,IDUM1,LUNOLD,IDUM2,IDUM3)  
      1178.    60 .           WRITE (IQPRNT,9753) ISTAT 
      1179.    61 .  9753 FORMAT (10X,'MAGTP RETURNS STATUS =',O13,'B') 
      1180.    62 .         ENDIF   
      1181.    63 .       GO TO 42  
1  76                                                              P=MND3*    D=          2                     PAGE  16

      1182.    64 + +KEEP, FRCETGO,    P=YFRCETA.   
      1183.    65 .       IOSPEC = MOPTIO(13)   
0     1184.    66 + +KEEP, FRCETEND,   P=YFRCETA.   
      1185.    67 .       IOSPEC = MOPTIO(13)   
0     1186.    68 + +KEEP, IOFILXCE,   P=SERVICE, D=IOFILX. 
      1187.    69 .       IF (IOSPEC.EQ.0)       GO TO 91   
      1188.    70 . C  -  CALL MAGTP (12B,N,LUN,N,N)  done in YTOCEX    
      1189.    71 . C  -  CALL MAGTP (12B,N,LUN,N,N)    
      1190.    72 .       IOTON = 2 
      1191.    73 .       GO TO 98  

   77 PATCHY    ================================================== P=MND3*    D=BLANKDEK  1 ============================

      1192.     0 + +DECK,BLANKDEK. 
0     1193.     1-+ +SELF.                       Machine patch for NORD 500 
      1194.     2 + +USE, F77.  
      1195.     3 + +USE, B32.  
      1196.     4 + +USE, A4.   
      1197.     5 + +USE, LG,T8ZERO.    
      1198.     6 + +USE, ATTACHOPT.             Activate code for +PAM, T=ATTACH   
      1199.     7 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1200.     8 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1201.     9 + +USE, SKIPFULL.              read skipped records in full   
      1202.    10 + +USE, FORCELOA.              Fix problem with sequential library    
      1203.    11 + +USE, PROMPTIN.              Prompting for TTP  
      1204.    12 + +USE, CVFORLOW.              Accept lower case on C/C   
      1205.    13 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
      1206.    14 + +USE, IOVPACK.  
      1207.    15 + +USE, IOVPACK, D=FIXED, T=INH.  
      1208.    16 + +USE, *NORD3.                Hydra Pilot    
      1209.    17 + +USE, SPECNOR.  

   78 PATCHY    ================================================== P=MND2*    D=          1 ============================

      1210.     0 + +PATCH, MND2*, T=JOIN.  

   79 PATCHY    ================================================== P=MND2*    D=BLANKDEK  1 ============================

      1211.     0 + +DECK,BLANKDEK. 
      1212.     1 - The material for the NORD 50 has been removed   

   80 PATCHY    ================================================== P=MPDP*    D=          1 ============================

      1213.     0 + +PATCH, MPDP*.  
0     1214.     1 + +KEEP, PDPUBLIC.    
      1215.     2 . C-----------  PROJECT / PROG  - NUMBERS FOR PUBLIC FILES    
      1216.     3 . C--                [300,300]  AT CERN ERASME PDP 10 
      1217.     4 .       DATA  MPUBLI /192,192/    
      1218.     5 . C-----------    
0     1219.     6 + +KEEP, KDPKCMP1.    
      1220.     7 .       PARAMETER      (KDNWT=16, KDNWT1=15,KDNCHW=5, KDBITS=8)   
0     1221.     8 + +KEEP, KDPKCMP2.    
      1222.     9 .       PARAMETER      (KDPOST=1, KDBLIN=64,KDMARK=0, KDSUB=70,JPOSIG=30) 
0     1223.    10 + +KEEP, PLOAD3,     P=PLOAD, D=. 
      1224.    11 .       CALL SBYT  (0,KDEOD(1),1,8)   
0     1225.    12 + +KEEP, JARTPX4, P=SERVAUX, D=JARTPX, IF=JARTYPQU.   
      1226.    13 .         MM(2) = ISHFT (IT,-29)  
      1227.    14 .         IF (MM(2).EQ.43)     GO TO 21   
0     1228.    15 + +KEEP, JARTPX7, P=SERVAUX, D=JARTPX, IF=JARTYPQU.   
      1229.    16 .         MM(1) = IOR (ISHFT(MM(2),29), "1004020100)  
0     1230.    17 + +KEEP, JARTYP4, P=SERVICE, D=JARTYP, IF=JARTYPQU.   
      1231.    18 .         MM(2) = ISHFT (IT,-29)  
      1232.    19 .         IF (MM(2).EQ.43)     GO TO 21   
0     1233.    20 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1234.    21 .       JVAL = JBYT (MV(JCH),30,7)    
0     1235.    22 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1236.    23 .       MV(JCH) = IAND (MV(JCH), 'BFFFFFFFE'X)    
0     1237.    24 + +KEEP, IOFILX4,    P=SERVICE, D=IOFILX. 
      1238.    25 .       DATA  JEXPAM / 4H.PAM /   
      1239.    26 .       DATA  JEXCAR / 4H.CAR /   
0     1240.    27 + +KEEP, IOFILXDT.    
      1241.    28 .       CLOSE (UNIT=LUN)  
0     1242.    29 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1243.    30 .       READ (LUNPAM,8000,END=41) MV  
0     1244.    31 + +KEEP, KDNEXTRU,   P=SERVICE, D=KDNEXT. 
      1245.    32 .       CALL SBYT (KDBLAN,MV(15),1,22)    
      1246.    33 .       GO TO 22  
0     1247.    34 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1248.    35 .       STOP 99   
0     1249.    36 + +KEEP, SPACEPAT.    
      1250.    37 .      +,            ISPACE(20000),LAST   
0     1251.    38 + +KEEP, SPACEAUX.    
      1252.    39 .      +,            LOCALS(40),ISPACE(10000),LAST    
0     1253.    40-+ +SELF.     ----    FOR CETA I/O    ---- 
      1254.    41 + +USE, CETAFJCL. 
1  80                                                              P=MPDP*    D=          2                     PAGE  17

      1255.    42 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1256.    43 .       DATA  INICET /180,  8,4,0,0,0,       7,5,0,0,0,  30,127/  

   81 PATCHY    ================================================== P=MPDP*    D=BLANKDEK  1 ============================

      1257.     0 + +DECK,BLANKDEK. 
0     1258.     1-+ +SELF.                       Machine patch for PDP 10   
      1259.     2 + +USE, B36, B36M.    
      1260.     3 + +USE, A5, A5M.  
      1261.     4 + +USE, LG,T8ZERO.    
      1262.     5 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
      1263.     6 + +USE, TYPINCET.              YTOCETA to know the deck type for tabs 
      1264.     7 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1265.     8 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1266.     9 + +USE, FORCELOA.              Fix problem with sequential library    
      1267.    10 + +USE, PROMPTIN.              Prompting for TTP  
      1268.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
      1269.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
0     1270.    13-+ +SELF.  +USE, DOMQAUGM. if memory augment possible  
      1271.    14 + +USE, IOVPACK.  
      1272.    15 + +USE, IOVPACK, D=FIXED, T=INH.  
      1273.    16 + +USE, *PDP10.                Hydra Pilot    
      1274.    17 + +USE, SPECPDP.  

   82 PATCHY    ================================================== P=MPDP*    D=USEMAINS  1 ============================

      1275.     0 + +DECK, USEMAINS,   P=MPDP*, T=JOIN. 
      1276.     1 + +USE, MAINPDP, D=.  

   83 PATCHY    ================================================== P=MSGI*    D=          1 ============================

      1277.     0 + +PATCH, MSGI*.     Patchy Machine patch for Silicon Graphics    
0     1278.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
      1279.     2 .       CALL UCTOH1 ( 
      1280.     3 .      + '+-CDECK  ID>, +.-|DECK  ID>, +.--/*DECK ID>, +. */---'  
      1281.     4 .      +, MWKX(1),60) 
0     1282.     5 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1283.     6 .       MM(1) = IOR (ISHFT(MM(2),24), NBLANK) 
0     1284.     7 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1285.     8 .       JVAL = ishft (MV(JCH),-24)    
0     1286.     9 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1287.    10 .       MV(JCH) =  IAND (MV(JCH), MASKU)  
0     1288.    11 + +KEEP, IOFILXDT.    
      1289.    12 .       CLOSE (UNIT=LUN)  
0     1290.    13 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1291.    14 .       READ (LUNPAM,8000,END=41) MV  
0     1292.    15 + +KEEP, KDNEXTFP,   P=SERVICE.   
      1293.    16 .  9001 FORMAT (' y> ',$) 
0     1294.    17 + +KEEP, KDNEXTSE, P=SERVICE. 
      1295.    18 .       KKK(J) =  IAND (KKK(J), MASK00)   
0     1296.    19 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1297.    20 .       STOP 99   
0     1298.    21 + +KEEP, SPACEPAT.    
      1299.    22 .      +,            ISPACE(80000),LAST   
0     1300.    23 + +KEEP, SPACEAUX.    
0     1301.    24-+ +SELF.     ----    FOR CETA I/O    ---- 
      1302.    25 + +USE, CETAFJCL. 
      1303.    26 + +USE, CETA2TO, CETA2FR. 
0     1304.    27 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1305.    28 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   84 PATCHY    ================================================== P=MSGI*    D=BLANKDEK  1 ============================

      1306.     0 + +DECK,BLANKDEK. 
      1307.     1 + +USE, F77.  
      1308.     2 + +USE, B32.  
      1309.     3 + +USE, A4.   
      1310.     4 + +USE, HEX.  
      1311.     5 + +USE, LG,T8ZERO.    
      1312.     6 + +USE, HOLLAPO.  
      1313.     7 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
      1314.     8 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1315.     9 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1316.    10 + +USE, PROMPTIN.              Prompting for TTP  
      1317.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
      1318.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
      1319.    13 + +USE, IOVPACK.  
      1320.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
      1321.    15 + +USE, *SGI.                  Hydra Pilot    
      1322.    16 + +USE, CHREAD.                Character READ  faster than Hollerith  
      1323.    17 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
      1324.    18 + +USE, INITRH.                Initialize Routine Header cards    

   85 PATCHY    ================================================== P=MSUN*    D=          1 ============================

      1325.     0 + +PATCH, MSUN*.     Patchy Machine patch for SUN 
0     1326.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
      1327.     2 .       CALL UCTOH1 ( 
      1328.     3 .      + '+-CDECK  ID>, +.-|DECK  ID>, +.--/*DECK ID>, +. */---'  
      1329.     4 .      +, MWKX(1),60) 
1  85                                                              P=MSUN*    D=          2                     PAGE  18

      1330.     5 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1331.     6 .       MM(1) = OR (LSHIFT(MM(2),24), NBLANK) 
0     1332.     7 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1333.     8 .       JVAL = ishft (MV(JCH),-24)    
0     1334.     9 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1335.    10 .       MV(JCH) =  AND (MV(JCH), MASKU)   
0     1336.    11 + +KEEP, IOFILXDT.    
      1337.    12 .       CLOSE (UNIT=LUN)  
0     1338.    13 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1339.    14 .       READ (LUNPAM,8000,END=41) MV  
0     1340.    15 + +KEEP, KDNEXTFP,   P=SERVICE.   
      1341.    16 .  9001 FORMAT (' y> ',$) 
0     1342.    17 + +KEEP, KDNEXTSE, P=SERVICE. 
      1343.    18 .       KKK(J) =  AND (KKK(J), MASK00)    
0     1344.    19 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1345.    20 .       STOP 99   
0     1346.    21 + +KEEP, SPACEPAT.    
      1347.    22 .      +,            ISPACE(80000),LAST   
0     1348.    23 + +KEEP, SPACEAUX.    
0     1349.    24-+ +SELF.     ----    FOR CETA I/O    ---- 
      1350.    25 + +USE, CETAFJCL. 
      1351.    26 + +USE, CETA2TO, CETA2FR. 
0     1352.    27 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1353.    28 .       DATA  INICET /180,  8,0,28800,0,0,   8,4,0,0,0,  25,255/  

   86 PATCHY    ================================================== P=MSUN*    D=BLANKDEK  1 ============================

      1354.     0 + +DECK,BLANKDEK. 
      1355.     1 + +USE, F77.  
      1356.     2 + +USE, B32.  
      1357.     3 + +USE, A4.   
      1358.     4 + +USE, HEX.  
      1359.     5 + +USE, LG,T8ZERO.    
      1360.     6 + +USE, HOLLAPO.  
      1361.     7 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
      1362.     8 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1363.     9 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1364.    10 + +USE, PROMPTIN.              Prompting for TTP  
      1365.    11 + +USE, CVFORLOW.              Accept lower case on C/C   
      1366.    12 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
      1367.    13 + +USE, IOVPACK.  
      1368.    14 + +USE, IOVPACK, D=FIXED, T=INH.  
      1369.    15 + +USE, *SUN.                  Hydra Pilot    
      1370.    16 + +USE, CHREAD.                Character READ  faster than Hollerith  
      1371.    17 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
      1372.    18 + +USE, INITRH.                Initialize Routine Header cards    

   87 PATCHY    ================================================== P=MUNO*    D=          1 ============================

      1373.     0 + +PATCH, MUNO*.  
0     1374.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
      1375.     2 .       CALL UBLOW ('+-@FTN,IOZ  +-@ASM,IN   +-----', MWKX(1),40) 
0     1376.     3 + +KEEP, PREADY7,    P=PINIT, D=PREADY.   
      1377.     4 .       CALL UBLOW ('+-@FTN,IOZS +-@ASM,IS   +-----', MWKX(1),40) 
0     1378.     5 + +KEEP, KDPKCMP1.    
      1379.     6 .       PARAMETER      (KDNWT=20, KDNWT1=19,KDNCHW=4, KDBITS=9)   
0     1380.     7 + +KEEP, KDPKCMP2.    
      1381.     8 .       PARAMETER      (KDPOST=1, KDBLIN=32,KDMARK=0, KDSUB=63,JPOSIG=28) 
0     1382.     9 + +KEEP, PLOAD3,     P=PLOAD, D=. 
      1383.    10 .       CALL SBYT (0,KDEOD(2),1,9)    
0     1384.    11 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1385.    12 .       JVAL = JBYT (MV(JCH),28,9)    
0     1386.    13 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1387.    14 .       CALL SBIT0 (MV(JCH),33)   
0     1388.    15 + +KEEP, IOFILXAT,   P=SERVICE, D=IOFILX. 
      1389.    16 .       IF (IOMODE(1).EQ.0)    GO TO 31   
      1390.    17 .       CALL FLKRAK   
      1391.    18 .       CALL FLINK (LUN)  
      1392.    19 .       IOTON = 4 
0     1393.    20 + +KEEP, IOFILXDT,   P=SERVICE, D=IOFILX. 
      1394.    21 .       CALL UBLOW  (13H@FREE      . ,IQUEST(1),13)   
      1395.    22 .       CALL SETNUM (LUN,IQUEST(21),IQUEST(6))    
      1396.    23 .       CALL UBUNCH (IQUEST(1),IQUEST(21),13) 
      1397.    24 .       CALL FACSF (IQUEST(21))   
0     1398.    25 + +KEEP, IOFILXRV,   P=SERVICE, D=IOFILX. 
      1399.    26 .       IF (IOMODE(8).NE.0)    GO TO 98   
0     1400.    27 + +KEEP, QEND7,      P=SERVICE, D=QEND.   
      1401.    28 .       CALL UNIEND   
0     1402.    29 + +KEEP, QCARDL,     T=NOLIST.    
0     1403.    30-+ +SELF.     ----    FOR CETA I/O    ---- 
1  87                                                              P=MUNO*    D=          2                     PAGE  19

      1404.    31 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1405.    32 .       DATA  INICET /160,  8,0,28800,0,0,   9,4,0,0,0,  28,127 / 
0     1406.    33 + +KEEP, CETAWRIT,   P=YTOCETA, D=TOCETA  
      1407.    34 .       CALL NTRAN$ (LUNEW,1,NWOUT,IQ(LCETA),ISTAT,22)    
0     1408.    35 + +KEEP, TOCETGO,    P=YTOCETA.   
      1409.    36 .       IOSPEC = 1    
0     1410.    37 + +KEEP, TOCETEND,   P=YTOCETA.   
      1411.    38 .       IOSPEC = 1 + MOPTIO(13)   
      1412.    39 .       IF (IOSPEC.EQ.2)  CALL NTRAN$ (LUNEW,9,9,22)  
0     1413.    40 + +KEEP, CETAREAD,   P=YFRCETA, D=FRCETA. 
      1414.    41 .       CALL NTRAN$ (LUNOLD,2,NWCEU,IQ(LREAD),NWCEIN,22)  
      1415.    42 .       IF   (NWCEIN.EQ.-2)         GO TO 44  
      1416.    43 .       IF   (NWCEIN.LE.0)          GO TO 42  
      1417.    44 .     
0     1418.    45 + +KEEP, FRCETGO,    P=YFRCETA.   
      1419.    46 .       IOSPEC = 1    
0     1420.    47 + +KEEP, FRCETEND,   P=YFRCETA.   
      1421.    48 .       IOSPEC = 1    
0     1422.    49 + +KEEP, IOFILXCE,   P=SERVICE, D=IOFILX. 
      1423.    50 .       IF (IOSPEC.NE.2)       GO TO 98   
      1424.    51 . C  -  CALL NTRAN$ (LUN,9,9,22)  done in YTOCEX  
      1425.    52 .       IOTON = 2 
      1426.    53 .       GO TO 98  
      1427.    54 .     

   88 PATCHY    ================================================== P=MUNO*    D=BLANKDEK  1 ============================

      1428.     0 + +DECK,BLANKDEK. 
0     1429.     1-+ +SELF.                       Machine patch for UNIVAC FORTRAN 77    
      1430.     2 + +USE, F77.  
      1431.     3 + +USE, B36, B36M.    
      1432.     4 + +USE, A4.   
      1433.     5 + +USE, LG, TZERO.    
      1434.     6 + +USE, ASCIINT.     Internal character repres. in ASCII  
      1435.     7 + +USE, ATTACHOPT.       Activate code for  +PAM, T=ATTACH    
      1436.     8 + +USE, INCHCHIN.    Read CCH-parameter from IQREAD (P=SERVAUX, D=INCHCH) 
      1437.     9 + +USE, IOVPACK.  
      1438.    10 + +USE, IOVPACK, D=FIXED, T=INHIBIT.  
      1439.    11 + +USE, *UNO. 
      1440.    12 + +USE, SPECUNI, SPECUNIC.    
      1441.    13 + +USE, INITRH.                Initialize Routine Header cards    

   89 PATCHY    ================================================== P=MUNO*    D=USEMAINS  1 ============================

      1442.     0 + +DECK, USEMAINS,   P=MUNO*, T=JOIN. 
      1443.     1 + +USE, MAINUNI, D=.  
0     1444.     2 + +KEEP, MAINALL,    P=MAINS. 
      1445.     3 .       CALL UNIOPT   
0     1446.     4 + +KEEP, YPATCHY2,   P=MAINS. 
      1447.     5 .       CALL UNIOPT   

   90 PATCHY    ================================================== P=MVAX*    D=          1 ============================

      1448.     0 + +PATCH, MVAX*.  
0     1449.     1 + +KEEP, KDPKCMP2.    
      1450.     2 .       PARAMETER      (KDPOST=25,KDBLIN=32,KDMARK=0, KDSUB=63,JPOSIG=1)  
0     1451.     3 + +KEEP, PLOAD3,     P=PLOAD, D=. 
      1452.     4 .       CALL SBYT  (0,KDEOD(2),25,8)  
0     1453.     5 + +KEEP, PEND34,     P=PEND.  
      1454.     6 .    34 IF ((JM.NE.2).AND.(JM.NE.7))  GO TO 35    
      1455.     7 .       IF (MOPTIO(24).NE.0)          GO TO 35    
      1456.     8 .       LUN = IQ(LASM+5)  
      1457.     9 .       WRITE (LUN,9735)  
      1458.    10 .  9735 FORMAT (8X,4H.END)    
      1459.    11 .       NCASM = NCASM + 1 
      1460.    12 .    35 IF (NCASM.EQ.0)        GO TO 37   
0     1461.    13 + +KEEP, JARTPX1,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1462.    14 .       PARAMETER   ( NBLANK = '20202000'X )  
0     1463.    15 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1464.    16 .       MM(2) = IT .AND. 255  
      1465.    17 .       IF (MM(2).EQ.43)       GO TO 21   
0     1466.    18 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1467.    19 .       MM(1) = JIOR (MM(2), NBLANK)  
0     1468.    20 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
      1469.    21 .       MM(2) = IT .AND. 255  
      1470.    22 .       IF (MM(2).EQ.43)       GO TO 21   
0     1471.    23 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1472.    24 .       JVAL = JIAND (MV(JCH),255)    
0     1473.    25 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1474.    26 .       MV(JCH) = JIAND (MV(JCH), 'FFFFFFDF'X)    
0     1475.    27 + +KEEP, IOFILXDT.    
      1476.    28 .       CLOSE (UNIT=LUN)  
0     1477.    29 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1478.    30 .       READ (LUNPAM,8000,END=41) MV  
1  90                                                              P=MVAX*    D=          2                     PAGE  20

      1479.    31 + +KEEP, KDNEXTFP,   P=SERVICE.   
      1480.    32 .  9001 FORMAT (' y> ',$) 
0     1481.    33 + +KEEP, KDNEXTTE, P=SERVICE. 
      1482.    34 .       IF (JIAND(KKK(J),'FF000000'X).NE.'20000000'X)  THEN   
0     1483.    35 + +KEEP, KDNEXTSE, P=SERVICE. 
      1484.    36 .       KKK(J) = JIAND(KKK(J),  '00FFFFFF'X)  
0     1485.    37 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1486.    38 .       STOP 99   
0     1487.    39 + +KEEP, SPACEPAT.    
      1488.    40 .      +,            ISPACE(25000),LAST   
0     1489.    41 + +KEEP, SPACEAUX.    
      1490.    42 .      +,            LOCALS(40),ISPACE(20000),LAST    
0     1491.    43-+ +SELF.     ----    FOR CETA I/O    ---- 
      1492.    44 + +USE, CETAFJCL. 
0     1493.    45 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1494.    46 .       DATA  INICET /180,  8,4,0,0,0,       8,4,0,0,0,   1,255/  
0     1495.    47 + +KEEP, TOCETUPK,   P=YTOCETA, D=TOCETA. 
      1496.    48 .       CALL UPKBYT(KARD(1),1,MWK(1),NCH,IPAKKD(1))   
0     1497.    49 + +KEEP, TOCETPK,    P=YTOCETA, D=TOCETA. 
      1498.    50 .       CALL PKBYT  (IQ(LSTART),IQ(LCETA),1,NCHCEU,IPAKCE(1)) 
0     1499.    51 + +KEEP, FRCETUPK,   P=YFRCETA, D=FRCETA. 
      1500.    52 .       CALL UPKBYT (IQ(LREAD),1,IQ(LTAKE),NCHCEU,IPAKCE(1))  
0     1501.    53 + +KEEP, IOFILXCE,   P=SERVICE, D=IOFILX. 
      1502.    54 .       CLOSE (LUN)   
      1503.    55 .       IOTON = 7 
      1504.    56 .       GO TO 98  

   91 PATCHY    ================================================== P=MVAX*    D=BLANKDEK  1 ============================

      1505.     0 + +DECK,BLANKDEK. 
0     1506.     1-+ +SELF.                       Machine patch for VAX  
      1507.     2 + +USE, HOK, T=INH.   
      1508.     3 + +USE, F77.  
      1509.     4 + +USE, B32.  
      1510.     5 + +USE, A4.   
      1511.     6 + +USE, HEX.  
      1512.     7 + +USE, LG, T8VAX.    
      1513.     8 + +USE, HOLLAPO.  
      1514.     9 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
      1515.    10 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1516.    11 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1517.    12 + +USE, FORCELOA.              Fix problem with sequential library    
      1518.    13 + +USE, TYPINCET.              YTOCETA to know the deck type for tabs 
      1519.    14 + +USE, PROMPTIN.              Prompting for TTP  
      1520.    15 + +USE, CVFORLOW.              Accept lower case on C/C   
      1521.    16 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
      1522.    17 + +USE, IOVPACK.  
      1523.    18 + +USE, IOVPACK, D=FIXED, T=INH.  
      1524.    19 + +USE, CHREAD.                Character READ  faster than Hollerith  
      1525.    20 + +USE, CHWRITE, IF=F77.       Character WRITE faster than Hollerith  
      1526.    21 + +USE, *VAX.                  Hydra Pilot    
      1527.    22 + +USE, SPECVAX.  

   92 PATCHY    ================================================== P=MVMI*    D=          1 ============================

      1528.     0 + +PATCH, MVMI*.  
0     1529.     1 + +KEEP, PREADY6,    P=PINIT, D=PREADY.   
      1530.     2 .       CALL UCTOH1 ( 
      1531.     3 .      + '+-CDECK  ID>, +.-;DECK  ID>, +.--/*DECK ID>, +. */---'  
      1532.     4 .      +, MWKX(1),60) 
0     1533.     5 + +KEEP, KDPKCMP2.    
      1534.     6 .       PARAMETER      (KDPOST=25,KDBLIN=32,KDMARK=0, KDSUB=63,JPOSIG=1)  
0     1535.     7 + +KEEP, PLOAD3,     P=PLOAD, D=. 
      1536.     8 .       CALL SBYT  (0,KDEOD(2),25,8)  
0     1537.     9 + +KEEP, JARTPX1,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1538.    10 .       PARAMETER   ( NBLANK = '20202000'X )  
0     1539.    11 + +KEEP, JARTPX4,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1540.    12 .       MM(2) = IT .AND. 255  
      1541.    13 .       IF (MM(2).EQ.43)       GO TO 21   
0     1542.    14 + +KEEP, JARTPX7,    P=SERVAUX, D=JARTPX, IF=JARTYPQU.    
      1543.    15 .       MM(1) = JIOR (MM(2), NBLANK)  
0     1544.    16 + +KEEP, JARTYP4,    P=SERVICE, D=JARTYP, IF=JARTYPQU.    
      1545.    17 .       MM(2) = IT .AND. 255  
      1546.    18 .       IF (MM(2).EQ.43)       GO TO 21   
0     1547.    19 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP. 
      1548.    20 .       JVAL = JIAND (MV(JCH),255)    
0     1549.    21 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP. 
      1550.    22 .       MV(JCH) = JIAND (MV(JCH), 'FFFFFFDF'X)    
0     1551.    23 + +KEEP, IOFILXDT.    
      1552.    24 .       CLOSE (UNIT=LUN)  
0     1553.    25 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1554.    26 .       READ (LUNPAM,8000,END=41) MV  
1  92                                                              P=MVMI*    D=          2                     PAGE  21

      1555.    27 + +KEEP, KDNEXTFP,   P=SERVICE.   
      1556.    28 .  9001 FORMAT (' y> ',$) 
0     1557.    29 + +KEEP, KDNEXTTE, P=SERVICE. 
      1558.    30 .       IF (JIAND(KKK(J),'FF000000'X).NE.'20000000'X)  THEN   
0     1559.    31 + +KEEP, KDNEXTSE, P=SERVICE. 
      1560.    32 .       KKK(J) = JIAND(KKK(J),  '00FFFFFF'X)  
0     1561.    33 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      1562.    34 .       STOP 99   
0     1563.    35 + +KEEP, SPACEPAT.    
      1564.    36 .      +,            ISPACE(25000),LAST   
0     1565.    37 + +KEEP, SPACEAUX.    
      1566.    38 .      +,            LOCALS(40),ISPACE(20000),LAST    
0     1567.    39-+ +SELF.     ----    FOR CETA I/O    ---- 
      1568.    40 + +USE, CETAFJCL. 
      1569.    41 + +USE, CETA2TO, CETA2FR. 
0     1570.    42 + +KEEP, CETUPINI,   P=YFRCETA, D=CETUP.  
      1571.    43 .       DATA  INICET /180,  8,4,0,0,0,       8,4,0,0,0,   1,255/  
0     1572.    44 + +KEEP, TOCETUPK,   P=YTOCETA, D=TOCETA. 
      1573.    45 .       CALL UPKBYT(KARD(1),1,MWK(1),NCH,IPAKKD(1))   
0     1574.    46 + +KEEP, TOCETPK,    P=YTOCETA, D=TOCETA. 
      1575.    47 .       CALL PKBYT  (IQ(LSTART),IQ(LCETA),1,NCHCEU,IPAKCE(1)) 
0     1576.    48 + +KEEP, FRCETUPK,   P=YFRCETA, D=FRCETA. 
      1577.    49 .       CALL UPKBYT (IQ(LREAD),1,IQ(LTAKE),NCHCEU,IPAKCE(1))  
0     1578.    50 + +KEEP, IOFILXCE,   P=SERVICE, D=IOFILX. 
      1579.    51 .       CLOSE (LUN)   
      1580.    52 .       IOTON = 7 
      1581.    53 .       GO TO 98  

   93 PATCHY    ================================================== P=MVMI*    D=BLANKDEK  1 ============================

      1582.     0 + +DECK,BLANKDEK. 
0     1583.     1-+ +SELF.                       Machine patch for VAX / MIPS   
      1584.     2 + +USE, HOK, T=INH.   
      1585.     3 + +USE, F77.  
      1586.     4 + +USE, B32.  
      1587.     5 + +USE, A4.   
      1588.     6 + +USE, HEX.  
      1589.     7 + +USE, LG, T8VAX.    
      1590.     8 + +USE, HOLLAPO.  
      1591.     9 + +USE, ATTACHOPT.             Activate code for  +PAM, T=ATTACH  
      1592.    10 + +USE, ASCIINT.               Internal character repres. in ASCII    
      1593.    11 + +USE, LUNPREM.               IQREAD + IQPRNT pre-set by Main program    
      1594.    12 + +USE, FORCELOA.              Fix problem with sequential library    
      1595.    13 + +USE, TYPINCET.              YTOCETA to know the deck type for tabs 
      1596.    14 + +USE, PROMPTIN.              Prompting for TTP  
      1597.    15 + +USE, CVFORLOW.              Accept lower case on C/C   
      1598.    16 + +USE, JARTYPQU.              Fast test for + in JARTYP/JARTPX   
      1599.    17 + +USE, IOVPACK.  
      1600.    18 + +USE, IOVPACK, D=FIXED, T=INH.  
      1601.    19 + +USE, CHREAD.                Character READ  faster than Hollerith  
      1602.    20 + +USE, CHWRITE.               Character WRITE faster than Hollerith  
      1603.    21 + +USE, *VMI.                  Hydra Pilot    
      1604.    22 + +USE, INITRH.                Initialize Routine Header cards    

   94 PATCHY    ================================================== P=A4       D=          1 ============================

      1605.     0 + +PATCH, A4. 
0     1606.     1 + +KEEP, DPLINE.  
      1607.     2 .       COMMON /DPLINE/LTK,NWTK, KIMAPR(3), KIMA(20), KIMAPS(9)   
0     1608.     3 + +KEEP, DEPMSG1,    P=DEPART, D=DEPMSG.  
      1609.     4 .       EQUIVALENCE    (KIMA2(1),KIMA(3)),   (KIMA3(1),KIMA(5))   
      1610.     5 .      +,              (KIMA4(1),KIMA(6)),   (KIMA5(1),KIMA(10))  
      1611.     6 .      +,              (KIMA6,   KIMA(15)),  (KIMA7,   KIMA(18))  
      1612.     7 .      +,              (KIMACT,  KIMA(16)),  (KIMA8(1),KIMA(19))  
      1613.     8 .       DIMENSION    MSGMIS(3), MSGBPD(5), MSGURF(4)  
0     1614.     9 + +KEEP, DEPMSG2,    P=DEPART, D=DEPMSG.  
      1615.    10 .       DATA  MSGMIS /4HMISS,4HING ,4HZ=  /   
      1616.    11 .       DATA  MSGBPD /4H    ,4HBY P,4H=   ,4H    ,4H  D=/ 
      1617.    12 .       DATA  MSGURF /4H****,4H    ,4H* U/,4HREF /    
      1618.    13 .     
      1619.    14 .       DATA  MSGBIF /4HBY I,4HF   /  
      1620.    15 .       DATA  MSGDEL /4HDELE,4HTED /  
      1621.    16 .       DATA  MSGCLA /4HCLAS,4HH LV/  
      1622.    17 .       DATA  MSGSTA /4H****,4H****/  
0     1623.    18 + +KEEP, HEADFMT. 
      1624.    19 .  9001 FORMAT                (1H1,I4,61X,3H P=,2A4,3H D=,2A4,1X,I2,  
      1625.    20 .      F21X,4HPAGE,I4/1X) 
      1626.    21 .  9002 FORMAT (1X/1X,I4,A5,A4,2X,50(1H=),3H P=,2A4,3H D=,2A4,4H  1 , 
      1627.    22 .      F28(1H=)/1X)   
      1628.    23 .  9003 FORMAT   (1H1,I4,A5,A4,2X,50(1H=),3H P=,2A4,3H D=,2A4,4H  1 , 
      1629.    24 .      F19(1H=),5H PAGE,I4/1X)    
0     1630.    25 + +KEEP, FRCETA3,    P=YFRCETA, D=FRCETA. 
      1631.    26 .       IF (NCH.GE.77)         GO TO 39   
      1632.    27 .       NWKD = (NCH-1)/4 + 1  
      1633.    28 .       IF (NCH.NE. 4*NWKD)    GO TO 39   
      1634.    29 .     
1  94                                                              P=A4       D=          2                     PAGE  22

      1635.    30 + +KEEP, YLISEX2,    P=YLIST, D=YLISEX.   
      1636.    31 .       DATA  NSEQEJ /4HQEJE,4HCT  /  
0     1637.    32 + +KEEP, AUXINIDA,   P=AUXINI, D=AUXINI.  
      1638.    33 .       DATA  MMTITL / 4H*TIT,4HLE* / 
0     1639.    34 + +KEEP, AUXINIDA,   P=AUXINI.    
      1640.    35 .       DATA  MMTITL / 4H*TIT,4HLE* / 

   95 PATCHY    ================================================== P=A4       D=BLANKDEK  1 ============================

      1641.     0 + +DECK,BLANKDEK. 
      1642.     1 + +USE, NOTA8M.   

   96 PATCHY    ================================================== P=A5       D=          1 ============================

      1643.     0 + +PATCH, A5. 
0     1644.     1 + +KEEP, DPLINE.  
      1645.     2 .       COMMON /DPLINE/LTK,NWTK, KIMAPR(2), KIMA(16), KIMAPS(7)   
0     1646.     3 + +KEEP, DEPMSG1,    P=DEPART, D=DEPMSG.  
      1647.     4 .       EQUIVALENCE    (KIMA2(1),KIMA(3)),   (KIMA3(1),KIMA(5))   
      1648.     5 .      +,              (KIMA4(1),KIMA(5)),   (KIMA5(1),KIMA(9))   
      1649.     6 .      +,              (KIMA6,   KIMA(11)),  (KIMA7,   KIMA(14))  
      1650.     7 .      +,              (KIMACT,  KIMA(13)),  (KIMA8(1),KIMA(15))  
      1651.     8 .       DIMENSION    MSGMIS(2), MSGBPD(4), MSGURF(3)  
0     1652.     9 + +KEEP, DEPMSG2,    P=DEPART, D=DEPMSG.  
      1653.    10 .       DATA  MSGMIS /5HMISSI, 5HNG Z=/   
      1654.    11 .       DATA  MSGBPD /5H    B, 5HY P= , 5H     , 5H   D=/ 
      1655.    12 .       DATA  MSGURF /5H**** , 5H   * , 5HU/REF/  
      1656.    13 .     
      1657.    14 .       DATA  MSGBIF /5HBY IF, 5H     /   
      1658.    15 .       DATA  MSGDEL /5HDELET, 5HED   /   
      1659.    16 .       DATA  MSGCLA /5HCLASH, 5H LV  /   
      1660.    17 .       DATA  MSGSTA /5H*****, 5H***  /   
0     1661.    18 + +KEEP, HEADFMT. 
      1662.    19 .  9001 FORMAT            (1H1,I4,61X,3H P=,A5,A4,2HD=,A5,A4,I2,  
      1663.    20 .      F21X,4HPAGE,I4/1X) 
      1664.    21 .  9002 FORMAT(1X/1X,I4,A6,A5,50(1H=),3H P=,A5,A4,2HD=,2A5,2H1 ,  
      1665.    22 .      F28(1H=)/1X)   
      1666.    23 .  9003 FORMAT  (1H1,I4,A6,A5,50(1H=),3H P=,A5,A4,2HD=,2A5,2H1 ,  
      1667.    24 .      F19(1H=),5H PAGE,I4/1X)    
0     1668.    25 + +KEEP, FRCETA3,    P=YFRCETA, D=FRCETA. 
      1669.    26 .       IF (NCH.GE.76)         GO TO 39   
      1670.    27 .       NWKD = (NCH-1)/5 + 1  
      1671.    28 .       IF (NCH.NE. 5*NWKD)    GO TO 39   
      1672.    29 .     

   97 PATCHY    ================================================== P=A5       D=BLANKDEK  1 ============================

      1673.     0 + +DECK,BLANKDEK. 
      1674.     1 + +USE, A5M.  
      1675.     2 + +USE, NOTA8M.   

   98 PATCHY    ================================================== P=A6       D=          1 ============================

      1676.     0 + +PATCH, A6. 
0     1677.     1 + +KEEP, DPLINE.  
      1678.     2 .       COMMON /DPLINE/LTK,NWTK, KIMAPR(2), KIMA(14), KIMAPS(6)   
0     1679.     3 + +KEEP, DEPMSG1,    P=DEPART, D=DEPMSG.  
      1680.     4 .       EQUIVALENCE    (KIMA2(1),KIMA(3)),   (KIMA3(1),KIMA(5))   
      1681.     5 .      +,              (KIMA4(1),KIMA(5)),   (KIMA5(1),KIMA(8))   
      1682.     6 .      +,              (KIMA6,   KIMA(10)),  (KIMA7,   KIMA(12))  
      1683.     7 .      +,              (KIMACT,  KIMA(11)),  (KIMA8(1),KIMA(13))  
      1684.     8 .       DIMENSION    MSGMIS(2), MSGBPD(4), MSGURF(3)  
0     1685.     9 + +KEEP, DEPMSG2,    P=DEPART, D=DEPMSG.  
      1686.    10 .       DATA  MSGMIS /6HMISSIN, 6HG Z=  / 
      1687.    11 .       DATA  MSGBPD /6H    BY, 6H P=   , 6H      , 6HD=    / 
      1688.    12 .       DATA  MSGURF /6H****  , 6H  * U/, 6HREF   /   
      1689.    13 .     
      1690.    14 .       DATA  MSGBIF /6HBY IF , 6H      / 
      1691.    15 .       DATA  MSGDEL /6HDELETE, 6HD     / 
      1692.    16 .       DATA  MSGCLA /6HCLASH , 6HLV    / 
      1693.    17 .       DATA  MSGSTA /6H******, 6H**    / 
0     1694.    18 + +KEEP, HEADFMT. 
      1695.    19 .  9001 FORMAT            (1H1,I4,61X,3H P=,A6,A3,2HD=,A6,A3,I2,  
      1696.    20 .      F21X,4HPAGE,I4/1X) 
      1697.    21 .  9002 FORMAT(1X/1X,I4,A7,A4,50(1H=),3H P=,A6,A3,2HD=,A6,A4,2H1 ,    
      1698.    22 .      F28(1H=)/1X)   
      1699.    23 .  9003 FORMAT  (1H1,I4,A7,A4,50(1H=),3H P=,A6,A3,2HD=,A6,A4,2H1 ,    
      1700.    24 .      F19(1H=),5H PAGE,I4/1X)    
0     1701.    25 + +KEEP, FRCETA3,    P=YFRCETA, D=FRCETA. 
      1702.    26 .       IF (NCH.GE.79)         GO TO 39   
      1703.    27 .       NWKD = (NCH-1)/6 + 1  
      1704.    28 .       IF (NCH.NE. 6*NWKD)    GO TO 39   
      1705.    29 .     

   99 PATCHY    ================================================== P=A6       D=BLANKDEK  1 ============================

      1706.     0 + +DECK,BLANKDEK. 
      1707.     1 + +USE, A5M, A6M. 
      1708.     2 + +USE, NOTA8M.   

  100 PATCHY    ================================================== P=A8       D=          1 ============================

      1709.     0 + +PATCH, A8. 
1 100                                                              P=A8       D=          2                     PAGE  23

      1710.     1 + +KEEP, IQCCEQU. 
      1711.     2 .                                  EQUIVALENCE  (IQMSQ(1), IQCC(2), IQ(5))    
0     1712.     3 + +KEEP, DPLINE.  
      1713.     4 .       COMMON /DPLINE/LTK,NWTK, KIMAPR(1), KIMA(10), KIMAPS(5)   
0     1714.     5 + +KEEP, DEPMSG1,    P=DEPART, D=DEPMSG.  
      1715.     6 .       EQUIVALENCE    (KIMA2(1),KIMA(2)),   (KIMA3(1),KIMA(3))   
      1716.     7 .      +,              (KIMA4(1),KIMA(4)),   (KIMA5(1),KIMA(6))   
      1717.     8 .      +,              (KIMA6,   KIMA(8)),   (KIMA7,   KIMA(9))   
      1718.     9 .      +,              (KIMACT,  KIMA(8)),   (KIMA8(1),KIMA(10))  
      1719.    10 .       DIMENSION    MSGMIS(2), MSGBPD(3), MSGURF(2)  
0     1720.    11 + +KEEP, DEPMSG2,    P=DEPART, D=DEPMSG.  
      1721.    12 .       DATA  MSGMIS /8HMISSING , 8HZ=      / 
      1722.    13 .       DATA  MSGBPD /8H    BY P, 8H=       , 8H  D=    / 
      1723.    14 .       DATA  MSGURF /8H****    , 8H* U/REF / 
      1724.    15 .     
      1725.    16 .       DATA  MSGBIF /8HBY IF   / 
      1726.    17 .       DATA  MSGDEL /8HDELETED / 
      1727.    18 .       DATA  MSGCLA /8HCLASH LV/ 
      1728.    19 .       DATA  MSGSTA /8H********/ 
0     1729.    20 + +KEEP, HEADFMT. 
      1730.    21 .  9001 FORMAT             (1H1,I4,61X,3H P=,A8,3H D=,A8,1X,I2,   
      1731.    22 .      F21X,4HPAGE,I4/1X) 
      1732.    23 .  9002 FORMAT (1X/1X,I4,A9,2X,50(1H=),3H P=,A8,3H D=,A8,4H  1 ,  
      1733.    24 .      F28(1H=)/1X)   
      1734.    25 .  9003 FORMAT   (1H1,I4,A9,2X,50(1H=),3H P=,A8,3H D=,A8,4H  1 ,  
      1735.    26 .      F19(1H=),5H PAGE,I4/1X)    
0     1736.    27 + +KEEP, FRCETA3,    P=YFRCETA, D=FRCETA. 
      1737.    28 .       IF (NCH.GE.73)         GO TO 39   
      1738.    29 .       NWKD = (NCH-1)/8 + 1  
      1739.    30 .       IF (NCH.NE. 8*NWKD)    GO TO 39   
      1740.    31 .     

  101 PATCHY    ================================================== P=A8       D=BLANKDEK  1 ============================

      1741.     0 + +DECK,BLANKDEK. 
      1742.     1 + +USE, A5M, A6M, A8M.    

  102 PATCHY    ================================================== P=A10      D=          1 ============================

      1743.     0 + +PATCH, A10.    
0     1744.     1 + +KEEP, IQCCEQU. 
      1745.     2 .                                  EQUIVALENCE  (IQMSQ(1), IQCC(2), IQ(4))    
0     1746.     3 + +KEEP, DPLINE.  
      1747.     4 .       COMMON /DPLINE/LTK,NWTK, KIMAPR(1), KIMA(8),  KIMAPS(4)   
0     1748.     5 + +KEEP, DEPMSG1,    P=DEPART, D=DEPMSG.  
      1749.     6 .       EQUIVALENCE    (KIMA2(1),KIMA(2)),   (KIMA3(1),KIMA(3))   
      1750.     7 .      +,              (KIMA4(1),KIMA(3)),   (KIMA5(1),KIMA(5))   
      1751.     8 .      +,              (KIMA6,   KIMA(6)),   (KIMA7,   KIMA(7))   
      1752.     9 .      +,              (KIMACT,  KIMA(7)),   (KIMA8(1),KIMA(8))   
      1753.    10 .       DIMENSION    MSGMIS(1), MSGBPD(2), MSGURF(2)  
0     1754.    11 + +KEEP, DEPMSG2,    P=DEPART, D=DEPMSG.  
      1755.    12 .       DATA  MSGMIS /10HMISSING Z=/  
      1756.    13 .       DATA  MSGBPD /10H    BY P= ,10H        D=/    
      1757.    14 .       DATA  MSGURF /10H****    * ,10HU/REF     /    
      1758.    15 .     
      1759.    16 .       DATA  MSGBIF /8HBY IF     /   
      1760.    17 .       DATA  MSGDEL /8HDELETED   /   
      1761.    18 .       DATA  MSGCLA /8HCLASH LV  /   
      1762.    19 .       DATA  MSGSTA /8H********  /   
0     1763.    20 + +KEEP, HEADFMT. 
      1764.    21 .  9001 FORMAT         (1H1,I4,61X,3H P=,A9,2HD=,A9,I2,21X,4HPAGE,I4/1X)  
      1765.    22 .  9002 FORMAT (1H0,I4,A11,50(1H=),3H P=,A9,2HD=,A10,2H1 ,28(1H=)/1X) 
      1766.    23 .  9003 FORMAT (1H1,I4,A11,50(1H=),3H P=,A9,2HD=,A10,2H1 ,19(1H=),    
      1767.    24 .      F5H PAGE,I4/1X)    
0     1768.    25 + +KEEP, FRCETA3,    P=YFRCETA, D=FRCETA. 
      1769.    26 .       IF (NCH.GE.71)         GO TO 39   
      1770.    27 .       NWKD = (NCH-1)/10 + 1 
      1771.    28 .       IF (NCH.NE.10*NWKD)    GO TO 39   
      1772.    29 .     

  103 PATCHY    ================================================== P=A10      D=BLANKDEK  1 ============================

      1773.     0 + +DECK,BLANKDEK. 
      1774.     1 + +USE, A5M, A6M, A8M.    

  104 PATCHY    ================================================== P=NOTA8M   D=          1 ============================

      1775.     0 + +PATCH, NOTA8M. 
0     1776.     1 + +KEEP, IQCCEQU. 
      1777.     2 .                                  EQUIVALENCE  (IQMSQ(1), IQCC(3), IQ(6))    
0     1778.     3 + +KEEP, EEQIDAR. 
      1779.     4 .       DIMENSION      IDD(2),             IDP(2),             IDF(2) 
      1780.     5 .       EQUIVALENCE   
      1781.     6 .      +       (IDD(1),IDARRV(1)), (IDP(1),IDARRV(3)), (IDF(1),IDARRV(5)) 
0     1782.     7 + +KEEP, EEQIDOLD.    
      1783.     8 .       DIMENSION      IDD(2),             IDP(2),             IDF(2) 
      1784.     9 .       EQUIVALENCE   
      1785.    10 .      +       (IDD(1),IDOLDV(1)), (IDP(1),IDOLDV(3)), (IDF(1),IDOLDV(5)) 
0     1786.    11 + +KEEP, EEQIDNEW.    
      1787.    12 .       DIMENSION      IDD(2),             IDP(2),             IDF(2) 
      1788.    13 .       EQUIVALENCE   
      1789.    14 .      +       (IDD(1),IDNEWV(1)), (IDP(1),IDNEWV(3)), (IDF(1),IDNEWV(5)) 
1 105 PATCHY    ================================================== P=HOLLAPO  D=          1 =================== PAGE  24

      1790.     0 + +PATCH, HOLLAPO.    
0     1791.     1 + +KEEP, DEPMSG2,    P=DEPART, D=DEPMSG.  
      1792.     2 .       DATA  MSGMIS / 'MISSING Z=' / 
      1793.     3 .       DATA  MSGBPD / '    BY P=         D=' /   
      1794.     4 .       DATA  MSGURF / '****    * U/REF'/ 
      1795.     5 .     
      1796.     6 .       DATA  MSGBIF / 'BY IF   ' /   
      1797.     7 .       DATA  MSGDEL / 'DELETED ' /   
      1798.     8 .       DATA  MSGCLA / 'CLASH LV' /   
      1799.     9 .       DATA  MSGSTA / '********' /   
0     1800.    10 + +KEEP, YLISEX2,    P=YLIST, D=YLISEX.   
      1801.    11 .       DATA  NSEQEJ / 'QEJECT  ' /   
0     1802.    12 + +KEEP, AUXINIDA,   P=AUXINI, D=.    
      1803.    13 .       DATA  MMTITL / '*TITLE* ' /   
0     1804.    14 + +KEEP, IOFILE2,    P=SERVICE, D=IOFILE. 
      1805.    15 .       DATA ACTION/'HOLD  ','RESUME','EOF   ','REWIND','ATTACH','DETACH' 
      1806.    16 .      +,           'EOFREW','CLOSE ' /   

  106 PATCHY    ================================================== P=DOMQAUGM D=          1 ============================

      1807.     0 + +PATCH, DOMQAUGM,  T=JOIN.  
0     1808.     1 + +KEEP, ROLLEX,     P=RUN, D=DOSPEC. 
      1809.     2 .       NQRESV = LQTOL - LQWORK - NVGARB(3)   
      1810.     3 .       IF (NQRESV.GE.0)       GO TO 25   
      1811.     4 .       IQUEST(1) = 0 
      1812.     5 .       CALL MQAUGM   
      1813.     6 .       NQRESV = 0    
      1814.     7 .       IF (IQUEST(1).EQ.0)    GO TO 24   
      1815.     8 .       CALL MQGARB   
      1816.     9 .       NVGARB(4) = NVGARB(4) + 1 

  107 PATCHY    ================================================== P=ASCILOW  D=          1 ============================

      1817.     0 + +PATCH, ASCILOW.    
0     1818.     1 + +KEEP, CETUPSMA,   P=YFRCETA, D=CETUP.  
      1819.     2 .       DO 24 J=1,26  
      1820.     3 .       IQ(LORGI+J)    = J + 64   
      1821.     4 .    24 IQ(LORGI+J+64) = J + 96   
      1822.     5 .     
0     1823.     6 + +KEEP, CCTOUPDE,   P=SERVICE, D=CCTOUP, IF=A4.  
      1824.     7 . C-                  MASKU = Z'20 000000'    
      1825.     8 .       PARAMETER    (MASKU = 536870912)  
0     1826.     9 + +KEEP, CCTOUP12,   P=SERVICE, D=CCTOUP. 
      1827.    10 .       IF (JVAL.GE.91)        GO TO 49   
      1828.    11 .       IF (JVAL.LT.65)        GO TO 49   
0     1829.    12 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP, IF=A4.  
      1830.    13 .       MV(JCH) = IOR (MV(JCH), MASKU)    

  108 PATCHY    ================================================== P=ASCILOW  D=BLANKDEK  1 ============================

      1831.     0 + +DECK,BLANKDEK. 
      1832.     1 + +USE, ASCIINT.  
0     1833.     2-+ +SELF.     FOR MACHINES WITH INTERNAL ASCII CHARACTER REPRESENTATION    
0     1834.     3-+ +SELF.     WORKING COMPLETELY IN LOWER CASE 

  109 PATCHY    ================================================== P=ASCIINT  D=          1 ============================

      1835.     0 + +PATCH, ASCIINT.    
0     1836.     1 + +KEEP, CETUPSMA,   P=YFRCETA, D=CETUP.  
      1837.     2 .       DO 24 J=1,26  
      1838.     3 .    24 IQ(LORGI+J+64) = IQ(LORGI+J) + 32 
      1839.     4 .     
0     1840.     5 + +KEEP, CETUPMIS,   P=YFRCETA, D=CETUP.  
      1841.     6 .       IQ(LORGI+61) =  92    
      1842.     7 .       IQ(LORGI+64) =  37    
      1843.     8 .       IQ(LORGI+91) = 123    
      1844.     9 .       IQ(LORGI+92) = 124    
      1845.    10 .       IQ(LORGI+93) = 125    
      1846.    11 .       IQ(LORGI+94) = 126    
      1847.    12 .       IQ(LORGI+95) =  96    
      1848.    13 .     
0     1849.    14 + +KEEP, CETUPCCO,   P=YFRCETA, D=CETUP.  
      1850.    15 .       DO 28 J=1,31  
      1851.    16 .    28 IQ(LORGI+J+192) = J   
      1852.    17 .       IQ(LORGI+224)   = 127 
      1853.    18 .     
0     1854.    19 + +KEEP, CCTOUPDE,   P=SERVICE, D=CCTOUP, IF=A4.  
      1855.    20 . C-                  MASKU = Z'DF FFFFFF'    
      1856.    21 .       PARAMETER    (MASKU = -536870913) 
0     1857.    22 + +KEEP, CCTOUP12,   P=SERVICE, D=CCTOUP. 
      1858.    23 .       IF (JVAL.LT.97)        GO TO 49   
      1859.    24 .       IF (JVAL.GE.123)       GO TO 49   
0     1860.    25 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP, IF=A4.  
      1861.    26 .       MV(JCH) = IAND (MV(JCH),MASKU)    

  110 PATCHY    ================================================== P=ASCIINT  D=BLANKDEK  1 ============================

      1862.     0 + +DECK,BLANKDEK. 
1 110                                                              P=ASCIINT  D=BLANKDEK  2                     PAGE  25

      1863.     1-+ +SELF.     FOR MACHINES WITH INTERNAL ASCII CHARACTER REPRESENTATION    

  111 PATCHY    ================================================== P=EBCDINT  D=          1 ============================

      1864.     0 + +PATCH, EBCDINT.    
0     1865.     1 + +KEEP, CETUPSMA,   P=YFRCETA, D=CETUP.  
      1866.     2 .       DO 24 J=1,26  
      1867.     3 .    24 IQ(LORGI+J+64) = IQ(LORGI+J) - 64 
      1868.     4 .     
0     1869.     5 + +KEEP, CETUPMIS,   P=YFRCETA, D=CETUP.      AS IN THE IBM BOOKS 
      1870.     6 .       IQ(LORGI+61) = 224    
      1871.     7 .       IQ(LORGI+62) =  95    
      1872.     8 .       IQ(LORGI+64) = 108    
      1873.     9 .       IQ(LORGI+91) = 192    
      1874.    10 .       IQ(LORGI+92) =  79    
      1875.    11 .       IQ(LORGI+93) = 208    
      1876.    12 .       IQ(LORGI+94) = 161    
      1877.    13 .       IQ(LORGI+95) = 121    
      1878.    14 .     
0     1879.    15 + +KEEP, CETUPMIS,   P=YFRCETA, D=CETUP, IF=CERNWYL.   used at CERN WYLBUR    
      1880.    16 .       IQ(LORGI+61) = 224    
      1881.    17 .       IQ(LORGI+64) = 108    
      1882.    18 .       IQ(LORGI+91) = 139    
      1883.    19 .       IQ(LORGI+92) =  79    
      1884.    20 .       IQ(LORGI+93) = 155    
      1885.    21 .       IQ(LORGI+94) =  95    
      1886.    22 .       IQ(LORGI+95) = 121    
      1887.    23 .     
0     1888.    24 + +KEEP, CETUPCCO,   P=YFRCETA, D=CETUP.  
      1889.    25 .       DO 28 J=1,36  
      1890.    26 .    28 IQ(LORGI+J+192) = J   
      1891.    27 .     
0     1892.    28 + +KEEP, TOSETUMC,   P=YTOCETA, D=TOSETU. 
      1893.    29 .       IQ(LTOCE+139) = 91    
      1894.    30 .       IQ(LTOCE+250) = 92    
      1895.    31 .       IQ(LTOCE+155) = 93    
      1896.    32 .       IQ(LTOCE+83)  = 62    
      1897.    33 .     
0     1898.    34 + +KEEP, TOSETUMC,   P=YTOCETA, D=TOSETU, IF=CERNWYL. 
      1899.    35 .       IQ(LTOCE+192) = 91    
      1900.    36 .       IQ(LTOCE+250) = 92    
      1901.    37 .       IQ(LTOCE+208) = 93    
      1902.    38 .       IQ(LTOCE+161) = 94    
      1903.    39 .     
0     1904.    40 + +KEEP, CCTOUPDE,   P=SERVICE, D=CCTOUP, IF=A4.  
      1905.    41 . C-  -               MASKU = Z'40000000' 
      1906.    42 .       PARAMETER    (MASKU = 1073741824) 
0     1907.    43 + +KEEP, CCTOUP12,   P=SERVICE, D=CCTOUP. 
      1908.    44 .       IF (JVAL.GE.170)       GO TO 49   
      1909.    45 .       IF (JVAL.LT.129)       GO TO 49   
      1910.    46 .       IF (JVAL.LT.138)       GO TO 24   
      1911.    47 .       IF (JVAL.LT.145)       GO TO 49   
      1912.    48 .       IF (JVAL.LT.154)       GO TO 24   
      1913.    49 .       IF (JVAL.LT.162)       GO TO 49   
0     1914.    50 + +KEEP, CCTOUP24,   P=SERVICE, D=CCTOUP, IF=A4.  
      1915.    51 .       MV(JCH) = IOR (MV(JCH), MASKU)    
0     1916.    52 + +KEEP, KDNEXTTE, P=SERVICE. 
      1917.    53 .       IF (IAND(KKK(J),255).NE.64)  THEN 

  112 PATCHY    ================================================== P=EBCDINT  D=BLANKDEK  1 ============================

      1918.     0 + +DECK,BLANKDEK. 
0     1919.     1-+ +SELF.     FOR MACHINES WITH INTERNAL EBCDIC CHARACTER REPRESENTATION   

  113 PATCHY    ================================================== P=LUNPREM  D=          1 ============================

      1920.     0 + +PATCH, LUNPREM.    
0     1921.     1 + +KEEP, PINIT1,     P=PINIT. 
      1922.     2 .       DATA  IISET  / 4HSET  /   
0     1923.     3 + +KEEP, PINIT2,     P=PINIT. 
      1924.     4 .       LAST  = IISET 
      1925.     5 .       IQLOG = IQPRNT    
      1926.     6 .       ISAVE = IQREAD    
0     1927.     7 + +KEEP, PINIT3,     P=PINIT. 
      1928.     8 .       IQREAD = ISAVE    
0     1929.     9 + +KEEP, AUXINI2,    P=AUXINI.    
      1930.    10 .       DATA  IISET  / 4HSET  /   
      1931.    11 .     
      1932.    12 .       LAST  = IISET 
      1933.    13 .       IQLOG = IQPRNT    
      1934.    14 .       ISAVE = IQREAD    
0     1935.    15 + +KEEP, AUXINI3,    P=AUXINI.    
      1936.    16 .       IQREAD = ISAVE    

  114 PATCHY    ================================================== P=LUNPREM  D=BLANKDEK  1 ============================

      1937.     0 + +DECK,BLANKDEK. 
1 114                                                              P=LUNPREM  D=BLANKDEK  2                     PAGE  26

      1938.     1-+ +SELF.     FOR MACHINES WITH IQREAD + IQPRNT PRE-SET BY THE MAIN PROGRAM    

  115 PATCHY    ================================================== P=FORCELOA D=          1 ============================

      1939.     0 + +PATCH, FORCELOA,  T=JOIN.     FOR MACHINES WITH SEQUENTIAL 'LIBRARIES' 
0     1940.     1 + +KEEP, PLOADEC,    P=PLOAD, D=. 
      1941.     2 .       EXTERNAL     QABEND, RQTELL, IOTYPE   
0     1942.     3 + +KEEP, PLOAD9,     P=PLOAD, D=. 
      1943.     4 .       IF (KDNWT.NE.0)        RETURN 
      1944.     5 .       CALL QFATAL (QABEND,RQTELL,IOTYPE)    

  116 PATCHY    ================================================== P=IOXPACK  D=          1 ============================

      1945.     0 + +PATCH, IOXPACK.    
0     1946.     1 + +KEEP, FORXEOF. 
      1947.     2 .       LOGICAL      XEOF 
0     1948.     3 + +KEEP, FORXRDIN.    
      1949.     4 .       LOGICAL      XEOF, XRDIN  
0     1950.     5 + +KEEP, READFULL.    
      1951.     6 .       CALL XREADB (LUNUSE,IQ(LINBIN+1),510) 
      1952.     7 .       IF (XEOF(LUNUSE))      GO TO 81   
      1953.     8 .       IQ(LINBIN)= IXLONG (LUNUSE)   
0     1954.     9 + +KEEP, READSHRT.    
      1955.    10 . C     CALL XREADB (LUNUSE,IQ(LINBIN+1),2)                                A8M    
      1956.    11 .       CALL XREADB (LUNUSE,IQ(LINBIN+1),3)                               -A8M    
      1957.    12 .       IF (XEOF(LUNUSE))      GO TO 81   
0     1958.    13 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1959.    14 .       READ (LUNPAM,8000)  MV    
      1960.    15 .       IF (XEOF(LUNPAM))      GO TO 41   
0     1961.    16 + +KEEP, CETAREAD,   P=YFRCETA, D=FRCETA. 
      1962.    17 .       CALL XREADB (LUNOLD,IQ(LREAD),NWCEIN) 
      1963.    18 .       IF   (XEOF(LUNOLD))         GO TO 44  
      1964.    19 .       IF   (XRDIN(LUNOLD))        GO TO 42  
      1965.    20 .       NWCEIN = IXLONG (LUNOLD)  
      1966.    21 .     

  117 PATCHY    ================================================== P=IOFORTR  D=          1 ============================

      1967.     0 + +PATCH, IOFORTR,   T=JOIN.  
0     1968.     1 + +KEEP, READFULL.    
      1969.     2 .       READ (LUNUSE,END=81) N,(IQ(J+LINBIN),J=1,N)   
      1970.     3 .       IQ(LINBIN) = N    
0     1971.     4 + +KEEP, READSHRT.    
      1972.     5 . C     READ (LUNUSE,END=81) (IQ(J+LINBIN-1),J=1,3)                        A8M    
      1973.     6 .       READ (LUNUSE,END=81) (IQ(J+LINBIN-1),J=1,4)                       -A8M    
0     1974.     7 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      1975.     8 .       READ (LUNPAM,8000,END=41) MV  

  118 PATCHY    ================================================== P=IOVPACK  D=          1 ============================

      1976.     0 + +PATCH, IOVPACK.    
0     1977.     1 + +KEEP, READFULL, IF=LG. 
      1978.     2 .       J = 510   
      1979.     3 .       CALL XINB (LUNUSE,IQ(LINBIN+1),J) 
      1980.     4 .       IF   (J.EQ.0)          GO TO 81   
      1981.     5 .       IF   (J.LT.0)          GO TO 80   
      1982.     6 .       IQ(LINBIN) = J    
0     1983.     7 + +KEEP, READFULL.    
      1984.     8 .       J = 511   
      1985.     9 .       CALL XINBF (LUNUSE,IQ(LINBIN+1),J)    
      1986.    10 .       IF   (J.EQ.0)          GO TO 81   
      1987.    11 .       IF   (J.LT.0)          GO TO 80   
      1988.    12 .       IQ(LINBIN) = J    
0     1989.    13 + +KEEP, READSHRT, IF=LG. 
      1990.    14 .       J = 3 
      1991.    15 .       CALL XINB (LUNUSE,IQ(LINBIN+1),J) 
      1992.    16 .       IF   (J.EQ.0)          GO TO 81   
      1993.    17 .       IF   (J.LT.0)          GO TO 80   
0     1994.    18 + +KEEP, READSHRT.    
      1995.    19 .       J = 3 
      1996.    20 .       CALL XINBF (LUNUSE,IQ(LINBIN+1),J)    
      1997.    21 .       IF   (J.EQ.0)          GO TO 81   
      1998.    22 .       IF   (J.LT.0)          GO TO 80   
0     1999.    23 + +KEEP, DPMIX6,     P=DEPART, D=DPMIX.   
      2000.    24 .       CALL XOUTCF (LUNASM,KIMAV(1),NW)  
0     2001.    25 + +KEEP, DPLIST7,    P=DEPART, D=DPLIST.  
      2002.    26 .       CALL XOUTCF (IQPRNT,KIMAV(1),NW)  
0     2003.    27 + +KEEP, YTOBCD6,    P=YTOBCD, D=YBCDEX.  
      2004.    28 .       CALL XOUTCF (LUNEW,KIMA(1),NWTK)  
0     2005.    29 + +KEEP, YTOBCD7,    P=YTOBCD, D=YBCDEX.  
      2006.    30 .       CALL XOUTCF (LUNPDH,KIMA(1),NWTK) 
0     2007.    31 + +KEEP, POPOFF2,    P=POPOFF, D=POPOFF, IF=LG.   
      2008.    32 .       CALL XOUTB (LUNEW,IQ(LA+1),IQ(LA))    
1 118                                                              P=IOVPACK  D=          2                     PAGE  27

      2009.    33 + +KEEP, POPOFF2,    P=POPOFF, D=POPOFF.  
      2010.    34 .       CALL XOUTBF (LUNEW,IQ(LA+1),IQ(LA))   
0     2011.    35 + +KEEP, POPOFF9,    P=POPOFF, D=POPOFF, IF=LG.   
      2012.    36 .       CALL XOUTB (LUNEW,MWK(12),MWK(11))    
0     2013.    37 + +KEEP, POPOFF9,    P=POPOFF, D=POPOFF.  
      2014.    38 .       CALL XOUTBF (LUNEW,MWK(12),MWK(11))   
0     2015.    39 + +KEEP, YSFIND7,    P=YSEARCH, D=YSFIND. 
      2016.    40 .       CALL XOUTCF (LUNEW,MWK(1),NWTK)   
0     2017.    41 + +KEEP, KDNEXTR,    P=SERVICE, D=KDNEXT. 
      2018.    42 .       J = KDNWT 
      2019.    43 .       CALL XINCF (LUNPAM,MV(1),J)   
      2020.    44 .       IF   (J.EQ.0)          GO TO 41   
      2021.    45 .       IF   (J.LT.0)          GO TO 40   

  119 PATCHY    ================================================== P=IOVPACK  D=BLANKDEK  1 ============================

      2022.     0 + +DECK,BLANKDEK. 
      2023.     1 + +USE, IOERREX.  

  120 PATCHY    ================================================== P=IOVPACK  D=VARIAB    1 ============================

      2024.     0 + +DECK, VARIAB,     P=IOVPACK.   
0     2025.     1 + +KEEP, COMMENT,    T=DUMMY. 
      2026.     2 .     
      2027.     3 .       WRITE COMMANDS FOR LISTS  
      2028.     4 .       WHICH ARE OF VARIABLE LENGTH IF TAG 'FILL' IS NOT SELECTED    
      2029.     5 .     
0     2030.     6 + +KEEP, DPEXE7,     P=DEPART, D=DPEXE.   
      2031.     7 .       CALL XOUTCF (LUNASM,KIMA(1),NWTK) 
0     2032.     8 + +KEEP, DPEXEFM,    P=DEPART.    
0     2033.     9 + +KEEP, DPEXGO7,    P=DEPART, D=DPEXGO, IF=FILL. 
      2034.    10 .       CALL XOUTCF (LUNASM,KIMA(1),KDNWT)    
0     2035.    11 + +KEEP, DPEXGO7,    P=DEPART, D=DPEXGO.  
      2036.    12 .       CALL XOUTCF (LUNASM,KIMA(1),N)    
0     2037.    13 + +KEEP, DPEXGOFM,   P=DEPART, D=DPEXGO.  

  121 PATCHY    ================================================== P=IOVPACK  D=FIXED     1 ============================

      2038.     0 + +DECK, FIXED,      P=IOVPACK, T=JOIN.   
0     2039.     1 + +KEEP, COMMENT,    T=DUMMY. 
      2040.     2 .     
      2041.     3 .       WRITE COMMANDS FOR FIXED LENGTH LISTS 
      2042.     4 .     
0     2043.     5 + +KEEP, DPMIX2,     P=DEPART, D=DPMIX.   
      2044.     6 .       DATA  NKIMAX /22/                                                  A4 
      2045.     7 . C     DATA  NKIMAX /18/                                                  A5 
      2046.     8 . C     DATA  NKIMAX /15/                                                  A6 
      2047.     9 . C     DATA  NKIMAX /11/                                                  A8 
      2048.    10 . C     DATA  NKIMAX /9/                                                   A10    
0     2049.    11 + +KEEP, DPMIX7,     P=DEPART, D=DPMIX.   
      2050.    12 .       CALL XOUTCF (LUNASM,KIMAX(1),NKIMAX)  
0     2051.    13 + +KEEP, DPMIXFM,    P=DEPART, D=DPMIX.   
0     2052.    14 + +KEEP, DPLIST2,    P=DEPART, D=DPLIST.  
      2053.    15 .       DATA  NKIMAX /23/                                                  A4 
      2054.    16 . C     DATA  NKIMAX /18/                                                  A5 
      2055.    17 . C     DATA  NKIMAX /16/                                                  A6 
      2056.    18 . C     DATA  NKIMAX /11/                                                  A8 
      2057.    19 . C     DATA  NKIMAX /9/                                                   A10    
0     2058.    20 + +KEEP, DPLIST6,    P=DEPART, D=DPLIST.  
      2059.    21 .       CALL XOUTCF (IQPRNT,KIMAX(1),NKIMAX)  
0     2060.    22 + +KEEP, DPLISTFM,   P=DEPART, D=DPLIST.  

  122 PATCHY    ================================================== P=PCDE     D=          1 ============================

      2061.     0 + +PATCH, PCDE.   
0     2062.     1 + +KEEP, ARRCOM.  
      2063.     2 .       COMMON /ARRCOM/LUNPAM,NCHKD,NWKD,NCARDP,NAREOF,NSKIPR,KDHOLD(20)  
      2064.     3 .      +,              NTRUNC,IPROMU,IPROMI   
0     2065.     4 + +KEEP, ARRVRQ.  
      2066.     5 .       COMMON /ARRVRQ/MAFIL,MAPAT,MADEC,MAREAL,MAFLAT,MASKIP,MADEL   
      2067.     6 .      +,              MACHEK,MADRVS,MADRVI,MAPRE,  MSELF 
0     2068.     7 + +KEEP, CCHCH.   
      2069.     8 .       COMMON /CCHCH/ IFORPL,NOTHCC,MORGCC(6),MREPCC(6)  
0     2070.     9 + +KEEP, CCPARA.  
      2071.    10 .       COMMON /CCPARA/NCHCCD,NCHCCT,KARDCC(84),   JCCTYP,JCCPRE,JCCEND   
      2072.    11 .      +,              MCCPAR(120),NCCPAR,MXCCIF,JCCIFV,JCCBAD,JCCWK(4)   
      2073.    12 .      +,              JCCPP,JCCPD,JCCPZ,JCCPT,JCCPIF,JCCPC,JCCPN 
      2074.    13 .      +,              NCCPP,NCCPD,NCCPZ,NCCPT,NCCPIF,NCCPC,NCCPN 
0     2075.    14 + +KEEP, CCPARU.  
      2076.    15 .       COMMON /CCPARU/MCCTOU,JCCLOW,JCCTPX   
0     2077.    16 + +KEEP, CCTEXT.  
      2078.    17 .       COMMON /CCTEXT/NCCVEC,MCCVEC(28),MCCSW(29),NCCDFI,MCCDF(24)   
1 122                                                              P=PCDE     D=          2                     PAGE  28

      2079.    18 + +KEEP, CCTYPE.  
      2080.    19 .       COMMON /CCTYPE/MCCQUI,MCCPAM,MCCTIT,MCCPAT,MCCDEC,MCCDEF,MCCEOD   
      2081.    20 .      +,              MCCASM,MCCOPT,MCCUSE   
0     2082.    21 + +KEEP, COMCET.  
      2083.    22 .       COMMON /COMCET/INILEV,NWCEIN,NCHCEU,NWCEU 
      2084.    23 .      +,              NWCEBA,IPAKCE(5),IPAKKD(5),JPOSA1,MXINHO   
      2085.    24 .      +,              LCESAV(4)  
0     2086.    25 + +KEEP, CONST.   
      2087.    26 .       COMMON /CONST/ MPAK2(2),MPAK5(2),MPAK9(2),MPAK15(2),DAYTIM(3) 
      2088.    27 .      +,              NWNAME,NWSENM,NWSEN1,LARGE 
0     2089.    28 + +KEEP, DPWORK.  
      2090.    29 .       COMMON /DPWORK/JDPMKT(2),JDPMK(2),JDECKN,MMLEV,MMACT, LEAD(14)    
      2091.    30 .      +,              MTAIL(36),LTAIL(36), IDDEPP(2),IDDEPD(2),IDDEPZ(2) 
      2092.    31 .      +,              JNUMM,KNUMM(5), JDEC,KDEC(5), JNUM,KNUM(5) 
0     2093.    32 + +KEEP, EDTEXT.  
      2094.    33 .       COMMON /EDTEXT/NEDVEC,MEDVEC(22),MEDDF(22), JEDDEF,JEDREP 
0     2095.    34 + +KEEP, IOFCOM.  
      2096.    35 .       COMMON /IOFCOM/IOTALL,IOTOFF,IOTON,IOSPEC,IOPARF(5),IOMODE(12)    
0     2097.    36 + +KEEP, KDPKCMP1.    
      2098.    37 .       PARAMETER      (KDNWT=20, KDNWT1=19,KDNCHW=4, KDBITS=8)   
0     2099.    38 + +KEEP, KDPKCMP2.    
      2100.    39 .       PARAMETER      (KDPOST=1, KDBLIN=32,KDMARK=0, KDSUB=63,JPOSIG=25) 
0     2101.    40 + +KEEP, KDPKCM.  
      2102.    41.. +CDE,  KDPKCMP1.    
      2103.    42.. +CDE,  KDPKCMP2.    
      2104.    43 .       COMMON /KDPKCM/KDBLAN,KDEOD(2)    
0     2105.    44 + +KEEP, LUNSLN.  
      2106.    45 .       COMMON /LUNSLN/NSTRM,NBUFCI,LUNVL(3),LUNVN(9),NOPTVL(4),NCHCH(6)  
0     2107.    46 + +KEEP, MODTT.   
      2108.    47 .       COMMON /MODTT/ NMODTT,JMODTT(6),TEXTTT(10)    
0     2109.    48 + +KEEP, NAMES.   
      2110.    49 .       COMMON /NAMES/ NAMEP(4),NAMEH(4),NAMED(4),NAMEOR(4),NAMACT(4) 
0     2111.    50 + +KEEP, NUMVAL.  
      2112.    51 .       DIMENSION    NUMVAL(9)    
      2113.    52 .       EQUIVALENCE (NUMVAL(1),IQNUM(2))  
0     2114.    53 + +KEEP, CETAEQU. 
      2115.    54 .       EQUIVALENCE (LORGH,LQPRIV(1)), (LORGI,LQPRIV(2))  
      2116.    55 .      +,           (LXREF,LQPRIV(3)), (LTOCE,LQPRIV(4))  
      2117.    56 .      +,           (LCETA,LQPRIV(7)) 
0     2118.    57 + +KEEP, CETAEQ2. 
      2119.    58 .       EQUIVALENCE (LSTART,LCESAV(1)), (LEND, LCESAV(2)) 
      2120.    59 .      +,           (LSTORE,LCESAV(3)), (LTAKE,LCESAV(4)) 
0     2121.    60 + +KEEP, IQCC.    
      2122.    61 .                                  DIMENSION     IQMSQ(99),IQCC(99)   
      2123.    62.. +CDE, IQCCEQU.  

  123 PATCHY    ================================================== P=PCDE     D=WSPEL     1 ============================

      2124.     0 + +DECK, WSPEL.   
0     2125.     1 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2126.     2 .                                                   BASIC ELEMENTS, PATCHY    
0     2127.     3 + +KEEP, PY1. 
      2128.     4 .      +, KADRV(9), LEXD,LEXH,LEXP,LPAM,LDECO, LADRV(14)  
0     2129.     5 + +KEEP, PY2. 
      2130.     6 .      +, NVOPER(6),MOPTIO(31),JANSW,JCARD,NDECKR,NVUSEB(14),MEXDEC(6)    
0     2131.     7 + +KEEP, PY3. 
      2132.     8 .      +, NVINC(6),NVUTY(16),NVIMAT(6),NVACT(6),NVGARB(6),NVWARN(6)   
0     2133.     9 + +KEEP, PY4. 
      2134.    10 .      +, NVARRQ(6),NVARR(10),IDARRV(10),NVARRI(12),NVCCP(10) 
0     2135.    11 + +KEEP, PY5. 
      2136.    12 .      +, NVDEP(19),MDEPAR,NVDEPL(6),  MWK(80),MWKX(80)   
0     2137.    13 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2138.    14 .                                           ARRIVE/DEPART ELEMENTS, PATCHY    
0     2139.    15 + +KEEP, PY4A1.   
      2140.    16 .      +, JASK,JCWAIT,JCWDEL,LARMAT,LAREND,NCARR  
0     2141.    17 + +KEEP, PY4A2.   
      2142.    18 .      +, NVARR(10), IDARRV(8),JPROPD,MODPAM, NVARRI(11),LINBUF,NVCCP(10) 
0     2143.    19 + +KEEP, PY4A2I1. 
      2144.    20 .      +, NVARR(10), IDARRV(8),JPROPD,MODPAM, NVARRI(9),LARX,LARXE,LINBUF 
0     2145.    21 + +KEEP, PY4A2I2. 
      2146.    22 .      +, NVCCP(7),JARDO,JARWT,JARLEV 
0     2147.    23 + +KEEP, PY5D.    
      2148.    24 .      +, NVDEP(14),LDPMAT,JDPMAT,LDPACT,JDPACT,NDPLEV,MDEPAR, NVDEPL(6)  
0     2149.    25 + +KEEP, PY5W.    
      2150.    26 .      +, MWK(80),MWKX(80)    
1 123                                                              P=PCDE     D=WSPEL     2                     PAGE  29

      2151.    27 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2152.    28 .                                              BASIC ELEMENTS, AUXILIARIES    
0     2153.    29 + +KEEP, PX1. 
      2154.    30 .      +, KADRV(14),LADRV(11),LCCIX,LBUF,LLAST    
0     2155.    31 + +KEEP, PX2. 
      2156.    32 .      +, NVOPER(6),MOPTIO(31),JANSW,JCARD,NDECKR,NVUSEX(20)  
0     2157.    33 + +KEEP, PX3. 
      2158.    34 .      +, NVINC(6),NVUTY(17),IDEOF(9),NVPROX(6),LOGLVG,LOGLEV,NVWARX(6)   
0     2159.    35 + +KEEP, PX4. 
      2160.    36 .      +, NVOLDQ(6), NVOLD(10), IDOLDV(10), NVARRI(12), NVCCP(10) 
0     2161.    37 + +KEEP, PX5. 
      2162.    38 .      +, NVNEW(10), IDNEWV(10), NVNEWL(6),  MWK(80),MWKX(80) 
0     2163.    39 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2164.    40 .                                      ARRIVE/DEPART ELEMENTS, AUXILIARIES    
0     2165.    41 + +KEEP, PX4A1.   
      2166.    42 .      +, NVOLDQ(4),MVOLD1,MVOLDN,  NVOLD(7),NRTOLD,NROLD,MAXEOF  
0     2167.    43 + +KEEP, PX4A2.   
      2168.    44 .      +, IDOLDV(8),JPDOLD,JOLD, NVARRI(9),LARX,LARXE,LINBIN, NVCCP(10)   
0     2169.    45 + +KEEP, PX5D1.   
      2170.    46 .      +, NVNEW(7),NRTNEW,NRNEW,LLASTN, IDNEWV(8),JPDNEW,NDKNEW   
0     2171.    47 + +KEEP, PX5D2.   
      2172.    48 .      +, NVNEWL(3),NCDECK,JNEW,MODEPR,  MWK(80),MWKX(80) 

  124 PATCHY    ================================================== P=PCDE     D=WSP       1 ============================

      2173.     0 + +DECK, WSP. 
0     2174.     1 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2175.     2 .                                                        COMPOSITS, PATCHY    
0     2176.     3 + +KEEP, PY.  
      2177.     4.. +CDE,          Z=PY1.   
      2178.     5.. +CDE,          Z=PY2.   
      2179.     6.. +CDE,          Z=PY3.   
      2180.     7.. +CDE,          Z=PY4.   
      2181.     8.. +CDE,          Z=PY5.   
0     2182.     9 + +KEEP, PYA. 
      2183.    10.. +CDE,          Z=PY1.   
      2184.    11.. +CDE,          Z=PY2.   
      2185.    12.. +CDE,          Z=PY3.   
      2186.    13.. +CDE,          Z=PY4A1. 
      2187.    14.. +CDE,          Z=PY4A2. 
      2188.    15.. +CDE,          Z=PY5.   
0     2189.    16 + +KEEP, PYAI.    
      2190.    17.. +CDE,          Z=PY1.   
      2191.    18.. +CDE,          Z=PY2.   
      2192.    19.. +CDE,          Z=PY3.   
      2193.    20.. +CDE,          Z=PY4A1. 
      2194.    21.. +CDE,          Z=PY4A2I1.   
      2195.    22.. +CDE,          Z=PY4A2I2.   
      2196.    23.. +CDE,          Z=PY5.   
0     2197.    24 + +KEEP, PYD. 
      2198.    25.. +CDE,          Z=PY1.   
      2199.    26.. +CDE,          Z=PY2.   
      2200.    27.. +CDE,          Z=PY3.   
      2201.    28.. +CDE,          Z=PY4.   
      2202.    29.. +CDE,          Z=PY5D.  
      2203.    30.. +CDE,          Z=PY5W.  
0     2204.    31 + +KEEP, PYAD.    
      2205.    32.. +CDE,          Z=PY1.   
      2206.    33.. +CDE,          Z=PY2.   
      2207.    34.. +CDE,          Z=PY3.   
      2208.    35.. +CDE,          Z=PY4A1. 
      2209.    36.. +CDE,          Z=PY4A2. 
      2210.    37.. +CDE,          Z=PY5D.  
      2211.    38.. +CDE,          Z=PY5W.  
0     2212.    39 + +KEEP, PYAID.   
      2213.    40.. +CDE,          Z=PY1.   
      2214.    41.. +CDE,          Z=PY2.   
      2215.    42.. +CDE,          Z=PY3.   
      2216.    43.. +CDE,          Z=PY4A1. 
      2217.    44.. +CDE,          Z=PY4A2I1.   
      2218.    45.. +CDE,          Z=PY4A2I2.   
      2219.    46.. +CDE,          Z=PY5D.  
      2220.    47.. +CDE,          Z=PY5W.  

  125 PATCHY    ================================================== P=PCDE     D=WSPX      1 ============================

      2221.     0 + +DECK, WSPX.    
0     2222.     1 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2223.     2 .                                                   COMPOSITS, AUXILIARIES    
0     2224.     3 + +KEEP, PX.  
      2225.     4.. +CDE,          Z=PX1.   
      2226.     5.. +CDE,          Z=PX2.   
      2227.     6.. +CDE,          Z=PX3.   
      2228.     7.. +CDE,          Z=PX4.   
      2229.     8.. +CDE,          Z=PX5.   
1 125                                                              P=PCDE     D=WSPX      2                     PAGE  30

      2230.     9 + +KEEP, PXA. 
      2231.    10.. +CDE,          Z=PX1.   
      2232.    11.. +CDE,          Z=PX2.   
      2233.    12.. +CDE,          Z=PX3.   
      2234.    13.. +CDE,          Z=PX4A1. 
      2235.    14.. +CDE,          Z=PX4A2. 
      2236.    15.. +CDE,          Z=PX5.   
0     2237.    16 + +KEEP, PXD. 
      2238.    17.. +CDE,          Z=PX1.   
      2239.    18.. +CDE,          Z=PX2.   
      2240.    19.. +CDE,          Z=PX3.   
      2241.    20.. +CDE,          Z=PX4.   
      2242.    21.. +CDE,          Z=PX5D1. 
      2243.    22.. +CDE,          Z=PX5D2. 
0     2244.    23 + +KEEP, PXAD.    
      2245.    24.. +CDE,          Z=PX1.   
      2246.    25.. +CDE,          Z=PX2.   
      2247.    26.. +CDE,          Z=PX3.   
      2248.    27.. +CDE,          Z=PX4A1. 
      2249.    28.. +CDE,          Z=PX4A2. 
      2250.    29.. +CDE,          Z=PX5D1. 
      2251.    30.. +CDE,          Z=PX5D2. 

  126 PATCHY    ================================================== P=PCDE     D=WSPEQ     1 ============================

      2252.     0 + +DECK, WSPEQ.   
0     2253.     1 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2254.     2 .     
      2255.     3 .                                                             EQUIVALENCES    
      2256.     4 .     
0     2257.     5 + +KEEP, EEQCRA.  
      2258.     6 .       EQUIVALENCE(LPAST,LADRV(1)),  (LPCRA,LADRV(2)), (LDCRAB,LADRV(3)) 
0     2259.     7 + +KEEP, EEQLADR. 
      2260.     8 .       EQUIVALENCE(LSASM,LADRV(8)),  (LRBIG,LADRV(13)), (LRPAM,LADRV(14))    
0     2261.     9 + +KEEP, EEQACT.  
      2262.    10 .       EQUIVALENCE                  (KACTEX,NVACT(4))    
      2263.    11 .      +,                            (LACTEX,NVACT(5)), (LACDEL,NVACT(6)) 
0     2264.    12 + +KEEP, EEQINC.  
      2265.    13 .       EQUIVALENCE                  (INCSEQ,NVINC(1))    
      2266.    14 .      +,                            (INCACT,NVINC(2)), (INCMAT,NVINC(3)) 
0     2267.    15 + +KEEP, EEQLCR.  
      2268.    16 .       EQUIVALENCE (LCRP,NVUTY(3)),   (LCRH,NVUTY(4)),   (LCRD,NVUTY(5)) 
0     2269.    17 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2270.    18 .     
      2271.    19 .     
0     2272.    20 + +KEEP, EQLADR.  
      2273.    21 .      +,          (LSASM,LADRV(8)),  (LRBIG,LADRV(13)), (LRPAM,LADRV(14))    
0     2274.    22 + +KEEP, EQACT.   
      2275.    23 .      +,         (KACTEX,NVACT(4)), (LACTEX,NVACT(5)), (LACDEL,NVACT(6)) 
0     2276.    24 + +KEEP, EQINC.   
      2277.    25 .      +,         (INCSEQ,NVINC(1)), (INCACT,NVINC(2)), (INCMAT,NVINC(3)) 
0     2278.    26 + +KEEP, EQLCR.   
      2279.    27 .      +,           (LCRP,NVUTY(3)),   (LCRH,NVUTY(4)),   (LCRD,NVUTY(5)) 
0     2280.    28 + +KEEP, AWAY, T=D.            -------------------------------------------    
      2281.    29 .     
      2282.    30 .     
0     2283.    31 + +KEEP, EEQIDAR. 
      2284.    32 .       EQUIVALENCE  (IDD,IDARRV(1)),   (IDP,IDARRV(3)),   (IDF,IDARRV(5))    
0     2285.    33 + +KEEP, EEQIDOLD.    
      2286.    34 .       EQUIVALENCE  (IDD,IDOLDV(1)),   (IDP,IDOLDV(3)),   (IDF,IDOLDV(5))    
0     2287.    35 + +KEEP, EEQIDNEW.    
      2288.    36 .       EQUIVALENCE  (IDD,IDNEWV(1)),   (IDP,IDNEWV(3)),   (IDF,IDNEWV(5))    

  127 PATCHY    ================================================== P=PCDE     D=DEFAULTS  1 ============================

      2289.     0 + +DECK, DEFAULTS.    
      2290.     1 + +USE, HOK.         SELECT HOLLERITH STORAGE IS NORMAL   
      2291.     2 + +USE, JQPOSS, RQPOSS, ZQPOSS, ZQMPOSS, T=INHIBIT.   
0     2292.     3 + +KEEP, SPACEPAT.    
      2293.     4 .      +,            ISPACE(10000), LAST  
0     2294.     5 + +KEEP, SPACEAUX.    
      2295.     6 .      +,            LOCALS(40), ISPACE(9000), LAST   
0     2296.     7 + +KEEP, PEND34,     P=PEND.  
      2297.     8 .       IF (NDKASM.EQ.0)       GO TO 37   
0     2298.     9 + +KEEP, DEPMSG2,    P=DEPART, D=DEPMSG.  
      2299.    10 .       DATA  MSGMIS /10HMISSING Z=/  
      2300.    11 .       DATA  MSGBPD /20H    BY P=         D=/    
      2301.    12 .       DATA  MSGURF /15H****    * U/REF/ 
      2302.    13 .     
      2303.    14 .       DATA  MSGBIF / 8HBY IF   /    
      2304.    15 .       DATA  MSGDEL / 8HDELETED /    
      2305.    16 .       DATA  MSGCLA / 8HCLASH LV/    
      2306.    17 .       DATA  MSGSTA / 8H********/    
1 127                                                              P=PCDE     D=DEFAULTS  2                     PAGE  31

      2307.    18 + +KEEP, AUXINIDA,   P=AUXINI, D=.    
      2308.    19 .       DATA  MMTITL / 8H*TITLE*  /   
0     2309.    20 + +KEEP, IOFILE2,    P=SERVICE, D=IOFILE. 
      2310.    21 .       DATA ACTION/6HHOLD  ,6HRESUME,6HEOF   ,6HREWIND,6HATTACH,6HDETACH 
      2311.    22 .      +,           6HEOFREW,6HCLOSE  /   
0     2312.    23 + +KEEP, PABENDX,    P=SERVICE, D=PABEND. 
      2313.    24 .       CALL ABEND    
0     2314.    25 + +KEEP, MQINITPR.             KILL MQINIT PRINTING   
0     2315.    26 + +KEEP, QFATALRE.             KILL CHECK ON QFATAL   
0     2316.    27 + +KEEP, MQINITFA.    
0     2317.    28 + +KEEP, QTOFATAL.             DO NOT USE QFATAM  
      2318.    29 .       CALL QFATAL   
0     2319.    30 + +KEEP, MQINITNA.             KILL /QNATUR/  
0     2320.    31 + +KEEP, QNATUR.  

  128 PATCHY    ================================================== P=*ALT     D=          1 ============================

      2321.     0 + +PATCH, *ALT.                HYDRA Pilot for ALLIANT    
0     2322.     1 + +KEEP, QHEADP.  
      2323.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2324.     3 + +KEEP, Q$JBIT.  
      2325.     4 .       JBIT (IZW,IZP)     = IBITS (IZW,IZP-1,1)  
      2326.     5 .       JBYT (IZW,IZP,NZB) = IBITS (IZW,IZP-1,NZB)    
0     2327.     6 + +KEEP, Q$SBIT.  
      2328.     7 .       MSBIT0 (IZW,IZP)   = IAND (IZW, NOT(ISHFT(1,IZP-1)) ) 
      2329.     8 .       MSBIT1 (IZW,IZP)   = IOR  (IZW,     ISHFT(1,IZP-1)  ) 
      2330.     9 .       MSBIT (MZ,IZW,IZP) = IOR (IAND (IZW, NOT(ISHFT(1,IZP-1)) )    
      2331.    10 .      +                              , ISHFT(IAND(MZ,1),IZP-1))  
      2332.    11 .       MSBYT (MZ,IZW,IZP,NZB) = IOR (    
      2333.    12 .      +          IAND (IZW, NOT(ISHFT (ishft(NOT(0),-32+NZB), IZP-1)))   
      2334.    13 .      +        , ishft (ISHFT(MZ, 32-NZB), -33+IZP+NZB) )    
0     2335.    14 + +KEEP, Q$CBYT.  
      2336.    15 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = IOR (    
      2337.    16 .      +          IAND (IZW, NOT(ISHFT (ishft(NOT(0),-32+NZB), IZP-1)))   
      2338.    17 .      +        , ishft (ISHFT(ishft(MZ,-IZQ+1),32-NZB), -33+IZP+NZB) )   
0     2339.    18 + +KEEP, Q$JBYTET.    
      2340.    19 .       JBYTET (MZ,IZW,IZP,NZB) = IAND (MZ, IBITS(IZW,IZP-1,NZB)) 
      2341.    20 .       JBYTOR (MZ,IZW,IZP,NZB) = IOR  (MZ, IBITS(IZW,IZP-1,NZB)) 
      2342.    21 .       MBYTET (MZ,IZW,IZP,NZB) = IAND (IZW, NOT(ishft (  
      2343.    22 .      +                          ISHFT(NOT(MZ),32-NZB),-33+IZP+NZB)) )   
      2344.    23 .       MBYTOR (MZ,IZW,IZP,NZB) = IOR (IZW, ishft (   
      2345.    24 .      +                               ISHFT(MZ,32-NZB),-33+IZP+NZB) )    

  129 PATCHY    ================================================== P=*ALT     D=BLANKDEK  1 ============================

      2346.     0 + +DECK,BLANKDEK. 
      2347.     1 + +USE, QCDE, QMALT.  

  130 PATCHY    ================================================== P=*APO     D=          1 ============================

      2348.     0 + +PATCH, *APO.                HYDRA Pilot for APOLLO 
0     2349.     1 + +KEEP, QHEADP.  
      2350.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2351.     3 + +KEEP, RQTRAPDC.    
      2352.     4 .       EQUIVALENCE (LQFORR,IQUEST(13))   
0     2353.     5 + +KEEP, RQTRAPCA.    
      2354.     6 .       QUEST(2) = SETJMP (Q(LQFORR+4))   
0     2355.     7 + +KEEP, Q$ANDOR. 
      2356.     8 .       IAND (IZV,IZW) = AND (IZV, IZW)   
      2357.     9 .       IOR  (IZV,IZW) =  OR (IZV, IZW)   
      2358.    10 .       IEOR (IZV,IZW) = XOR (IZV, IZW)   
0     2359.    11-+ +SELF.    NOT  is standard on APOLLO    
0     2360.    12 + +KEEP, Q$SHIFT. 
      2361.    13 .       ISHFTL (IZW,NZB) = LSHFT (IZW, NZB)   
      2362.    14 .       ISHFTR (IZW,NZB) = RSHFT (IZW, NZB)   
0     2363.    15 + +KEEP, Q$JBIT, IF=-QMAPO10. 
      2364.    16 .       JBYT (IZW,IZP,NZB)= RSHFT (LSHFT(IZW,33-IZP-NZB), 32-NZB) 
0     2365.    17 + +KEEP, Q$SBIT, IF=-QMAPO10. 
      2366.    18 .       MSBIT0 (IZW,IZP)   = AND (IZW, NOT(LSHFT(1,IZP-1)) )  
      2367.    19 .       MSBIT1 (IZW,IZP)   = OR  (IZW,     LSHFT(1,IZP-1)  )  
      2368.    20 .       MSBIT (MZ,IZW,IZP) = OR (AND (IZW, NOT(LSHFT(1,IZP-1)) )  
      2369.    21 .      +                             , LSHFT(AND(MZ,1),IZP-1) )   
      2370.    22 .       MSBYT (MZ,IZW,IZP,NZB) = OR ( 
      2371.    23 .      +      AND (IZW, NOT(LSHFT (RSHFT(NOT(INT4(0)),32-NZB), IZP-1)))   
      2372.    24 .      +    , RSHFT (LSHFT(MZ,32-NZB), 33-IZP-NZB) )  
0     2373.    25 + +KEEP, Q$CBYT, IF=-QMAPO10. 
      2374.    26 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = OR ( 
      2375.    27 .      +      AND (IZW, NOT(LSHFT (RSHFT(NOT(INT4(0)),32-NZB), IZP-1)))   
      2376.    28 .      +    , RSHFT (LSHFT(RSHFT(MZ,IZQ-1),32-NZB), 33-IZP-NZB) ) 
0     2377.    29 + +KEEP, Q$JBYTET, IF=-QMAPO10.   
      2378.    30 .       JBYTET (MZ,IZW,IZP,NZB) = AND (MZ,    
      2379.    31 .      +                        RSHFT (LSHFT(IZW,33-IZP-NZB), 32-NZB) )   
      2380.    32 .       JBYTOR (MZ,IZW,IZP,NZB) = OR  (MZ,    
      2381.    33 .      +                        RSHFT (LSHFT(IZW,33-IZP-NZB), 32-NZB) )   
      2382.    34 .       MBYTET (MZ,IZW,IZP,NZB) = AND (IZW, NOT(RSHFT (   
1 130                                                              P=*APO     D=          2                     PAGE  32

      2383.    35 .      +                          LSHFT(NOT(MZ),32-NZB), 33-IZP-NZB)) )   
      2384.    36 .       MBYTOR (MZ,IZW,IZP,NZB) = OR (IZW, RSHFT (    
      2385.    37 .      +                               LSHFT(MZ,32-NZB), 33-IZP-NZB) )    

  131 PATCHY    ================================================== P=*APO     D=BLANKDEK  1 ============================

      2386.     0 + +DECK,BLANKDEK. 
      2387.     1 + +USE, QCDE, QMAPO.  

  132 PATCHY    ================================================== P=*CDCV    D=          1 ============================

      2388.     0 + +PATCH, *CDCV.               HYDRA Pilot for CDC, FORTRAN V (77)    
0     2389.     1 + +KEEP, QMACHFIX.    
      2390.     2 .       PARAMETER      (IQBITW=60, IQBITC=6, IQCHAW=10)   
0     2391.     3 + +KEEP, Q$ANDOR. 
      2392.     4 .       IAND (IZV,IZW) = IZV .AND. IZW    
      2393.     5 .       IOR  (IZV,IZW) = IZV .OR.  IZW    
      2394.     6 .       IEOR (IZV,IZW) = IZV .XOR. IZW    
      2395.     7 .       NOT (IZW)      = .NOT. IZW    
0     2396.     8 + +KEEP, Q$SHIFT. 
      2397.     9 .       ISHFTL (IZW,NZB) = SHIFT (IZW,NZB) .AND. MASK(60-NZB) 
      2398.    10 .       ISHFTR (IZW,NZB) = SHIFT (IZW.AND.MASK(60-NZB), 60-NZB)   
0     2399.    11 + +KEEP, Q$JBIT.  
      2400.    12 .       JBIT (IZW,IZP)     = SHIFT(IZW,61-IZP) .AND. .NOT.MASK(59)    
      2401.    13 .       JBYT (IZW,IZP,NZB) = SHIFT(IZW,61-IZP) .AND. .NOT.MASK(60-NZB)    
0     2402.    14 + +KEEP, Q$SBIT.  
      2403.    15 .       MSBIT0 (IZW,IZP)   = IZW .AND. .NOT.SHIFT(MASK(1),IZP)    
      2404.    16 .       MSBIT1 (IZW,IZP)   = IZW .OR.       SHIFT(MASK(1),IZP)    
      2405.    17 .       MSBIT (MZ,IZW,IZP) =(IZW .AND. .NOT.SHIFT(MASK(1),IZP))   
      2406.    18 .      +                  .OR. SHIFT(MZ .AND. .NOT.MASK(59),IZP-1)    
      2407.    19 .       MSBYT (MZ,IZW,IZP,NZB) = SHIFT (  
      2408.    20 .      +            (SHIFT(IZW,61-IZP-NZB) .AND. .NOT.MASK(NZB))  
      2409.    21 .      +         .OR.   (SHIFT (MZ,60-NZB) .AND. MASK(NZB)), IZP+NZB-1)   
0     2410.    22 + +KEEP, Q$CBYT.  
      2411.    23 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = SHIFT (  
      2412.    24 .      +            (SHIFT(IZW,61-IZP-NZB) .AND. .NOT.MASK(NZB))  
      2413.    25 .      +       .OR. (SHIFT (MZ,61-IZQ-NZB) .AND. MASK(NZB)), IZP+NZB-1)   
0     2414.    26 + +KEEP, Q$JBYTET.    
      2415.    27 .       JBYTET (MZ,IZW,IZP,NZB) = MZ .AND. SHIFT(IZW,61-IZP)  
      2416.    28 .      +                             .AND. .NOT.MASK(60-NZB)  
      2417.    29 .       JBYTOR (MZ,IZW,IZP,NZB) = MZ .OR. (SHIFT(IZW,61-IZP)  
      2418.    30 .      +                             .AND. .NOT.MASK(60-NZB) )    
      2419.    31 .       MBYTET (MZ,IZW,IZP,NZB) = IZW .AND.   
      2420.    32 .      +                          SHIFT (MZ .OR. MASK(60-NZB),IZP-1)  
      2421.    33 .       MBYTOR (MZ,IZW,IZP,NZB) = IZW .OR.    
      2422.    34 .      +                       SHIFT (MZ .AND. .NOT.MASK(60-NZB),IZP-1)   

  133 PATCHY    ================================================== P=*CDCV    D=BLANKDEK  1 ============================

      2423.     0 + +DECK,BLANKDEK. 
      2424.     1 + +USE, QCDE, QMCDCV, QMCDC.  

  134 PATCHY    ================================================== P=*FTN     D=          1 ============================

      2425.     0 + +PATCH, *FTN.                HYDRA Pilot for CDC 6/7000, system SCOPE   
0     2426.     1 + +KEEP, QMACHFIX.    
      2427.     2 .       PARAMETER      (IQBITW=60, IQBITC=6, IQCHAW=10)   
0     2428.     3 + +KEEP, Q$ANDOR. 
      2429.     4 .       IAND (IZV,IZW) = IZV .AND. IZW    
      2430.     5 .       IOR  (IZV,IZW) = IZV .OR.  IZW    
      2431.     6 .       IEOR (IZV,IZW) = IZV .XOR. IZW    
      2432.     7 .       NOT (IZW)      = .NOT. IZW    
0     2433.     8 + +KEEP, Q$SHIFT. 
      2434.     9 .       ISHFTL (IZW,NZB) = SHIFT (IZW,NZB) .AND. MASK(60-NZB) 
      2435.    10 .       ISHFTR (IZW,NZB) = SHIFT (IZW.AND.MASK(60-NZB), 60-NZB)   
0     2436.    11 + +KEEP, Q$JBIT.  
      2437.    12 .       JBIT (IZW,IZP)     = SHIFT(IZW,61-IZP) .AND. .NOT.MASK(59)    
      2438.    13 .       JBYT (IZW,IZP,NZB) = SHIFT(IZW,61-IZP) .AND. .NOT.MASK(60-NZB)    
0     2439.    14 + +KEEP, Q$SBIT.  
      2440.    15 .       MSBIT0 (IZW,IZP)   = IZW .AND. .NOT.SHIFT(MASK(1),IZP)    
      2441.    16 .       MSBIT1 (IZW,IZP)   = IZW .OR.       SHIFT(MASK(1),IZP)    
      2442.    17 .       MSBIT (MZ,IZW,IZP) =(IZW .AND. .NOT.SHIFT(MASK(1),IZP))   
      2443.    18 .      +                  .OR. SHIFT(MZ .AND. .NOT.MASK(59),IZP-1)    
      2444.    19 .       MSBYT (MZ,IZW,IZP,NZB) = SHIFT (  
      2445.    20 .      +            (SHIFT(IZW,61-IZP-NZB) .AND. .NOT.MASK(NZB))  
      2446.    21 .      +         .OR.   (SHIFT (MZ,60-NZB) .AND. MASK(NZB)), IZP+NZB-1)   
0     2447.    22 + +KEEP, Q$CBYT.  
      2448.    23 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = SHIFT (  
      2449.    24 .      +            (SHIFT(IZW,61-IZP-NZB) .AND. .NOT.MASK(NZB))  
      2450.    25 .      +       .OR. (SHIFT (MZ,61-IZQ-NZB) .AND. MASK(NZB)), IZP+NZB-1)   
0     2451.    26 + +KEEP, Q$JBYTET.    
      2452.    27 .       JBYTET (MZ,IZW,IZP,NZB) = MZ .AND. SHIFT(IZW,61-IZP)  
      2453.    28 .      +                             .AND. .NOT.MASK(60-NZB)  
      2454.    29 .       JBYTOR (MZ,IZW,IZP,NZB) = MZ .OR. (SHIFT(IZW,61-IZP)  
      2455.    30 .      +                             .AND. .NOT.MASK(60-NZB) )    
      2456.    31 .       MBYTET (MZ,IZW,IZP,NZB) = IZW .AND.   
      2457.    32 .      +                          SHIFT (MZ .OR. MASK(60-NZB),IZP-1)  
      2458.    33 .       MBYTOR (MZ,IZW,IZP,NZB) = IZW .OR.    
      2459.    34 .      +                       SHIFT (MZ .AND. .NOT.MASK(60-NZB),IZP-1)   
1 135 PATCHY    ================================================== P=*FTN     D=BLANKDEK  1 =================== PAGE  33

      2460.     0 + +DECK,BLANKDEK. 
      2461.     1 + +USE, QCDE, QMCDC.  

  136 PATCHY    ================================================== P=*CRU     D=          1 ============================

      2462.     0 + +PATCH, *CRU.                HYDRA Pilot for CRAY, system Unicos    

  137 PATCHY    ================================================== P=*CRU     D=BLANKDEK  1 ============================

      2463.     0 + +DECK,BLANKDEK. 
      2464.     1 + +USE, *CRAY, QMCRU. 

  138 PATCHY    ================================================== P=*CRAY    D=          1 ============================

      2465.     0 + +PATCH, *CRAY, T=JOIN.       HYDRA Pilot for CRAY   
0     2466.     1 + +KEEP, QHEADP.  
      2467.     2 .       COMMON /QHEADP/IQHEAD(10),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2468.     3 + +KEEP, QMACHFIX.    
      2469.     4 .       PARAMETER      (IQBITW=64, IQBITC=8, IQCHAW=8)    
0     2470.     5 + +KEEP, Q$ANDOR. 
      2471.     6 .       IAND (IZV,IZW) = IZV .AND. IZW    
      2472.     7 .       IOR  (IZV,IZW) = IZV .OR.  IZW    
      2473.     8 .       IEOR (IZV,IZW) = IZV .XOR. IZW    
      2474.     9 .       NOT (IZW)      = .NOT. IZW    
0     2475.    10 + +KEEP, Q$SHIFT. 
      2476.    11 .       ISHFTL (IZW,NZB) = SHIFTL (IZW, NZB)  
      2477.    12 .       ISHFTR (IZW,NZB) = SHIFTR (IZW, NZB)  
0     2478.    13 + +KEEP, Q$JBIT.  
      2479.    14 .       JBIT (IZW,IZP)     = SHIFTR(IZW,IZP-1) .AND. MASK(127)    
      2480.    15 .       JBYT (IZW,IZP,NZB) = SHIFTR(IZW,IZP-1) .AND. MASK(128-NZB)    
0     2481.    16 + +KEEP, Q$SBIT.  
      2482.    17 .       MSBIT0 (IZW,IZP)       =  IZW .AND. SHIFT(MASK(65),IZP)   
      2483.    18 .       MSBIT1 (IZW,IZP)       =  IZW .OR.  SHIFT(MASK(1), IZP)   
      2484.    19 .       MSBIT (MZ,IZW,IZP)     = (IZW .AND. SHIFT(MASK(65),IZP))  
      2485.    20 .      +                     .OR. SHIFT(MZ.AND.MASK(127),IZP-1)   
      2486.    21 .       MSBYT (MZ,IZW,IZP,NZB) = (IZW .AND. SHIFT(MASK(64-NZB),IZP-1))    
      2487.    22 .      +                       .OR. SHIFT(MZ.AND.MASK(128-NZB),IZP-1) 
0     2488.    23 + +KEEP, Q$CBYT.  
      2489.    24 .       MCBYT (MZ,IZQ,IZW,IZP,NZB)=(IZW.AND.SHIFT(MASK(64-NZB),IZP-1))    
      2490.    25 .      +         .OR. SHIFT(SHIFTR(MZ,IZQ-1).AND.MASK(128-NZB),IZP-1) 
0     2491.    26 + +KEEP, Q$JBYTET.    
      2492.    27 .       JBYTET (MZ,IZW,IZP,NZB) = MZ .AND. SHIFTR(IZW,IZP-1)  
      2493.    28 .      +                             .AND. MASK(128-NZB)  
      2494.    29 .       JBYTOR (MZ,IZW,IZP,NZB) = MZ .OR. (SHIFTR(IZW,IZP-1)  
      2495.    30 .      +                             .AND. MASK(128-NZB) )    
      2496.    31 .       MBYTET (MZ,IZW,IZP,NZB) = IZW .AND.   
      2497.    32 .      +                             SHIFT (MZ.OR. MASK(64-NZB), IZP-1)   
      2498.    33 .       MBYTOR (MZ,IZW,IZP,NZB) = IZW .OR.    
      2499.    34 .      +                             SHIFT (MZ.AND.MASK(128-NZB),IZP-1)   

  139 PATCHY    ================================================== P=*CRAY    D=BLANKDEK  1 ============================

      2500.     0 + +DECK,BLANKDEK. 
      2501.     1 + +USE, QCDE, QMCRY.  

  140 PATCHY    ================================================== P=*CVX     D=          1 ============================

      2502.     0 + +PATCH, *CVX.                HYDRA Pilot for CONVEX 
0     2503.     1 + +KEEP, QHEADP.  
      2504.     2 .       COMMON /QHEADP/IQHEAD(10),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2505.     3 + +KEEP, QMACHFIX.    
      2506.     4 .       PARAMETER      (IQBITW=64, IQBITC=8, IQCHAW=8)    
0     2507.     5 + +KEEP, Q$JBIT.  
      2508.     6 .       JBIT (IZW,IZP)     = IBITS (IZW,IZP-1,1)  
      2509.     7 .       JBYT (IZW,IZP,NZB) = IBITS (IZW,IZP-1,NZB)    
0     2510.     8 + +KEEP, Q$SBIT.  
      2511.     9 .       MSBIT0 (IZW,IZP)   = IBCLR (IZW,IZP-1)    
      2512.    10 .       MSBIT1 (IZW,IZP)   = IBSET (IZW,IZP-1)    
0     2513.    11 + +KEEP, Q$JBYTET.    
      2514.    12 .       JBYTET (MZ,IZW,IZP,NZB) = MZ .AND. IBITS(IZW,IZP-1,NZB)   
      2515.    13 .       JBYTOR (MZ,IZW,IZP,NZB) = MZ .OR.  IBITS(IZW,IZP-1,NZB)   

  141 PATCHY    ================================================== P=*CVX     D=BLANKDEK  1 ============================

      2516.     0 + +DECK,BLANKDEK. 
      2517.     1 + +USE, QCDE, QMCVX.  

  142 PATCHY    ================================================== P=*DGE     D=          1 ============================

      2518.     0 + +PATCH, *DGE.                HYDRA Pilot for DATA GENERAL MV ECLIPSE    
0     2519.     1 + +KEEP, QHEADP.  
      2520.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2521.     3 + +KEEP, QCARDL, T=NOLIST.    
      2522.     4 . C====================================================================   
0     2523.     5 + +KEEP, Q$JBIT.  
      2524.     6 .       JBIT (IZW,IZP)     = IBITS (IZW,IZP-1,1)  
      2525.     7 .       JBYT (IZW,IZP,NZB) = IBITS (IZW,IZP-1,NZB)    
1 142                                                              P=*DGE     D=          2                     PAGE  34

      2526.     8 + +KEEP, Q$SBIT.  
      2527.     9 .       MSBIT0 (IZW,IZP)   = IAND (IZW, NOT(ISHFT(1,IZP-1)) ) 
      2528.    10 .       MSBIT1 (IZW,IZP)   = IOR  (IZW,     ISHFT(1,IZP-1)  ) 
      2529.    11 .       MSBIT (MZ,IZW,IZP) = IOR (IAND (IZW, NOT(ISHFT(1,IZP-1)) )    
      2530.    12 .      +                              , ISHFT(IAND(MZ,1),IZP-1))  
      2531.    13 .       MSBYT (MZ,IZW,IZP,NZB) = IOR ( IAND (IZW, NOT(    
      2532.    14 .      +                   ISHFT (ISHFT(NOT(0),-32+NZB), IZP-1))) 
      2533.    15 .      +                     , ISHFT (ISHFT(MZ, 32-NZB), -33+IZP+NZB) )   
0     2534.    16 + +KEEP, Q$CBYT.  
      2535.    17 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = IOR ( IAND (IZW, NOT(    
      2536.    18 .      +                   ISHFT (ISHFT(NOT(0),-32+NZB), IZP-1))) 
      2537.    19 .      +        , ISHFT (ISHFT(ISHFT(MZ,-IZQ+1),32-NZB), -33+IZP+NZB) )   
0     2538.    20 + +KEEP, Q$JBYTET.    
      2539.    21 .       JBYTET (MZ,IZW,IZP,NZB) = IAND (MZ, IBITS(IZW,IZP-1,NZB)) 
      2540.    22 .       JBYTOR (MZ,IZW,IZP,NZB) = IOR  (MZ, IBITS(IZW,IZP-1,NZB)) 
      2541.    23 .       MBYTET (MZ,IZW,IZP,NZB) = IAND (IZW, NOT(ISHFT (  
      2542.    24 .      +                          ISHFT(NOT(MZ),32-NZB),-33+IZP+NZB)) )   
      2543.    25 .       MBYTOR (MZ,IZW,IZP,NZB) = IOR (IZW, ISHFT (   
      2544.    26 .      +                               ISHFT(MZ,32-NZB),-33+IZP+NZB) )    

  143 PATCHY    ================================================== P=*DGE     D=BLANKDEK  1 ============================

      2545.     0 + +DECK,BLANKDEK. 
      2546.     1 + +USE, QCDE, QMDGE.  

  144 PATCHY    ================================================== P=*HPX     D=          1 ============================

      2547.     0 + +PATCH, *HPX.                HYDRA Pilot for HP Unix    
0     2548.     1 + +KEEP, QHEADP.  
      2549.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2550.     3 + +KEEP, Q$JBIT.  
      2551.     4 .       JBIT (IZW,IZP)     = IBITS (IZW,IZP-1,1)  
      2552.     5 .       JBYT (IZW,IZP,NZB) = IBITS (IZW,IZP-1,NZB)    
0     2553.     6 + +KEEP, Q$SBIT.  
      2554.     7 .       MSBIT0 (IZW,IZP)   = IAND (IZW, NOT(ISHFT(1,IZP-1)) ) 
      2555.     8 .       MSBIT1 (IZW,IZP)   = IOR  (IZW,     ISHFT(1,IZP-1)  ) 
      2556.     9 .       MSBIT (MZ,IZW,IZP) = IOR (IAND (IZW, NOT(ISHFT(1,IZP-1)) )    
      2557.    10 .      +                              , ISHFT(IAND(MZ,1),IZP-1))  
      2558.    11 .       MSBYT (MZ,IZW,IZP,NZB) = IOR (    
      2559.    12 .      +          IAND (IZW, NOT(ISHFT (ishft(NOT(0),-32+NZB), IZP-1)))   
      2560.    13 .      +        , ishft (ISHFT(MZ, 32-NZB), -33+IZP+NZB) )    
0     2561.    14 + +KEEP, Q$CBYT.  
      2562.    15 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = IOR (    
      2563.    16 .      +          IAND (IZW, NOT(ISHFT (ishft(NOT(0),-32+NZB), IZP-1)))   
      2564.    17 .      +        , ishft (ISHFT(ishft(MZ,-IZQ+1),32-NZB), -33+IZP+NZB) )   
0     2565.    18 + +KEEP, Q$JBYTET.    
      2566.    19 .       JBYTET (MZ,IZW,IZP,NZB) = IAND (MZ, IBITS(IZW,IZP-1,NZB)) 
      2567.    20 .       JBYTOR (MZ,IZW,IZP,NZB) = IOR  (MZ, IBITS(IZW,IZP-1,NZB)) 
      2568.    21 .       MBYTET (MZ,IZW,IZP,NZB) = IAND (IZW, NOT(ishft (  
      2569.    22 .      +                          ISHFT(NOT(MZ),32-NZB),-33+IZP+NZB)) )   
      2570.    23 .       MBYTOR (MZ,IZW,IZP,NZB) = IOR (IZW, ishft (   
      2571.    24 .      +                               ISHFT(MZ,32-NZB),-33+IZP+NZB) )    

  145 PATCHY    ================================================== P=*HPX     D=BLANKDEK  1 ============================

      2572.     0 + +DECK,BLANKDEK. 
      2573.     1 + +USE, QCDE, QMHPX.  

  146 PATCHY    ================================================== P=*IBMVS   D=          1 ============================

      2574.     0 + +PATCH, *IBMVS.              HYDRA Pilot for IBM, VSFORT compiler   

  147 PATCHY    ================================================== P=*IBMVS   D=BLANKDEK  1 ============================

      2575.     0 + +DECK,BLANKDEK. 
      2576.     1 + +USE, *IBM. 
      2577.     2 + +USE, QMIBMVS.  

  148 PATCHY    ================================================== P=*IBMSI   D=          1 ============================

      2578.     0 + +PATCH, *IBMSI.              HYDRA Pilot for IBM, SIEMENS compiler  
0     2579.     1 + +KEEP, Q$ANDOR. 
      2580.     2 .       IAND (IZV,IZW) = LAND (IZV, IZW)  
      2581.     3 .       IOR  (IZV,IZW) =  LOR (IZV, IZW)  
      2582.     4 .       IEOR (IZV,IZW) = LXOR (IZV, IZW)  
      2583.     5 .       NOT (IZW)      = LCOMPL (IZW) 
0     2584.     6 + +KEEP, Q$SHIFT. 
      2585.     7 .       ISHFTL (IZW,NZB) = SHFTL (IZW, NZB)   
      2586.     8 .       ISHFTR (IZW,NZB) = SHFTR (IZW, NZB)   
0     2587.     9 + +KEEP, Q$JBIT.  
      2588.    10 .       JBIT (IZW,IZP)    = SHFTR (SHFTL(IZW,32-IZP), 31) 
      2589.    11 .       JBYT (IZW,IZP,NZB)= SHFTR (SHFTL(IZW,33-IZP-NZB), 32-NZB) 
0     2590.    12 + +KEEP, Q$SBIT.  
      2591.    13 .       MSBIT0 (IZW,IZP)   = LAND (IZW, LCOMPL(SHFTL(1,IZP-1)) )  
      2592.    14 .       MSBIT1 (IZW,IZP)   = LOR  (IZW,        SHFTL(1,IZP-1)  )  
      2593.    15 .       MSBIT (MZ,IZW,IZP) = LOR (LAND (IZW, LCOMPL(SHFTL(1,IZP-1)) ) 
      2594.    16 .      +                                 , SHFTL(LAND(MZ,1),IZP-1) )  
      2595.    17 .       MSBYT (MZ,IZW,IZP,NZB) = LOR ( LAND (IZW, LCOMPL( 
      2596.    18 .      +                         SHFTL (SHFTR(-1,32-NZB), IZP-1)))    
      2597.    19 .      +                       , SHFTR (SHFTL(MZ,32-NZB), 33-IZP-NZB) )   
0     2598.    20 + +KEEP, Q$CBYT.  
      2599.    21 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = LOR ( LAND (IZW, LCOMPL( 
      2600.    22 .      +                         SHFTL (SHFTR(-1,32-NZB), IZP-1)))    
      2601.    23 .      +          , SHFTR (SHFTL(SHFTR(MZ,IZQ-1),32-NZB), 33-IZP-NZB) )   
1 148                                                              P=*IBMSI   D=          2                     PAGE  35

      2602.    24 + +KEEP, Q$JBYTET.    
      2603.    25 .       JBYTET (MZ,IZW,IZP,NZB) = LAND (MZ,   
      2604.    26 .      +                        SHFTR (SHFTL(IZW,33-IZP-NZB), 32-NZB) )   
      2605.    27 .       JBYTOR (MZ,IZW,IZP,NZB) = LOR  (MZ,   
      2606.    28 .      +                        SHFTR (SHFTL(IZW,33-IZP-NZB), 32-NZB) )   
      2607.    29 .       MBYTET (MZ,IZW,IZP,NZB) = LAND (IZW, LCOMPL(SHFTR (   
      2608.    30 .      +                       SHFTL(LCOMPL(MZ),32-NZB), 33-IZP-NZB)) )   
      2609.    31 .       MBYTOR (MZ,IZW,IZP,NZB) = LOR (IZW, SHFTR (   
      2610.    32 .      +                               SHFTL(MZ,32-NZB), 33-IZP-NZB) )    

  149 PATCHY    ================================================== P=*IBMSI   D=BLANKDEK  1 ============================

      2611.     0 + +DECK,BLANKDEK. 
      2612.     1 + +USE, *IBM. 
      2613.     2 + +USE, QMIBMSI.  

  150 PATCHY    ================================================== P=*IBM4    D=          1 ============================

      2614.     0 + +PATCH, *IBM4.               HYDRA Pilot for IBM, FORTRAN 4 compiler    
0     2615.     1 + +KEEP, Q$ANDOR. 
      2616.     2 .       IAND (IZV,IZW) = LAND (IZV, IZW)  
      2617.     3 .       IOR  (IZV,IZW) =  LOR (IZV, IZW)  
      2618.     4 .       IEOR (IZV,IZW) = LXOR (IZV, IZW)  
      2619.     5 .       NOT (IZW)      = LCOMPL (IZW) 
0     2620.     6 + +KEEP, Q$SHIFT. 
      2621.     7 .       ISHFTL (IZW,NZB) = SHFTL (IZW, NZB)   
      2622.     8 .       ISHFTR (IZW,NZB) = SHFTR (IZW, NZB)   
0     2623.     9 + +KEEP, Q$JBIT.  
      2624.    10 .       JBIT (IZW,IZP)    = SHFTR (SHFTL(IZW,32-IZP), 31) 
      2625.    11 .       JBYT (IZW,IZP,NZB)= SHFTR (SHFTL(IZW,33-IZP-NZB), 32-NZB) 
0     2626.    12 + +KEEP, Q$SBIT.  
      2627.    13 .       MSBIT0 (IZW,IZP)   = LAND (IZW, LCOMPL(SHFTL(1,IZP-1)) )  
      2628.    14 .       MSBIT1 (IZW,IZP)   = LOR  (IZW,        SHFTL(1,IZP-1)  )  
      2629.    15 .       MSBIT (MZ,IZW,IZP) = LOR (LAND (IZW, LCOMPL(SHFTL(1,IZP-1)) ) 
      2630.    16 .      +                                 , SHFTL(LAND(MZ,1),IZP-1) )  
      2631.    17 .       MSBYT (MZ,IZW,IZP,NZB) = LOR ( LAND (IZW, LCOMPL( 
      2632.    18 .      +                         SHFTL (SHFTR(-1,32-NZB), IZP-1)))    
      2633.    19 .      +                       , SHFTR (SHFTL(MZ,32-NZB), 33-IZP-NZB) )   
0     2634.    20 + +KEEP, Q$CBYT.  
      2635.    21 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = LOR ( LAND (IZW, LCOMPL( 
      2636.    22 .      +                         SHFTL (SHFTR(-1,32-NZB), IZP-1)))    
      2637.    23 .      +          , SHFTR (SHFTL(SHFTR(MZ,IZQ-1),32-NZB), 33-IZP-NZB) )   
0     2638.    24 + +KEEP, Q$JBYTET.    
      2639.    25 .       JBYTET (MZ,IZW,IZP,NZB) = LAND (MZ,   
      2640.    26 .      +                        SHFTR (SHFTL(IZW,33-IZP-NZB), 32-NZB) )   
      2641.    27 .       JBYTOR (MZ,IZW,IZP,NZB) = LOR  (MZ,   
      2642.    28 .      +                        SHFTR (SHFTL(IZW,33-IZP-NZB), 32-NZB) )   
      2643.    29 .       MBYTET (MZ,IZW,IZP,NZB) = LAND (IZW, LCOMPL(SHFTR (   
      2644.    30 .      +                       SHFTL(LCOMPL(MZ),32-NZB), 33-IZP-NZB)) )   
      2645.    31 .       MBYTOR (MZ,IZW,IZP,NZB) = LOR (IZW, SHFTR (   
      2646.    32 .      +                               SHFTL(MZ,32-NZB), 33-IZP-NZB) )    
0     2647.    33 + +KEEP, QNORETN. 
      2648.    34 .       RETURN    

  151 PATCHY    ================================================== P=*IBM4    D=BLANKDEK  1 ============================

      2649.     0 + +DECK,BLANKDEK. 
      2650.     1 + +USE, *IBM. 
      2651.     2 + +USE, QMIBM4.   

  152 PATCHY    ================================================== P=*IBM     D=          1 ============================

      2652.     0 + +PATCH, *IBM.                HYDRA Pilot for IBM 360/370    
0     2653.     1 + +KEEP, QDIM.    
      2654.     2 .                          DIMENSION                 LQ(99), IQ(99), Q(99)    
0     2655.     3 + +KEEP, Q.        PAPER B ZQ       DYNAMIC STORE, PROCESSOR USAGE    
      2656.     4 .       PARAMETER      (IQBDRO=25, IQBMAR=26, IQBCRI=27, IQBSYS=31)   
      2657.     5 .       COMMON /QBITS/ IQDROP,IQMARK,IQCRIT,IQZIM,IQZIP,IQSYS 
      2658.     6 .                          DIMENSION    IQUEST(30)                              +Q
      2659.     7.. +CDE, QDIM. 
      2660.     8 .           EQUIVALENCE (QUEST(1),IQUEST(1)), (LQUSER(1),LQ(1),IQ(1),Q(1))      +Q
      2661.     9 .       COMMON //      QUEST(30),LQUSER(7),LQMAIN,LQSYS(24),LQPRIV(7) 
      2662.    10 .      +,              LQ1,LQ2,LQ3,LQ4,LQ5,LQ6,LQ7,LQSV,LQAN,LQDW,LQUP          +Q
0     2663.    11 + +KEEP, SQ.                        DYNAMIC STORE, SYSTEM USAGE   
      2664.    12 .       PARAMETER      (IQBDRO=25, IQBMAR=26, IQBCRI=27, IQBSYS=31)   
      2665.    13 .       COMMON /QBITS/ IQDROP,IQMARK,IQCRIT,IQZIM,IQZIP,IQSYS 
      2666.    14 .                          DIMENSION    IQUEST(30)                             +SQ
      2667.    15.. +CDE, QDIM. 
      2668.    16 .           EQUIVALENCE (QUEST(1),IQUEST(1)), (LQUSER(1),LQ(1),IQ(1),Q(1))     +SQ
      2669.    17 .       COMMON /SQK/   KQMAIN,KQT,KQR,KQJ,KQF,KQZ,KQH(4),KQS(8)   
      2670.    18 .       COMMON //      QUEST(30),LQUSER(7),LQMAIN,LQT,LQR,LQJ,LQF,LQZ 
      2671.    19 .      +,              LQH(4),LQS(6),   LQWM,LQWF,LQWZ,LQWSYS(6),LQPRIV(7)     +SQ
      2672.    20 .      +,              LQ1,LQ2,LQ3,LQ4,LQ5,LQ6,LQ7,LQSV,LQAN,LQDW,LQUP         +SQ
0     2673.    21 + +KEEP, QHEADP.  
      2674.    22 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  

  153 PATCHY    ================================================== P=*IBM     D=BLANKDEK  1 ============================

      2675.     0 + +DECK,BLANKDEK. 
      2676.     1 + +USE, QCDE, QMIBM.  

  154 PATCHY    ================================================== P=*IBX     D=          1 ============================

      2677.     0 + +PATCH, *IBX.                HYDRA Pilot for IBM 3090  with AIX 
1 154                                                              P=*IBX     D=          2                     PAGE  36

      2678.     1 + +KEEP, QHEADP.  
      2679.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  

  155 PATCHY    ================================================== P=*IBX     D=BLANKDEK  1 ============================

      2680.     0 + +DECK,BLANKDEK. 
      2681.     1 + +USE, QCDE, QMIBX.  

  156 PATCHY    ================================================== P=*IRT     D=          1 ============================

      2682.     0 + +PATCH, *IRT.                HYDRA Pilot for IBM RT PC  
0     2683.     1 + +KEEP, QHEADP.  
      2684.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  

  157 PATCHY    ================================================== P=*IRT     D=BLANKDEK  1 ============================

      2685.     0 + +DECK,BLANKDEK. 
      2686.     1 + +USE, QCDE, QMIRT.  

  158 PATCHY    ================================================== P=*LNX     D=          1 ============================

      2687.     0 + +PATCH,*LNX.    
0     2688.     1 + +KEEP, QHEADP.  
      2689.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  

  159 PATCHY    ================================================== P=*LNX     D=BLANKDEK  1 ============================

      2690.     0 + +DECK,BLANKDEK. 
      2691.     1 + +USE, QCDE, QMLNX.  
      2692.     2 + +USE, QTYPOK, T=INH.    

  160 PATCHY    ================================================== P=*NORD3   D=          1 ============================

      2693.     0 + +PATCH, *NORD3.              HYDRA Pilot for NORD 500   
0     2694.     1 + +KEEP, QHEADP.  
      2695.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2696.     3 + +KEEP, Q$JBIT.  
      2697.     4 .       JBIT (IZW,IZP)     = ISHFT (ISHFT(IZW,32-IZP), -31)   
      2698.     5 .       JBYT (IZW,IZP,NZB) = ISHFT (ISHFT(IZW,33-IZP-NZB), -32+NZB)   
0     2699.     6 + +KEEP, Q$SBIT.  
      2700.     7 .       MSBIT0 (IZW,IZP)   = IAND (IZW, NOT(ISHFT(1,IZP-1)) ) 
      2701.     8 .       MSBIT1 (IZW,IZP)   = IOR  (IZW,     ISHFT(1,IZP-1)  ) 
      2702.     9 .       MSBIT (MZ,IZW,IZP) = IOR (IAND (IZW, NOT(ISHFT(1,IZP-1)) )    
      2703.    10 .      +                              , ISHFT(IAND(MZ,1),IZP-1))  
      2704.    11 .       MSBYT (MZ,IZW,IZP,NZB) = IOR ( IAND (IZW, NOT(    
      2705.    12 .      +                   ISHFT (ISHFT(NOT(0),-32+NZB), IZP-1))) 
      2706.    13 .      +                     , ISHFT (ISHFT(MZ, 32-NZB), -33+IZP+NZB) )   
0     2707.    14 + +KEEP, Q$CBYT.  
      2708.    15 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = IOR ( IAND (IZW, NOT(    
      2709.    16 .      +                   ISHFT (ISHFT(NOT(0),-32+NZB), IZP-1))) 
      2710.    17 .      +        , ISHFT (ISHFT(ISHFT(MZ,-IZQ+1),32-NZB), -33+IZP+NZB) )   
0     2711.    18 + +KEEP, Q$JBYTET.    
      2712.    19 .       JBYTET (MZ,IZW,IZP,NZB) = IAND (MZ,   
      2713.    20 .      +                        ISHFT (ISHFT(IZW,33-IZP-NZB),-32+NZB) )   
      2714.    21 .       JBYTOR (MZ,IZW,IZP,NZB) = IOR  (MZ,   
      2715.    22 .      +                        ISHFT (ISHFT(IZW,33-IZP-NZB),-32+NZB) )   
      2716.    23 .       MBYTET (MZ,IZW,IZP,NZB) = IAND (IZW, NOT(ISHFT (  
      2717.    24 .      +                          ISHFT(NOT(MZ),32-NZB),-33+IZP+NZB)) )   
      2718.    25 .       MBYTOR (MZ,IZW,IZP,NZB) = IOR (IZW, ISHFT (   
      2719.    26 .      +                               ISHFT(MZ,32-NZB),-33+IZP+NZB) )    

  161 PATCHY    ================================================== P=*NORD3   D=BLANKDEK  1 ============================

      2720.     0 + +DECK,BLANKDEK. 
      2721.     1 + +USE, QCDE, QMND3.  

  162 PATCHY    ================================================== P=*PDP10   D=          1 ============================

      2722.     0 + +PATCH, *PDP10.              HYDRA Pilot for PDP 10 
0     2723.     1 + +KEEP, QHEADP.  
      2724.     2 .       COMMON /QHEADP/IQHEAD(16),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2725.     3 + +KEEP, QMACHFIX.    
      2726.     4 .       PARAMETER      (IQBITW=36, IQBITC=7, IQCHAW=5)    
0     2727.     5 + +KEEP, Q$JBIT.  
      2728.     6 .       JBIT (IZW,IZP)     = IBITS (IZW,IZP-1,1)  
      2729.     7 .       JBYT (IZW,IZP,NZB) = IBITS (IZW,IZP-1,NZB)    
0     2730.     8 + +KEEP, Q$SBIT.  
      2731.     9 .       MSBIT0 (IZW,IZP)   = IAND (IZW, NOT(ISHFT(1,IZP-1)) ) 
      2732.    10 .       MSBIT1 (IZW,IZP)   = IOR  (IZW,     ISHFT(1,IZP-1) )  
      2733.    11 .       MSBIT (MZ,IZW,IZP) = IOR (IAND (IZW, NOT(ISHFT(1,IZP-1)) )    
      2734.    12 .      +                             , ISHFT (IAND(MZ,1),IZP-1) ) 
      2735.    13 .       MSBYT (MZ,IZW,IZP,NZB) = IOR ( IAND (IZW, NOT(    
      2736.    14 .      +                   ISHFT (ISHFT(NOT(0),-36+NZB), IZP-1))) 
      2737.    15 .      +                     , ISHFT (ISHFT(MZ, 36-NZB), -37+IZP+NZB) )   
0     2738.    16 + +KEEP, Q$CBYT.  
      2739.    17 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = IOR ( IAND (IZW, NOT(    
      2740.    18 .      +                   ISHFT (ISHFT(NOT(0),-36+NZB), IZP-1))) 
      2741.    19 .      +        , ISHFT (ISHFT(ISHFT(MZ,-IZQ+1),36-NZB), -37+IZP+NZB) )   
0     2742.    20 + +KEEP, Q$JBYTET.    
      2743.    21 .       JBYTET (MZ,IZW,IZP,NZB) = IAND (MZ, IBITS(IZW,IZP-1,NZB)) 
      2744.    22 .       JBYTOR (MZ,IZW,IZP,NZB) = IOR  (MZ, IBITS(IZW,IZP-1,NZB)) 
      2745.    23 .       MBYTET (MZ,IZW,IZP,NZB) = IAND (IZW, NOT(ISHFT (  
      2746.    24 .      +                          ISHFT(NOT(MZ),36-NZB),-37+IZP+NZB)) )   
      2747.    25 .       MBYTOR (MZ,IZW,IZP,NZB) = IOR (IZW, ISHFT (   
      2748.    26 .      +                               ISHFT(MZ,36-NZB),-37+IZP+NZB)  )   
1 163 PATCHY    ================================================== P=*PDP10   D=BLANKDEK  1 =================== PAGE  37

      2749.     0 + +DECK,BLANKDEK. 
      2750.     1 + +USE, QCDE, QMPDP.  

  164 PATCHY    ================================================== P=*SGI     D=          1 ============================

      2751.     0 + +PATCH, *SGI.                HYDRA Pilot for Silicon Graphics Iris  
0     2752.     1 + +KEEP, QHEADP.  
      2753.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  

  165 PATCHY    ================================================== P=*SGI     D=BLANKDEK  1 ============================

      2754.     0 + +DECK,BLANKDEK. 
      2755.     1 + +USE, QCDE, QMSGI.  

  166 PATCHY    ================================================== P=*SUN     D=          1 ============================

      2756.     0 + +PATCH, *SUN.                HYDRA Pilot for SUN    
0     2757.     1 + +KEEP, QHEADP.  
      2758.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2759.     3 + +KEEP, Q$ANDOR. 
      2760.     4 .       IAND (IZV,IZW) = AND (IZV, IZW)   
      2761.     5 .       IOR  (IZV,IZW) =  OR (IZV, IZW)   
      2762.     6 .       IEOR (IZV,IZW) = XOR (IZV, IZW)   
0     2763.     7-+ +SELF.    NOT  is standard on SUN   
0     2764.     8 + +KEEP, Q$SHIFT. 
      2765.     9 .       ISHFTL (IZW,NZB) = LSHIFT (IZW, NZB)  
      2766.    10 .       ISHFTR (IZW,NZB) =  ishft (IZW, -NZB) 
0     2767.    11 + +KEEP, Q$JBIT.  
      2768.    12 .       JBIT (IZW,IZP)    =   AND (RSHIFT(IZW,IZP-1), 1)  
      2769.    13 .       JBYT (IZW,IZP,NZB)= ishft (LSHIFT(IZW,33-IZP-NZB),-32+NZB)    
0     2770.    14 + +KEEP, Q$SBIT.  
      2771.    15 .       MSBIT0 (IZW,IZP)   = AND (IZW, NOT(LSHIFT(1,IZP-1)) ) 
      2772.    16 .       MSBIT1 (IZW,IZP)   = OR  (IZW,     LSHIFT(1,IZP-1)  ) 
      2773.    17 .       MSBIT (MZ,IZW,IZP) = OR (AND (IZW, NOT(LSHIFT(1,IZP-1)) ) 
      2774.    18 .      +                             , LSHIFT(AND(MZ,1),IZP-1) )  
      2775.    19 .       MSBYT (MZ,IZW,IZP,NZB) = OR ( AND (IZW, NOT(  
      2776.    20 .      +                   LSHIFT (ishft(NOT(0),-32+NZB), IZP-1)))    
      2777.    21 .      +                     , ishft (LSHIFT(MZ, 32-NZB), -33+IZP+NZB) )  
0     2778.    22 + +KEEP, Q$CBYT.  
      2779.    23 .       MCBYT (MZ,IZQ,IZW,IZP,NZB) = OR ( AND (IZW, NOT(  
      2780.    24 .      +                   LSHIFT (ishft(NOT(0),-32+NZB), IZP-1)))    
      2781.    25 .      +        , ishft (LSHIFT(ishft(MZ,-IZQ+1),32-NZB), -33+IZP+NZB) )  
0     2782.    26 + +KEEP, Q$JBYTET.    
      2783.    27 .       JBYTET (MZ,IZW,IZP,NZB) = AND (MZ,    
      2784.    28 .      +                        ishft (LSHIFT(IZW,33-IZP-NZB),-32+NZB) )  
      2785.    29 .       JBYTOR (MZ,IZW,IZP,NZB) = OR  (MZ,    
      2786.    30 .      +                        ishft (LSHIFT(IZW,33-IZP-NZB),-32+NZB) )  
      2787.    31 .       MBYTET (MZ,IZW,IZP,NZB) = AND (IZW, NOT(ishft (   
      2788.    32 .      +                          LSHIFT(NOT(MZ),32-NZB),-33+IZP+NZB)) )  
      2789.    33 .       MBYTOR (MZ,IZW,IZP,NZB) = OR (IZW, ishft (    
      2790.    34 .      +                               LSHIFT(MZ,32-NZB),-33+IZP+NZB) )   

  167 PATCHY    ================================================== P=*SUN     D=BLANKDEK  1 ============================

      2791.     0 + +DECK,BLANKDEK. 
      2792.     1 + +USE, QCDE, QMSUN.  

  168 PATCHY    ================================================== P=*UNIVAC  D=          1 ============================

      2793.     0 + +PATCH, *UNIVAC.             HYDRA Pilot for UNIVAC 1100 series 
0     2794.     1 + +KEEP, QHEADP.  
      2795.     2 .       COMMON /QHEADP/IQHEAD(13),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  

  169 PATCHY    ================================================== P=*UNIVAC  D=BLANKDEK  1 ============================

      2796.     0 + +DECK,BLANKDEK. 
      2797.     1 + +USE, QCDE, QMUNI.  

  170 PATCHY    ================================================== P=*UNO     D=          1 ============================

      2798.     0 + +PATCH, *UNO, T=JOIN.        HYDRA Pilot for UNIVAC, FTN compiler   
0     2799.     1 + +KEEP, QHEADP.  
      2800.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
0     2801.     3 + +KEEP, QMACHFIX.    
      2802.     4 .       PARAMETER      (IQBITW=36, IQBITC=9, IQCHAW=4)    
0     2803.     5 + +KEEP, Q$JBIT.  
      2804.     6 .       JBIT (IZW,IZP)     = BITS (IZW,37-IZP,1)  
      2805.     7 .       JBYT (IZW,IZP,NZB) = BITS (IZW,38-IZP-NZB,NZB)    

  171 PATCHY    ================================================== P=*UNO     D=BLANKDEK  1 ============================

      2806.     0 + +DECK,BLANKDEK. 
      2807.     1 + +USE, QCDE, QMUNO.  

  172 PATCHY    ================================================== P=*VAX     D=          1 ============================

      2808.     0 + +PATCH, *VAX.                HYDRA Pilot for VAX    
0     2809.     1 + +KEEP, QHEADP.  
      2810.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  
1 173 PATCHY    ================================================== P=*VAX     D=BLANKDEK  1 =================== PAGE  38

      2811.     0 + +DECK,BLANKDEK. 
      2812.     1 + +USE, QCDE, QMVAX.  
      2813.     2 + +USE, QTYPOK, T=INH.    

  174 PATCHY    ================================================== P=*VMI     D=          1 ============================

      2814.     0 + +PATCH, *VMI.                HYDRA Pilot for Vax / Mips 
0     2815.     1 + +KEEP, QHEADP.  
      2816.     2 .       COMMON /QHEADP/IQHEAD(20),IQDATE,IQTIME,IQPAGE,NQPAGE(4)  

  175 PATCHY    ================================================== P=*VMI     D=BLANKDEK  1 ============================

      2817.     0 + +DECK,BLANKDEK. 
      2818.     1 + +USE, QCDE, QMVMI.  
      2819.     2 + +USE, QTYPOK, T=INH.    

  176 PATCHY    ================================================== P=QCDE     D=          1 ============================

      2820.     0 + +PATCH, QCDE.   

  177 PATCHY    ================================================== P=QCDE     D=QCDE      1 ============================

      2821.     0 + +DECK, QCDE,       T=JOIN.  
0     2822.     1 + +KEEP, CQC.                   FOR CQ    
      2823.     2 .       COMMON /CQC/   IQCIN,CQFLAG(7),NQCF,QCHECK    
0     2824.     3 + +KEEP, JQFLAG.                FOR JQ81  
      2825.     4 .       COMMON /JQFLAG/JQFLAG(10) 
0     2826.     5 + +KEEP, JQC.                   FOR JQ    
      2827.     6 .       COMMON /JQC/   NQABOV(4),NQUP(4),NQDW(4),JQLV,JQKP,JQMT,JQMP  
0     2828.     7 + +KEEP, MQCF.                  FIXED INSTALLATION PARAMETERS IN MQ   
      2829.     8 .       PARAMETER      (NQFNAE=2, NQFNAD=1, NQFNAU=3) 
      2830.     9 .       PARAMETER      (IQFSTR=19, NQFSTR=6,  IQFSYS=25, NQFSYS=8)    
      2831.    10 .       COMMON /MQCF/  NQNAME,NQNAMD,NQNAMU, IQSTRU,NQSTRU, IQSYSB,NQSYSB 
0     2832.    11 + +KEEP, MQCM.                  MEMORY OCCUPATION PARAMETERS  
      2833.    12 .       COMMON /MQCMOV/NQSYSS 
      2834.    13 .       COMMON /MQCM/         NQSYSR,NQSYSL,NQLINK,LQWORG,LQWORK,LQTOL    
      2835.    14 .      +,              LQSTA,LQEND,LQFIX,NQMAX, NQRESV,NQMEM,LQADR,LQADR2 
0     2836.    15 + +KEEP, MQCT.                  MEMORY TABLE PARAMETERS   
      2837.    16 .       COMMON /MQCT/  IQTBIT,IQTVAL,LQTA,LQTB,LQTE,LQMTB,LQMTE,LQMTH 
      2838.    17 .      +,              IQPART,NQFREE  
0     2839.    18 + +KEEP, QBCD.                  BCD CHARACTERS IN A1 FORMAT   
      2840.    19 .       COMMON /QBCD/  IQNUM2(11),IQLETT(26),IQNUM(10),IQPLUS 
      2841.    20 .      +,              IQMINS,IQSTAR,IQSLAS,IQOPEN,IQCLOS,IQDOLL,IQEQU    
      2842.    21 .      +,              IQBLAN,IQCOMA,IQDOT,IQAPO,  IQCROS 
0     2843.    22 + +KEEP, QCN.                   NAME PARAMETERS   
      2844.    23 .       COMMON /QCN/   IQLS,IQID,IQNL,IQNS,IQND,IQFOUL    
0     2845.    24 + +KEEP, QHEADP.                PAGE HEADING PARAMETERS   
      2846.    25 .       COMMON /QHEADP/IQHEAD(8),IQDATE,IQTIME,IQPAGE,NQPAGE(4)   
0     2847.    26 + +KEEP, QHC.                   HISTOGRAM MANIPULATION    
      2848.    27 .       COMMON /QHC/   NQHNH,NQHPAK(3),NQHGW,NQHNX,QHDX,QHXL,QHSTEP,NQHAND    
      2849.    28 .      +,              LQHH,LQHE,LQHC,LQHL,LQHLB,LQHLC,LQHD,LQHX,LQHT,LQHW    
      2850.    29 .      +,              IQHCUT,IQHXXX,IQHINT,NQHLAB,IQHFMT,IQHW(8) 
      2851.    30 .      +,              QHSMA,QHBIG,QHTOT,NQHNX2   
      2852.    31 .      +,              LQHCUT,NQHEXP,IQHOPT(7)    
0     2853.    32 + +KEEP, QMACHFIX.              MACHINE PARAMETERS    
      2854.    33 .       PARAMETER      (IQBITW=32, IQBITC=8, IQCHAW=4)    
0     2855.    34 + +KEEP, QMACH.   
      2856.    35.. +CDE, QMACHFIX. 
      2857.    36 .       COMMON /QMACH/ NQBITW,NQCHAW,NQLNOR,NQLMAX,NQLPTH,NQRMAX,QLPCT    
      2858.    37 .      +,              NQOCT(3),NQHEX(3),NQOCTD(3)    
0     2859.    38 + +KEEP, QNATUR.                CONSTANTS OF NATURE   
      2860.    39 .       COMMON /QNATUR/QPI2,QPI,QPIBY2,QPBYHR 
0     2861.    40 + +KEEP, QSTATE.                PROGRAM STATUS PARAMETERS 
      2862.    41 .       COMMON /QSTATE/QVERSN,NQINIT,NQSTAG(2),NQPHAS,NQERR,QDEBUG,NQDCUT 
      2863.    42 .      +,              NQNEWB,NQAFTB,NQM99,NQLOWB,NQWCUT,NQLOCK,QSTDUM    
      2864.    43 .      +,              NQAUGM(2),NQZIP(8),AQMEM(12)   
      2865.    44 .                          INTEGER QDEBUG 
0     2866.    45 + +KEEP, QUNIT.                 LOGICAL UNIT NUMBERS  
      2867.    46 .       COMMON /QUNIT/ IQREAD,IQPRNT,IQPR2,IQLOG,IQPNCH,IQTTIN,IQTYPE 
      2868.    47 .      +,              IQDLUN,IQFLUN,IQHLUN,IQCLUN,  NQUSED   
0     2869.    48 + +KEEP, QDIM.                  DIMENSIONS FOR THE DYNAMIC STORE  
      2870.    49 .                          DIMENSION                 LQ(99), IQ(99), Q(99)    
0     2871.    50 + +KEEP, Q.                     DYNAMIC STORE, PROCESSOR USAGE    
      2872.    51 .       PARAMETER      (IQBDRO=25, IQBMAR=26, IQBCRI=27, IQBSYS=31)   
      2873.    52 .       COMMON /QBITS/ IQDROP,IQMARK,IQCRIT,IQZIM,IQZIP,IQSYS 
      2874.    53 .                          DIMENSION    IQUEST(30)    
      2875.    54.. +CDE, QDIM. 
      2876.    55 .                          EQUIVALENCE (QUEST,IQUEST),    (LQUSER,LQ,IQ,Q)    
      2877.    56 .       COMMON //      QUEST(30),LQUSER(7),LQMAIN,LQSYS(24),LQPRIV(7) 
      2878.    57 .      +,              LQ1,LQ2,LQ3,LQ4,LQ5,LQ6,LQ7,LQSV,LQAN,LQDW,LQUP    
0     2879.    58 + +KEEP, SQ.                    DYNAMIC STORE, SYSTEM USAGE   
      2880.    59 .       PARAMETER      (IQBDRO=25, IQBMAR=26, IQBCRI=27, IQBSYS=31)   
      2881.    60 .       COMMON /QBITS/ IQDROP,IQMARK,IQCRIT,IQZIM,IQZIP,IQSYS 
      2882.    61 .                          DIMENSION    IQUEST(30)    
      2883.    62.. +CDE, QDIM. 
      2884.    63 .                          EQUIVALENCE (QUEST,IQUEST),    (LQUSER,LQ,IQ,Q)    
      2885.    64 .       COMMON /SQK/   KQMAIN,KQT,KQR,KQJ,KQF,KQZ,KQH(4),KQS(8)   
      2886.    65 .       COMMON //      QUEST(30),LQUSER(7),LQMAIN,LQT,LQR,LQJ,LQF,LQZ 
      2887.    66 .      +,              LQH(4),LQS(6),   LQWM,LQWF,LQWZ,LQWSYS(6),LQPRIV(7)    
1 177                                                              P=QCDE     D=QCDE      2                     PAGE  39

      2888.    67 .      +,              LQ1,LQ2,LQ3,LQ4,LQ5,LQ6,LQ7,LQSV,LQAN,LQDW,LQUP    
0     2889.    68 + +KEEP, MQCALL.                ALL COMMONS REQUIRED BY MQ    
      2890.    69.. +CDE, MQCF, MQCM, MQCT. 
      2891.    70.. +CDE, QBCD, QCN, QMACH, QNATUR, QSTATE, QUNIT, QHEADP.  
0     2892.    71 + +KEEP, QOVLAY.                FOR BACK COMPATIBILITY ONLY   
      2893.    72 .       COMMON       /JQC1/JQC1(4)    /RQC1/RQC1(11)  
      2894.    73.. +CDE, JQC, MQCALL.  
0     2895.    74 + +KEEP, QNORETN,    T=NOLIST.    
0     2896.    75 + +KEEP, QNOLIST,    T=NOLIST.    
0     2897.    76 + +KEEP, QCARD1,     T=DUMMY. 
0     2898.    77 + +KEEP, QCARDL,     T=NOLIST.    
      2899.    78 . C====================================================================   
0     2900.    79 + +KEEP, Q$ANDOR,  T=NOLIST.  
0     2901.    80 + +KEEP, Q$SHIFT. 
      2902.    81 .       ISHFTL (IZW,NZB) = ISHFT (IZW,  NZB)  
      2903.    82 .       ISHFTR (IZW,NZB) = ISHFT (IZW, -NZB)  
0     2904.    83 + +KEEP, Q$JBIT,   T=NOLIST.  
0     2905.    84 + +KEEP, Q$SBIT,   T=NOLIST.  
0     2906.    85 + +KEEP, Q$CBYT,   T=NOLIST.  
0     2907.    86 + +KEEP, Q$JBYTET, T=NOLIST.  

  178 PATCHY    ================================================== P=QCDE     D=QCDCMLAN  1 ============================

      2908.     0 + +DECK, QCDCMLAN,   T=ASL, IF=QMCDC. 
0     2909.     1 + +KEEP, QASSL.   
      2910.     2 .           USE   //  
      2911.     3 .  QUEST    BSS   30  
      2912.     4 .  LQ       BSS   0   
      2913.     5 .  Q        BSS   32  
      2914.     6 .  LQPRIV   BSS   7   
      2915.     7 .  LQ1      BSS   7   
      2916.     8 .  LQSV     BSS   4   
0     2917.     9 + +KEEP, SQASSL.  
      2918.    10 .           USE   //  
      2919.    11 .  QUEST    BSS   30  
      2920.    12 .  LQ       BSS   0   
      2921.    13 .  Q        BSS   17  
      2922.    14 .  LQS      BSS   6   
      2923.    15 .  LQWM     BSS   3   
      2924.    16 .  LQWSYS   BSS   6   
      2925.    17 .  LQPRIV   BSS   7   
      2926.    18 .  LQ1      BSS   7   
      2927.    19 .  LQSV     BSS   4   
0     2928.    20 + +KEEP, MQCMMLAN.    
      2929.    21 .           USE   /MQCMOV/    
      2930.    22 .  NQSYSS   BSS   1   
      2931.    23 .           USE   /MQCM/  
      2932.    24 .  NQSYSR   BSS   1   
      2933.    25 .  NQSYSL   BSS   1   
      2934.    26 .  NQLINK   BSS   1   
      2935.    27 .  LQWORG   BSS   1   
      2936.    28 .  LQWORK   BSS   1   
      2937.    29 .  LQTOL    BSS   1   
      2938.    30 .  LQSTA    BSS   1   
      2939.    31 .  LQEND    BSS   1   
      2940.    32 .  LQFIX    BSS   1   
      2941.    33 .  NQMAX    BSS   1   
      2942.    34 .  NQRESV   BSS   1   
      2943.    35 .  NQMEM    BSS   1   
      2944.    36 .  LQADR    BSS   2   
0     2945.    37 + +KEEP, MQCTMLAN.    
      2946.    38 .           USE   /MQCT/  
      2947.    39 .  IQTBIT   BSS   1   
      2948.    40 .  IQTVAL   BSS   1   
      2949.    41 .  LQTA     BSS   1   
      2950.    42 .  LQTB     BSS   1   
      2951.    43 .  LQTE     BSS   1   
      2952.    44 .  LQMTB    BSS   1   
      2953.    45 .  LQMTE    BSS   1   
      2954.    46 .  LQMTH    BSS   1   
      2955.    47 .  IQPART   BSS   1   
      2956.    48 .  NQFREE   BSS   1   
0     2957.    49 + +KEEP, QCNMLAN. 
      2958.    50 .           USE   /QCN/   
      2959.    51 .  IQLS     BSS   1   
      2960.    52 .  IQID     BSS   1   
      2961.    53 .  IQNL     BSS   1   
      2962.    54 .  IQNS     BSS   1   
      2963.    55 .  IQND     BSS   1   
      2964.    56 .  IQFOUL   BSS   1   

  179 PATCHY    ================================================== P=QCDE     D=QIBMMLAN  1 ============================

      2965.     0 + +DECK, QIBMMLAN,   T=ASL, IF=QMIBM. 
0     2966.     1 + +KEEP, QMLIBM.  
      2967.     2 .          COM    
      2968.     3 . QUEST    DS   30F   
      2969.     4 . LQ       DS   0F    
      2970.     5 . Q        DS   32F   
      2971.     6 . LQPRIV   DS   7F    
1 179                                                              P=QCDE     D=QIBMMLAN  2                     PAGE  40

      2972.     7 . LQ1      DS   7F    
      2973.     8 . LQSV     DS   4F    
0     2974.     9 + +KEEP, MQCMIBM. 
      2975.    10 . AMQCMOV  DSECT  
      2976.    11 . NQSYSS   DS   1F    
      2977.    12 . AMQCM    DSECT  
      2978.    13 . NQSYSR   DS   1F    
      2979.    14 . NQSYSL   DS   1F    
      2980.    15 . NQLINK   DS   1F    
      2981.    16 . LQWORG   DS   1F    
      2982.    17 . LQWORK   DS   1F    
      2983.    18 . LQTOL    DS   1F    
      2984.    19 . LQSTA    DS   1F    
      2985.    20 . LQEND    DS   1F    
      2986.    21 . LQFIX    DS   1F    
      2987.    22 . NQMAX    DS   1F    
      2988.    23 . NQRESV   DS   1F    
      2989.    24 . NQMEM    DS   1F    
      2990.    25 . LQADR    DS   2F    
0     2991.    26 + +KEEP, QCNIBM.  
      2992.    27 . AQCN     DSECT  
      2993.    28 . IQLS     DS   1F    
      2994.    29 . IQID     DS   1F    
      2995.    30 . IQNL     DS   1F    
      2996.    31 . IQNS     DS   1F    
      2997.    32 . IQND     DS   1F    
      2998.    33 . IQFOUL   DS   1F    

  180 PATCHY    ================================================== P=QCDE     D=QND3MLAN  1 ============================

      2999.     0 + +DECK, QND3MLAN,   T=ASL, IF=QMND3. 
0     3000.     1 + +KEEP, QND3FORT.    
      3001.     2 . BPROG  EQU  4   
      3002.     3 . BVAR   EQU  5   
      3003.     4 . BPAR   EQU  6   
      3004.     5 . LINK   EQU  7   
0     3005.     6 + +KEEP, QND3REGS.    
      3006.     7 . BASE   EQU  '10 
      3007.     8 . COMB   EQU  '12 
      3008.     9 . X1     EQU  '13 
      3009.    10 . X2     EQU  '14 
      3010.    11 . X3     EQU  '15 
      3011.    12 . A1     EQU  '54 
      3012.    13 . A2     EQU  '55 
      3013.    14 . A3     EQU  '56 
      3014.    15 . A4     EQU  '57 

  181 PATCHY    ================================================== P=QCDE     D=QPDPMLAN  1 ============================

      3015.     0 + +DECK, QPDPMLAN,   T=ASL, IF=QMPDP. 
0     3016.     1 + +KEEP, QMLPDP.  
      3017.     2 .     
      3018.     3 . ;     COMMON //      QUEST(30), Q(32),LQPRIV(7),LQ1,.. LQ7,LQSV(4)  
      3019.     4 .         EXTERN  .COMM.  
      3020.     5 .  QUEST= .COMM.  
      3021.     6 .     LQ= QUEST+^D30  
      3022.     7 .      Q= LQ  
      3023.     8 . LQPRIV= LQ+^D32 
      3024.     9 .    LQ1= LQPRIV+7    
      3025.    10 .   LQSV= LQ1+7   
      3026.    11 .   QWSP= LQSV+4  
0     3027.    12 + +KEEP, MQCMPDP. 
      3028.    13 .     
      3029.    14 . ;     COMMON /MQCMOV/NQSYSS 
      3030.    15 . ;     COMMON /MQCM/         NQSYSR,NQSYSL,NQLINK,LQWORG,LQWORK,LQTOL    
      3031.    16 . ;    +,              LQSTA,LQEND,LQFIX,NQMAX, NQRESV,NQMEM,LQADR,LQADR2 
      3032.    17 .         EXTERN  MQCMOV  
      3033.    18 . NQSYSS= MQCMOV  
      3034.    19 .         EXTERN  MQCM    
      3035.    20 . NQSYSR= MQCM    
      3036.    21 . NQSYSL= NQSYSR+1    
      3037.    22 . NQLINK= NQSYSL+1    
      3038.    23 . LQWORG= NQLINK+1    
      3039.    24 . LQWORK= LQWORG+1    
      3040.    25 .  LQTOL= LQWORK+1    
      3041.    26 .  LQSTA= LQTOL+1 
      3042.    27 .  LQEND= LQSTA+1 
      3043.    28 .  LQFIX= LQEND+1 
      3044.    29 .  NQMAX= LQFIX+1 
      3045.    30 . NQRESV= NQMAX+1 
      3046.    31 .  NQMEM= NQRESV+1    
      3047.    32 .  LQADR= NQMEM+1 
0     3048.    33 + +KEEP, QCNPDP.  
      3049.    34 .     
      3050.    35 . ;     COMMON /QCN/   IQLS,IQID,IQNL,IQNS,IQND,IQFOUL    
      3051.    36 .         EXTERN  QCN 
      3052.    37 .   IQLS= QCN 
      3053.    38 .   IQID= IQLS+1  
      3054.    39 .   IQNL= IQID+1  
      3055.    40 .   IQNS= IQNL+1  
      3056.    41 .   IQND= IQNS+1  
      3057.    42 . IQFOUL= IQND+1  
0     3058.    43 + +KEEP, QHELOPDP.    
      3059.    44 .         CAIA                    ; ENTRY F10 
      3060.    45 .         PUSH    17,CEXIT.##     ; ENTRY F40 
1 182 PATCHY    ================================================== P=QCDE     D=QUNIMLAN  1 =================== PAGE  41

      3061.     0 + +DECK, QUNIMLAN,   T=ASL, IF=QMUNI, QMUNO.  
0     3062.     1 + +KEEP, QMLUNI.  
      3063.     2 . .     COMMON //      QUEST(30), Q(32),LQPRIV(7),LQ1,.. LQ7,LQSV(4)  
      3064.     3 .           INFO  4  3    
      3065.     4 . $(3).   
      3066.     5 . QUEST     RES   30  
      3067.     6 . LQ  
      3068.     7 . IQ  
      3069.     8 . Q         RES   32  
      3070.     9 . LQPRIV    RES   7   
      3071.    10 . LQ1       RES   7   
      3072.    11 . LQSV      RES   4   
0     3073.    12 + +KEEP, MQCMUNI. 
      3074.    13 . .     COMMON /MQCMOV/NQSYSS 
      3075.    14 . .     COMMON /MQCM/         NQSYSR,NQSYSL,NQLINK,LQWORG,LQWORK,LQTOL    
      3076.    15 . .    +,              LQSTA,LQEND,LQFIX,NQMAX, NQRESV,NQMEM,LQADR,LQADR2 
      3077.    16 . MQCMOV    INFO  2  5    
      3078.    17 . $(5).   
      3079.    18 . NQSYSS    RES   1   
      3080.    19 . MQCM      INFO  2  6    
      3081.    20 . $(6).   
      3082.    21 . NQSYSR    RES   1   
      3083.    22 . NQSYSL    RES   1   
      3084.    23 . NQLINK    RES   1   
      3085.    24 . LQWORG    RES   1   
      3086.    25 . LQWORK    RES   1   
      3087.    26 . LQTOL     RES   1   
      3088.    27 . LQSTA     RES   1   
      3089.    28 . LQEND     RES   1   
      3090.    29 . LQFIX     RES   1   
      3091.    30 . NQMAX     RES   1   
      3092.    31 . NQRESV    RES   1   
      3093.    32 . NQMEM     RES   1   
      3094.    33 . LQADR     RES   2   
0     3095.    34 + +KEEP, QBCDUNI. 
      3096.    35 . .     COMMON /QBCD/  IQNUM2(11),IQLETT(26),IQNUM(10),IQPLUS 
      3097.    36 . .    +,              IQMINS,IQSTAR,IQSLAS,IQOPEN,IQCLOS,IQDOLL,IQEQU    
      3098.    37 . .    +,              IQBLAN,IQCOMA,IQDOT,IQAPO,  IQCROSS    
      3099.    38 . QBCD      INFO  2  8    
      3100.    39 . $(8).   
      3101.    40 . IQNUM2    RES   11  
      3102.    41 . IQLETT    RES   26  
      3103.    42 . IQNUM     RES   14  
      3104.    43 . IQOPEN    RES   4   
      3105.    44 . IQBLAN    RES   5   
0     3106.    45 + +KEEP, QCNUNI.  
      3107.    46 . .     COMMON /QCN/   IQLS,IQID,IQNL,IQNS,IQND,IQFOUL    
      3108.    47 . QCN       INFO  2  9    
      3109.    48 . $(9).   
      3110.    49 . IQLS      RES   1   
      3111.    50 . IQID      RES   1   
      3112.    51 . IQNL      RES   1   
      3113.    52 . IQNS      RES   1   
      3114.    53 . IQND      RES   1   
      3115.    54 . IQFOUL    RES   1   
0     3116.    55 + +KEEP, QUNIRETML, IF=QMUNO. 
      3117.    56 . XARG      EQU       A0  
      3118.    57 . RETUR0    EQUF      0,X11   
      3119.    58 . RETUR1    EQUF      0,X11   
      3120.    59 . RETUR2    EQUF      0,X11   
      3121.    60 . RETUR3    EQUF      0,X11   
      3122.    61 . RETUR4    EQUF      0,X11   
      3123.    62 . RETUR5    EQUF      0,X11   
      3124.    63 . RETUR6    EQUF      0,X11   
0     3125.    64 + +KEEP, QUNIRETML, IF=QUNIT2B.   
      3126.    65 . XARG      EQU       X11 
      3127.    66 . RETUR0    EQUF      0,X11   
      3128.    67 . RETUR1    EQUF      1,X11   
      3129.    68 . RETUR2    EQUF      2,X11   
      3130.    69 . RETUR3    EQUF      3,X11   
      3131.    70 . RETUR4    EQUF      4,X11   
0     3132.    71 + +KEEP, QUNIRETML.   
      3133.    72 . XARG      EQU       X11 
      3134.    73 . RETUR0    EQUF      1,X11   
      3135.    74 . RETUR1    EQUF      2,X11   
      3136.    75 . RETUR2    EQUF      3,X11   
      3137.    76 . RETUR3    EQUF      4,X11   
      3138.    77 . RETUR4    EQUF      5,X11   

  183 PATCHY    ================================================== P=QCDE     D=QVAXMLAN  1 ============================

      3139.     0 + +DECK, QVAXMLAN, T=ASL, IF=QMVAX.   
0     3140.     1 + +KEEP, QMLVAX.  
      3141.     2 .         .PSECT  $BLANK,PIC,OVR,REL,GBL,SHR,NOEXE,RD,WRT,LONG    
      3142.     3 .     
      3143.     4 .   QUEST:  .BLKL   30    
      3144.     5 .   LQ:     .BLKL   0 
      3145.     6 .   Q:      .BLKL   32    
      3146.     7 .   LQPRIV: .BLKL    7    
      3147.     8 .   LQ1:    .BLKL    7    
      3148.     9 .   LQSV:   .BLKL    4    
      3149.    10 .     
0     3150.    11 + +KEEP, QCNVAX.  
      3151.    12 .         .PSECT  QCN,PIC,OVR,REL,GBL,SHR,NOEXE,RD,WRT,LONG   
      3152.    13 .     
      3153.    14 .   IQLS:   .LONG 
      3154.    15 .   IQID:   .LONG 
      3155.    16 .   IQNL:   .LONG 
      3156.    17 .   IQNS:   .LONG 
1 183                                                              P=QCDE     D=QVAXMLAN  2                     PAGE  42

      3157.    18 .   IQND:   .LONG 
      3158.    19 .   IQFOUL: .LONG 
      3159.    20 .     
0     3160.    21 + +KEEP, QVAXLCML,   T=NOLIST.    
      3161.    22 . ;-------        --------        ========================================    

  184 PATCHY    ================================================== P=EXPLNX   D=          1 ============================

      3162.     0 + +PATCH,EXPLNX,T=XCC.    

  185 PATCHY    ================================================== P=EXPLNX   D=LNXD      1 ============================

      3163.     0 + +DECK,LNXD. 
      3164.     1 - LNX       Cradle    
      3165.     2 - YPATCHY cradle for export ASM generation    
      3166.     3 -     
      3167.     4 -       C/C meaning :  ? and !  card active on the sending computer   
      3168.     5 -                      ? and *  card active on the receiving computer 
      3169.     6 -     
      3170.     7 - *ASM, 23, 33, T=BY. 
      3171.     8 - !ASM, 33.   
      3172.     9 - !ASM, 23.   
      3173.    10 - ?ASM, 31.   
      3174.    11 - ?ASM, 24, LUN=21, R=! ./*DECK ID>, !. */    
      3175.    12 - ?ASM, 22, LUN=21, R=! .;DECK  ID>, !.   
      3176.    13 - ?ASM, 21, R=!         .CDECK  ID>, !.   
      3177.    14 - !USE, INSHELL.  
      3178.    15 - !USE, EXPLNX, D=LNXD, T=DIVERT. 
      3179.    16 - ?USE, UTYGEN, D=FCASPLIT, T=DIV.    
      3180.    17 -     
      3181.    18 - ?EXE.   
      3182.    19 - ?LIST, CRA*, T=ONLY.    
      3183.    20 - ?PARAM, LINES, N=110.   
      3184.    21 -     
      3185.    22 - ----  select control options    
      3186.    23 -     
0     3187.    24-+ +SELF, IF=PSEUDO.   
      3188.    25 - +0+ USE, PSEUDO.             pseudo-VMI without machine language    
      3189.    26 - *USE,    PSEUDO.    
      3190.    27 - +0+ USE, LNXGS, QUTYLNX, T=INHIBIT. 
      3191.    28 - *USE,    LNXGS, QUTYLNX, T=INHIBIT. 
0     3192.    29-+ +SELF.  
      3193.    30 -     
      3194.    31 - ----  set control sequences 
      3195.    32 -     
      3196.    33 - ?KEEP, SPACEPAT.            dynamic store for YPATCHY   
      3197.    34 -      +,            ISPACE(160000),LAST  
      3198.    35 - ?KEEP, SPACEAUX.            dynamic store for Auxiliaries   
      3199.    36 -      +,            LOCALS(40),ISPACE(80000),LAST    
      3200.    37 - ?KEEP, MQINIT5.    for D=MQINIT in P=MQ 
      3201.    38 -       DATA  IMACH  /32,4,108,110,0,132,1H ,3,10,7,4,8,15,6,5,63/    
      3202.    39 -       DATA  IUNIT  /2,3,4,5,6/  
      3203.    40 - C   
      3204.    41 - C     NQLNOR = 108 normal number of lines per page  
      3205.    42 - C     NQLMAX = 110 maximum number of lines per page 
      3206.    43 - C     NQLPTH = 0   number of lines taken by the page-throw  
      3207.    44 - C   
      3208.    45 - C     IQREAD = 2   LUN for 'CARD READER'    
      3209.    46 - C     IQPRNT = 3   LUN for 'LINE PRINTER'   
      3210.    47 - C     IQTTIN = 5   LUN for TERMINAL INPUT   
      3211.    48 - C     IQTYPE = 6   LUN for TERMINAL OUTPUT  
      3212.    49 - ?KEEP, YLISTPP,    P=YLIST. 
      3213.    50 -       DATA  LPPAGE / 56, 62, 84, 110 /  
      3214.    51 - ?SELF.  
      3215.    52 -           Page-sizes in YLIST selected by options  0, 1, 2, or 3    
      3216.    53 -           will set   NQLMAX = LPPAGE(J+1)   
      3217.    54 -                      NQLNOR = NQLMAX    
      3218.    55 -                      NQLPTH = 0 
      3219.    56 -           if option given, else defaults operate    
      3220.    57 -     
      3221.    58 - ?KEEP, PAMPUBLIC.   
      3222.    59 - C-----------  Directory for Public PAM Files    
      3223.    60 -       CHARACTER    MPUBLI*(*)   
      3224.    61 -       PARAMETER   (MPUBLI = '/cern/pro/pam/')   
      3225.    62 -     
      3226.    63 - ?KEEP, QPOSTMTR.    
      3227.    64 - C     NO TRACE BACK NEEDED IN PRODUCTION    
      3228.    65 - ?OPT, ALL,MAPASM    
      3229.    66 -     
      3230.    67 - ----  Standard USE selections   
      3231.    68 -     
      3232.    69 - ?USE, ALLPX*, MLNX*.         select Patchy + Hydra  
      3233.    70 - ?USE, MAINUIX, D=.  
      3234.    71 - ?USE, *KLNX.                 select Kernlib 
      3235.    72 -     
      3236.    73 - ?PAM.   
      3237.    74 - ?QUIT   
      3238.    75 -     

  186 PATCHY    ================================================== P=EXPVMI   D=          1 ============================

      3239.     0 + +PATCH, EXPVMI, T=DATA.      Cradle for VAX / MIPS  

  187 PATCHY    ================================================== P=EXPVMI   D=VMID      1 ============================

      3240.     0 + +DECK, VMID.    
      3241.     1 - VMI       Cradle    
      3242.     2 - YPATCHY cradle for export ASM generation    
      3243.     3 -     
      3244.     4 -       C/C meaning :  ? and !  card active on the sending computer   
      3245.     5 -                      ? and *  card active on the receiving computer 
      3246.     6 -     
      3247.     7 - *ASM, 23, 33, T=BY. 
      3248.     8 - !ASM, 33.   
      3249.     9 - !ASM, 23.   
1 187                                                              P=EXPVMI   D=VMID      2                     PAGE  43

      3250.    10 - ?ASM, 31.   
      3251.    11 - ?ASM, 24, LUN=21, R=! ./*DECK ID>, !. */    
      3252.    12 - ?ASM, 22, LUN=21, R=! .;DECK  ID>, !.   
      3253.    13 - ?ASM, 21, R=!         .CDECK  ID>, !.   
      3254.    14 - !USE, INSHELL.  
      3255.    15 - !USE, EXPVMI, D=VMID, T=DIVERT. 
      3256.    16 - ?USE, UTYGEN, D=FCASPLIT, T=DIV.    
      3257.    17 -     
      3258.    18 - ?EXE.   
      3259.    19 - ?LIST, CRA*, T=ONLY.    
      3260.    20 - ?PARAM, LINES, N=110.   
      3261.    21 -     
      3262.    22 - ----  select control options    
      3263.    23 -     
0     3264.    24-+ +SELF, IF=PSEUDO.   
      3265.    25 - +0+ USE, PSEUDO.             pseudo-VMI without machine language    
      3266.    26 - *USE,    PSEUDO.    
      3267.    27 - +0+ USE, VMIGS, QUTYVMI, T=INHIBIT. 
      3268.    28 - *USE,    VMIGS, QUTYVMI, T=INHIBIT. 
0     3269.    29-+ +SELF.  
      3270.    30 -     
      3271.    31 - ----  set control sequences 
      3272.    32 -     
      3273.    33 - ?KEEP, SPACEPAT.            dynamic store for YPATCHY   
      3274.    34 -      +,            ISPACE(160000),LAST  
      3275.    35 - ?KEEP, SPACEAUX.            dynamic store for Auxiliaries   
      3276.    36 -      +,            LOCALS(40),ISPACE(80000),LAST    
      3277.    37 - ?KEEP, MQINIT5.    for D=MQINIT in P=MQ 
      3278.    38 -       DATA  IMACH  /32,4,108,110,0,132,1H ,3,10,7,4,8,15,6,5,63/    
      3279.    39 -       DATA  IUNIT  /2,3,4,5,6/  
      3280.    40 - C   
      3281.    41 - C     NQLNOR = 108 normal number of lines per page  
      3282.    42 - C     NQLMAX = 110 maximum number of lines per page 
      3283.    43 - C     NQLPTH = 0   number of lines taken by the page-throw  
      3284.    44 - C   
      3285.    45 - C     IQREAD = 2   LUN for 'CARD READER'    
      3286.    46 - C     IQPRNT = 3   LUN for 'LINE PRINTER'   
      3287.    47 - C     IQTTIN = 5   LUN for TERMINAL INPUT   
      3288.    48 - C     IQTYPE = 6   LUN for TERMINAL OUTPUT  
      3289.    49 - ?KEEP, YLISTPP,    P=YLIST. 
      3290.    50 -       DATA  LPPAGE / 56, 62, 84, 110 /  
      3291.    51 - ?SELF.  
      3292.    52 -           Page-sizes in YLIST selected by options  0, 1, 2, or 3    
      3293.    53 -           will set   NQLMAX = LPPAGE(J+1)   
      3294.    54 -                      NQLNOR = NQLMAX    
      3295.    55 -                      NQLPTH = 0 
      3296.    56 -           if option given, else defaults operate    
      3297.    57 -     
      3298.    58 - ?KEEP, PAMPUBLIC.   
      3299.    59 - C-----------  Directory for Public PAM Files    
      3300.    60 -       CHARACTER    MPUBLI*(*)   
      3301.    61 -       PARAMETER   (MPUBLI = '/cern/pro/pam/')   
      3302.    62 -     
      3303.    63 - ?KEEP, QPOSTMTR.    
      3304.    64 - C     NO TRACE BACK NEEDED IN PRODUCTION    
      3305.    65 - ?OPT, ALL,MAPASM    
      3306.    66 -     
      3307.    67 - ----  Standard USE selections   
      3308.    68 -     
      3309.    69 - ?USE, ALLPX*, MVMI*.         select Patchy + Hydra  
      3310.    70 - ?USE, MAINUIX, D=.  
      3311.    71 - ?USE, *KVMI.                 select Kernlib 
      3312.    72 -     
      3313.    73 - ?PAM.   
      3314.    74 - ?QUIT.  

  188 PATCHY    ================================================== P=INSHELL  D=          1 ============================

      3315.     0 + +PATCH, INSHELL, T=DATA.     Installation shell scripts 
0     3316.     1 + +KEEP, HERETERM.    
      3317.     2 . \\  

  189 PATCHY    ================================================== P=INSHELL  D=BOOTSTRA  1 ============================

      3318.     0 + +DECK, BOOTSTRAP, T=JOIN.   
      3319.     1 - #!/bin/csh  -v  
      3320.     2 - # Installation Jobs 
      3321.     3 -     
      3322.     4 -  set  ORIG =   $HOME/patchy        # origin directory for step jinst3/4 
      3323.     5 -  set  TARG =   /usr/local/bin      # target directory   
0     3324.     6-+ +SELF, IF=QMALT.    
      3325.     7 -  set  FOPT  = "-Og -w"             # Fortran compiler options   
      3326.     8 -  set  FOPTC = "-c $FOPT"    
0     3327.     9-+ +SELF, IF=QMAPO, IF=-QMAPO10.   
      3328.    10 -  set  FXXX = '-bounds_violation -opt 3 -cpu mathlib_sr10'   
      3329.    11 -  set  FOPT = "-ndb -info 1 -indexl $FXXX"  # Fortran compiler options   
      3330.    12 -  set  FOPTC = "$FOPT"   
0     3331.    13-+ +SELF, IF=QMAPO10.  
      3332.    14 -  set  FXXX = '-bounds_violation -opt 3 -cpu 10000'  
      3333.    15 -  set  FOPT = "-ndb -info 1 -indexl $FXXX"  # Fortran compiler options   
      3334.    16 -  set  FOPTC = "$FOPT"   
0     3335.    17-+ +SELF, IF=QMCVX.    
      3336.    18 -  set  FOPT = '-72 -p8'             # Fortran compiler options   
      3337.    19 -  set  FOPTC = "-c $FOPT"    
0     3338.    20-+ +SELF, IF=QMCVY.    
      3339.    21 -  set  FOPT = '-72'                 # Fortran compiler options   
      3340.    22 -  set  FOPTC = "-c $FOPT"    
1 189                                                              P=INSHELL  D=BOOTSTRA  2                     PAGE  44

      3341.    23-+ +SELF, IF=QMHPX.    
      3342.    24 -  set  FOPT  = "+ppu"               # Fortran compiler options   
      3343.    25 -  set  FOPTC = "-c $FOPT"    
0     3344.    26-+ +SELF, IF=QMIBX.    
      3345.    27 -  set  FOPT  = " "                  # Fortran compiler options   
      3346.    28 -  set  FOPTC = "-c $FOPT"    
0     3347.    29-+ +SELF, IF=QMIRT.    
      3348.    30 -  set  FOPT = '-q extname -O'       # Fortran compiler options   
      3349.    31 -  set  FOPTC = "-c $FOPT"    
0     3350.    32-+ +SELF, IF=QMSGI.    
      3351.    33 -  set  FOPT  = " "                  # Fortran compiler options   
      3352.    34 -  set  FOPTC = "-c $FOPT"    
0     3353.    35-+ +SELF, IF=QMSUN.    
      3354.    36 -  set  FOPT  = "-O -w66"            # Fortran compiler options   
      3355.    37 -  set  FOPTC = "-c $FOPT"    
0     3356.    38-+ +SELF, IF=QMVMI.    
      3357.    39 -  set  FOPT  = "-O"                 # Fortran compiler options   
      3358.    40 -  set  FOPTC = "-c $FOPT"    
0     3359.    41-+ +SELF.  
      3360.    42 -     
      3361.    43 - # *******************************************************************   
      3362.    44 - # *                                                                 *   
      3363.    45 - # *       Shell Script for Boot-strap / Re-installation             *   
      3364.    46 - # *                        of PATCHY                                *   
      3365.    47 - # *                                                                 *   
      3366.    48 - # *******************************************************************   
      3367.    49 -     
      3368.    50 -  if ( $#argv == 0 ) then    
      3369.    51 -    tee <<\\ 
      3370.    52 - # Run this script with   csh  -v  p4inst.sh  j  >&p4inst.log  & 
      3371.    53 - # where :   
      3372.    54 - #     j  =  0  for Boot-strap   
      3373.    55 - #        =  1  for Re-installation Part 1   
      3374.    56 - #        =  2  for Re-installation Part 2   
      3375.    57 - #        =  3  release the new files to the users, saving the old   
      3376.    58 - #        =  4  release the new files to the users, only 
      3377.    59 - #       other  as you may have changed the script.  
      3378.    60 - #   
      3379.    61 - #     Make sure there are no trailing blanks in this script !   
      3380.    62 - #     Make sure that the variable PATH contains both . and ..   
      3381.    63 - #   
      3382.    64 - #   ------------------------------------------------------- 
      3383.    65.- +SEQ, HERETERM. 
      3384.    66 -    exit 
      3385.    67 -   endif 
      3386.    68 -     
      3387.    69 -  set    clobber 
      3388.    70 -  echo   "      variable ORIG = $ORIG"   
      3389.    71 -  echo   "      variable TARG = $TARG"   
      3390.    72 -  echo   "      variable PATH = $PATH"   
      3391.    73 -     
      3392.    74 -  set   mode_xqt = $1    
      3393.    75 -  if ( $mode_xqt == 0 )  goto jboot3 
      3394.    76 -  if ( $mode_xqt == 1 )  goto jinst1 
      3395.    77 -  if ( $mode_xqt == 2 )  goto jinst2 
      3396.    78 -  if ( $mode_xqt == 3 )  goto jinst3 
      3397.    79 -  if ( $mode_xqt == 4 )  goto jinst4 
      3398.    80 -  if ( $mode_xqt == 16 ) goto step16 
      3399.    81 -  echo '  ***** invalid parameter j, no execution *****' 
      3400.    82 -  exit   
      3401.    83 -     
      3402.    84 - jboot3: 
      3403.    85 -     
      3404.    86 - # *******************************************************************   
      3405.    87 - # *                                                                 *   
      3406.    88 - # *  job BOOT 3 :  Boot-Strap, ie. first installation of PATCHY     *   
      3407.    89 - # *                                                                 *   
      3408.    90 - # *  This requires jobs BOOT 1+2 to have been executed              *   
      3409.    91 - # *  such that the following files do now exist :                   *   
      3410.    92 - # *                                                                 *   
      3411.    93 - # *                      p4inceta       copy of file 2 of the tape  *   
      3412.    94 - # *                      p4crad.cra     cradle                      *   
      3413.    95 - # *                      fcasplit.f     program FCASPLIT            *   
      3414.    96 - # *                      p4comp.fca     source ready to compile     *   
      3415.    97 - # *                                                                 *   
      3416.    98 - # *******************************************************************   
      3417.    99 -     
      3418.   100 - goto step11 
      3419.   101 - #   ------------------------------------------------------- 
      3420.   102 -     
      3421.   103 - jinst1: 
      3422.   104 -     
      3423.   105 - # *******************************************************************   
      3424.   106 - # *                                                                 *   
      3425.   107 - # *  job INST 1 :   Re-Installation of PATCHY, Part 1               *   
      3426.   108 - # *                                                                 *   
      3427.   109 - # *******************************************************************   
      3428.   110 -     
      3429.   111 - #     Before running re-installation part 1 
      3430.   112 - #     the new files must have been copied from the tape with :  
      3431.   113 - #   
0     3432.   114-+ +SELF, IF=QMAPO.    
      3433.   115 - #  rwmt -r p4inceta     -sbin -f 2 -rf f -rl 3600 -bl 3600 -unlab   
      3434.   116 - #   
      3435.   117 - #     file   p4inceta   is expected to be a copy on disk    
      3436.   118 - #     of the second file from the Standard PATCHY export tape.  
      3437.   119 - #   
      3438.   120 - # Alternatively, if one is short of disk space, and if one is   
      3439.   121 - # running on the node to which the tape unit is connected,  
      3440.   122 - # one can connect the file  P4INCETA  to be file 2 of the   
      3441.   123 - # physical tape with the statements :   
1 189                                                              P=INSHELL  D=BOOTSTRA  3                     PAGE  45

      3442.   124 - #   
      3443.   125 - #   dlf      p4inceta   
      3444.   126 - #   edmtdesc p4inceta -c -s lab no reo no clv yes spos yes  
      3445.   127 - #   edmtdesc p4inceta    -s f 2 rf u bl 3600 rl 3600 ascnl no   
0     3446.   128-+ +SELF, IF=QMCVX, QMCVY. 
      3447.   129 - # Stage file 2 of the magnetic tape to disk :   
      3448.   130 - #   
      3449.   131 - # tpalloc -f /dev/rmt20 ceunit  
      3450.   132 - # dd if=ceunit of=rceta.sh ibs=3600 cbs=80 conv=unblock  # read file 1  
      3451.   133 - # cp ceunit p4inceta                                     # read file 2  
      3452.   134 - # tpdealloc ceunit  
0     3453.   135-+ +SELF, IF=QMALT, QMHPX, QMIBX, QMIRT, QMSGI, QMSUN, QMVMI.  
      3454.   136 - # select the right density on the magnetic tape unit    
      3455.   137 - # load tape 
      3456.   138 - # type    ansir 
      3457.   139 - # reply   temp.sc    for 'file name'      skipping file 1   
      3458.   140 - #         BINARY     for 'character code'   
      3459.   141 - #         U          for 'record format'    
      3460.   142 - #         3600       for 'block length' 
      3461.   143 - #         3600       for 'record length'    
      3462.   144 - #   
      3463.   145 - # reply   p4inceta   for 'file name'         doing file 2   
      3464.   146 - #         BINARY     for 'character code'   
      3465.   147 - #         U          for 'record format'    
      3466.   148 - #         3600       for 'block length' 
      3467.   149 - #         3600       for 'record length'    
0     3468.   150-+ +SELF, IF=QMALT.    
      3469.   151 - #   
      3470.   152 - #     If one prefers to read the tape directly, 
      3471.   153 - #     activate and change this code, de-activate the disk read  
      3472.   154 - #>  
      3473.   155 - #>   setenv  tape '/dev/rxt00m' 
      3474.   156 - #>   mt rewind  
      3475.   157 - #>   mt fsf 
      3476.   158 - #>  
      3477.   159 - #>   yfrceta  <<\\  
      3478.   160 - #>     /dev/rxt00m!  =p4make  MP  :go   
      3479.   161 - #>  +PAM, N=1.                     P4MAKE.PAM   
      3480.   162 - #>  +PAM, LUN=21, T=ATT, N=1     .=P4CRAD.PAM   
      3481.   163 - #>  +PAM, LUN=21, T=ATT, N=2,4   .=P4PAM.PAM    
      3482.   164 - #>  +QUIT.  
      3483.   165 - #>  \\  
      3484.   166 - #>  
0     3485.   167-+ +SELF.  
      3486.   168 -     
      3487.   169 - # Note : you may have to remove the A option from the YFRCETA call; 
      3488.   170 - #        this option causes Direct Access reading of the CETA file. 
      3489.   171 -     
      3490.   172 -  yfrceta   p4inceta!  =p4make  AP    <<\\   
      3491.   173 -   tty tty .go   
      3492.   174 - ?PAM, N=1.                     p4make.pam   
      3493.   175 - ?PAM, LUN=21, T=ATT, N=1     .=p4crad.pam   
      3494.   176 - ?PAM, LUN=21, T=ATT, N=2,4   .=p4pam.pam    
      3495.   177 - ?QUIT.  
      3496.   178.- +SEQ, HERETERM. 
      3497.   179 -     
      3498.   180 -     
      3499.   181 - # end yfrceta   
      3500.   182 -     
      3501.   183 -  ytobcd    p4make =p4make.sh    <<\\    
      3502.   184 -   - - tty .go   
      3503.   185.- +SEQ, HERETERM. 
      3504.   186 -  ytobcd    p4crad =p4crad.cra   <<\\    
      3505.   187 -   - - tty .go   
      3506.   188.- +SEQ, HERETERM. 
      3507.   189 -  rm  p4crad.pam 
      3508.   190 -  rm  p4make.pam 
      3509.   191 -  chmod u+x  p4make.sh   
      3510.   192 -     
      3511.   193 - #   Please inspect and adjust the new files  p4make.sh + p4crad.cra 
      3512.   194 - #   before running Part 2 of the re-installation procedure. 
      3513.   195 -     
      3514.   196 -  exit   
      3515.   197 - #   ------------------------------------------------------- 
      3516.   198 -     
      3517.   199 - jinst2: 
      3518.   200 -     
      3519.   201 - # *******************************************************************   
      3520.   202 - # *                                                                 *   
      3521.   203 - # *  job INST 2 :   Re-Installation of PATCHY, Part 2               *   
      3522.   204 - # *                                                                 *   
      3523.   205 - # *******************************************************************   
      3524.   206 -     
      3525.   207 -  echo ' -----------   ---->  Run YPATCHY to generate the ASM files' 
      3526.   208 -     
      3527.   209 -  ypatchy   <<\\ 
      3528.   210 -    p4pam =p4comp.fca p4crad tty -- =fcasplit  .go   
      3529.   211.- +SEQ, HERETERM. 
      3530.   212 -     
      3531.   213 - step11: 
      3532.   214 -  echo ' -----------   ---->  Compile new program fcasplit'  
      3533.   215 -     
0     3534.   216-+ +SELF, IF=QMALT.    
      3535.   217 -  fortran  $FOPT -o fcasplit  fcasplit.f 
0     3536.   218-+ +SELF, IF=QMAPO.    
      3537.   219 -  /com/ftn  fcasplit.ftn $FOPT   
      3538.   220 -  ld     -o fcasplit  fcasplit.bin   
1 189                                                              P=INSHELL  D=BOOTSTRA  4                     PAGE  46

      3539.   221-+ +SELF, IF=QMCVX, QMCVY. 
      3540.   222 -  fc   $FOPT -o fcasplit  fcasplit.f 
0     3541.   223-+ +SELF, IF=QMIBX.    
      3542.   224 -  fvs  $FOPTC fcasplit.f 
0     3543.   225-+ +SELF, IF=QMIRT.    
      3544.   226 -  xlf  $FOPT -o fcasplit  fcasplit.f 
0     3545.   227-+ +SELF, IF=QMHPX, QMSGI, QMSUN, QMVMI.   
      3546.   228 -  f77  $FOPT -o fcasplit  fcasplit.f 
      3547.   229 -  chmod a+x  fcasplit    
0     3548.   230-+ +SELF.  
      3549.   231 -     
      3550.   232 - step12: 
      3551.   233 -  echo ' -----------   ---->  Compile P4COMP,  create P4LIB' 
      3552.   234 -     
      3553.   235 -  if ( -f libp4lib.a )  rm libp4lib.a    
      3554.   236 -  if ( -d p4sub )  rm -r p4sub   
      3555.   237 -  mkdir p4sub    
      3556.   238 -  cd p4sub                    # operate in the sub-directory p4sub   
      3557.   239 -     
      3558.   240 -  fcasplit  ../p4comp.fca  "$FOPTC"  
      3559.   241 -     
0     3560.   242-+ +SELF, IF=QMALT.    
      3561.   243 -  csh  -v p4comp.shfca   
0     3562.   244-+ +SELF, IF=QMAPO.    
      3563.   245 -  csh  -v p4comp.shfca   
      3564.   246 - /com/chn   '{?*}.bin'  '@1.o'   
      3565.   247 - # foreach NAME (*.bin)  
      3566.   248 - #    set FN=`echo $NAME | sed -e "s/\./ /" | awk '{ print $1 }'`    
      3567.   249 - #    mv $FN.bin $FN.o   
      3568.   250 - #  end  
0     3569.   251-+ +SELF, IF=QMCVX.    
      3570.   252 -  csh  -v p4comp.shfca   
0     3571.   253-+ +SELF, IF=QMCVY.    
      3572.   254 -  csh  -v p4comp.shfca   
0     3573.   255-+ +SELF, IF=QMHPX.    
      3574.   256 -  csh  -v p4comp.shfca   
0     3575.   257-+ +SELF, IF=QMIBX.    
      3576.   258 -  csh  -v p4comp.shfca   
0     3577.   259-+ +SELF, IF=QMIRT.    
      3578.   260 -  csh  -v p4comp.shfca   
0     3579.   261-+ +SELF, IF=QMSGI.    
      3580.   262 -  csh  -v p4comp.shfca   
0     3581.   263-+ +SELF, IF=QMSUN.    
      3582.   264 -  csh  -v p4comp.shfca   
0     3583.   265-+ +SELF, IF=QMVMI.    
      3584.   266 -  csh  -v p4comp.shfca   
0     3585.   267-+ +SELF.  
      3586.   268 -     
      3587.   269 -  mv    ypatch.o    ../ypatch.o  
      3588.   270 -  mv    ytobcd.o    ../ytobcd.o  
      3589.   271 -  mv    ytobin.o    ../ytobin.o  
      3590.   272 -  mv    ytocet.o    ../ytocet.o  
      3591.   273 -  mv    yfrcet.o    ../yfrcet.o  
      3592.   274 -  mv    ycompa.o    ../ycompa.o  
      3593.   275 -  mv    yedit.o     ../yedit.o   
      3594.   276 -  mv    yindex.o    ../yindex.o  
      3595.   277 -  mv    ylist.o     ../ylist.o   
      3596.   278 -  mv    ysearc.o    ../ysearc.o  
      3597.   279 -  mv    yshift.o    ../yshift.o  
0     3598.   280-+ +SELF, IF=QMAPO.    
      3599.   281 -  mv    cvfixto.o   ../cvfixto.o 
0     3600.   282-+ +SELF.  
      3601.   283 -     
      3602.   284 -  ar rc  ../libp4lib.a  `lorder *.o | tsort` 
      3603.   285 -  rm  *.o    
      3604.   286 -     
      3605.   287 -  cd ../                                # back to normal 
0     3606.   288-+ +SELF, IF=QMALT, QMCVX, QMCVY, QMIBX, QMSUN, QMVMI. 
      3607.   289 -  ranlib libp4lib.a  
0     3608.   290-+ +SELF.  
      3609.   291 -     
      3610.   292 - step14: 
      3611.   293 -  echo ' -----------   ---->  Make the new Patchy executable files'  
0     3612.   294-+ +SELF, IF=QMALT.    
      3613.   295 -  set  CLD  = "fortran"  
0     3614.   296-+ +SELF, IF=QMAPO.    
      3615.   297 -  set  CLD  = "ld"   
0     3616.   298-+ +SELF, IF=QMCVX.    
      3617.   299 -  set  CLD  = "fc -p8"   
0     3618.   300-+ +SELF, IF=QMCVY.    
      3619.   301 -  set  CLD  = "fc"   
1 189                                                              P=INSHELL  D=BOOTSTRA  5                     PAGE  47

      3620.   302-+ +SELF, IF=QMIBX.    
      3621.   303 -  set  CLD  = "fvs"  
0     3622.   304-+ +SELF, IF=QMIRT.    
      3623.   305 -  set  CLD  = "xlf -O"   
0     3624.   306-+ +SELF, IF=QMHPX, QMSGI, QMSUN, QMVMI.   
      3625.   307 -  set  CLD  = "f77"  
0     3626.   308-+ +SELF.  
      3627.   309 -     
      3628.   310 -  $CLD   -o ypatchy  ypatch.o   libp4lib.a   
      3629.   311 -  $CLD   -o ytobcd   ytobcd.o   libp4lib.a   
      3630.   312 -  $CLD   -o ytobin   ytobin.o   libp4lib.a   
      3631.   313 -  $CLD   -o ytoceta  ytocet.o   libp4lib.a   
      3632.   314 -  $CLD   -o yfrceta  yfrcet.o   libp4lib.a   
      3633.   315 -  $CLD   -o ycompar  ycompa.o   libp4lib.a   
      3634.   316 -  $CLD   -o yedit    yedit.o    libp4lib.a   
      3635.   317 -  $CLD   -o yindex   yindex.o   libp4lib.a   
      3636.   318 -  $CLD   -o ylist    ylist.o    libp4lib.a   
      3637.   319 -  $CLD   -o ysearch  ysearc.o   libp4lib.a   
      3638.   320 -  $CLD   -o yshift   yshift.o   libp4lib.a   
0     3639.   321-+ +SELF, IF=QMAPO.    
      3640.   322 -  $CLD   -o cvfixto  cvfixto.o  libp4lib.a   
0     3641.   323-+ +SELF, IF=QMIBX.    
      3642.   324 -  $CLD   -o fcasplit fcasplit.o libp4lib.a   
0     3643.   325-+ +SELF.  
      3644.   326 -     
      3645.   327 -  chmod a+x  ypatchy 
      3646.   328 -  chmod a+x  ytobcd  
      3647.   329 -  chmod a+x  ytobin  
      3648.   330 -  chmod a+x  ytoceta 
      3649.   331 -  chmod a+x  yfrceta 
      3650.   332 -  chmod a+x  ycompar 
      3651.   333 -  chmod a+x  yedit   
      3652.   334 -  chmod a+x  yindex  
      3653.   335 -  chmod a+x  ylist   
      3654.   336 -  chmod a+x  ysearch 
      3655.   337 -  chmod a+x  yshift  
      3656.   338 -     
      3657.   339 -  if ( $mode_xqt > 0 ) goto step16   
      3658.   340 - step15: 
      3659.   341 -  echo ' -----------   ---->  Read new Patchy PAM from the CETA file'    
      3660.   342 -     
      3661.   343 - # Note : you may have to remove the A option from the YFRCETA call; 
      3662.   344 - #        this option causes Direct Access reading of the CETA file. 
      3663.   345 -     
      3664.   346 -  yfrceta  <<\\  
      3665.   347 -    p4inceta!  =p4pam  AP  :go   
      3666.   348 - ?PAM, N=4,4.    
      3667.   349 - ?QUIT.  
      3668.   350.- +SEQ, HERETERM. 
      3669.   351 -     
      3670.   352 - step16: 
      3671.   353 -  echo ' -----------   ---->  First run of new YPATCHY, repeat generation'   
      3672.   354 -     
      3673.   355 - # *******************************************************************   
      3674.   356 - # *                                                                 *   
      3675.   357 - # *            Test run of YPATCHY                                  *   
      3676.   358 - # *                                                                 *   
      3677.   359 - # *******************************************************************   
      3678.   360 -     
      3679.   361 -  cd p4sub                    # operate in the sub-directory p4sub   
      3680.   362 -     
      3681.   363 -  ../ypatchy   <<\\  
      3682.   364 -  help   
      3683.   365 -    ../p4pam =asm.fca ../p4crad tty -- =asm2   .go   
      3684.   366.- +SEQ, HERETERM. 
      3685.   367 - #-----------    
      3686.   368 - step17: 
      3687.   369 -  echo ' Check new ASM files against originals'  
      3688.   370 -  ../ytobin    <<\\  
      3689.   371 -    asm.fca  =binfn    p  c+  :go    
      3690.   372.- +SEQ, HERETERM. 
      3691.   373 -  rm  asm.fca    
      3692.   374 -  ../ytobin    <<\\  
      3693.   375 -    ../p4comp.fca  =binf  +p c+  :go 
      3694.   376.- +SEQ, HERETERM. 
      3695.   377 -  ../ycompar   <<\\  
      3696.   378 -    binfn binf         +      :go    
      3697.   379.- +SEQ, HERETERM. 
      3698.   380 -  echo ' 1 failure expected in step17 for difference in time'    
      3699.   381 -  rm  binf.pam   
      3700.   382 -  rm  binfn.pam  
      3701.   383 -  cd ../                                # back to normal 

  190 PATCHY    ================================================== P=INSHELL  D=TESTJOBS  1 ============================

      3702.     0 + +DECK, TESTJOBS, T=JOIN.    
      3703.     1 -     
      3704.     2 - # *******************************************************************   
      3705.     3 - # *                                                                 *   
      3706.     4 - # *            Test runs of the PATCHY Auxiliaries                  *   
      3707.     5 - # *                                                                 *   
      3708.     6 - # *******************************************************************   
      3709.     7 -     
      3710.     8 - #-----------    
      3711.     9 - stept1: 
      3712.    10 -     
      3713.    11 -  cd p4sub                    # operate in the sub-directory p4sub   
      3714.    12 -     
      3715.    13 -  echo ' Make PXUSE as PAM file used in the tests'   
      3716.    14 -  ../yedit    <<\\   
      3717.    15 -    ../p4pam =pxuse k ?+ tty  =y   .go   
      3718.    16 - ?OPTION, LOG, LEV=3.    
1 190                                                              P=INSHELL  D=TESTJOBS  2                     PAGE  48

      3719.    17 - ?COPY, P=ALLPX*.    
      3720.    18 - ?GET,  P=ALLX*. 
      3721.    19 - ?COPY, P=FLDIALG.   
      3722.    20 - ?GET,  P=ARRIVE.    
      3723.    21 - ?SKIP, F=.  
      3724.    22 - ?COPY, P=QEND.  
      3725.    23 - ?GET, P=MQ. 
      3726.    24 - ?QUIT.  
      3727.    25.- +SEQ, HERETERM. 
      3728.    26 -     
      3729.    27 - #-----------    
      3730.    28 - stept2: 
      3731.    29 -  echo ' Check  YTOBCD, YTOBIN, YCOMPAR' 
      3732.    30 -  ../ytobcd    <<\\  
      3733.    31 -    pxuse =pxcar                .go  
      3734.    32.- +SEQ, HERETERM. 
      3735.    33 -  ../ytobin    <<\\  
      3736.    34 -    pxcar =pxcopy q+            .go  
      3737.    35.- +SEQ, HERETERM. 
      3738.    36 -  rm  pxcar.car  
      3739.    37 -  ../ycompar   <<\\  
      3740.    38 -    pxcopy pxuse q+             .go  
      3741.    39.- +SEQ, HERETERM. 
      3742.    40 -     
      3743.    41 - #-----------    
      3744.    42 - stept3: 
      3745.    43 -  echo ' Exercise YEDIT' 
      3746.    44 - #       This YEDIT run up-dates all PAM-titles, 
      3747.    45 - #       giving raise to comparison failures later on    
      3748.    46 -     
      3749.    47 -  ../yedit    pxuse =pxcopy ak - eof      .go    
      3750.    48 -  ../ycompar  pxcopy pxuse q+             .go    
      3751.    49 -  echo ' Comparison failures in stept3 as expected'  
      3752.    50 -     
      3753.    51 - #-----------    
      3754.    52 - stept4: 
      3755.    53 -  echo ' Make P4TLIS to be listed'   
      3756.    54 -     
      3757.    55 -  ../yedit    ../p4pam - dk \?+ tty :=P4TLIS .go   <<\\  
      3758.    56 - ?STREAM, NEW1, LUN=21, T=ATT      .=:P4TLIS 
      3759.    57 - ?COPY, P=FLDIALG.   
      3760.    58 - ?GET, P=QABEND. 
      3761.    59 - ?GET,, P=PINIT. 
      3762.    60 - ?GET,, P=ARRIVE, LEV=2. 
      3763.    61 - ?GET, ARBIN.    
      3764.    62 - ?GET,, P=YTOCETA, LEV=2.    
      3765.    63 - ?GET, TOCETA.   
      3766.    64 - ?GET,, P=YFRCETA.   
      3767.    65 - ?GET, FRCETA.   
      3768.    66 - ?GET, P=AUXINI,L=2. 
      3769.    67 - ?GET, P=POPIN.  
      3770.    68 - ?GET, -AUXFIL, P=SERVAUX.   
      3771.    69 - ?GET, -IOFILX, P=SERVICE.   
      3772.    70 - ?GET, QABEND-PABEND.    
      3773.    71 - ?SKIP, F=,L=2.  
      3774.    72 - ?XSKIP, F=KERNFOR, LEV=2.   
      3775.    73 - ?DEL.   
      3776.    74 - ?QUIT.  
      3777.    75.- +SEQ, HERETERM. 
      3778.    76 - #-----------    
      3779.    77 - stept5: 
      3780.    78 -  echo ' Try YINDEX + YLIST' 
      3781.    79 -     
      3782.    80 -  ../yindex   :P4TLIS -  :+1              .go    
      3783.    81 -  ../ylist    :P4TLIS w3 :+1              .go    
      3784.    82 -     
      3785.    83 - #-----------    
      3786.    84 - stept6: 
      3787.    85 -  echo ' Try YSHIFT' 
      3788.    86 -     
      3789.    87 -  ../yshift   pxuse =pxcopy p tty         .go   <<\\ 
      3790.    88 - MACRO,A4,B32,HEX,L30,-IBM,UNI,PDP,CDC   
      3791.    89 - TAG, -MSK, MSKC, MSKI, MSKU 
      3792.    90 - TAG, -DEBUG.    
      3793.    91 - ?PAM, N=1.  
      3794.    92 - ?QUIT.  
      3795.    93.- +SEQ, HERETERM. 
      3796.    94 -  ../ycompar  pxcopy pxuse q+             .go    
      3797.    95 -  echo ' Possible comparison failures expected in stept6'    
      3798.    96 -     
      3799.    97 - #-----------    
      3800.    98 - stept7: 
      3801.    99 -  echo ' Try YSEARCH'    
      3802.   100 -     
      3803.   101 -  ../ysearch  pxuse =temp - tty           .go   <<\\ 
      3804.   102 - IBX 
      3805.   103 - ?PAM.   
      3806.   104.- +SEQ, HERETERM. 
      3807.   105 -     
      3808.   106 -  ../ysearch  pxuse =temp - tty - =temp   .go   <<\\ 
      3809.   107 - QUNIT   
      3810.   108 - QMACH     XXYXX 
      3811.   109 - QBCD    
      3812.   110 - ?OPT, SPLIT.    
      3813.   111 - CCPARA    NCHCC     JCCTYP    MXCCIF    
      3814.   112 - LADRV   
      3815.   113 - NVOPER  
      3816.   114 - JASK      ARRIVE    
      3817.   115 - ?PAM, N=1.  
      3818.   116.- +SEQ, HERETERM. 
      3819.   117 -  rm  temp.* 
      3820.   118 -     
      3821.   119 - #-----------    
      3822.   120 - stept8: 
      3823.   121 -  echo ' Try YTOCETA/YFRCETA with disk-file' 
      3824.   122 -     
      3825.   123 -  ../ytoceta  pxuse =ce.dat - tty         .go   <<\\ 
      3826.   124 - ?PAM, N=2.  
1 190                                                              P=INSHELL  D=TESTJOBS  3                     PAGE  49

      3827.   125 - ?QUIT.  
      3828.   126.- +SEQ, HERETERM. 
      3829.   127 -  ../yfrceta  ce.dat =1  q+ eof           .go    
      3830.   128 -  ../ycompar  ce pxuse q+                 .go    
      3831.   129 -  rm  ce.*   
      3832.   130 -  rm  pxcopy.pam 
      3833.   131 -  rm  pxuse.pam  
      3834.   132 -  rm  P4TLIS.pam 
      3835.   133 -  cd ../                                # back to normal 
      3836.   134 -  mv  p4sub/P4TLIS.lis p4tlis.lis    
      3837.   135 -  mv  p4sub/y.lis .  
      3838.   136 -  echo ' look at file  y.lis'    
      3839.   137 -  echo ' look at file  p4tlis.lis'   
      3840.   138 -  exit   
      3841.   139 - #   ------------------------------------------------------- 

  191 PATCHY    ================================================== P=INSHELL  D=RELEASE   1 ============================

      3842.     0 + +DECK, RELEASE, T=JOIN. 
      3843.     1 -     
      3844.     2 - # *******************************************************************   
      3845.     3 - # *                                                                 *   
      3846.     4 - # *  job INST 3 :   Instal the release files                        *   
      3847.     5 - # *                                                                 *   
      3848.     6 - # *******************************************************************   
      3849.     7 -     
      3850.     8 - jinst3: 
      3851.     9 -  echo ' -----------   ---->  Save the existing files'   
      3852.    10 -  mv -f  $TARG/ypatchy   $TARG/ypatchy.prev  
      3853.    11 -  mv -f  $TARG/ytobcd    $TARG/ytobcd.prev   
      3854.    12 -  mv -f  $TARG/ytobin    $TARG/ytobin.prev   
      3855.    13 -  mv -f  $TARG/ytoceta   $TARG/ytoceta.prev  
      3856.    14 -  mv -f  $TARG/yfrceta   $TARG/yfrceta.prev  
      3857.    15 -  mv -f  $TARG/ycompar   $TARG/ycompar.prev  
      3858.    16 -  mv -f  $TARG/yedit     $TARG/yedit.prev    
      3859.    17 -  mv -f  $TARG/yindex    $TARG/yindex.prev   
      3860.    18 -  mv -f  $TARG/ylist     $TARG/ylist.prev    
      3861.    19 -  mv -f  $TARG/ysearch   $TARG/ysearch.prev  
      3862.    20 -  mv -f  $TARG/yshift    $TARG/yshift.prev   
      3863.    21 -  mv -f  $TARG/fcasplit  $TARG/fcasplit.prev 
0     3864.    22-+ +SELF, IF=QMAPO.    
      3865.    23 -  mv -f  $TARG/cvfixto   $TARG/cvfixto.prev  
0     3866.    24-+ +SELF.  
      3867.    25 -     
      3868.    26 - jinst4: 
      3869.    27 -  echo ' -----------   ---->  Instal the new files'  
      3870.    28 -  mv -f  $ORIG/ypatchy   $TARG/ypatchy   
      3871.    29 -  mv -f  $ORIG/ytobcd    $TARG/ytobcd    
      3872.    30 -  mv -f  $ORIG/ytobin    $TARG/ytobin    
      3873.    31 -  mv -f  $ORIG/ytoceta   $TARG/ytoceta   
      3874.    32 -  mv -f  $ORIG/yfrceta   $TARG/yfrceta   
      3875.    33 -  mv -f  $ORIG/ycompar   $TARG/ycompar   
      3876.    34 -  mv -f  $ORIG/yedit     $TARG/yedit 
      3877.    35 -  mv -f  $ORIG/yindex    $TARG/yindex    
      3878.    36 -  mv -f  $ORIG/ylist     $TARG/ylist 
      3879.    37 -  mv -f  $ORIG/ysearch   $TARG/ysearch   
      3880.    38 -  mv -f  $ORIG/yshift    $TARG/yshift    
      3881.    39 -  mv -f  $ORIG/fcasplit  $TARG/fcasplit  
0     3882.    40-+ +SELF, IF=QMAPO.    
      3883.    41 -  mv -f  $ORIG/cvfixto   $TARG/cvfixto   
0     3884.    42-+ +SELF.  
      3885.    43 -  exit   

  192 PATCHY    ================================================== P=MAINUIX  D=          1 ============================

      3886.     0 + +PATCH, MAINUIX.             Main programs for Unix 
0     3887.     1 + +KEEP, NCNAME.  
      3888.     2 .       PARAMETER   (NCNAME=48)   
0     3889.     3 + +KEEP, PGMSTOP, IF=QMAPO.   
      3890.     4 .       CALL PGM_$EXIT    

  193 PATCHY    ================================================== P=MAINUIX  D=BLANKDEK  1 ============================

      3891.     0 + +DECK,BLANKDEK. 
      3892.     1 + +USE, FLDIALG.  
      3893.     2 + +USE, QABEND,              IF=QDEBUG.   
      3894.     3 + +USE, MAINUIX,  D=YPATCH,  IF=PATCHY*.  
      3895.     4 + +USE, MAINUIX,  D=YTOBCD,  IF=YTOBCD*.  
      3896.     5 + +USE, MAINUIX,  D=YTOBIN,  IF=YTOBIN*.  
      3897.     6 + +USE, MAINUIX,  D=YTOCET,  IF=YTOCETA*. 
      3898.     7 + +USE, MAINUIX,  D=YFRCET,  IF=YFRCETA*. 
      3899.     8 + +USE, MAINUIX,  D=YCOMPA,  IF=YCOMPAR*. 
      3900.     9 + +USE, MAINUIX,  D=YEDIT,   IF=YEDIT*.   
      3901.    10 + +USE, MAINUIX,  D=YINDEX,  IF=YINDEX*.  
      3902.    11 + +USE, MAINUIX,  D=YLIST,   IF=YLIST*.   
      3903.    12 + +USE, MAINUIX,  D=YSEARC,  IF=YSEARCH*. 
      3904.    13 + +USE, MAINUIX,  D=YSHIFT,  IF=YSHIFT*.  

  194 PATCHY    ================================================== P=MAINUIX  D=YPATCH    1 ============================

      3905.     0 + +DECK, YPATCH.  
      3906.     1.- +SEQ, QCARD1.   
      3907.     2 -       PROGRAM YPATCH    
      3908.     3 -     
      3909.     4.- +CDE, MQCALL.   
      3910.     5.- +CDE, ARRCOM, ARRVRQ, CCPARA, CCTEXT, CCTYPE.   
      3911.     6.- +CDE, CONST, IOFCOM, KDPKCM, NAMES. 
      3912.     7.- +CDE, SQ, PY.   
      3913.     8.- +SEQ, SPACEPAT. 
      3914.     9 - C--------------    END CDE                             --------------   
      3915.    10 -     
1 194                                                              P=MAINUIX  D=YPATCH    2                     PAGE  50

      3916.    11.- +SEQ, NCNAME.   
      3917.    12 -       PARAMETER   (NFILES=13)   
      3918.    13 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      3919.    14 -     
      3920.    15 -     
      3921.    16 -       DATA NAME/ 'PAM     .pam        11    1024       0      !FF!' 
      3922.    17 -      +,          'ASM     .f          21      68       0      !FF!' 
      3923.    18 -      +,          'READ    .cra         1       4       0      !FF!' 
      3924.    19 -      +,          'PRINT   .lis         2      68       0      !FF!' 
      3925.    20 -      +,          'ASMA    .s          22      68       0      !FF!' 
      3926.    21 -      +,          'ASMD    .dat        23      68       0      !FF!' 
      3927.    22 -      +,          'ASM2    .f          31      68       0      !FF!' 
      3928.    23 -      +,          'ASMA2   .s          32      68       0      !FF!' 
      3929.    24 -      +,          'ASMD2   .dat        33      68       0      !FF!' 
      3930.    25 -      +,          'ASMX    .c          24      68       0      !FF!' 
      3931.    26 -      +,          'ASMX2   .c          34      68       0      !FF!' 
      3932.    27 -      +,          'ASMY    .y          25      68       0      !FF!' 
      3933.    28 -      +,          'ASMY2   .y          35      68       0      !FF!' /   
      3934.    29 - C-                _:.=+=.:_1_:.=+=.:_2_:.=+=.:_3_:.=+=.:_4_:.=+=.:  
      3935.    30 -     
0     3936.    31-+ +SELF, IF=QMAPO.    
      3937.    32 -       NAME(2)(9:12) = '.ftn'    
      3938.    33 -       NAME(7)(9:12) = '.ftn'    
0     3939.    34-+ +SELF.  
      3940.    35 -     
      3941.    36 -       CALL FLPARA (NFILES,NAME, 
      3942.    37 -      +   'YPATCHY .')   
      3943.    38 -     
      3944.    39 -       CALL PINIT    
      3945.    40 -       NQUSED= 20    
      3946.    41 -     
      3947.    42 -    21 CALL DOSPEC   
      3948.    43 -       IF (JANSW.GE.5)        GO TO 31   
      3949.    44 -       CALL DORUN    
      3950.    45 -       GO TO 21  
      3951.    46 -     
      3952.    47 -    31 CONTINUE  
      3953.    48 -       CALL PEND 
      3954.    49.- +SEQ, PGMSTOP, T=PASS.  
      3955.    50 -       END   
      3956.    51.- +SEQ, QCARDL.    ====================================================   

  195 PATCHY    ================================================== P=MAINUIX  D=YTOBCD    1 ============================

      3957.     0 + +DECK, YTOBCD, T=JOIN.  
      3958.     1.- +SEQ, QCARD1.   
      3959.     2 -       PROGRAM YTOBCD    
      3960.     3 -     
      3961.     4.- +CDE, LUNSLN    
      3962.     5 -     
      3963.     6.- +SEQ, NCNAME.   
      3964.     7 -       PARAMETER   (NFILES= 6)   
      3965.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      3966.     9 -       DATA NAME/ 'PAM     .pam        11       0       1      !FF!' 
      3967.    10 -      +,          'CARD    .car        21      68       4      !FF!' 
      3968.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      3969.    12 -      +,          'CCH      -           4       0       0      !FF!' 
      3970.    13 -      +,          'PRINT   .lis         2      68       0      !FF!' 
      3971.    14 -      +,          'PDH     .car        22      68       5      !FF!' /   
      3972.    15 - C-                _:.=+=.:_1_:.=+=.:_2_:.=+=.:_3_:.=+=.:_4_:.=+=.:  
      3973.    16 -     
      3974.    17 -       CALL FLPARA (NFILES,NAME, 
      3975.    18 -      +   'YTOBCD  No title deck, Separate decks, Title cards, Xpdh.')   
      3976.    19 -     
      3977.    20 -       NSTRM  = 2    
      3978.    21 -       CALL AUXINI   
      3979.    22 -       CALL INCHCH   
      3980.    23 -       CALL YBCDEX   
      3981.    24.- +SEQ, PGMSTOP, T=PASS.  
      3982.    25 -       END   
      3983.    26.- +SEQ, QCARDL.    ====================================================   

  196 PATCHY    ================================================== P=MAINUIX  D=YTOBIN    1 ============================

      3984.     0 + +DECK, YTOBIN, T=JOIN.  
      3985.     1.- +SEQ, QCARD1.   
      3986.     2 -       PROGRAM YTOBIN    
      3987.     3 -     
      3988.     4.- +CDE, LUNSLN    
      3989.     5 -     
      3990.     6.- +SEQ, NCNAME.   
      3991.     7 -       PARAMETER   (NFILES= 5)   
      3992.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      3993.     9 -       DATA NAME/ 'CARD    .car        11       4       1      !FF!' 
      3994.    10 -      +,          'PAM     .pam        21      64       4      !FF!' 
      3995.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      3996.    12 -      +,          'CCH      -           4       0       0      !FF!' 
      3997.    13 -      +,          'PRINT   .lis         2      68       0      !FF!' /   
      3998.    14 - C-                _:.=+=.:_1_:.=+=.:_2_:.=+=.:_3_:.=+=.:_4_:.=+=.:  
      3999.    15 -     
      4000.    16 -       CALL FLPARA (NFILES,NAME, 
      4001.    17 -      +   'YTOBIN  Ponly,Quick, Truncate 72.')   
      4002.    18 -     
      4003.    19 -       NSTRM  = 1    
      4004.    20 -       NBUFCI = 1    
      4005.    21 -       CALL AUXINI   
      4006.    22 -       CALL INCHCH   
      4007.    23 -       CALL YBINEX   
      4008.    24.- +SEQ, PGMSTOP, T=PASS.  
      4009.    25 -       END   
      4010.    26.- +SEQ, QCARDL.    ====================================================   
1 197 PATCHY    ================================================== P=MAINUIX  D=YTOCET    1 =================== PAGE  51

      4011.     0 + +DECK, YTOCET.  
      4012.     1.- +SEQ, QCARD1.   
      4013.     2 -       PROGRAM YTOCET    
      4014.     3 -     
      4015.     4.- +CDE, LUNSLN    
      4016.     5 -     
      4017.     6.- +SEQ, NCNAME.   
      4018.     7 -       PARAMETER   (NFILES= 5)   
      4019.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4020.     9 -       DATA NAME/ 'PAM     .pam        11       0       1      !FF!' 
      4021.    10 -      +,          'CETA    .cet        21     192       4      !FF!' 
      4022.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      4023.    12 -      +,          'READ    .cra         1      -4       0      !FF!' 
      4024.    13 -      +,          'PRINT   .lis         2      68       0      !FF!' /   
      4025.    14 -     
      4026.    15 -       CALL FLPARA (NFILES,NAME, 
      4027.    16 -      +   'YTOCETA Quick, Access_direct, Sequential, Magtape.')  
      4028.    17 -     
      4029.    18 -       CALL AUXINI   
      4030.    19 -       CALL YTOCEX   
      4031.    20.- +SEQ, PGMSTOP, T=PASS.  
      4032.    21 -       END   
      4033.    22.- +SEQ, QCARDL.    ====================================================   

  198 PATCHY    ================================================== P=MAINUIX  D=YFRCET    1 ============================

      4034.     0 + +DECK, YFRCET, T=JOIN.  
      4035.     1.- +SEQ, QCARD1.   
      4036.     2 -       PROGRAM YFRCET    
      4037.     3 -     
      4038.     4.- +CDE, LUNSLN    
      4039.     5 -     
      4040.     6.- +SEQ, NCNAME.   
      4041.     7 -       PARAMETER   (NFILES= 5)   
      4042.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4043.     9 -       DATA NAME/ 'CETA    .cet        11     128       1      !FF!' 
      4044.    10 -      +,          'PAM     .pam        21      64       4      !FF!' 
      4045.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      4046.    12 -      +,          'READ    .cra         1      -4       0      !FF!' 
      4047.    13 -      +,          'PRINT   .lis         2      68       0      !FF!' /   
      4048.    14 -     
      4049.    15 -       CALL FLPARA (NFILES,NAME, 
      4050.    16 -      + 'YFRCETA Ponly,Quick, Access_direct, Sequential, Magtape, True.')    
      4051.    17 -     
      4052.    18 -       NSTRM  = 1    
      4053.    19 -       NBUFCI = 1    
      4054.    20 -       CALL AUXINI   
      4055.    21 -       CALL YFRCEX   
      4056.    22.- +SEQ, PGMSTOP, T=PASS.  
      4057.    23 -       END   
      4058.    24.- +SEQ, QCARDL.    ====================================================   

  199 PATCHY    ================================================== P=MAINUIX  D=YCOMPA    1 ============================

      4059.     0 + +DECK, YCOMPA, T=JOIN.  
      4060.     1.- +SEQ, QCARD1.   
      4061.     2 -       PROGRAM YCOMPA    
      4062.     3 -     
      4063.     4.- +CDE, LUNSLN    
      4064.     5 -     
      4065.     6.- +SEQ, NCNAME.   
      4066.     7 -       PARAMETER   (NFILES= 4)   
      4067.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4068.     9 -       DATA NAME/ 'NEW     .pam        12       0       4      !FF!' 
      4069.    10 -      +,          'OLD     .pam        11       0       1      !FF!' 
      4070.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      4071.    12 -      +,          'PRINT   .lis         2      68       0      !FF!' /   
      4072.    13 -     
      4073.    14 -       CALL FLPARA (NFILES,NAME, 
      4074.    15 -      +   'YCOMPAR Ponly,Quick, Try continue.')  
      4075.    16 -     
      4076.    17 -       NSTRM  = 1    
      4077.    18 -       NBUFCI = 30   
      4078.    19 -       CALL AUXINI   
      4079.    20 -       CALL YCOMEX   
      4080.    21.- +SEQ, PGMSTOP, T=PASS.  
      4081.    22 -       END   
      4082.    23.- +SEQ, QCARDL.    ====================================================   

  200 PATCHY    ================================================== P=MAINUIX  D=YEDIT     1 ============================

      4083.     0 + +DECK, YEDIT.   
      4084.     1.- +SEQ, QCARD1.   
      4085.     2 -       PROGRAM YEDIT 
      4086.     3 -     
      4087.     4.- +CDE, LUNSLN    
      4088.     5 -     
      4089.     6.- +SEQ, NCNAME.   
      4090.     7 -       PARAMETER   (NFILES=10)   
      4091.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4092.     9 -       DATA NAME/ 'OLD1    .pam        11       0       1      !FF!' 
      4093.    10 -      +,          'NEW1    .pam        21      64       4      !FF!' 
      4094.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      4095.    12 -      +,          'CCH      -           4       0       0      !FF!' 
      4096.    13 -      +,          'READ    .cra         1      -4       0      !FF!' 
      4097.    14 -      +,          'PRINT   .lis         2      68       0      !FF!' 
      4098.    15 -      +,          'OLD2    .pam        12       0       2      !FF!' 
      4099.    16 -      +,          'NEW2    .pam        22      64       5      !FF!' 
      4100.    17 -      +,          'OLD3    .pam        13       0       3      !FF!' 
      4101.    18 -      +,          'NEW3    .pam        23      64       6      !FF!' /   
      4102.    19 -     
      4103.    20 -       CALL FLPARA (NFILES,NAME, 
      4104.    21 -      +   'YEDIT   Autoupd, Kill, Next, Ponly,Quick, Truncate 72.')  
      4105.    22 -     
      4106.    23 -       NSTRM  = 3    
      4107.    24 -       NBUFCI = 1    
      4108.    25 -       CALL AUXINI   
      4109.    26 -       CALL INCHCH   
1 200                                                              P=MAINUIX  D=YEDIT     2                     PAGE  52

      4110.    27 -       CALL YEDTEX   
      4111.    28.- +SEQ, PGMSTOP, T=PASS.  
      4112.    29 -       END   
      4113.    30.- +SEQ, QCARDL.    ====================================================   

  201 PATCHY    ================================================== P=MAINUIX  D=YINDEX    1 ============================

      4114.     0 + +DECK, YINDEX, T=JOIN.  
      4115.     1.- +SEQ, QCARD1.   
      4116.     2 -       PROGRAM YINDEX    
      4117.     3 -     
      4118.     4.- +CDE, LUNSLN    
      4119.     5 -     
      4120.     6.- +SEQ, NCNAME.   
      4121.     7 -       PARAMETER   (NFILES= 3)   
      4122.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4123.     9 -       DATA NAME/ 'PAM     .pam        11       0       1      !FF!' 
      4124.    10 -      +,          'OPT      -           3       0       0      !FF!' 
      4125.    11 -      +,          'PRINT   .lis         2      68       0      !FF!' /   
      4126.    12 -     
      4127.    13 -       CALL FLPARA (NFILES,NAME, 
      4128.    14 -      +   'YINDEX  Action,C/c,If,Keep,Seq, Ponly,Quick, Xp,Yd,Zz.')  
      4129.    15 -     
      4130.    16 -       NBUFCI = -1   
      4131.    17 -       NSTRM  = 1    
      4132.    18 -       CALL AUXINI   
      4133.    19 -       CALL YIXEX    
      4134.    20.- +SEQ, PGMSTOP, T=PASS.  
      4135.    21 -       END   
      4136.    22.- +SEQ, QCARDL.    ====================================================   

  202 PATCHY    ================================================== P=MAINUIX  D=YLIST     1 ============================

      4137.     0 + +DECK, YLIST, T=JOIN.   
      4138.     1.- +SEQ, QCARD1.   
      4139.     2 -       PROGRAM YLIST 
      4140.     3 -     
      4141.     4.- +CDE, LUNSLN    
      4142.     5 -     
      4143.     6.- +SEQ, NCNAME.   
      4144.     7 -       PARAMETER   (NFILES= 3)   
      4145.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4146.     9 -       DATA NAME/ 'PAM     .pam        11       0       1      !FF!' 
      4147.    10 -      +,          'OPT      -           3       0       0      !FF!' 
      4148.    11 -      +,          'PRINT   .lis         2      68       0      !FF!' /   
      4149.    12 -     
      4150.    13 -       CALL FLPARA (NFILES,NAME, 
      4151.    14 -      +   'YLIST   Eject hon, Start page, Wylbur lines, 0,1,2,3.')   
      4152.    15 -     
      4153.    16 -       NBUFCI = -1   
      4154.    17 -       NSTRM  = 1    
      4155.    18 -       CALL AUXINI   
      4156.    19 -       CALL YLISEX   
      4157.    20.- +SEQ, PGMSTOP, T=PASS.  
      4158.    21 -       END   
      4159.    22.- +SEQ, QCARDL.    ====================================================   

  203 PATCHY    ================================================== P=MAINUIX  D=YSEARC    1 ============================

      4160.     0 + +DECK, YSEARC.  
      4161.     1.- +SEQ, QCARD1.   
      4162.     2 -       PROGRAM YSEARC    
      4163.     3 -     
      4164.     4.- +CDE, LUNSLN    
      4165.     5 -     
      4166.     6.- +SEQ, NCNAME.   
      4167.     7 -       PARAMETER   (NFILES= 6)   
      4168.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4169.     9 -       DATA NAME/ 'PAM     .pam        11       0       1      !FF!' 
      4170.    10 -      +,          'CARD    .car        21      68       4      !FF!' 
      4171.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      4172.    12 -      +,          'READ    .cra         1       4       0      !FF!' 
      4173.    13 -      +,          'PRINT   .lis         2      68       0      !FF!' 
      4174.    14 -      +,          'TEMP    .scr        24      64       6      !FF!' /   
      4175.    15 -     
      4176.    16 -       CALL FLPARA (NFILES,NAME, 
      4177.    17 -      +   'YSEARCH Copy all, Quick, Title ignored.') 
      4178.    18 -     
      4179.    19 -       CALL AUXINI   
      4180.    20 -       CALL YSEREX   
      4181.    21.- +SEQ, PGMSTOP, T=PASS.  
      4182.    22 -       END   
      4183.    23.- +SEQ, QCARDL.    ====================================================   

  204 PATCHY    ================================================== P=MAINUIX  D=YSHIFT    1 ============================

      4184.     0 + +DECK, YSHIFT, T=JOIN.  
      4185.     1.- +SEQ, QCARD1.   
      4186.     2 -       PROGRAM YSHIFT    
      4187.     3 -     
      4188.     4.- +CDE, LUNSLN    
      4189.     5 -     
      4190.     6.- +SEQ, NCNAME.   
      4191.     7 -       PARAMETER   (NFILES= 5)   
      4192.     8 -       CHARACTER    NAME(NFILES)*(NCNAME)    
      4193.     9 -       DATA NAME/ 'OLD     .pam        11       0       1      !FF!' 
      4194.    10 -      +,          'NEW     .pam        21      64       4      !FF!' 
      4195.    11 -      +,          'OPT      -           3       0       0      !FF!' 
      4196.    12 -      +,          'READ    .cra         1       4       0      !FF!' 
      4197.    13 -      +,          'PRINT   .lis         2      68       0      !FF!' /   
      4198.    14 -     
      4199.    15 -       CALL FLPARA (NFILES,NAME, 
      4200.    16 -      +   'YSHIFT  All,Unknown tags, Bypass, Ponly,Quick, Xcout, Ycin.') 
      4201.    17 -       CALL SBIT1 (NOPTVL(4),21) 
      4202.    18 -     
      4203.    19 -       NSTRM  = 1    
      4204.    20 -       CALL AUXINI   
      4205.    21 -       CALL YSHFEX   
1 204                                                              P=MAINUIX  D=YSHIFT    2                     PAGE  53

      4206.    22.- +SEQ, PGMSTOP, T=PASS.  
      4207.    23 -       END   
      4208.    24.- +SEQ, QCARDL.    ====================================================   

  205 PATCHY    ================================================== P=FLDIALG  D=          1 ============================

      4209.     0 + +PATCH, FLDIALG.             Initial user dialog routines   
0     4210.     1 + +KEEP, FLKRAC.  
      4211.     2 .                    PARAMETER (NTEXT=128, NLINE=256) 
      4212.     3 .                    CHARACTER  IDPROG*8,  HOMED*48   
      4213.     4 .                    CHARACTER  LINECC*(NLINE), LINEUP*(NLINE)    
      4214.     5 .                    CHARACTER  CHDEF*8,   CHTERM*4,   CHEXT*8    
      4215.     6 .                    CHARACTER  TEXT*(NTEXT), FILEST(13)*(NTEXT)  
      4216.     7 .       COMMON /FLKRAC/IFLDIA, INTACT, KINDPA, IFLBAK, JFAULT, NLCUM  
      4217.     8 .      +,              JLINC,JLINT, NTXT, LUNOP, NHOMED, HOMED, IDPROG    
      4218.     9 .      +,              LINECC,LINEUP, CHDEF,CHTERM, CHEXT,TEXT, FILEST    
0     4219.    10 + +KEEP, PAMPUBLIC, P=FLDIALG.    
      4220.    11 .       CHARACTER    MPUBLI*(*)   
      4221.    12 .       PARAMETER   (MPUBLI = '/cern/pro/pam/')   
0     4222.    13 + +KEEP, NCNAME.  
      4223.    14 .       PARAMETER   (NCNAME=48)   

  206 PATCHY    ================================================== P=FLDIALG  D=FLPARA    1 ============================

      4224.     0 + +DECK, FLPARA, T=JOIN.  
      4225.     1.- +SEQ, QCARD1.   
      4226.     2 -       SUBROUTINE FLPARA (NFILEP,NAMEIP,CHTXOP)  
      4227.     3 -     
      4228.     4 -       COMMON /SLATE/ NDSLAT,NESLAT,NFSLAT,NGSLAT,MMSLAT(36) 
      4229.     5.- +CDE, QBCD, QUNIT.  
      4230.     6.- +CDE, ARRCOM, CCPARA, LUNSLN, IOFCOM.   
      4231.     7 -     
      4232.     8.- +CDE, NCNAME.   
      4233.     9 -           CHARACTER    NAMEIN(13)*(NCNAME), EXTSTO(20)*4    
      4234.    10 -           CHARACTER    COMD*256, CHSTRM*6,  CHWK2*2 
      4235.    11.- +CDE, Q.    
      4236.    12 -      +,    LUNORG,LUNMOD, LSTRM,  NOPTPR(8) 
      4237.    13 -      +,    LUNUSE,LUNDES,LUNBAK,LUNFLG,  MUSE(200)  
      4238.    14 -      +,    NAMEIN, EXTSTO, COMD, CHSTRM, CHWK2, MSPACE(2000)    
      4239.    15.- +CDE, FLKRAC.   
      4240.    16 - C--------------    END CDE                             --------------   
      4241.    17 -       CHARACTER    CHTXOP*(*), NAMEIP(NFILEP)*(NCNAME)  
      4242.    18 -       PARAMETER   (NWSTOR=4)    
      4243.    19 -     
      4244.    20 -       LOGICAL      INTRAC   
      4245.    21 -     
      4246.    22.- +SEQ, Q$ANDOR.  
      4247.    23 -     
      4248.    24 -       CALL MQINIT (MSPACE(2000))    
      4249.    25 -       IFLDIA = 7    
0     4250.    26-+ +SELF, IF=QMIBX.    
      4251.    27 -       CALL ERRSET (212, 300, -1,1,1)    
0     4252.    28-+ +SELF.  
      4253.    29 -     
      4254.    30 -       NFILE = NFILEP    
      4255.    31 -       DO 12  J=1,NFILE  
      4256.    32 -       NAMEIN(J) = NAMEIP(J) 
      4257.    33 -    12 FILEST(J) = ' '   
      4258.    34 -     
      4259.    35 -       LTXOP  = LEN (CHTXOP) - 1 
      4260.    36 -       IDPROG = CHTXOP(1:8)  
      4261.    37.- +SEQ, MAILME, T=PASS.        Register usage at CERN 
      4262.    38 -     
      4263.    39 -       COMD = IDPROG // CHAR(39) 
      4264.    40 -       NCMD = 9  
      4265.    41 -       CALL CUTOL (COMD(1:9))    
      4266.    42 -     
      4267.    43 -       CALL VZERO  (NSTRM,24)    
      4268.    44 -       CALL VBLANK (KARDCC,84)   
      4269.    45 -       CALL VBLANK (NOPTPR,8)    
      4270.    46 -       NOPTVL(4) = 131072    
      4271.    47 -       IPROMI = 0    
      4272.    48 -       IFLGOS = 0    
      4273.    49 -       INIPRO = 0    
      4274.    50 -     
      4275.    51 - C--                Get the home directory   
      4276.    52 -     
      4277.    53 -       NHOMED = 0    
      4278.    54 -       HOMED  = ' '  
      4279.    55 -       CALL GETENVF ('HOME ', HOMED) 
      4280.    56 -       N = LNBLNK (HOMED)    
      4281.    57 -       IF (N.GT.0)  THEN 
      4282.    58 -           IF (HOMED(N:N).NE.'/') THEN   
      4283.    59 -               N = N + 1 
      4284.    60 -               HOMED(N:N) = '/'  
      4285.    61 -             ENDIF   
      4286.    62 -           NHOMED = N    
      4287.    63 -         ENDIF   
      4288.    64 -     
      4289.    65 - C--                Is the user on-line ?    
      4290.    66 -     
      4291.    67 -       INTACT = 0    
      4292.    68 -       IF (INTRAC())  INTACT=7   
      4293.    69 -       INTPRI = INTACT   
      4294.    70 -     
      4295.    71 - C--                No dialogue printing if .GO on program statement 
      4296.    72 -     
      4297.    73 -       NARGS = IARGC()   
      4298.    74 -       IF (NARGS.EQ.0)              GO TO 17 
      4299.    75 -       IF (NARGS.GT.NFILE)          GO TO 16 
      4300.    76 -     
      4301.    77 -       LINECC = ' '  
      4302.    78 -       JARG = NARGS  
1 206                                                              P=FLDIALG  D=FLPARA    2                     PAGE  54

      4303.    79 -       CALL GETARG (JARG,LINECC) 
      4304.    80 -       JLINT = LNBLNK (LINECC)   
      4305.    81 -       IF (JLINT.LT.3)              GO TO 17 
      4306.    82 -       CHEXT = LINECC(JLINT-2:JLINT) 
      4307.    83 -       IF (CHEXT(1:1).EQ.':')  CHEXT(1:1)='.'    
      4308.    84 -       CALL CLTOU (CHEXT(1:4))   
      4309.    85 -       IF (CHEXT(1:4).NE.'.GO ')    GO TO 17 
      4310.    86 -     
      4311.    87 -    16 INTPRI = 0    
      4312.    88 -       IFLGOS = 7    
      4313.    89 -    17 IF (INTPRI.NE.0)  THEN    
      4314.    90 -           WRITE (IQTYPE,9001) IDPROG    
      4315.    91 -           IF (LTXOP.GE.9)  WRITE (IQTYPE,9002) CHTXOP(9:LTXOP)  
      4316.    92 -           IF (NFILE.LT.11)  THEN    
      4317.    93 -               WRITE (IQTYPE,9006) (NAMEIN(J)(9:14),J=1,NFILE)   
      4318.    94 -             ELSE    
      4319.    95 -               WRITE (IQTYPE,9007) (NAMEIN(J)(9:14),J=1,NFILE)   
      4320.    96 -             ENDIF   
      4321.    97 -     
      4322.    98 -           IF (NARGS.GT.0)  THEN 
      4323.    99 -               IF (NFILE.LT.11)  THEN    
      4324.   100 -                   WRITE (IQTYPE,9008) (NAMEIN(J)(1:6),J=1,NFILE)    
      4325.   101 -                 ELSE    
      4326.   102 -                   WRITE (IQTYPE,9009) (NAMEIN(J)(1:6),J=1,9)    
      4327.   103 -                 ENDIF   
      4328.   104 -             ENDIF   
      4329.   105 -         ENDIF   
      4330.   106 -     
      4331.   107 - C--------          Aquire the program parameters    
      4332.   108 -     
      4333.   109 -       CHTERM = ' '  
      4334.   110 -       CHDEF  = '-    ...'   
      4335.   111 -       NLCUM  = 0    
      4336.   112 -       JUPRNT = 0    
      4337.   113 -       NFILEX = 0    
      4338.   114 -       JFILE  = 1    
      4339.   115 -       JUSE   = 1    
      4340.   116 -     
      4341.   117 - C----              Take parameters from the command line    
      4342.   118 -     
      4343.   119 -       JARG  = 1 
      4344.   120 -    31 IF (NLCUM.GT.0)  THEN 
      4345.   121 -           COMD(NCMD+1:NCMD+NLCUM) = LINECC(1:NLCUM) 
      4346.   122 -           CALL CSQMBL (COMD,1,NCMD+NLCUM)   
      4347.   123 -           NCMD  = NDSLAT + 1    
      4348.   124 -           NLCUM = 0 
      4349.   125 -         ENDIF   
      4350.   126 -     
      4351.   127 -       LINECC = ' '  
      4352.   128 -       IF (JARG.GT.NARGS)           GO TO 34 
      4353.   129 -       CALL GETARG (JARG,LINECC) 
      4354.   130 -       JLINT = LNBLNK (LINECC)   
      4355.   131 -       JARG  = JARG + 1  
      4356.   132 -       GO TO 38  
      4357.   133 -     
      4358.   134 - C----              Take parameters from next input line 
      4359.   135 -     
      4360.   136 -    34 IF (INTPRI.NE.0)  THEN    
      4361.   137 -           IF (NFILE-JFILE.LT.10)  THEN  
      4362.   138 -               WRITE (IQTYPE,9008) (NAMEIN(J)(1:6),J=JFILE,NFILE)    
      4363.   139 -             ELSE    
      4364.   140 -               N = JFILE + 8 
      4365.   141 -               WRITE (IQTYPE,9009) (NAMEIN(J)(1:6),J=JFILE,N)    
      4366.   142 -             ENDIF   
      4367.   143 -           IF (INIPRO.EQ.0)  CALL TMINIT (INIPRO)    
      4368.   144 -           CALL TMPRO (' y> ')   
      4369.   145 -         ENDIF   
      4370.   146 -     
      4371.   147 -       CALL TMREAD (NLINE, LINECC, JLINT, ISTAT) 
      4372.   148 -       IF (ISTAT.NE.0)              STOP 7   
      4373.   149 -     
      4374.   150 -    38 IF (JLINT.EQ.0)              GO TO 31 
      4375.   151 -     
      4376.   152 -       LINEUP = LINECC   
      4377.   153 -       CALL CLTOU (LINEUP(1:JLINT))  
      4378.   154 -       JLINC = 0 
      4379.   155 -       IF (JFILE.GT.NFILE)          GO TO 72 
      4380.   156 -     
      4381.   157 - C----              Next parameter   
      4382.   158 -     
      4383.   159 - C--             LUNMOD is the IOMODE for this logical unit  
      4384.   160 - C--             negative to flag accept 'EOF' on reader input   
      4385.   161 -     
      4386.   162 -    41 CHSTRM =         NAMEIN(JFILE)(1:5)   
      4387.   163 -       CHEXT  =         NAMEIN(JFILE)(9:14)  
      4388.   164 -       LUNORG = ICDECI (NAMEIN(JFILE),17,24) 
      4389.   165 -       LUNMOD = ICDECI (NAMEIN(JFILE),25,32) 
      4390.   166 -       LSTRM  = ICDECI (NAMEIN(JFILE),33,40) 
      4391.   167 -       KINDPA = LUNORG   
      4392.   168 -       LUNUSE = LUNORG   
      4393.   169 -       LUNDES = IABS(LUNMOD) 
      4394.   170 -       LUNBAK = 0    
      4395.   171 -       LUNFLG = 0    
      4396.   172 -       IFLSCR = 0    
      4397.   173 -       IF (CHEXT.EQ.'.scr    ')  IFLSCR = 7  
      4398.   174 -     
      4399.   175 - C- 1 ATT  2 RES  3 CAR  4 DET  5 EOF  6 HOLD  7 OUT  8 CE  9 INI  10 FIN    
      4400.   176 -     
      4401.   177 -       CALL UPKBYT (LUNDES,1,IOMODE,12,0)    
      4402.   178 -     
      4403.   179 -       CALL FLKRAK (0)   
      4404.   180 -       IF (JFAULT.NE.0)  THEN    
      4405.   181 -           WRITE (IQTYPE,9042) JFILE 
      4406.   182 -           GO TO 49  
      4407.   183 -         ENDIF   
      4408.   184 -     
      4409.   185 -       IF (TEXT(1:4).EQ.'    ')     GO TO 31 
      4410.   186 -       IF (TEXT(1:8).EQ.'HELP    ')  THEN    
1 206                                                              P=FLDIALG  D=FLPARA    3                     PAGE  55

      4411.   187 -           CALL HELPPR   
      4412.   188 -           GO TO 31  
      4413.   189 -         ENDIF   
      4414.   190 -     
      4415.   191 -       IF (LUNORG.GE.5)             GO TO 61 
      4416.   192 -       GO TO (43,51,55,57), LUNORG   
      4417.   193 -     
      4418.   194 - C--                Reader input 
      4419.   195 -     
      4420.   196 -    43 IF (TEXT(1:4).EQ.'&   ')  THEN    
      4421.   197 -                              TEXT = 'TTY '  
      4422.   198 -           IF (INTACT.NE.0)   TEXT = 'TTP '  
      4423.   199 -         ENDIF   
      4424.   200 -     
      4425.   201 -       IF     (TEXT(1:4).NE.'TTY ')  THEN    
      4426.   202 -           IF (TEXT(1:4).NE.'TTP ')     GO TO 45 
      4427.   203 -           IPROMI = 7    
      4428.   204 -           IF (INIPRO.EQ.0)  CALL TMINIT (INIPRO)    
      4429.   205 -         ENDIF   
      4430.   206 -       IQREAD = IQTTIN   
      4431.   207 -       LUNUSE = IQTTIN   
      4432.   208 -       GO TO 64  
      4433.   209 -     
      4434.   210 -    45 LUNUSE = IQREAD   
      4435.   211 -       IF (TEXT(1:4).EQ.'-   ')  THEN    
      4436.   212 -           TEXT = IDPROG // CHEXT    
      4437.   213 -           CALL CLEFT (TEXT,1,20)    
      4438.   214 -           CALL CUTOL (TEXT(1:20))   
      4439.   215 -           GO TO 64  
      4440.   216 -         ENDIF   
      4441.   217 -     
      4442.   218 -       IF (TEXT(1:4).NE.'EOF ')     GO TO 64 
      4443.   219 -       IF (LUNMOD.GE.0)             GO TO 48 
      4444.   220 -       IQREAD = 0    
      4445.   221 -       LUNUSE = 0    
      4446.   222 -       GO TO 64  
      4447.   223 -     
      4448.   224 -    48 WRITE (IQTYPE,9048) IDPROG    
      4449.   225 -    49 IF (INTACT.EQ.0)       CALL PABEND    
      4450.   226 -       INTPRI = INTACT   
      4451.   227 -       JARG   = NARGS + 1    
      4452.   228 -       GO TO 31  
      4453.   229 -     
      4454.   230 - C--                Printer output   
      4455.   231 -     
      4456.   232 -    51 IF (TEXT(1:4).EQ.'&   ')  TEXT = 'TTY '   
      4457.   233 -       IF (TEXT(1:4).EQ.'TTY ')  THEN    
      4458.   234 -           IQPRNT = IQTYPE   
      4459.   235 -           LUNUSE = IQTYPE   
      4460.   236 -           GO TO 64  
      4461.   237 -         ENDIF   
      4462.   238 -     
      4463.   239 -       JUPRNT = JUSE 
      4464.   240 -       JUPRFI = JFILE    
      4465.   241 -       LUNUSE = IQPRNT   
      4466.   242 -       IF (TEXT(1:4).NE.'-   ')     GO TO 64 
      4467.   243 -       TEXT = '+y.lis'   
      4468.   244 -       GO TO 64  
      4469.   245 -     
      4470.   246 - C--                Option string    
      4471.   247 -     
      4472.   248 -    55 LUNUSE = 0    
      4473.   249 -       IF (TEXT(1:4).EQ.'&   ')     GO TO 59 
      4474.   250 -       IF (TEXT(1:4).EQ.'-   ')     GO TO 59 
      4475.   251 -       CALL UCTOH1 (TEXT,NOPTPR,8)   
      4476.   252 -       DO  56  JL=1,8    
      4477.   253 -       J = IUCOMP (NOPTPR(JL),IQLETT,30) 
      4478.   254 -       IF (J.NE.0)  CALL SBIT1 (NOPTVL(4),J) 
      4479.   255 -    56 CONTINUE  
      4480.   256 -       GO TO 64  
      4481.   257 -     
      4482.   258 - C--                CCH - string 
      4483.   259 -     
      4484.   260 -    57 LUNUSE = 0    
      4485.   261 -       IF (TEXT(1:4).EQ.'&   ')     GO TO 59 
      4486.   262 -       IF (TEXT(1:4).EQ.'-   ')     GO TO 59 
      4487.   263 -       CALL UCTOH (TEXT,NCHCH,99,8)  
      4488.   264 -       GO TO 64  
      4489.   265 -     
      4490.   266 -    59 TEXT = '-'    
      4491.   267 -       GO TO 64  
      4492.   268 -     
      4493.   269 - C--                Normal files 
      4494.   270 -     
      4495.   271 -    61 IF (LSTRM.NE.0)            LUNVL(LSTRM)=LUNUSE    
      4496.   272 -       IF (TEXT(1:4).EQ.'&   ')   TEXT(1:4)='-   '   
      4497.   273 -     
      4498.   274 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      4499.   275 - C--   set default for CETA file 
      4500.   276 -       IF (IOMODE(8).NE.0)  THEN 
      4501.   277 -           IF (TEXT(1:4).EQ.'-   ')  THEN    
      4502.   278 -               TEXT = ' cetatape'    
      4503.   279 -             ENDIF   
      4504.   280 -         ENDIF   
      4505.   281 -     
      4506.   282 - C--   set scratch file  
      4507.   283 -       IF (IFLSCR.NE.0)  TEXT = '-temp.scr'  
      4508.   284 -     
      4509.   285 - C--                Store usage for final processing 
      4510.   286 -     
      4511.   287 -    64 NLCUM = JLINC 
      4512.   288 -       FILEST(JFILE) = TEXT  
      4513.   289 -       EXTSTO(JFILE) = CHEXT(2:5)    
      4514.   290 -       CALL UCOPY (LUNUSE,MUSE(JUSE),NWSTOR) 
      4515.   291 -       JUSE = JUSE + NWSTOR  
      4516.   292 -       IF (INTPRI.EQ.0)             GO TO 68 
      4517.   293 -     
      4518.   294 -       NTXT = LNBLNK (TEXT)  
1 206                                                              P=FLDIALG  D=FLPARA    4                     PAGE  56

      4519.   295 -       IF (LUNUSE.EQ.0)  THEN    
      4520.   296 -           WRITE (IQTYPE,9085) CHSTRM,TEXT(1:NTXT)   
      4521.   297 -         ELSE    
      4522.   298 -           WRITE (IQTYPE,9087) JFILE,CHSTRM,LUNUSE,TEXT(1:NTXT)  
      4523.   299 -         ENDIF   
      4524.   300 -     
      4525.   301 -    68 JFILE = JFILE + 1 
      4526.   302 -       IF (TEXT(5:8).NE.' ...')  NFILEX = JFILE  
      4527.   303 -       IF (JFILE.LE.NFILE)          GO TO 41 
      4528.   304 -     
      4529.   305 -       IF (NLCUM.GT.0)  THEN 
      4530.   306 -           COMD(NCMD+1:NCMD+NLCUM) = LINECC(1:NLCUM) 
      4531.   307 -           CALL CSQMBL (COMD,1,NCMD+NLCUM)   
      4532.   308 -           NCMD  = NDSLAT + 1    
      4533.   309 -           NLCUM = 0 
      4534.   310 -         ENDIF   
      4535.   311 -     
      4536.   312 - C----              Start execution ?    
      4537.   313 -     
      4538.   314 -       IF (IFLGOS.NE.0)             GO TO 83 
      4539.   315 -       IF (CHTERM.NE.'    ')        GO TO 73 
      4540.   316 -       IF (JARG.LE.NARGS)  THEN  
      4541.   317 -           IF (JLINC.GE.JLINT)      GO TO 31 
      4542.   318 -         ENDIF   
      4543.   319 -    72 CALL FLKRAK (-1)  
      4544.   320 -     
      4545.   321 -    73 IF (CHTERM(1:1).NE.':')  CHTERM(1:1) = '.'    
      4546.   322 -       COMD(NCMD+1:NCMD+4) = CHTERM(1:1) // 'go' // CHAR(39) 
      4547.   323 -       NCMD = NCMD + 4   
      4548.   324 -       IF (INTACT.NE.0)  WRITE (IQTYPE,9073) COMD(1:NCMD)    
      4549.   325 -     
      4550.   326 -       IF (CHTERM(2:3).EQ.'GO')     GO TO 83 
      4551.   327 -       CHTERM = ' '  
      4552.   328 -       IF (INIPRO.EQ.0)  CALL TMINIT (INIPRO)    
      4553.   329 -       CALL TMPRO (' Type  GO  or stop  y> ')    
      4554.   330 -       CALL TMREAD (4, CHTERM, NCH, ISTAT)   
      4555.   331 -       IF (ISTAT.NE.0)              STOP 7   
      4556.   332 -       CALL CLTOU (CHTERM)   
      4557.   333 -       IF (CHTERM.EQ.'.GO ')        GO TO 83 
      4558.   334 -       IF (CHTERM.EQ.':GO ')        GO TO 83 
      4559.   335 -       IF (CHTERM.NE.'GO  ')            STOP 
      4560.   336 -     
      4561.   337 - C--------          Final processing, OPEN the files 
      4562.   338 -     
      4563.   339 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      4564.   340 -     
      4565.   341 -    83 IF (JUPRNT.NE.0)  THEN    
      4566.   342 -           CALL UCOPY  (MUSE(JUPRNT),LUNUSE,NWSTOR)  
      4567.   343 -           TEXT = FILEST(JUPRFI) 
      4568.   344 -           NTXT = LNBLNK (TEXT)  
      4569.   345 -           CALL UPKBYT (LUNDES,1,IOMODE,12,0)    
      4570.   346 -           IOMODE(7) = -1    
      4571.   347 -           CALL FLINK  (LUNUSE)  
      4572.   348 -           LUNBAK = IFLBAK   
      4573.   349 -           CALL UCOPY (LUNUSE,MUSE(JUPRNT),NWSTOR)   
      4574.   350 -         ENDIF   
      4575.   351 -     
      4576.   352 -       NOTPRS = INTPRI   
      4577.   353 -       N = IUCOMP (IQPLUS,NOPTPR,8)  
      4578.   354 -       IF (IQTYPE.EQ.IQPRNT)  THEN   
      4579.   355 -           NOTPRS = 7    
      4580.   356 -           N = 7 
      4581.   357 -         ENDIF   
      4582.   358 -     
      4583.   359 -       IF (N.EQ.0)  THEN 
      4584.   360 -           WRITE (IQPRNT,9083) IDPROG    
      4585.   361 -         ELSE    
      4586.   362 -           WRITE (IQPRNT,9084) IDPROG    
      4587.   363 -         ENDIF   
      4588.   364 -     
      4589.   365 -       IF (NOTPRS.EQ.0)  WRITE (IQTYPE,9084) IDPROG  
      4590.   366 -       IF (NFILEX.EQ.NFILE)  NFILEX = NFILE + 1  
      4591.   367 -     
      4592.   368 -       JUSE  = 1 
      4593.   369 -       JFILE = 1 
      4594.   370 -    84 CALL UCOPY (MUSE(JUSE),LUNUSE,NWSTOR) 
      4595.   371 -       TEXT   = FILEST(JFILE)    
      4596.   372 -       NTXT   = LNBLNK (TEXT)    
      4597.   373 -       CHSTRM = NAMEIN(JFILE)(1:5)   
      4598.   374 -     
      4599.   375 -       IF (JFILE.NE.NFILEX)  THEN    
      4600.   376 -           IF (TEXT(5:9).EQ.' ...')  TEXT(5:9) = '    '  
      4601.   377 -         ENDIF   
      4602.   378 -     
      4603.   379 -       IF (LUNUSE.EQ.0)  THEN    
      4604.   380 -           WRITE (IQPRNT,9085) CHSTRM,TEXT(1:NTXT)   
      4605.   381 -           IF (NOTPRS.NE.0)         GO TO 89 
      4606.   382 -           WRITE (IQTYPE,9085) CHSTRM,TEXT(1:NTXT)   
      4607.   383 -           GO TO 89  
      4608.   384 -         ENDIF   
      4609.   385 -     
      4610.   386 -       WRITE (IQPRNT,9087) JFILE,CHSTRM,LUNUSE,TEXT(1:NTXT)  
      4611.   387 -     
      4612.   388 -       IF (NOTPRS.EQ.0)  THEN    
      4613.   389 -       WRITE (IQTYPE,9087) JFILE,CHSTRM,LUNUSE,TEXT(1:NTXT)  
      4614.   390 -       ENDIF 
      4615.   391 -     
      4616.   392 -       IF   (JUSE.EQ.JUPRNT)        GO TO 88 
      4617.   393 -       IF (LUNUSE.EQ.IQTTIN)        GO TO 89 
      4618.   394 -       IF (LUNUSE.EQ.IQTYPE)        GO TO 89 
      4619.   395 -     
      4620.   396 -       CALL UPKBYT (LUNDES,1,IOMODE,12,0)    
      4621.   397 -     
      4622.   398 - C--   check explicite extension .CAR for PAM stream 
      4623.   399 -       IF (IOMODE(11).NE.0)  THEN    
      4624.   400 -           IOMODE(11) = 0    
      4625.   401 -           IF (EXTSTO(JFILE).EQ.'car ')  IOMODE(3)=1 
      4626.   402 -           GO TO 87  
1 206                                                              P=FLDIALG  D=FLPARA    5                     PAGE  57

      4627.   403 -         ENDIF   
      4628.   404 -     
      4629.   405 - C--   check 'Direct Access' format for CETA 
      4630.   406 -       IF (IOMODE(8).EQ.0)          GO TO 87 
      4631.   407 -       IF (JBIT(NOPTVL(4),13).NE.0)  THEN    
      4632.   408 -           CALL SBIT0 (NOPTVL(4),1)  
      4633.   409 -           IOMODE(8) = 2 
      4634.   410 -           GO TO 87  
      4635.   411 -         ENDIF   
      4636.   412 -       IF (JBIT(NOPTVL(4),19).NE.0)  THEN    
      4637.   413 -           CALL SBIT0 (NOPTVL(4),1)  
      4638.   414 -           GO TO 87  
      4639.   415 -         ENDIF   
0     4640.   416-+ +SELF, IF=QMAPO.    
      4641.   417 -       IF (JBIT(NOPTVL(4),1) .EQ.0)  CALL APOASC (TEXT(2:NTXT))  
0     4642.   418-+ +SELF.  
      4643.   419 -       IF (JBIT(NOPTVL(4),1) .NE.0)  IOMODE(8) = -1  
      4644.   420 -     
      4645.   421 -    87 CALL FLINK (LUNUSE)   
      4646.   422 -       LUNBAK = IFLBAK   
      4647.   423 -    88 IF (LUNBAK.NE.0)  THEN    
      4648.   424 -           WRITE (IQPRNT,9088)   
      4649.   425 -           IF (NOTPRS.EQ.0)  WRITE (IQTYPE,9088) 
      4650.   426 -         ENDIF   
      4651.   427 -     
      4652.   428 -    89 IF (JFILE.EQ.NFILEX)  JFILE=NFILE 
      4653.   429 -       JUSE  = JUSE  + NWSTOR    
      4654.   430 -       JFILE = JFILE + 1 
      4655.   431 -       IF (JFILE.LE.NFILE)          GO TO 84 
      4656.   432 -       IF (NOTPRS.EQ.0)  WRITE (IQTYPE,9089) 
      4657.   433 -       INTACT = 0    
      4658.   434 -       IFLDIA = 0    
      4659.   435 -       CHTERM = ' '  
      4660.   436 -       RETURN    
      4661.   437 -     
      4662.   438 -  9001 FORMAT (1X,A,' executing')    
      4663.   439 -  9002 FORMAT (' Options  :     ',A) 
      4664.   440 -  9006 FORMAT (' Default ext. : ',10A)   
      4665.   441 -  9007 FORMAT (' Default ext. : ', 9A/(46X,4A,:))    
      4666.   442 -  9008 FORMAT (' Stream names : ',10A)   
      4667.   443 -  9009 FORMAT (' Stream names : ', 9A,'...') 
      4668.   444 -  9042 FORMAT (' Faulty parameter',I3)   
      4669.   445 -  9048 FORMAT (' EOF not allowed with ',A)   
      4670.   446 -  9073 FORMAT (1X/'. ',A/1X) 
      4671.   447 -  9083 FORMAT (1H1,A,' executing with Files / Options'/1X)   
      4672.   448 -  9084 FORMAT (1X/1X,A,' executing with Files / Options'/1X) 
      4673.   449 -  9085 FORMAT (6X,A,6X,A)    
      4674.   450 -  9087 FORMAT (I4,2X,A,I3,3X,A)  
      4675.   451 -  9088 FORMAT (21X,'existing file renamed to .bak')  
      4676.   452 -  9089 FORMAT (1X)   
      4677.   453 -       END   
      4678.   454.- +SEQ, QCARDL.    ====================================================   

  207 PATCHY    ================================================== P=FLDIALG  D=FLKRAK    1 ============================

      4679.     0 + +DECK, FLKRAK.  
      4680.     1.- +SEQ, QCARD1.   
      4681.     2 -       SUBROUTINE FLKRAK (IPARA) 
      4682.     3 -     
      4683.     4 - C-    Krack next parameter  
      4684.     5 -     
      4685.     6.- +CDE, CCPARA, IOFCOM, FLKRAC.   
      4686.     7 - C--------------    END CDE                             --------------   
      4687.     8 -       COMMON /SLATE/ NDSLAT,NESLAT,NFSLAT,NGSLAT,MMSLAT(36) 
      4688.     9 -       CHARACTER    COLCC(NLINE)*1, COLUP(NLINE)*1   
      4689.    10 -       EQUIVALENCE (COLCC,LINECC), (COLUP,LINEUP)    
      4690.    11 -     
      4691.    12 -       CHARACTER    HOLDPA*80    
      4692.    13 -       CHARACTER    CHWORK*3 
      4693.    14 -       EQUIVALENCE (CHWORK,HOLDPA)   
      4694.    15 -     
      4695.    16.- +SEQ, PAMPUBLIC.    
      4696.    17 -     
      4697.    18 -     
      4698.    19 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      4699.    20 -     
      4700.    21 -       TEXT  = ' '   
      4701.    22 -       JFAULT = 0    
      4702.    23 -       IFLCOL = 0    
      4703.    24 -       IFLEXC = 0    
      4704.    25 -     
      4705.    26 - C--                Entry from IOFILE    
      4706.    27 -     
      4707.    28 -       IF (IFLDIA.NE.0)             GO TO 14 
      4708.    29 -       LINECC = ' '  
      4709.    30 -       CALL UH1TOC (KARDCC,LINECC,80)    
      4710.    31 -       LINEUP = LINECC   
      4711.    32 -       CALL CLTOU (LINEUP)   
      4712.    33 -       JLINC = NCHCCD    
      4713.    34 -       JLINT = NCHCCT    
      4714.    35 -       KINDPA = 11   
      4715.    36 -     
      4716.    37 -       IF (IOMODE(3).EQ.0)  THEN 
      4717.    38 -           CHEXT = '.pam'    
      4718.    39 -         ELSE    
      4719.    40 -           CHEXT = '.car'    
      4720.    41 -         ENDIF   
      4721.    42 -       GO TO 21  
      4722.    43 -     
      4723.    44 - C--                Entry from FLPARA    
      4724.    45 -     
      4725.    46 -    14 IF (CHTERM.NE.'    ')        GO TO 29 
      4726.    47 -       NLCUM = JLINC 
      4727.    48 -     
      4728.    49 - C-----             Handle 'No parameter'    
      4729.    50 -     
1 207                                                              P=FLDIALG  D=FLKRAK    2                     PAGE  58

      4730.    51 - C--                No more parameters   
      4731.    52 -     
      4732.    53 -    21 JLINC = ICNEXT (LINECC,JLINC+1,JLINT) 
      4733.    54 -       IF (JLINC.GT.JLINT)             RETURN    
      4734.    55 -       NCHUU = NDSLAT    
      4735.    56 -       JENDU = NESLAT    
      4736.    57 -     
      4737.    58 - C--                Remove apostrophes   
      4738.    59 -     
      4739.    60 -       IF (COLCC(JLINC).EQ.CHAR(39))  THEN   
      4740.    61 -           JN = JLINC    
      4741.    62 -    22     COLCC(JN) = ' '   
      4742.    63 -           COLUP(JN) = ' '   
      4743.    64 -           JN = ICFIND (CHAR(39),LINECC,JN+1,JLINT)  
      4744.    65 -           IF (JN.GT.JLINT)         GO TO 21 
      4745.    66 -           GO TO 22  
      4746.    67 -         ENDIF   
      4747.    68 -     
      4748.    69 - C--                Remove leading reverse slash 
      4749.    70 -     
      4750.    71 -       IF (COLCC(JLINC).EQ.CHAR(92))  THEN   
      4751.    72 -           COLCC(JLINC) = ' '    
      4752.    73 -           GO TO 21  
      4753.    74 -         ENDIF   
      4754.    75 -     
      4755.    76 - C--                '-' or '&' for Skip next parameter   
      4756.    77 -     
      4757.    78 -       TEXT(1:1) = COLCC(JLINC)  
      4758.    79 -       IF     (COLCC(JLINC).NE.'-') THEN 
      4759.    80 -           IF (COLCC(JLINC).NE.'&') GO TO 23 
      4760.    81 -         ENDIF   
      4761.    82 -     
      4762.    83 -       IF (KINDPA.NE.4)                         RETURN   
      4763.    84 -       IF (INDEX('+*!?C', COLCC(JLINC+1)).EQ.0)  RETURN  
      4764.    85 -       GO TO 41  
      4765.    86 -     
      4766.    87 - C--                '.' or ':' for Skip Remaining parameters 
      4767.    88 -     
      4768.    89 -    23 IF     (COLCC(JLINC).NE.':')  THEN    
      4769.    90 -           IF (COLCC(JLINC).NE.'.') GO TO 41 
      4770.    91 -         ENDIF   
      4771.    92 -     
      4772.    93 -       JN = ICFNBL (LINECC,JLINC+1,JLINT)    
      4773.    94 -       IF (JN.GE.JLINT)             GO TO 27 
      4774.    95 -       CHWORK = LINEUP(JN:JN+2)  
      4775.    96 -       IF (CHWORK.EQ.'GO ')         GO TO 28 
      4776.    97 -       IF (COLCC(JLINC+1).NE.' ')   GO TO 41 
      4777.    98 -     
      4778.    99 -    27 CHWORK = '  ' 
      4779.   100 -    28 CHTERM = COLCC(JLINC) // CHWORK   
      4780.   101 -       IF (CHTERM(1:1).EQ.':')  CHDEF(1:1) = '&' 
      4781.   102 -       JLINC = NLCUM 
      4782.   103 -    29 TEXT(1:8) = CHDEF 
      4783.   104 -       RETURN    
      4784.   105 -     
      4785.   106 - C-----             Check special parameters 
      4786.   107 -     
      4787.   108 -    41 IF (IPARA.EQ.-1)            RETURN    
      4788.   109 -       JLAST = JENDU - 1 
      4789.   110 -       NCHU  = NCHUU 
      4790.   111 -       TEXT  = LINEUP(JLINC:JLINC+NCHU-1)    
      4791.   112 -       IF (NCHU.LE.4)  THEN  
      4792.   113 -           IF (TEXT(1:5).EQ.'HELP ')     GO TO 78    
      4793.   114 -           IF (TEXT(1:5).EQ.'TTY  ')     GO TO 78    
      4794.   115 -           IF (TEXT(1:5).EQ.'TTP  ')     GO TO 78    
      4795.   116 -           IF (TEXT(1:5).EQ.'EOF  ')     GO TO 78    
      4796.   117 -         ENDIF   
      4797.   118 -     
      4798.   119 - C--                Handle literal enclosed by $ 
      4799.   120 -     
      4800.   121 -       IF (COLCC(JLINC).EQ.'$')  THEN    
      4801.   122 -           JLINC = JLINC + 1 
      4802.   123 -           JLAST = ICFIND ('$',LINECC,JLINC,JLAST)   
      4803.   124 -           NCHU  = JLAST - JLINC 
      4804.   125 -           IF (NCHU.LE.0)           GO TO 91 
      4805.   126 -           TEXT = LINECC(JLINC:JLINC+NCHU-1) 
      4806.   127 -           GO TO 78  
      4807.   128 -         ENDIF   
      4808.   129 -     
      4809.   130 - C--                Stop analysis of OPT or CCH parameter    
      4810.   131 -     
      4811.   132 -       IF (KINDPA.EQ.3)             GO TO 78 
      4812.   133 -       IF (KINDPA.EQ.4)             GO TO 78 
      4813.   134 -     
      4814.   135 - C--                Handle  LNAME!  for logical names    
      4815.   136 -     
      4816.   137 -       IF (COLCC(JLAST).EQ.'!')  THEN    
      4817.   138 -           JLAST  = JLAST - 1    
      4818.   139 -           IFLEXC = 7    
      4819.   140 -         ENDIF   
      4820.   141 -     
      4821.   142 - C-----             Analyse file name    
      4822.   143 -     
      4823.   144 -       JLINU = JLINC 
      4824.   145 -       TEXT = ' '    
      4825.   146 -     
      4826.   147 - C--                Check prefix  : + =  
      4827.   148 -     
      4828.   149 -    44 J = INDEX (':+=', COLCC(JLINU))   
      4829.   150 -       IF (J.EQ.0)                  GO TO 45 
      4830.   151 -       IF (J.EQ.1)  THEN 
      4831.   152 -           IFLCOL = 7    
      4832.   153 -         ELSE    
      4833.   154 -           TEXT(1:1) = COLCC(JLINU)  
      4834.   155 -         ENDIF   
      4835.   156 -       JLINU = JLINU + 1 
      4836.   157 -       GO TO 44  
      4837.   158 -     
1 207                                                              P=FLDIALG  D=FLKRAK    3                     PAGE  59

      4838.   159 -    45 JTXU = 2  
      4839.   160 -     
      4840.   161 - C----              Is the file PUBLIC ? 
      4841.   162 -     
      4842.   163 -       IF (COLCC(JLINU).EQ.'*')  THEN    
      4843.   164 -           N  = LEN (MPUBLI) 
      4844.   165 -           TEXT(JTXU:JTXU+N-1) = MPUBLI  
      4845.   166 -           JTXU  = JTXU  + N 
      4846.   167 -           JLINU = JLINU + 1 
      4847.   168 -           GO TO 46  
      4848.   169 -         ENDIF   
      4849.   170 -     
      4850.   171 - C----              Does the file name start with (SYMBOL)   
      4851.   172 -     
      4852.   173 -       IF (COLCC(JLINU).EQ.'(')  THEN    
      4853.   174 -           JLINU = JLINU + 1 
      4854.   175 -           JA = JLINU    
      4855.   176 -           JE = ICFIND (')',LINECC,JA,JLAST) 
      4856.   177 -           IF (NGSLAT.EQ.0)         GO TO 46 
      4857.   178 -           JLINU = JE + 1    
      4858.   179 -           IF (JE.EQ.JA)            GO TO 46 
      4859.   180 -           LINECC(JE:JE) = ' '   
      4860.   181 -           CALL GETENVF (LINECC(JA:JE),HOLDPA)   
      4861.   182 -           N = LNBLNK (HOLDPA)   
      4862.   183 -           IF (N.LE.0)              GO TO 46 
      4863.   184 -     
      4864.   185 -           TEXT(JTXU:JTXU+N-1) = HOLDPA(1:N) 
      4865.   186 -           JTXU  = JTXU  + N 
      4866.   187 -           GO TO 46  
      4867.   188 -         ENDIF   
      4868.   189 -     
      4869.   190 - C----              Does the file name start with '~'    
      4870.   191 -     
      4871.   192 -       IF (COLCC(JLINU).EQ.'~')  THEN    
      4872.   193 -         IF (NHOMED.GT.0)   THEN 
      4873.   194 -           N = NHOMED    
      4874.   195 -           TEXT(JTXU:JTXU+N-1) = HOMED(1:N)  
      4875.   196 -           JTXU  = JTXU  + N 
      4876.   197 -           JLINU = JLINU + 1 
      4877.   198 -           IF (COLCC(JLINU).EQ.'/')  JLINU=JLINU+1   
      4878.   199 -         ENDIF   
      4879.   200 -         ENDIF   
      4880.   201 -     
      4881.   202 - C----            Look for Directory and Extension   
      4882.   203 -     
      4883.   204 -    46 IF (JLINU.GT.JLAST)          GO TO 91 
      4884.   205 -       IF (IFLCOL.EQ.0)  CALL CUTOL (LINECC(JLINU:JLAST))    
      4885.   206 -     
      4886.   207 -       JFILN = JLINU 
      4887.   208 -       J     = ICFILA ('/', LINECC,JFILN,JLAST) + 1  
      4888.   209 -       IF (J.LE.JLAST)   JFILN = J   
      4889.   210 -       LDIR  = JFILN - JLINU 
      4890.   211 -     
      4891.   212 -       JEXT  = ICFILA ('.', LINECC,JFILN,JLAST)  
      4892.   213 -       LEXT  = JLAST+1 - JEXT    
      4893.   214 -       LFILN = JEXT    - JFILN   
      4894.   215 -     
      4895.   216 - C----              Do the Directory 
      4896.   217 -     
      4897.   218 -       IF (LDIR.NE.0)  THEN  
      4898.   219 -           TEXT(JTXU:JTXU+LDIR-1) = LINECC(JLINU:JLINU+LDIR-1)   
      4899.   220 -           JTXU = JTXU + LDIR    
      4900.   221 -         ENDIF   
      4901.   222 -     
      4902.   223 - C----              Do the File-name 
      4903.   224 -     
      4904.   225 -       IF (LFILN.GE.3)              GO TO 49 
      4905.   226 -       IF (LFILN.LE.0)              GO TO 91 
      4906.   227 -     
      4907.   228 -       JUSE = ICDECI (LINECC,JFILN,JFILN)    
      4908.   229 -       IF (JUSE.EQ.0)               GO TO 49 
      4909.   230 -     
      4910.   231 - C--                File name 'n' or 'n+' to use name of stream n    
      4911.   232 -     
      4912.   233 -       KEEPD = 0 
      4913.   234 -       IF (LFILN.EQ.2)   THEN    
      4914.   235 -           IF (LDIR.NE.0)               GO TO 91 
      4915.   236 -           IF (COLCC(JFILN+1).NE.'+')   GO TO 91 
      4916.   237 -           KEEPD = 7 
      4917.   238 -         ENDIF   
      4918.   239 -     
      4919.   240 -       NUSE = LNBLNK (FILEST(JUSE))  
      4920.   241 -       IF (NUSE.LE.1)               GO TO 91 
      4921.   242 -     
      4922.   243 -       JUFN  = ICFILA ('/',FILEST(JUSE),2,NUSE) + 1  
      4923.   244 -       IF (JUFN.GT.NUSE)  JUFN = 2   
      4924.   245 -       JUEX = ICFILA ('.',FILEST(JUSE),JUFN,NUSE)    
      4925.   246 -       JUST = 2  
      4926.   247 -       IF (KEEPD.EQ.0)  JUST = JUFN  
      4927.   248 -       N = JUEX - JUST   
      4928.   249 -     
      4929.   250 -       TEXT(JTXU:JTXU+N-1) = FILEST(JUSE)(JUST:JUST+N-1) 
      4930.   251 -       JTXU = JTXU + N   
      4931.   252 -       GO TO 51  
      4932.   253 -     
      4933.   254 -    49 TEXT(JTXU:JTXU+LFILN-1) = LINECC(JFILN:JFILN+LFILN-1) 
      4934.   255 -       JTXU = JTXU + LFILN   
      4935.   256 -     
      4936.   257 - C----              Do the File extension    
      4937.   258 -     
      4938.   259 -    51 IF (LEXT.GT.0)  THEN  
      4939.   260 -           TEXT(JTXU:JTXU+LEXT-1) = LINECC(JEXT:JEXT+LEXT-1) 
      4940.   261 -           CHEXT = TEXT(JTXU:JTXU+LEXT-1)    
      4941.   262 -           JTXU  = JTXU + LEXT   
      4942.   263 -         ELSE    
      4943.   264 -           IF (IFLEXC.NE.0)         GO TO 57 
      4944.   265 -           N = LNBLNK (CHEXT)    
      4945.   266 -           TEXT(JTXU:JTXU+N-1) = CHEXT(1:N)  
1 207                                                              P=FLDIALG  D=FLKRAK    4                     PAGE  60

      4946.   267 -           JTXU = JTXU + N   
      4947.   268 -         ENDIF   
      4948.   269 -     
      4949.   270 -    57 CALL CLEFT (TEXT,2,JTXU)  
      4950.   271 -     
      4951.   272 - C--                EXIT 
      4952.   273 -     
      4953.   274 -    78 JLINC = JENDU 
      4954.   275 -       RETURN    
      4955.   276 -     
      4956.   277 - C----              Trouble  
      4957.   278 -     
      4958.   279 -    91 JFAULT = 7    
      4959.   280 -       RETURN    
      4960.   281 -       END   
      4961.   282.- +SEQ, QCARDL.    ====================================================   

  208 PATCHY    ================================================== P=FLDIALG  D=FLINK     1 ============================

      4962.     0 + +DECK, FLINK.   
      4963.     1.- +SEQ, QCARD1.   
      4964.     2 -       SUBROUTINE FLINK (LUNP)   
      4965.     3 -     
      4966.     4 -       COMMON /SLATE/ NDSLAT,NESLAT,NFSLAT,NGSLAT,MMSLAT(36) 
      4967.     5.- +CDE, QUNIT, IOFCOM, FLKRAC.    
      4968.     6 - C--------------    END CDE                             --------------   
      4969.     7 -       EQUIVALENCE (LUN,LUNOP)   
      4970.     8 -     
      4971.     9 -       CHARACTER      OST*12, USF*11 
      4972.    10 -       CHARACTER*(*)  UNF, FRM, CSOLD, CSNEW, CSAPP, CSOVR, CSSCR, APX   
      4973.    11 -       PARAMETER   (UNF='UNFORMATTED')   
      4974.    12 -       PARAMETER   (FRM='FORMATTED') 
      4975.    13 -       PARAMETER   (APX='APPEND')    
0     4976.    14-+ +SELF, IF=QMVMI.    
      4977.    15 -       CHARACTER    UCC*8, CCPRI*(*), CCCAR*(*)  
      4978.    16 -       PARAMETER   (CCPRI='FORTRAN') 
      4979.    17 -       PARAMETER   (CCCAR='LIST')    
0     4980.    18-+ +SELF, IF=QMALT,QMLNX.  
      4981.    19 -       PARAMETER   (CSOLD='OLD') 
      4982.    20 -       PARAMETER   (CSNEW='NEW') 
      4983.    21 -       PARAMETER   (CSAPP='UNKNOWN') 
      4984.    22 -       PARAMETER   (CSOVR='NEW') 
      4985.    23 -       PARAMETER   (CSSCR='SCRATCH') 
0     4986.    24-+ +SELF, IF=QMAPO.    
      4987.    25 -       PARAMETER   (CSOLD='READONLY')    
      4988.    26 -       PARAMETER   (CSNEW='NEW') 
      4989.    27 -       PARAMETER   (CSAPP='APPEND')  
      4990.    28 -       PARAMETER   (CSOVR='NEW') 
      4991.    29 -       PARAMETER   (CSSCR='SCRATCH') 
0     4992.    30-+ +SELF, IF=QMCRU.    
      4993.    31 -       PARAMETER   (CSOLD='OLD') 
      4994.    32 -       PARAMETER   (CSNEW='NEW') 
      4995.    33 -       PARAMETER   (CSAPP='OLD') 
      4996.    34 -       PARAMETER   (CSOVR='NEW') 
      4997.    35 -       PARAMETER   (CSSCR='SCRATCH') 
0     4998.    36-+ +SELF, IF=QMCVX, QMCVY. 
      4999.    37 -       PARAMETER   (CSOLD='OLD') 
      5000.    38 -       PARAMETER   (CSNEW='NEW') 
      5001.    39 -       PARAMETER   (CSAPP='UNKNOWN') 
      5002.    40 -       PARAMETER   (CSOVR='NEW') 
      5003.    41 -       PARAMETER   (CSSCR='SCRATCH') 
0     5004.    42-+ +SELF, IF=QMHPX, QMIBX, QMIRT.  
      5005.    43 -       PARAMETER   (CSOLD='OLD') 
      5006.    44 -       PARAMETER   (CSNEW='NEW') 
      5007.    45 -       PARAMETER   (CSAPP='UNKNOWN') 
      5008.    46 -       PARAMETER   (CSOVR='NEW') 
      5009.    47 -       PARAMETER   (CSSCR='SCRATCH') 
0     5010.    48-+ +SELF, IF=QMSGI, QMSUN, QMVMI.  
      5011.    49 -       PARAMETER   (CSOLD='OLD') 
      5012.    50 -       PARAMETER   (CSNEW='NEW') 
      5013.    51 -       PARAMETER   (CSAPP='UNKNOWN') 
      5014.    52 -       PARAMETER   (CSOVR='NEW') 
      5015.    53 -       PARAMETER   (CSSCR='SCRATCH') 
0     5016.    54-+ +SELF, IF=QMLNX.    
      5017.    55 -       LOGICAL THERE 
0     5018.    56-+ +SELF.  
      5019.    57 -     
      5020.    58 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      5021.    59 -     
      5022.    60 -       LUN  = LUNP   
      5023.    61 -       IFLBAK = 0    
      5024.    62 -       IF (TEXT(1:4).EQ.'    ')  GO TO 99    
      5025.    63 -       IF (TEXT(1:4).EQ.'-   ')  GO TO 99    
      5026.    64 -       IF (TEXT(1:4).EQ.'&   ')  GO TO 99    
      5027.    65 -       MODEX  = IOMODE(7)    
      5028.    66 -     
      5029.    67 - C--                Check : + APPEND, = OVERWRITE, - SCRATCH 
      5030.    68 -     
      5031.    69 -       IF (TEXT(1:1).EQ.'=')        GO TO 16 
      5032.    70 -       IF (TEXT(1:1).EQ.'-')        GO TO 17 
      5033.    71 -       IF (TEXT(1:1).NE.'+')        GO TO 19 
      5034.    72 -       MODEX = 2*MODEX   
      5035.    73 -       IOMODE(2) = 1 
      5036.    74 -       GO TO 18  
      5037.    75 -     
      5038.    76 -    16 MODEX = 3*MODEX   
      5039.    77 -       GO TO 18  
      5040.    78 -     
      5041.    79 -    17 MODEX = 4*MODEX   
1 208                                                              P=FLDIALG  D=FLINK     2                     PAGE  61

      5042.    80 -    18 IF (MODEX.EQ.0)  WRITE (IQTYPE,9018)  
      5043.    81 -       TEXT(1:1) = ' '   
      5044.    82 -     
      5045.    83 -    19 CALL CLEFT  (TEXT,1,NTEXT)    
      5046.    84 -       NTXT = NDSLAT 
      5047.    85 -     
      5048.    86 -       IF (IOMODE(8).NE.0)  THEN 
      5049.    87 -           IF (MODEX.EQ.2)  WRITE (IQTYPE,9024)  
      5050.    88 -           IF (MODEX.NE.0)  MODEX = 3    
      5051.    89 -         ENDIF   
      5052.    90 -     
      5053.    91 -       MODXA = IABS (MODEX)  
      5054.    92 -       CLOSE (LUN)   
      5055.    93 -     
      5056.    94 -       JOPFL = 0 
      5057.    95 -       IF (MODXA.EQ.1)  JOPFL = 2    
      5058.    96 -       IF (MODXA.EQ.3)  JOPFL = 1    
      5059.    97 -     
      5060.    98 -       IF (JOPFL.NE.0)  THEN 
      5061.    99 -           CALL FLOPER (JOPFL, TEXT(1:NTXT), LUN)    
      5062.   100 -           IF (JOPFL.EQ.2)  IFLBAK = NDSLAT  
      5063.   101 -         ENDIF   
      5064.   102 -     
      5065.   103 -       IF (IOMODE(3).EQ.0)  THEN 
      5066.   104 -           USF = UNF 
      5067.   105 -         ELSE    
      5068.   106 -           USF = FRM 
      5069.   107 -         ENDIF   
      5070.   108 -     
      5071.   109 - C----              Open next file -- according to MODEX parameter   
      5072.   110 - C---               MODEX =-3  Old Printer File - OVERWRITE mode 
      5073.   111 - C---               MODEX =-2  Old Printer File - APPEND mode    
      5074.   112 - C---               MODEX =-1  New Printer File  
      5075.   113 - C---               MODEX = 0  Input File    
      5076.   114 - C---               MODEX = 1  New Output File   
      5077.   115 - C---               MODEX = 2  Old Output File - APPEND mode 
      5078.   116 - C---               MODEX = 3  Old Output File - OVERWRITE mode  
      5079.   117 - C---               MODEX = 4  Scratch File  
      5080.   118 -     
      5081.   119 -       IF (MODXA.EQ.0)  OST = CSOLD  
      5082.   120 -       IF (MODXA.EQ.1)  OST = CSNEW  
      5083.   121 -       IF (MODXA.EQ.2)  OST = CSAPP  
      5084.   122 -       IF (MODXA.EQ.3)  OST = CSOVR  
      5085.   123 -       IF (MODXA.EQ.4)  OST = CSSCR  
      5086.   124 -       IF (IOMODE(8).NE.0)          GO TO 41 
      5087.   125 -     
0     5088.   126-+ +SELF, IF=QMALT.    
      5089.   127 -       IF (IOMODE(3).EQ.0)          GO TO 36 
      5090.   128 -       IF (MODEX.LE.0)              GO TO 36 
      5091.   129 -     
      5092.   130 -       IF (MODXA.EQ.2)  THEN 
      5093.   131 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, ACCESS=APX    
      5094.   132 -      +,                          CARRIAGECONTROL='LIST')    
      5095.   133 -         ELSE    
      5096.   134 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,CARRIAGECONTROL='LIST')    
      5097.   135 -         ENDIF   
      5098.   136 -       GO TO 99  
      5099.   137 -     
      5100.   138 -    36 IF (MODXA.EQ.2)  THEN 
      5101.   139 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,ACCESS=APX,FORM=USF)   
      5102.   140 -         ELSE    
      5103.   141 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=USF)  
      5104.   142 -         ENDIF   
0     5105.   143-+ +SELF, IF=QMAPO.    
      5106.   144 -       IF (IOMODE(3).EQ.0)          GO TO 36 
      5107.   145 -       IF (MODXA.EQ.4)  THEN 
      5108.   146 -           OPEN (LUN, STATUS=OST, FORM=USF)  
      5109.   147 -         ELSE    
      5110.   148 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5111.   149 -         ENDIF   
      5112.   150 -       GO TO 99  
      5113.   151 -     
      5114.   152 -    36 IF (MODXA.EQ.4)  THEN 
      5115.   153 -           OPEN (LUN,STATUS=OST,RECL=2048,FORM=USF)  
      5116.   154 -         ELSE    
      5117.   155 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,RECL=2048,FORM=USF)    
      5118.   156 -         ENDIF   
0     5119.   157-+ +SELF, IF=QMCRU.    
      5120.   158 -       IF (MODXA.EQ.4)  THEN 
      5121.   159 -           OPEN (LUN,STATUS=OST,FORM=USF)    
      5122.   160 -         ELSEIF (MODXA.EQ.2)  THEN   
      5123.   161 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,POSITION=APX,FORM=USF  
      5124.   162 -      +,                       ERR=35)   
      5125.   163 -           GO TO 99  
      5126.   164 -    35     OPEN (LUN,FILE=TEXT(1:NTXT),STATUS='NEW',FORM=USF)    
      5127.   165 -         ELSE    
      5128.   166 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=USF)  
      5129.   167 -         ENDIF   
0     5130.   168-+ +SELF, IF=QMCVX, QMCVY. 
      5131.   169 -       IF (IOMODE(3).EQ.0)          GO TO 36 
      5132.   170 - C!    IF (MODEX.LT.0)  USF = 'PRINT'    
      5133.   171 -     
      5134.   172 -    36 IF (MODXA.EQ.0)  THEN 
      5135.   173 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,READONLY,FORM=USF) 
      5136.   174 -         ELSEIF (MODXA.EQ.2)  THEN   
      5137.   175 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,ACCESS=APX,FORM=USF)   
      5138.   176 -         ELSEIF (MODXA.EQ.4)  THEN   
      5139.   177 -           OPEN (LUN,STATUS=OST,FORM=USF)    
      5140.   178 -         ELSE    
      5141.   179 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5142.   180 -         ENDIF   
1 208                                                              P=FLDIALG  D=FLINK     3                     PAGE  62

      5143.   181-+ +SELF, IF=QMHPX.    
      5144.   182 -       IF (MODXA.EQ.4)  THEN 
      5145.   183 -           OPEN (LUN, STATUS='SCRATCH', FORM=USF)    
      5146.   184 -           GO TO 99  
      5147.   185 -         ELSEIF (MODXA.EQ.0)  THEN   
      5148.   186 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=USF)  
      5149.   187 -           GO TO 99  
      5150.   188 -         ENDIF   
      5151.   189 -     
      5152.   190 -       OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5153.   191 -       IF (MODXA.NE.2)              GO TO 99 
      5154.   192 -       IF (IOMODE(3).EQ.0)          GO TO 36 
      5155.   193 -     
      5156.   194 -    34 READ (LUN,FMT='(A)',END=99)   
      5157.   195 -       GO TO 34  
      5158.   196 -     
      5159.   197 -    36 READ (LUN,END=99) 
      5160.   198 -       GO TO 36  
0     5161.   199-+ +SELF, IF=QMIBX.    
      5162.   200 -       IF (MODXA.EQ.4)  THEN 
      5163.   201 -           OPEN (LUN, STATUS='SCRATCH', FORM=USF)    
      5164.   202 -           GO TO 99  
      5165.   203 -         ELSEIF (MODXA.EQ.0)  THEN   
      5166.   204 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=USF,ACTION='READ')    
      5167.   205 -           GO TO 99  
      5168.   206 -         ENDIF   
      5169.   207 -     
      5170.   208 -       OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5171.   209 -       IF (MODXA.NE.2)              GO TO 99 
      5172.   210 -       IF (IOMODE(3).EQ.0)          GO TO 36 
      5173.   211 -     
      5174.   212 -    34 READ (LUN,FMT='(A)',END=99)   
      5175.   213 -       GO TO 34  
      5176.   214 -     
      5177.   215 -    36 READ (LUN,END=99) 
      5178.   216 -       GO TO 36  
0     5179.   217-+ +SELF, IF=QMIRT.    
      5180.   218 -       IF (MODXA.EQ.4)  THEN 
      5181.   219 -           OPEN (LUN, STATUS='SCRATCH', FORM=USF)    
      5182.   220 -         ELSE    
      5183.   221 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5184.   222 -         ENDIF   
      5185.   223 -     
      5186.   224 -       IF (MODXA.NE.2)   REWIND LUN  
0     5187.   225-+ +SELF, IF=QMSGI.    
      5188.   226 -       IF (MODXA.EQ.2)  THEN 
      5189.   227 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,ACCESS=APX,FORM=USF)   
      5190.   228 -         ELSEIF (MODXA.EQ.4)  THEN   
      5191.   229 -           OPEN (LUN,STATUS=OST,FORM=USF)    
      5192.   230 -         ELSE    
      5193.   231 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5194.   232 -         ENDIF   
0     5195.   233-+ +SELF, IF=QMSUN.    
      5196.   234 -       IF (MODXA.EQ.2)  THEN 
      5197.   235 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,ACCESS=APX,FORM=USF)   
      5198.   236 -         ELSEIF (MODXA.EQ.4)  THEN   
      5199.   237 -           OPEN (LUN,STATUS=OST,FORM=USF)    
      5200.   238 -         ELSE    
      5201.   239 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5202.   240 -         ENDIF   
0     5203.   241-+ +SELF, IF=QMVMI.    
      5204.   242 -       IF (MODXA.EQ.2)  THEN 
      5205.   243 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,ACCESS=APX,FORM=USF)   
      5206.   244 -         ELSEIF (MODXA.EQ.4)  THEN   
      5207.   245 -           OPEN (LUN,STATUS=OST,FORM=USF)    
      5208.   246 -         ELSEIF (MODXA.EQ.0)  THEN   
      5209.   247 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF, READONLY)   
      5210.   248 -         ELSE    
      5211.   249 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5212.   250 -         ENDIF   
0     5213.   251-+ +SELF, IF=QMLNX.    
      5214.   252 -       IF (MODXA.EQ.2)  THEN 
      5215.   253 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,ACCESS=APX,FORM=USF)   
      5216.   254 -         ELSEIF (MODXA.EQ.4)  THEN   
      5217.   255 -           OPEN (LUN,STATUS=OST,FORM=USF)    
      5218.   256 -         ELSEIF (MODXA.EQ.0)  THEN   
      5219.   257 -       INQUIRE(FILE=TEXT(1:NTXT),EXIST=THERE)    
      5220.   258 -       IF(.NOT.THERE) THEN   
      5221.   259 -       WRITE(6,9999) TEXT(1:NTXT)    
      5222.   260 -  9999 FORMAT (' !!! Input file not exist : ',a) 
      5223.   261 -       STOP  
      5224.   262 -       ENDIF 
      5225.   263 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5226.   264 -         ELSE    
      5227.   265 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST, FORM=USF) 
      5228.   266 -         ENDIF   
0     5229.   267-+ +SELF.  
      5230.   268 -       GO TO 99  
      5231.   269 -     
      5232.   270 - C----              OPEN CETA tape or disk File  
      5233.   271 -     
      5234.   272 -    41 CONTINUE  
      5235.   273 -     
0     5236.   274-+ +SELF, IF=QMALT.    
      5237.   275 -       IF (IOMODE(8).GE.0)  THEN 
      5238.   276 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5239.   277 -      +,         RECORDTYPE='FIXED',BLOCKSIZE=3600,RECL=3600)    
      5240.   278 -         ELSE    
      5241.   279 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5242.   280 -      +,         ACCESS='DIRECT',RECL=3600)  
1 208                                                              P=FLDIALG  D=FLINK     4                     PAGE  63

      5243.   281 -         ENDIF   
0     5244.   282-+ +SELF, IF=QMAPO.    
      5245.   283 -       IF (IOMODE(8).GE.0)  THEN 
      5246.   284 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5247.   285 -      +,                         RECL=3600)  
      5248.   286 -         ELSE    
      5249.   287 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5250.   288 -      +,         ACCESS='DIRECT',RECL=3600)  
      5251.   289 -         ENDIF   
0     5252.   290-+ +SELF, IF=QMCRU.    
      5253.   291 -       IF (IOMODE(8).GE.0)  THEN 
      5254.   292 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF)  
      5255.   293 -         ELSE    
      5256.   294 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5257.   295 -      +,         ACCESS='DIRECT',RECL=3600)  
      5258.   296 -         ENDIF   
0     5259.   297-+ +SELF, IF=QMCVX, QMCVY. 
      5260.   298 -       IF (IOMODE(8).GE.0)  THEN 
      5261.   299 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5262.   300 -      +,         RECORDTYPE='FIXED',BLOCKSIZE=3600,RECL=3600)    
      5263.   301 -         ELSE    
      5264.   302 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5265.   303 -      +,         ACCESS='DIRECT',RECL=3600)  
      5266.   304 -         ENDIF   
0     5267.   305-+ +SELF, IF=QMHPX, QMIBX, QMIRT.  
      5268.   306 -       IF (IOMODE(8).GE.0)  THEN 
      5269.   307 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF)  
      5270.   308 -           REWIND LUN    
      5271.   309 -         ELSE    
      5272.   310 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5273.   311 -      +,         ACCESS='DIRECT',RECL=3600)  
      5274.   312 -         ENDIF   
0     5275.   313-+ +SELF, IF=QMSGI.    
      5276.   314 -       IF (IOMODE(8).GE.0)  THEN 
      5277.   315 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF)  
      5278.   316 -         ELSE    
      5279.   317 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5280.   318 -      +,         ACCESS='DIRECT',RECL=900)   
      5281.   319 -         ENDIF   
0     5282.   320-+ +SELF, IF=QMSUN.    
      5283.   321 -       IF (IOMODE(8).GE.0)  THEN 
      5284.   322 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF)  
      5285.   323 -         ELSE    
      5286.   324 -           OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5287.   325 -      +,         ACCESS='DIRECT',RECL=3600)  
      5288.   326 -         ENDIF   
0     5289.   327-+ +SELF, IF=QMVMI.    
      5290.   328 -       IF (IOMODE(8).GE.0)  THEN 
      5291.   329 -           IF (MODEX.EQ.0)  THEN 
      5292.   330 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF,READONLY) 
      5293.   331 -             ELSE    
      5294.   332 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF)  
      5295.   333 -             ENDIF   
      5296.   334 -         ELSE    
      5297.   335 -           IF (MODEX.EQ.0)  THEN 
      5298.   336 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5299.   337 -      +,             ACCESS='DIRECT',RECL=900,READONLY)  
      5300.   338 -             ELSE    
      5301.   339 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5302.   340 -      +,             ACCESS='DIRECT',RECL=900)   
      5303.   341 -             ENDIF   
      5304.   342 -         ENDIF   
0     5305.   343-+ +SELF, IF=QMLNX.    
      5306.   344 -       IF (IOMODE(8).GE.0)  THEN 
      5307.   345 -           IF (MODEX.EQ.0)  THEN 
      5308.   346 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF)  
      5309.   347 -             ELSE    
      5310.   348 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF)  
      5311.   349 -             ENDIF   
      5312.   350 -         ELSE    
      5313.   351 -           IF (MODEX.EQ.0)  THEN 
      5314.   352 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5315.   353 -      +,             ACCESS='DIRECT',RECL=3600)  
      5316.   354 -             ELSE    
      5317.   355 -               OPEN (LUN,FILE=TEXT(1:NTXT),STATUS=OST,FORM=UNF   
      5318.   356 -      +,             ACCESS='DIRECT',RECL=3600)  
      5319.   357 -             ENDIF   
      5320.   358 -         ENDIF   
0     5321.   359-+ +SELF.  
      5322.   360 -    99 RETURN    
      5323.   361 -     
      5324.   362 -  9018 FORMAT (' !!! No APPEND/OVERWRITE mode for input files !!!')  
      5325.   363 -  9024 FORMAT (' !!! APPEND mode not possible for CETA files !!!')   
      5326.   364 -       END   
      5327.   365.- +SEQ, QCARDL.    ====================================================   

  209 PATCHY    ================================================== P=FLDIALG  D=FLOPER    1 ============================

      5328.     0 + +DECK, FLOPER, IF=-*KAPOL.  
      5329.     1.- +SEQ, QCARD1.   
      5330.     2 -       SUBROUTINE FLOPER (MODE, CHFILE, LUNOP)   
      5331.     3 -     
      5332.     4 - C-    File operations : 
      5333.     5 - C-    MODE = 1 :  delete file CHFILE    
      5334.     6 - C-           2 :  change name of file CHFILE to CHFILE.bak  
      5335.     7 -     
      5336.     8 -       COMMON /SLATE/ NDSLAT,NESLAT,NFSLAT,NGSLAT,MMSLAT(36) 
      5337.     9 -     
      5338.    10 -       CHARACTER    CHFILE*(*), CHBAK*256    
1 209                                                              P=FLDIALG  D=FLOPER    2                     PAGE  64

      5339.    11 -       LOGICAL      THERE    
0     5340.    12-+ +SELF, IF=QMALT.    
      5341.    13 -       INTEGER      RENAME   
0     5342.    14-+ +SELF,IF=QMAPO,QMCVX,QMCVY,QMHPX,QMIBX,QMIRT,QMSGI,QMSUN,QMVMI,QMLNX.   
      5343.    15 -       INTEGER      RENAMEF  
0     5344.    16-+ +SELF, IF=QMCRU.    
      5345.    17 -       CHARACTER    CHWK*256 
      5346.    18 -       DIMENSION    ICHWK(32),    ICHBAK(32) 
      5347.    19 -       EQUIVALENCE (ICHWK,CHWK), (ICHBAK,CHBAK)  
0     5348.    20-+ +SELF.  
      5349.    21 -     
      5350.    22 - C--                Check file exists    
      5351.    23 -     
      5352.    24 -       NDSLAT = 0    
      5353.    25 -       INQUIRE (FILE=CHFILE,EXIST=THERE) 
      5354.    26 -       IF (.NOT.THERE)              RETURN   
      5355.    27 -       IF (MODE.EQ.2)               GO TO 24 
      5356.    28 -       IF (MODE.NE.1)               RETURN   
      5357.    29 -     
      5358.    30 - C--                Remove file  
      5359.    31 -     
      5360.    32 -       OPEN  (LUNOP,FILE=CHFILE,STATUS='OLD')    
      5361.    33 -       CLOSE (LUNOP,STATUS='DELETE') 
      5362.    34 -       RETURN    
      5363.    35 -     
      5364.    36 - C--                Rename file  
      5365.    37 -     
      5366.    38 -    24 N     = MIN (LEN(CHFILE), 252)    
      5367.    39 -       NFI   = LNBLNK  (CHFILE(1:N)) 
      5368.    40 -       CHBAK = CHFILE(1:NFI) // '.bak'   
      5369.    41 -       NBAK  = NFI + 4   
      5370.    42 -     
      5371.    43 -       INQUIRE (FILE=CHBAK(1:NBAK),EXIST=THERE)  
      5372.    44 -       IF (THERE)  THEN  
      5373.    45 -           OPEN  (LUNOP,FILE=CHBAK,STATUS='OLD') 
      5374.    46 -           CLOSE (LUNOP,STATUS='DELETE') 
      5375.    47 -         ENDIF   
      5376.    48 -     
0     5377.    49-+ +SELF, IF=QMALT.    
      5378.    50 -       ISTAT = RENAME (CHFILE(1:NFI), CHBAK(1:NBAK)) 
0     5379.    51-+ +SELF,IF=QMAPO,QMCVX,QMCVY,QMHPX,QMIBX,QMIRT,QMSGI,QMSUN,QMVMI,QMLNX.   
      5380.    52 -       ISTAT = RENAMEF (CHFILE(1:NFI), CHBAK(1:NBAK))    
0     5381.    53-+ +SELF, IF=QMCRU.    
      5382.    54 -       CHWK = 'mv -f ' //CHFILE(1:NFI)// ' ' //CHBAK(1:NBAK)// CHAR(0)   
      5383.    55 -       ISTAT = ISHELL (ICHWK)    
0     5384.    56-+ +SELF.  
      5385.    57 -       IF (ISTAT.EQ.0)  NDSLAT = 1   
      5386.    58 -       RETURN    
      5387.    59 -       END   
      5388.    60.- +SEQ, QCARDL.    ====================================================   
      5389.    61 + +USE, APOSYS, D=FLOPER, T=INH.  

  210 PATCHY    ================================================== P=FLDIALG  D=HELPPR    1 ============================

      5390.     0 + +DECK, HELPPR.  
      5391.     1.- +SEQ, QCARD1.   
      5392.     2 -       SUBROUTINE HELPPR 
      5393.     3 -     
      5394.     4.- +CDE, QUNIT.    
      5395.     5 -     
      5396.     6.- +SEQ, PAMPUBLIC.    
      5397.     7 -     
      5398.     8 -     
      5399.     9 -       WRITE (IQTYPE,9001)   
      5400.    10 -       WRITE (IQTYPE,9002) MPUBLI    
      5401.    11 -       WRITE (IQTYPE,9003)   
      5402.    12 -       RETURN    
      5403.    13 -     
      5404.    14 -  9001 FORMAT (1X    
      5405.    15 -      F/' For each Stream indicated, give File/Option as parameter in'   
      5406.    16 -      F/' 1-to-1 correspondance.'/   
      5407.    17 -      F/' Parameters must be separated by 1 or more blanks,' 
      5408.    18 -      F/' except: multiple - do not need imbedded blanks.' / 
      5409.    19 -      F/' Special parameter values :'    
      5410.    20 -      F/'   - or & : do not open this stream / option string void,'  
      5411.    21 -      F/'            except READ : TTY/TTP if &, file name.cra if -' 
      5412.    22 -      F/'                   PRNT : TTY if &,     file +y.lis   if -' 
      5413.    23 -      F/' . or .go : use - for this and all remaining streams,'  
      5414.    24 -      F/' : or :go : use & for this and all remaining streams,'  
      5415.    25 -      F/'      TTY : use Terminal for this stream (only for READ+PRNT),' 
      5416.    26 -      F/'      TTP : use TTY with prompting (only for READ),'    
      5417.    27 -      F/'      EOF : void input (only for READ),'    
      5418.    28 -      F/'     HELP : as you guessed.' )  
      5419.    29 -     
      5420.    30 -  9002 FORMAT (1X/' Normal parameters :' 
      5421.    31 -      F/'  File:  DIR/FN.EXT  path name; DIR/, .EXT  may be omitted,'    
      5422.    32 -      F/'                     a default extension is added to the'   
      5423.    33 -      F/'                     file name, unless it contains a dot'   
      5424.    34 -      F/'                     or terminates with !'  
      5425.    35 -      F/'    [:] +DIR/FN.EXT  open output file for Append'   
      5426.    36 -      F/'    [:] =DIR/FN.EXT  open output file for Over-write'   
      5427.    37 -      F/'    [:] *DIR/FN.EXT   = ',A,'DIR/FN.EXT  public files'  
      5428.    38 -      F/'    [:] ~DIR/FN.EXT   = $HOME/DIR/FN.EXT  relative' 
      5429.    39 -      F/'    [:] (X)/FN.EXT    = $X/FN.EXT   env. variable X'    
      5430.    40 -      F/'    [:]  LNAME!      Link name, no default extension added' 
      5431.    41 -      F/'     :   this prefix prevents conversion to lower case')    
      5432.    42 -  9003 FORMAT (1X/   
      5433.    43 -      F '     FN = n or n+  (n is digit 1 to 9) : use file-name of'  
      5434.    44 -      F/'                   stream n without/with directory part'/   
      5435.    45 -      F/' OPT/CCH: string of max. 8 characters; if the string needs' 
1 210                                                              P=FLDIALG  D=HELPPR    2                     PAGE  65

      5436.    46 -      F/10X,'to start with  - or &  it should be enclosed by $ signs'/   
      5437.    47 -      F/' You may give 1 or several parameters on a line, the machine'   
      5438.    48 -      F/' will keep asking until its list is satisfied.' 
      5439.    49 -      F/' After that, you type GO to start the run and open the files.'  
      5440.    50 -      F/' If you type anything else  ABEND  occurs.'/1X) 
      5441.    51 -       END   
      5442.    52.- +SEQ, QCARDL.    ====================================================   

  211 PATCHY    ================================================== P=FLDIALG  D=APOASC    1 ============================

      5443.     0 + +DECK, APOASC, IF=QMAPO.    
      5444.     1.- +SEQ, QCARD1.   
      5445.     2 -       SUBROUTINE APOASC (CHFILE)    
      5446.     3 -     
      5447.     4 - %INCLUDE '/sys/ins/base.ins.ftn'    
      5448.     5 - %INCLUDE '/sys/ins/ios.ins.ftn' 
      5449.     6 -     
      5450.     7 - C-    Check whether file CHFILE is of type ASCII    
      5451.     8 -     
      5452.     9.- +CDE, LUNSLN.   
      5453.    10 - C--------------    END CDE                             --------------   
      5454.    11 -       CHARACTER    CHFILE*(*)   
      5455.    12 -       INTEGER*2    IDSTR, IRECT 
      5456.    13 -     
      5457.    14 -     
      5458.    15 -       MODE = 0  
      5459.    16 -     
      5460.    17 -       IRECT = LEN (CHFILE)  
      5461.    18 -       IDSTR = IOS_$OPEN (CHFILE,IRECT,IOS_$INQUIRE_ONLY_OPT,ISTAT)  
      5462.    19 -       IF (ISTAT.NE.0)        RETURN 
      5463.    20 -     
      5464.    21 -       IOBJFL = IOS_$INQ_OBJ_FLAGS (IDSTR,ISTAT) 
      5465.    22 -       IF (ISTAT.NE.0)        GO TO 71   
      5466.    23 -       IF (AND(IOBJFL,4).NE.0)  THEN 
      5467.    24 -           MODE = 1  
      5468.    25 -         ENDIF   
      5469.    26 -     
      5470.    27 -       IRECT = IOS_$INQ_REC_TYPE (IDSTR,ISTAT)   
      5471.    28 -       IF (ISTAT.NE.0)        GO TO 71   
      5472.    29 -       IF (IRECT.EQ.IOS_$UNDEF)  THEN    
      5473.    30 -           MODE = MODE + 1   
      5474.    31 -         ENDIF   
      5475.    32 -     
      5476.    33 -    71 IF (MODE.EQ.2)  THEN  
      5477.    34 -           CALL SBIT1 (NOPTVL(4),1)  
      5478.    35 -         ENDIF   
      5479.    36 -     
      5480.    37 -       CALL IOS_$CLOSE (IDSTR,ISTAT) 
      5481.    38 -       RETURN    
      5482.    39 -       END   
      5483.    40.- +SEQ, QCARDL.    ====================================================   

  212 PATCHY    ================================================== P=QABEND   D=          1 ============================

      5484.     0 + +PATCH, QABEND. 

  213 PATCHY    ================================================== P=QABEND   D=BLANKDEK  1 ============================

      5485.     0 + +DECK,BLANKDEK. 
      5486.     1.- +SEQ, QCARD1.   
      5487.     2 -       SUBROUTINE QABEND 
      5488.     3 -     
      5489.     4.- +CDE, MQCM, QBCD, QSTATE, QUNIT.    
      5490.     5.- +CDE, ARRCOM, ARRVRQ, CCPARA, CONST, DPLINE, DPWORK 
      5491.     6.- +CDE, IOFCOM, KDPKCM, LUNSLN    
      5492.     7.- +CDE, IQCC, Q, PYAID.   
      5493.     8.- +CDE, EEQCRA, EQLADR, EQACT, EQINC, EQLCR.  
      5494.     9 - C--------------    END CDE                             -----------------  ------
      5495.    10 -     
      5496.    11 -     
      5497.    12 -       CALL QTOUCH (IQDROP,LQUSER(5),3HSH.)  
      5498.    13 -     
      5499.    14 -       CALL QPOSTM (5HTCWM.) 
      5500.    15 -       STOP  
      5501.    16 -       END   
      5502.    17.- +SEQ, QCARDL.      ==================================================   
      5503.    18 + +USE, SERVICE, D=QABEND, T=INH. 

  214 PATCHY    ================================================== P=QABEND   D=NOIA      1 ============================

      5504.     0 + +DECK, NOIA, T=JOIN.    
      5505.     1.- +SEQ, QCARD1.   
      5506.     2 -       SUBROUTINE NOIA   
      5507.     3 -     
      5508.     4 - C-    DEBUG ROUTINE MATRIX  
      5509.     5 -     
      5510.     6.- +CDE, MQCM, QBCD, QSTATE, QUNIT.    
      5511.     7.- +CDE, ARRCOM, ARRVRQ, CCPARA, CONST, DPLINE, DPWORK 
      5512.     8.- +CDE, IOFCOM, KDPKCM, LUNSLN    
      5513.     9.- +CDE, IQCC, Q, PYAID.   
      5514.    10.- +CDE, EEQCRA, EQLADR, EQACT, EQINC, EQLCR.  
      5515.    11 - C--------------    END CDE                             -----------------  ------
      5516.    12 -     
      5517.    13 -     
      5518.    14 -       RETURN    
      5519.    15 -       END   
      5520.    16.- +SEQ, QCARDL.      ==================================================   

  215 PATCHY    ================================================== P=PINIT    D=          1 ============================

      5521.     0 + +PATCH, PINIT.  

  216 PATCHY    ================================================== P=ARRIVE   D=          1 ============================

      5522.     0 + +PATCH, ARRIVE. 
1 217 PATCHY    ================================================== P=ARRIVE   D=ARBIN     1 =================== PAGE  66

      5523.     0 + +DECK, ARBIN.   
      5524.     1.- +SEQ, QCARD1.   
      5525.     2 -       SUBROUTINE ARBIN  
      5526.     3 -     
      5527.     4 - C-    READ/SKIP NEXT RECORD OF COMPACT PAM  
      5528.     5 -     
      5529.     6.- +CDE, QBCD, QUNIT.  
      5530.     7.- +CDE, ARRCOM, CONST, KDPKCM.    
      5531.     8.- +CDE, Q, PYAI.  
      5532.     9 - C--------------    END CDE                             -----------------  ------
      5533.    10 -       EQUIVALENCE (LUNUSE,LUNPAM)   
      5534.    11.- +SEQ, FORXEOF,     T=PASS.  
      5535.    12 -     
      5536.    13.- +SEQ, Q$JBIT.   
      5537.    14 -     
      5538.    15.- +SEQ, QEJECT, N=30. 
      5539.    16 -     
      5540.    17 -       LINBIN = LINBUF + IQ(LINBUF-1)    
      5541.    18 -     9 IF  (JARDO)            11,17,21   
      5542.    19 -     
      5543.    20 -     
      5544.    21 - C----              SKIP NEXT DECK   
      5545.    22 -     
      5546.    23 -    11 CONTINUE  
      5547.    24.- +SEQ, READSHRT, IF=-SKIPFULL.   
      5548.    25.- +SEQ, READFULL, IF= SKIPFULL.   
      5549.    26 -       NSKIPR = NSKIPR + 1   
      5550.    27 -       GO TO 31  
      5551.    28 -     
      5552.    29 - C----              SKIP RECORD WITHOUT C-C  
      5553.    30 -     
      5554.    31 -    17 CONTINUE  
      5555.    32.- +SEQ, READSHRT, IF=-SKIPFULL.   
      5556.    33.- +SEQ, READFULL, IF= SKIPFULL.   
      5557.    34 -       NSKIPR = NSKIPR + 1   
      5558.    35 -       N = 2 
      5559.    36 -       GO TO 31  
      5560.    37 -     
      5561.    38 - C----              READ NEXT RECORD IN FULL 
      5562.    39 -     
      5563.    40 -    21 CONTINUE  
      5564.    41.- +SEQ, READFULL. 
      5565.    42 - C     JARDO = JBYT (IQ(LINBIN+2),10,9)                                   A8M    
      5566.    43 -       JARDO = JBYT (IQ(LINBIN+3),10,9)                                  -A8M    
      5567.    44 -       N = 2*JARDO + 3   
      5568.    45 -     
      5569.    46 -     
      5570.    47 - C------            PROCESS THE STUFF READ   
      5571.    48 -     
      5572.    49 -    31 NVARRI(5)= IQ(LINBIN+1)   
      5573.    50 -       NVARRI(6)= IQ(LINBIN+2)                                           -A8M    
      5574.    51 -       CALL UPKBYT (IQ(LINBIN+3),1,NVARRI(1),4,MPAK2(1))                 -A8M    
      5575.    52 - C     CALL UPKBYT (IQ(LINBIN+2),1,NVARRI(1),4,MPAK2(1))                  A8M    
      5576.    53 -       NCARDP= NCARDP + 1    
      5577.    54 -       IF (NVARRI(1).EQ.0)    GO TO 34   
      5578.    55 -       NDECKR = NDECKR + 1   
      5579.    56 -       JCARD  = MAX  (0,NVARRI(1)-2) 
      5580.    57 -    34 CONTINUE  
      5581.    58.- +SEQ, DGARBIN,     T=PASS.   DIAGNOSTIC 
      5582.    59 -       IF (JARDO.LT.0)        RETURN 
      5583.    60 -       LEND = LINBIN + IQ(LINBIN) + 1    
      5584.    61 -     
      5585.    62 - C--                UNPACK INDEX VECTOR, CONVERT TO C/C DIRECTORY    
      5586.    63 -     
      5587.    64 - C     CALL UPKBYT (IQ(LINBIN+2),2,IQ(LINBUF+1),N,MPAK9(1))               A8M    
      5588.    65 -       CALL UPKBYT (IQ(LINBIN+3),2,IQ(LINBUF+1),N,MPAK9(1))              -A8M    
      5589.    66 -       LARX  = LINBUF + 3    
      5590.    67 -       IF (NVOPER(3).NE.0)    GO TO 61   
      5591.    68 -       IF (JARDO    .EQ.0)    GO TO 63   
      5592.    69 -     
      5593.    70 - C----              RECORD WITH C/C  
      5594.    71 -     
      5595.    72 -       LARXE = LINBUF + N + 1    
      5596.    73 -       IQ(LARXE)  = IQ(LINBUF+2) 
      5597.    74 -       IQ(LARXE+1)= -LEND    
      5598.    75 -     
      5599.    76 -       DO 37   L=LARX,LARXE,2    
      5600.    77 -       IQ(L)   = -(IQ(L) + LINBIN)   
      5601.    78 -    37 IQ(L+1) =   IQ(L+1) + JCARD   
      5602.    79 -       IQ(LARX)= -IQ(LARX)   
      5603.    80 -       IF (IQ(LARX+1).EQ.JCARD)  LARX=LARX+2 
      5604.    81 -       IF (MOPTIO(11)+MOPTIO(19).EQ.0)        RETURN 
      5605.    82 -     
      5606.    83.- +SEQ, QEJECT.   
      5607.    84 -     
      5608.    85 - C--                REMOVE CARDS +SEQ, +KEEP FROM C/C DIRECTORY IF OPTION    
      5609.    86 -     
      5610.    87 -       L = -IQ(LARX) 
      5611.    88 -       IF (L.LT.0)               GO TO 42    
      5612.    89 -       IF (JARTYP(IQ(L)).NE.0)   GO TO 42    
      5613.    90 -       IQ(LARX) = L  
      5614.    91 -     
      5615.    92 -    42 LP = LARX + 1 
      5616.    93 -       LT = LARX - 1 
      5617.    94 -    45 LT = LT + 2   
      5618.    95 -       IF (LT.GE.LARXE)       GO TO 46   
      5619.    96 -       L = -IQ(LT+1) 
      5620.    97 -       IF (JARTYP(IQ(L)).EQ.0)   GO TO 45    
      5621.    98 -       IQ(LP)   = IQ(LT) 
      5622.    99 -       IQ(LP+1) = -L 
      5623.   100 -       LP = LP + 2   
      5624.   101 -       GO TO 45  
      5625.   102 -     
      5626.   103 -    46 IQ(LP)   = IQ(LARXE)  
      5627.   104 -       IQ(LP+1) = IQ(LARXE+1)    
      5628.   105 -       LARXE = LP    
      5629.   106 -       RETURN    
      5630.   107 -     
1 217                                                              P=ARRIVE   D=ARBIN     2                     PAGE  67

      5631.   108.- +SEQ, QEJECT.   
      5632.   109 -     
      5633.   110 - C----              UPDATE MODE, BY-PASS C/C 
      5634.   111 -     
      5635.   112 -    61 IQ(LARX) = IQ(LARX) + LINBIN  
      5636.   113 -       IF (NVARRI(3) .EQ.0)   GO TO 62   
      5637.   114 -       IF (MOPTIO(20).EQ.0)   GO TO 62   
      5638.   115 -       IQ(LEND)  = KDEOD(1)  
      5639.   116 -       IQ(LEND+1)= KDEOD(2)                                               A4 
      5640.   117 -       LEND = LEND + 2                                                    A4 
      5641.   118 - C     LEND = LEND + 1                                                   -A4 
      5642.   119 -       IQ(LINBUF+2) = IQ(LINBUF+2) + 1   
      5643.   120 -     
      5644.   121 -    62 NVARRI(2) = 0 
      5645.   122 -       NVARRI(4) = 0 
      5646.   123 -       IF (JARDO.NE.0)        GO TO 64   
      5647.   124 -     
      5648.   125 - C--                RECORD WITHOUT C/C   
      5649.   126 -     
      5650.   127 -    63 IQ(LARX) = NWSEN1 + LINBIN    
      5651.   128 -    64 LARXE = LARX + 1  
      5652.   129 -       IQ(LARXE)   = IQ(LINBUF+2) + JCARD    
      5653.   130 -       IQ(LARXE+1) = -LEND   
      5654.   131 -       RETURN    
      5655.   132 -     
      5656.   133 - C------            EOF SEEN 
      5657.   134 -     
0     5658.   135-+ +SELF, ARBINER,     IF=IOERREX. 
      5659.   136 -    80 CALL PABERR (LUNUSE)  
0     5660.   137-+ +SELF.  
      5661.   138 -    81 NVARRI(1)= 4  
      5662.   139 -       NVARRI(3)= 3  
0     5663.   140-+ +SELF, IF=MULTI.    
      5664.   141 -       IF (NCARDP.EQ.0)       GO TO 82   
      5665.   142 -       JPROPD = 3    
      5666.   143 -       RETURN    
      5667.   144 -     
      5668.   145 -    82 NAREOF= NAREOF + 1    
      5669.   146 -       IF (NAREOF.LT.3)       GO TO 9    
0     5670.   147-+ +SELF.  
      5671.   148 -       JPROPD = 4    
      5672.   149 -       RETURN    
      5673.   150 -     
      5674.   151.- +SEQ, DGARBINF,    T=PASS.   DIAGNOSTIC 
      5675.   152 -       END   
      5676.   153.- +SEQ, QCARDL.      ==================================================   

  218 PATCHY    ================================================== P=YTOCETA  D=          1 ============================

      5677.     0 + +PATCH, YTOCETA.    
0     5678.     1 + +KEEP, TOCETAB, P=YTOCETA, D=TOCETA, IF=MPDP*, MVAX*, MVMI*, MLNX*. 
      5679.     2 .     
      5680.     3 . C--               HANDLE 'TAB' ON DEC MACHINES  
      5681.     4 .     
      5682.     5 .       IF (JINHO.NE.9)          GO TO 29 
      5683.     6 .       IF (JTAKE.LE.NCH)        GO TO 25 
      5684.     7 .       IF (N.NE.0)              GO TO 37 
      5685.     8 .       NBL = 1   
      5686.     9 .       GO TO 28  
      5687.    10 .     
      5688.    11 .    25 NBL = 8 - JBYT (N,1,3)    
      5689.    12 .       IF (JMODDK.NE.0)         GO TO 28 
      5690.    13 .       IF      (N.LT.6)         GO TO 261    
      5691.    14 .       IF (N+NBL.LT.68)         GO TO 28 
      5692.    15 .       NBL = NBL + NX    
      5693.    16 .       GO TO 28  
      5694.    17 .     
      5695.    18 .   261 NX  = 2   
      5696.    19 .       IF (N.EQ.0)              GO TO 262    
      5697.    20 .       IF (IQ(LSTORE).NE.45)    GO TO 268    
      5698.    21 .       IF (IQ(LPUT-1).NE.45)    GO TO 268    
      5699.    22 .   262 JINHO = MWK(JTAKE)    
      5700.    23 .       JCETA = IQ(LTOCE+JINHO)   
      5701.    24 .       IF (JCETA.LT.27)         GO TO 268    
      5702.    25 .       IF (JCETA.GE.37)         GO TO 268    
      5703.    26 .       NX = 3    
      5704.    27 .   268 NBL = NBL - NX    
      5705.    28 .       N   =   N + NX    
      5706.    29 .       IF (NBL.EQ.0)            GO TO 22 
      5707.    30 .    28 CALL VFILL (IQ(LPUT),NBL,45)  
      5708.    31 .       LPUT = LPUT + NBL 
      5709.    32 .       N    = N    + NBL 
      5710.    33 .       GO TO 22  
      5711.    34 .    29 CONTINUE  
0     5712.    35 + +KEEP, TOSETAB,  P=YTOCETA, D=TOSETU, IF=MPDP*, MVAX*, MVMI*, MLNX* 
      5713.    36 .       IQ(LXREF+201) = 1201  
0     5714.    37 + +KEEP, TOCETGO,    P=YTOCETA, D=TOSETU, IF=CETA2TO. 
      5715.    38 .       IOSPEC = MOPTIO(1)    
0     5716.    39 + +KEEP, TOCETEND,   P=YTOCETA, D=YTOCEX, IF=CETA2TO. 
      5717.    40 .       IOSPEC = MOPTIO(1)    

  219 PATCHY    ================================================== P=YTOCETA  D=TOCETA    1 ============================

      5718.     0 + +DECK, TOCETA.  
      5719.     1.- +SEQ, QCARD1.   
      5720.     2 -       SUBROUTINE TOCETA (KARD)  
      5721.     3 -     
      5722.     4 - C-    PUT 1 CARD INTO THE CETA BUFFER, WRITE TO TAPE    
      5723.     5 -     
1 219                                                              P=YTOCETA  D=TOCETA    2                     PAGE  68

      5724.     6.- +CDE, QUNIT.    
      5725.     7.- +CDE, ARRCOM, COMCET.   
      5726.     8.- +CDE, Q, PXAD.  
      5727.     9.- +CDE, CETAEQU, CETAEQ2. 
      5728.    10 - C--------------    END CDE                             --------------   
      5729.    11 -       DIMENSION    KARD(80) 
      5730.    12 -       EQUIVALENCE (NCH,NCHKD)   
      5731.    13 -       EQUIVALENCE (LUNEW,NVNEW(1))  
      5732.    14 -       EQUIVALENCE (JMODDK,NVUTY(16))    
      5733.    15 -     
      5734.    16.- +SEQ, Q$JBIT.   
      5735.    17 -     
      5736.    18 -     
      5737.    19 - C--   ACTION REQUEST THRU NCHKD=NCH 
      5738.    20 -     
      5739.    21 - C-                +VE  STORE NEW CARD OF NCH CHAR.  
      5740.    22 - C-                  0  CLOSE CURRENT CETA RECORD    
      5741.    23 - C-                 -2  WRITE ZERO-RECORD TO END SECTION 
      5742.    24 - C-                 -3  WRITE ZERO-RECORD + EOF TO END FILE  
      5743.    25 - C-                 -4  INITIALIZE  TOCETA   
      5744.    26 -     
      5745.    27 -       IF   (NCH)   71,40,11 
      5746.    28 -    11 CONTINUE  
      5747.    29 -     
      5748.    30.- +SEQ, QEJECT.   
      5749.    31 -     
      5750.    32 - C----------------  TRANSLATE 1 CARD   TO   CETA  ------------------ 
      5751.    33 -     
0     5752.    34-+ +SELF, TOCETUPK.    
      5753.    35 -       CALL UPKCH (KARD(1),  MWK(1),NCH,IPAKKD(1))   
0     5754.    36-+ +SELF.  
      5755.    37 -    21 NX    = 0 
      5756.    38 -       N     = 0 
      5757.    39 -       JTAKE = 1 
      5758.    40 -       LPUT  = LSTORE    
      5759.    41 -     
      5760.    42 - C----              DO NEXT CHARACTER    
      5761.    43 -     
      5762.    44 -    22 IF (JTAKE.GT.NCH)      GO TO 37   
      5763.    45 -       JTAKE = JTAKE + 1 
      5764.    46 -       JINHO = MWK(JTAKE-1)  
      5765.    47 -       JCETA = IQ(LTOCE+JINHO)   
      5766.    48 -       JCETU = IQ(LXREF+JCETA)   
      5767.    49 -       IF (JCETU.EQ.0)        GO TO 31   
      5768.    50 -       IF (JCETU.GE.256)      GO TO 24   
      5769.    51 -       IQ(LPUT) = JCETU  
      5770.    52 -       LPUT = LPUT + 1   
      5771.    53 -       N    = N    + 1   
      5772.    54 -       GO TO 22  
      5773.    55 -     
      5774.    56 -    24 IF (JCETA.EQ.62)       GO TO 33   
      5775.    57.- +SEQ, TOCETAB, T=PASS.  
      5776.    58 -     
      5777.    59 - C--                INTERNAL C/CODE  ->  CETA  UP UP X   
      5778.    60 -     
      5779.    61 -    30 JCETU = JCETU - 1000  
      5780.    62 -       IF (JCETU.LE.0)        GO TO 31   
      5781.    63 -       IQ(LPUT)   = 62   
      5782.    64 -       IQ(LPUT+1) = 62   
      5783.    65 -       IQ(LPUT+2) = JCETU    
      5784.    66 -       LPUT = LPUT + 3   
      5785.    67 -       N    = N    + 1   
      5786.    68 -       GO TO 22  
      5787.    69 -     
      5788.    70 -    31 JCETU = 57    
      5789.    71 -       GO TO 35  
      5790.    72 -     
      5791.    73 - C--                INTERNAL  UP UP X  ->  CETA C/CODE   
      5792.    74 -     
      5793.    75 -    33 JCETU = 62    
      5794.    76 -       IF (MWK(JTAKE)  .NE.JINHO)  GO TO 35  
      5795.    77 -       IF (JTAKE  .EQ. NCH)        GO TO 35  
      5796.    78 -       JINHO = MWK(JTAKE+1)  
      5797.    79 -       JCETA = IQ(LTOCE+JINHO)   
      5798.    80 -       JCETA = IQ(LXREF+JCETA+512)   
      5799.    81 -       IF (JCETA.EQ.0)             GO TO 35  
      5800.    82 -       JTAKE = JTAKE + 2 
      5801.    83 -       JCETU = IQ(LXREF+JCETA)   
      5802.    84 -       IF (JCETU.GE.256)           GO TO 30  
      5803.    85 -    35 IQ(LPUT) = JCETU  
      5804.    86 -       LPUT = LPUT + 1   
      5805.    87 -       N    = N    + 1   
      5806.    88 -       GO TO 22  
      5807.    89 -     
      5808.    90 - C----              CARD COMPLETE    
      5809.    91 -     
      5810.    92 -    37 LPUT = LPUT - 1   
      5811.    93 -       IF (LPUT.EQ.LSTORE)    GO TO 39   
      5812.    94 -       IF (IQ(LPUT).EQ.45)    GO TO 37   
      5813.    95 -     
      5814.    96 -    39 LPUT = LPUT + 1   
      5815.    97 -       IF (LPUT.GE.LEND)      GO TO 40   
      5816.    98 -       IQ(LPUT) = 0  
      5817.    99 -       LSTORE   = LPUT + 1   
      5818.   100 -       RETURN    
      5819.   101 -     
      5820.   102 - C---------         CLOSE COMPLETED CETA RECORD  
      5821.   103 -     
      5822.   104 -    40 NREST = LEND+1 - LSTORE   
      5823.   105 -       CALL VZERO (IQ(LSTORE),NREST) 
0     5824.   106-+ +SELF, TOCETPK. 
      5825.   107 -       CALL PKCHAR (IQ(LSTART),IQ(LCETA),  NCHCEU,IPAKCE(1)) 
1 219                                                              P=YTOCETA  D=TOCETA    3                     PAGE  69

      5826.   108-+ +SELF.  
      5827.   109 -     
      5828.   110 - C----              WRITE CETA RECORD    
      5829.   111 -     
      5830.   112 -    41 NRNEW = NRNEW + 1 
      5831.   113 -       NWOUT = NWCEU 
      5832.   114 -     
0     5833.   115-+ +SELF, CETAWSEL, IF=CETA2TO.    
      5834.   116 -       IF (MOPTIO(1).EQ.0)    GO TO 56   
0     5835.   117-+ +SELF, CETAWRX,  IF=CETA2TO.    
      5836.   118 -       WRITE (LUNEW,REC=NRNEW,IOSTAT=ISTAT) (IQ(J+LCETA-1),J=1,NWOUT)    
      5837.   119 -       IF (ISTAT.EQ.0)        GO TO 58   
      5838.   120 -       WRITE (IQPRNT,9843) ISTAT,ISTAT   
      5839.   121 -  9843 FORMAT (1X/' ****** Stop for write error on d/a CETA file,'   
      5840.   122 -      F /' ****** IOSTAT=',Z16,' hex = ',I12,' decimal') 
      5841.   123 -       CALL PABEND   
0     5842.   124-+ +SELF.  
      5843.   125 -    56 CONTINUE  
0     5844.   126-+ +SELF, CETAWRIT.    
      5845.   127 -       CALL XOUTBF (LUNEW,IQ(LCETA),NWOUT)   
0     5846.   128-+ +SELF.  
      5847.   129 -     
      5848.   130 -    58 LSTORE = LSTART   
      5849.   131 -       IF (NCH.GT.0)          GO TO 21   
      5850.   132 -       RETURN    
      5851.   133 -     
      5852.   134 - C------------      SPECIAL MODE ENTRIES      ------------------------   
      5853.   135 - C-                 NCH = -2  WRITE ZERO-RECORD TO END SECTION   
      5854.   136 - C-                       -3  WRITE Z/R + EOF TO END FILE    
      5855.   137 - C-                       -4  INITIALISE  TOCETA 
      5856.   138 -     
      5857.   139 -    71 LSTART = LCETA + 11   
      5858.   140 -       LEND   = LCETA + 10 + NCHCEU  
      5859.   141 -       LSTORE = LSTART   
      5860.   142 -       IF (NCH.LT.-3)         RETURN 
      5861.   143 -     
      5862.   144 -       CALL VZERO (IQ(LCETA),NWCEU)  
      5863.   145 -       GO TO 41  
      5864.   146 -     
      5865.   147 -       END   
      5866.   148.- +SEQ, QCARDL.      ==================================================   

  220 PATCHY    ================================================== P=YFRCETA  D=          1 ============================

      5867.     0 + +PATCH, YFRCETA.    
0     5868.     1 + +KEEP, CETUPK,     P=YFRCETA, D=CETUP, IF=-F77. 
      5869.     2 .       CALL UBLOW (  
      5870.     3 .      +63HABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-*/()$= ,.#'!:"_]&@?[><\^;    
      5871.     4 .      +,                      IQ(LORGH+1),63)    
0     5872.     5 + +KEEP, FRCETGO,    P=YFRCETA, D=FRSETU, IF=CETA2FR. 
      5873.     6 .       IOSPEC = MOPTIO(1)    
0     5874.     7 + +KEEP, FRCETGO,    P=YFRCETA, D=YFRCEX, IF=CETA2FR. 
      5875.     8 .       IOSPEC = MOPTIO(1)    
0     5876.     9 + +KEEP, FRCETEND,   P=YFRCETA, D=YFRCEX, IF=CETA2FR. 
      5877.    10 .       IOSPEC = MOPTIO(1)    

  221 PATCHY    ================================================== P=YFRCETA  D=FRCETA    1 ============================

      5878.     0 + +DECK, FRCETA.  
      5879.     1.- +SEQ, QCARD1.   
      5880.     2 -       SUBROUTINE FRCETA (KARD)  
      5881.     3 -     
      5882.     4 - C-    READ 1 CARD FROM CETA BUFFER, READ FROM TAPE  
      5883.     5 -     
      5884.     6.- +CDE, QBCD, QUNIT.  
      5885.     7.- +CDE, ARRCOM, COMCET, KDPKCM.   
      5886.     8.- +CDE, Q, PXAD.  
      5887.     9.- +CDE, CETAEQU, CETAEQ2. 
      5888.    10 - C--------------    END CDE                             --------------   
      5889.    11 -       EQUIVALENCE (LUNOLD,NVOLD(1)) 
      5890.    12 -       EQUIVALENCE (NCH,NCHKD)   
      5891.    13 -       DIMENSION    KARD(80) 
      5892.    14.- +SEQ, FORXRDIN,    T=PASS.  
      5893.    15 -     
      5894.    16 -       DATA    NERR /0/,   NEOF /0/  
      5895.    17 -     
      5896.    18 - C--   ACTION REQUEST THRU  NCHKD=NCH    
      5897.    19 -     
      5898.    20 - C-              OTHER  DELIVER NEXT CARD    
      5899.    21 - C-                 -3  SKIP CURRENT CETA-SECTION    
      5900.    22 - C-                 -4  SKIP TO NEXT FILE MARK ON CETA TAPE  
      5901.    23 - C-                 -5  INITIALISE  FRCETA   
      5902.    24 - C-                     MEASURE RECORD SIZE IF U-OPTION  
      5903.    25 -     
      5904.    26 -     
      5905.    27 - C--   STATUS REPLY THRU  NCHKD  
      5906.    28 -     
      5907.    29 - C-                +VE  LENGTH OF CARD DELIVERED 
      5908.    30 - C-                 -2  END OF CETA-SECTION  
      5909.    31 -     
      5910.    32 -     
      5911.    33 -       IF (NCH.LT.-2)         GO TO 71   
      5912.    34 -     
      5913.    35.- +SEQ, QEJECT, N=45. 
1 221                                                              P=YFRCETA  D=FRCETA    2                     PAGE  70

      5914.    36 -     
      5915.    37 - C----------------  TRANSLATE 1 CARD  FROM  CETA  ------------------ 
      5916.    38 -     
      5917.    39 -       IF (IQ(LTAKE).EQ.0)    GO TO 51   
      5918.    40 -    21 NCH = 0   
      5919.    41 -     
      5920.    42 - C----              DO NEXT CHARACTER    
      5921.    43 -     
      5922.    44 -    22 LTAKE = LTAKE + 1 
      5923.    45 -       JCETA = IQ(LTAKE-1)   
      5924.    46 -       IF (JCETA.EQ.0)        GO TO 37   
      5925.    47 -       JCETU = IQ(LXREF+JCETA)   
      5926.    48 -       IF (JCETU.GE.256)      GO TO 24   
      5927.    49 -       NCH      = NCH + 1    
      5928.    50 -       MWK(NCH) = IQ(LORGH+JCETU)    
      5929.    51 -       GO TO 22  
      5930.    52 -     
      5931.    53 -    24 IF (JCETA.EQ.62)       GO TO 33   
      5932.    54 -     
      5933.    55 - C--                CETA C/CODE  ->  INTERNAL  UP UP X   
      5934.    56 -     
      5935.    57 -    30 JCETU = MAX (JCETU-1000,0)    
      5936.    58 -       IF (JCETU.EQ.0)        GO TO 35   
      5937.    59 -       MWK(NCH+1) = IQ(LORGH+62) 
      5938.    60 -       MWK(NCH+2) = IQ(LORGH+62) 
      5939.    61 -       MWK(NCH+3) = IQ(LORGH+JCETU)  
      5940.    62 -       NCH = NCH + 3 
      5941.    63 -       GO TO 22  
      5942.    64 -     
      5943.    65 - C--                CETA  UP UP X  ->  INTERNAL C/CODE   
      5944.    66 -     
      5945.    67 -    33 JCETU = 62    
      5946.    68 -       IF (IQ(LTAKE)  .NE.JCETA)  GO TO 35   
      5947.    69 -       JCETA = IQ(LTAKE+1)   
      5948.    70 -       JCETA = IQ(LXREF+JCETA+512)   
      5949.    71 -       IF (JCETA.EQ.0)            GO TO 35   
      5950.    72 -       LTAKE = LTAKE + 2 
      5951.    73 -       JCETU = IQ(LXREF+JCETA)   
      5952.    74 -       IF (JCETU.GE.256)          GO TO 30   
      5953.    75 -    35 NCH      = NCH + 1    
      5954.    76 -       MWK(NCH) = IQ(LORGH+JCETU)    
      5955.    77 -       GO TO 22  
      5956.    78 -     
      5957.    79 - C----              CARD COMPLETE    
      5958.    80 -     
      5959.    81 -    37 NCARDP = NCARDP + 1   
      5960.    82 -       NWKD   = 1    
      5961.    83 -       IF (NCH.LT.KDNCHW)     GO TO 39   
      5962.    84 -       IF (NCH.GE.150)        GO TO 62   
      5963.    85 -       NWKD   = KDNWT    
      5964.    86.- +SEQ, FRCETA3.  
      5965.    87 -       NWKD     = NWKD + 1   
      5966.    88 -       NCH      = NCH  + 1   
      5967.    89 -       MWK(NCH) = IQBLAN 
      5968.    90 -     
      5969.    91 -    39 CALL UBUNCH (MWK(1),KARD(1),NCH)  
      5970.    92 -       IF (NWKD.EQ.KDNWT)     RETURN 
      5971.    93 -       CALL SBYT (KDMARK,KARD(NWKD),KDPOST,KDBITS)   
      5972.    94 -       RETURN    
      5973.    95 -     
      5974.    96 -     
      5975.    97 - C------------      READING NEXT CETA RECORD  ------------------------   
      5976.    98 -     
      5977.    99 - C--                READ ERROR   
      5978.   100 -     
      5979.   101 -    42 NROLD = NROLD + 1 
      5980.   102 -       NERR  = NERR  + 1 
      5981.   103 -       WRITE (IQPRNT,9042) NROLD 
      5982.   104 -       IF (NERR.LT.7)         GO TO 51   
      5983.   105 -       GO TO 69  
      5984.   106 -     
      5985.   107 - C--                EOF  
      5986.   108 -     
      5987.   109 -    44 IF (NCH.EQ.-4)         GO TO 45   
      5988.   110 -       NEOF = 7  
      5989.   111 -       WRITE (IQPRNT,9044)   
      5990.   112 -    45 IQ(LTAKE) = 0 
      5991.   113 -       NCH = -2  
      5992.   114 -       RETURN    
      5993.   115 -     
      5994.   116 -    46 IF(NEOF.EQ.-1)         GO TO 59   
      5995.   117 -       GO TO 45  
      5996.   118 -     
      5997.   119 - C--                SPECIAL READING MODES    
      5998.   120 -     
      5999.   121 -    47 IF   (NCH+4)           75,51,48   
      6000.   122 -    48 IF (IQ(LREAD).EQ.0)    GO TO 45   
      6001.   123 -     
      6002.   124 - C----              READ NEXT CETA RECORD    
      6003.   125 -     
      6004.   126 -    51 IF (NEOF.NE.0)         GO TO 46   
      6005.   127 -     
      6006.   128 -       LREAD  = LCETA + 3612 - NWCEU 
      6007.   129 -       NWCEIN = NWCEU    
      6008.   130 -       JREC   = NROLD + 1    
      6009.   131 -     
0     6010.   132-+ +SELF, CETARSEL, IF=CETA2FR.    
      6011.   133 -       IF (MOPTIO(1).EQ.0)    GO TO 56   
0     6012.   134-+ +SELF, CETARDX,  IF=CETA2FR.    
      6013.   135 -       READ (LUNOLD,REC=JREC,IOSTAT=ISTAT) (IQ(J+LREAD-1),J=1,NWCEIN)    
      6014.   136 -       IF (ISTAT.EQ.0)        GO TO 58   
      6015.   137 -       WRITE (IQPRNT,9054) ISTAT,ISTAT   
      6016.   138 -  9054 FORMAT (1X/' ****** Stop for read error on d/a CETA file,'    
      6017.   139 -      F /' ****** IOSTAT=',Z16,' hex = ',I12,' decimal') 
      6018.   140 -       CALL PABEND   
1 221                                                              P=YFRCETA  D=FRCETA    3                     PAGE  71

      6019.   141-+ +SELF.  
      6020.   142 -    56 CONTINUE  
0     6021.   143-+ +SELF, CETAREAD.    
      6022.   144 -       CALL XINBF (LUNOLD,IQ(LREAD),NWCEIN)  
      6023.   145 -       IF   (NWCEIN.EQ.0)          GO TO 44  
      6024.   146 -       IF   (NWCEIN.LT.0)          GO TO 42  
0     6025.   147-+ +SELF.  
      6026.   148 -     
      6027.   149 -    58 NROLD = NROLD + 1 
      6028.   150 -       NERR  = 0 
      6029.   151 -       IF (NCH.LT.-2)         GO TO 47   
      6030.   152 -     
      6031.   153 - C--                UNPACK CETA RECORD   
      6032.   154 -     
      6033.   155 -    59 IF (NWCEIN.NE.NWCEU)   GO TO 61   
      6034.   156 -       LTAKE = LCETA 
      6035.   157 -       NEOF  = 0 
0     6036.   158-+ +SELF, FRCETUPK.    
      6037.   159 -       CALL UPKCH  (IQ(LREAD),  IQ(LTAKE),NCHCEU,IPAKCE(1))  
0     6038.   160-+ +SELF.  
      6039.   161 -       IQ(LTAKE+NCHCEU)   = 0    
      6040.   162 -       IQ(LTAKE+NCHCEU+1) = 0    
      6041.   163 -       IF (IQ(LTAKE).NE.0)    GO TO 21   
      6042.   164 -       NCH = -2  
      6043.   165 -       RETURN    
      6044.   166 -     
      6045.   167 - C----              CETA FORMAT TROUBLE  
      6046.   168 -     
      6047.   169 -    61 WRITE (IQPRNT,9061) NWCEIN,NWCEU  
      6048.   170 -  9061 FORMAT (1X/' *** CETA RECORD WITH',I5,' SHOULD HAVE',I5,' WORDS') 
      6049.   171 -       GO TO 69  
      6050.   172 -     
      6051.   173 -    62 WRITE (IQPRNT,9062) NCH   
      6052.   174 -  9062 FORMAT (1X/' *** CETA LINE OF',I5,' CHARACTERS SEEN !')   
      6053.   175 -     
      6054.   176 -    69 WRITE (IQPRNT,9069)   
      6055.   177 -  9069 FORMAT (1X/' *** PROBABLY NOT A CETA TAPE.')  
      6056.   178 -       CALL PABEND   
      6057.   179 -     
      6058.   180 - C------------      SPECIAL MODE ENTRIES      ------------------------   
      6059.   181 - C-                 NCH = -3  SKIP CURRENT CETA-SECTION  
      6060.   182 - C-                       -4  SKIP TO NEXT FILE MARK ON CETA TAPE    
      6061.   183 - C-                       -5  INITIALISE  FRCETA 
      6062.   184 -     
      6063.   185 -    71 LTAKE = LCETA 
      6064.   186 -       IQ(LTAKE) = 0 
      6065.   187 -       IF (NCH.GE.-4)         GO TO 51   
      6066.   188 -     
0     6067.   189-+ +SELF, IF=CETAFMTU. 
      6068.   190 - C--                READ TO MEASURE LENGTH OF CETA RECORD    
      6069.   191 -     
      6070.   192 -       IF (MOPTIO(21).NE.0)   GO TO 51   
      6071.   193 -       GO TO 99  
      6072.   194 -    75 NEOF = -1 
0     6073.   195-+ +SELF, IF=-CETAFMTU.    
      6074.   196 -    75 CONTINUE  
0     6075.   197-+ +SELF.  
      6076.   198 -    99 RETURN    
      6077.   199 -     
      6078.   200 -  9042 FORMAT (1X/1X,20(1H*),'   READ ERROR WITH CETA-RECORD',I6,    
      6079.   201 -      F', RECORD SKIPPED.  VERY DANGEROUS  *******'/1X)  
      6080.   202 -  9044 FORMAT (1X/1X,20(1H*),'   UNEXPECTED EOF.'/1X)    
      6081.   203 -       END   
      6082.   204.- +SEQ, QCARDL.      ==================================================   

  222 PATCHY    ================================================== P=AUXINI   D=          1 ============================

      6083.     0 + +PATCH, AUXINI. 

  223 PATCHY    ================================================== P=AUXINI   D=AUXINI    1 ============================

      6084.     0 + +DECK,AUXINI.   
      6085.     1.- +SEQ, QCARD1.   
      6086.     2 -       SUBROUTINE AUXINI 
      6087.     3 -     
      6088.     4 - C-    INITIALISE FOR PATCHY AUXILIARIES 
      6089.     5 -     
      6090.     6.- +CDE, MQCM, QBCD, QMACH, QUNIT, QHEADP. 
      6091.     7.- +CDE, IOFCOM, LUNSLN, MODTT.    
      6092.     8.- +CDE, Q, PXAD.  
      6093.     9.- +SEQ, SPACEAUX. 
      6094.    10 - C--------------    END CDE                             -----------------  ------
      6095.    11 -       EQUIVALENCE (LSVARE,LADRV(9)) 
      6096.    12 - C     DIMENSION    MMTITL(1)                                             A8M    
      6097.    13 -       DIMENSION    MMTITL(2)                                            -A8M    
      6098.    14 -       DIMENSION    MMSAVE(5)    
      6099.    15 -     
      6100.    16.- +SEQ, AUXINI1,     T=PASS.  
      6101.    17 -     
      6102.    18.- +SEQ, Q$JBIT.   
      6103.    19 -     
      6104.    20.- +SEQ, AUXINIDA. 
      6105.    21 -     
      6106.    22 -       DATA  MMSAVE /4HSVAR, 6,0,2H**, 20/   
      6107.    23 -     
      6108.    24.- +SEQ, QEJECT.   
1 223                                                              P=AUXINI   D=AUXINI    2                     PAGE  72

      6109.    25 -     
      6110.    26 -     
      6111.    27.- +SEQ, AUXINI2,     T=PASS.  
      6112.    28 -       CALL MQINIT (LAST)    
      6113.    29 -       NQLINK = IQLOCF(NVOPER(1)) - 1    
      6114.    30 -       LQWORG = IQLOCF(ISPACE(1))    
      6115.    31.- +SEQ, AUXINI3,     T=PASS.  
      6116.    32 -       LQWORK = LQWORG   
      6117.    33 -       CALL VZERO  (LQ1,LQWORK)  
      6118.    34 -       CALL PLOAD    
      6119.    35 -     
      6120.    36 -       WRITE (IQPRNT,9000) IQDATE,IQTIME 
      6121.    37 -  9000 FORMAT                                       (1X/10H VERSION  ,   
      6122.    38.- +SEQ, QFTITLE, N=40.    
      6123.    39 -      F,12H.RJP, TODAY:,I8,I6/1X)    
      6124.    40 -     
      6125.    41 - C--                PRESET DATA INTO W-SPACE 
      6126.    42 -     
      6127.    43 -       IDEOF(1) = IQBLAN 
      6128.    44 -       IDEOF(2) = IQBLAN                                                 -A8M    
      6129.    45 -       IDEOF(3) = MMTITL(1)  
      6130.    46 -       IDEOF(4) = MMTITL(2)                                              -A8M    
      6131.    47 -       IDEOF(7) = MMTITL(1)  
      6132.    48 -       IDEOF(8) = MMTITL(2)                                              -A8M    
      6133.    49 -       IDEOF(9) = 3  
      6134.    50 -     
      6135.    51 - C--                PRESET OPTIONS   
      6136.    52 -     
      6137.    53 -       MOPTIO(31) = NOPTVL(4)    
      6138.    54 -       CALL UBLOW (NOPTVL(1),IQUEST(1),8)    
      6139.    55 -       DO 24  J=1,8  
      6140.    56 -       JV = IUCOMP (IQUEST(J),IQLETT(1),30)  
      6141.    57 -       IF (JV.EQ.0)           GO TO 24   
      6142.    58 -       CALL SBIT1 (MOPTIO(31),JV)    
      6143.    59 -    24 CONTINUE  
      6144.    60 -       IF (JBIT(MOPTIO(31),15)   .NE.0)  MOPTIO(31)=0                    -MSK    
      6145.    61 - C     IF ((MOPTIO(31).AND.16384).NE.0)  MOPTIO(31)=0                     MSKC   
      6146.    62 -       CALL SETOPT   
      6147.    63 -       LOGLVG = 4    
      6148.    64 -       CALL LOGLV (MOPTIO(31),0,0)   
      6149.    65 -       LOGLVG = LOGLEV   
      6150.    66 -       NMODTT = 0    
      6151.    67 -     
      6152.    68.- +SEQ, QEJECT.   
      6153.    69 -     
      6154.    70 - C------            INITIALISE  OLD/NEW  STREAMS 
      6155.    71 -     
      6156.    72 -       CALL UCOPY (IDEOF(1),IDOLDV(1),9) 
      6157.    73 -       CALL UCOPY (IDEOF(1),IDNEWV(1),9) 
      6158.    74 -       NVOLD(1)= LUNVL(1)    
      6159.    75 -       NVNEW(1)= LUNVN(1)    
      6160.    76 -       NRTOLD  = -1  
      6161.    77 -       NRTNEW  = -1  
      6162.    78 -       MAXEOF= 999   
      6163.    79 -       JLUN  = NSTRM 
      6164.    80 -     
      6165.    81 - C--                LIFT SAVE-AREA WITH DIRECTORY    
      6166.    82 -     
      6167.    83 -       MMSAVE(4) = (NSTRM+NSTRM) * MMSAVE(5) + 1 
      6168.    84 -       CALL LIFTBK (LSVARE,0,0,MMSAVE(1),0)  
      6169.    85 -       IQ(LSVARE+1) = MMSAVE(5)  
      6170.    86 -       LSV   = LSVARE + 2    
      6171.    87 -     
      6172.    88 - C--                LIFT NEXT BUFFFER    
      6173.    89 -     
      6174.    90 -    44 CALL CREBUF   
      6175.    91 -       IF (JLUN.EQ.0)         GO TO 51   
      6176.    92 -     
      6177.    93 -       NVOLD(1)= LUNVL(JLUN) 
      6178.    94 -       NVNEW(1)= LUNVN(JLUN) 
      6179.    95 -       JOLD  = JLUN  
      6180.    96 -       JNEW  = JLUN  
      6181.    97 -       LLAST = LBUF  
      6182.    98 -       LLASTN= LBUF  
      6183.    99 -       CALL UBLOW (7HOLD NEW,IQUEST(1),7)    
      6184.   100 -       IQUEST(4)= IQNUM2(JLUN+1) 
      6185.   101 -       IQUEST(8)= IQUEST(4)  
      6186.   102 -       CALL UBUNCH (IQUEST(1),NVOLD(6),4)    
      6187.   103 -       CALL UBUNCH (IQUEST(5),NVNEW(6),4)    
      6188.   104 -       IQ(LSVARE-JLUN)   = LSV   
      6189.   105 -       CALL UCOPY  (NVOLD(1),IQ(LSV),MMSAVE(5))  
      6190.   106 -       LSV = LSV + MMSAVE(5) 
      6191.   107 -       IQ(LSVARE-JLUN-3) = LSV   
      6192.   108 -       CALL UCOPY  (NVNEW(1),IQ(LSV),MMSAVE(5))  
      6193.   109 -       LSV = LSV + MMSAVE(5) 
      6194.   110 -       JLUN = JLUN - 1   
      6195.   111 -       GO TO 44  
      6196.   112 -     
      6197.   113 -    51 CONTINUE  
      6198.   114.- +SEQ, AUXINI4,     T=PASS.  
      6199.   115 -       RETURN    
      6200.   116 -       END   
      6201.   117.- +SEQ, QCARDL.      ==================================================   

  224 PATCHY    ================================================== P=POPIN    D=          1 ============================

      6202.     0 + +PATCH, POPIN.  

  225 PATCHY    ================================================== P=POPIN    D=POPIN     1 ============================

      6203.     0 + +DECK,POPIN.    
      6204.     1.- +SEQ, QCARD1.   
      6205.     2 -       SUBROUTINE POPIN  
      6206.     3 -     
      6207.     4 - C-    READ/SKIP NEXT RECORD OF COMPACT PAM  
      6208.     5 -     
      6209.     6.- +CDE, QUNIT, CONST. 
1 225                                                              P=POPIN    D=POPIN     2                     PAGE  73

      6210.     7.- +CDE, Q, PXA.   
      6211.     8 - C--------------    END CDE                             -----------------  ------
      6212.     9 -       EQUIVALENCE (LUNUSE,NVOLD(1)) 
      6213.    10.- +SEQ, FORXEOF,     T=PASS.  
0     6214.    11-+ +SELF, IF=MULTI.    
      6215.    12 -       DATA  NEOFR  /0/  
0     6216.    13-+ +SELF.  
      6217.    14 -     
      6218.    15 -     
      6219.    16 -       LINBIN = IQ(LBUF-3)   
      6220.    17 -       JPROC  = IQ(LBUF+1)   
      6221.    18 -     9 IF   (JPROC)           12,12,21   
      6222.    19 -     
      6223.    20 - C----              SKIP NEXT DECK, SKIP RECORD WITHOUT C/C  
      6224.    21 -     
      6225.    22 -    11 IF (NVARRI(3).NE.0)    RETURN 
      6226.    23 -    12 CONTINUE  
      6227.    24.- +SEQ, READSHRT, IF=-SKIPFULL.   
      6228.    25.- +SEQ, READFULL, IF= SKIPFULL.   
      6229.    26 -       GO TO 31  
      6230.    27 -     
      6231.    28 - C----              READ NEXT RECORD IN FULL 
      6232.    29 -     
      6233.    30 -    21 CONTINUE  
      6234.    31.- +SEQ, READFULL. 
      6235.    32 -       IQ(LBUF-2) = LINBIN   
      6236.    33 -     
      6237.    34.- +SEQ, QEJECT.   
      6238.    35 -     
      6239.    36 - C----              DIGEST CONTROL-INFORMATION   
      6240.    37 -     
      6241.    38 -    31 NROLD = NROLD + 1 
      6242.    39 - C     LLX   = LINBIN + 2                                                 A8M    
      6243.    40 -       LLX   = LINBIN + 3                                                -A8M    
      6244.    41 -       CALL UPKBYT (IQ(LLX),1,NVARRI(1),4,MPAK2(1))  
      6245.    42 -       CALL UPKBYT (IQ(LLX),2,NVARRI(7),3,MPAK9(1))  
      6246.    43 -       IF (NVARRI(7).EQ.0)  NVARRI(9)=NWSEN1 
      6247.    44 -       NVARRI(5) = IQ(LINBIN+1)  
      6248.    45 -       NVARRI(6) = IQ(LINBIN+2)                                          -A8M    
      6249.    46 -       CALL UCOPY (NVARRI(1),IQ(LBUF+5),9)   
      6250.    47 -       IQ(LBUF+15) = IQ(LBUF+15) + NVARRI(8) 
      6251.    48 -     
      6252.    49 -       IF (NROLD.LT.3)        GO TO 71   
      6253.    50 -       IF (NVARRI(1).EQ.0)    GO TO 34   
      6254.    51 -     
      6255.    52 - C--                NEW DECK/PATCH STARTING  
      6256.    53 -     
      6257.    54 -    33 JCARD  = 0    
      6258.    55 -       NDECKR = NDECKR + 1   
      6259.    56 -       IQ(LBUF+14) = IQ(LBUF+15) - NVARRI(8) 
      6260.    57 -    34 IF   (JPROC)           11,35,61   
      6261.    58 -    35 IF (IQ(LBUF+2).NE.0)   GO TO 68   
      6262.    59 -    39 RETURN    
      6263.    60 -     
      6264.    61 - C----              CONSTRUCT C/C-INDEX  
      6265.    62 -     
      6266.    63 -    61 IF (IQ(LBUF+2))        68,39,62   
      6267.    64 -    62 IF (NVARRI(7).EQ.0)    GO TO 68   
      6268.    65 -       N = 2*NVARRI(7) + 3   
      6269.    66 -       CALL UPKBYT (IQ(LLX),2,IQ(LCCIX+1),N,MPAK9(1))    
      6270.    67 -     
      6271.    68 -       LARX  = LCCIX + 3 
      6272.    69 -       LARXE = LCCIX + N + 1 
      6273.    70 -       IQ(LARXE)  = NVARRI(8)    
      6274.    71 -       IQ(LARXE+1)= -(LINBIN+IQ(LINBIN)+1)   
      6275.    72 -     
      6276.    73 -       DO 64   L=LARX,LARXE,2    
      6277.    74 -       IQ(L)   = - (IQ(L)+LINBIN)    
      6278.    75 -    64 IQ(L+1) =   IQ(L+1) + JCARD   
      6279.    76 -       IQ(LARX) = -IQ(LARX)  
      6280.    77 -       IF (IQ(LARX+1).NE.JCARD)  RETURN  
      6281.    78 -       LARX = LARX + 2   
      6282.    79 -       RETURN    
      6283.    80 -     
      6284.    81 - C----              CONSTRUCT C/C-INDEX FOR NO C/C   
      6285.    82 -     
      6286.    83 -    68 LARX  = LCCIX + 3 
      6287.    84 -       LARXE = LARX  + 1 
      6288.    85 -       IQ(LARX)   = NVARRI(9) + LINBIN   
      6289.    86 -       IQ(LARXE)  = NVARRI(8) + JCARD    
      6290.    87 -       IQ(LARXE+1)= -(LINBIN+IQ(LINBIN)+1)   
      6291.    88 -       RETURN    
      6292.    89 -     
      6293.    90.- +SEQ, QEJECT.   
      6294.    91 -     
      6295.    92 - C-------           START OF NEW FILE,  NROLD=1 FOR FILE-ID RECORD   
      6296.    93 -     
      6297.    94 -    71 IF (NROLD.NE.1)        GO TO 73   
      6298.    95 -       IF (NVARRI(1)+NVARRI(3).NE.6)  GO TO 79   
      6299.    96 -       IF (NVARRI(2).NE.0)            GO TO 79   
      6300.    97 -       NDECKR = 100 * ((NDECKR+99)/100)  
      6301.    98 -       IQ(LBUF+14) = 0   
      6302.    99 -       IQ(LBUF+15) = 0   
0     6303.   100-+ +SELF, IF=MULTI.    
      6304.   101 -       NEOFR  = 0    
0     6305.   102-+ +SELF.  
      6306.   103 -       JCARD  = 1    
      6307.   104 -       RETURN    
      6308.   105 -     
      6309.   106 - C--                NROLD=2 FOR  FILE TITLE RECORD   
      6310.   107 -     
      6311.   108 -    73 IF (NVARRI(1).EQ.3)    GO TO 34   
      6312.   109 -     
      6313.   110 - C--                BAD FORMAT   
1 225                                                              P=POPIN    D=POPIN     3                     PAGE  74

      6314.   111 -     
      6315.   112 -    79 WRITE (IQPRNT,9079) NVOLD(6)  
      6316.   113 -       GO TO 89  
      6317.   114 -     
      6318.   115 - C-------           MACHINE EOF SEEN 
      6319.   116 -     
0     6320.   117-+ +SELF, POPINER,     IF=IOERREX. 
      6321.   118 -    80 CALL PABERR (LUNUSE)  
0     6322.   119-+ +SELF.  
      6323.   120 -    81 NVARRI(1) = 4 
      6324.   121 -       NVARRI(3) = 3 
      6325.   122 -       IF (NROLD.NE.0)        GO TO 86   
0     6326.   123-+ +SELF, IF=MULTI.    
      6327.   124 -       NEOFR = NEOFR + 1 
      6328.   125 -       IF (NEOFR.LT.3)        GO TO 9    
      6329.   126 -       NEOFR = 0 
0     6330.   127-+ +SELF.  
      6331.   128 -       WRITE (IQPRNT,9082) NVOLD(6)  
      6332.   129 -       RETURN    
      6333.   130 -     
      6334.   131 - C--                UNEXPECTED EOF   
      6335.   132 -     
      6336.   133 -    86 WRITE (IQPRNT,9086) NVOLD(6)  
      6337.   134 -    89 CALL PABEND   
      6338.   135 -       RETURN    
      6339.   136 -     
      6340.   137 -  9079 FORMAT (1X/' ***  ',A6,' NOT COMPACT BINARY OR BADLY POSITIONED.')    
      6341.   138 - C9082 FORMAT (9H EOI ON  ,A5)                                           -A4 
      6342.   139 -  9082 FORMAT (9H EOI ON  ,A4)                                            A4 
      6343.   140 -  9086 FORMAT (1X/' ***  UNEXPECTED EOF READ ON ',A6)    
      6344.   141 -       END   
      6345.   142.- +SEQ, QCARDL.      ==================================================   

  226 PATCHY    ================================================== P=SERVAUX  D=          1 ============================

      6346.     0 + +PATCH, SERVAUX.    
0     6347.     1 + +KEEP, INCHCHIN,   P=SERVAUX, D=INCHCH. 
      6348.     2 .     
      6349.     3 . C--                READ CCH PARAMETER FROM SYSTEM INPUT 
      6350.     4 .       IF (NCHCH(1).NE.7)     GO TO 14   
      6351.     5 .       IF (MOPTIO(3).EQ.0)    RETURN 
      6352.     6 .       WRITE (IQPRNT,9011)   
      6353.     7 .       READ  (IQREAD,8011) M 
      6354.     8 .  8011 FORMAT (14A1) 
      6355.     9 .  9011 FORMAT (1X/20H READING CCH-STRING.)   

  227 PATCHY    ================================================== P=SERVAUX  D=AUXFIL    1 ============================

      6356.     0 + +DECK, AUXFIL,     T=JOIN.  
      6357.     1.- +SEQ, QCARD1.   
      6358.     2 -       SUBROUTINE AUXFIL (IOUSEP,LUNV,NAMEP) 
      6359.     3 -     
      6360.     4 - C-    EXQ IOFILE, FOLLOW UPDATE OF LUN-AREA + PRINT MESSAGE 
      6361.     5 -     
      6362.     6.- +CDE, QBCD, QUNIT.  
      6363.     7.- +CDE, IOFCOM.   
      6364.     8.- +CDE, Q.    
      6365.     9 - C--------------    END CDE                             -----------------  ------
      6366.    10 -       DIMENSION    IOUSEP(9), LUNV(9), NAMEP(9) 
      6367.    11 -       DIMENSION    LUNARE(9), MUNIT(2),  MVPRS(7), MVPR(11) 
      6368.    12 -       EQUIVALENCE (MVPRS(1),MVPR(1),IQUEST(11)), (JUNIT,IOMODE(3))  
      6369.    13 -       EQUIVALENCE (IDSTR,LUNARE(6)), (NEOF,LUNARE(7))   
      6370.    14 -      +,           (NRECT,LUNARE(8)), (NREC,LUNARE(9))   
      6371.    15 -       DATA  MUNIT  /4H RCR, 4H CAR/ 
      6372.    16 -     
      6373.    17 -     
      6374.    18 - C---- FILE DESCRIPTION VECTOR   
      6375.    19 - C-  
      6376.    20 - C-           LUNV (1)  FORTRAN LOGICAL UNIT USED IN READ/WRITE STATEMENT    
      6377.    21 - C-                (3)  LUN= OR FILE=  PARAMETER 
      6378.    22 - C-                (5)  IO-TYPE  
      6379.    23 - C-                (6)  STREAM-NAME FOR PRINTING 
      6380.    24 - C-                (7)  NUMBER OF FILES FINISHED READING 
      6381.    25 - C-                (8)  TOTAL NUMBER OF RECORDS READ ON BIG-FILE 
      6382.    26 - C-                     UP-DATED AT THE END OF EACH INDIVIDUAL FILE  
      6383.    27 - C-                     RESET TO ZERO ON REWIND  
      6384.    28 - C-                     = NEGATIVE: BIG-FILE NOT YET REFERENCED  
      6385.    29 - C-                (9) NUMBER OF RECORDS READ ON CURRENT FILE    
      6386.    30 -     
      6387.    31 -     
      6388.    32 -       IOUSE = IOUSEP(1) 
      6389.    33 -       NAME  = NAMEP(1)  
      6390.    34 -       CALL UCOPY  (LUNV(1),LUNARE(1),9) 
      6391.    35 -       CALL IOFILE (IOUSE,LUNARE(1)) 
      6392.    36 -       IF (IOMODE(9).EQ.0)    GO TO 31   
      6393.    37 -     
      6394.    38.- +SEQ, QEJECT.   
      6395.    39 -     
      6396.    40 - C-------           INITIAL REWIND   
      6397.    41 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      6398.    42 -     
      6399.    43 - C--              PERMANENTLY RECORD 'CARDS', 'OUTPUT', 'CETA', STREAM-ID    
      6400.    44 -     
      6401.    45 -       CALL SBIT (IOMODE(3),LUNARE(5),3) 
      6402.    46 -       CALL SBIT (IOMODE(7),LUNARE(5),7) 
      6403.    47 -       CALL SBIT (IOMODE(8),LUNARE(5),8) 
      6404.    48 -       IF (NAME.EQ.0)         GO TO 24   
0     6405.    49-+ +SELF, IF=A5M.  
      6406.    50 -       CALL UBLOW (NAME,IQUEST,5)    
      6407.    51 -       IF (IQUEST(5).NE.IQLETT(19))  IQUEST(5) = IQBLAN  
      6408.    52 -       CALL UBUNCH (IQUEST,NAME,5)   
1 227                                                              P=SERVAUX  D=AUXFIL    2                     PAGE  75

      6409.    53-+ +SELF.  
      6410.    54 -       IDSTR=NAME    
      6411.    55 -     
      6412.    56 -    24 MVPR(7) = IDSTR   
      6413.    57 -       WRITE (IQPRNT,9024) MVPRS 
      6414.    58 -       GO TO 46  
      6415.    59 -     
      6416.    60 - C-------           INTERMEDIATE FILE OR FINAL REWIND    
      6417.    61 -     
      6418.    62 -    31 MVPR(7) = IDSTR   
      6419.    63 -       IF (NREC.NE.0)         GO TO 33   
      6420.    64 -       WRITE (IQPRNT,9024) MVPRS 
      6421.    65 -       GO TO 45  
      6422.    66 -     
      6423.    67 -    33 NRECT   = NRECT + NREC    
      6424.    68 -       NEOF    = NEOF + 1    
      6425.    69 -       MVPR(8) = NEOF    
      6426.    70 -       MVPR(9) = NREC    
      6427.    71 -       MVPR(10)= MUNIT(JUNIT+1)  
      6428.    72 -       MVPR(11)= NRECT   
      6429.    73 -       WRITE (IQPRNT,9034) MVPR  
      6430.    74 -     
      6431.    75 -    45 IF (IOMODE(10).EQ.0)   GO TO 49   
      6432.    76 -       IF (IOMODE(11).NE.0)   GO TO 46   
      6433.    77 -       IF (IOMODE(6).NE.0)    GO TO 49   
      6434.    78 -       NRECT = -1    
      6435.    79 -       IF (IOMODE(4).NE.0)    GO TO 47   
      6436.    80 -    46 NRECT = 0 
      6437.    81 -    47 NEOF  = 0 
      6438.    82 -    49 NREC  = 0 
      6439.    83 -       CALL UCOPY (LUNARE(1),LUNV(1),9)  
      6440.    84 -       RETURN    
      6441.    85 -     
      6442.    86 - C9024 FORMAT (1X,6A1,2H ',A5,1H')                                       -A4 
      6443.    87 - C9034 FORMAT (1X,6A1,2H ',A5,14H'   AFTER FILE,I3,6H  WITH,I6,A4,3HDS,, -A4 
      6444.    88 - C    FI6,7H TOTAL.)                                                     -A4 
      6445.    89 -  9024 FORMAT (1X,6A1,2H ',A4,1H')                                        A4 
      6446.    90 -  9034 FORMAT (1X,6A1,2H ',A4,14H'   AFTER FILE,I3,6H  WITH,I6,A4,3HDS,,  A4 
      6447.    91 -      FI6,7H TOTAL.)                                                      A4 
      6448.    92 -       END   
      6449.    93.- +SEQ, QCARDL.      ==================================================   

  228 PATCHY    ================================================== P=SERVICE  D=          1 ============================

      6450.     0 + +PATCH, SERVICE.    
0     6451.     1 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP, IF=A4.  
      6452.     2 .       JVAL = JBYT (MV(JCH),25,8)    
0     6453.     3 + +KEEP, CCTOUP11,   P=SERVICE, D=CCTOUP, IF=A8.  
      6454.     4 .       JVAL = JBYT (MV(JCH),57,8)    
0     6455.     5 + +KEEP, IOFILX62,   P=SERVICE, D=IOFILX. 
      6456.     6 .       IF (IOMODE(4).EQ.0)    GO TO 67   
      6457.     7.. +SEQ, IOFILXDT. 
      6458.     8 .       IOMODE(6) = 0 
      6459.     9 .       IOTON     = 5 
      6460.    10 .       RETURN    
0     6461.    11 + +KEEP, KDNEXTFP,   P=SERVICE.   
      6462.    12 .  9001 FORMAT (4H y> )   
0     6463.    13 + +KEEP, KDNEXTFM,   P=SERVICE, D=KDNEXT. 
      6464.    14 . C8000 FORMAT (8A10)                                                      A10    
      6465.    15 . C8000 FORMAT (10A8)                                                      A8 
      6466.    16 . C8000 FORMAT (13A6,A2)                                                   A6 
      6467.    17 . C8000 FORMAT (16A5)                                                      A5 
      6468.    18 .  8000 FORMAT (20A4)                                                      A4 

  229 PATCHY    ================================================== P=SERVICE  D=CCTOUP    1 ============================

      6469.     0 + +DECK, CCTOUP,     IF=CVFORLOW. 
      6470.     1.- +SEQ, QCARD1.   
      6471.     2 -       SUBROUTINE CCTOUP (MV,NCHP)   
      6472.     3 -     
      6473.     4 - C-    CONVERT LOWER CASE TO UPPER FOR ACTIVE PART OF C/C    
      6474.     5 -     
      6475.     6.- +CDE, CCPARU.   
      6476.     7 - C--------------    END CDE                             --------------   
      6477.     8 -       DIMENSION    MV(99), NCHP(9)  
      6478.     9 -     
      6479.    10.- +CDE, CCTOUPDE, T=PASS. 
      6480.    11 -     
      6481.    12.- +SEQ, Q$ANDOR, Q$JBIT.  
      6482.    13 -     
      6483.    14 -     
      6484.    15 -       NCH  = NCHP(1)    
      6485.    16 -       JLOW = 0  
      6486.    17 -     
      6487.    18 -       DO 49  JCH=1,NCH  
      6488.    19 -     
      6489.    20.- +SEQ, CCTOUP11. 
      6490.    21.- +SEQ, CCTOUP12. 
      6491.    22 -     
      6492.    23 - C--                CONVERSION NEEDED    
      6493.    24 -     
      6494.    25 -    24 JLOW = JCH    
      6495.    26 -     
      6496.    27.- +SEQ, CCTOUP24. 
      6497.    28 -     
      6498.    29 -    49 CONTINUE  
      6499.    30 -       JCCLOW = MAX  (JCCLOW,JLOW)   
      6500.    31 -       RETURN    
      6501.    32 -       END   
      6502.    33.- +SEQ, QCARDL.      ==================================================   
1 230 PATCHY    ================================================== P=SERVICE  D=IOFILE    1 =================== PAGE  76

      6503.     0 + +DECK, IOFILE.  
      6504.     1.- +SEQ, QCARD1.   
      6505.     2 -       SUBROUTINE IOFILE (IFLAG,IVECT)   
      6506.     3 -     
      6507.     4 - C-    ATTACH FILE, INITIAL REWIND, FINAL REWIND, DETACH 
      6508.     5 -     
      6509.     6.- +CDE, QUNIT, ARRCOM, IOFCOM.    
      6510.     7.- +CDE, Q.    
      6511.     8 - C--------------    END CDE                             -----------------  ------
      6512.     9 -       DIMENSION    IFLAG(9), IVECT(9)   
      6513.    10 -       EQUIVALENCE (LUN,IOPARF(1)), (JTYP,IOPARF(5)) 
      6514.    11 -     
      6515.    12 - C     INTEGER      ACTION(8)                                             A6M    
      6516.    13 -       DOUBLE PRECISION ACTION(8)                                        -A6M    
      6517.    14 -       DIMENSION    IACTIO(16)                                           -A6M    
      6518.    15 -       EQUIVALENCE (IACTIO(1), ACTION(1))                                -A6M    
      6519.    16 -     
      6520.    17.- +SEQ, IOFILE1,     T=PASS.  
      6521.    18 -     
      6522.    19.- +SEQ, Q$JBIT, Q$JBYTET. 
      6523.    20 -     
      6524.    21.- +SEQ, IOFILE2.  
      6525.    22 -     
      6526.    23 - C------    CODE BITS IN  IOTALL, IOTOFF, IOTON, IOTYP   
      6527.    24 -     
      6528.    25 - C-    VAL   1  BIT 1  ATTACH    
      6529.    26 - C-          2      2  RESUME    
      6530.    27 - C-          4      3  CARDS 
      6531.    28 - C-          8      4  DETACH    
      6532.    29 - C-         16      5  EOF   
      6533.    30 - C-         32      6  HOLD  
      6534.    31 -     
      6535.    32 - C-         64      7  OUPUT FILE    
      6536.    33 - C-        128      8  CETA-FORMAT   
      6537.    34 - C-        256      9  INITIAL REWIND    
      6538.    35 - C-        512     10  FINAL REWIND  
      6539.    36 - C-       1024     11  INTERMEDIATE REWIND IN YEDIT  
      6540.    37.- +SEQ, QEJECT.   
      6541.    38 -     
      6542.    39 -     
      6543.    40 -       JTYPAR = IFLAG(1) 
      6544.    41 -       CALL UCOPY (IVECT(1),IOPARF(1),5) 
      6545.    42 -       J     = 8191 - IOTOFF 
      6546.    43 - C     MTYP  = (JTYP .OR. JTYPAR .OR. IOTON .OR. IOTALL) .AND. J          MSKC   
      6547.    44 -       CALL SBYTOR (JTYP,  IOTON,1,12)                                   -MSK    
      6548.    45 -       CALL SBYTOR (JTYPAR,IOTON,1,12)                                   -MSK    
      6549.    46 -       CALL SBYTOR (IOTALL,IOTON,1,12)                                   -MSK    
      6550.    47 -       MTYP = JBYTET (J,IOTON,1,12)                                      -MSK    
      6551.    48 -     
      6552.    49 -       CALL UPKBYT (MTYP,1,IOMODE(1),12,0)   
      6553.    50.- +SEQ, DGIOFILE,    T=PASS.   DIAGNOSTIC 
      6554.    51 -     
      6555.    52 -       IF (IOMODE(10).EQ.0)   GO TO 24   
      6556.    53 -       IOMODE(9) = 0 
      6557.    54 -       IF (IOMODE(6) .NE.0)  IOMODE(4)=0 
      6558.    55 -       IF (IOMODE(11).EQ.0)   GO TO 24   
      6559.    56 -       IOMODE(4) = 0 
      6560.    57 -       IOMODE(6) = 0 
      6561.    58 -     
      6562.    59 -    24 IOTON  = IOMODE(9)    
      6563.    60 -       IOTOFF = 7    
      6564.    61 -       IF (LUN.EQ.IQREAD)     GO TO 31   
      6565.    62 -       IF (IOMODE(9) .NE.0)  IOTOFF=IOMODE(2)    
      6566.    63 -       IF (IOMODE(10).NE.0)  IOTOFF=IOMODE(6)    
      6567.    64 -     
      6568.    65 - C- INPUT  IOTON  = IOMODE(9)    
      6569.    66 - C-        IOTOFF =  =0 REWIND / NE.0 NO REWIND  
      6570.    67 -     
      6571.    68 -       CALL IOFILX   
      6572.    69 -     
      6573.    70 - C- OUTPUT IOTON CHANGED TO :    
      6574.    71 - C-              2  IF EOF WRITTEN   
      6575.    72 - C-              4  IF ATTACH DONE   
      6576.    73 - C-              5  IF DETACH DONE   
      6577.    74 - C-       IOTOFF CHANGED TO :    
      6578.    75 - C-              1  IF REWIND NOT DONE   
      6579.    76 -     
      6580.    77 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      6581.    78 -     
      6582.    79 -    31 IF (IOMODE(9) .EQ.0)   GO TO 41   
      6583.    80 -       IVECT(1) = IOPARF(1)  
      6584.    81 -       IVECT(3) = 0  
      6585.    82 -       IF (IOMODE(7)-IOMODE(3).NE.-1)  GO TO 41  
      6586.    83 -       CALL VZERO (NCHKD,4)  
      6587.    84 -       LUNPAM = LUN  
      6588.    85 -       CALL KDNGO    
      6589.    86 -       IF (IOMODE(2) .NE.0)   GO TO 42   
      6590.    87 -       IF (LUN.EQ.IQREAD)     GO TO 42   
      6591.    88 -       CALL KDNREW   
      6592.    89 -     
      6593.    90 -    41 IF (IOTOFF.NE.0)       GO TO 42   
      6594.    91 -       IF (IOTON .EQ.2)  IOTON=6 
      6595.    92 -       IOTON = MAX  (IOTON,3)    
      6596.    93 -     
      6597.    94 -    42 CALL UBLOW (ACTION(IOTON+1),IQUEST(11),6) 
      6598.    95 -       IOTON = 0 
      6599.    96 -       IOTOFF= 0 
      6600.    97 -       IOSPEC= 0 
      6601.    98 -       RETURN    
      6602.    99 -       END   
      6603.   100.- +SEQ, QCARDL.      ==================================================   

  231 PATCHY    ================================================== P=SERVICE  D=IOFILX    1 ============================

      6604.     0 + +DECK, IOFILX,     P=SERVICE.   
      6605.     1.- +SEQ, QCARD1.   
      6606.     2 -       SUBROUTINE IOFILX 
      6607.     3 -     
1 231                                                              P=SERVICE  D=IOFILX    2                     PAGE  77

      6608.     4 - C-    EXECUTION FOR IOFILE, VERSION FOR STRAIGHT-FORWARD FORTRAN    
      6609.     5 -     
      6610.     6.- +SEQ, IOFILX1,     T=PASS.  
      6611.     7.- +CDE, IOFCOM.   
      6612.     8 -       COMMON IQUEST(30) 
      6613.     9 - C--------------    END CDE                             -----------------  ------
      6614.    10 -       EQUIVALENCE (LUN,IOPARF(1))   
0     6615.    11-+ +SELF, IOFILX4, IF=ATTACHOPT.   
      6616.    12 -       DATA  JEXPAM / 4HPAM  /   
      6617.    13 -       DATA  JEXCAR / 4HCAR  /   
0     6618.    14-+ +SELF.  
      6619.    15 -     
      6620.    16 - C------            START FILE, INITIAL REWIND   
      6621.    17 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      6622.    18 -     
      6623.    19 -       IF (IOMODE(9).EQ.0)    GO TO 51   
      6624.    20 -       IF (IOPARF(3).EQ.0)    GO TO 31   
0     6625.    21-+ +SELF, IOFILXEQ.    
      6626.    22 -       IOPARF(1) = IOPARF(3) 
0     6627.    23-+ +SELF, IOFILXAT, IF=ATTACHOPT.  
      6628.    24 -       IF (IOMODE(1).EQ.0)       GO TO 31    
      6629.    25 -       JEXTU = JEXCAR    
      6630.    26 -       IF (IOMODE(3).EQ.0)  JEXTU = JEXPAM   
      6631.    27 -       CALL FLKRAK (JEXTU)   
      6632.    28 -       CALL FLINK (LUN)  
      6633.    29 -       IOTON = 4 
0     6634.    30-+ +SELF.  
      6635.    31 -     
      6636.    32 -    31 IF (IOTOFF.NE.0)                  RETURN  
      6637.    33 -       IF (IOMODE(7)-IOMODE(3).EQ.-1)    RETURN  
0     6638.    34-+ +SELF, IOFILX32.    
      6639.    35 -       GO TO 92  
0     6640.    36-+ +SELF.  
      6641.    37 -     
      6642.    38 - C------            INTERMEDIATE FILE    
      6643.    39 -     
      6644.    40 -    51 IF (IOMODE(10).NE.0)           GO TO 61   
      6645.    41 -       IF (IOMODE(5)+IOMODE(7).EQ.2)  GO TO 71   
      6646.    42 -       RETURN    
      6647.    43 -     
      6648.    44.- +SEQ, QEJECT.   
      6649.    45 -     
      6650.    46 - C- 1 ATT, 2 RES, 3 CAR, 4 DET, 5 EOF, 6 HOLD, 7 OUT, 8 CE, 9 INI, 10 FIN    
      6651.    47 -     
      6652.    48 - C------            END FILE, FINAL REWIND   
      6653.    49 -     
      6654.    50 -    61 IF (IOMODE(7).NE.0)    GO TO 71   
      6655.    51 -     
      6656.    52 - C--                Terminate CETA input file    
      6657.    53 -     
      6658.    54 -       IF (IOMODE(8).EQ.0)    GO TO 65   
0     6659.    55-+ +SELF, IOFILX63.    
      6660.    56 -       IF (IOSPEC.EQ.0)       GO TO 65   
0     6661.    57-+ +SELF.  
      6662.    58 -       GO TO 98  
      6663.    59 -     
      6664.    60 - C--                DETACH input file    
      6665.    61 -     
      6666.    62 -    65 IF (IOMODE(6).NE.0)    GO TO 98   
      6667.    63.- +SEQ, IOFILX62. 
      6668.    64 -     
      6669.    65 - C--                REWIND input card file   
      6670.    66 -     
      6671.    67 -    67 IF (IOMODE(3).EQ.0)    GO TO 91   
      6672.    68 -       CALL KDNREW   
      6673.    69 -       RETURN    
      6674.    70 -     
      6675.    71 - C------            OUTPUT FILE  
      6676.    72 -     
      6677.    73 -    71 IF (IOMODE(8).EQ.0)    GO TO 76   
0     6678.    74-+ +SELF, IOFILXCE.    
      6679.    75 -       IF (IOSPEC.EQ.0)       GO TO 76   
      6680.    76 -       GO TO 98  
0     6681.    77-+ +SELF.  
      6682.    78 -     
      6683.    79 - C--                Write EOF to output file 
      6684.    80 -     
      6685.    81 -    76 CONTINUE  
0     6686.    82-+ +SELF, IOFILXEF.    
      6687.    83 -       IF (IOMODE(5).EQ.0)    GO TO 91   
      6688.    84 -       ENDFILE LUN   
      6689.    85 -       IOTON = 2 
0     6690.    86-+ +SELF.  
      6691.    87 -     
      6692.    88 - C----              REWIND of input/output file  
      6693.    89 -     
      6694.    90 -    91 IF (IOTOFF.NE.0)       RETURN 
      6695.    91 -    92 IF (IOMODE(8).EQ.0)    GO TO 96   
0     6696.    92-+ +SELF, IOFILXRV.    
      6697.    93 -       IF (IOSPEC.NE.0)       GO TO 98   
1 231                                                              P=SERVICE  D=IOFILX    3                     PAGE  78

      6698.    94-+ +SELF.  
      6699.    95 -    96 REWIND LUN    
      6700.    96 -       RETURN    
      6701.    97 -     
      6702.    98 -    98 IOTOFF = 1    
      6703.    99 -       RETURN    
      6704.   100 -       END   
      6705.   101.- +SEQ, QCARDL.      ==================================================   

  232 PATCHY    ================================================== P=SERVICE  D=QABEND    1 ============================

      6706.     0 + +DECK, QABEND,     T=JOIN, IF=-QDEBUG.  
      6707.     1.- +SEQ, QCARD1.   
      6708.     2 -       SUBROUTINE QABEND 
      6709.     3 -     
      6710.     4 - C-    QABEND FOR PRODUCTION, NO LOADING OF QPOSTM   
      6711.     5 -     
      6712.     6.- +CDE, QUNIT.    
      6713.     7 -     
      6714.     8 -       WRITE (IQPRNT,9000)   
      6715.     9 -       CALL PABEND   
      6716.    10.- +CDE, QNORETN.  
      6717.    11 -     
      6718.    12 -  9000 FORMAT (1X/' EXIT VIA QFATAL.')   
      6719.    13 -       END   
      6720.    14.- +SEQ, QCARDL.      ==================================================   

  233 PATCHY    ================================================== P=SERVICE  D=RQTELLD   1 ============================

      6721.     0 + +DECK, RQTELLD,    T=JOIN.  
      6722.     1.- +SEQ, QCARD1, R=RQTELL. 
      6723.     2 -       SUBROUTINE RQTELL (ID,NUM)    
      6724.     3 -     
      6725.     4.- +CDE, QUNIT.    
      6726.     5 -     
      6727.     6 -       WRITE (IQLOG,9000)  ID,NUM    
      6728.     7 -       CALL PABEND   
      6729.     8.- +SEQ, QNORETN.  
      6730.     9 -     
      6731.    10 - C9000 FORMAT ('0RQTELL REACHED WITH ',2O22)                              OCT    
      6732.    11 -  9000 FORMAT ('0RQTELL REACHED WITH ',2Z10)                              HEX    
      6733.    12 -       END   
      6734.    13 + +USE, QUTIL, D=RQTELL, RQUSER, QNEXTE, QNEXT, T=INH.    
      6735.    14 + +USE, QUTIL, D=RQTELL, T=INH.   
      6736.    15.- +SEQ, QCARDL.      ==================================================   

  234 PATCHY    ================================================== P=SERVICE  D=PABEND    1 ============================

      6737.     0 + +DECK, PABEND.  
      6738.     1.- +SEQ, QCARD1.   
      6739.     2 -       SUBROUTINE PABEND 
      6740.     3 -     
      6741.     4 - C-    ABNORMAL STOP ON FATAL ERROR  
      6742.     5 -     
      6743.     6.- +CDE, QUNIT.    
      6744.     7 -       LOGICAL      INTRAC   
      6745.     8 -     
      6746.     9 -     
      6747.    10 -       WRITE (IQPRNT,9000)   
      6748.    11 -       WRITE (IQPRNT,9001)   
      6749.    12 -     
      6750.    13 -       IF     (IQTYPE.NE.0)  THEN    
      6751.    14 -           IF (IQPRNT.NE.IQTYPE)  WRITE (IQTYPE,9001)    
      6752.    15 -         ENDIF   
      6753.    16 -     
      6754.    17.- +SEQ, PABENDX.  
      6755.    18 -       CALL ABEND    
      6756.    19 -     
      6757.    20 -  9000 FORMAT (1X,2(/1X,20(1H*)))    
      6758.    21 -  9001 FORMAT (1X,20(1H*),16H   ABNORMAL END.)   
      6759.    22 -       END   
      6760.    23.- +SEQ, QCARDL.      ==================================================   
 HOLD   'PAM '   AFTER FILE  1  WITH   285 RCRDS,   285 TOTAL.
 EOI ON  PAM 
 REWIND 'PAM '

 --------------
 LINES PER PAGE
 ACTIVE:    110

 THE OPTIONS  0,  1,  2,  3
 SELECT:     56  62  84 110
