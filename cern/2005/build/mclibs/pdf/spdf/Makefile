# Makefile generated by imake - do not edit!

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </home/wimmer/aleph64bit/cern/2005/src/mclibs/pdf/spdf/Imakefile>
# $XConsortium: Imake.tmpl,v 1.224.1.1 95/06/19 17:51:01 gildea Exp $
#

.SUFFIXES: .i

# $XConsortium: Imake.cf,v 1.19 95/01/05 19:24:32 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit linux-lp64.cf to change

# $XConsortium: lnxLib.rules,v 1.8 95/01/16 21:11:00 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.197.1.1 95/06/19 18:01:48 gildea Exp $

 _NULLCMD_ = @ echo -n

          PATHSEP = /
	        / = /
            SHELL = /bin/sh

              TOP = /home/wimmer/aleph64bit/cern/2005/build
      CURRENT_DIR = /mclibs/pdf/spdf

	QUOTE="
\ENDQUOTE="

ifeq "$(strip $(IMAKE))" ""
            IMAKE = imake
endif
ifeq "$(strip $(MAKEDEPEND))" ""
           DEPEND = makedepend
else
	   DEPEND = $(MAKEDEPEND)
endif
        MKDIRHIER = mkdirhier
        CONFIGSRC = $(CVSCOSRC)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
           IXXSRC = $(UNSUPPORTEDSRC)/programs/ixx
              IXX = ixx
         IXXFLAGS = -s BaseObject -m TypeObj -r RequestObj -p Xf
      IXXINCLUDES = -i '<X11/Fresco/enter-scope.h>'

          INCROOT = $(CVSCOSRC)/include
        USRLIBDIR = $(CVSCOSRC)/lib
         SHLIBDIR = $(CVSCOSRC)/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = $(CVSCOSRC)/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)5

                AR = ar clq

	    XARGS = xargs

  BOOTSTRAPCFLAGS =
               CC = gcc
               AS = as

        CCDEFINES =

               FC = gfortran -no-pie
              FPP = /lib/cpp
      FDEBUGFLAGS = -O
FORTRANSAVEOPTION =
   FORTRANOPTIONS = -fno-automatic -fno-second-underscore -fno-range-check -fPIC $(FORTRANSAVEOPTION)
           FCLINK = gfortran -no-pie
  FORTRANINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(PACKAGE_INCLUDES) $(TOP_INCLUDES)
   FORTRANDEFINES =
FORTRANALLDEFMDEPEND = $(FORTRANINCLUDES) $(FORTRANDEFINES) $(CERNDEFINES) $(EXTRA_DEFINES) $(DEFINES)

  FORTRANALLDEFINES = $(FORTRANALLDEFMDEPEND)

          FCFLAGS = $(FDEBUGFLAGS) $(FORTRANOPTIONS)

.SUFFIXES: .cxx

              CXX = g++
    CXXDEBUGFLAGS = -O1 -fomit-frame-pointer
 CXXEXTRA_DEFINES =
CXXEXTRA_INCLUDES =
  CXXIDL_INCLUDES = -I$(TOP)/include
   CXXSTD_DEFINES =
       CXXOPTIONS =
      CXXINCLUDES = $(INCLUDES) $(TOP_INCLUDES) $(CXXEXTRA_INCLUDES) $(CXXIDL_INCLUDES)
       CXXDEFINES = $(CXXINCLUDES) $(CXXSTD_DEFINES) $(THREADS_CXXDEFINES) $(CXXEXTRA_DEFINES)
         CXXFLAGS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(THREADS_CXXFLAGS) $(CXXDEFINES)

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = flex -l
           LEXLIB = -lfl
             YACC = bison -y
           CCYACC = bison -y
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = gmake
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
    FILEMANSUFFIX = 5x
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
            TOUCH = touch

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

           MFLAGS=$(filter-out --%,$(filter -%,$(MAKEFLAGS)))

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS =

         PICFLAGS = -B/usr/dll/jump/

      CXXPICFLAGS = -B/usr/dll/jump/

      PIFFLAGS = -B/usr/dll/jump/

    PROTO_DEFINES = -DFUNCPROTO=15 -DNARROWPROTO

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -s -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -s -m 4755

      PROJECTROOT = $(CVSCOSRC)

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O1 -fomit-frame-pointer
        CCOPTIONS = -fPIC

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(PACKAGE_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES) $(CCDEFINES) $(CERNDEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
      FCLDOPTIONS =  $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = gcc

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = linux-lp64.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =
    IMAKE_INCLUDES=

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -DLocalTop=$(LOCALTOP)  			-I$(IRULESRC) $(IMAKE_INCLUDES) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl 			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) 			 $(EXTRA_ICONFIGFILES)

archive/%.o : %.c archive/%.d
	$(RM) $@
	$(CC) -c $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES) $< -o $@

archive/%.d : %.c
	-@if [ ! -d archive ] ; then mkdir archive; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p archive/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

debug/%.o : %.c debug/%.d
	$(RM) $@
	$(CC) -c -g $(CCOPTIONS) $(ALLDEFINES) $< -o $@

debug/%.d : %.c
	-@if [ ! -d debug ] ; then mkdir debug; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p debug/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

shared/%.o : %.c shared/%.d
	$(RM) $@
	$(CC) -c $(CDEBUGFLAGS) $(PICFLAGS) $(CCOPTIONS) $(ALLDEFINES) $< -o $@

shared/%.d : %.c
	-@if [ ! -d shared ] ; then mkdir shared; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p shared/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

.SUFFIXES: .F

.F.o:
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

archive/%.o : %.F archive/%.d
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

archive/%.d : %.F
	-@if [ ! -d archive ] ; then mkdir archive; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p archive/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

debug/%.o : %.F debug/%.d
	$(RM) $@
	$(FC) -c -g $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

debug/%.d : %.F
	-@if [ ! -d debug ] ; then mkdir debug; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p debug/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

shared/%.o : %.F shared/%.d
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(PIFFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

shared/%.d : %.F
	-@if [ ! -d shared ] ; then mkdir shared; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p shared/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

ifeq ($(strip $(CERN)),)
CERN=/cern
endif

ifeq ($(strip $(CERN_LEVEL)),)
CERN_LEVEL=new
endif

ifeq ($(strip $(CERN_LIBDIR)),)
CERN_LIBDIR=$(CERN)$/$(CERN_LEVEL)$/lib
endif

ifeq ($(strip $(CERN_SHLIBDIR)),)
CERN_SHLIBDIR=$(CERN)$/$(CERN_LEVEL)$/shlib
endif

ifeq ($(strip $(CERN_BINDIR)),)
CERN_BINDIR=$(CERN)$/$(CERN_LEVEL)$/bin
endif

        CONFIGDIR = $(CVSCOSRC)$/config

	CERNDEFINES=-DCERNLIB_LINUX -DCERNLIB_UNIX -DCERNLIB_LNX -DCERNLIB_QMGLIBC -DCERNLIB_QMLXIA64 -DCERNLIB_GFORTRAN -DCERNLIB_GCC4 -DCERNLIB_VERBOSE
        PACKAGETOP=/mclibs/pdf
        PACKAGE_NAME=pdflib804
	LOCALTOP=

        PACKAGE_INCLUDES=-I$(TOP)$(PACKAGETOP) -I$(PROJECTROOT)$(LOCALTOP)$(PACKAGETOP) -I$(VPATH)

	VPATH=$(PROJECTROOT)$(LOCALTOP)$(CURRENT_DIR)

OBJS_C=$(SRCS_C:.c=.o)
OBJS_F=$(SRCS_F:.F=.o)
OBJS_CDF=$(SRCS_CDF:.cdf=.o)

OBJS=$(OBJS_C) $(OBJS_F) $(OBJS_CDF)

# -----------------------------------------------------------------------
# start of Imakefile : </home/wimmer/aleph64bit/cern/2005/src/mclibs/pdf/spdf/Imakefile>

SRCS_F=	 abfkw1.F abfkw2.F abfkw3.F acfgp1.F acfgp2.F afcplu.F \
	afgetfv.F afgin2.F afgint.F afpolin.F afratin.F alphas2.F \
	augetfv.F aurgam.F aurpi1.F aurpi2.F aurpi3.F aurpr.F \
	bbeta.F \
	bxf3.F bxglue.F bxqbar.F \
	ctq1opd.F ctq1opf.F ctq1pd.F \
	ctq1pf.F ctq2opd.F ctq2opf.F ctq2ops.F ctq2ppd.F ctq2ppf.F \
	ctq2pps.F ctq3pd.F ctq3pds.F ctq3pf.F \
        ctq4fn.F ctq4pnx.F ctq4ra1.F ctq4ra2.F ctq4ra4.F ctq4ra5.F \
        ctq4rd.F ctq4rhj.F ctq4rl.F ctq4rm.F ctq4rlq.F \
        ctq4rhq.F ctq4r_hq1.F ctq4rf3.F ctq4rf4.F \
        ctq5d.F ctq5f3.F ctq5f4.F ctq5hj.F ctq5hq.F ctq5hq1.F \
        ctq5l.F ctq5m.F ctq5m1.F ctq5pdf.F ctq5pnx.F ctq5lp.F ctq5mi.F\
	dbfint.F dflm1.F dflm2.F \
	dflm3.F dflm4.F dflm5.F dflm6.F dflm7.F dflm8.F dflm9.F \
	dgpho1.F dgpho2.F dgpho3.F dgpho4.F dopho1.F dopho2.F dpolin.F \
	faux5l.F faux5mi.F \
	fxaver.F fxg160.F fxg260.F fxg360.F fxghar.F fxgsof.F fxnlla.F \
	fxvhar.F fxvsof.F \
	gamfun.F gammado.F ghrdv.F ghrgl.F ghruv.F ghrxi.F ghrxs.F \
	gr94fv.F gr94fw.F gr94fws.F grv94di.F grv94ho.F grv94lo.F \
        grsf1.F grsf2.F grsgalo.F grsvh1.F grsvh2.F grsvl1.F grsvl2.F \
	grvfgp.F grvfqbp.F grvfv.F grvfvp.F grvfw.F grvfws.F \
	grvgah0.F grvgaho.F grvgalo.F grvgf.F grvgfs.F grvho.F grvlo.F \
	grvpiho.F grvpilo.F grv98_lo.F grv98_nlm.F grv98_nld.F \
	gs2xcor.F gs96ho.F gs96lo.F gsxcor.F \
	hmrs1eb.F hmrs2eb.F hmrs3eb.F hmrsgeb.F \
	kmrseb.F kmrsgeb.F \
	mrsdshd.F mrsdshp.F mrseb.F mrsebp.F \
	newdo1.F\
	pdf_beta.F pdfset.F pdfsta.F pdfvers.F pdxmt.F pdzxmt.F \
	pftopdg.F phgal.F phlac1.F phlac2.F phlac3.F \
	rxdv.F rxglue.F rxqbar.F rxud.F \
	sasan1.F sasano.F \
        sasbeh.F sasdir.F sasgam1.F sasgam2.F sasvm1.F sasvmd.F \
	seadis.F sfabfow.F sfafg1.F sfbma.F sfbmb.F sfctq11.F \
	sfctq12.F sfctq13.F sfctq14.F sfctq15.F sfctq21.F sfctq22.F \
	sfctq23.F sfctq24.F sfctq25.F sfctq26.F sfctq31.F sfctq32.F \
	sfctq33.F sfdisd0.F sfdisdm.F sfdish.F sfdiss0.F sfehlq1.F \
        sfctq41.F sfctq42.F sfctq43.F sfctq44.F sfctq45.F sfctq46.F \
        sfctq47.F sfctq48.F sfctq49.F \
        sfctq51.F sfctq52.F sfctq53.F sfctq54.F sfctq55.F sfctq56.F \
        sfctq57.F sfctq58.F sfctq59.F \
	sfdisa.F sfdsqa.F sfehlq2.F sfgal.F \
	sfgrvh.F sfgrvl.F sfgsho.F sfgslo1.F sfgslo2.F \
	sfkbmr2.F sfkbmr5.F sflacg1.F sflacg2.F sflacg3.F sfmfap.F \
	sfmfr1.F sfmfr2.F \
	sfmrs_98a1.F sfmrs_98a2.F sfmrs_98a3.F sfmrs_98a4.F \
	sfmrs_98a5.F \
	sfmrs_98d1.F sfmrs_98d2.F sfmrs_98d3.F sfmrs_98d4.F \
	sfmrs_98d5.F \
	sfmrs_98ht1.F sfmrs_98lo1.F sfmrs_98lo2.F sfmrs_98lo3.F \
	sfmrs_98lo4.F sfmrs_98lo5.F sfmrs_99a1.F sfmrs_99a10.F \
	sfmrs_99a11.F sfmrs_99a12.F sfmrs_99a2.F sfmrs_99a3.F \
	sfmrs_99a4.F sfmrs_99a5.F sfmrs_99a6.F sfmrs_99a7.F \
	sfmrs_99a8.F sfmrs_99a9.F sfmrs_99d1.F sfmrs_99d10.F \
	sfmrs_99d11.F sfmrs_99d2.F sfmrs_99d3.F sfmrs_99d4.F \
	sfmrs_99d5.F sfmrs_99d6.F sfmrs_99d7.F sfmrs_99d8.F \
	sfmrs_99d9.F sfmrsd0.F sfmrsdm.F sfmrsg.F sfmrsj.F sfmrss0.F \
	sfmrsc1.F sfmrsc2.F sfmrsc3.F \
	sfmsap.F sfmsba.F \
	sfmsbb0.F sfmsbd0.F sfmsbdm.F sfmsbh.F sfmsbs0.F sfmsfa.F \
	sfmsfg.F sfmsqa.F \
        sfms105.F sfms110.F sfms115.F sfms120.F sfms125.F \
        sfms130.F sfmsjp.F sfmsr1.F sfmsr2.F sfmsr3.F sfmsr4.F \
	sfmt10.F sfmt11.F sfmtu1.F sfmtu2.F sfmtu3.F \
	sfmtu4.F sfmtu5.F sfmtu6.F sfmtu7.F sfmtu8.F sfmtu9.F \
        sfsas11.F sfsas12.F sfsas13.F sfsas14.F sfsas21.F sfsas22.F \
        sfsas23.F sfsas24.F sfwhi1.F \
	sfwhi2.F sfwhi3.F sfwhi4.F sfwhi5.F sfwhi6.F smrsp31.F \
	smrsp32.F smrsp33.F smrspi.F srctq21.F srctq22.F srctq23.F \
	spctq51.F spctq53.F \
	srctq24.F srctq25.F srctq26.F strbebc.F strbep.F strcbp.F \
	srctq45.F srctq46.F srctq47.F srctq48.F \
	strcep.F strdo1.F strdo2.F strghr.F strh1b.F strh1e.F strh2b.F \
	strh2e.F strh3b.F strh3b1.F strh3b3.F strh3e.F strh3em.F \
	strh3ep.F strkb0.F strkb02.F strkb03.F strkb04.F strkb05.F \
	strkb0o.F strkbm.F strmrs1.F strmrs2.F strmrs3.F strowp1.F \
	strowp2.F strpriv.F strucb.F struce.F strucor.F structf.F \
	structm.F structp.F \
	v3.F valdis.F \
	wate32.F whit1g.F whit1q.F whit2g.F \
	whit2q.F whit3g.F whit3q.F whit4g.F whit4q.F whit5g.F whit5q.F \
	whit6g.F whit6q.F

FORTRANSAVEOPTION =

ifeq ($(strip $(VERSION)),)
VERSION=archive
endif
ifneq ($(strip $(VERSION)),archive)
LIBRARY=NullParameter_$(VERSION)
else
LIBRARY=
endif
LIBPATH=$(TOP)$(CURRENT_DIR)
SUBDIRLIST=
SUBDIRSTAMPS=$(foreach dir,,$(dir)/$(VERSION)/stamp)
ifeq ($(strip $(PACKAGE_LIB)),)
override PACKAGE_LIB=$(LIBPATH)/lib$(LIBRARY).a
endif

ifneq (,)
.PHONY:  -debug -shared

::
	@$(MAKE) VERSION=archive lib$@.a

-debug::
	@$(MAKE) VERSION=debug lib$@.a

-shared::
	@$(MAKE) VERSION=shared libNullParameter.sl

endif

archive_OBJS=$(foreach obj,$(OBJS),archive/$(obj))
debug_OBJS=$(foreach obj,$(OBJS),debug/$(obj))
shared_OBJS=$(foreach obj,$(OBJS),shared/$(obj))

ifeq ($(VERSION),archive)
VEROBJS:=archive_OBJS

endif

ifeq ($(VERSION),debug)
VEROBJS:=debug_OBJS

endif

ifeq ($(VERSION),shared)
VEROBJS:=shared_OBJS

endif

ifeq ($(VERSION),nil)
VERDIR=
VEROBJS=
endif

ifneq ($(strip $(VERSION)),)
VERDIR=$(VERSION)/
else
VERDIR=
VEROBJS=
endif

$(foreach ver,archive debug shared,$(ver)/objects.list):: \
		$(foreach dir,,$(dir)/Makefile)

define build-object-list
@[ -n "$(@D)" -a ! -d "$(@D)" ] && mkdir $(@D) || true
@$(RM) $@
@echo $(strip $($(@D)_OBJS)) | tr ' ' '\012' > $@
@ (set -e;\
	 case '${MFLAGS}' in *[i]*) set +e;; esac; \
	 subdirs=$(strip $(QUOTE)  $(QUOTE));\
	 list=`/bin/pwd`/$@;\
	 for dir in $$subdirs; do \
	  (set -e;cd $$dir;sed -e "\=^[^/]=s=^.=$$dir/&=" $@ >> $$list);\
	 done) || (rm $@; exit 1)
endef

ifeq ($(strip $(VERSION)),archive)
archive/objects.list:: Makefile $(archive_OBJS) \
		$(foreach dir,,$(dir)/archive/objects.list)
	$(build-object-list)

else
archive/objects.list::
	$(MAKE) VERSION=archive archive/objects.list

endif
debug/objects.list:: Makefile $(debug_OBJS) \
		$(foreach dir,,$(dir)/debug/objects.list)
	$(build-object-list)

shared/objects.list:: Makefile $(shared_OBJS) \
		$(foreach dir,,$(dir)/shared/objects.list)
	$(build-object-list)

$(foreach dir,,$(foreach ver,archive debug shared,$(dir)/$(ver)/objects.list))::
	@ echo checking $(CURRENT_DIR)/$(firstword $(subst /, ,$@))
	@ $(MAKE) -C $(firstword $(subst /, ,$@)) VERSION=$(filter archive debug shared,$(subst /, ,$@))	\
		   $(patsubst $(firstword $(subst /, ,$@))/%,%,$@)

ifneq ($(strip $(QUOTE)  $(QUOTE)),$(QUOTE)$(QUOTE))

libNullParameter.a: archive/objects.list
	@echo rebuild archive library $@ in $(CURRENT_DIR)
	@$(RM) $@
	@date
	@cat archive/objects.list | \
	   $(XARGS) $(AR) $@
	@date
	$(RANLIB) $@

libNullParameter-debug.a: debug/objects.list
	@echo rebuild debug library $@ in $(CURRENT_DIR)
	@$(RM) $@
	@date
	@cat debug/objects.list | \
	   $(XARGS) $(AR) $@
	@date
	$(RANLIB) $@

libNullParameter.sl:
	@echo No shared library available yet for  `uname`

endif

ifneq ($($(VEROBJS)),)
$($(VEROBJS):.o=.d): Makefile
include $($(VEROBJS):.o=.d)

endif

clean::
	$(RM) $(LIBRARY) $(VERDIR)stamp $(VERDIR)objects.list

emptyrule::

.SUFFIXES: .d

.c.d:
	$(SHELL) -ec "gcc -M $(ALLDEFINES) $< \
                      | sed 's/^[ ]*$*\.o/& $@/g' >$@"

.F.d:
	-@if [ ! -d . ] ; then mkdir .; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p ./ -- $(FORTRANALLDEFMDEPEND)  $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM_CMD) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile:: Imakefile
	-@if [ -f $@ ]; then set -x; \
	$(RM) $@.bak; $(MV) $@ $@.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR) \
	             -DPackageTop=$(PACKAGETOP)	\
		     -DPackageName=$(PACKAGE_NAME) \
		      -f $<

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

tree::
	@true

all::

# -----------------------------------------------------------------------
# dependencies generated by makedepend

