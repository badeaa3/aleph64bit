# Makefile generated by imake - do not edit!

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </home/wimmer/aleph64bit/cern/2005/src/patchy/Imakefile>
# $XConsortium: Imake.tmpl,v 1.224.1.1 95/06/19 17:51:01 gildea Exp $
#

.SUFFIXES: .i

# $XConsortium: Imake.cf,v 1.19 95/01/05 19:24:32 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit linux-lp64.cf to change

# $XConsortium: lnxLib.rules,v 1.8 95/01/16 21:11:00 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.197.1.1 95/06/19 18:01:48 gildea Exp $

 _NULLCMD_ = @ echo -n

          PATHSEP = /
	        / = /
            SHELL = /bin/sh

              TOP = /home/wimmer/aleph64bit/cern/2005/build
      CURRENT_DIR = /patchy

	QUOTE="
\ENDQUOTE="

ifeq "$(strip $(IMAKE))" ""
            IMAKE = imake
endif
ifeq "$(strip $(MAKEDEPEND))" ""
           DEPEND = makedepend
else
	   DEPEND = $(MAKEDEPEND)
endif
        MKDIRHIER = mkdirhier
        CONFIGSRC = $(CVSCOSRC)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
           IXXSRC = $(UNSUPPORTEDSRC)/programs/ixx
              IXX = ixx
         IXXFLAGS = -s BaseObject -m TypeObj -r RequestObj -p Xf
      IXXINCLUDES = -i '<X11/Fresco/enter-scope.h>'

          INCROOT = $(CVSCOSRC)/include
        USRLIBDIR = $(CVSCOSRC)/lib
         SHLIBDIR = $(CVSCOSRC)/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = $(CVSCOSRC)/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)5

                AR = ar clq

	    XARGS = xargs

  BOOTSTRAPCFLAGS =
               CC = gcc
               AS = as

        CCDEFINES =

               FC = gfortran -no-pie
              FPP = /lib/cpp
      FDEBUGFLAGS = -O
FORTRANSAVEOPTION =
   FORTRANOPTIONS = -fno-automatic -fno-second-underscore -fno-range-check -fPIC $(FORTRANSAVEOPTION)
           FCLINK = gfortran -no-pie
  FORTRANINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(PACKAGE_INCLUDES) $(TOP_INCLUDES)
   FORTRANDEFINES =
FORTRANALLDEFMDEPEND = $(FORTRANINCLUDES) $(FORTRANDEFINES) $(CERNDEFINES) $(EXTRA_DEFINES) $(DEFINES)

  FORTRANALLDEFINES = $(FORTRANALLDEFMDEPEND)

          FCFLAGS = $(FDEBUGFLAGS) $(FORTRANOPTIONS)

.SUFFIXES: .cxx

              CXX = g++
    CXXDEBUGFLAGS = -O1 -fomit-frame-pointer
 CXXEXTRA_DEFINES =
CXXEXTRA_INCLUDES =
  CXXIDL_INCLUDES = -I$(TOP)/include
   CXXSTD_DEFINES =
       CXXOPTIONS =
      CXXINCLUDES = $(INCLUDES) $(TOP_INCLUDES) $(CXXEXTRA_INCLUDES) $(CXXIDL_INCLUDES)
       CXXDEFINES = $(CXXINCLUDES) $(CXXSTD_DEFINES) $(THREADS_CXXDEFINES) $(CXXEXTRA_DEFINES)
         CXXFLAGS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(THREADS_CXXFLAGS) $(CXXDEFINES)

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = flex -l
           LEXLIB = -lfl
             YACC = bison -y
           CCYACC = bison -y
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = gmake
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
    FILEMANSUFFIX = 5x
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
            TOUCH = touch

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

           MFLAGS=$(filter-out --%,$(filter -%,$(MAKEFLAGS)))

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS =

         PICFLAGS = -B/usr/dll/jump/

      CXXPICFLAGS = -B/usr/dll/jump/

      PIFFLAGS = -B/usr/dll/jump/

    PROTO_DEFINES = -DFUNCPROTO=15 -DNARROWPROTO

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -s -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -s -m 4755

      PROJECTROOT = $(CVSCOSRC)

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O1 -fomit-frame-pointer
        CCOPTIONS = -fPIC

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(PACKAGE_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES) $(CCDEFINES) $(CERNDEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
      FCLDOPTIONS =  $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = gcc

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = linux-lp64.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =
    IMAKE_INCLUDES=

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -DLocalTop=$(LOCALTOP)  			-I$(IRULESRC) $(IMAKE_INCLUDES) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl 			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) 			 $(EXTRA_ICONFIGFILES)

archive/%.o : %.c archive/%.d
	$(RM) $@
	$(CC) -c $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES) $< -o $@

archive/%.d : %.c
	-@if [ ! -d archive ] ; then mkdir archive; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p archive/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

debug/%.o : %.c debug/%.d
	$(RM) $@
	$(CC) -c -g $(CCOPTIONS) $(ALLDEFINES) $< -o $@

debug/%.d : %.c
	-@if [ ! -d debug ] ; then mkdir debug; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p debug/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

shared/%.o : %.c shared/%.d
	$(RM) $@
	$(CC) -c $(CDEBUGFLAGS) $(PICFLAGS) $(CCOPTIONS) $(ALLDEFINES) $< -o $@

shared/%.d : %.c
	-@if [ ! -d shared ] ; then mkdir shared; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p shared/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

.SUFFIXES: .F

.F.o:
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

archive/%.o : %.F archive/%.d
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

archive/%.d : %.F
	-@if [ ! -d archive ] ; then mkdir archive; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p archive/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

debug/%.o : %.F debug/%.d
	$(RM) $@
	$(FC) -c -g $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

debug/%.d : %.F
	-@if [ ! -d debug ] ; then mkdir debug; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p debug/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

shared/%.o : %.F shared/%.d
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(PIFFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

shared/%.d : %.F
	-@if [ ! -d shared ] ; then mkdir shared; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p shared/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

ifeq ($(strip $(CERN)),)
CERN=/cern
endif

ifeq ($(strip $(CERN_LEVEL)),)
CERN_LEVEL=new
endif

ifeq ($(strip $(CERN_LIBDIR)),)
CERN_LIBDIR=$(CERN)$/$(CERN_LEVEL)$/lib
endif

ifeq ($(strip $(CERN_SHLIBDIR)),)
CERN_SHLIBDIR=$(CERN)$/$(CERN_LEVEL)$/shlib
endif

ifeq ($(strip $(CERN_BINDIR)),)
CERN_BINDIR=$(CERN)$/$(CERN_LEVEL)$/bin
endif

        CONFIGDIR = $(CVSCOSRC)$/config

	CERNDEFINES=-DCERNLIB_LINUX -DCERNLIB_UNIX -DCERNLIB_LNX -DCERNLIB_QMGLIBC -DCERNLIB_QMLXIA64 -DCERNLIB_GFORTRAN -DCERNLIB_GCC4 -DCERNLIB_VERBOSE
        PACKAGETOP=
        PACKAGE_NAME=
	LOCALTOP=

        PACKAGE_INCLUDES=-I$(TOP)$(PACKAGETOP) -I$(PROJECTROOT)$(LOCALTOP)$(PACKAGETOP) -I$(VPATH)

	VPATH=$(PROJECTROOT)$(LOCALTOP)$(CURRENT_DIR)

OBJS_C=$(SRCS_C:.c=.o)
OBJS_F=$(SRCS_F:.F=.o)
OBJS_CDF=$(SRCS_CDF:.cdf=.o)

OBJS=$(OBJS_C) $(OBJS_F) $(OBJS_CDF)

# -----------------------------------------------------------------------
# start of Imakefile : </home/wimmer/aleph64bit/cern/2005/src/patchy/Imakefile>

all:: nypatchy
all:: nycheck
all:: nydiff
all:: nyindex
all:: nylist
all:: nymerge
all:: nyshell
all:: nysynopt
all:: nytidy

.PHONY: P4LINKS
install.bin:: P4LINKS

.PHONY: bin/fcasplit
bin/fcasplit:: $(DESTDIR)$(CERN_BINDIR)/fcasplit

install.bin:: $(DESTDIR)$(CERN_BINDIR)/fcasplit

$(DESTDIR)$(CERN_BINDIR)/fcasplit: fcasplit
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

install.bin:: $(DESTDIR)$(CERN_BINDIR)/yexpand

$(DESTDIR)$(CERN_BINDIR)/yexpand: yexpand.script
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTBINFLAGS) $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nypatchy
bin/nypatchy:: $(DESTDIR)$(CERN_BINDIR)/nypatchy

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nypatchy

$(DESTDIR)$(CERN_BINDIR)/nypatchy: nypatchy
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nycheck
bin/nycheck:: $(DESTDIR)$(CERN_BINDIR)/nycheck

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nycheck

$(DESTDIR)$(CERN_BINDIR)/nycheck: nycheck
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nydiff
bin/nydiff:: $(DESTDIR)$(CERN_BINDIR)/nydiff

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nydiff

$(DESTDIR)$(CERN_BINDIR)/nydiff: nydiff
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nyindex
bin/nyindex:: $(DESTDIR)$(CERN_BINDIR)/nyindex

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nyindex

$(DESTDIR)$(CERN_BINDIR)/nyindex: nyindex
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nylist
bin/nylist:: $(DESTDIR)$(CERN_BINDIR)/nylist

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nylist

$(DESTDIR)$(CERN_BINDIR)/nylist: nylist
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nymerge
bin/nymerge:: $(DESTDIR)$(CERN_BINDIR)/nymerge

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nymerge

$(DESTDIR)$(CERN_BINDIR)/nymerge: nymerge
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nyshell
bin/nyshell:: $(DESTDIR)$(CERN_BINDIR)/nyshell

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nyshell

$(DESTDIR)$(CERN_BINDIR)/nyshell: nyshell
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nysynopt
bin/nysynopt:: $(DESTDIR)$(CERN_BINDIR)/nysynopt

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nysynopt

$(DESTDIR)$(CERN_BINDIR)/nysynopt: nysynopt
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

.PHONY: bin/nytidy
bin/nytidy:: $(DESTDIR)$(CERN_BINDIR)/nytidy

install.bin:: $(DESTDIR)$(CERN_BINDIR)/nytidy

$(DESTDIR)$(CERN_BINDIR)/nytidy: nytidy
	@if [ -d $(@D) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(@D)); fi
	$(RM) $@
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $< $@
	@if [ -r $(<F) ]; then $(RM) $(<F);$(LN) $@ $(<F); \
			  else true;fi

P5LIB=libp5lib.a

nypatchy: nypatchy.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nypatchy.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nypatchy

nycheck: nycheck.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nycheck.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nycheck

nydiff: nydiff.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nydiff.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nydiff

nyindex: nyindex.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nyindex.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nyindex

nylist: nylist.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nylist.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nylist

nymerge: nymerge.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nymerge.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nymerge

nyshell: nyshell.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nyshell.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nyshell

nysynopt: nysynopt.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nysynopt.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nysynopt

nytidy: nytidy.o $(P5LIB) $(filter-out +%,$(filter-out -%,$(shell cernlib kernlib)))
	$(RM) $@
	@echo "Linking with cern libraries"
	@cernlib kernlib
	$(FCLINK) -o $@ $(FCLDOPTIONS) nytidy.o $(P5LIB) $(LDLIBS) `cernlib kernlib` $(EXTRA_LOAD_FLAGS) \
	 || $(RM) $@
	@if [ ! -x $@ ] ; then set -e;	\
	 echo Error: $@ not executable;$(RM) $@;\
	 exit 1; else exit 0;fi

clean::
	$(RM) nytidy

comma:= ,
empty:=
space:= $(empty) $(empty)
PLINAME=$(subst $(space),$(comma),$(strip $(subst -DCERNLIB_,,-DCERNLIB_LINUX -DCERNLIB_UNIX -DCERNLIB_LNX -DCERNLIB_QMGLIBC -DCERNLIB_QMLXIA64 -DCERNLIB_GFORTRAN -DCERNLIB_GCC4 -DCERNLIB_VERBOSE)))
LDIR=$(TOP)$(CURRENT_DIR)/

$(P5LIB): $(LDIR)patchy.car $(LDIR)p5lib.cra p5lib.libmake fcasplit Makefile
	ypatchy - p5lib p5lib TTY .go
	fcasplit p5lib.f
	$(RM) p5lib.f
	cat p5lib.libmake >> p5lib.mkfca
	$(MAKE) -f p5lib.mkfca $@
	$(RM) p5lib.mkfca
	$(RM) p5lib.shfca

p5lib.libmake: Makefile
	$(RM) $@
	echo "libp5lib.a: \$$(ROUTINES)" > $@
	echo "	ar cr \$$(@) \$$(ROUTINES)" >> $@
	echo "	[ -x /usr/bin/ranlib ] && /usr/bin/ranlib \$$(@) || true" >>$@
	echo "	rm -f \$$(ROUTINES)" 	>> $@
	echo "	rm -f \$$(subst .o,.f,\$$(ROUTINES))" >> $@

fcasplit: fcasplit.o
	$(F77) $< -o $@

$(LDIR)%.cra: %.cra $(LDIR)yexpand
	PLINAME=$(PLINAME);export PLINAME;$(LDIR)yexpand $< $@

$(LDIR)patchy.car: patchy.car
	@ ln -s $< $@

%.f:  $(LDIR)%.cra $(LDIR)patchy.car
	ypatchy - $@ $(<F) TTY .go

.f.o:
	$(FC) -c $(FORTRANOPTIONS) $(FDEBUGFLAGS) $<

$(LDIR)yexpand:	yexpand.script
	@cp $< $@
	@chmod +x $@

YMODULES=ycompar yedit yfrceta yindex ylist ypatchy 	 ysearch yshift ytobcd ytobin ytoceta

P4LINKS: $(foreach yp,$(YMODULES),$(CERN_BINDIR)/$(yp))

$(foreach yp,$(YMODULES),$(CERN_BINDIR)/$(yp)):
	cd $(dir $@);	\
	if [ -f ../../patchy/4.15/bin/$(notdir $@) ] ; then \
		cp ../../patchy/4.15/bin/$(notdir $@) $(notdir $@); \
	else  \
		echo "$(notdir $@) not linked, not existing";\
	fi

emptyrule::

.SUFFIXES: .d

.c.d:
	$(SHELL) -ec "gcc -M $(ALLDEFINES) $< \
                      | sed 's/^[ ]*$*\.o/& $@/g' >$@"

.F.d:
	-@if [ ! -d . ] ; then mkdir .; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p ./ -- $(FORTRANALLDEFMDEPEND)  $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM_CMD) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile:: Imakefile
	-@if [ -f $@ ]; then set -x; \
	$(RM) $@.bak; $(MV) $@ $@.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR) \
	             -DPackageTop=$(PACKAGETOP)	\
		     -DPackageName=$(PACKAGE_NAME) \
		      -f $<

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

tree::
	@true

all::

# -----------------------------------------------------------------------
# dependencies generated by makedepend

