1 ALEPHIO

    ALE:ALEPHIO.OLB, _D.OLB, .NEWS, ALEPHIO:[*]*.F, [C]*.c, [INC]*.h
    /aleph/src/alephio      ---> $ALROOT/alephio/*
    alephio is part of alephlib
    /aleph/lib/libalephlib.a ---> /aleph/gen/libalephlib.a
    ----------------------------------------------------------------------
  ! 960903 - ALEPHIO 6.6
    AWRTAP - on UNIX only,
             replace '-v' argument with '-V' as in AOPTAP.
             introduce an #if defined(ALEPH_HP) which was missing.
    ----------------------------------------------------------------------
  ! 960814 - ALEPHIO 6.5
    AOPTAP - on UNIX only,
             replace '-v' argument with '-V' : -V is followed by the VID
             which is given on the FILI card,
             -v is followed by the VSN which must be specified on the 
             FILI card if different from the VID.
    ---------------------------------------------------------------------
  ! 960718 - ALEPHIO 6.4
    ADSPOS, AOPEN, AOPENW, AOPTAP, ASTAGE, AWRTAP - change CALL SYSTEM to
            IST = SYSTEM( ) and then check IST. If not 0 quit.
    ---------------------------------------------------------------------
  ! 960715 - ALEPHIO 6.3
    AOPTAP, MYTAPE - cut AOPTAP.F into AOPTAP.F and MYTAPE.F to please
                     Wisconsin AXP/VMS
    ---------------------------------------------------------------------
  ! 960611 - ALEPHIO 6.2
    ALSTGQRY - re-introduce this routine which had disappeared !!!
    --------------------------------------------------------------------
  ! 960529 - ALEPHIO 6.1
    ADBVER, OPENDA - rewrite a WRITE statment to please fpp on alws.
    ----------------------------------------------------------------------
  ! 960422 - ALEPHIO 6.0
         move ALPH, DBAS, a part of ALEF from ALEPHLIB to ALEPHIO
         the corresponding include files have been moved as well.
         a module C which contains the IO C routines is introduced.
         C-comilation is made with : -DALEPH_C 
         F77-compilation on UNIX machine is made with :
              -DUNIX -DALEPH_${VENDOR} (VENDOR = DEC SGI HP)
         F77-compilation on AXP/VMS is made with :
              -DALEPH_DEC         for *.F
         In alph/
         replace TIMAx by TIMEx subroutine calls in abrrec.F
    -----------------------------------------------------------------------
  ! 960312 - ALEPHIO 5.3
         Replace flag VAX by DEC.AND..NOT.UNIX
         rearrange the code to fit this new flag
         to compile VMS version define DEC
         to compile a UNIX version define UNIX and DEC (or HP, or SGI)
         In *CD -> ARDNEWS
    ACLOSE - avoid to call BRWND twice for the same file.
    ASTAGE, AWRTAP - introduce a flag HP to distinguish between the 
                     two different stagers.
    ----------------------------------------------------------------------
  ! 960111 - ALEPHIO 5.2
         In *CD -> ARDNEWS
    ALSTGQRY - on UNIX look also on ALWS to find whether a file is staged.
               BECAREFUL this FUNCTION works at CERN, outside it should be
               customized to use other stager if necessary.
               For the moment this FUNCTION is called by LOOK on request,
               and by DALI when a FILM card contains a CART parameter
               to request the staging of a file.
    ----------------------------------------------------------------------
  ! 951128 - ALEPHIO 5.1
         IN *CD -> ARDNEWS
    AWRTAP   - change the name of the script 'alstagewrt' to 'alstageout'
               (UNIX change only).
    ALSTGQRY - remove options if any
    ---------------------------------------------------------------------
  ! 950321 - ALEPHIO 5.0
         In *CD -> ARDNEWS
    ASTAGE, AWRTAP - to adapt to new stageout script
    ALSTGQRY - integer function to make a stagequery on VAX or UNIX
               IER = ALSTGQRY (fname)   i.e. - fname = ab1234.1.sl
               IER =0 if file is NOT staged, =1 if it is staged
    ---------------------------------------------------------------------
  ! 940808 - ALEPHIO 4.0
         In *CD -> IONEWS
    ALMACH - distinguish between VAX station and AXP.
    --------------------------------------------------------------------------
  ! 940531 - ALEPHIO 3.0
             CD IO
    add following *CD: ADBSJJ, IANDSH, JOBERR.
    add following *DK: ALMACH, ALTELL, OPENDA, OPENDB, OPENSQ, FPRROW,
                       SDRSX, SIBSDR, SXSDR, EXIT, JALREC, NOTIMA.
    ---------------------------------------------------------------------
  ! 940518 - ALEPHIO 2.0
             CD ARDNEWS
    AOPTAP - modify the test to distinguish between AB1234.1.SL and AB1234.11.SL
             AB1234.1.SL is kept as ab1234.epio
             AB1234.2.SL is kept as ab1234.2.epio
             AB1234.11.SL is kept as ab1234.11.epio
    ---------------------------------------------------------------------
  ! 940401 - ALEPHIO 1.0
    1st version of the ALEPH machine dependant code library.
    To facilitate the ALEPHLIB installation the 3 sets which contain machine
    dependant code have been extracted from ALEPHLIB and put into ALEPHIO.
    ALEPHIO contains the following sets: ALREAD, EPIO, PRESS.
    ALEPHLIB has no more machine dependant code.
    ALEPHIO 1.0 is included into ALEPHLIB 20.0
    ------------------------------------------------------------------------

2 ALPH

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ABCHCK     Check  sevt, srun, irun, nevt, time, clas cards.
     ABOLDR     User routine called at end of run
     ABOPEN     Dali open files (open in interactive mode)
     ABREAD     Similar to bread (same arguments). it ignores event dir.
     ABRREC     Subr. abrrec : read next record with or without event directories.
     ABRSEL     Alphard steering routine
     ABRUEV     Returns current run and event number.
     ABSEVT     Event selection according to sevt, srun, irun, nevt, time cards.
     ABSKIP     User supplied routine. called from abrsel for every skipped record.
     ABWEND     Close output file
     ABWEVE     Write output file with/without edir
     ABWSEL     Set write-event flag
     AREDIR     Reads edir file
     AUNPCK     Unpacks the banks  (pot,dst...  format to julia format )
     AUNPUS     User unpacking, called at the end of aunpck
     GETEVT     Read selected event from sequential or direct access file

3 ABCHCK
         SUBROUTINE ABCHCK (IRET)
  ---------------------------------------------------------------------------
    CKEY ALPHARD CHECK CARDS
  ---------------------------------------------------------------------------
    AUTHOR :      H. Albrecht            Nov 89
    modified by : F.Ranjard              900927
   Check  sevt, srun, irun, nevt, time, clas cards.
    determine the limits of the search MAXRUN,MAXEVT,NNMIN,NNMAX
    Called from ABRSEL
    Calls : none.
    Output:
            IRET = 0      : syntax ok
                 = 11     : syntax error detected
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRSEL                                                                     
   ABMODE                                                                     
        |---- ABCHCK                                                          
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  MAX0                                External        
                   |----  IABS                                External        
                   |----  IFIX                                External        
                   |----  FLOAT                               External        
                   |----  ABSMAX                                              
                   |----  ABSLIM                                              
                                                                              
 
3 ABOLDR
         SUBROUTINE ABOLDR (IRUN)
  ---------------------------------------------------------------------------
    CKEY ALPHARD OLD RUN
  ---------------------------------------------------------------------------
   - H.Albrecht - 891100
   User routine called at end of run
   - Input   : IRUN  / I = run number just ended
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
        |---- ABOLDR.                                                         
                                                                              
 
3 ABOPEN
         SUBROUTINE ABOPEN (CASE,JRET)
  ---------------------------------------------------------------------------
    CKEY ALPHARD OPEN
  ---------------------------------------------------------------------------
   - F.Ranjard - 900927          from H.Albrecht
   Dali open files (open in interactive mode)
   - Input   : CASE   / A4 = 'BOTH' open next FILI and FILO cards
                             'FILI' open next FILI or FILM card
                             'FILO' open next FILO card
   - Output  : JRET   / I  = 5  means files are opened
                             6  no more input file
                            13  error in FILI card
                            14  cannot open input file
                            15  error in FILO card
                            16  cannot open output file
   - ENTRY ABSTUN (LINDAT,LINSEL,LUTDAT,LUTSEL)
     to set logical units to these values
     LOOK internal use only
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRSEL                                                                     
   ABMODE                                                                     
        |---- ABOPEN                                                          
                   |----  NAMIND                              External        
                   |----  ACARD1                                              
                   |----  BDROP                               External        
                   |----  BCLAST                              External        
                   |----  AOPERD                                              
                   |----  AOPEWR                                              
                   |----  AOPEWW                                              
                   |----  BISELU                              External        
                   |----  IW                                  External        
                   |----  BCLASR                              External        
                                                                              
 
3 ABREAD
         SUBROUTINE ABREAD (JW, LUN, ELIST, *, *)
  ---------------------------------------------------------------------------
    CKEY ALPHARD READ BOS
  ---------------------------------------------------------------------------
    Author :      H. Albrecht            Nov 89
   Similar to bread (same arguments). it ignores event dir.
       N.b.: ABREAD cannot and BREAD should not be used to read
       files with event directories or to select events by means
       of data cards (SEVT etc.). There exist a special routine
       ABRREC for this purpose.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
   AREDIR                                                                     
        |---- ABREAD                                                          
                   |----  NAMIND                              External        
                   |----  BOSRD                               External        
                   |----  MOD                                 External        
                   |----  BABEND                                              
                   |----  BEPRD                               External        
                   |----  BTERD                               External        
                                                                              
 
3 ABRREC
         SUBROUTINE ABRREC (ELIST, ULIST, IRET)
  ---------------------------------------------------------------------------
    CKEY ALPHARD READ BOS
  ---------------------------------------------------------------------------
    Author :      H. Albrecht            Nov 89
    Modified:     E. Blucher             Apr 90
    Modified:     M. Talby               Jun 90
    Modified      F.Ranjard              Oct 91
   Subr. abrrec : read next record with or without event directories.
     Entry ABCLAS : Set event class bits for output.
     Entry ABSTRCL: Set event class bits for input.
     Entry ABGTCL : Get class word of current event.
     Entry ABGTWCL: Get write class word as it is set.
     Entry ABGTRCL: Get read class word as it is set.
     Entry ABSTCL : Set full output class word MASKW.
     Entry ABWEND : Write last output buffer.
     Entry ABUNIT : Return logical unit numbers.
     Routines called from ABRREC which can be supplied by the user :
     ABSKIP called for every skipped event
     ABOLDR called for the old run before a new run starts.
     | CALL ABRREC (ELIST, ULIST, IRET) |
     ABRREC reads from the "select" input stream which is the only
     one which allows for reading event directories. Several files can
     be read one after the other but only one file at a time.
     To read data from different files in parallel : use the routine
     ABREAD (with the same arguments as the BOS routine BREAD) for the
     2nd, 3rd, ... file. BREAD is not recommended as it might mix up
     files with and without event directories.
     Input file names are expected to be given on FILI data cards.
     The files are opened inside ABRREC.
     For input from event directories, class bits allow for selecting
     events of specific event classes. The data card CLAS denotes the
     classes to be accepted. For more complicated selection algorithms,
     the BOS routine BSELEC can be modified. Unfortunately, this feature
     is not (yet ?) available for input files without event directories.
     NEVT, SEVT, SRUN, IRUN data cards allow for reading N events or for
     selecting events according to their run/event number.
     Input : ELIST   List name (character * 1) for input banks.
                     Recommended : 'E'. Forbidden : ' ', 'C', 'R', 'Z'.
                     N.b.: For run records, the list 'R' (one run record)
                           and 'C' (accumulated banks of all run records)
                           is used.
             ULIST   Character string to steer unpacking. For a complete
                     description, see routine AUNPCK. Special values are
                      'AL '   All banks are unpacked. Coordinates are
                              not sorted.
                      ' '     No unpacking.
                      'NODE'  No decompressing, no unpacking.
    Output: IRET
       1 ... 3 : normal return
           1 Event record. Bank names are stored in ...
               - list ELIST for banks read from input file.
               - list 'S' for banks created during unpacking.
               Both ELIST and 'S' are dropped before a new record
               is read in.
           2 Run record. The bank names are stored in list 'C'.
               Banks on list 'C' are dropped before an new run
               record is read in.
           3 Other record. Bank names are stored in list ELIST.
               The class word of event directories is tested. SEVT etc.
               cards are ignored.
           4  future application.
           5  End-of-file condition. The next input file is now
                opened. Call ABRREC again.
       6 ... 16  : End conditions. User response : Stop the program.
           6 No more input files.
           7 NEVT limit reached.
           8 End of selected data according to SEVT/SRUN cards.
               Precondition : The events on the input file(s) must be
               sorted according to increasing run/event number. If this
               is not fulfilled : ignore IRET = 8 and call ABRREC again.
           9 Time limit reached.
          10 Input file not properly opened.
          11 Syntax error in SEVT, SRUN, IRUN, NEVT, TIME, CLAS cards.
          12 Read error on event directory.
          13 Error in FILI cards.
          14 Cannot open input file.
          15 Error on FILO card (n.b.: the output file, if given, is
          16 Cannot open output file.                      opened here).
      17 ... 21 : Error conditions. Call ABRREC again.
          17 Read error.
          18 Error in decompressing.
          19 Not enough space for unpacking.
          20 Error in TPC unpacking.
          21 Error during data base reading.
     +----------------------+
     | CALL ABCLAS (ICLASS) |
     +----------------------+
     Modifies class bits for output event directories; ignored if there
     is none. Note that it does NOT cause any output; an additional CALL
     ABWSEL is necessary. The order of CALL ABCLAS and CALL ABWSEL does
     not matter. Several CALL ABCLAS for the same event are allowed.
     CALL ABCLAS (0)   sets all class bits to 0.
     CALL ABCLAS (N)   with 1 <= N <= 30 : Set class bit N.
     CALL ABCLAS (-1)  Sets all class bits (1 ... 30).
     no CALL ABCLAS at all : output class bits = input class bits.
     +---------------------+
     | CALL ABGTCL (ICLAS) |
     +---------------------+
     Return current class word in ICLAS
     +---------------------+
     | CALL ABGWTCL (ICLAS) |
     +---------------------+
     Return write class word MASKW in ICLAS
     +---------------------+
     | CALL ABGRTCL (ICLAS) |
     +---------------------+
     Return write class word MASKR in ICLAS
     +---------------------+
     | CALL ABSTCL (ICLAS) |
     +---------------------+
     Set output class word MASKW = ICLAS
     +---------------------+
     | CALL ABSTRCL (ICLAS)|
     +---------------------+
     Set read class word MASKR = MASKR.OR.IBITC(ICLAS)
     If ICLAS=0 then MASKR = 0
     IF ICLAS<0 then MASKR = IBITC(ICLAS)
     +-------------+
     | CALL ABWEND |
     +-------------+
     Writes the last record if there is any. Should be called at the
     end of each job although it is unnecessary in most cases.
     | CALL ABUNIT (KUNDAT, KUNSEL, KUNSE2, KUTDAT, KUTSEL) |
     Returns the logical unit numbers used inside the ABRSEL package.
     Must not be called before the first CALL ABRSEL.
     Output : KUNDAT : Input data file.
              KUNSEL : Input event directory.
              KUNSE2 : future application.
              KUTDAT : Output data file.
              KUTSEL : Output event directory.
     Calls :
     From BOS77 : BCLASR, BCLAST, BCLASW, BDROP, BGARB, BLIST, BREAD,
                  BSELEC, BWRITE, NDROP.
     From ALEPHLIB : ABREAD, ABCHCK, ALOPEN, AUNPCK, CMPINI, CMPLIS,
                     DMPLIS, CRFILM.
     Utilities : TIMEL.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRSEL                                                                     
   ABMODE                                                                     
   GETEVT                                                                     
        |---- ABRREC                                                          
                   |----  NLINK                               External        
                   |----  NBANK                               External        
                   |----  INTCHA                              External        
                   |----  CMPINI                                              
                   |----  IOR                                 External        
                   |----  IBITC                               External        
                   |----  NAMIND                              External        
                   |----  FLOAT                               External        
                   |----  ABWEVE                                              
                   |----  BDROP                               External        
                   |----  BLIST                               External        
                   |----  BGARB                               External        
                   |----  IUNDAT                              External        
                   |----  IUTDAT                              External        
                   |----  TIMEL                               External        
                   |----  ABREAD                                              
                   |----  NAMERE                              External        
                   |----  ABSEVT                                              
                   |----  ABOLDR                                              
                   |----  AREDIR                                              
                   |----  BREAD                               External        
                   |----  DMPLIS                                              
                   |----  UDMPER                                              
                   |----  AUNPCK                                              
                   |----  IABS                                External        
                   |----  BCLASR                              External        
                   |----  ABWEND                                              
                                                                              
 
3 ABRSEL
         SUBROUTINE ABRSEL (ELIST,ULIST,JRET)
  ---------------------------------------------------------------------------
    CKEY ALPHARD STEERING
  ---------------------------------------------------------------------------
   Alphard steering routine
   - F.Ranjard - 900927
     the package works in BATCH mode by default. A call to ABMODE
     before the call to ABRSEL allows the user to switch to INTEractive
     mode.
     in BATCH mode the routine reproduces the behaviour of ABRSEL in
     ALEPHLIB up to version 11.9
   - F.Ranjard - 911015
     add INTERACTIVE mode
   - Input   : ELIST / CH*1  = input list
               ULIST / A     = unpacking list . Look at AUNPCK for more
                               complete description.
                               'NODE' for no decompress and no unpacking
                               '    ' for no unpacking
                               'AL  ' for unpack everything
   - Output  : IRET  / I     = return code. Look at ABRREC for more
                               details
                               1  event record
                               2  run record
                               3  unknown record
                               4  EOF on EDIR file
                               5  EOF on data file
                               6  no more input file
                              10  input file not opened
   - Entry   : ABMODE (NEWMOD)
               to switch from BATCH to INTERACTIVE mode
     i.e. - CALL ABMODE ('INTE')
            CALL ABRSEL ('E','AL ',IRET)
      or  - CALL ABMODE ('BATC')
            CALL ABRSEL ('E','TP IT FT ',IRET)
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALRWEV                                                                     
        |---- ABRSEL                                                          
                   |----  ABCHCK                                              
                   |----  ABOPEN                                              
                   |----  ACARD1                                              
                   |----  ABRREC                                              
                                                                              
 
3 ABRUEV
         SUBROUTINE ABRUEV (KRUN, KEVT)
  ---------------------------------------------------------------------------
    CKEY ALPHARD RUN EVENT / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 920226  from ABRREC/ENTRY ABRUEV
   Returns current run and event number.
     For event records : KRUN > 0 ; KEVT > 0.
     For run records :   KRUN > 0 ; KEVT = 0.
     For other records : KRUN = 0 ; KEVT = 0.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   RQBUNC                                                                     
   UFMS                                                                       
   UMSERR                                                                     
   TDEDXV                                                                     
   TDEDXR                                                                     
   ALRWEV                                                                     
   MUTRGS                                                                     
   BGETDS                                                                     
   EVTVER                                                                     
   GAMPEX                                                                     
   GAPGPC                                                                     
   ALPROB                                                                     
   MUREDO                                                                     
   FRFTDP                                                                     
   TCORES                                                                     
   TCRZVD                                                                     
   TPDVEL                                                                     
   VDMSRL                                                                     
   VRLDGT                                                                     
   VTRFIT                                                                     
   VTRLAS                                                                     
   YFTVTR                                                                     
   YFVMAP                                                                     
   YTOPNW                                                                     
   YTSTRK                                                                     
   AUNPCK                                                                     
   ALVSN                                                                      
        |---- ABRUEV.                                                         
                                                                              
 
3 ABSEVT
         SUBROUTINE ABSEVT (IRUN, IEVT, IRET)
  ---------------------------------------------------------------------------
    CKEY ALPHARD READ BOS
  ---------------------------------------------------------------------------
    AUTHOR :      H. Albrecht            Nov 89
   Event selection according to sevt, srun, irun, nevt, time cards.
    Called from ABRREC
    Calls : none.
    Input : IRUN    run,
            IEVT    event number
    Output:
          IRET =  0   event to be skipped
               =  1   event to be accepted
               =  7   end of selected data (NEVT)
               =  8   end of selected data (SEVT/SRUN)
               =-IRUN skip the end of this run
    900920 - modified by F.Ranjard
    ENTRY ABSMAX (LASRUN,LASEVT) sets MAXRUN=LASRUN , MAXEVT=LASEVT
    ENTRY ABSLIM (N1EVT ,NLEVT ) sets NNMIN = N1EVT , NNMAX = NLEVT
    ENTRY ABONER (ONE)           sets ONERUN= ONE
                                 ONERUN is true when there only one
                                 run per file.
                                 default is false (several runs).
                                 necessary in interactive mode
    910627 - modified by F.Ranjard
    set IRET=-IRUN to skip the end of run in ABRREC
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
   AREDIR                                                                     
        |---- ABSEVT                                                          
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  MAX                                 External        
                   |----  IABS                                External        
                                                                              
 
3 ABSKIP
         SUBROUTINE ABSKIP (IRUN,IEVT)
  ---------------------------------------------------------------------------
    CKEY ALPHARD READ BOS
  ---------------------------------------------------------------------------
    AUTHOR :      H. Albrecht            Mar 90
   User supplied routine. called from abrsel for every skipped record.
     Exactly : when a record is skipped due to SRUN, SEVT, ... cards.
     IRUN, IEVT : run/event number of the skipped record.
   
 
3 ABWEND
         SUBROUTINE ABWEND
  ---------------------------------------------------------------------------
    CKEY ALPHARD CLOSE OUTPUT FILE
  ---------------------------------------------------------------------------
   - F.Ranjard - 900927          from H.Albrecht
   Close output file
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALRWEV                                                                     
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
        |---- ABWEND                                                          
                   |----  ABWEVE                                              
                   |----  BCLAST                              External        
                   |----  BWRITE                              External        
                   |----  IUTDAT                              External        
                                                                              
 
3 ABWEVE
         SUBROUTINE ABWEVE
  ---------------------------------------------------------------------------
    CKEY ALPHARD WRITE
  ---------------------------------------------------------------------------
   - F.Ranjard - 900927      from H.Albrecht
   Write output file with/without edir
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
   ABWEND                                                                     
   ABWSEL                                                                     
        |---- ABWEVE                                                          
                   |----  BCLASW                              External        
                   |----  IAND                                External        
                   |----  IBITC                               External        
                   |----  CRFILM                                              
                   |----  IUTDAT                              External        
                   |----  CMPLIS                                              
                   |----  BWRITE                              External        
                                                                              
 
3 ABWSEL
         SUBROUTINE ABWSEL (LIST)
  ---------------------------------------------------------------------------
    CKEY ALPHARD WRITE
  ---------------------------------------------------------------------------
   Set write-event flag
   - F.Ranjard - 930720      from H.Albrecht
   - Input : LIST / A1 = one character output list
             Recommended : 'E' , 'R', 'C'. Forbidden : ' ', 'Z'.
             This parameter is ignored if the output is an event
             directory which refers to an input file.
     ABWSEL sets an output flag. Actual output is done during the next
     call to ABRREC. Thus, there is no danger to call it more than once
     for one event. For the very last event, ABWEND (see below) has
     to be called.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALRWEV                                                                     
        |---- ABWSEL                                                          
                   |----  ABWEVE                                              
                                                                              
 
3 AREDIR
         SUBROUTINE AREDIR (IEVT,IRUN,NREC,IRET)
  ---------------------------------------------------------------------------
    CKEY ALPHARD READ EDIR
  ---------------------------------------------------------------------------
   - F.Ranjard - 911031              from ABRREC
   Reads edir file
    NEVT NRUN in /SYSBOS/ and record pointer in IW(1)
   - Output:  IEVT   / I  = next event # to be read
              IRUN   / I  = next run # to be read
              NREC   / I  = record pointer
              IRET   / I  = return code
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
        |---- AREDIR                                                          
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  ABREAD                                              
                   |----  NLINK                               External        
                   |----  NSWAP                               External        
                   |----  NDROP                               External        
                   |----  MOD                                 External        
                   |----  BSELEC                              External        
                   |----  ABSEVT                                              
                   |----  IABS                                External        
                                                                              
 
3 AUNPCK
         SUBROUTINE AUNPCK(LIST,ULIST,IER)
  ---------------------------------------------------------------------------
    CKEY ALPHARD POT UNPACK
  ---------------------------------------------------------------------------
     Created  by : D.SCHLATTER          11-AUG-1988
     modified by : F.Ranjard - 881200
                               920224 to call TPDVEL at new run
   Unpacks the banks  (pot,dst...  format to julia format )
    Needs database ADBSCONS. Will be opened if not yet opened.
     Inputs:  ULIST:  character string for unpacking of banks:
                      'AL '  all banks are unpacked but no
                             coordinate sorting.
                      'VD '
                      'IT '  only ITC
                      'TP '  only TPC
                      'TE '  only dE/dx
                      'EC '  Ecal ( electron id. )
                      'HC '
                      'MU '
                      'LC '
                      'SA '
                      'FI '  track fits
                      'SO '  to sort coordinates in phi
                             to redo pattern recognition
                      'CR '  cal-object relationship banks
                      '   '  NO unpacking
                Example:  ULIST='IT TP EC HA '
                          ULIST='AL  SO '
                  LIST  = BOS list of bank names
                          if LIST(2:2) .eq. '-' then
                             POT banks are dropped.
     OUTPUT:      IER   = 0  successful unpacking
                          -1 OK but garbage collection
                          1  at least 1 POT bank does not exist
                          2  not enough space
                          >2 TPC internal error
                          >90cannot find data base constants
                  'S'list    contains the list of created banks
                             it is dropped and reset to '0' in AREAD
     Calls:     JUNIDB,ABRUEV,ERDDAF,ECDFRD,HRDDAF,TRDDAF,TPDVEL,
                IRDDAF,PITCOJ,FPTOJ,TPTOJ,PHSTOJ,PHMADJ,PEIDTJ,AUNPUS
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
        |---- AUNPCK                                                          
                   |----  JUNIDB                                              
                   |----  NAMIND                              External        
                   |----  LNBLNK                              External        
                   |----  INDEX                               External        
                   |----  ABRUEV                                              
                   |----  ALFIEL                                              
                   |----  IRDDAF                                              
                   |----  TRDDAF                                              
                   |----  TPDVEL                                              
                   |----  ERDDAF                                              
                   |----  ECDFRD                                              
                   |----  HRDDAF                                              
                   |----  IW                                  External        
                   |----  FPTOJ                                               
                   |----  PITMAJ                                              
                   |----  PITCOJ                                              
                   |----  TPTOJ                                               
                   |----  PEIDTJ                                              
                   |----  PHSTOJ                                              
                   |----  PHMADJ                                              
                   |----  PCRLTJ                                              
                   |----  AUNPUS                                              
                                                                              
 
3 AUNPUS
         SUBROUTINE AUNPUS(LIST,ULIST)
  ---------------------------------------------------------------------------
    CKEY ALPHARD USER UNPACK
  ---------------------------------------------------------------------------
   User unpacking, called at the end of aunpck
   - Input : see AUNPCK
   
 
3 GETEVT
         SUBROUTINE GETEVT(FSEQ,LIST,ULIST,NRUN,NEVT,IER )
  ---------------------------------------------------------------------------
    CKEY ALPHARD READ EVENT / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 911015
   Read selected event from sequential or direct access file
     Only event records are returned, all others  are skipped.
     Inputs    :
                 FSEQ     .TRUE. when runs are in increasing order
                 LIST     list of bank names
                 ULIST    character string to steer unpacking
                          Definition see in AUNPCK.
                 NRUN     run number   ( =0 means ignore run number   )
                 NEVT     event number ( =0 means ignore event number )
                          ( NRUN=NEVT=0 means read next event )
     Outputs   : IER =   ABRREC return code
                               (1=event, 2=run, 3=unkown)
                               (>4 event/run not found or eof)
                               look at ABRREC for more details.
     Calls:      ABRREC,BDROP,BGARB
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              GETEVT                                                          
                   |----  NAMIND                              External        
                   |----  BDROP                               External        
                   |----  IW                                  External        
                   |----  NBANK                               External        
                   |----  ABSMAX                                              
                   |----  ABRREC                                              

2 ARD

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     basic routines to open files
    
     ! ALEPHIO 5.2
       ALSTGQRY - on UNIX look also on ALWS to find whether a file is staged.
                  BECAREFUL this FUNCTION works at CERN, outside it should be
                  customized to use other stager if necessary.
                  For the moment this FUNCTION is called by LOOK on request,
                  and by DALI when a FILM card contains a CART parameter
                  to request the staging of a file.
    
     ! ALEPHIO 5.1
       AWRTAP   - change name of script 'alstagewrt' to 'alstageout'
       ALSTGQRY - remove options if any
    
     ! ALEPHIO 5
       ASTAGE, AWRTAP - to adapt to new stageout script
       ALSTGQRY - integer function to make a stagequery on VAX or UNIX
                  IER = ALSTGQRY (fname)   i.e. - fname = ab1234.1.sl
                  IER =0 if file is NOT staged, =1 if it is staged
    
     ! ALEPHIO 2
       AOPTAP - modify the test to distinguish between AB1234.1.SL and AB1234.11.SL
                AB1234.1.SL is kept as ab1234.epio
                AB1234.2.SL is kept as ab1234.2.epio
                AB1234.11.SL is kept as ab1234.11.epio
    
     ! ALEPHLIB 15.8
       ASTAGE, AWRTAP - introduce stageout on VAX machines (U.Schaefer)
    
     ! ALEPHLIB 15.7
       AOPERD, AOPTAP - on VAX and AXP declare SMG$blabla, LIB$..., SYS$..
                        INTEGER when they are used as function
                        (mandatory on AXP when running in debug mode)
       AOPATP - on VAX and AXP add an OPEN statment for NATIVE staged files.
                test existence of ALEPH$STAGE instead of ALWS.
       ACLOSE - when using EPIOc (status word 32 = 2) the EPIO file has to
                be closed before another one is opened to reduce the
                number of opened files (RFIO supports a small number<200
                of opened files)
       AOPTAP - on VAX open the staged NATIVE file in READONLY mode.
       AWRTAP - Environmental variable ALSTOUT has to be defined on UNIX
                systems!
                ALSTOUT defines the disk pool for the files to be staged out
                May be different from the disk pool for stagein data.
                sfget creates a symbolic link in $ALSTAGE to the file
                in $ALSTOUT.
    
     ! ALEPHLIB 15.7
       ADSPOS - extend CHNAM to 80 characters
    
     ! ALEPHLIB 15.6
       ACLOSE - when using EPIOC (status word 33 = 2) the EPIO file has to
                be rewinded before another one can be opened on the same
                unit.
    
     ! ALEPHLIB 15.5
       ACARD2 - rewrite the routine to suppress ASSIGN statments which give
                problems on ALPHA/OSF1 machines.
    
     ! ALEPHLIB 15.4
       REMEMBER for the moment the use of EPIO/CFIO is yanked until the release
                of the cernlib 93d.
       AOPERD - on ALWS as on UNIX when reading an IBM FILM card for a standard
                EPIO file (a GIME is present) transform it for a standard
                cartdridge:
                i.e. - FILM 'AB1234.EPIO | GIME PUBXU 456'
                       becomes
                       FILM 'ALDATA | EPIO | CART AB1234.1.SL'
    
       AOPTAP  : remove restriction to 'CART' or 'TAPE' on VAX to allow
                 stagein of Robot cartridges through SHIFT.
    
     ! ALEPHLIB 15.3
       ALGTENV : add BEAMPOSITION new environment variable to access
                 phy:beam.position file.
       AOPEN,AOPENW,AOPTAP,AWRTAP : set EPIO status word 33 to 2 to use CFIO
                                    and RFIO package where it is avalaible,
       AOPTAP  : add access to cartridges on ALWS through SHIFT6
       AOPERD  : on ALWS open staged file on SHIFT6
    
     ! ALEPHLIB 15.1
       AOPTAP, AWRTAP, AOPERD - let TMS find out where a cartridge resides.
       AOPTAP - On IBM , if SIZE is not given then force SIZE 200
       AWRTAP - On IBM , if no option force CHOPT=' '
    
     ! ALEPHLIB 14.6
       ADSPOS  - add a SAVE statment
       ALGTENV - on VAX check that EDIR or EPIO files starting with A or I
                 have only 6 characters before prefixing them with
                 AL$EDIR or AL$DATA
                 on UNIX call GETENVF instead of GETENV to please APOLLO
       ABOPEN, ALOPEN, AOPEN, AOPENW, AOPERD, AOPEWR, AOPTAP, AWRTAP
               - reoganize error codes
       --------------------------------------------------------------------
    
            ***           ALREAD   Package       ****
    
    
         Following is a description of a set of subroutines
    
                    to OPEN, READ and CLOSE
                    =======================
    
               all  ALEPH BOS-files on various machines
               =========================================
    
    
     In particular event selection and file opening  with internally defined
     names is possible. Unpacking of POT/DST banks is done automatically.
    
     The programs run on VAX and IBM. NATIVE, EPIO, DAF, CARDS and EDIR file
     can be used by the same subroutines. The programs are stored on the
     ALEPHLIB.
    
     The data base has to be opened by the user program beforehand.
    
       AOPDBS opens the database ADBSCONS DAF on unit# 4 .
       The unit is defined internally and it is used by all suboutines or
       functions accessing the database. The data base unit# can be
       accessed by a call to JUNIDB:
                 LDBASE = JUNIDB(0)
    
     the user interface to the ALEPH I/O package is ABRSEL
    
          CALL ABRSEL (Elist, Ulist,IER)
    
     for a full description look at *CD ALPHNEWS
    
    
     Below are described the routines called by ABRSEL to open, close, read
     files.
    
       File Opening:      AOPEN,AOPENW
       _____________
    
       AOPEN,AOPENW are basic opening routines. For event directories
       one has to open the masterfile separately.
    
       EPIO files are opened with fixed record format and 32040 bytes.
       NATIVE files are opened with fixed record format and 32040 bytes
       (30720 bytes on IBMRS6000).
       BOS_DAF files are opened with fixed record format and 1024 words.
       CARDS files are opened with 72 bytes.
       EDIR files are opened with 80 bytes.
    
       the record length for data files is set internally and can be
       accessed by a call to JALREC:
            LRECL = JALREC(0)
       the number of bytes per word is set in NBYTW (*CD ALBITW)
       the NATIve data file is declared to BOS:
            CALL BUNIT (LUN,'FORT',LRECL/NBYTW)
       the EPIO data file is declared to BOS:
            CALL BUNIT (LUN,'EPIO',LRECL/2)
    
    
       Input of filenames:   AFILIN,AFILOU
       ___________________
    
       Filenames are made of 'fname ftype fmode' on IBM
                             'fname.ext'         on VAX
       Filetypes are made of 'ftype'             on IBM
                             'ext'               on VAX
    
       Filenames can be given on runcards. For input use runcard:
                        FILI 'filename'
       and for output:
                        FILO 'filename'
       where filename is the full name including type or version.
       If the filetype is not one of the standard ALEPH filetypes
       the filename has to be extended with |NATIVE , |EPIO ,
       |CARDS , |DAF or |EDIR e.g. FILI 'ABC.DAT | EPIO'
       More than one FILInput or FILOutput card can be used. The files
       are treated in the order of the cards.
    
    
       Special IBM:
         To access the proper minidisk one can add the GIME command
         at the end of the filename string.
         E.g.: FILI 'fn ft * | GIME PUBXU 401 ' or
               FILO 'fn ft fm  | NATIVE | GIME PUBXU 403 fm (MR'
               FILO 'fn ft fm  | GIME PUBXU 403 fm (MR | NATIVE'
    
       Summary of FILI/FILO/READ card format:
          FILI 'fn.ft'
          FILI 'fn.ft | EDIR | GIME PUBXU 209'
          READ 'my.CARD | FETCH FLR 191'
          on UNIX machines:  userid has to be given when it is
          different from UNIX userid
          fetch file alws::sys$login:my.fili for user ranjard
          READ 'my.fili | CARD | FETCH ALWS RANJARD'
          fetch file al1w10::disk$aleph:[schlatter.a]my.fili
          for user ranjard
          READ 'my.fili | FETCH AL1W10::DISK$ALEPH:[SCHLATTER.A] RANJARD'
    
          dispose output file to the cernvm:reader or to the remoteuser
          main directory
          FILO 'MY.EDIR | DISPOSE'
    
          data files from cartdriges starting by "A" or "I" can be accessed
          in the same way on all machines:
          FILI 'AB1234 | EDIR'
          FILI ' I12345 | EPIO'
    
          cartdriges can be stagein :
          FILI 'ALDATA | EPIO | CART AB1234.1.SL SIZE 200'
          FILI 'MYLABEL | EPIO | SMCF I12345.n.SL SIZE 50'
    
          cartdriges can be stageout:
          FILI 'ALDATA | EPIO | CART AC1234.1.SL'
          FILI 'MYLABEL| EPIO | SMCF I12345.n.SL'
    
      Summary of Subroutine calls:
      ____________________________
    
        for general user:
        =================
    
    
      LUN=JUNIAL(CIO,I,0)     return logical unit for:
                               CIO='INPUT'  I=1  for DATA
                                            I=2  1. select file
                                            I=3  2. select file
                                            I=4  2. parallel DATA  file
    
                               CIO='OUTPUT' I=1  for DATA
                                            I=2   select file
                                            I=3  2. parallel DATA  file
                                            I=5  3. parallel DATA  file
    
      LUN=NUNIAL(CIO,I,NEWVAL) set logical units to NEWVAL
    
      CALL AFILIN(FNAME, ATYPE, FDEVI, IER)
                              get input  filename, type and device from
                              runcard FILI
      CALL AFILOU(FNAME, ATYPE, FDEVI, IER)
                              get output filename, type and device from
                              runcard FILO
      CALL AOPDBS(FNAME, IER) open data base on unit# 4. Use database
                             as defined by runcard FDBA, or argument
                             or by default.
      CALL AOPEN (LUN, FNAME, ATYPE, FDEVI, IER )
                             open old file  (READONLY)
      CALL AOPENW(LUN, FNAME, ATYPE, FDEVI, IER )
                             open new file  (write)
    
        for experts:
        ============
    
      CALL ACDARG(CNAME,DTYPE,DMODE, FNAME,ATYPE,FDEVI,IER)
                             get arguments FNAME/ATYPE/FDEVI
                             of runcard CNAME/DTYPE/DMODE
      KEY = ACARD3(NPRM,CKEY,COUT)
                             look for position of key CKEY
                             in the card just read by ACDARG
                             starting at parameter# NPRM
                             return the field COUT conter in CKEY
      CALL ACLOSE(LUN,IER)   close unit LUN.
      CALL AEVNUM(NRUN,NEVT) return run + event number.
      CALL AFILMI(FNAME, FTYPE, FDEVI, IRET )
                             get master filename for EDIR from bank FILM
      CALL AFTYPE(CAFT,NFT)
                             return strings of alephtypes
      CALL AIOCAR(CARINP, NINP, CAROUT, NOUT )
                             get valid card names for input/output
      CALL ALOPEN( LINDAT, LINSEL, LINSE2, LUTDAT, LUTSEL, IER)
                             open input and output files
      CALL AOPERD( LINDAT, LINSEL, LINSE2, IER )
                             open files ( read only ) including EDIR's
      CALL AOPEWR( LINDAT, LUTSEL, LUTDAT, IER )
                             open files ( write only ) including EDIR's
      CALL AUNPCK(LIST,ULIST,IER)
                             unpack POT/DST banks.
    
        User Subroutine:
    
        SUBROUTINE ANEWRN( IRUN )
                             is called at the first event- record
                              with a new run number.
        SUBROUTINE AUNPUS(LIST, ULIST)
                             is called by AUNPCK
    
    
    ------------------------------------------------------------------------
    
    Examples:
    =========
    
      1)  General purpose pgm to read/ write .NATIVE, .EPIO, .EDIR files.
    
    
          COMMON/BCS/IW(400000)
          CHARACTER*6 TYPDAT
          CHARACTER*80 FDEV,ULIST/'   '/
    
          CALL BNAMES(400)
          CALL BOS(IW,400000)
          CALL AOPEN(5,'TRW.CARDS',' ',' ',IER)
          CALL BREADC
    
     - initialize new input file
     9    IREC = 0
    
     - open input/output unit(s) and read a record
    
     10   CALL ABRSEL('E',ULIST,IRET)
          IF (IREC.EQ.0) THEN
          get logical unit #s.
             CALL ABUNIT(LINDAT,LINSEL,LINSE2 , LUTDAT,LUTSEL)
          IRET>5 means end of job, no more input file
             IF(IRET.GT.5) GOTO 9999
          ENDIF
    
          IREC=IREC+1
                     if end of file or end of data open next file
          IF(IRET.GE.4) GOTO 9
    
                    get run and event #s.
          CALL ABRUEV (NRUN,NEVT)
                    get number of banks in R-list
          NBK = IGTLEN (IW,'E')
          KREVH = IW (NREVH)
          KCLASW = 0
    
          IF (IRET.EQ.1) THEN
     - event record
             IF(KREVH.GT.0) THEN
              get write class word from REVH bank
                 KCLASW = IW(KREVH+LMHLEN+JREVEC)
             set write class word
                 CALL ABSTCL (KCLASW)
              ELSE
              build the EDIR  class word
                 CALL ALCLASW (KCLASW)
              ENDIF
    
          ELSEIF (IRET.EQ.2) THEN
     - run record
             ICLAS  = -1
          set all bits in output class word
             CALL ABCLAS (ICLAS )
    
          ELSEIF (IRET.EQ.3) THEN
     - slow control record
             ICLAS = 25
          set bit#25 in output class word
             CALL ABCLAS (ICLAS)
          ENDIF
    
                write the record
    
           set the write flag for this record
              CALL ABWSEL ('R')
              IF (LUTSEL.NE.0) THEN
               an EDIR is written , get output class word of the record
                 CALL ABGTWCL (KCLASW)
              ELSE
               an EDIR is not written, get input class word of the record
                 CALL ABGTCL (KCLASW)
              ENDIF
           fill class word statistic
              CALL ALSUMCL (KCLASW)
    
     - read next record
          GOTO 10
     --
     9999 CONTINUE
     - write last record
          CALL ABWEND
     - print statistic of class word
          CALL ALSUMCL (-1)
     --
          END
    
         Use the following runcards from file  BCOPY.CARDS:
         To copy from NATIVE to EPIO:
    
           FILI  'ALEPHDATA:DST123.NATIVE'
           FILO  'SCWEEK:DST123.EPIO'
    
         or from EPIO to NATIVE:
    
           FILO  'DST123.NATIVE'
           FILI  'DST123.EPIO'
    
    
         To read data and create an event directory:
    
           FILI  'ALEPHDATA:DST123.NATIVE'
           FILO  'SCWEEK:DST123.EDIR'
    
         To read selected events a with an event directory and write them.
    
           SEVT  1989  5 11 187 689
           FILI  'DST123.EDIR'
           FILO  'HIGGS.NATIVE'
    
     -----------------------------------------------------------------------
    
       2)  Open data file and  select events randomly ( very time consuming
           und unpack all banks ( IBM version):
    
              PARAMETER (LBOS=400000)
              COMMON/BCS/IW(LBOS)
    
              CALL BNAMES(400)
              CALL BOS(IW,LBOS)
    
              LUN1=1
                open data-file
              CALL AOPEN(LUN1,'ALEPHDATA:MCLUND.EPIO','  ','DISK',IER)
                  open database for TPC coordinate unpacking
              CALL AOPDBS(' ',IER)
    
    
         1    CONTINUE
              NRUN=1
              NEVT=100*RNDM(XX)+1
    
              CALL ASEVT(LUN1,'E','AL ',NRUN,NEVT,IER)
                    EOF   ?
              IF(IER.NE.0 ) GOTO 999
                .
                .
               GOTO 1
    999       CONTINUE
              END
    
        --------------------------------------------------------------------
    
       3)  Read all events from several files. Filenames  are given
           with   runcards. Unpack TPC and ITC banks only. Initialize
           Run conditions at every new run:
    
              PARAMETER (LBOS=400000)
              COMMON/BCS/ IW(LBOS)
              CHARACTER*80 FNAME
              CHARACTER*4  ATYPE,FDEVI
              CHARACTER*8 ULIST/'TP IT FI'/
    
              CALL BNAMES(400)
              CALL BOS(IW,LBOS)
                 open and read runcard
              CALL AOPEN(5,'TEST DAT A','CARDS','DISK',IER)
              CALL BREADC
                 open database  ADBSCONS DAF
              CALL AOPDBS(' ',IER)
    
              LUN1=1
              NFIL=0
    1         NFIL=NFIL+1
                    get next filename from runcards
                CALL AFILIN(FNAME,ATYPE,FDEVI,IRET)
                IF(IRET.LT.0) GOTO 999
    
                CALL AOPEN(LUN1,FNAME,ATYPE,FDEVI,IER)
                IF(IER.NE.0) GOTO 999
    
      2       CONTINUE
                CALL ASEVT(LUN1,'E',ULIST,0,0,IER)
                IF(IER.LT.0) GOTO 1
                .
                .
                GOTO 2
    999       CONTINUE
              END
              SUBROUTINE ANEWRN( IRUN )
              INCLUDE 'RCURNT INC *'
              IRUNRC=IRUN
                   get run constants ( e.g. BFIELD )
              CALL RDCONS
              RETURN
              END
    
           With the following runcards on file TEST DAT,
           3 files ( IBM file names )  are read in sequence:
    
            FILI  'RUN22 NATIVE W'
            FILI  'RUN11 NATIVE *'
            FILI  'RUN33 DAT V | NATIVE'
    
    
     -----------------------------------------------------------------------
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ACARD1     Return index for the next card bank
     ACARD2     Returns nprm th parameter on bos card
     ACARD3     Tests the parameters on a card for a key ckey and returns the full
     ACDARG     Get arguments of runcards like fili,filo,hist etc
     ACLOSE     Purpose   : close   aleph bos files
     ADIREC     Set the flag fdirec to .false. at 1st entry
     ADSPOS     Dispose of output files to ibm/vax from  unix
     AFILIN     Get filename and alephtype from aleph input banks ( fili )
     AFILMI     Get filename and alephtype from aleph input bank ( film )
     AFILOU     Get filename and alephtype from output banks 'filo','pot ','dst '
     AFTYPE     Returns  list of valid aleph file-types
     AINQUI     Inquire on vax and apollo, filedef on ibm
     AIOCAR     Returns list of valid run-cards for input and output
     ALGTENV    Return the true filename from the aleph filename
     ALOPEN     Opens bos select files and others ( sequential, direct, event directo
     ALSTGQRY   Queries whether a file on an aleph tape has been staged
     AMOUNT     Purpose   : mount tape/cartridge ibm only
     AOPEN      Purpose   : open  bos-file according to the aleph filetypes.
     AOPENW     Open new bos file according to aleph filetypes with write access
     AOPERD     Opens input data files (epio, native) and event directory files (text
     AOPEWR     Opens output data files (epio, native) or event directory files
     AOPTAP     Purpose   : open  bos-file from tape or cartridge
     ASTAGE     Purpose   : drop all staged data disks and submit tape
     AWERRC     Print messages for return codes from card reading routines
     AWRTAP     Purpose   : open   tape or cartridge for writing
     CRFILM     Create and write film bank
     DROPDK     Drop used modes at the end of execution
     GIMEDK     Look for gime + drop unused disks
     MYTAPE     Purpose   : user interface to tape or cartridge service on vax
     PRSTAT     Print status message in case of error in open

3 ACARD1
         INTEGER FUNCTION ACARD1 (CLAB)
  ---------------------------------------------------------------------------
    CKEY ALREAD CARD
  ---------------------------------------------------------------------------
   Return index for the next card bank
     Author     :Hartwig Albrecht         4-NOV-88
     modified by D.Schlatter                APR-89
          get bank index of next CLAB bank number. start at
          CLAB,NR=0.
          The next call will get CLAB,NR=1 ect..
          To restart from NR=0 call ACARD1 with CLAB=' '
      Inputs: CLAB : bank label (character * 4)
                     = 1st...4th character on the input card
                     = '    ' reset counter and start with 1. card
   
      Outputs: ACARD1 > 0 : card ( = BOS bank with label CLAB) exists
                      = 0 : no (more) cards with label CLAB given.
   
      Calls:              AIOCAR
      Libraries required: BOS77
      ENTRY:      ACARD0(NR)       returns name-index and number of
                                   last used card
   
      Description
      ===========
   
      Simple minded card interpreter.
      ACARD1 checks the existence of the first (next) BOS bank CLAB
             which is assumed to be created by an input card.
             For every bank label CLAB, the cards are interpreted in
             their proper order. Bank numbers are not allowed to be
             given on input cards.
             The content of this bank can be interpreted by subsequent
             calls to ACARD2.
      Example : Fortran program :
             CHARACTER * 20 CPARA          ; must be sufficiently long !
         10  IF (ACARD1 ('ABCD') .EQ. 0)  GO TO 30       ; get next card
             NPARA = 1                       ; init loop over parameters
         20  IF (ACARD2 (NPARA,CPARA) .EQ. 0)  GO TO 10  ; more parm's ?
             ...                           ;  interprete parameter CPARA
             NPARA = NPARA + 1                          ; next parameter
             GO TO 20
         30  CONTINUE ...                 ; all 'ABCD' cards interpreted
      Example : card syntax (text starts in column 1 !) :
      ABCD 'PARM1 | XYZ   | PARM3 | | PARM5|PARM6   '
      The syntactical separator | may be surrounded by blank spaces.
      For the time being, numbers on input cards are NOT supported by
      ACARD1/2 : This would require major changes in some BOS routines.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABOPEN                                                                     
   ABSTUN                                                                     
   ABRSEL                                                                     
   ABMODE                                                                     
   ACDARG                                                                     
   ALOPEN                                                                     
   ALK7FIL                                                                    
        |---- ACARD1                                                          
                   |----  LCARDINEXT                          External        
                   |----  NLINK                               External        
                   |----  IW                                  External        
                   |----  ACARD2                                              
                   |----  NAMIND                              External        
                                                                              
 
3 ACARD2
         INTEGER FUNCTION ACARD2 (NPRM, COUT)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   Returns nprm th parameter on bos card
   
      Author   :H.Albrecht               4-NOV-1988
      modified :F.Ranjard                5-AUG-1993
                rewrite it to remove ASSIGN statments
      Inputs: NPRM : Nth parameter on the card
   
      Outputs: ACARD2 : 0 : less than NPRM parameters given
                        I (positive integer) : length of string COUT
           -   COUT : output string = NPRMth parameter on card NCRD
                      = string of blank spaces if ACARD2 .le. 0 .
                      Must be declared with proper length in the calling
                      routine. (If too short : ACARD2 is set to the
                      length of COUT without any notification).
   
      Description
      ===========
   
      ACARD2 returns the NPRMth parameter on AN BOS input card which
      has been defined by a previous CALL ACARD1 (...) (q.v).
      Input cards may have no parameter at all or all parameters must
      be included in one pair of apostrophes.
      The separator character | may be surrounded with blanks. Leading
      and trailing but no imbedded blank spaces of the parameters are
      removed. Two subsequent separators : the parameter inbetween
      corresponds to COUT = blank spaces and ACARD2 = 1 .
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ACARD1                                                                     
   ACARD0                                                                     
   ACARD3                                                                     
   ACDARG                                                                     
        |---- ACARD2                                                          
                   |----  ALSTIN                                              
                   |----  ALSTRI                                              
                   |----  LNBLNK                              External        
                   |----  MIN                                 External        
                   |----  LEN                                 External        
                                                                              
 
3 ACARD3
         INTEGER FUNCTION ACARD3 (NPRM, CKEY, COUT)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   Tests the parameters on a card for a key ckey and returns the full
    parameter in COUT. ACARD3 = 0 if CKEY not found.
   
      Author   : H.Albrecht                     7-MAR-1989
   
      Inputs: Character string CKEY.
              NPRM : Start with parameter NPRM.
      Outputs: Character string COUT.
           -   Integer function value ACARD3 = length of COUT.
               If ACARD3 = 0 then COUT = ' '.
      Libraries required: None.
   
      Description
      ===========
   
      ACARD3 goes through the NPRMth to the last parameter on a data
      card and tests whether it starts with the string CKEY. If so,
      the full parameter including CKEY is returned in COUT.
      The data card is specified by a previous call to the function
      ACARD1 or to the subroutine ACDARG.
      NPRM = 1 : All parameters.
      NPRM = 2 : Ignore the first parameter (e.g. if it contains a data
                 set name).
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AFILOU                                                                     
   AFILO0                                                                     
   AOPERD                                                                     
   AOPEWR                                                                     
   AOPEWW                                                                     
        |---- ACARD3                                                          
                   |----  LEN                                 External        
                   |----  ACARD2                                              
                                                                              
 
3 ACDARG
         SUBROUTINE ACDARG(CNAME,DTYPE,DMODE,FNAME,ATYPE,FDEVI,IER)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   Get arguments of runcards like fili,filo,hist etc
   - H.Albrecht - 881104
    'filename' means 'fn ft fm' on IBM ,'fname.ext' on
               VAX, APOLLO, and DECS
    'filetype' means 'ft' on IBM ,'ext' on VAX, APOLLO, and DECS.
       input:    CNAME      card name
                 DTYPE      default aleph type (used if not given on inpu
                            card)
                 DMODE      default file mode (used if not given on input
                            card; ignored on VAX and APOLLO)
       output:   FNAME      filename
                 ATYPE      aleph type
                 FDEVI      device = 'DISK' or 'TAPE tape-specification'
                                      or 'CART cart-specification'
                                     'SMCF Robot-cartridge specific.'
                                     '8MM  Exabyte-tape specification'
    IBM, FDEVI may contain GIME information, for UNIX, it may
    GIME, ACQUIRE, FETCH, or DISPOSE information
                 IER        = 0  card  found
                            = 1  unknown file type
                            = 2  GIME not successful (IBM)
                            = 3  contradictory parameters on card
                            = 4  insufficient length of FNAME,ATYPE,FDEVI
                            =-1  no more card found
     Calls:  AFTYPE
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AFILIN                                                                     
   AFILI0                                                                     
   AFILMI                                                                     
   AFILOU                                                                     
   AFILO0                                                                     
   AOPERD                                                                     
   AOPEWR                                                                     
   AOPEWW                                                                     
   AGTFIL                                                                     
        |---- ACDARG                                                          
                   |----  IW                                  External        
                   |----  AFTYPE                                              
                   |----  ADIREC                                              
                   |----  DKMODW                              External        
                   |----  ACARD1                                              
                   |----  ACARD2                                              
                   |----  ALSTRI                                              
                   |----  LNBLNK                              External        
                   |----  INDEX                               External        
                   |----  GIMEDK                                              
                   |----  MAX                                 External        
                                                                              
 
3 ACLOSE
         SUBROUTINE ACLOSE( LUNIT ,IER)
  ---------------------------------------------------------------------------
    CKEY ALREAD CLOSE
  ---------------------------------------------------------------------------
     Created by SCHLATTER             21-AUG-1988
     modified by F.Ranjard            28-NOV-1989
   Purpose   : close   aleph bos files
      Inputs    :  LUNIT      logical unit
                         = 0  close ALL units opened with AOPEN/AOPENW
                              stage out all output files if needed.
      Bank      : '+BUF',nr=LUNIT  as created by  BOS77
      Output:      IER = 0    file properly closed
                        -1    '+BUF' bank does not exist for this unit
      Calls:   CLOSE,BRWND
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALRWEV                                                                     
   COTEST                                                                     
   DETEST                                                                     
        |---- ACLOSE                                                          
                   |----  NLINK                               External        
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  IF                                  External        
                   |----  MOD                                 External        
                   |----  BRWND                               External        
                   |----  EPGETW                              External        
                   |----  CFCLOS                              External        
                   |----  EPSETW                              External        
                   |----  NDROP                               External        
                   |----  ASTAGE                                              
                   |----  DROPDK                                              
                                                                              
 
3 ADIREC
         SUBROUTINE ADIREC (FDIREC)
  ---------------------------------------------------------------------------
    CKEY ALREAD DIRECT ACCESS DAF EDIR / INTERNAL
  ---------------------------------------------------------------------------
   Set the flag fdirec to .false. at 1st entry
   - F.Ranjard - 891020
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ACDARG                                                                     
   AOPEN                                                                      
        |---- ADIREC.                                                         
                                                                              
 
3 ADSPOS
         SUBROUTINE ADSPOS(LUN,CRNAM,FTYP3,FDEVI,IER)
  ---------------------------------------------------------------------------
    CKEY ALREAD UNIX DISPOSE / USER
  ---------------------------------------------------------------------------
     Author     : T. Wildish              05-SEP-1989
     Modified :- A.Belk CERN/EP        15-MAY-1990   Fix Vax dispose
     UNIX specific, not needed for other machines
   Dispose of output files to ibm/vax from  unix
      Inputs:
               CRNAM    name of the file to be disposed
               FTYP3    type of the file to be disposed
               FDEVI    device of the file to be disposed
               LUN      Logical unit number
                        = 0 means dispose of files at end of job
                        > 0 means record them for later use
      Output:  IER      error code
                        =  0 means OK
                        ne 0 means error
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPENW                                                                     
   ASTAGE                                                                     
        |---- ADSPOS                                                          
                   |----  IW                                  External        
                   |----  LNBLNK                              External        
                   |----  INDEX                               External        
                   |----  ICNEXT                              External        
                   |----  KBYTREC                                             
                   |----  CSETDI                              External        
                   |----  GETENV                              External        
                   |----  SYSTEM                              External        
                                                                              
 
3 AFILIN
         SUBROUTINE AFILIN(FNAME,FTYPE,FDEVI,IRET)
  ---------------------------------------------------------------------------
    CKEY ALREAD RUNCARDS FILI
  ---------------------------------------------------------------------------
   - Author :    D.Schlatter                     AUG-88
     modified by H.Albrecht             :        NOV-88
     modified by D.Shlatter and M.Talby :        APR-89
   Get filename and alephtype from aleph input banks ( fili )
    as defined by AIOCAR
    'filename' means 'fn ft fm' on IBM ,'fname.ext' on
               VAX, APOLLO, and DECS
    'filetype' means 'ft' on IBM ,'ext' on VAX, APOLLO, and DECS.
       input:    runcard     FILI  'filename '
                           if 'filetype' is not a standard alephtype then
                             FILI  'filename | alephtype'
                       e.g.  FILI 'ABC.NATIVE'
                             FILI 'XYZ.DAT|NATIVE'
       output:   FNAME      full filename
                 FTYPE      alephtype
                 FDEVI      device ('DISK'/ 'TAPE')
                 IRET       RETURN code from ACDARG
                            = 0  bank found with correct filename
                            = 6  file does not exist
     Calls:   AIOCAR,ACDARG,AINQUI
     ENTRY    AFILI0(ISTR,IND,NR)      RETURNs namind+nr for given stream
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              AFILIN                                                          
                   |----  AIOCAR                                              
                   |----  ACDARG                                              
                   |----  ACARD0                                              
                   |----  AINQUI                                              
 
3 AFILMI
         SUBROUTINE AFILMI(FNAME,FTYPE,FDEVI,IRET)
  ---------------------------------------------------------------------------
    CKEY ALREAD RUNCARDS FILM
  ---------------------------------------------------------------------------
   - Author :    D.Schlatter         AUG-88
     modified by M.Talby :           MAY-89
   Get filename and alephtype from aleph input bank ( film )
    'filename' means 'fn ft fm' on IBM ,'fname.ext' on VAX and APOLLO
    'filetype' means 'ft' on IBM ,'ext' on VAX and APOLLO.
       input:    runcard     FILM  'filename '
                           if 'filetype' is not a standard alephtype then
                             FILM  'filename | alephtype'
                       e.g.  FILM 'ABC.NATIVE'
                             FILM 'XYZ.DAT|NATIVE'
       output:   FNAME      full filename
                 FTYPE      alephtype
                 FDEVI      device ('DISK'/ 'TAPE')
                 IRET       RETURN code from ACDARG
                            = 0  bank found with correct filename
     Calls:   ACDARG,AINQUI
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPERD                                                                     
        |---- AFILMI                                                          
                   |----  ACDARG                                              
                   |----  ACARD0                                              
                                                                              
 
3 AFILOU
         SUBROUTINE AFILOU(FNAME,FTYPE,FDEVI,IRET)
  ---------------------------------------------------------------------------
    CKEY ALREAD RUNCARDS FILO
  ---------------------------------------------------------------------------
   - Author:       D.Schlatter                      - 880811
     Modified by : H.Albrecht                       - 881108
     Modified by : D.Schlatter and M.Talby          - APR 89
   Get filename and alephtype from output banks 'filo','pot ','dst '
     as defined in AIOCAR
    'filename' means 'fn ft fm' on IBM ,'fname.ext' on
               VAX, APOLLO and DECS
    'filetype' means 'ft' on IBM ,'ext' on VAX, APOLLO and DECS.
       input:    runcard  FILO  'filename '
                           if filetype is not an alephtype then:
                          FILO  'filename | alephtype'
                           other allowed cards are: POT, DST, MINI
                    e.g:  FILO 'ABC.NATIVE'
                          FILO 'XYZ.DAT | NATIVE'
       output:   FNAME      filename
                 FTYPE      alephtype (NATIVE,EPIO,EDIR )
                 FDEVI      device ('DISK'/ 'TAPE')
                 IRET       ACDARG RETURN code
                            = 0  bank FILO found with correct filename
     Calls:   AIOCAR,ACDARG
     ENTRY    AFILO0(ISTR,IND,NR)      RETURNs namind+nr for given stream
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KINIT                                                                      
        |---- AFILOU                                                          
                   |----  AIOCAR                                              
                   |----  ACDARG                                              
                   |----  ACARD3                                              
                   |----  ACARD0                                              
                   |----  NRIF                                External        
                                                                              
 
3 AFTYPE
         SUBROUTINE AFTYPE(ATYP,N)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - D.Schlatter - 880811
   Returns  list of valid aleph file-types
       output:      ATYP(N)   strings of valid filetypes
                    N         number of different filetypes
   
 
3 AINQUI
         SUBROUTINE AINQUI(LUN,FNAME,LEX)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - D.schlatter - 880811
   Inquire on vax and apollo, filedef on ibm
      ON VAX,APOLLO:
         Input:  LUN    --> Output: FNAME
      or         FNAME  -->         LEX=.true. or .false.
      on IBM:
         Input:  LUN,FNAME --> Output:  LEX
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AFILIN                                                                     
   AFILI0                                                                     
        |---- AINQUI.                                                         
                                                                              
 
3 AIOCAR
         SUBROUTINE AIOCAR( CARINP,NINP, CAROUT,NOUT )
  ---------------------------------------------------------------------------
    CKEY ALREAD RUNCARDS
  ---------------------------------------------------------------------------
     D. Schlatter   4.89
   Returns list of valid run-cards for input and output
     Input :  NINP      /I    number of different input cards
              NOUT      /I    number of different output cards
     Output:  CARINP    /C    valid card-names for input
              CAROUT    /C    valid card-names for output
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AFILIN                                                                     
   AFILI0                                                                     
   AFILOU                                                                     
   AFILO0                                                                     
   AOPEWR                                                                     
   AOPEWW                                                                     
   GIMEDK                                                                     
        |---- AIOCAR.                                                         
                                                                              
 
3 ALGTENV
         INTEGER FUNCTION ALGTENV (ANAME,FNAME)
  ---------------------------------------------------------------------------
    CKEY ALREAD FILE ENVIRONMENT
  ---------------------------------------------------------------------------
   Return the true filename from the aleph filename
   - F.Ranjard - 920513
   - Input   : ANAME    / A = ALEPH filename or any filename
   - Output  : FNAME    / A = true filename which could be used in OPEN
               ALGTENV / I = return code
                              =1 FNAME has been found
                              =0 FNAME has not been found (FNAME =' ')
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPEN                                                                      
        |---- ALGTENV                                                         
                   |----  LNBLNK                              External        
                   |----  GETENVF                             External        
                   |----  INDEX                               External        
                   |----  CUTOL                               External        
                   |----  MAX                                 External        
                                                                              
 
3 ALOPEN
         SUBROUTINE ALOPEN(LINDAT, LINSEL, LINSE2, LUTDAT, LUTSEL, IER)
  ---------------------------------------------------------------------------
    CKEY ALREAD OPEN EDIR
  ---------------------------------------------------------------------------
    Author:     D.Schlatter                          April 89
    Modified by M.Talby    :                         May   89
    Modified by F.Ranjard  :                         Janv  90
                            set logical units to 0 at first entry
   Opens bos select files and others ( sequential, direct, event directo
    in READ or WRITE mode according to FILI / FILO cards.
      For input, multiple FILI cards refer to the SAME input stream
      For Output, multiple FILO cards refer to PARALLEL streams.
                The same is true for POT,DST,MDST cards.
      for select files:
                If card    FILO ' *.EDIR'  is found , a new select file
                        with write access will be opened.
                Select file ( LUTSEL ) can refer to input data ( LINDAT )
                                              or to output data (LUTDAT )
                Action:
                    -   read FILO card
                    -   open new select file
                    -   write master data filename to select file
                    -   initialize BOS accordingly ( CALL BISELU )
                Action:
                If card    FILI ' *.EDIR' is found, an old select
                        file with read  access will be opened.
                    -   read FILI card
                    -   open new select file
                    -   get master data filename from select file
                    -   open master-file  ( CALL AOPEN )
                    -   initialize BOS accordingly ( CALL BISELU )
      for other files :
                    -  read FILI card
                    -  CALL AOPEN
            or
                    -  read FILO card
                    -  CALL AOPENW
       for tapes
                    -  initialize SETUP ( on IBM ) if wanted
                    -  read FILI/FILO card
                    -  CALL AOPTAP  ( in AOPEN/AOPENW )
    Output:
                LINDAT  /I = logical unit for old data file,
                           = 0, no  input data file wanted.
                             no card  FILI ' *.NATIVE'  or
                                      FILI ' *.EPIO'    found
                LINSEL  /I = logical unit for old select file,
                           = 0, no  input select file wanted.
                             no card  FILI ' *.EDIR'   found
                LINSE2  /I = logical unit for second select file,
                           = 0, no  second input select file wanted.
                             no card  FILI ' *.EDIR | THRU *.EDIR' .
                LUTDAT  /I = logical unit for new data file
                           = 0, no output data file wanted,
                             no card  FILO ' *.NATIVE'  or
                                      FILO ' *.EPIO'    found
                LUTSEL  /I = logical unit for new select file,
                           = 0, no output select file wanted,
                             no card  FILO ' *.EDIR'   found
                IER          = 0 successful opening
                IF ( IER.NE.0 ) THEN
                  IER .LT.  20  :  AOPERD part
                  IER .EQ.   7  :  no more FILI card
                  IER .EQ.   8  :  cannot find FILM card on EDIR
                  IER .EQ.   9  :  cannot open input file
                  IER .GE.  11  :  wrong FILI or FILM card (ACDARG)
                  IER .LT.  40  :  AOPEWR part
                  IER .EQ.  29  :  cannot open output file
                  IER .GE.  31  :  wrong FILO card (ACDARG return code)
    Calls:   AOPERD,AOPEWR,BISELU
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALOPEN                                                          
                   |----  ACARD1                                              
                   |----  AOPERD                                              
                   |----  AOPEWR                                              
                   |----  BISELU                              External        
 
3 ALSTGQRY
         INTEGER FUNCTION ALSTGQRY( FILENM )
  ---------------------------------------------------------------------------
    CKEY ALREAD STAGE QUERY / USER
  ---------------------------------------------------------------------------
   Queries whether a file on an aleph tape has been staged
     Author   :- M. Cattaneo    VAX       20-MAR-1995
                 R. Hagelberg   UNIX
                 F. Ranjard
     Returned value  : 1 if staged file exists, 0 if it does not
     Inputs    : C* FILENM      i.e.  ab1234.1.sl
     Outputs   : None.
   
 
3 AMOUNT
         SUBROUTINE AMOUNT(LUN,ANAME,ATYPE,FDEVI,IER )
  ---------------------------------------------------------------------------
    CKEY ALREAD MOUNT TAPE CARTRIDGE ALPHARUN IBM
  ---------------------------------------------------------------------------
     Author: M.Rumpf                 February 1990
   Purpose   : mount tape/cartridge ibm only
              : MOUNT requested in FILI card as option
              : Same drive address used : 181 for tape - 288 for cart.
              : Send MOUNT command for next medium
              : Send FILEDEF  command
              : Send LABELDEF command if Tape or cart. labelled
    All SETUPs must be done previously in exec file (ALPHARUN)
     Inputs    : LUN      logical unit
                 FNAME    DSN of tape file, can be ' ' if NL tape
                          is used or if you wish to ignore the dsn
                 ATYPE    'NATIVE'  for native fortran
                          'EPIO'    for EPIO
                 FDEVI     'TAPE tapeid options' or
                           'CART tapeid options'
                 where 'tapeid' is 'vsn.fseq.label' and 'options' which
                 contain at least MOUNT (mandatory)
     Outputs   : IER  = 0  successful opening
                      = 1  File number /= 1 on TAPE/CART  (multifile)
                      = 2  Error mounting next medium
                      = 3  Error on FILEDEF
                      = 4  Error on LABELDEF
   ==== IBM example =============== Multifile not allowed
    FILI 'DSNAME |EPIO | CART AC0021.1.SL MOUNT' mount - no staging
    FILI '       |NATIVE|TAPE 03558W.1.NL MOUNT'
    FILI 'ALDATA |EPIO | CART AF0056.1.SL.AF0056 MOUNT'
     Calls:    ACLOSE , VMCMS
     Called by AOPTAP
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPTAP                                                                     
        |---- AMOUNT                                                          
                   |----  INDEX                               External        
                   |----  CSETDI                              External        
                   |----  VMCMS                               External        
                   |----  IW                                  External        
                   |----  LNBLNK                              External        
                                                                              
 
3 AOPEN
         SUBROUTINE AOPEN(LUN,ANAME,ATYPE,FDEVI,IER )
  ---------------------------------------------------------------------------
    CKEY ALREAD OPEN
  ---------------------------------------------------------------------------
     Created  by : D.SCHLATTER          11-AUG-1988
     modified by : F.Ranjard - 890302
                               891128
   Purpose   : open  bos-file according to the aleph filetypes.
      Inputs    : LUN      logical unit
                 ANAME    'filename.type'
                 ATYPE    '    '    use type from filename
                                    or 'NATIVE' if FNAME='    '.
                          'NATIVE'  for native fortran
                          'EPIO'    for EPIO
                          'EDIR'    for event directory files
                          'CARDS'   for runcards
                          'DAF'     for BOS direct access files
                 FDEVI    '    '    for DISK file
                          'DISK'    for disk file
                          'TAPE'    for tape file
                          'CART'    for cartridge file
    N.B. For UNIX, FDEVI will be 'GIME userid addr'
         to fetch file FNAME from VM disk userid, address addr.
         alternative forms are   'ACQUire userid addr'
         to acquire it or        'FETCh userid addr'
         to fetch it. Only the first 4 letters are significant but
         the full command may be given, in upper or lower case. The
         first 4 letters must all be in the same case, not mixed.
     Output    : IER  = 0  successful opening
     Calls:      ACLOSE,AOPTAP,BUNIT,KBYTREC,EPINIT,EPDEFU,EPSETW,PRSTAT
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   RWEDIR                                                                     
   AOPERD                                                                     
   AGTFIL                                                                     
   ALFMT                                                                      
   ALK7OP                                                                     
   AOPDBS                                                                     
   COTEST                                                                     
   DETEST                                                                     
        |---- AOPEN                                                           
                   |----  BSEQH                               External        
                   |----  ADIREC                                              
                   |----  INDEX                               External        
                   |----  AOPTAP                                              
                   |----  ALGTENV                                             
                   |----  BDABF                               External        
                   |----  FILEINF                             External        
                   |----  LNBLNK                              External        
                   |----  VMCMS                               External        
                   |----  ICNEXT                              External        
                   |----  GETENV                              External        
                   |----  CUTOL                               External        
                   |----  SYSTEM                              External        
                   |----  EPSETW                              External        
                   |----  PRSTAT                                              
                                                                              
 
3 AOPENW
         SUBROUTINE AOPENW(LUN,ANAME,ATYPE,FDEVI,IER)
  ---------------------------------------------------------------------------
    CKEY ALREAD OPEN WRITE
  ---------------------------------------------------------------------------
     Author     : D.SCHLATTER             29-SEP-1988
     modified by: F.Ranjard - 890302
   Open new bos file according to aleph filetypes with write access
      Inputs:  LUN      logical unit
               ANAME    characterstring for ALEPH filename
               ATYPE    character string for ALEPH filetype
                        if not given with FNAME
               FDEVI    character string for device name
                        (DISK if not given)
      N.B. UNIX:
      FDEVI may be given in the card file as 'DISPOSE' or as 'DISPOSE user'
      to return the file to the reader of the submitter or to user's reader
     (IBM).
      For Vax, FDEVI should be given as 'DISPOSE' or 'DISPOSE file-name'.
      Such options will appear here with 'DISK' in front of them courtesy of
      ACDARG
      Outputs:  IER   = 0   successful opening
      Calls:    AWRTAP,BUNIT,BDABF
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KINIT                                                                      
   AOPEWR                                                                     
   AOPEWW                                                                     
   AGTFIL                                                                     
   COTEST                                                                     
   DETEST                                                                     
        |---- AOPENW                                                          
                   |----  INDEX                               External        
                   |----  AWRTAP                                              
                   |----  BDABF                               External        
                   |----  LNBLNK                              External        
                   |----  CSETDI                              External        
                   |----  VMCMS                               External        
                   |----  SYSTEM                              External        
                   |----  EPSETW                              External        
                   |----  ADSPOS                                              
                   |----  PRSTAT                                              
                                                                              
 
3 AOPERD
         SUBROUTINE AOPERD( LINDAT, LINSEL, LINSE2, IER )
  ---------------------------------------------------------------------------
    CKEY ALREAD  OPEN EDIR
  ---------------------------------------------------------------------------
    Author:     D.Schlatter                          April 89
    Modified by M. Talby                             June  89
    Modified by M. Talby                             May   89
   Opens input data files (epio, native) and event directory files (text
    in READ mode in sequential or direct access.
    Returns logical input units:
    Steering is done with FILI card.
    Input :     LINDAT  /I   logical unit for INPUT data file
    Output:     LINSEL  /I   logical unit for INPUT select file
                LINSE2  /I   logical unit for second select file
                IER     /I = 0 SUCCESSFUL OPENING
    Called by: ALOPEN
    Calls:   AFILMI,AOPEN,BREAD,BSEQH,BUNIT,NLINK
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABOPEN                                                                     
   ABSTUN                                                                     
   ALOPEN                                                                     
        |---- AOPERD                                                          
                   |----  LOC                                 External        
                   |----  NAMIND                              External        
                   |----  BSEQH                               External        
                   |----  GETENVF                             External        
                   |----  LNBLNK                              External        
                   |----  IW                                  External        
                   |----  BTERD                               External        
                   |----  AFILMI                                              
                   |----  ACDARG                                              
                   |----  ACARD0                                              
                   |----  NRFILI                              External        
                   |----  ACARD3                                              
                   |----  JUNIAL                                              
                   |----  JULREC                                              
                   |----  BUNIT                               External        
                   |----  AOPEN                                               
                   |----  INDEX                               External        
                   |----  CUTOL                               External        
                   |----  CSETDI                              External        
                                                                              
 
3 AOPEWR
         SUBROUTINE AOPEWR(LINDAT, LUTSEL, LUTDAT, IER)
  ---------------------------------------------------------------------------
    CKEY ALREAD OPEN EDIR
  ---------------------------------------------------------------------------
    Author:     D.Schlatter                          April  89
    Modified by M.Talby                              August 89
    Modified by M.Talby                              May    90
   Opens output data files (epio, native) or event directory files
    (TEXT) in WRITE mode. Multiple output cards go on parallel output
    streams (=MOUTPT). Returns logical output units.
    Steering is done with FILO,POT,DST,MDST cards as defined in AIOCAR
    Input :     LINDAT  /I   logical unit for existing data file
                              ( only with new select file needed)
    Output:     LUTSEL  /I   logical unit for new select file
                             only one output select file stream allowed
                LUTDAT  /I   logical unit for new  data  file
                             up to MOUTPT parallel streams possible
                ICASE   /I = 0    no select files to write
                           = 1    select file refers to input data
                                  which is the input stream # 1 defined
                                  on the FILI card
                           = 2    select file refers to output data
                                  which is the output stream # defined
                                  in this routine
                IER     /I = 0    successful opening
    Called by: ABOPEN
    CALLS:     AFILOU,AOPENW,BKFMT,BUNIT,BWRSB,NSWAP,JUNIAL
    ENTRY AOPEWW (JWITH): returns IFWITH in JWITH
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABOPEN                                                                     
   ABSTUN                                                                     
   ALOPEN                                                                     
        |---- AOPEWR                                                          
                   |----  JALREC                                              
                   |----  AIOCAR                                              
                   |----  BKFMT                               External        
                   |----  ACDARG                                              
                   |----  AWERRC                                              
                   |----  IW                                  External        
                   |----  ACARD3                                              
                   |----  ACARD0                                              
                   |----  NRFILO                              External        
                   |----  JUNIAL                                              
                   |----  BUNIT                               External        
                   |----  INDEX                               External        
                   |----  AOPENW                                              
                   |----  CRFILM                                              
                                                                              
 
3 AOPTAP
         SUBROUTINE AOPTAP(LUN,ANAME,ATYPE,FDEVI,IER )
  ---------------------------------------------------------------------------
    CKEY ALREAD OPEN READ TAPE CARTRIDGE
  ---------------------------------------------------------------------------
     Author: T. Wildish (IBM code)   November 1988
             J. Hilgart (VAX code)   July 1989
                         modified by M.Rumpf for MOUNT feb 90
                         ALWS STAGE added U.Schaefer June 93
   Purpose   : open  bos-file from tape or cartridge
     Inputs    : LUN      logical unit
                 FNAME    DSN of tape file, can be ' ' if NL tape
                          is used or if you wish to ignore the dsn
                 ATYPE    'NATIVE'  for native fortran
                          'EPIO'    for EPIO
                 FDEVI     'TAPE tapeid options' or
                           'CART tapeid options'
                 where 'tapeid' is 'vsn.fseq.label' and 'options' are
                 any staging options as required
     Outputs   : IER  = 0  successful opening
   ==== IBM example ===============
    e.g. FILI 'DSNAME |EPIO | CART AC0021.1.SL'       for staging
    e.g. FILI 'DSNAME |EPIO | CART AC0021.1.SL MOUNT' mount - no staging
     or  FILI '       |NATIVE|TAPE 03558W.1.NL RECFM VBS BLOCK 32760'
   ==== VAX example ===============
               where FOR VXCERN 'tapeid' is 'vsn.fseq.label' and
               'options' are any staging options as required.
               Note that the node is checked, and only if it is VXCERN
               a stage operation performed. On any other machine the
               dummy routine
               MYTAPE is called, allowing other sites to implement their
               own fortran tape handling routines at this point.
               MYTAPE has the following arguments:
     Inputs    : LUN      logical unit
                 FNAME    DSN of tape file, can be ' ' if NL tape
                          is used or if you wish to ignore the dsn
                 ATYPE    'NATIVE'  for native fortran
                          'EPIO'    for EPIO
                 FDEVI     'TAPE my_options'
                           'CART my_options'
                 where 'my_options' are any options required
     Outputs   : IER  = 0  successful opening
    : User routine which can be filled in w/ code for
   -specific handling of tape drives on VAX w/in fortran. Note
    file opening is still handled by AOPTAP. This version is a
    which does nothing.
    e.g. FILI 'DSNAME |EPIO | CART AC0021.1.SL'
               is translated by this routine (for the VXCERN user) to
    $STAGE/NAM=DSNAME/SIZ=200 AC0021 AC0021 LUN /NUM=1/LAB=EBCDIC
             For VXCERN I believe that any option allowed by STAGE
             can be implemented via the options, and multiple input
             files ARE supported. Another example:
             if VSN # VID
             and only the first 10 Mbytes is desired (by default I ask
             to stage the entire disk or cassette), use a card such as
     FILI 'DSNAME |EPIO | CART VSN.1.SL  VSN VID FOR020 /SIZ=10'
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPEN                                                                      
        |---- AOPTAP                                                          
                   |----  INDEX                               External        
                   |----  AMOUNT                                              
                   |----  LNBLNK                              External        
                   |----  VMCMS                               External        
                   |----  IW                                  External        
                   |----  ASTAGE                                              
                   |----  CUTOL                               External        
                   |----  ALSTRI                                              
                   |----  CSETDI                              External        
                   |----  SYSTEM                              External        
                   |----  GETENV                              External        
                   |----  EPSETW                              External        
                   |----  EPDEFU                              External        
                   |----  SPACES                              External        
                   |----  CLTOU                               External        
                   |----  LOC                                 External        
                   |----  GET_SYMBOL                          External        
                   |----  SPAWN                               External        
                   |----  MYTAPE                                              
                   |----  LIB                                 External        
                   |----  SIGNAL                              External        
                   |----  VAL                                 External        
                   |----  PRSTAT                                              
                                                                              
 
3 ASTAGE
         SUBROUTINE ASTAGE(LUNIT,CHDEF,IER)
  ---------------------------------------------------------------------------
    CKEY ALREAD DROP STAGE / INTERNAL
  ---------------------------------------------------------------------------
     Author: T. Wildish (IBM code)   June 1989
     modified by F.Ranjard           May 1992 , February 1993
     modified by U.Schafer           March 1994
   Purpose   : drop all staged data disks and submit tape
                 writing for output datasets automatically
     Cray      : Also calls ADSPOS to dispose of any disk files
     Inputs    : LUNIT    <0  -unit no. to be staged in
                          =0  end of job  : stageput on CRAY
                          >   unit no. to be staged out
                 CHDEF / A stageout parameters on UNIX
     Outputs   : IER      0 if all OK, 1 if STAGE DROP failed
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ACLOSE                                                                     
   AOPTAP                                                                     
   AWRTAP                                                                     
        |---- ASTAGE                                                          
                   |----  VMCMS                               External        
                   |----  LNBLNK                              External        
                   |----  SYSTEM                              External        
                   |----  ADSPOS                                              
                   |----  SPAWN                               External        
                                                                              
 
3 AWERRC
         SUBROUTINE AWERRC (LUN, CSUBR, CNAME, IER)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   Print messages for return codes from card reading routines
    only input parameters.
    LUN   logical unit for print output
    CSUBR name of the calling subroutine
    CNAME data set name
    IER   error code from ACDARG, AFILIN, etc.
                                                     H.Albrecht 20.11.88
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALRWEV                                                                     
   AOPEWR                                                                     
   AOPEWW                                                                     
   AGTFIL                                                                     
        |---- AWERRC                                                          
                   |----  MIN                                 External        
                   |----  LEN                                 External        
                                                                              
 
3 AWRTAP
         SUBROUTINE AWRTAP(LUN,ANAME,ATYPE,FDEVI,IER )
  ---------------------------------------------------------------------------
    CKEY ALREAD OPEN WRITE TAPE CARTRIDGE
  ---------------------------------------------------------------------------
     Author: T. Wildish (IBM code)   January 1989
             F.Ranjard  (UNIX code)  February 1993
             U.Schafer  (VAX code)   March 1994
   Purpose   : open   tape or cartridge for writing
     Inputs    : LUN      logical unit
                 ANAME    DSN of tape file, can be ' ' if NL tape
                          is used or if you wish to ignore the dsn
                 ATYPE    'NATIVE'  for native fortran
                          'EPIO'    for EPIO
                 FDEVI     'TAPE tapeid options' or
                           'CART tapeid options'
                 where 'tapeid' is 'vsn.fseq.label' and 'options' are
                 any staging options as required
                  For SL tapes, options should not be used and the
                 defaults will be taken
     Outputs   : IER  = 0  successful opening
    e.g. FILO 'DSNAME |EPIO | CART AC0021.1.SL'
     or  FILO '       |NATIVE|TAPE 03558W.1.NL RECFM VBS BLOCK 32040'
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPENW                                                                     
        |---- AWRTAP                                                          
                   |----  CSETDI                              External        
                   |----  INDEX                               External        
                   |----  MAX                                 External        
                   |----  LNBLNK                              External        
                   |----  VMCMS                               External        
                   |----  ASTAGE                                              
                   |----  CUTOL                               External        
                   |----  SYSTEM                              External        
                   |----  GETENV                              External        
                   |----  EPSETW                              External        
                   |----  EPDEFU                              External        
                   |----  GET_SYMBOL                          External        
                   |----  LIB                                 External        
                   |----  DELETE_LOGICAL                      External        
                   |----  SPAWN                               External        
                   |----  SET_LOGICAL                         External        
                   |----  PRSTAT                                              
                                                                              
 
3 CRFILM
         SUBROUTINE CRFILM
  ---------------------------------------------------------------------------
    CKEY ALREAD CREATE FILM BANK
  ---------------------------------------------------------------------------
    Author:       M. Talby               May 90
   Create and write film bank
    Input : none
    Output:  none
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABWEVE                                                                     
   AOPEWR                                                                     
   AOPEWW                                                                     
        |---- CRFILM                                                          
                   |----  JUNIAL                                              
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  NRFILI                              External        
                   |----  NLINK                               External        
                   |----  NSWAP                               External        
                   |----  NAFILO                              External        
                   |----  NRFILO                              External        
                   |----  ALSTIN                                              
                   |----  INDEX                               External        
                   |----  NBANK                               External        
                   |----  INTCHA                              External        
                   |----  UCOPY                               External        
                   |----  BWRSB                               External        
                   |----  NDROP                               External        
                                                                              
 
3 DROPDK
         SUBROUTINE DROPDK
  ---------------------------------------------------------------------------
    CKEY ALREAD GIME DROP USED MODES / INTERNAL
  ---------------------------------------------------------------------------
   Drop used modes at the end of execution
   - Author : M.Talby               May 90
       Input :    none
       Output:    none
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ACLOSE                                                                     
        |---- DROPDK                                                          
                   |----  DKMODW                              External        
                   |----  VMCMS                               External        
                   |----  DKMODR                              External        
                                                                              
 
3 GIMEDK
         SUBROUTINE GIMEDK(CNAME,CGIME,GTYPE,GMODE,IRC)
  ---------------------------------------------------------------------------
    CKEY ALREAD GIME DROP UNUSED / INTERNAL
  ---------------------------------------------------------------------------
   Look for gime + drop unused disks
   - M.TALBY - 900119
               900212 - use QDFREE avalaible on all IBMs
                        introduce (QUIET option
   - Modifid by  M.TALBY - 900505
       INPUT:    CNAME      CARD NAME
                 CGIME      GIME DISK
                 GTYPE      FILE TYPE
                 GMODE      FILE MODE
       OUTPUT    IRC        = 0  CARD FOUND GIME SUCCESSFUL
                            =-1  GIME NOT SUCCESSFUL
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ACDARG                                                                     
        |---- GIMEDK                                                          
                   |----  AIOCAR                                              
                   |----  VMCMS                               External        
                   |----  LNBLNK                              External        
                   |----  INDEX                               External        
                   |----  ACARD0                                              
                                                                              
 
3 MYTAPE
   
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
         SUBROUTINE MYTAPE(LUN,FNAME,ATYPE,FDEVI,IER )
     Author: J. Hilgart June 1989
   Purpose   : user interface to tape or cartridge service on vax
     Inputs    : LUN      logical unit
                 FNAME    DSN of tape file, can be ' ' if NL tape
                          is used or if you wish to ignore the dsn
                 ATYPE    'NATIVE'  for native fortran
                          'EPIO'    for EPIO
                 FDEVI     'TAPE my_options'
                           'CART my_options'
                 where 'my_options' are any options required
     Outputs   : IER  = 0  successful opening
    : User routine which can be filled in w/ code for
   -specific handling of tape drives on VAX w/in fortran. Note
    file opening is still handled by AOPTAP. This version is a
    which does nothing.
   
   
 
3 PRSTAT
         SUBROUTINE PRSTAT  (SUBR,FNAME,ISTATUS)
  ---------------------------------------------------------------------------
    CKEY ALREAD PRINT OPEN STATUS
  ---------------------------------------------------------------------------
   - M.N.Minard - 920327
   Print status message in case of error in open
   - Input     : ISTATUS / I = status word
                 SUBR    / A = subroutine name
                 FNAME   / A = file name
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPEN                                                                      
   AOPENW                                                                     
   AOPTAP                                                                     
   AWRTAP                                                                     
        |---- PRSTAT                                                          
                   |----  LNBLNK                              External        
                   |----  IW                                  External        
                   |----  ERROR_                              External        
                   |----  PRINT                               External        
                                                                              

2 DBAS

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     UTAHDR     Print the table header
     UTAHOR     Print the the table body horizontally
     UTAVER     Print the the table body vertically
     UTBKPR     Print the content of tables in memory
     UTDBCO     Print global information on the database content
     UTDBPR     Print the content of tables on d/a files
     UTPRBK     Print the content of tables in memory
     UTPRDB     Print the content of tables on d/a files

3 UTAHDR
         SUBROUTINE UTAHDR(IBKNA,NRBOS,IMFLG,NCOLS,NROWS,IMODE,LUNPR)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Print the table header
   
    - Author   : A. Putzer  - 87/08/14
    - Modified : A. Putzer  - 89/03/14
   
   
      Arguments: -  IBKNA CHA*4 (input) Name of the bank
                 -  NRBOS INTE  (input) BOS NR
                 -  IMFLG INTE  (input)
                                1 = Table taken from d/a file
                                2 = Table taken from memory
                 -  NCOLS INTE  (input) Number of columns
                 -  NROWS INTE  (input) Number of rows
                 -  IMODE INTE  (input) Print mode
                                1 = horizontally
                                2 = vertically
                                3 = vertically (continued)
                 -  LUNPR INTE  (input) Unit for print out
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTAHOR                                                                     
   UTAVER                                                                     
        |---- UTAHDR.                                                         
                                                                              
 
3 UTAHOR
         SUBROUTINE UTAHOR(ITANA,ITAID,NRLO,IMFLG,INDB,INDC,LUNPR)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Print the the table body horizontally
   
    - Author   : A. Putzer  - 87/08/14
    - Modified : A. Putzer  - 89/03/14
   
   
      Arguments: -  ITANA CHA*4 (input) Name of the bank wanted
                 -  ITAID INTE  (input) Table (ADAMO) ID
                 -  NRLO  INTE  (input) NR (BOS) for the current table
                 -  IMFLG INTE  (input)
                                1 = Table taken from d/a file
                                2 = Table taken from memory
                 -  INDB  INTE  (input) INDEX (BOS) for the current table
                 -  INDC  INTE  (input) INDEX (BOS) for the .COL table
                 -  LUNPR INTE  (input) Unit number for print output
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTBKPR                                                                     
   UTDBPR                                                                     
        |---- UTAHOR                                                          
                   |----  CHAINT                              External        
                   |----  IW                                  External        
                   |----  UTCBLK                                              
                   |----  LCOLS                               External        
                   |----  LROWS                               External        
                   |----  UTAHDR                                              
                   |----  FORMAT                              External        
                   |----  UTCCOP                                              
                   |----  ITABL                               External        
                   |----  UTCOFO                                              
                                                                              
 
3 UTAVER
         SUBROUTINE UTAVER(ITANA,ITAID,NRLO,IMFLG,INDB,INDC,LUNPR)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Print the the table body vertically
   
    - Author   : A. Putzer  - 87/08/08
    - Modified : A. Putzer  - 89/07/20
   
   
      Arguments: -  ITANA CHA*4 (input) Name of the bank wanted
                 -  ITAID INTE  (input) Table (ADAMO) ID
                 -  NRLO  INTE  (input) NR (BOS) for the current table
                 -  IMFLG INTE  (input)
                                1 = Table taken from d/a file
                                2 = Table taken from memory
                 -  INDB  INTE  (input) INDEX (BOS) for the current table
                 -  INDC  INTE  (input) INDEX (BOS) for the .COL table
                 -  LUNPR INTE  (input) Unit number for print output
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTBKPR                                                                     
   UTDBPR                                                                     
        |---- UTAVER                                                          
                   |----  CHAINT                              External        
                   |----  IW                                  External        
                   |----  UTCBLK                                              
                   |----  LCOLS                               External        
                   |----  LROWS                               External        
                   |----  UTAHDR                                              
                   |----  UTCCOP                                              
                   |----  FORMAT                              External        
                   |----  ITABL                               External        
                   |----  UTCOFO                                              
                                                                              
 
3 UTBKPR
         SUBROUTINE UTBKPR(IBKNA,IBSNR,IRWNR,LUNDA,LUNPR,IFLAG)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Print the content of tables in memory
   
    - Author   : A. Putzer  - 87/10/12
    - Modified : A. Putzer  - 87/11/20
   
   
      Arguments: -  IBKNA (input) Name of the bank wanted (or 'ALL ')
                 -                (or 'X   ' for all banks starting
                 -                with X)
                 -  IBSNR (input) BOS NR (or 0 for all)
                                  ignored if more than one table
                                  requested
                 -  IRWNR (input) Row NR (or 0 for all)
                                  ignored if more than one table
                                  requested
                 -  LUNDA (input) Unit number for the d/a file
                 -  LUNPR (input) Unit for print out
                 -  IFLAG(output) Error flag  = 0 ok
                                               -1 No format info on d/a
                                               -2 No info for this table
                                               -3 Table not on this d/a
                                               -4 Table empty
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTPRBK                                                                     
        |---- UTBKPR                                                          
                   |----  CHAINT                              External        
                   |----  IW                                  External        
                   |----  MDARD                               External        
                   |----  NDROP                               External        
                   |----  LROWS                               External        
                   |----  FORMAT                              External        
                   |----  ITABL                               External        
                   |----  NAMIND                              External        
                   |----  IBKNAFORMAT                         External        
                   |----  LCOLS                               External        
                   |----  UTAHOR                                              
                   |----  UTAVER                                              
                                                                              
 
3 UTDBCO
         SUBROUTINE UTDBCO
  ---------------------------------------------------------------------------
    CKEY PRINT DBASE / USER
  ---------------------------------------------------------------------------
   
   Print global information on the database content
    - Author   : A. Putzer  - 89/03/18
   
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              UTDBCO                                                          
                   |----  CHAINT                              External        
                   |----  IW                                  External        
                   |----  JUNIDB                                              
                   |----  MDARD                               External        
                   |----  LROWS                               External        
                   |----  FORMAT                              External        
                   |----  ITABL                               External        
                   |----  NAMIND                              External        
                   |----  NDANR                               External        
                   |----  ITANAFORMAT                         External        
                   |----  LCOLS                               External        
                   |----  NROWBFORMAT                         External        
                   |----  NDROP                               External        
 
3 UTDBPR
         SUBROUTINE UTDBPR(IBKNA,IBSNR,IRWNR,LUNDA,LUNPR,IFLAG)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Print the content of tables on d/a files
   
    - Author   : A. Putzer  - 87/10/01
    - Modified : A. Putzer  - 87/11/20
    - Modified : A. Putzer  - 88/10/13
    - Modified : A. Putzer  - 89/03/14
   
   
      Arguments: -  IBKNA (input) Name of the bank wanted (or 'ALL ')
                 -                (or 'X   ' for all banks starting
                 -                with X)
                 -  IBSNR (input) BOS NR (or 0 for all)
                                  ignored if more than one table
                                  requested
                 -  IRWNR (input) Row NR (or 0 for all)
                                  ignored if more than one table
                                  requested
                 -  LUNDA (input) Unit number for the d/a file
                 -  LUNPR (input) Unit for print out
                 -  IFLAG(output) Error flag  = 0 ok
                                               -1 No format info on d/a
                                               -2 No info for this table
                                               -3 Table not on this d/a
                                               -4 Table empty
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTPRDB                                                                     
        |---- UTDBPR                                                          
                   |----  CHAINT                              External        
                   |----  IW                                  External        
                   |----  NDROP                               External        
                   |----  MDARD                               External        
                   |----  LROWS                               External        
                   |----  FORMAT                              External        
                   |----  ITABL                               External        
                   |----  NAMIND                              External        
                   |----  NDANR                               External        
                   |----  IBKNAFORMAT                         External        
                   |----  LCOLS                               External        
                   |----  UTAHOR                                              
                   |----  UTAVER                                              
                                                                              
 
3 UTPRBK
         SUBROUTINE UTPRBK(IBKNA)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   
   Print the content of tables in memory
   
    - Author   : A. Putzer  - 89/03/07
   
   
      Arguments: -  IBKNA (input) Name of the bank wanted (or 'ALL ')
                 -                (or 'X   ' for all banks starting
                 -                with X)
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              UTPRBK                                                          
                   |----  JUNIDB                                              
                   |----  UTBKPR                                              
                   |----  IW                                  External        
 
3 UTPRDB
         SUBROUTINE UTPRDB(IBKNA)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Print the content of tables on d/a files
   
    - Author   : A. Putzer  - 89/03/07
   
   
      Arguments: -  IBKNA (input) Name of the bank wanted (or 'ALL ')
                 -                (or 'X   ' for all banks starting
                 -                with X)
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              UTPRDB                                                          
                   |----  JUNIDB                                              
                   |----  UTDBPR                                              
                   |----  IW                                  External        

2 EPIO

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     1st entry into EPIO set
                           on VAX only: EPINIT
                                        as long as EPIO 1.68 will not
                                        be installed on VAX.
                                        make sure that EPBLIN and EPHEAD
                                        are loaded from BOS77 library
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     EPINIT 

3 EPINIT
   
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              EPINIT                                                          
                   |----  EPBLIN                              External        
                   |----  EPHEAD                              External        
                   |----  UMLOG                               External        

2 IO

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     1st entry in IO
     ! ALEPHIO 4
       ALMACH - distinguish between VAX station and AXP.
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ADBROW     Get elements of an adbr row
     ADBRPN     Get elements of an adbr period
     ADBRUN     Get elements of an adbr period
     ADBSWP     Swap data base bank given on data cards with nr=iold to nr=inew
     ADBVER     Return  daf version# and date of last change
     AGETDB     Load  list list of bank names from the data base for run irun
     AGTFIL     Open a file given on data card
     ALBOS      Book/enlarge a bank with name='name', number=nr, length=le
     ALDAWR     Write list of banks on direct access bos file
     ALDTYP     Finds the category of data : kin,raw,pot,dst,mdst
     ALEVEH     Build the eveh bank
     ALFIND     Find name bank in list list
     ALFMT      Get bank format
     ALGTBK     Create/ get a bank
     ALGTDB     Load  list list of bank names from the data base for run irun
     ALGTLU     Finds the jetset version number used for generated events
     ALGTRO     Get a row of a bank
     ALGTYP     Finds the galeph tracking level for a file of simulated events
     ALINST     Transform a character string chstr of arbitrary length
     ALK7FIL    Set the fili card for a given k7
     ALK7FRU    Get cartridge number for a given type of a given run
     ALK7OP     Open runcartslist   file and read it
     ALK7TRU    Get list of runs of a given type residing on a given tape
     ALMACH     Returns the historian flags used to make the library
     ALREDB     Read the data base
     ALRUNE     Build the rune bank
     ALRUNH     Build the runh bank
     ALRUNR     Build the runr bank
     ALSEED     Returns original seeds from rndm random generator
     ALSTHO     Transform an array of hollerith  into the corresponding character string
     ALSTIN     Transform an array of char. integer representations
     ALSTRI     Blow character string str into character array chout, limiter chlim
     ALTABL     Book tabular bank 'name',nr=0
     ALTELL     Print text and take action
     ALVSN      Return data type and version numbers of aleph programs from rhah.
     AOPDBS     Open  aleph database ( def= adbscons daf )
     AUBLIS     Print the list of banks which are on the 'list' list.
     AUBOS      Book/enlarge a bank with name='name', number=nr, length=le
     AUBPRS     Compress the banks put on the list 'list', following the
     BABEND     Call trace back in case of bos fatal error
     BKCARI     Converts an integer into character string
     BKINCA     Transforms the character representation of an integer into this integ
     BKRHAB     Books and fills the rhah bank for mc or online steps
     BKRHAL     Enlarges and fills the bank rhah (  run header analysis history )
     BKRHAW     Fills the rhah bank ( run header analysis history )
     BKTOBK     Copy bank1,nr1 into bank2,nr2
     CAFIHT     Fill bank caht using bank cahi
     CHAHOL     Return in chahol the character representation of the hollerith ihol
     DAFRDS     Direct access read of a single bank
     EXIT       Ibmrs6000 has no exit subroutine
     FPRROW     Print table using format in numeric array ifmt
     GTDBAS     Get name of the correct data base and open it
     GTSTUP     Get setup code for a given detector
     IGTFMT     Get bank format index
     IOVERS     Returns the io version number
     JALREC     Return the aleph record length
     JHOCHA     Return in jhocha the hollerith representation of the character
     JULREC     Return the  record length
     JUNIAL     Return  logical units for input or output files
     JUNIDB     Return the data base logical unit
     KBYTREC    Return the aleph record length in bytes
     LOCTAB     Locate a value in a table
     NAMERU     Get the row# of a bank which contains irun run number in
     OPENDA     Open daf
     OPENDB     Open daf
     OPENSQ     Open for sequential read a file on unit # lunit
     SDRSX      Convert from dec risc floating format to dec vax format
     SIBSDR     Convert from ibm to dec risc floating point format
     SXSDR      Convert from dec vax floating format to dec risc format
     UBPACK     Remove marked rows from a tabular bank
     UCLEAN     Remove duplicate rows from a tabular bank
     UINDXS     Establish n-->1 relationships for static tables
     USBOS      User routine called when not enough space
     USGTDB     User routine to get a list of data base banks
     UTCBLK     Blank a string of 32-bit words
     UTCCOP     Copy one textstring into another
     UTCOFO     Get the format for the printing of the attributes
     UTWOCL     Extract and clean up two columns from a tabular bank
     UTWOEX     Extract two columns from a tabular bank

3 ADBROW
         INTEGER FUNCTION ADBROW (DET,IROW,IPERIOD,IRUN,ISETUP)
  ---------------------------------------------------------------------------
    CKEY ALEF ADBR
  ---------------------------------------------------------------------------
   - F.Ranjard - 901018
   Get elements of an adbr row
   - Input  : DET      / A = CHARACTER*2 variable to define the det:
                             'BP VD IT TP EC LC SA HC MU TR GE DB SI BE'
              IROW     / I = ADBR row #
   - Output : IPERIOD  / I = period # corresponding to this row
              IRUN     / I = 1st run of this period
              ISETUP   / I = detector setup code
                             = 0 if DET does not exist
              ADBROW   / I = row #
                             = 0 if no bank or row # does not exist
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ADBROW                                                          
                   |----  ITABL                               External        
 
3 ADBRPN
         INTEGER FUNCTION ADBRPN ( DET,IROW,IPERIOD,IRUN,ISETUP)
  ---------------------------------------------------------------------------
    CKEY ALEF ADBR PERIOD
  ---------------------------------------------------------------------------
   - F.Ranjard - 901018
   Get elements of an adbr period
   - Input  : DET      / A = CHARACTER*2 variable to define the det:
                             'BP VD IT TP EC LC SA HC MU TR GE DB SI BE'
              IPERIOD  / I = period #
   - Output : IROW     / I = ADBR row # valid for this period
              IRUN     / I = 1st run of this period
              ISETUP   / I = detector setup code
                             = 0 if DET does not exist
              ADBRPN   / I = valid period #
                             = 0 if no bank or row # does not exist
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   GTSTUP                                                                     
        |---- ADBRPN                                                          
                   |----  ITABL                               External        
                                                                              
 
3 ADBRUN
         INTEGER FUNCTION ADBRUN ( DET,IROW,IPERIOD,IRUN,ISETUP)
  ---------------------------------------------------------------------------
    CKEY ALEF ADBR PERIOD
  ---------------------------------------------------------------------------
   - F.Ranjard - 901018
   Get elements of an adbr period
   - Input  : DET      / A = CHARACTER*2 variable to define the det:
                             'BP VD IT TP EC LC SA HC MU TR GE DB SI BE'
              IRUN     / I = run #
   - Output : IROW     / I = ADBR row # valid for this run
              IPERIOD  / I = period # of this row
              ISETUP   / I = setup code
                             = 0 if DET does not exist
              ADBRUN   / I = 1st run of the period
                             = 0 if no bank or row # does not exist
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   GTSTUP                                                                     
        |---- ADBRUN                                                          
                   |----  ITABL                               External        
                                                                              
 
3 ADBSWP
         SUBROUTINE ADBSWP(IOLD,INEW)
  ---------------------------------------------------------------------------
    CKEY ALEF DBASE DCARD SWAP / USER
  ---------------------------------------------------------------------------
   Swap data base bank given on data cards with nr=iold to nr=inew
   - F.Ranjard - 900626
   - Input argument    : IOLD   / INTE = data card bank number
                         INEW   / INTE = swap to new bank number
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ADBSWP                                                          
                   |----  JUNIDB                                              
                   |----  IW                                  External        
                   |----  CHAINT                              External        
                   |----  BDADIR                              External        
                   |----  NSWAP                               External        
                   |----  ALGTD1                                              
                   |----  USGTD1                                              
 
3 ADBVER
         SUBROUTINE ADBVER (IVERS,IDATE)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
    ALEF DBASE STC LTC VERSION / USER
    F.Ranjard - 881110
                900111 : introduce LTC version
   Return  daf version# and date of last change
    Output: IVERS   = DAF version version
            IDATE   = DAF date of last change
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KINIT                                                                      
   KXL74A                                                                     
   KXL7PA                                                                     
   KXLUPA                                                                     
   BKRHAL                                                                     
   GTDBAS                                                                     
        |---- ADBVER                                                          
                   |----  JUNIDB                                              
                   |----  MDARD                               External        
                   |----  ITABL                               External        
                   |----  IW                                  External        
                                                                              
 
3 AGETDB
         INTEGER FUNCTION AGETDB(LIST,IRUN)
  ---------------------------------------------------------------------------
    CKEY ALEF BANK DA / USER
  ---------------------------------------------------------------------------
   Load  list list of bank names from the data base for run irun
   - F.Ranjard - 881209                modified - 890803
    Input  :   LIST  = list of banks names to be accessed from data base
                       single name or list of names
               IRUN  = current run number
    Ouput : AGETDB = > 0  if existing bank(s) are still valid
                     = 0  if error occurs ( no valid bank found)
                     < 0  if one or more existing banks were reloaded
    The routine assumes that the data base has the logical unit #
    JUNIDB(0) and calls ALGTDB for this unit #.
    for details look at ALGTDB
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   GTT0GL                                                                     
   TCHKHV                                                                     
   BGETDS                                                                     
   IFECON                                                                     
   IGEOMW                                                                     
   IINALI                                                                     
   IINRES                                                                     
   FRFTDP                                                                     
   STMASK                                                                     
   TLACOC                                                                     
   TLACOP                                                                     
   TLACOR                                                                     
   TPDVEL                                                                     
   TZCRVD                                                                     
   TZCSVD                                                                     
   X1INI                                                                      
   X1IRUN                                                                     
   X1RSUM                                                                     
   VTRLAS                                                                     
        |---- AGETDB                                                          
                   |----  JUNIDB                                              
                   |----  ALGTDB                                              
                                                                              
 
3 AGTFIL
         SUBROUTINE AGTFIL (CARD,FLGIO,LUN,IER)
  ---------------------------------------------------------------------------
    CKEY ALEF OPEN READ WRITE / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 891208
   Open a file given on data card
   - Input  : CARD   / CHA4  = data card name
              FLGIO  / CHA4  = 'READ' or 'WRIT'
              LUN    / I     = logical unit number
   - Output : IER    / I     = return code
                               = 0 means OK
                               = -1 no such data card
    check that the data card CARD is present.
    if it it there get the fname,ftype,fdevice
    open the file on unit # LUN in FLGIO (READ or WRITe) mode
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALFMT                                                                      
   ALK7OP                                                                     
   AOPDBS                                                                     
        |---- AGTFIL                                                          
                   |----  ACDARG                                              
                   |----  LNBLNK                              External        
                   |----  AOPEN                                               
                   |----  AOPENW                                              
                   |----  IW                                  External        
                   |----  AWERRC                                              
                                                                              
 
3 ALBOS
         SUBROUTINE ALBOS (NAME,NR,LE,KNDX,IGARB)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 870427
   Book/enlarge a bank with name='name', number=nr, length=le
   - Return bank index=KNDX
   - IGARB is set to 1 if a garbage collection occured
   - If not enough space to book/enlarge the bank call ALTELL
   - Calls    NBANK, BGARB                   from BOS77.hlb
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ITDCOR                                                                     
   X2TRIG                                                                     
        |---- ALBOS                                                           
                   |----  NBANK                               External        
                   |----  BGARB                               External        
                   |----  ALTELL                                              
                                                                              
 
3 ALDAWR
         SUBROUTINE ALDAWR (IW,LUN,LIST)
  ---------------------------------------------------------------------------
    CKEY ALEF WRITE BANK DA
  ---------------------------------------------------------------------------
   - F.Ranjard - 900517
   Write list of banks on direct access bos file
   - Input:    IW      / INTE = BOS array
               LUN     / INTE = d.a file logical unit
               LIST    / A    = list of banks to be written
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALDAWR                                                          
                   |----  NLISTB                              External        
                   |----  NAMIND                              External        
                   |----  BDAWR                               External        
 
3 ALDTYP
         SUBROUTINE ALDTYP(ILEV)
  ---------------------------------------------------------------------------
    CKEY ALEF DATA TYPE / USER
  ---------------------------------------------------------------------------
   Finds the category of data : kin,raw,pot,dst,mdst
   Author     J. Boucrot     26-AUG-1988
     ALGTYP                                      from  ALEPHLIB
    bank : RHAH (or RHOH)  or  AJOB  or  KRUN  or RUNH
    argument :
      ILEV = 1 : KINGAL data
           = 2 :  RAW           = 3     POT      = 4     DST
           = 5 :  MINI          = 6    MICRO     = 7     NANO
    No other value is allowed for Aleph data  ( ILEV =0 )
    For JULIA outputs , this routine works properly only for files
    created with versions 2.19 onwards .
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALDTYP                                                          
                   |----  ALGTYP                                              
                   |----  IW                                  External        
                   |----  NAMIND                              External        
                   |----  ITABL                               External        
                   |----  LROWS                               External        
                   |----  MOD                                 External        
                   |----  NLINK                               External        
 
3 ALEVEH
         INTEGER FUNCTION ALEVEH ( NEVT,NEXPE,NRUN,BEAM,IRTYP,ISTAT)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 861003
   Build the eveh bank
   - Input  : NEVT   = event #
              NEXPE  = experiment #
              NRUN   = run #
              BEAM   = beam energy
              IRTYP  = run type
              ISTAT  = status word
   - Output : ALEVEH = EVEH bank index
                       0 means not enough space to book the bank
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KEEVT                                                                      
        |---- ALEVEH                                                          
                   |----  AUBOS                                               
                   |----  BKFMT                               External        
                                                                              
 
3 ALFIND
         INTEGER FUNCTION ALFIND (LIST,NAME)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 880301
   Find name bank in list list
   - Input  : LIST   = list name
               NAME  = bank name which is searched
   - Output : ALFIND = serial number of the NAME bank in the list
                       0 means the bank is not in the list
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   VTRLAS                                                                     
        |---- ALFIND                                                          
                   |----  NLISTB                              External        
                                                                              
 
3 ALFMT
         INTEGER FUNCTION ALFMT (LUFMT,NAME,FMT)
  ---------------------------------------------------------------------------
    CKEY ALEF BOS BANK FORMAT / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 900627
   Get bank format
   - Input     : LUFMT   / INTE  = open BANKAL.FMT on unit LUFMT
                 NAME    / A4    = bank name
                                   if NAME.eq.'ALL ' then create all
                                   formats at once
   - Output    : FMT     / A75  = bank format
                                   if NAME.eq.'ALL ' then FMT=' '
                 ALFMT   / INTE  = error code
                                   = 0  OK
                                   = 1  no format (default I is used)
   - open BANKAL.FMT which contains format of all known banks
     on unit LUFMT
     IF NAME.eq.'ALL ' THEN
        create formats for all banks found in BANKAL.FMT
     ELSE
        get the format of NAME bank
        call BKFMT for this NAME and Format
     ENDIF
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALFMT                                                           
                   |----  AGTFIL                                              
                   |----  AOPEN                                               
                   |----  IW                                  External        
                   |----  EXIT                                                
                   |----  BKFMT                               External        
                   |----  BOSFMT                              External        
                   |----  LNBLNK                              External        
                   |----  INDEX                               External        
                   |----  MOD                                 External        
 
3 ALGTBK
         INTEGER FUNCTION ALGTBK (NAME,NR,NEW,JCOL,MXROW,LNAMEA,IROW)
  ---------------------------------------------------------------------------
    CKEY ALEF GET BANK DA
  ---------------------------------------------------------------------------
   Create/ get a bank
   - F.Ranjard - 900517
   - Input:    NAME   / A4    = bank name
               NR     / INTE  = bank number
               NEW    / INTE  = row address
               JCOL   / INTE  = col. number to be considered
               MXROW  / INTE  = max. number of rows
               LNAMEA / INTE  = number of columns
   - Output:   ALGTBK / INTE  = NAME BOS index
                                =0 means not enough space
                                <0 means a garbage collection occurded
               IROW   / INTE  = row # for the known NEW
                                0 means NEW does not exist
                                <0 NEW should go in the middle
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALGTBK                                                          
                   |----  NAMIND                              External        
                   |----  JUNIDB                                              
                   |----  IW                                  External        
                   |----  NDANR                               External        
                   |----  MDARD                               External        
                   |----  BGARB                               External        
                   |----  LCOLS                               External        
                   |----  LROWS                               External        
                   |----  LOCTAB                                              
                   |----  LFRROW                              External        
                   |----  AUBOS                                               
 
3 ALGTDB
         INTEGER FUNCTION ALGTDB(LBASE,LIST,KRUN)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   Load  list list of bank names from the data base for run irun
     B. Bloch -Devaux    august 87      modified by - F.Ranjard - 890802
                                                      F.Ranjard - 891001
                                                      F.Ranjard - 900626
               to introduce a data card bank number NRDC.ne.0
                                                      F.Ranjard - 910308
               to remove LTC file and introduce a check on the validity
               range of the data base
    Input  :   LBASE = data base logical unit
               LIST  = list of banks names to be accessed from data base
                       single name or list of names
               KRUN  = current run number
                       make sure that the bank is there
    Ouput : ALGTDB = > 0  if existing bank(s) are still valid
                     = 0  if error occurs ( no valid bank found)
                     < 0  if one or more existing banks were reloaded
    Entry : ALGTD1 (INEW) will set the data card bank number
                          NRDC = INEW
                          ALGTD1 = previous data card bank number
       At 1st entry get the ADBR,NR=0 bank which contains the setup
       code.
       At next entry check whether the run number has changed.
       IF yes THEN
         Check that the opened data base is the right one.
       ELSE
         call AOPDBS again which will use the setup code to open
         the right data base
       ENDIF
       the default priority is: data cards, data base, tape
       a bank can be put on data cards with NR=NRDC. It is used all
       over the job.  NRDC =-1 by default , it can be reset by  the
       user in calling ADBSWP (IOLD,INEW) after reading data cards.
       if a valid bank is found on the data base it is used even
       if the bank is on the tape.
       The priority can be changed to anything provided the user put
       a 'UDAF' data card and gives an INTEGER FUNCTION USGTDB.
       If the run is still in the validity range of the
       bank , the already loaded bank is kept.
       If the run requires a new bank to be loaded, the
       old bank will be dropped before loading the new one.
        So only one bank of a given name is present in the
       Bos common at a given time.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   TDEDXV                                                                     
   TDEDXR                                                                     
   ERDDAF                                                                     
   SNGMTR                                                                     
   HRDDAF                                                                     
   MGINIT                                                                     
   SIRDAF                                                                     
   TGHPAL                                                                     
   TRDDAF                                                                     
   TFCINI                                                                     
   TWRRED                                                                     
   VDAFRD                                                                     
   VDARGE                                                                     
   VGRDAL                                                                     
   VDMSRL                                                                     
   VRLDGT                                                                     
   VTRFIT                                                                     
   AGETDB                                                                     
        |---- ALGTDB                                                          
                   |----  NAMIND                              External        
                   |----  IABS                                External        
                   |----  IW                                  External        
                   |----  GTDBAS                                              
                   |----  USGTDB                                              
                   |----  LNBLNK                              External        
                   |----  NDANR                               External        
                   |----  NDROP                               External        
                   |----  MDARD                               External        
                                                                              
 
3 ALGTLU
         INTEGER FUNCTION  ALGTLU (LUVER,LULMD)
  ---------------------------------------------------------------------------
    CKEY ALEF LUND VERSION KLUN KINGAL / USER
  ---------------------------------------------------------------------------
   - B.Bloch-Devaux 900926
   Finds the jetset version number used for generated events
     Returns  ALGTLU = 1  if the file WAS  generated using JETSET
                     = 0        #     WAS NOT            #
   - Output :  LUVER   = JETSET version number ( 703 FOR 7.3 VERSION )
               LULMD   = JETSET date of last modification
                            (900918 is 18 September 1990)
    banks : KLUN ,  KRUN
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALGTLU                                                          
                   |----  NLINK                               External        
                   |----  ITABL                               External        
 
3 ALGTRO
         INTEGER FUNCTION ALGTRO (NAME,NEW,JCOL,IROW)
  ---------------------------------------------------------------------------
    CKEY ALEF GET BANK DA
  ---------------------------------------------------------------------------
   Get a row of a bank
   - F.Ranjard - 900517
   - Input:    NAME   / A4    = bank name
               NEW    / INTE  = element which is looking for
               JCOL   / INTE  = col. number to be considered
   - Output:   ALGTRO / INTE  = NAME BOS index
                                =0 means not enough space
                                <0 means a garbage collection occurded
               IROW   / INTE  = row # for the known NEW
                                0 means NEW<ITABL(JNAME,1,JCOL)
                                <0 means
                      ITABL(JNAME,IROW,JCOL)<NEW<ITABL(JNAME,IROW+1,JCOL)
                                 = - LROWS(JNAME) means
                                  NEW>ITABL(JNAME,LROWS(JNAME),JCOL)
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   GETLUM                                                                     
   GETS4B                                                                     
   GETSLU                                                                     
   GETXYB                                                                     
        |---- ALGTRO                                                          
                   |----  NAMIND                              External        
                   |----  JUNIDB                                              
                   |----  IW                                  External        
                   |----  GTDBAS                                              
                   |----  NDANR                               External        
                   |----  MDARD                               External        
                   |----  BGARB                               External        
                   |----  ITABL                               External        
                   |----  LROWS                               External        
                   |----  LCOLS                               External        
                   |----  LOCTAB                                              
                                                                              
 
3 ALGTYP
         INTEGER FUNCTION  ALGTYP(IGEAN,ISIMD,IFAST,ITPCS)
  ---------------------------------------------------------------------------
    CKEY  ALEF GALEPH TYPE / USER
  ---------------------------------------------------------------------------
   Finds the galeph tracking level for a file of simulated events
   Author     J. Boucrot     26-AUG-1988
    banks : AJOB ,  TSIM
     Returns  ALGTYP = 1  if the file WAS     processed through GALEPH
                     = 0        #     WAS NOT            #
    arguments :
     IGEAN = 1   Geant tracking was used ;  = 0  other tracking
     ISIMD = 1   SIMDST smearing and DST writing  ; = 0   no SIMDST
     IFAST = 1   FAST tracking was used  ;  = 0   other tracking
     ITPCS = 1   TPCSIM digitisation was done  ;   = 0   not done
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALDTYP                                                                     
   BKRHAB                                                                     
        |---- ALGTYP                                                          
                   |----  NLINK                               External        
                   |----  ITABL                               External        
                   |----  MOD                                 External        
                                                                              
 
3 ALINST
         SUBROUTINE ALINST(CHSTR,ITAB,NWDS)
  ---------------------------------------------------------------------------
    CKEY  ALEF CHARACTER INTEGER / USER
  ---------------------------------------------------------------------------
   Transform a character string chstr of arbitrary length
    into its integer representation
   Author     J. Boucrot     25-Nov-1988
    argument :  CHSTR = character string
    arguments :
     ITAB = array of integer representations
     NWDS = number of words filled in ITAB
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALK7FIL                                                                    
   ALK7TRU                                                                    
        |---- ALINST                                                          
                   |----  LNBLNK                              External        
                   |----  INTCHA                              External        
                   |----  MIN                                 External        
                                                                              
 
3 ALK7FIL
          SUBROUTINE ALK7FIL (TAPE,IRET)
  ---------------------------------------------------------------------------
    CKEY ALEF RUN TAPE / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 920114
   Set the fili card for a given k7
   - Input   : TAPE       / A  = tape number i.e. AA1234_99
   - Output  : IRET       / I  = return code
                                 =0  Ok
                                 =1  no K7
                                 =2  no space to create FILI card
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALK7FIL                                                         
                   |----  ACARD1                                              
                   |----  NDROP                               External        
                   |----  NBANK                               External        
                   |----  LNBLNK                              External        
                   |----  INDEX                               External        
                   |----  ALINST                                              
                   |----  IW                                  External        
 
3 ALK7FRU
         INTEGER FUNCTION ALK7FRU (LURUK7,IRUN,TYPE,TAPE)
  ---------------------------------------------------------------------------
    CKEY ALEF TAPE  RUN / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 900627
   Get cartridge number for a given type of a given run
   - Input     : LURUK7  / INTE  = open RUK7FILE.UPDATE on unit LURUK7
                 IRUN    / INTE  = run number
                 TYPE    / A     = data type
                                   'RAW'/'POT'/'DST'/'MINI/NANO'
   - Output    : TAPE     / A      = tape number i.e. AS1234_98
                 ALK7FRU   / INTE  = error code
                                   = 0  OK
                                   = 1  cannot open RUK7FILE
                                   = 2  file is empty
                                   = 3  too many runs, increase K7COM
                                   = 13 wrong data type
                                   = 14 run does not exist
   - open RUNCARTSLIST which contains for each run the number
     of the CERN cartridges in the order : RAW/POT/DST/MINI/NANO
     on unit LURUK7
     IF IRUN is in the list THEN
        return in TAPE the cartridge number corresponding to
        the data type wanted
     ENDIF
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALK7FRU                                                         
                   |----  ALK7OP                                              
                   |----  INDEX                               External        
                   |----  LOCATI                              External        
                   |----  K7LRUN                              External        
                   |----  K7LINE                              External        
                   |----  K7CART                              External        
 
3 ALK7OP
         INTEGER FUNCTION ALK7OP (LURUK7)
  ---------------------------------------------------------------------------
    CKEY ALEF TAPE  RUN / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 900627
   Open runcartslist   file and read it
   - Input     : LURUK7  / INTE  = open RUNCARTSLIST   on unit LURUK7
   - Output    :
                 ALK7OP    / INTE  = error code
                                   = 0  OK
                                   = 1  cannot open RUNCARTS file
                                   = 2  file is empty
                                   = 3  too many runs, increase ALK7COM
   - open RUNCARTSLIST which contains for each run the number
     of the CERN cartridges in the order : RAW/POT/DST/MINI/NANO
     on unit LURUK7
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALK7FRU                                                                    
   ALK7TRU                                                                    
        |---- ALK7OP                                                          
                   |----  AGTFIL                                              
                   |----  AOPEN                                               
                   |----  ALTELL                                              
                   |----  IW                                  External        
                                                                              
 
3 ALK7TRU
         INTEGER FUNCTION ALK7TRU (LURUK7,TYPE,TAPE,JDRUNL)
  ---------------------------------------------------------------------------
    CKEY ALEF TAPE  RUN / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 900627
   Get list of runs of a given type residing on a given tape
   - Input     : LURUK7  / INTE  = open RUK7FILE.UPDATE on unit LURUK7
                 TYPE    / A     = data type
                                   'RAW'/'POT'/'DST'/'MINI'/'NANO'
                 TAPE    / A     = tape number
   - Output    : ALK7FRU   / INTE  = error code
                                   = 0  OK
                                   = 1  cannot open RUK7FILE
                                   = 2  empty file
                                   = 3  too many runs, increase K7COM
                                   = 23 wrong data type
                                   = 24 JDRUNL bank does not exist
                                   = 25 TAPE does not exist
     IF TAPE is in the list THEN
        return in JDRUNL work bank the list of runs present on TAPE
        IW(JDRUNL+1) = INTCHA(TAPE(1:4))
        IW(JDRUNL+2) = INTCHA(TAPE(5:8))
        IW(JDRUNL+3) = INTCHA(TAPE(9:12))
        IW(JDRUNL+4) = number of runs on TAPE
        IW(JDRUNL+5) = 1st run on TAPE
        ...
        IW(JDRUNL+IW(JDRUNL+4)) = last run on TAPE
     ENDIF
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALK7TRU                                                         
                   |----  WBANK                               External        
                   |----  INTCHA                              External        
                   |----  ALK7OP                                              
                   |----  LNBLNK                              External        
                   |----  ALTELL                                              
                   |----  ALSTIN                                              
                   |----  INDEX                               External        
                   |----  K7CART                              External        
                   |----  ALINST                                              
                   |----  K7LRUN                              External        
 
3 ALMACH
          SUBROUTINE  ALMACH (NAME)
  ---------------------------------------------------------------------------
    CKEY IO MACHINE / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 921014
   Returns the historian flags used to make the library
   - Modified by - P. Comas - 940608
                  distinguish between VAX or Alpha
   - Output : NAME  / A : Machine name
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   BKRHAL                                                                     
        |---- ALMACH                                                          
                   |----  LIB                                 External        
                   |----  GETSYI                              External        
                   |----  LNBLNK                              External        
                   |----  LEN                                 External        
                   |----  MIN                                 External        
                                                                              
 
3 ALREDB
         INTEGER FUNCTION ALREDB (LBASE,LIST)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 870505
   Read the data base
   - input   : LBASE = data base logical unit (must be .ne. 0)
               LIST  = list of bank names to be retreived
   - output  : ALREDB= # of banks found (0 if error)
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALREDB                                                          
                   |----  IW                                  External        
                   |----  MREADC                              External        
                   |----  CHAINT                              External        
                   |----  NLIST                               External        
                   |----  BLIST                               External        
                   |----  BDROP                               External        
 
3 ALRUNE
         INTEGER FUNCTION ALRUNE ( NRUN,NEXPE,IRTYP,MEVT )
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   Build the rune bank
   - F.Ranjard - 861003
   - Input :  NRUN   = run #
              NEXPE  = experiment #
              IRTYP  = run type
              MEVT   = number of events in the run
   - Output : ALRUNE = RUNE bank index
                       0 means not enough space to book the bank
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KEJOB                                                                      
        |---- ALRUNE                                                          
                   |----  AUBOS                                               
                   |----  BKFMT                               External        
                   |----  DATIME                              External        
                                                                              
 
3 ALRUNH
         INTEGER FUNCTION ALRUNH ( NRUN,NEXPE,IRTYP)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 861003
   Build the runh bank
   - Input :  NRUN   = run #
              NEXPE  = experiment #
              IRTYP  = run type
   - Output : ALRUNH = RUNH bank index
                       0 means not enough space to book the bank
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KINIT                                                                      
   KMRUNH                                                                     
        |---- ALRUNH                                                          
                   |----  DATIME                              External        
                   |----  AUBOS                                               
                   |----  BKFMT                               External        
                                                                              
 
3 ALRUNR
         INTEGER FUNCTION ALRUNR (NEXPE,NRUN)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 880222
   Build the runr bank
   - Input : NEXPE  = experiment #
             NRUN   = run #
   - Output: ALRUNR = RUNR bank index
                      0 means not enough space to book the bank
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KINIT                                                                      
   KMRUNH                                                                     
        |---- ALRUNR                                                          
                   |----  AUBOS                                               
                   |----  BKFMT                               External        
                                                                              
 
3 ALSEED
         SUBROUTINE ALSEED(IRGEN,ISEED1,ISEED2)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - Author : B.Bloch-Devaux -890201
   Returns original seeds from rndm random generator
   - Structure : SUBROUTINE subprogram
                 User Entry Name :ALSEED
                 External references :RDMOUT
                 Comdecks references : none
   - Input : none
   - Output : IRGEN = generator ident (1 is RNDM)
              ISEED1= first original seed
              ISEED2= second original seed,irrelevant for RNDM
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALKEVH                                                                     
   ALKRUN                                                                     
        |---- ALSEED                                                          
                   |----  RDMOUT                              External        
                                                                              
 
3 ALSTHO
         SUBROUTINE ALSTHO(ITAB,NWDS,CHSTR)
  ---------------------------------------------------------------------------
    CKEY  ALEF CHARACTER HOLLERITH / USER
  ---------------------------------------------------------------------------
   Transform an array of hollerith  into the corresponding character string
   Author     F.Ranjard - 901220
    arguments :
     ITAB = array of holleriths
     NWDS = number of words filled in ITAB
    argument :  CHSTR = character string
    is blank if NWDS = 0
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALSTHO                                                          
                   |----  CHAHOL                                              
                   |----  MAX0                                External        
 
3 ALSTIN
         SUBROUTINE ALSTIN(ITAB,NWDS,CHSTR)
  ---------------------------------------------------------------------------
    CKEY  ALEF CHARACTER INTEGER / USER
  ---------------------------------------------------------------------------
   Transform an array of char. integer representations
    into the corresponding character string
   Author     J. Boucrot     25-Nov-1988
    arguments :
     ITAB = array of integer representations
     NWDS = number of words filled in ITAB
    argument :  CHSTR = character string
    is blank if NWDS = 0
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ACARD2                                                                     
   CRFILM                                                                     
   ALK7TRU                                                                    
   GTDBAS                                                                     
        |---- ALSTIN                                                          
                   |----  CHAINT                              External        
                   |----  MAX0                                External        
                                                                              
 
3 ALSTRI
         SUBROUTINE ALSTRI(STR,CHLIM,NWMAX,CHOUT,NWORD)
  ---------------------------------------------------------------------------
    CKEY ALEF CARD STRING / USER
  ---------------------------------------------------------------------------
   Blow character string str into character array chout, limiter chlim
     Author     :Ronald Hagelberg        17-APR-91
    Remove all laeding and trailing blanks of the character string STR
    Blow character string STR into character array CHOUT according to
    limiter character CHLIM. Generaly CHLIM will be the blank ' ' , but
    could be as well e.g. '|' .
      Inputs: STR    CHARARACTER string with length to be defined
                           in the calling program
              CHLIM  CHARARACTER*1 delimiting the substrings
              NWMAX  Dimension of CHOUT, Maximum Number of substrings
   
      Output: CHOUT  ARRAY of CHARARACTER Strings, with dimension
                     and length to be defined in calling program.
              NWORD  Number of substrings found
   
      Example of character string:
                            SMCF   I25138  -K   Wait  SIZE   200 FS 1
      taken here from a FILI card:
    FILI 'ALDATA | EPIO |   SMCF   I25138  -K   Wait  SIZE   200 FS 1 '
      The syntactical separator CHLIM  is here the blank ' '.
      ABCD 'PARM1 | XYZ   | PARM3 | | PARM5|PARM6   '
      The syntactical separator CHLIM  is here  '|'.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ACARD2                                                                     
   ACDARG                                                                     
   AOPTAP                                                                     
        |---- ALSTRI                                                          
                   |----  LNBLNK                              External        
                                                                              
 
3 ALTABL
         INTEGER FUNCTION ALTABL (NAME,NCOL,NROW,TABL,FMT,LIST)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - J.Boucrot - F.Ranjard - 870516
   Book tabular bank 'name',nr=0
    then Fill it with the array given in a tabular format,
         Give a format and Put on a list
   - structure: INTEGER FUNCTION subprogram
                User Entry Name: ALTABL
                External References: AUBOS(ALEPHLIB), BKFMT/BLIST(BOS77)
                                     UCOPY(CERNLIB)
                Comdecks referenced: BCS
   - Usage   : JTABL   = ALTABL (NAME,NCOL,NROW,TABL,FMT,LIST)
   - Input   : NAME    = bank name (up to 4 characters)
               NCOL    = # of columns
               NROW    = # of rows
               TABL    = array containing the table (REAL or INTEGER)
               FMT     = bank format (character string)
               LIST    = list on wich the bank must be put onto
   - Output  : ALTABL  = bank index
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ASKUSI                                                                     
   KXL7AL                                                                     
   KXLUAL                                                                     
        |---- ALTABL                                                          
                   |----  AUBOS                                               
                   |----  UCOPY                               External        
                   |----  RW                                  External        
                   |----  BKFMT                               External        
                   |----  BLIST                               External        
                                                                              
 
3 ALTELL
         SUBROUTINE ALTELL (TEXT,IERR,TAXION)
  ---------------------------------------------------------------------------
    CKEY IO / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 870105
   Print text and take action
   - print text 'TEXT' if not blank
   - increment error counter# IERR if in the range [1,LERR]
     if IERR=0 : no error set
   - take action 'TAXION':
        TAXION = RETURN  : continue
                 NEXT    : go to end of event, then next event
                 STOP    : stop the program without run summary
                 END     : end of job
                 FATAL   : fatal error , trace back , end of job
                 INIT    : 1st call to initialize /JOBERR/
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UFTKAL                                                                     
   UFTOME                                                                     
   UFTTAL                                                                     
   UFTMOM                                                                     
   UFTFIL                                                                     
   DALINF                                                                     
   UFSWIM                                                                     
   UFVDIN                                                                     
   UFVDOU                                                                     
   UFVDMS                                                                     
   TBTBLK                                                                     
   TBTBLP                                                                     
   TDXERR                                                                     
   TPXERR                                                                     
   IINRES                                                                     
   IRDDAF                                                                     
   TGHPAL                                                                     
   THTRAN                                                                     
   TLACOC                                                                     
   TLACOP                                                                     
   TLACOR                                                                     
   TWRRED                                                                     
   TZCRVD                                                                     
   TZCSVD                                                                     
   X1IRUN                                                                     
   X1PREP                                                                     
   X1RSUM                                                                     
   X2LUTS                                                                     
   VDMSRL                                                                     
   VDMSUP                                                                     
   VRLDGT                                                                     
   VTRKEX                                                                     
   ALBOS                                                                      
   ALK7OP                                                                     
   ALK7TRU                                                                    
   GTDBAS                                                                     
        |---- ALTELL                                                          
                   |----  EXIT                                                
                   |----  IW                                  External        
                   |----  MIN                                 External        
                   |----  QNEXTE                              External        
                                                                              
 
3 ALVSN
         SUBROUTINE ALVSN(ITYP,IPV,IAV,IYR)
  ---------------------------------------------------------------------------
    CKEY ALEF DATA TYPE / USER
  ---------------------------------------------------------------------------
   Return data type and version numbers of aleph programs from rhah.
   Author: S.Haywood        22-DEC-1992
    banks:      RHAH, ASIM
    arguments: ITYP    = data type (as read in)
                               1=Kingal; 2=Raw; 3=Pot; 4=DST; 5=Mini;
                               6=Micro; 7=Nano
                     IPV(10) = version numbers of ALEPH programs.
                               1: Kingal
                               2: Galeph
                               3: Julia
                               4: Redpot
                               5: Mini
                               6: Nano
                               7: Alpha
                     IAV(10) = corresponding ALEPHLIB version.
                     IYR     = year when data taken (89,90,91,92,....)
                               or to which MC corresponds
    is a more robust version of ALDTYP, however it only uses RHAH and
    intended for use in Alpha.
    be effective, it should be called before the RHAH bank is modified
    case of event output. For a given run, information is saved to
    against this situation.
    case of repeated entries, the last entry is taken.
    the data is DATA or MC can be determined from checking whether
   (1) (the Kingal code) is 0 or not.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              ALVSN                                                           
                   |----  ABRUEV                                              
                   |----  IW                                  External        
                   |----  NAMIND                              External        
                   |----  LROWS                               External        
                   |----  ITABL                               External        
                   |----  CHAINT                              External        
 
3 AOPDBS
         SUBROUTINE AOPDBS(FNAME,IRC)
  ---------------------------------------------------------------------------
    CKEY ALEF OPEN DB / USER
  ---------------------------------------------------------------------------
   Open  aleph database ( def= adbscons daf )
   - Author:   D.Schlatter
   - modified by: F.Ranjard - 890302
                            - 920513 - use the ALEPH name
     Input:    FNAME       filename,
                           if '  ' then
                             try to get file from FDBA data card
                             if OK return
                           endif
                             try to open 'ADBSCONS' from the environment
                           endif
     Output:   IRC         zero for successful opening
     Calls:    AOPEN , JUNIDB
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALRWEV                                                                     
   KINIT                                                                      
   GTDBAS                                                                     
   COTEST                                                                     
        |---- AOPDBS                                                          
                   |----  JUNIDB                                              
                   |----  AGTFIL                                              
                   |----  AOPEN                                               
                                                                              
 
3 AUBLIS
         SUBROUTINE AUBLIS (LIST)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 860704
   Print the list of banks which are on the 'list' list.
   - Calls   NLISTB,NAMIND                        from BOS77.lib
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              AUBLIS                                                          
                   |----  IW                                  External        
                   |----  NLISTB                              External        
                   |----  NAMIND                              External        
 
3 AUBOS
         SUBROUTINE AUBOS (NAME,NR,LE,KNDX,IGARB)
  ---------------------------------------------------------------------------
    CKEY ALEF BOS BANK / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 851016
   - modified by : F.Ranjard - 900220 - to call USBOS
   Book/enlarge a bank with name='name', number=nr, length=le
   - Return bank index=KNDX
   - IGARB is set to 1 if a garbage collection occured
                     2 if not enough space after garbage coll.
   - Calls    NBANK, BGARB                   from BOS77.hlb
              USBOS                          from ALEPHLIB.hlb
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALKEVH                                                                     
   ALKJOB                                                                     
   ALKLUN                                                                     
   ALKRUN                                                                     
   ALRLEP                                                                     
   FYFKIN                                                                     
   FYTOKI                                                                     
   GAPGAC                                                                     
   GAPGPC                                                                     
   ICRCOO                                                                     
   ILATCH                                                                     
   ILIVEW                                                                     
   IMICCO                                                                     
   ITQUAL                                                                     
   IUPCCO                                                                     
   KBKINE                                                                     
   KBKLIN                                                                     
   KBPART                                                                     
   KBVERT                                                                     
   HRHTUB                                                                     
   MRMHIT                                                                     
   MUIDO                                                                      
   GAPGID                                                                     
   FPTOJ                                                                      
   IPTOJ                                                                      
   PCMECU                                                                     
   PECHIC                                                                     
   PEIDTJ                                                                     
   PHCHIC                                                                     
   PHMADJ                                                                     
   PHSTOJ                                                                     
   PITMAJ                                                                     
   PSCOOJ                                                                     
   PSTCPJ                                                                     
   PTBCOJ                                                                     
   PTEXSJ                                                                     
   PTGMAJ                                                                     
   PTPCOJ                                                                     
   TFILTU                                                                     
   TSRTCO                                                                     
   TWRRED                                                                     
   SIX2MK                                                                     
   SIXAMK                                                                     
   X1PREP                                                                     
   X1TRG                                                                      
   X1TRIG                                                                     
   X2LUTS                                                                     
   X2TRIG                                                                     
   VRVMBE                                                                     
   VDMSUP                                                                     
   VTRFIT                                                                     
   VTRKEX                                                                     
   YSVVTX                                                                     
   YTCONV                                                                     
   YTPVTX                                                                     
   YTRV0S                                                                     
   YMFV0V                                                                     
   YMFV00                                                                     
   ALEVEH                                                                     
   ALGTBK                                                                     
   ALRUNE                                                                     
   ALRUNH                                                                     
   ALRUNR                                                                     
   ALTABL                                                                     
   BKRHAB                                                                     
   BKRHAL                                                                     
   BKTOBK                                                                     
   CAFIHT                                                                     
   UTWOEX                                                                     
        |---- AUBOS                                                           
                   |----  NBANK                               External        
                   |----  BGARB                               External        
                   |----  USBOS                                               
                                                                              
 
3 AUBPRS
         SUBROUTINE AUBPRS (LIST)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.RANJARD - 860307
   Compress the banks put on the list 'list', following the
     convention : bank length = 1st word * 2nd word + LMHLEN
   - Calls       NLISTB, NBANK                   from BOS77.hlb
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   GAPGAC                                                                     
   GAPGPC                                                                     
   ITDCOR                                                                     
   KXL74A                                                                     
   KXL7PA                                                                     
   KXLUPA                                                                     
   GAPGID                                                                     
   PECHIC                                                                     
   PHCHIC                                                                     
   VTRFIT                                                                     
   BKRHAW                                                                     
   CAFIHT                                                                     
        |---- AUBPRS                                                          
                   |----  NLISTB                              External        
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  NDROP                               External        
                   |----  NBANK                               External        
                                                                              
 
3 BABEND
         SUBROUTINE BABEND(TEXT)
  ---------------------------------------------------------------------------
    CKEY IO BOS ABEND
  ---------------------------------------------------------------------------
   - V.Blobel - from BOS77                        F.Ranjard - 870203
   Call trace back in case of bos fatal error
   - Print 'TEXT' then call traceback routine
   - called by several BOS77 routines
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABREAD                                                                     
        |---- BABEND                                                          
                   |----  IW                                  External        
                   |----  BOSBK                               External        
                                                                              
 
3 BKCARI
         SUBROUTINE BKCARI(INTN,NDIG,COUT)
  ---------------------------------------------------------------------------
    CKEY BOOK CHARACTER INTEGER / USER
  ---------------------------------------------------------------------------
   Converts an integer into character string
    J. Boucrot       28-Sep-1988    modified 12-Jan-1989
    Converts an integer with the restriction IABS(INTN) < 2**32-1),
      into the corresponding character  string COUT of NDIG characters
      IF NDIG > nb of digits of the integer , COUT is filled with '0'
      in front of the meaningful digits :
          e.g. INTN = 89     NDIG = 5  --->  COUT = '00089'
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              BKCARI                                                          
                   |----  ICHAR                               External        
                   |----  CHAR                                External        
                   |----  MAX0                                External        
                   |----  LNBLNK                              External        
 
3 BKINCA
         INTEGER FUNCTION BKINCA(CHSTR)
  ---------------------------------------------------------------------------
    CKEY BOOK  CHARACTER INTEGER / USER
  ---------------------------------------------------------------------------
   Transforms the character representation of an integer into this integ
    argument :
     CHSTR = character string containing only an integer ( 9 digits max)
     + or - as first character is allowed ( e.g. :  '-123456'  )
     any other character inside the string stops the conversion
    value BKINCA = integer value ( with eventually its sign )
                       = 0 if too large integer
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              BKINCA                                                          
                   |----  LNBLNK                              External        
                   |----  ICHAR                               External        
 
3 BKRHAB
         SUBROUTINE BKRHAB(JRHAH)
  ---------------------------------------------------------------------------
    CKEY BOOK RUN HEADER / INTERNAL
  ---------------------------------------------------------------------------
   Books and fills the rhah bank for mc or online steps
   Author     J. Boucrot     25-Sep-1988    Modified  02-Feb-1989
   Auxiliary to BKRHAW                           from ALEPHLIB
    User-callable
    AUBOS,ALGTYP                            from ALEPHLIB
    argument : bank index JRHAH if all is OK
                    = 0 if no space to book the bank
    banks needed  :  RUNH  ; AJOB,KJOB ( for Monte-Carlo data)
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   BKRHAW                                                                     
        |---- BKRHAB                                                          
                   |----  IW                                  External        
                   |----  ITABL                               External        
                   |----  AUBOS                                               
                   |----  KROW                                External        
                   |----  INTCHA                              External        
                   |----  UCOPY                               External        
                   |----  ALGTYP                                              
                   |----  LCOLS                               External        
                   |----  NAMIND                              External        
                                                                              
 
3 BKRHAL
         SUBROUTINE BKRHAL(PRNAM,IPVER,ICVER,NATOU,IFAIL)
  ---------------------------------------------------------------------------
    CKEY BOOK RUN HEADER / INTERNAL
  ---------------------------------------------------------------------------
   Enlarges and fills the bank rhah (  run header analysis history )
    according to the input arguments
   Author     J. Boucrot     25-Sep-1988   modified 02-Feb-1989
   Auxiliary to BKRHAW                          from ALEPHLIB
    User-callable
    AUBOS,ALVERS,ADBVER                    from ALEPHLIB
    arguments :
      PRNAM  : Name of the production program ( JULIA or ALPHA )
      IPVER  : Program version number
      ICVER  : Correction set version number
      NATOU  : Code for the output written by the calling program:
                2 = RAW           3 = POT           4 = DST
                5 = MiniDST       6 = MicroDST      7 = NanoDST
    argument :  IFAIL = 0 if all OK ,  =1 if no room for RHAH
    P. Comas  8-JUN-1994, Store computer type in last word of RHAH
                                   after a call to ALMACH from ALEPHLIB.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   BKRHAW                                                                     
        |---- BKRHAL                                                          
                   |----  IW                                  External        
                   |----  LROWS                               External        
                   |----  LCOLS                               External        
                   |----  AUBOS                                               
                   |----  KROW                                External        
                   |----  INTCHA                              External        
                   |----  DATIME                              External        
                   |----  ALMACH                                              
                   |----  ALVERS                                              
                   |----  ADBVER                                              
                   |----  NINT                                External        
                   |----  ITABL                               External        
                                                                              
 
3 BKRHAW
         SUBROUTINE BKRHAW(PRNAM,IPVER,ICVER,NATOU,IFAIL)
  ---------------------------------------------------------------------------
    CKEY BOOK RUN HEADER / INTERNAL
  ---------------------------------------------------------------------------
   Fills the rhah bank ( run header analysis history )
    Called at each beginning of run , in JULIA or ALPHA  ,
    for each output stream
    Calls BKRHAB,BKRHAL                              from ALEPHLIB
    Calls BKFMT                                      from BOS77
   Author     J. Boucrot  25-Sep-1988  , modified 02-Feb-1989
    arguments :
     PRNAM = Name of the calling program : JULIA , ALPHA
     IPVER = Version number of the calling program
     ICVER = Correction set version number
     NATOU = Code for the nature of what is being written :
                3 = POT           4 = DST           5 = MiniDST
                6 = MicroDST      7 = NanoDST
    argument :
     IFAIL = 0 if all OK
           = 1 if RHAH bank could not be booked / enlarged
           = 2 if no RUNH bank , or wrong input arguments
    bank needed :  RUNH
    P. Comas  8-JUN-1994, change RHAH format so that last word
                                   is character to store the computer type.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              BKRHAW                                                          
                   |----  BKFMT                               External        
                   |----  NAMIND                              External        
                   |----  MOD                                 External        
                   |----  IW                                  External        
                   |----  BKRHAB                                              
                   |----  LROWS                               External        
                   |----  AUBPRS                                              
                   |----  BKRHAL                                              
 
3 BKTOBK
         SUBROUTINE BKTOBK (BANK1,NR1,BANK2,NR2)
  ---------------------------------------------------------------------------
    CKEY ALEF BANK COPY
  ---------------------------------------------------------------------------
   - F.RANJARD - 950518
   Copy bank1,nr1 into bank2,nr2
   - Input  : BANK1  /A = input bank name
              NR1    /I = input bank number
              BANK2  /A = output bank name
              NR2    /I = output bank number
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              BKTOBK                                                          
                   |----  NLINK                               External        
                   |----  AUBOS                                               
                   |----  IW                                  External        
                   |----  UCOPY                               External        
                   |----  NAMIND                              External        
                   |----  IGTFMT                                              
                   |----  TRFMTR                              External        
                   |----  BKFMT                               External        
 
3 CAFIHT
         INTEGER FUNCTION CAFIHT (NCAHI,TCAHT)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 881213
   Fill bank caht using bank cahi
    CAHT stands for a detector HiT bank known by its name-index NCAHT
    CAHI stands for a detector HIstory bank known by its name TCAHI
   - Input  : NCAHI / I  = name-index of the history bank
              TCAHT / A  = name of the HIT bank
   - Output : CAFIHT/ I  = index of name-bank TCAHT
                           if 0 means not enough space
     a work bank CKEY with index JDCKEY is created, filled and dropped.
     if CAHT bank exists when entering the routine it is dropped.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              CAFIHT                                                          
                   |----  IW                                  External        
                   |----  LROWS                               External        
                   |----  LCOLS                               External        
                   |----  BDROP                               External        
                   |----  AUBOS                                               
                   |----  WBANK                               External        
                   |----  INTCHA                              External        
                   |----  KROW                                External        
                   |----  SORTZV                              External        
                   |----  KNEXT                               External        
                   |----  AUBPRS                                              
                   |----  WDROP                               External        
 
3 CHAHOL
         CHARACTER*4 FUNCTION CHAHOL(IHOL)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 890301
   Return in chahol the character representation of the hollerith ihol
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALSTHO                                                                     
        |---- CHAHOL                                                          
                   |----  UHTOC                               External        
                                                                              
 
3 DAFRDS
         SUBROUTINE DAFRDS(IUN,IREC,ARR,NDIM,*)
  ---------------------------------------------------------------------------
    CKEY DAF BOS DBASE READ / INTERNAL
  ---------------------------------------------------------------------------
   Direct access read of a single bank
      Author   :- Manuel Delfino        10-JUL-1989
   
      Inputs:
           - IUN = Unit number to be read
           - IREC= Record number to be read
   
      Outputs:
           - ARR = Array to receive the data
           - NDIM= Length of array ARR
           - *   = Alternate return in case of error
   
      Libraries required: NONE
   
      Description
      ===========
      Direct replacement for BOS77 routine for direct access reads
      of single banks. Used to read DAF files. Introduces a cache
      in the database stream in order to avoid hundreds of reads
      of the same record when initializing ALEPH data base.
   
      on VAX, the LINK command must include the routine explicitely:
           ALE:ALEPHLIB/LIB/INCLUDE=(BABEND,DAFRDS),ALE:BOS77/LIB
      ENTRY DAFRST (IUN)
      reset cache before reading a new data base
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              DAFRDS                                                          
                   |----  UCOPY                               External        
 
3 EXIT
   
  ---------------------------------------------------------------------------
    CKEY IO EXIT RS6000
  ---------------------------------------------------------------------------
         SUBROUTINE EXIT
   - R.Johnson - 920327
   Ibmrs6000 has no exit subroutine
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   KINIT                                                                      
   KXL74A                                                                     
   KXL7PA                                                                     
   KXLUBR                                                                     
   TFICOR                                                                     
   TFIMUL                                                                     
   TGTCUR                                                                     
   TIMDIF                                                                     
   ALFMT                                                                      
   ALTELL                                                                     
        |---- EXIT  .                                                         
                                                                              
 
3 FPRROW
         SUBROUTINE FPRROW(LUN,XW,LCOL,LROW1,LROW2,IFMT,LFMT)
  ---------------------------------------------------------------------------
    CKEY IO PRINT BOS BANK
  ---------------------------------------------------------------------------
   - F.Ranjard - 900830     from V.Blobel FPRNN/BOS77
   Print table using format in numeric array ifmt
   - Input:  LUN   / I = print logical unit
             XW    / R = table to be printed
             LCOL  / I = number of columns in the table
             LROW1 / I = print from row# LROW1
             LROW2 / I =       to   row# LROW2
             IFMT  / I = array containing the BOS bank format
             LFMT  / I = length of IFMT array
   - Output: LFMT  / I = if < 0 means that the table was not printed
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   BPRTAB                                                                     
        |---- FPRROW                                                          
                   |----  MIN0                                External        
                   |----  MOD                                 External        
                   |----  PNVF                                External        
                   |----  PNVI                                External        
                   |----  CHAINT                              External        
                   |----  PNVZ                                External        
                   |----  LINEIF                              External        
                                                                              
 
3 GTDBAS
         INTEGER FUNCTION GTDBAS(LBASE,KRUN)
  ---------------------------------------------------------------------------
    CKEY ALEF DBASE
  ---------------------------------------------------------------------------
   Get name of the correct data base and open it
   - F.Ranjard - 910308
    Input  :   LBASE = data base logical unit
               KRUN  = current run number
    Ouput  :  GTDBAS = return code
                     = 0  a correct data base has been opened
       get ADBR,NR=0  which contains the setup code.
           ADBS,NR=0  which contains the version number
           ADBN,NR=0  which contains the name of the data base
       Then check whether the run number has changed.
       IF yes THEN
         Check that the opened data base is the right one.
       ELSE
         call AOPDBS again which will use the setup code to open
         the right data base
       ENDIF
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   LFILRU                                                                     
   TCGXRU                                                                     
   TDFVRU                                                                     
   ALGTDB                                                                     
   ALGTD1                                                                     
   ALGTRO                                                                     
   NAMERU                                                                     
        |---- GTDBAS                                                          
                   |----  IABS                                External        
                   |----  MDARD                               External        
                   |----  ALTELL                                              
                   |----  GTSTUP                                              
                   |----  ITABL                               External        
                   |----  KROW                                External        
                   |----  ALSTIN                                              
                   |----  IW                                  External        
                   |----  LNBLNK                              External        
                   |----  AOPDBS                                              
                   |----  DAFRST                                              
                   |----  BDROP                               External        
                   |----  ADBVER                                              
                                                                              
 
3 GTSTUP
         INTEGER FUNCTION GTSTUP (DET,IRUN)
  ---------------------------------------------------------------------------
    CKEY ALEF ADBR DETECTOR SETUP
  ---------------------------------------------------------------------------
   - F.Ranjard - 901018
   Get setup code for a given detector
   - Input  : DET      / A = CHARACTER*2 variable to define the
                             detector: 'BP VD IT TP EC LC SA HC MU TR GE'
              IRUN     / I = run number
   - Output : GTSTUP   / I = setup code
                             =-1 in case of error
   - Description :
        IF run < 2001 THEN
         montecarlo : get period number from ASIM
         IF ASIM does not exist THEN get period number from run date
        ELSE run>= 2001 THEN
         raw data : get period number from run number
        ENDIF
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   GTT0GL                                                                     
   UMSERR                                                                     
   TDEDXV                                                                     
   TDEDXR                                                                     
   MUTRGS                                                                     
   BGETDS                                                                     
   IFECON                                                                     
   IGEOMW                                                                     
   IINALI                                                                     
   IINRES                                                                     
   EBCLCF                                                                     
   SIRDAF                                                                     
   X1IRUN                                                                     
   X1TRIG                                                                     
   VGRDAL                                                                     
   VINIBM                                                                     
   VRDDAF                                                                     
   VDMSRL                                                                     
   VRLDGT                                                                     
   VTRFIT                                                                     
   GTDBAS                                                                     
        |---- GTSTUP                                                          
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  ITABL                               External        
                   |----  ADBRPN                                              
                   |----  ADBRUN                                              
                                                                              
 
3 IGTFMT
         INTEGER FUNCTION IGTFMT(NAMJ)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 900830
   Get bank format index
     returns the work bank format index for this bank
   - Input   : - NAMJ / I    = bank name-index
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   BPRTAB                                                                     
   BKTOBK                                                                     
        |---- IGTFMT                                                          
                   |----  IW                                  External        
                                                                              
 
3 IOVERS
         SUBROUTINE IOVERS (ALIBV,ALIOV)
  ---------------------------------------------------------------------------
    CKEY IO VERSION
  ---------------------------------------------------------------------------
   - F.Ranjard - 940429
   Returns the io version number
   - Output : - ALIBV / R = ALEPHLIB version #
              - ALIOV / R = IO version #
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              IOVERS                                                          
                   |----  IW                                  External        
                   |----  ALVERS                                              
 
3 JALREC
         INTEGER FUNCTION JALREC(LDUM)
  ---------------------------------------------------------------------------
    CKEY ALREAD RECORD LENGTH
  ---------------------------------------------------------------------------
   - F.Ranjard - 881110
   Return the aleph record length
     LDUM is a dummy argument
   - JALREC = LDEF (=32040 by default) for EPIO and NATIVE files
     on IBMRS6000 the default length of NATIVE files is 30720
   - NALREC(LDUM) is an entry point to redefine the default
     IF 1800< LDUM <32760 THEN
        reset default record length for EPIO and NATIVE files
        LDEF = LDUM
     ENDIF
   - KALREC (ATYPE) is an entry point to get record length for
     a specific aleph type ATYPE
     KALREC('EPIO') = 32040 bytes
     KALREC('NAT')  = 32040 bytes   (30720 on IBMRS6000)
     KALREC('DAF')  = 1024 words
     KALREC('CARD') = 72 characters
     KALREC('EDIR') = 80 characters
   - MALREC(ATYPE,LDUM) is an entry point to redefine the record length
     to LDUM for a given alephtype ATYPE
     a subsequent call to KALREC(ATYPE) will return the new record length
     for alephtype ATYPE.
   - called by USER, AOPENW, AWRTAP
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPEWR                                                                     
   AOPEWW                                                                     
        |---- JALREC                                                          
                   |----  INDEX                               External        
                                                                              
 
3 JHOCHA
         INTEGER FUNCTION JHOCHA (CHAR)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 890228
   Return in jhocha the hollerith representation of the character
    variable CHAR
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              JHOCHA                                                          
                   |----  UCTOH                               External        
 
3 JULREC
         FUNCTION JULREC (ATYP,CHDEVI)
  ---------------------------------------------------------------------------
    CKEY ALEF USER LREC / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 900307
   Return the  record length
   - Input     : ATYP  / CHAR     aleph type
                 CHDEVI / CHAR    file device
   - Output    : JULREC           record length in bytes
    for the keyword LREC in FDEVI
    it is found decode the record length which follows and reduce
      the CHDEVI length
    return the aleph record length for the ATYP type.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPERD                                                                     
   KBYTREC                                                                    
        |---- JULREC                                                          
                   |----  ICHAR                               External        
                   |----  LNBLNK                              External        
                   |----  INDEX                               External        
                   |----  KALREC                                              
                                                                              
 
3 JUNIAL
         INTEGER FUNCTION JUNIAL(INOUT,NUMBER,NDUMMY)
  ---------------------------------------------------------------------------
    CKEY ALEF IO UNIT
  ---------------------------------------------------------------------------
        D.SCHLATTER
   Return  logical units for input or output files
       INPUT:     INOUT   /C       = 'INput'  or
                                   = 'OUtput'
                  NUMBER  /I       = index  of file [1,6]
                               for INPUT:
                                     MOD(index,3) = 1 for data
                                     MOD(index,3) = 2 for 1. select file
                                     MOD(index,3) = 3 for 2. select file
                               for OUTPUT:
                                     MOD(index,2) = 1 for data
                                     MOD(index,2) = 2 for select file
       OUTPUT     JUNIAL  /I       = logical unit
       ENTRY:     NUNIAL           redefine logical units
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   AOPERD                                                                     
   AOPEWR                                                                     
   AOPEWW                                                                     
   CRFILM                                                                     
        |---- JUNIAL                                                          
                   |----  IW                                  External        
                                                                              
 
3 JUNIDB
         INTEGER FUNCTION JUNIDB(LDUM)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - F.Ranjard - 881110
   Return the data base logical unit
     LDUM is a dummy argument
     JUNIDB = LDEF (=4 by default)
     there is an entry point : NUNIDB(LDUM) to redefine the default
     IF 0< LDUM <99 THEN
        reset default unit LDEF = LDUM
     ENDIF
     2 more entry points are forseen for the LongTermConstant file:
     JUNISQ(LDUM) and NUNISQ(LDUM)
     The default logical unit # for the LTC file is LSEQ=8
     2 more entry points are forseen for the Documentation file:
     JUNIDO(LDUM) and NUNIDO(LDUM)
     The default logical unit # for the 1 file is LDOC=9
   - called by USER
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   LFILRU                                                                     
   UFITQL                                                                     
   TCGXRU                                                                     
   TDEDXV                                                                     
   TDEDXR                                                                     
   SNGMTR                                                                     
   BGETDS                                                                     
   DEFOVE                                                                     
   GAPGAC                                                                     
   GAPGPC                                                                     
   IGETDB                                                                     
   KINIT                                                                      
   HDODGY                                                                     
   HRHTUB                                                                     
   MRMHIT                                                                     
   EBCLCF                                                                     
   EBINIT                                                                     
   ECLEAK                                                                     
   TFICOR                                                                     
   TGHPAL                                                                     
   TCORES                                                                     
   TDFVRU                                                                     
   TFIMUL                                                                     
   TGTCUR                                                                     
   TLACOC                                                                     
   TLACOP                                                                     
   TWRRED                                                                     
   VINIBM                                                                     
   VRDDAF                                                                     
   VDMSRL                                                                     
   VRLDGT                                                                     
   VTRFIT                                                                     
   YTOIRU                                                                     
   YMFMIN                                                                     
   YMFV0V                                                                     
   YMFV00                                                                     
   AUNPCK                                                                     
   UTDBCO                                                                     
   UTPRBK                                                                     
   UTPRDB                                                                     
   ADBSWP                                                                     
   ADBVER                                                                     
   AGETDB                                                                     
   ALGTBK                                                                     
   ALGTRO                                                                     
   AOPDBS                                                                     
   NAMERU                                                                     
   CMPINI                                                                     
        |---- JUNIDB.                                                         
                                                                              
 
3 KBYTREC
         INTEGER FUNCTION KBYTREC (ATYPE,FDEVI)
  ---------------------------------------------------------------------------
    CKEY ALEF RECORD LENGTH
  ---------------------------------------------------------------------------
   - F.Ranjard - 920402
   Return the aleph record length in bytes
   - Input:  ATYPE   / A  = aleph file type
                            'EPIO', 'NAT', 'DAF', 'CARD', 'EDIR'
             FDEVI   / A  = device name
   - Output: KBYTREC / I  = logical record length in bytes
   - called by USER, AOPENW, AWRTAP, AOPEN
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ADSPOS                                                                     
        |---- KBYTREC                                                         
                   |----  JULREC                                              
                                                                              
 
3 LOCTAB
         FUNCTION LOCTAB(ITABL,ISTEP,LENG,INDX,IVAL)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
       O.CALLOT   7-MAR-86
   Locate a value in a table
     This function is analog to LOCATI ( E106 in Kernlib ) but
     work on two dimension array: we look for the INDXth element in
     LENG row of ISTEP word each for position of IVAL. The
     function value is the row number, with same conventions
     as for LOCATI : j : ITABL(INDX,j) = IVAL
                     0 :                    IVAL < ITABL(INDX,1)
                    -j : ITABL(INDX,j)    < IVAL < ITABL(INDX,j+1)
                 -LENG : ITABL(INDX,LENG) < IVAL
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   LFILRU                                                                     
   TCGXRU                                                                     
   TDFVRU                                                                     
   ALGTBK                                                                     
   ALGTRO                                                                     
   NAMERU                                                                     
        |---- LOCTAB.                                                         
                                                                              
 
3 NAMERU
         INTEGER FUNCTION NAMERU (NAME,IRUN,JCOL,IROW)
  ---------------------------------------------------------------------------
    CKEY ALEF GET BANK DA
  ---------------------------------------------------------------------------
   Get the row# of a bank which contains irun run number in
     the range defined by col# JCOL and col# JCOL+1
     ITABL(JNAME,IROW,JCOL)<= IRUN <= ITABL(JNAME,IROW,JCOL+1)
   - F.Ranjard - 931119
   - Input:
               NAME   / INTE  = bank name
               IRUN   / INTE  = run # which is looking for
   - Output:   NAMERU / INTE  = NAME BOS index
                                =0 means not enough space
                                <0 means a garbage collection occurded
               IROW   / INTE  = row # which contains IRUN run number
                                0 means IRUN not found
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   TDEDXV                                                                     
   TDEDXR                                                                     
        |---- NAMERU                                                          
                   |----  NAMIND                              External        
                   |----  JUNIDB                                              
                   |----  IW                                  External        
                   |----  GTDBAS                                              
                   |----  NDANR                               External        
                   |----  MDARD                               External        
                   |----  BGARB                               External        
                   |----  ITABL                               External        
                   |----  LROWS                               External        
                   |----  LCOLS                               External        
                   |----  LOCTAB                                              
                                                                              
 
3 OPENDA
         LOGICAL FUNCTION OPENDA(LDBAS,IVERS,IDATE)
  ---------------------------------------------------------------------------
    CKEY IO OPEN DA
  ---------------------------------------------------------------------------
    F.Ranjard - 880304     modified by M.Rumpf for APOLLO sequence
   Open daf
    DAF length is 1024
    Input : LDBAS logical unit number for DAF
    Output: OPENDA is true if the file is found
            IVERS   = DAF version version
            IDATE   = DAF date of last change
    Called by USER program before any use of the D.B.
    Calls BDADF from Boslib
    For APOLLO ,it is assumed that a LINK ADBSCONS.DAF
    exists on the DAF.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              OPENDA                                                          
                   |----  BDABF                               External        
                   |----  MDARD                               External        
                   |----  ITABL                               External        
 
3 OPENDB
         LOGICAL FUNCTION OPENDB(LDBAS)
  ---------------------------------------------------------------------------
    CKEY IO OPEN DAF
  ---------------------------------------------------------------------------
    F.Ranjard - 880304     modified by M.Rumpf for APOLLO sequence
   Open daf
    DAF length is 1024
    Input : LDBAS logical unit number for DAF
    Output: OPENDB is true if the file is found
    Called by USER program before any use of the D.B.
    Calls BDADF from Boslib
    For APOLLO ,it is assumed that a LINK ADBSCONS.DAF
    exists on the DAF.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              OPENDB                                                          
                   |----  BDABF                               External        
 
3 OPENSQ
         SUBROUTINE OPENSQ (LUNIT,FORMA,FNAME)
  ---------------------------------------------------------------------------
    CKEY IO OPEN DATA
  ---------------------------------------------------------------------------
   Open for sequential read a file on unit # lunit
   - F.Ranjard - 880330
   - Input arguments:
               LUNIT   = input unit #
               FORMA   = 4 character flag  'EPIO' or '    ' or 'FORT'
   - Output argument:
               FNAME   = file name
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              OPENSQ                                                          
                   |----  BUNIT                               External        
 
3 SDRSX
         SUBROUTINE SDRSX(IARRAY, NW)
  ---------------------------------------------------------------------------
    CKEY IO DECS CONVERT
  ---------------------------------------------------------------------------
   Convert from dec risc floating format to dec vax format
   - Author - LatB
   - Input  : - IARRAY /I = array of DEC RISC floating point
              - NW     /I = length of IARRAY
   - Output : - IARRAY /I = array of DEC VAX floating point
   
 
3 SIBSDR
         SUBROUTINE SIBSDR (IARRAY,NW)
  ---------------------------------------------------------------------------
    CKEY IO DECS CONVERT
  ---------------------------------------------------------------------------
   Convert from ibm to dec risc floating point format
   - Author - LatB
   -- i.e. byte-swapped IEEE floating point
   -- stolen from CFRIBM of EPIO lib
   - Input  : - IARRAY /I = array of IBM floating point
              - NW     /I = length of IARRAY
   - Output : - IARRAY /I = array of DEC RISC floating point
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   DMPBAN                                                                     
        |---- SIBSDR                                                          
                   |----  ISHFT                               External        
                   |----  BTEST                               External        
                   |----  IOR                                 External        
                   |----  IAND                                External        
                   |----  IBSET                               External        
                                                                              
 
3 SXSDR
         SUBROUTINE SXSDR(IARRAY, NW)
  ---------------------------------------------------------------------------
    CKEY IO DECS CONVERT
  ---------------------------------------------------------------------------
   Convert from dec vax floating format to dec risc format
   - Author - LatB
   - Input  : - IARRAY / I = array of DEC VAX floating format numbers
              - NW     / I = length of IARRAY
   - Output : - IARRAY / I = array of DEC RISC floating format numbers
   
 
3 UBPACK
         SUBROUTINE UBPACK(NAME,NUM,KTAG,LTAG,JTAG,IER)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - J.F. Grivaz 15-03-1989
   Remove marked rows from a tabular bank
   - Input :
   -   NAME  = Bank name
   -   NUM   = Bank number
   -   KTAG  = Column where check is to be done. Let IVAL be the content
   -           This column should contain integers
   -   LTAG  = Value to which IVAL is to be compared
   -   JTAG  = Indicates which type of comparison is to be made
   -           -1 means : Kill row if IVAL < LTAG
   -           +1 means : Kill row if IVAL > LTAG
   -            0 means : Kill row if IVAL = LTAG
   - Output :
   -   IER = 1 if Unsuccessful
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UCLEAN                                                                     
   UTWOCL                                                                     
        |---- UBPACK                                                          
                   |----  NLINK                               External        
                   |----  LCOLS                               External        
                   |----  LROWS                               External        
                   |----  KNEXT                               External        
                   |----  IW                                  External        
                   |----  NBANK                               External        
                                                                              
 
3 UCLEAN
         SUBROUTINE UCLEAN(NAME,NUM,IER)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - J.F. Grivaz 15-03-1989
   Remove duplicate rows from a tabular bank
   - Designed for relation bank, and works correctly only if
   - the first column is normally filled with a positive integer
   - Input :
   -   NAME  = Bank name
   -   NUM   = Bank number
   - Output :
   -   IER = 1 if Unsuccessful
   - Calls UBPACK
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTWOCL                                                                     
        |---- UCLEAN                                                          
                   |----  NLINK                               External        
                   |----  LCOLS                               External        
                   |----  LROWS                               External        
                   |----  IW                                  External        
                   |----  UBPACK                                              
                                                                              
 
3 UINDXS
         SUBROUTINE UINDXS(KBNK2,ICOLR,IWREL,IFLAG)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Establish n-->1 relationships for static tables
   
    - Author   : A. Putzer  - 86/09/09
    - Modified : A. Putzer  - 87/06/04
                 F.Ranjard  - 94/03/23  call SORTI instead of SORTX
   
   
      Arguments: -  KBNK2    (input)  Index of input bank
                 -  ICOLR    (input)  Column containing the attribute
                                      used for the relation
                 -  IWREL(2) (output) Adresses of the banks containing
                                      the relation information
                 -  IFLAG    (output) Error flag  = 0 ok
                                                   -1 Bank not existing
                                                   -2 Bank not filled
                                                   -3 ICOLR not valid
                                                   -4 no working space
                                                   -5 no relation at all
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              UINDXS                                                          
                   |----  LROWS                               External        
                   |----  LCOLS                               External        
                   |----  WBANK                               External        
                   |----  IW                                  External        
                   |----  SORTI                               External        
                   |----  WDROP                               External        
 
3 USBOS
         SUBROUTINE USBOS (NAME,NR,LE,KNDX,IGARB)
  ---------------------------------------------------------------------------
    CKEY ALEF BOS BANK / USER
  ---------------------------------------------------------------------------
   - F.Ranjard - 900220
   User routine called when not enough space
    dummy routine on the ALEPHLIB
   - Input    : NAME   / CHAR4 = bank name
                NR     / I     = bank number
                LE     / I     = bank length
                KNDX   / I     = bank index
                IGARB  / I     = garbage collection flag
   - Called by: AUBOS when not enough space after a garbage
                collection.
   
 
3 USGTDB
         INTEGER FUNCTION USGTDB(LBASE,LIST,IRUN)
  ---------------------------------------------------------------------------
    CKEY DAF DBASE / USER
  ---------------------------------------------------------------------------
   User routine to get a list of data base banks
   - F.Ranjard - 890802
   - modified by F.Ranjard - 891001
    Input  :   LBASE = data base logical unit
               LIST  = list of banks names to be accessed from data base
                       single name or list of names
               IRUN  = current run number
    Ouput : USGTDB = > 0  if existing bank(s) are still valid
                     = 0  if error occurs ( no valid bank found)
                     < 0  if one or more existing banks were reloaded
    Called by : ALGTDB, AGETDB when a UDAF data card is encountered
   ============= FALCON I version of USGTDB =======================
    reads the DAF in the following way:
    This routine assumes that ONLY 1 RUN is executed at a time
    that means that if a bank NAME exists when entering the routine
    it must be used, otherwise get it from data base.
       IF a bank exists (read from data cards or from tape) THEN
          it is taken in priority.
       ELSE
          valid bank is read from the data base
       ENDIF
   - ENTRY point USGTD1 (INEW)
     input argument : INEW   / INTE = data card bank number
     output         : USGTD1 / INTE = previous data card bank number
     data base bank  given on data cards have the bank number INEW
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ALGTDB                                                                     
   ALGTD1                                                                     
        |---- USGTDB                                                          
                   |----  LNBLNK                              External        
                   |----  IW                                  External        
                   |----  NAMIND                              External        
                   |----  NDANR                               External        
                   |----  MDARD                               External        
                                                                              
 
3 UTCBLK
         SUBROUTINE UTCBLK(ICHIN,NWORD)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Blank a string of 32-bit words
    - This subroutine is needed since VBLANK doesn't work properly for
    - characters on VAX.
   
    - Author   : A. Putzer  - 87/08/18
   
   
      Arguments: -  ICHIN CHA*4 (input/output) Character string to be
                                               "blanked"
                 -  NWORD INTE  (input) Number of 32-bit words to be
                                        "blanked"
     Comment   :    The order of the arguments which does not correspond
                   to the ALEPH rules is kept as for the original VBLANK
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTAHOR                                                                     
   UTAVER                                                                     
        |---- UTCBLK.                                                         
                                                                              
 
3 UTCCOP
         SUBROUTINE UTCCOP(ICHIN,ICOUT,NWORD)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Copy one textstring into another
    - This subroutine is needed since UCOPY doesn't work properly for
    - characters on VAX.
   
    - Author   : A. Putzer  - 87/08/18
   
   
      Arguments: -  ICHIN CHA*4 (input) Character string to be copied
                 -  ICOUT CHA*4 (output) Character to be copied into
                 -  NWORD INTE  (input) Number of 32-bit words to be
                                        copied
     Comment   :    The order of the arguments which does not correspond
                    to the ALEPH rules is kept as for the original UCOPY
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTAHOR                                                                     
   UTAVER                                                                     
   UTCOFO                                                                     
        |---- UTCCOP.                                                         
                                                                              
 
3 UTCOFO
         SUBROUTINE UTCOFO(COLTY,COLFO,FORMA)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   
   Get the format for the printing of the attributes
   
    - Author   : A. Putzer  - 87/08/18
    - Modified : A. Putzer  - 89/03/14
   
   
      Arguments: -  COLTY CHA*4 (input) Generic column type
                 -  COLFO CHA*8 (input) Format as the variable is stored
                 -  FORMA CHA*4 (output) Array containing the format for
                                         the printing of the colums
                 -  INDC  INTE  (input) INDEX (BOS) for the .COL table
                 -  LUNPR INTE  (input) Unit number for print output
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTAHOR                                                                     
   UTAVER                                                                     
        |---- UTCOFO                                                          
                   |----  UTCCOP                                              
                                                                              
 
3 UTWOCL
         SUBROUTINE UTWOCL(NAMI,NUM,ICL1,ICL2,NAMO,IGARB,IER)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - J.F. Grivaz 15-03-1989
   Extract and clean up two columns from a tabular bank
   - Designed for relation bank, and works correctly only if
   -    all columns are normally filled with positive integers
   - Duplicate rows and rows with at least one null attribute
   -    are removed from the output bank
   - Input :
   -   NAMI  = Name of the bank from which the extraction is to be done
   -   NUM = Number of the bank from which the extraction is to be done
   -   ICL1  = First column to extract (will be column 1 in output bank)
   -   ICL2 = Second column to extract (will be column 2 in output bank)
   -   NAMO = Name of the output bank to be created (its number = NUM)
   - Output
   -   IGARB = 1 if Garbage Collection occured
   -           2 if not enough space after Garbage Collection
   -   IER = 1 if Unsuccessful
   - Calls UTWOEX, UCLEAN, UBPACK                          from this .HLB
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   PCRLTJ                                                                     
        |---- UTWOCL                                                          
                   |----  UTWOEX                                              
                   |----  UCLEAN                                              
                   |----  UBPACK                                              
                                                                              
 
3 UTWOEX
         SUBROUTINE UTWOEX(NAMI,NUM,ICL1,ICL2,NAMO,IGARB,IER)
   ---------------------------------------------------------------------------
     CKEY
   ---------------------------------------------------------------------------
   - J.F. Grivaz 15-03-1989
   Extract two columns from a tabular bank
   - Input :
   -   NAMI  = Name of the bank from which the extraction is to be done
   -   NUM = Number of the bank from which the extraction is to be done
   -   ICL1  = First column to extract (will be column 1 in output bank)
   -   ICL2 = Second column to extract (will be column 2 in output bank)
   -   NAMO = Name of the output bank to be created (its number = NUM)
   - Output
   -   IGARB = 1 if Garbage Collection occured
   -           2 if not enough space after Garbage Collection
   -   IER = 1 if Unsuccessful
   - Calls AUBOS                                           from ALEPHLIB
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   UTWOCL                                                                     
        |---- UTWOEX                                                          
                   |----  NLINK                               External        
                   |----  LCOLS                               External        
                   |----  LROWS                               External        
                   |----  AUBOS                                               
                                                                              

2 PRES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     ALEPH package to compress and decompress data
     ! ALEPHLIB 15.5
       DEMPBAN - there was a bug in the decompression of characters on VAX
                 when it was compressed on UNIX machines.
     ! ALEPHLIB 14.6
       DMPCHR - introduce a local common block /LOCALP/ to please
                ALPHA machines.
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     CFRVAX     Author:  t. wildish. october 1989
     CMPBAN     Compress all banks with a given name.
     CMPDRO     Drops work banks used by the compressor
     CMPIN2     Initialisation, read data cards, get bank format from the database
     CMPINI     Initialisation, read data cards, get bank format from the database
     CMPLIS     Compress banks contained in list list
     CMPSUM     Checksum subroutine
     CMPTOI     Convert a character string to integer
     COTEST     Compress a bos file.
     DETEST     Decompress a compressed bos file.
     DMPBAN     Decompress all banks named bname
     DMPCHR     Convert a character*4 array between vax, ibm, or cray formats.
     DMPFMT     Build a bos bank format
     DMPLIS     Decompress banks contained in list list
     UDMPER     User routine, treat decompression errors, set error=0

3 CFRVAX
         SUBROUTINE CFRVAX(IARRAY,NWORDS)
  ---------------------------------------------------------------------------
    CKEY PRESS DMPBAN DECOMPRESS /USER
  ---------------------------------------------------------------------------
   Author:  t. wildish. october 1989
    Purpose: Convert vax real format to UNIX real format.
   
    Uses a cray version of SVXSX from
    IBM, followed by CFRIBM to convert to UNIX. Messy, but it works.
    This should only be considered as a stopgap solution until the
    problem can be fixed at source!
   
               This is a subroutine to convert from VAX floating
               point format (32 Bits) to IBM floating point format
               (32 bits).
               IARRAY   an area of storage 32*NWORDS bits long in which
                        are stored NWORDS 32 bits VAX floating point
                        numbers.
                        On output it will contain NWORDS 32 bits IBM
                        floating point numbers
               NWORDS   number of floating point numbers to convert
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   DMPBAN                                                                     
        |---- CFRVAX                                                          
                   |----  ISHFT                               External        
                   |----  IAND                                External        
                   |----  MOD                                 External        
                   |----  IBSET                               External        
                   |----  IOR                                 External        
                   |----  BTEST                               External        
                   |----  CFRIBM                              External        
                                                                              
 
3 CMPBAN
         INTEGER FUNCTION CMPBAN(IB,INFS,NCC)
  ---------------------------------------------------------------------------
    CKEY PRESS CMPBAN COMPRESS /INTERNAL
  ---------------------------------------------------------------------------
   Compress all banks with a given name.
       on DECS: write non-compressed float numbers in VAX format
   
       AUTHOR: D.Harvatis    MAR 89
   
       INPUT :
              - IB      : index of the bank in the INDEXW array
              - INFS    : information block size
              - NCC     : number of compressible columns
   
       RETURN VALUE     : -1  no banks were compressed
                           0  some banks were compressed
                          +1  all banks were compressed
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   CMPLIS                                                                     
        |---- CMPBAN                                                          
                   |----  IW                                  External        
                   |----  INDEXW                              External        
                   |----  NAMIND                              External        
                   |----  NBANK                               External        
                   |----  BGARB                               External        
                   |----  RW                                  External        
                   |----  NINT                                External        
                   |----  CTOIBM                              External        
                   |----  CMPBU3                              External        
                   |----  BUNCH                               External        
                   |----  NWIW                                External        
                   |----  DBLE                                External        
                   |----  CMPBU4                              External        
                   |----  CMPBU5                              External        
                   |----  INFSIZ                              External        
                   |----  SDRSX                                               
                   |----  CMPSUM                                              
                   |----  NDROP                               External        
                                                                              
 
3 CMPDRO
         SUBROUTINE CMPDRO
  ---------------------------------------------------------------------------
    CKEY PRESS CMPDRO COMPRESS /USER
  ---------------------------------------------------------------------------
   Drops work banks used by the compressor
   
       AUTHOR: D.Harvatis    MAY 89
       CALLS : WDROP
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   COTEST                                                                     
        |---- CMPDRO                                                          
                   |----  WDROP                               External        
                   |----  INDEXW                              External        
                                                                              
 
3 CMPIN2
         SUBROUTINE CMPIN2(LDBUN,LIST,IER)
  ---------------------------------------------------------------------------
    CKEY PRESS CMPIN2 COMPRESS /USER
  ---------------------------------------------------------------------------
   Initialisation, read data cards, get bank format from the database
   
       AUTHOR: D.Harvatis    MAR 89        F.Ranjard - 900404
   
       INPUT :
              - LDBUN : data base logical unit number
              - LIST  : list of banks.
                        Information is read from the database only for
                        the banks contained in list LIST.
                        If the list is empty, information is read for
                        every bank in the TPRO bank of the database.
   
       OUTPUT:
              - IER   : 0 Successful completion.
                       -1 CPRO bank not loaded from DAF file.
                          Compression will be possible only for banks
                          whose format is given through a CFMT data card.
                       >0 Information was read for only IER banks.
                          This could be either because the MAXBNK limit
                          was reached, or because the creation of a work
                          bank failed.
   
       Calls : CMPTOI, AOPEN
               NAMIND, NDANR, MDARD, NLIST, CHAINT, INTCHA, WBANK, NDROP
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   CMPINI                                                                     
        |---- CMPIN2                                                          
                   |----  NLIST                               External        
                   |----  IW                                  External        
                   |----  NAMIND                              External        
                   |----  NDANR                               External        
                   |----  MDARD                               External        
                   |----  BGARB                               External        
                   |----  LROWS                               External        
                   |----  BKFMT                               External        
                   |----  ITABL                               External        
                   |----  CHAINT                              External        
                   |----  INDEX                               External        
                   |----  MOD                                 External        
                   |----  INTCHA                              External        
                   |----  WBANK                               External        
                   |----  NDROP                               External        
                   |----  WDROP                               External        
                                                                              
 
3 CMPINI
         SUBROUTINE CMPINI(LIST,IER)
  ---------------------------------------------------------------------------
    CKEY PRESS CMPINI COMPRESS /USER
  ---------------------------------------------------------------------------
   Initialisation, read data cards, get bank format from the database
   
       AUTHOR: D.Harvatis    MAR 89
   
       INPUT :
              - LIST  : list of banks.
                        Information is read from the database only for
                        the banks contained in list LIST.
                        If the list is empty, information is read for
                        every bank in the TAB2 bank of the database.
   
       OUTPUT:
              - IER   : 0 Successful completion.
                       -1 COL2 or TAB2 bank not loaded from DAF file.
                          Compression will be possible only for banks
                          whose format is given through a CFMT data card.
                       >0 Information was read for only IER banks.
                          This could be either because the MAXBNK limit
                          was reached, or because the creation of a work
                          bank failed.
   
       Data Cards :
         COMP :    COMP 'NONE'  ! no compression if this card is found
                                  if bank names follow 'NONE' only these
                                  have not to be compressed.
                   COMP 'INTE'  ! integer only compression (default)
                   COMP 'FLOA'  ! integer and floating point compression
                   COMP 'CHEC'  ! checksum option ON
                   COMP 'NOCH'  ! checksum option OFF (default)
                   COMP 'NOFM'  ! use default (I) format bank
                   COMP new_MINGAI ! -1 < new_MINGAI < 2001
                   Only one COMP card is read, so, all desired options
                   should be in one COMP card.
                   The NONE option, not followed by any bank name, is not
                   compatible with any other option. Also, no checksum
                   is done if floating compression is ON.
   
         CFMT :    CFMT bank_name number_of_columns format_string
                   for example, the following card
                        CFMT 'NAME' 6 '2I,A,F2,2F'
                   means that bank NAME has 6 columns, the first 2 are
                   integers, the 3rd is a character*4, the 4th is a real
                   with precision of 2 decimal places, and the last 2
                   are reals with no precision specified (reals are not
                   compressed if no precision is specified)
   
       Calls : CMPTOI, AOPEN
               NAMIND, NDANR, MDARD, NLIST, CHAINT, INTCHA, WBANK, NDROP
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
   COTEST                                                                     
        |---- CMPINI                                                          
                   |----  LEN                                 External        
                   |----  WBANK                               External        
                   |----  INTCHA                              External        
                   |----  NAMIND                              External        
                   |----  LFRROW                              External        
                   |----  LCOLS                               External        
                   |----  KNEXT                               External        
                   |----  LROWS                               External        
                   |----  IF                                  External        
                   |----  CHAINT                              External        
                   |----  BKFMT                               External        
                   |----  CMPTOI                                              
                   |----  NCOLIF                              External        
                   |----  NLIST                               External        
                   |----  JUNIDB                                              
                   |----  CMPIN2                                              
                   |----  LGT                                 External        
                                                                              
 
3 CMPLIS
         SUBROUTINE CMPLIS(LIST,NB)
  ---------------------------------------------------------------------------
    CKEY PRESS CMPLIS COMPRESS /USER
  ---------------------------------------------------------------------------
   Compress banks contained in list list
   
       Author : D.Harvatis    APR 89
   
       INPUT:
             - LIST  : (CHARACTER*1) list of banks to be compressed.
                       After the compression, the original names of the
                       banks that were compressed are removed from the
                       list, and the modified names are added.
                       The modified names are the same as the original
                       ones, only the first character is in lower case.
   
       OUTPUT:
             - NB    : number of banks that were compressed
   
       Calls : CMPBAN, NLIST, BLIST, BKFMT
   
       Description :
   
       This subroutine loops through all bank names contained
       in list LIST. The bank compression function CMPBAN is
       called for every bank found.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABWEVE                                                                     
   COTEST                                                                     
        |---- CMPLIS                                                          
                   |----  NLIST                               External        
                   |----  LGE                                 External        
                   |----  IW                                  External        
                   |----  INDEXW                              External        
                   |----  IRANKB                              External        
                   |----  LGT                                 External        
                   |----  INFSIZ                              External        
                   |----  CMPBAN                                              
                   |----  ALLBLIST                            External        
                   |----  BLIST                               External        
                                                                              
 
3 CMPSUM
         SUBROUTINE CMPSUM(IA,N,L)
  ---------------------------------------------------------------------------
    CKEY PRESS CMPSUM CHECKSUM COMPRESS /INTERNAL
  ---------------------------------------------------------------------------
   Checksum subroutine
   
       AUTHOR: D.Harvatis    JUL 89
   
       INPUT :    IA : Integer array
                   N : Number of items in IA array
   
       OUTPUT:     L : checksum
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   CMPBAN                                                                     
   DMPBAN                                                                     
        |---- CMPSUM                                                          
                   |----  IEOR                                External        
                                                                              
 
3 CMPTOI
         LOGICAL FUNCTION CMPTOI(STR,I)
  ---------------------------------------------------------------------------
    CKEY PRESS CMPTOI COMPRESS /INTERNAL
  ---------------------------------------------------------------------------
   Convert a character string to integer
        AUTHOR: D.Harvatis   MAR 89
   
        INPUT :   STR  : character string to be converted to integer.
        OUTPUT:   I    : integer variable in which the converted value
                         will be placed.
        RETURN VALUE   : .FALSE. for successfull conversion
                         .TRUE. if conversion fails
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   CMPINI                                                                     
        |---- CMPTOI                                                          
                   |----  LEN                                 External        
                   |----  ICHAR                               External        
                                                                              
 
3 COTEST
   
  ---------------------------------------------------------------------------
    CKEY PRESS
  ---------------------------------------------------------------------------
          PROGRAM COTEST
   Compress a bos file.
   
        Author : D.Harvatis  MAR 89
   
        Subroutines called : CMPINI, CMPLIS, CMPDRO
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              COTEST                                                          
                   |----  TIMEST                              External        
                   |----  BNAMES                              External        
                   |----  BOS                                 External        
                   |----  AOPDBS                                              
                   |----  FNAMEFORMAT                         External        
                   |----  AOPEN                                               
                   |----  AOPENW                                              
                   |----  TIMEX                               External        
                   |----  BREADC                              External        
                   |----  CMPINI                                              
                   |----  AREAD                               External        
                   |----  CMPLIS                                              
                   |----  BWRITE                              External        
                   |----  BDROP                               External        
                   |----  BGARB                               External        
                   |----  CMPDRO                                              
                   |----  ACLOSE                                              
 
3 DETEST
   
  ---------------------------------------------------------------------------
    CKEY PRESS DETEST DECOMPRESS
  ---------------------------------------------------------------------------
          PROGRAM DETEST
   Decompress a compressed bos file.
   
        Author : D.Harvatis
   
   
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
                                                                              
              DETEST                                                          
                   |----  TIMEST                              External        
                   |----  BNAMES                              External        
                   |----  BOS                                 External        
                   |----  AOPEN                                               
                   |----  ONAMEFORMAT                         External        
                   |----  AOPENW                                              
                   |----  BDROP                               External        
                   |----  BLIST                               External        
                   |----  TIMEX                               External        
                   |----  AREAD                               External        
                   |----  BWRITE                              External        
                   |----  BGARB                               External        
                   |----  ACLOSE                                              
 
3 DMPBAN
         INTEGER FUNCTION DMPBAN(BNAME)
  ---------------------------------------------------------------------------
    CKEY PRESS DMPBAN DECOMPRESS /USER
  ---------------------------------------------------------------------------
   Decompress all banks named bname
   
       AUTHOR: D.Harvatis        MAR 89
   
       INPUT :  BNAME : name of bank to be decompressed
   
       RETURN VALUE   : -2 -> No decompression for some or all banks.
                              Either the information block was corrupted
                              or, there was not enough space in the BOS
                              array (even after garbage collection).
                        -1 -> Check on some or all compressed banks
                              failed. Decompressed banks still produced !
                         0 -> SUCCESS !
                        +1 -> Bank name does not exist.
                              No decompressed bank produced.
       Description :
       On the VAX, if LMACHI = 0  convert from IBM to VAX format
                   if LMACHI = -1 convert from CRAY to VAX format.
                   if LMACHI = 1 convert from APOLLO to VAX format.
       On IBM,     if LMACHI = 0  convert VAX to IBM format
                   if LMACHI = -1 convert from CRAY to IBM format.
                   if LMACHI = 1 convert from APOLLO to IBM format.
       On CRAY,    if LMACHI = 0  convert from IBM to CRAY format
                   if LMACHI = -1 convert from VAX to CRAY format.
                   if LMACHI = 1 convert from APOLLO to CRAY format.
       On APOLLO   if LMACHI = 0  convert from IBM to APOLLO format
                   if LMACHI = -1 convert from VAX to APOLLO format.
                   if LMACHI = 1 convert from CRAY to APOLLO format.
       On DECS     if LMACHI = 0  convert from IBM to DECS format
                   if LMACHI = -1 convert from CRAY to DECS format.
                   if LMACHI = 1 convert from APOLLO to DECS format.
   
       Calls : DMPCHR, DMPBL5, DMPBL4, DMPBL3, DMPCOP
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   DMPLIS                                                                     
   DMPGER                                                                     
        |---- DMPBAN                                                          
                   |----  NAMIND                              External        
                   |----  IW                                  External        
                   |----  RW                                  External        
                   |----  CHAINT                              External        
                   |----  DMPCHR                                              
                   |----  DMPFMT                                              
                   |----  BKFMT                               External        
                   |----  SXSDR                                               
                   |----  SIBSDR                                              
                   |----  SIBSX                               External        
                   |----  SVXSX                               External        
                   |----  CFRVAX                                              
                   |----  CFRIBM                              External        
                   |----  NBANK                               External        
                   |----  BGARB                               External        
                   |----  DMPCOP                              External        
                   |----  DMPBL3                              External        
                   |----  DMPBL4                              External        
                   |----  DMPBL5                              External        
                   |----  BLOW                                External        
                   |----  REAL                                External        
                   |----  NDROP                               External        
                   |----  CMPSUM                                              
                                                                              
 
3 DMPCHR
         SUBROUTINE DMPCHR(ICH,LMACHI,N)
  ---------------------------------------------------------------------------
    CKEY PRESS DMPCHR DECOMPRESS /INTERNAL
  ---------------------------------------------------------------------------
   Convert a character*4 array between vax, ibm, or cray formats.
   
       AUTHOR:   D. Harvatis          MAY 89
       modified by F.Ranjard          JAN 90
                               - to set I2 to 0
   
       INPUT :
              - ICH  : integer array equivalent to character*4 array to
                       be converted
              - LMACHI : control flag
              - N    : number of variables to be converted
   
       Description :
       On the VAX, if LMACHI = 0  convert from IBM to VAX format
                   if LMACHI = -1 convert from CRAY to VAX format.
                   if LMACHI = 1 convert from APOLLO to VAX format.
       On IBM,     if LMACHI = 0  convert VAX to IBM format
                   if LMACHI = -1 convert from CRAY to IBM format.
                   if LMACHI = 1 convert from APOLLO to IBM format.
       On CRAY,    if LMACHI = 0  convert from IBM to CRAY format
                   if LMACHI = -1 convert from VAX to CRAY format.
                   if LMACHI = 1 convert from APOLLO to CRAY format.
       On APOLLO   if LMACHI = 0  convert from IBM to APOLLO format
                   if LMACHI = -1 convert from VAX to APOLLO format.
                   if LMACHI = 1 convert from CRAY to APOLLO format.
       On DECS,    if LMACHI = 0  convert from IBM to DECS format
                   if LMACHI = -1 convert from CRAY to DECS format.
                   if LMACHI = 1 convert from APOLLO to DECS format.
   
   
 
3 DMPFMT
         SUBROUTINE DMPFMT (NCOL,AFI,FMT)
  ---------------------------------------------------------------------------
    CKEY PRESS FORMAT / USER
  ---------------------------------------------------------------------------
   - M.Rumpf - 880400          F.Ranjard - 900323
   Build a bos bank format
   - Input    : NCOL    / I   = number of columns
                AFI     / A   = character string : one letter (A,F,I)
                                per column
   - Output   : FMT     / A   = BOS format
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   DMPBAN                                                                     
        |---- DMPFMT                                                          
                   |----  INDEX                               External        
                                                                              
 
3 DMPLIS
         SUBROUTINE DMPLIS(LIST,ERLIST,NER)
  ---------------------------------------------------------------------------
    CKEY PRESS DMPLIS DECOMPRESS /USER
  ---------------------------------------------------------------------------
   Decompress banks contained in list list
   
       Author : D.Harvatis   APR 89
       Modified: S.Haywood 04/03/92 Allow selective decompression.
   
       Arguments :
   
       INPUT :
              - LIST   : (CHARACTER*1) list of banks to be decompressed.
                         After the decompression, the names of the
                         compressed banks are removed from the
                         list and the names of the decompressed banks are
                         added.
                         Compressed bank names start with a lower case
                         character. The list may contain normal, not
                         compressed banks. These are not affected.
   
                         If a list of compressed banks is given with a
                         DLIS card, only those banks are decompressed.
   
       OUTPUT:
              - ERLIST : (CHARACTER*(*)) Character string containing the
                         compressed banks where errors occured.
                         It doesn't contain banks that weren't existing.
                         The length of the string is defined by the
                         calling program. If ERLIST is not long enough to
                         hold all compressed bank names were errors
                         occured, then, the remaining names are not
                         removed from the list LIST.
                         ERLIST is set as CHARACTER*80 in ABRSEL
                         the internal list ERLIS is set as CHARACTER*80 in
                         this routine.
   
              - NER    : Error code
                         If 0 then no errors.
                         else :
                         (NER/1000)    Number of bank names where no
                                       decompression was done. This could
                                       be either because the information
                                       block was corrupted, or because
                                       there was not enough space in the
                                       BOS array (even after garbage
                                       collection).
                         MOD(NER,1000) Number of bank names where data
                                       check failed. Decompressed banks
                                       produced.
       ENTRY POINT:
                    DMPGER (LIST,ERLIST,NER)
                    can be called by a user program to get back the ERLIST
                    and error code NER, the first 20 errors are kept
   
   
       Calls : DMPBAN, NLISTF, BLIST
   
       Description :
   
        This subroutine loops through all bank names contained
        in list LIST. The bank decompression function DMPBAN
        is called for every compressed bank found.
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
        |---- DMPLIS                                                          
                   |----  NLINK                               External        
                   |----  MIN                                 External        
                   |----  IW                                  External        
                   |----  CHAINT                              External        
                   |----  LEN                                 External        
                   |----  NLISTF                              External        
                   |----  INDEX                               External        
                   |----  INTCHA                              External        
                   |----  LLT                                 External        
                   |----  DMPBAN                                              
                   |----  F                                   External        
                   |----  ALLBLIST                            External        
                   |----  BLIST                               External        
                                                                              
 
3 UDMPER
         SUBROUTINE UDMPER (IRTYP,TLIST,ERLIST,IFLG)
  ---------------------------------------------------------------------------
    CKEY PRESS DECOMPRESS ERROR / USER
  ---------------------------------------------------------------------------
   User routine, treat decompression errors, set error=0
   - F.Ranjard - 900511
   - input    : IRTYP   / INTE          = record type
                                          1 event, 2 run, 3 unknown
                TLIST   / CHARACTER*1   = input list
                ERLIST  / CHARACTER*(*) = error list
                IFLG    / INTE          = error flag
   - output   : IFLG    / INTE           = 0 keep the record anyway
   
   ---------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description     
   ---------------------------------------------------------------------------
   ABRREC                                                                     
   ABCLAS                                                                     
   ABSTRCL                                                                    
   ABGTCL                                                                     
   ABGTWCL                                                                    
   ABGTRCL                                                                    
   ABSTCL                                                                     
   ABUNIT                                                                     
        |---- UDMPER                                                          
                   |----  IW                                  External        
                   |----  NAMIND                              External        
                   |----  MOD                                 External        
                                                                              
