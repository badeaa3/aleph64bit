1 ALEPHLIB

               source:  ALEPH314:[*]*.F,ALEPH314:[INC]*.h
               library: ALE:ALEPHLIB.OLB, _D.OLB, .NEWS
    on UNIX :  source:  $ALROOT/aleph314/*/*
               library: $ALEPH/gen/libalephlib.a     -> libalephio314.a
               library: $ALEPH/gen/libalephlib_dbx.a -> libalephio314_dbx.a
    --------------------------------------------------------------------
  ! 20000104 ALEPHLIB 314.0 - Y2K compliant
                BECAREFUL it must be used with ADBSCONS >= 300
    In /alef
     ALKJOB : modify the DATE given by DATIME to be yyyymmdd  (F.Ranjard)
     GETBP  : print date yyyymm                               (F.Ranjard)
     XFMCBP : convert to the new ADBR format : yyyymm         (F.Ranjard)
    In /kine
     KXP6IN : Declare WIDM REAL*4, suppress particle types 52-55 (B.Bloch)
     KWGTBK : New - BOOK and fill bank KWGT with weight info     (B.Bloch)
    In /muid
     HRHTUB : y2k fix; ASIM can be yyyymm, HZEF,HDTE can have NR>99 (M.Cattaneo)
     MRMHIT : y2k fix; ASIM can be yyyymm, MCPE can have NR>99      (M.Cattaneo)
    In /prin
     PRRHAH : Modify format statement for Y2K                 (F.Ranjard)
    -------------------------------------------------------------------- 
  ! 19991123 correction file no.2 for ALEPHLIB 31.3
    In /alef
     GETLE2: Protect against incomplete RNF2 bank (M.Cattaneo)
  ! 19991115 correction file no.1 for ALEPHLIB 31.3
    In /kalm
     UFTKAL: Protect against overflow in REAL*8 to REAL*4 conversion, 
             fix line longer than 72 characters                  (M.Cattaneo)
    Version for 1999 reprocessing and final 1999 MonteCarlo
  ! 19991025 ALEPHLIB 313.0
    In /comp    
     AUHCYL,PPCORR,THLCIR,TNRHPA,UFITZS,UFMS,UHELIX2 : 
      Double precision fixes for Linux                           (D.Smith)
    In /gam
     GBULOS : Double precision fixes for Linux                   (D.Smith)
     GFRAC  : Double precision fixes for Linux                   (D.Smith)
              Suppress unused declarations                       (M.Cattaneo)
    In /kalm
     UF2CRD,UF2TRK,UFDISC,UFJACO,UFLOSS,UFQPRC,UFTKAL,UFVDMS,UTPROC :
      Double precision fixes for Linux                           (D.Smith)
    In /kine
     KXL74A,KXL7PA,KXLUPA,KXP6IN : Update LEP energy to 220 GeV  (B.Bloch)
    In /phot
     EBLEAK,EBLPST,EBPREP,EBPRGA,ECLEAK : Raise upper limit for doing EM cluster
      corrections to 150GeV (from 100GeV)                        (M.-N.Minard)
    In /phy
     PAIRFD : Double precision fixes for Linux                   (D.Smith)
    In /ptoj
     FPKCM,FUPKCM,TFICOR : Double precision fixes for Linux      (D.Smith)
    In /tpc
     TCORES : Double precision fixes for Linux                   (D.Smith)
    In /vdet
     VTDERV,VTXNWT,VTXRAW : Double precision fixes for Linux     (D.Smith)
    In /ytop
     YCIRCR,YFMVTC,YFMVTR,YFTVTC,YFTVTR,YFVMAP,YFVMC,YFVMC1,YMS3IN,YTPAR :
      Double precision fixes for Linux                           (D.Smith)
    In /yv0
     YD0NFN,YFQERQ,YNV0NF,YNV0VE,YV0MAS,YV0ONG,YV0ONF :
      Double precision fixes for Linux                           (D.Smith)
    --------------------------------------------------------------------
  ! 19991008 correction file no.1 for ALEPHLIB 31.2
    In /comp
     PPCORR : Now usable also for MonteCarlo. Added some output on first call,
              database accessed only once per run.               (G.Dissertori)
    In /edir
     Bug fixes for class 16 and 17 at LEP energy > 200. GeV
     ESWEH  : Raise cut on maximum LEP energy from 200. to 250. GeV (M.Cattaneo)
     SELENU : Raise cut on maximum wire energy from 200. to 250 GeV (M.Cattaneo)
     SELTRK : Raise cut on maximum LEP energy from 200. to 250. GeV (M.Cattaneo)
  ! 19990903 ALEPHLIB 312.0
    In /dedx
     TBTBLP, TMPDDX, TPDHYP, TPXERR, TXPDDX : 
     Modified PAD calibration (S.Monteil)
     TBTBLK, TMDEDX, TIDHYP, TDXERR, TXDEDX : 
     All code removed from these obsolete routines, which now just call
     the replacement routines (M.Cattaneo)
    In /phot
     EBECMD : bug fix - correction was applied incorrectly to clusters near a
              crack in endcap B (about 1% of clusters)  (G.Taylor, M.-N.Minard)
    In /tpc
     TIMDIF : Fix y2k bug (I.Tomalin)
    In /yv0
     YNV0NF : Protect against divide by zero (M.Cattaneo)
    --------------------------------------------------------------------
  ! 19990518 correction file no.1 for ALEPHLIB 31.1
    N.B. The fix to the bug in EBECMD reported by Gary Taylor will not be
    implemented until after the summer conferences, in order to keep data and
    MonteCarlo consistent.
    In /prin
     FRFTDP : Read clock frequency in Hz from TSOR bank (W.Wiedenman)
  ! 19990419 ALEPHLIB 311.0
    New version for 1999 data-taking.
    In /kine 
     KCLEAN : Add XVRT bank to list of possibly user modified banks (B.Bloch)
     KEJOB  : Add bank KSEC to list of end of run banks             (B.Bloch)
     KSECBK : New - BOOK and fill bank KSEC with cross section info (B.Bloch)
     KXLUPR : New - print out jetset switches and parameters        (B.Bloch)
    In /ytop
      YFMVTR : Bug fix - Avoid division by zero when cmas=0 (E.Rohne)
    --------------------------------------------------------------------
  ! 981118 correction file no.3 for ALEPHLIB 31.0
    In /xlum
      XHVFIX : Fixes to varaiable declarations (A.Waananen)
  ! 981117 correction file no.2 for ALEPHLIB 31.0
    In /xlum
      XHVFIX : Bug fix, database was initialised with period number
               instead of run number                                (M.Cattaneo)
  ! 981103 correction file no.1 for ALEPHLIB 31.0
    In /alef
      GETLEP : Bug fix - Fill number was not filled in certain cases (J.Boucrot)
    In /xlum
      XHVBIT.H : New. Contains HV bit definitions                   (M.Cattaneo)
      XHVFIX : New. Repairs HV bits when they are known to be wrong (B.Bloch)
      XHVSTA : Add call to XHVFIX.                                  (B.Bloch)
               Take HV bit definitions from XHVBIT.H                (M.Cattaneo)
      XLSLUM : Take HV bit definitions from XHVBIT.H                (M.Cattaneo)
  ! 981029 ALEPHLIB 310.0
    In /alef
      ALVERS : Print out version number only once in the job        (M.Cattaneo)
      GETBP  : New. Moved to Alephlib from Alpha                    (J.Boucrot)
      GETLEP : Completely rewritten to give always the best possible
               available LEP energy and beam position for LEP1 and LEP2
               (See Marco's Mainz talk of 980926)                   (J.Boucrot)
      GETLE1 : Replaced with version from Alpha (adds a protection) (J.Boucrot)
      GETLE2 : Replaced with version from Alpha (adds a protection) (J.Boucrot)
      FIXALPB: New. Moved to Alephlib from Alpha                    (J.Boucrot)
      XFMCBP : New. Moved to Alephlib from Alpha                    (J.Boucrot)
    In /dedx
      TDEDXV : Do no apply HV correction from 1998 (KRUN>45000) (F.Cerutti)
    In /gam
      CORAD94: Apply correction from EGAZ bank. 
               Switched off if OLGA data card is present  (M-N.Minard)
    In /phy
      PAIRFD : Protection to avoid crashes when reading MINIs with
               the ITCO bank                          (T.Greening, J.Boucrot)
    In /vdes
      VGRDAL : Modified to use laser data also                  (G.Sguazzoni)
      VGRDLS : NEW: Add the laser information to the alignment  (G.Sguazzoni)
    --------------------------------------------------------------------
  ! 980928 correction file no.1 for ALEPHLIB 30.9
    In /comp
     PPCORR : Use .NEQV. instead of .NE. to compare two logicals (A.Waanenen)
  ! 980902 ALEPHLIB 309.0
    Modified ITC routines parameterise drift time-distance relation with
    spline require ADBS 240 or greater
    In /ides
     IINRES : New Drift-time params: use Spline from IDSP bank for 1997 
              data onwards (run > 43000). MC will still use IDRP. (J.Sedgbeer)
     IPRDAF : Add print of new variables in /IDRPCC/              (J.Sedgbeer)
    In /inc
     IDRPCC : Add DSPLID and IFLGID to end this COMMON.           (J.Sedgbeer)
    In /itc
     IDDIST : Modify to use polynom. or spline drift-time coeffs. 
              depending on the flag IFLGID in /IDRPCC/            (J.Sedgbeer)
    In /vdes
     VRECOR : New. Bonding error correction for fault types 301,302
              Returns displacement of local wafer coordinate (cm) (J.Rothberg)
    --------------------------------------------------------------------
  ! 980715 correction file no.3 for ALEPHLIB 30.8
    In /vdes
     VDCHNB : NEW - Given the local coordinate, bank number and view, 
                    returns the chip number.                 (M.Thulasidas)
     VDGTCH : NEW - Given the layer, face, module, view and chip in module, 
                    returns a global chip number             (M. Thulasidas)
    In /xlum
     XLSLUM : keep trying to get Trigger Enable mask if not present 
              for first event of run                         (B.Bloch)
  ! 980608 correction file no.2 for ALEPHLIB 30.8
    In /ytop
     YFTVTC : Bug fix - test on vertex location always failed due
              to uninitialised variable                      (P.Hansen)
     The above bug was introduced in Alephlib 30.7 correction file 2. Data
     processed through Julia with Alephlibs 307.2->308.1 have no secondary
     vertices or kinks!
  ! 980605 correction file no.1 for ALEPHLIB 30.8
    In /tdes
     TRDDAF : Print calibration bank style message once only (M.Cattaneo)
    In /tpc
     TPDVEL : Print TNFV/TDFV correction message once only   (M.Cattaneo)
    In /xlum
     XTGENB : Bug fix, NAXTBN,NAXTOP were incorrectly initialised
                                                            (B.Bloch,G.Taylor)
  ! 980502 ALEPHLIB 308.0
    This version will be used in Falcon for the 1998 data.
    IMPORTANT note about the version number: in the past, the Alephlib
    version was coded as a two digit number plus one decimal digit (e.g.30.7)
    A second decimal digit was used to denote correction files (e.g.30.76)
    From now, it is coded as a three digit number plus one decimal digit
    for the correction file (e.g. 308.0)
    The reason for this change is that, in the bank RHAH, the Alephlib version
    number is coded as an integer equal to 10*ALEVER. In the previous scheme,
    information about the correction file version was lost.
    In /xlum
     XLSLUM : For real data: after run 45000 (1998) require VDET ok  (B.Bloch)
    In /yv0
     YFQERQ : Use double precision internally, keep ERQ2 non-zero (M.Cattaneo)
  ! 980401 correction file no.6 for ALEPHLIB 30.7
    In /alef
     ALKRAN : New - Build kine run header KRAN    (B.Bloch)
     ALKMAR : New - Create kine event header KMAR (B.Bloch)
    In /edes
     EXPFRF : Bug fix. Correct treatment of d0 sign (C.Mannert)
              The bug affected mainly the calculation of the impact point on
              ECAL for GAMPEX photons
    In /fyxx
     FYFKIN : Fill FSHO monte carlo bank from KSHO bank (B.Bloch)
     FYIRUN : Add FSHO bank to E list                   (B.Bloch)
     FYKINE : Drop also KSHO bank                       (B.Bloch)
     FYTOKI : Handle also KSHO/FSHO banks               (B.Bloch)
    In /kine
     KP6SHO : New - BOOK and fill bank KSHO with fragmentation info (B.Bloch)
     KSHOBK : New - BOOK and fill bank KSHO with fragmentation info (B.Bloch)
  ! 980313 correction file no.5 for ALEPHLIB 30.7
    In /fyxx
     FYKILL : Don't kill vertices in TPC passive material at large angles
              (membrane et al., resistor chain, laser mirrors and prisms)
                                                                 (S.Wasserbaech)
  ! 980310 correction file no.4 for ALEPHLIB 30.7
    In /comp
     THLCIR : Use DOUBLE PRECISION for R, to avoid numerical problems
                                                         (M.Cattaneo)
    In /tdes
     THTRAN : Use DOUBLE PRECISION for SP0,CP0, to avoid numerical problems
                                                               (M.Cattaneo)
  ! 980220 correction file no.3 for ALEPHLIB 30.7
    In /kine
     KXP6CO : Fix a WRITE statement               (B.Bloch)
  ! 980216 correction file no.2 for ALEPHLIB 30.7
    In /ytop
     YFTVTC : Restrict vertices to reasonable volume
              to avoid numerical problems             (D.Casper)
  ! 980209 correction file no.1 for ALEPHLIB 30.7
    In /comp
     PPCORR : New - Correct particle momenta for effects of residual 
              distortions in the central tracking detector.
              This is the so called "sagitta correction".    (I.Tomalin)
    In /kine
     KKMOVE : extend NMX from 100 to 200          (B.Bloch)
     KZFRBK : take booking of bank out of do loop (B.Bloch)
     KP6ZFR,KPYZET,KXP6AL,KXP6BR,KXP6CO,KXP6IN,KXP6ST,KXP6TO,PTY6COM.h :
       c.f. KZFRBK,KLUZET,KXL7AL,KXL7BR,KXL7CO,KXL7PA,KXL7ST,KXL7TO,LUN7COM.h
       New - Kingal interface routines for PYTHIA 6.1        (B.Bloch)
    In /ysv
     YSKLLD : Protect against too many tracks                       (D.Casper)
     YSVTRK : Check object quality flag to protect against too many 
              tracks and other catastrophes                         (D.Casper)
    In /yv0
     YFMV0V : Protect against precision problem (M.Cattaneo)
  ! 971202 ALEPHLIB 30.7
    In /alef
     ALTRHV - Obsolete. Use XHVBIT instead (M.Cattaneo)
    In /dedx
     TCHKHV - Call XHVBIT instead of ALTRHV, 
              return .TRUE. for MonteCarlo      (M.Cattaneo)
    In /xlum
     XLUMOK package
    New package which brings together various XLUMOK related routines from Julia
    and Alpha. Includes also XVDEOK routines
    XLUMOK adaptations by Brigitte Bloch, XVDEOK by Henry Seywerd
    Code reviewed and optimised by Marco Cattaneo
    LLUMOK : Checks HV status, enabled triggers, and t0 synch. for LCAL
    SLUMOK : Checks HV status, enabled triggers, and t0 synch. for SICAL
    VBITGD : Checks readout status of VDET
    XHVBIT : Returns raw HV status bits, without run/detector specific repairs
    XHVSTA : Check HV status bits (from QHVSTA in ALPHA)
    XLSLUM : Checks HV status, enabled triggers, and t0 synchronization
    XLUMOK : Checks HV status, enabled triggers, and t0 synchronization, both
             for SICAL and LCAL with year dependent setup
    XRE133 : Flags laser events taken during LEP 1.5 data (from QRE133 in ALPHA)
    XRE94  : Flags laser events hidden in runs 25520 to 25530 taken in 1994
             (from QRE94 in ALPHA)
    XT0SYN : Get t0 synchronization information
    XTGENB : Check which triggers are enabled
    XVDEOK : Determines HV state of VDET
  ! 971105 ALEPHLIB 30.6
    In /alef
     ALBUNCH: New. Get number of bunches from LEP information in 1997 (B.Bloch)
    In /comp
     UFITQL,UFMS,UMSERR,YV0ONE : fix variable type inconsistencies
         in function calls, for Linux                            (A.Waananen)
    In /edir
     SELEVT : fix variable type inconsistencies in function calls, 
              for Linux                            (A.Waananen)
    In /kalm
     UFG2GT,UFTKAL : fix variable type inconsistencies in function calls, 
                     for Linux                            (A.Waananen)
     UFTKAL : Disable removal of outliers if track has 4 or less remaining
              3-D coordinates. Fail if numerical problem would reduce track
              to exactly 3 hits.                               (D.Casper)
    In /phy
     ALTHRU,PIDECY : fix variable type inconsistencies in function calls, 
                     for Linux                            (A.Waananen)
    In /prin
     FRFTDP : fix variable type inconsistencies in function calls, 
              for Linux                            (A.Waananen)
    In /ptoj
     PITMAJ,TUN1NC : fix variable type inconsistencies in function calls, 
                     for Linux                            (A.Waananen)
    In /trig
     X1BOOK,X2TRIG : fix variable type inconsistencies in function calls, 
                     for Linux                            (A.Waananen)
    In /vdes
     VCHNST,VGWFVU,VGWFXY : fix variable type inconsistencies in 
                            function calls, for Linux           (A.Waananen)
    In /ysv
     YSPAIR : Do not put in YSVX/-2 track pairs failing cuts        (D.Casper)
     YSVRTX : Remove cut on max number of FRFT tracks               (D.Casper)
              Fix variable type inconsistencies in function calls, 
              for Linux                                           (A.Waananen)
     YSVTBK : Use hit bitmasks to verify track direction            (D.Casper)
     YSVTRK : Put only JYSVQU=0 objs. in mask of objs. already used (D.Casper)
    In /ytop
     YTCONV : Bug fix - declare WTX, VARWX arrays (W.Manner)
     YCIRCR,YVPOSS : fix variable type inconsistencies in function calls, 
                     for Linux                            (A.Waananen)
    In /yv0
     YMFMIN,YMFV0V : fix variable type inconsistencies in function calls, 
                     for Linux                            (A.Waananen)
    --------------------------------------------------------------------
  ! 971027 correction file no.4 for ALEPHLIB 30.5
    In /tpc
     TFIXT0 : New - Correct for 1997 hardware problem which shifted T0 
                    by several ns. during periods of high luminosity at 
                    start of fill                            (I.Tomalin)
  ! 971017 correction file no.3 for ALEPHLIB 30.5
    In /ptoj
     TFICOR : Don't make corrections for new alignment (W.Wiedenmann)
    In /tpc
     TCORES : Don't make corrections for new alignment (W.Wiedenmann)
    In /vdet
     VTDERV : Improve the protection against rounding errors (A.Bonissent)
  ! 971001 correction file no.2 for ALEPHLIB 30.5
    In /edir
     SNGMTR : Remove CALL from function references, for Linux. (A.Waananen)
    In /kalm
     UFECAL : Remove CALL from function references, for Linux. (A.Waananen)
    In /vdet
     VDTTRA,VTRFIT: Remove CALL from function references, for Linux.(A.Waananen)
  ! 970915 correction file no.1 for ALEPHLIB 30.5
    In /kalm
     UFGAIN - Protect against zero determinant
     UFTKAL - Fit the track (using a zero gain matrix for this point) 
              even if something went wrong in the determinant       (D.Casper)
  ! 970829 ALEPHLIB 30.5
    In /alef
     GETLE1 : New. Gives the exact run energy for 1993 -> 1995 LEP1 runs
              from the latest estimations of the LEP energy        (J.Boucrot)
     GETLUM : get lumi from 'LUMI' if it's 0. in 'RLUM'            (J.Boucrot)
    In /comp
     YHELIX : New - Determine the turning angle and momentum of an 
                    FRFT track at a point                           (D.Casper)
     YSENSE : New - Determine the sense of direction of a track     (D.Casper)
    In /kine
     KBPART : handle properly particles which should be tracked by
              GEANT (flr)
    In /tdes
     TSCINT : Add 201 statement after end of DO loop for Linux (A.Waananen)
    In /tpc
     TDFVRU : Drop TDFV bank if a good row is not found (D.Casper)
    In /ysv
     YSKLLD : Do not check for V0s or ITC tracks in the kink veto (D.Casper)
     YSVFIT : Include only charged tracks in the kink veto        (D.Casper)
              Clear vertex quality flag (bug fix, 090997)         (D.Casper)
     YSCLLD,YSGETS,YSPCUT,YSTLLD,YSVBLD,YSVRTX,YSVTBK,YSVTRK :
       Changes to interface nuclear interactions and kinks to
       energy flow package (ENFLW 300)                            (D.Casper)
    --------------------------------------------------------------------
  ! 970717 correction file no.4 for ALEPHLIB 30.4
    In /vdet
     VDHTER : Fix the bug on WERRA ((3,3) instead of (2,2))        (Manoj T.)
     VHERR1 : Modify the error param. (due to change in S/N in MC) (Manoj T.)
  ! 970716 correction file no.3 for ALEPHLIB 30.4
    In /comp
     UFITQL : Put cut on NTPC hits, COS(theta) earlier in the routine 
                                                          (M.Cattaneo)
  ! 970710 correction file no.2 for ALEPHLIB 30.4
    In /ytop
     YFMVTR : Protect against astronomical chi^2 (D.Casper)
  ! 970708 correction file no.1 for ALEPHLIB 30.4
    In /tdes
     TSCINT : Protect against infinite momentum tracks 
              (e.g. if magnetic field is off)           (M.Cattaneo)
  ! 970704 ALEPHLIB 30.4
    In /vdes
     VGRDAL : Modified to use VNGBVNLC if they exist (F.Ranjard)
    --------------------------------------------------------------------
  ! 970618 correction file no.3 for ALEPHLIB 30.3
    In /ptoj
     PJPFXT - New: Create the FXTR bank and fill it from PFXT  (D.Casper)
  ! 970613 correction file no.2 for ALEPHLIB 30.3
    In /kine
     KCLEAN : Allow user to supersede GKBR bank             (B.Bloch)
     KLUZET : New - transfer fragmentation info from JETSET (B.Bloch)
     KXL74A : Extend particle codes from JETSET             (B.Bloch)
     KXL7AL : Handle correctly Tau's from PYTHIA            (B.Bloch)
     KXL7PA : Extend particle codes from JETSET             (B.Bloch)
     KZFRBK : New - book KZFR bank                          (B.Bloch)
    In /vdes
     VCORMP : modify for case 8 rphi (J.Rothberg)
  ! 970528 correction file no.1 for ALEPHLIB 30.3
    In /kalm
     UFTKAL - protect against incorrect angular subtraction during smoothing;
              add support for tracing the fit of a track by calling 
              UFTRAC(.TRUE.) immediately before fitting.              (D.Casper)
    In /vdet
    VDTTRA - add UFTR card to flag a track for Kalman filter printout during
             fit.  NR=event number, with entries on the card indicating which
             track(s) of that event should be dumped.  
             Example:  UFTR 10 / 1 2 5 dumps tracks 1, 2, and 5 of event 10. 
             Note there is no selection by run number since the user is presumed
             to be dealing with a small set of events when this feature is 
             enabled.                                                 (D.Casper)
  ! 970514 ALEPHLIB 30.3
    In /alef
     GTT0GL - Correct bug in treatment of new alignment (D.Casper)
    In /fyxx
     FYRELA.H : Increase MAXMCX to 2000 (from 1000) to cope with PHOT02
                events with too many KINE banks                   (W.Manner)
    In /kalm
     UFDISC - Set the energy loss to zero if it is more than 5% of
              the track's starting energy                           (D.Casper)
     UFLOSS - Set the energy loss to zero if it is more than 5% of
              the track's starting energy                           (D.Casper)
     UFVDMS - Protect against very high incidence angle tracks      (D.Casper)
    In /tdes
     TCTSEC - Correct for transverse drift velocity                (D.Casper)
     TCTGLB - Disable transverse drift correction if sector number
              is negative (to allow old behavior to be selected)   (D.Casper)
    --------------------------------------------------------------------
  ! 970425   correction file no. 9 for ALEPHLIB 30.2
    In /alef
     GTT0GL - check whether new alignment banks are present before adjusting t0
                                                                     (D.Casper)
    In /kalm
     UFVDMS - fix overwrite of flag enabling energy loss in Kalman filter 
                                                                     (D.Casper)
    In /phot
     EBLEAK,EBLPST,EBPREP,EBPRGA,ECLEAK - increase to 100 GeV the cut on
              maximum energy of a cluster                         (M.N.-Minard)
    In /ptoj
     TUN1NC - fix unintentional disabling of wire coordinates
              print a message indicating whether wire coordinates will be used
              avoid error messages when reading junk events by removing error
              return on absence of PCOI (return silently instead)    (D.Casper)
    In /vdet
     VDHTER - fix incorrect order of track momentum components in call to VHERR1
                                                                     (D.Casper)
  ! 970417   correction file no. 8 for ALEPHLIB 30.2
    In /kalm
     UFTKAL -  Support for constrained fits in UF2PNT.
    In /tdes
     TRDDAF -  Validity range of TNLO checked.
    In /ysv
     YSVBLD - replace CALL NDROP with IRET=NDROP (NDROP is an INTEGER FUNCTION).
     YSVRTX - remove INIT variable (not used), save name-indices.
  ! 970416  correction file no. 7 for ALEPHLIB 30.2
    In /kalm
     UFTKAL, UFSWMC, UFSWMX, UFSTAT, UFGETT, UBANGL - replace PI with ONE_PI
     UFTKAL, UFVDMS, UFREIN - corrections (D.Casper) to make fit with constraints.
     UF2SCA is removed.
     UFG2GT is added.
    In /inc
     UFTCOM - replace PI with ONE_PI.
  ! 970415  correction file no. 6 for ALEPHLIB 30.2
    In /alef
     GETLE2 - new routine (J.Boucrot) :  SUBROUTINE GETLE2(ELEP,IFLAG) 
              Get the "instantaneous" exact LEP energy for LEP 2 runs 
    In /ytop
     YFTVTC - correction (D.Casper).
  ! 970404 correction file no. 5 for ALEPHLIB 30.2
    In /ysv
     introduction of the nuclear interactions package written by D.Casper.
    In /ytop
     YFTVTC - new routine (D.Casper) to extend YTOP to ITC-only tracks.
     YFMVTR - corrections (D.Casper) to move around some statements into the
              correct places so that the input logical flags would do what 
              they say.
  ! 970402 correction file no. 4 for ALEPHLIB 30.2
    In /tdes
     TRDDAF TALINI - use the right HAC parameters.
    In /kalm
     UFGETT UFJACO UTPROC UFSWMS UFSWMX UFTRAN - correction to please LINUX
              compiler.
     UFQPRC UFVDMS - remove double definition of a variable.
     UFTKAL UFJACO - add some protections.
  ! 970326 correction file no. 3 for ALEPHLIB 30.2
    In /ptoj
     TUN1NC - load errors packed in PTNC bank.
              remove code written to recompute errors.
  ! 970320 correction file no. 2 for ALEPHLIB 30.2
    In /vdet
     VDTTRA - remove coordinate filtering at the beginning, restore it at
              the end.
  ! 970312 correction file no. 1 for ALEPHLIB 30.2
    In /comp
     UFTTRK - removed, obsolete routine replace by UFTTRA.
    In /vdet
     VDTTRA - new routine which contains the VDET pattern recognition part
              of UFTTRA/alephlib_216.
              this part has been removed from UFTTRA/alephlib_302.
     VTRFIT   calls VDTTRA instead of UFTTRA.
  ! 970306 ALEPHLIB 30.2
              This version contains the new Kalman filter which gives better
              Chi2 than the previous one (D.Casper) 
              This version contains the new field map. When reading an old 
              ADBSCONS the old field map is used (W.Wiedenman)
              This version is forseen to run with JUL302.
              ===> the VDET pattern recognition has to be tuned.
              ===> the library is technicaly backward compatible but results
                   could be different.
    In /alef
     DVMOVE - new routine: DVMOVE(A,B,N) 
              copy A(1:N) into B(1:N), A and B are double precision arrays.
     DVZERO - new routine: DVZERO(A,N) 
              reset A(1:N) to zero , A is a double precision array.  
    In /comp
     UFMATX -  new routine : matrix operations in double precision
               res, a, b, c are mdim x mdim double precision matrices, 
               v is mdim vector, s is a double precision scalar
               UFMMUL (RES,A,B,MDIM) res = a * b
               UFMMLT (RES,A,B,MDIM) res = a * b^T
               UFMSCL (RES,A,V,MDIM) res(i,j) = a(i,j) / (v(i)*v(j))
               UFMADD (A,S,B,RES)    res = a + s * b
               UFMULT (A,B,C,RES)    res = a * b * c^T
     UHELIX2 - new routine: UHELIX2 (R,VV0, VV0COV, POS, POSCOV, IRET)
               Given helix and covariance, compute pos and error at radius.
     UFTKAL UFTTRA UFVDMS - are removed, replaced by /kalm/.
    In /kalm
      new routines:
      UBANGL  UF2SCA  UFBEBL  UFCOVA  UFGAIN  UFLOSS  UFSCOV  UFSWMS  
      UFTRAN  ULOAD   UF2ARC  UF2TRK  UFBERR  UFDISC  UFGETT  UFQPRC  
      UFSTAT  UFSWMX  UFTTRA  UPCONS  UF2CRD  UF2USE  UFCHI2  UFECAL  
      UFJACO  UFREIN  UFSWMC  UFTKAL  UFVDMS  UTPROC
    In /inc
      UFTCOM   - new include file for the new kalman filter package.
      TPCDRIFT - new include file for new alignment.
      TFCORR   - support for new alignment.
      TJJPAR   - get HAC parameters for new alignment banks.
    In /ptoj
      PTPCOJ - support for wire coordinates
      TUN1NC - include wire coord and error when unpacking PTNC
    In /ides
      IINALI - support for new alignment TPC bank TNOS.
    In /tdes
      TRDDAF, TGHPAL, TALINI, TCTGLB - support for new alignment banks.
      TCRTRN - new routine (copied from TCRTRA) for new alignment.
      TMATUT - new routine auxillary to TALINI.
    In /tpc
      TPDVEL, TFCINI, TLACOR, TZCSVD - support for new alignment.
      TNFVRU - new routine (copied from TDFVRU) for new alignment bank TNFV.
    In /ysv
      YSVRTX - main routine of the new /ysv package which finds secondary vertices.
               the routine is DUMMY for the moment.
    --------------------------------------------------------------------------------
  ! 970220 ALEPHLIB 21.6 
    In /alef
     ALELEP - Replace previous code by call to identical routine ALEFIL 
              (M.Cattaneo 10/02/1997)
     ALSECS - Remove test on century for leap year (year 2000 is a leap year)
              (M.Cattaneo 27/02/1997)
    In /edir
     CLAS24 - Bug fix: Gampec photons were not being looked for in bank PGAC,
              where they have been since December 1994 (G.Ganis, 17/02/1997)
    In /muid
     MUREDO - Moved to Julia library (version 285) because it calls Julia
              routines (A.Waananen 5/12/96, M.Cattaneo 19/02/97)
    In /prin
     PRWORK - Obsolete. Removed as it calls non-existent routine BPRWRK
              (A.Waananen 5/12/96)
    In /tpc
     TPDVEL - Some comments corrected (I.Tomalin, 9/10/1996)
    In /trig
     X1APTN - Add endcaps to SNG_N_EL trigger definition (A.Putzer 04/02/97)
    In /vdet
     VTRKEX - Place VDMS on E-list for cleanup (D.Casper)
    In /yv0
     YTCONV - Use correct HAC parameter JYNMVS instead of obsolete JYNMSC
     YTRV0S - Use correct HAC parameter JYNMVS instead of obsolete JYNMSC
              (W.Manner 10/02/1997)
  ! 960904 corr.file no.3 to ALEPHLIB 21.5
    In /alef, /comp, /edes, /edir, /gam, /phy, /trig, /vdes
      Add C! description comment to routines where it was missing 
      (affects only documentation)
  ! 960903 corr.file no.2 to ALEPHLIB 21.5
    In /comp, /dedx, /ecal, /edir, /kine, /phot, /ptoj, /tdes, /tpc, 
       /trig, /ytop, /yv0
      Add #ifndef DOC flag to routines where it was missing 
      (affects only documentation)
  ! 960823 corr.file no.1 to ALEPHLIB 21.5
    In /fyxx
     FYTREE - reset the number of kept tracks if some tracks were kept
              without the vertex origin.
     FYFKIN - print FKIN/FVER when FYDEB flag is defined.
  ! 960701 ALEPHLIB 21.5
    In /comp
     AUHCYL : Double precision on all platforms (M.Cattaneo)
    In /edir
     CLAS24,LEPTO : protect against possibility of missing banks (M.Cattaneo)
     CLAS24,LEPTO,TRUSLU : Reject tracks with bad TRPFRF ret. code (M.Cattaneo)
    In /fyxx
     FYIRUN : Fix a string concatenation (M.Cattaneo 22 July 1996)
    In /ptoj
     FPTOJ, IPTOJ, PHSTOJ - Replace LENOCC by LNBLNK (M.Cattaneo)
    In /tpc
    TPDVEL - For the option RAW/ONL, check TDFV from Daf before taking TLAS
             from data (P.Comas)
    In /vdes
     VCORMP : modify for cases 17 rphi, 10 Z (J.Rothberg)
    In /vdet
     VTRUH  :  New routine, count the number of properly associated VDET
               hits by layer and view (A.Bonissent).
  ! 960618 ALEPHLIB 21.4
    In /alef
    ALSECS : New routine to convert "Aleph format" date/time to integer
             number of seconds elapsed since 1-JAN-1988  (O.Schneider)
    In /vdet
     VDHTER :  Modified to take the space resolution from MC (Manoj T.)
     VHERR1 :  New routine, compute VDET hit error based on MC (Manoj T.)
    In /edir
    Major changes for LEP 2 EDIRS (R.Edgecock et al)
    Modified routines: ALSUMCL,CLAS24,ESWEH,LEPTO,MUTRGS,PHEDIR,SELBHA,SELEMU,
                       SELEVT,SELTRK,SIEDIR,TIZERO,TRUSLU
    New routines: ENLCL2,GGESUM,GGSEH,GGTRKH,QTRKCH,SELENU,SELGGE,SELWWA,
                  SELWWB,TIZERN,TRKWWS,VDCOSM
    The LEP 1 EDIR classes are unchanged and the code has been written such 
    that the EDIRs for LEP 1 will be the same after a reprocessing, 
    except for the following:
     o class 19 - this now uses QMUIDO instead of Mucalo and accepts many fewer
                  events
     o class 21 - minor cut changes
     o classes 22 and 23 - very small changes as one of the thresholds is now
                           beam energy dependent
     In addition, the following should be noted:
 (1) A run at LEP 1 energies during LEP 2 will get a LEP 1 EDIR
 (2) As the LEP 1.5 runs already have LEP 1 EDIRs, they will continue to get
     these if they are reprocessed.
 (3) The original EDIR code was written by various people and has been
     unsupported for a number of years. As a result, several bugs affecting the
     1995 data have come to light during the development of the LEP 2 code. They
     are:
     (a) for all 1995 running, class 20 always fails 
         (because of the PEWI to PWEI change)
     (b) for all 1995 running, events are rejected by classes 17 and 18 which
         should have been accepted (because of a cut on the Pastis timing, which
         is effected by the bunch trains). This has only a small effect on class
         17, but a large effect on class 18.
     (c) for the 1.5 GeV running, classes 16 and 17 will accept events they
         shouldn't because the wrong cms energy is used (91.1 GeV).
     These will be fixed if/when the data are reprocessed.
 (4) There are several classes which are unused.
                                   LEP 2 EDIR
                                  ============
 Status key:
    Old     = copied directly from the current LEP 1 EDIR
    Mod     = modified version of LEP 1 EDIR class
    New     = new LEP 2 class
  Class  Status                           Description
  ----- -------- ---------------------------------------------------------------
    1     New    >= 1 ECAL cluster E>1.5GeV + 1 module with Ewire>0.5, |T0|<200
    2     Old    HCAL energy(pads) + ECAL energy(wires) > 15 GeV
    3     New    Cosmics passing through VDET
    4     Old    HCAL energy(pads) > 3 GeV + HCW(4 planes) * ITC trigger
    5     Old    1 to 7 tracks with d0<5cm, z0<20cm, NTPC>=4
    6     Old    >= 8 tracks, cuts as above
    7     Mod    LUM A and LUM B, both E > 30GeV
    8     Mod    LUM A or LUM B, E > 30GeV
    9     New    2-photon: >= 3 trks, Ecalorimeter/ELep<0.5, Echarged/ELep<0.4
   10
   11     New    Low multiplicity WW A: >= 1 track of each sign
   12     New    Low multiplicity WW B: all tracks of same sign
   13
   14
   15     Old    Dileptons
   16     Old    QQbar based on tracks
   17     Old    QQbar based on calorimetry
   18
   19     Mod    Muon candidates (now using QMUIDO)
   20     Old    Bhabha candidates
   21     Mod    Single photon candidates (slightly different cuts)
   22     Mod    Sical A (E>=20 GeV) AND Sical B (E>=20*ELep/91.2 GeV)
   23
   24     Old    Dilepton candidates
   25     Old    Slow control records
   26     Mod    Alignment and calibration (Muon id modified)
   27*    Old    VDET laser events
   28**
   29     Old    Random triggers
   30     Old    Events which fail everything else
  *  On the MINI only, electron selection from QSELEP
  ** On the MINI only, muon selection from QSELEP
  ! 960527 - ALEPHLIB 21.3
    Some packages have been moved from alephlib to alephio (F.Ranjard)
    - some routines from ALEPHLIB/ALEF have been moved to ALEPHIO/IO. 
    - some include files from ALEPHLIB/INC have been moved to ALEPHIO/INC.
    - ALEPHLIB/DBAS has been moved to ALEPHIO/DBAS.
    - ALEPHLIB/ALPH has been moved to ALEPHIO/ALPH.
    - C routines dealing with IO are now stored in ALEPHIO/C.
    - C routines dealing with tracking are stored in ALEPHLIB/C.
            C-compilation is made with -DALEPH_C     
    - The C module and ALC.C, ALC.O are removed.
    - Many multiline strings (i.e. strings stretching over more than one line
      in FORMAT or WRITE statements) have had to be split, since they are not
      accepted by the CPP on VMS.
         In /alef
     ALKJOB : Use kjobjj.h instead of kgjjpar.h  (M.Cattaneo)
     RQBUNC : Set NWAG and INBU for '96. Avoid trying to get the info from the
              unreliable LZZT as the bunch train scheme doesn't change 
              within the year. (P.Comas)
         In /comp
  - UFVDMS fix multiple variable definitions
         In /edes
    replace '#include "implicit.h"' by 'IMPLICIT NONE' (F.Ranjard)
     EPRCOM, ERDDAF : Fix multiline strings (M.Cattaneo)
         In /edir
    ALSUMCL : fix multiline string (M.Cattaneo)
    ULANGL  - Replace call to RLU by call to RNDM
    VUROBO  - Put ULANGL function in separate file, suppress RLU function
         In /fyxx
    FYRELA.H : Remove # as first character of DOC line, breaks CPP (M.Cattaneo)
         In /kine
    KCLEAN, KINIT, KSWAP, KXL7AL, KXL7BR, KXL7ST, KXLUAL, KXLUBR :
      split character string stretching over two lines (M.Cattaneo)
    Interface to JETSET 7.4 and changes for LEP 2 (B.Bloch)
     KIPARA : increase the number of particles/event for LEP2 generators
     KXL7AL : fix format statement
     KXL7PA : fix maximum energy to 205. Gev compatible with LEP2
     KXL74A : interface routine to JETSET 7.4
         In /mdes
     MUPRGE : Fix multiline strings (M.Cattaneo)
         In /satr
     SAPRDI,SAPRHI : Fix multiline strings (M.Cattaneo)
         In /sdes
    new routine STRIGF ( B.Bloch ) to identify trigger type
    new routine STMASK ( B.Bloch ) to build trigger masks
         In /tdes
     TGEPBK : Fix multiline strings (M.Cattaneo)
         In /trig
     X1IRUN : In MonteCarlo, use trigger thresholds which are setup dependent
              (B.Bloch) 
         In /vdes
    Improve correction of time dependent bending of the faces (D.Rousseau)
     VGRDAL: call VALFCO, suppress forced reaccess of VALC,VAGB
     VALFCO: (new deck) Does the correction
     VALCOR: Obsolete, removed.
         In /vdet
     VDMSUP,VTRKEX: fix multiple variable definitions (M.Cattaneo)
         In /vd89
    The old vdetdes package is removed (F.Ranjard)
         In /ytop
     YTOPNW: Replace call to TIMAL by call to TIMEL (M.Cattaneo)
     YVPOSS: Fix multiline strings (M.Cattaneo)
         In /yv0
     YV1INI : Fix multiline strings (M.Cattaneo)
    --------------------------------------------------------------------
  ! 960205 - ALEPHLIB 21.2
         In *CD -> MUIDNEWS
          ALPROB Fix a small bug: ALPROB gets the required numbers of
                 random numbers according to the run, event number and
                 seed. If the routine was called twice or more following
                 with the same seed the result was not the same because a
                 vector was not defined in the right way. (A.Gregorio)
          MRMHIT Fix a small bug: MRMHIT masks Monte Carlo bank MHIT to
                 take into account muon chambers inefficiencies. During
                 the 1993 the chambers 4C and 4D were off for a certain
                 period and in order to consider this inefficiency inside
                 MRMHIT a new bank (D4CD) was filled for 93 Monte Carlo.
                 This bank was filled in the wrong position and was not
                 present if a muon hit has not been fired. (A.Gregorio)
         In *CD -> PHYNEWS
    FJMMCL - (JADE algorithm) Speed up by doing linear search (O.Callot)
         In *CD -> PTOJNEWS
    FUPKCM - Speed up by computing DSQRT of constants on first call and
             remembering for subsequent calls (O. Callot)
         In *CD -> VDESNEWS
    Correct time dependent bending of the faces of VDET (D.Rousseau)
     VALCOR: (new deck) Does the correction
     VGRDAL: Force reaccess of VALC,VAGB; call VALCOR
         In *CD -> YV0NEWS
    YPSIVE, YV0ONH, YMFMIN, YFPSIN - Speed up by calling NAMIND only on
            first call and remembering for subsequent calls (O. Callot)
    ------------------------------------------------------------------
  ! 951208 - ALEPHLIB 21.1
         In *CD -> ALEFNEWS
    RQBUNC - tagging of level 3 was not working at the beginning of 95
             so set IBUN=1, IQUA=3 for runs in 4x1 configuration and
             leave as before those in 4x2 configuration .
         In *CD -> DEDXNEWS
    add pad dE/dx (D.Casper)
    TBTBLK, TMDEDX, TIDHYP, TDXERR, TXDEDX are obsolete and replaced by
    TBTBLP, TMPDDX, TPDHYP, TPXERR, TXPDDX
    the new routines work for WIRE or PAD dE/dx
    the first argument of the routines is 'PAD' or 'WIRE', the rest
    of the calling sequence stays unchanged apart NS which becomes XNS.
         In *CD -> PTOJNEWS
    PTEXSJ - Also transfer PTPX to TPXS (D.Casper)
    -------------------------------------------------------------------
  ! 951114 - ALEPHLIB 21.0
         In *CD -> ALEFNEWS
    BMACROD - new *CD which contains the necessary declarations for
              BMACRO.
    GETLUM  - get LCAL luminosity for High Energy runs ( LEP II )
    GETS4B  - new routine : Sical lumi per bunch for multibunch runs
         In *CD -> PRINNEWS
    PRRHAH - Modified for LEP II selected Data and printout of Computer
         In *CD -> DEDXNEWS
    TDEDXV -  IF run# >= 40000 THEN
         The sector dE/dx modification for high voltage is only applied
         to the TCSX constants if the voltage is more than 10 volts from
         the nominal value.  If the voltage is at the nominal value
         (1250 volts), the TCSX constants are not modified. (J.Nachtman)
         In *CD -> TPCNEWS
    TPDVEL - allow laser drift velocity from TLAS to be used in
             normal JULIA processing.
             introduce TVOF data card to allow user to offset
             drift velocity. (I.Tomalin)
          In *CD -> VDESNEWS
    many corrections and new features in hadrware error software
    add *CA BMACROD where it is necessary. (J.Rothberg)
          In *CD -> VDETNEWS
   - VTCLLD :  Correct definition of neighbouring wafer for new VDET
   - VTCLAS :  move local work indices setting just before they are used
   - VTRFIT :  Access VDET Setup code using ABRUEV and GTSTUP
               (A.Bonissent)
    ------------------------------------------------------------------
  ! 951010 - ALEPHLIB 20.9
         In *CD -> ALEFNEWS
    ALFMT - IF called for ALL banks : ALFMT (LUFMT,'ALL ',FMT),
            after the 1st call, it will check ALL formats and redefine
            those which are different from those stored on BANKAL.FMT
         In *CD -> DEDXNEWS
  - TDEDXV : IF run# >= 40000 THEN  (140Gev runs and above)
       The global De/Dx normalisation factor is calculated
       using a parametrization given in TCPX bank.
       The sector De/Dx normalisation factor is taken from
       the TCSX bank and maybe modified by the TPHV bank.
       (J.Nachtman)
         In *CD -> VDETNEWS
  - Unmultiplex strips before clustering rather than after;
    handle the relation between "wafer clusters" and
    "global clusters" (at module level); new adress encoding
    scheme.  Affected :
    VTLINK, VRMWF, VTFILL, VTCLLD, VTRFIT
  - Modify VGRDAL so that alignment banks for monte carlo are accessed
    by setup code; for data we keep going with run number
  - VDMSEC
      get multiple scattering constants from setup dependent bank
      VRLD instead of from FKAL bank
  - VRLDGT
      new routine to give access to VRLD bank
  - VDMSUP
      bug fix to a bank index and garbage collection protection
  - VDMSRL
      add more flexibility to allow for layer dependent effects
         In *CD -> COMPNEWS
  - UFMS, UFTKAL, UFVDMS
      get multiple scattering constants from setup dependent bank
      VRLD instead of from FKAL bank
  - UFTTRA
      add a call to vdmsup for consistency
         In *CD -> VDESNEWS
    Add new routines to handle hardware errors.
         In *CD -> YTOPNEWS
   YDIMTO - increase MAXHLX the maximum number of charged tracks
                     MAXNTR the maximum number of neutral tracks
                     MAXTRK = MAXHLX + MAXNTR
                     MKDIMM = (MAXTRK+NMSIZZ-1)/NMSIZZ
    ------------------------------------------------------------------
  ! 950804 - ALEPHLIB 20.8
    remove all *IFn *ELn *EIn to make an AUTONESTed source file
    to be easily translated to CVS on Unix.
         In *CD -> ALEFNEWS
    ADBRJJ, ADBRLIST - add one column for beam position periods.
    ALLEP1 - logical function ALLEP1(irun) is true if energy of
             run # irun is .lt. 100GeV
         In *CD -> EDIRNEWS
    LEPTO  - add a protection against events with > 300 tracks.
             (S.Wasserbach)
         In *CD -> VDETDES
    The changes include the addition of two new subroutines for
    packing and unpacking VDET hit addresses VPKADD, VUNADD.
    The four old routines that did this kind of thing,
            VADDPK, VADDUN, VADESA, VAENSA,
    will henceforth only work for VDET91 because the packing scheme
    will be different for VDET95  (S.Waseerbach)
    VFNEAR - (new deck) find faces near a given phi coordinate
    VPHICF - (new deck) returns phi coordinate of face center
    VPKADD - (new deck) new packing routine
    VUNADD - (new deck) new unpacking routine
    VHLSBT - deleted obsolete stuff about "corruption bit",
            added parameters pertaining to VDET95
    VRDOJJ - added one hac parameter by hand
    VDETGE - added bit shifts and masks (for the things that
            are not identical in VDET91 and VDET95)
    VRDOCO - added one word for number of bits in wafer number
    VDAFRD - initialize new variables and read one more word from VRDO
    VDETGI - fill bit shifts and masks in VDETGE (from 1.8);
            fill in geometry arrays even for empty slots
    VDGDMP - print new variables in VRDOCO and VDETGE
    VRDDAF - print one line when geometry is initialized
         In *CD -> TRIGNEWS
     remove all references to XTBP bank.
         In *CD -> YV0NEWS
    YDISMC - Fix calculation of symmetry point when one center
             lies inside the other circle. This happens for
             like-signed tracks (P.Rensing).
    --------------------------------------------------------------------
  ! 950704 - ALEPHLIB 20.7
         In *CD -> ALEFNEWS
    ALTRIG - get trigger bits from row containing 'TPR ' in 1st word.
         In *CD -> TRIGNEWS
    X1DISN, X1MIXN, X1REDO, X1TRIG - corrections (A.Putzer)
    ------------------------------------------------------------------
  ! 950612 - ALEPHLIB 20.6
         In *CD -> ITCNEWS
    IDDIST, ITDRIF - Protect for v.large times beyond reasonable input
                     range of t-d relation.
         In *CD -> TPCNEWS
    TFICOR - cure some problems encountered in runs 16127-16141
             (I.Tomalin)
         In *CD -> VDESNEWS
    VFACSN - returns the serial slot number of a face.
         In *CD -> ALEFNEWS
    ALFMT  - increase the number of bank formats to 1500.
    BKTOBK - new routine to copy a bank to another bank
             CALL BKTOBK ('ABCD',NR1,'EFGH',NR2)
             'EFGH' format is taken as 'ABCD' format.
    ALK7FIL, ALK7OP, ALK7TRU, ALK7FRU -
             Adapt to new RUNCARTSLIST format
    -----------------------------------------------------------------
  ! 950502 - ALEPHLIB 20.5
    BECAREFUL - this version is using the new VDET geometry package.
                The old one is not called any longer, so access to
                /VDGEOS/, /VDJGEO/ variables is forbidden.
                 VDHERR is an OBSOLETE routine using /VDGEOS/, use
                 instead VDHTER.
         In *CD -> ALEFNEWS
    GETLEP - add a protection against negative sqrt.
    RQBUNC - new routine to get the LEP bunch # in a bunch train.
         In *CD -> DEDXNEWS
    TIDHYP - rewrite a statment to avoid floating point overflow.
         In *CD -> ECALNEWS
    TIZERO - adapt to new PWEI bank.
    EMTZER - REAL FUNCTION EMTZER (MODU) returns the T0 or -9999.
             for module # MODU
         In *CD -> ITCNEWS
    modifications for bunch-train (J.Sedgbeer)
    IFECON - Remove obsolete Rphi TDC bin-width test
    ICRCOO - Get Bunch-train info. (Call RQBUNC)
    ITDRIF - Use bunch train info to calculate drift-time from TDC value
    IBUNCC - New Comdeck with Bunch train info.
         In *CD -> TPCNEWS
    corrections and new routines to cure the '94 TPC gating problem
    (I.Tomalin).
    TFICOR - Allow several T3FC corrections to be applied in series
             to the same data.
             Extend T3FC bank to allow for corrections to r and z.
             For distortions which can't be well parameterized by
             T3FC alone (shown by JT3FIP column), call TFIMUL to
             multiply T3FC corrections by some additional function
             of phi, TPC current etc.
    TFIMUL, TGTCUR, TIMDIF - new routines
         In *CD -> TRIGNEWS
    implement level 1 trigger in a correct way. ALEPH-note will
    follow (A.Putzer)
         In *CD -> VDESNEWS
    VJWABR - These are used in Julia for
    VJWABW - the simulation of
    VBRJWA - alignment errors for Monte Carlo events
    VDMJLS -  This is a crude version of VDMJLS that works with the new
              geometry package, but only for VDET91!  It is designed to
              reproduce the results of the old version.
         In *CD -> VDETNEWS
    Introduction of the new versions of the VDET alignment routines,
    of the new packing routines.
    Add some routines in the geometry package.
    Remove a bug from VSCMSC.
    VDHTER, VTXNWT, VSTRIP - new versions to cope with new VDET
                             geometry package.
    VTRFIT - remove test on 1993 ==> remove bug for all years.
    VTXTRK -  These are routines which perform the extrapolation
    VDMSUP -  of a track to Vdet wafers and estimate the amount
    VTCLLD -  of scattering material which was encountered. Use
              of old VDGEOS common block was replaced by calls
              to Geom. package routines
    VTRLAS - new routine moved from JULIA :
             VTRLAS(DUM) is TRUE if vdet laser bit is set.
    VDMSRL - read VDRL bank from D.B.
    UFVDMS - get beampipe setup code
         In *CD -> EDIRNEWS
    ALSUMCL - add summary of class 27
    SELEVT  - select class 27 events (POT only)
    CLAS278- select class 27 and/or 28  (MINI only)
    ECAGET, ECALWR, ESUMW, ISPARK, SELBHA, TRIOFF -
    adapt to new PWEI bank.
          In *CD -> PRINNEWS
     PRDTMC - to print MINI bank DTMC/DVMC
    ---------------------------------------------------------------------
  ! 941115 - ALEPHLIB 20.4
         In *CD -> ALEFNEWS
    ALGTDB - make sure that the required bank is there.
         In *CD -> GAMNEWS
    GAMPEX, VOISTO, GIVSTO - add various protections.
         In *CD -> VDESNEWS
    implement new VDET geometry package.
    keep the old one as VD89.
  --------------------------------------------------------------------
  ! 941010 - ALEPHLIB 20.3
         In *CD -> ALEFNEWS
    CAFIHT : remove a bug
         In *CD -> ALPHNEWS
    ABSEVT - correct a bug with SEVT and SRUN cards.
         In *CD -> GAMNEWS
    GAMPEX - Call ECETDI  to correct for gain correction from ECMC
           - New feature added to calculate the probability of
             a Gampex photon to be fake from electromagnetic or
             hadronic origine (GFAKE,GEMFAK,GHAFAK)
    CORAD94- Replace CORADOC for the current version of alephlib
    GAPGAC - Built photon bank PGAC
    ------------------------------------------------------------------
  ! 940802 - ALEPHLIB 20.2
         In *CD -> ALEFNEWS
    ALFIEL : give the correct value of the mag field for runs 25261
             and 25265.
    BKRHAL - get computer name on which the job is run.(P.Comas)
    BKRHAW - change the RHAH bank format.
         In *CD -> VDETNEWS
    VTRFIT - gets DB banks through ALGTDB instead of MDARD.
             (because MDARD was used and the required bank number did
              not exist, default values were used).
             keep the old code (default values) for '93 MC (setup code=5)
    --------------------------------------------------------------------
  ! 940531 - ALEPHLIB 20.1
         In *CD -> ALEFNEWS
    NAMERU : new FUNCTION to get the row# of NAME bank containing
             a given run.
    ALK7COM: increase number of segments from 2 to 3 to handle more
             than 5000 runs (<7500 runs)
         In *CD -> DEDXNEWS
    TBTBLK - set return code to 5 when TBTBLK<0.
    TXDEDX - if TBTBLK<0. then TBTBLK=0.
    TCHKEX - call TDEDXR to get DEDX calibration for IRUN run#
             returns GNR=SNR=0. if run is not calibrated on DAF
    TDEDXV - use only DAF banks TCGX/TCSX or TC2X
    TDEDXR - entry point into TDEDXV to set run number
         In *CD -> EDIRNEWS
    RPECO  - protect ACOS against abs(argument) > 1.(C.Rankin)
    ------------------------------------------------------------------
  ! 940505 - ALEPHLIB 20.0
         In *CD -> ALEFNEWS
    ALFIEL : '92 offset is valid for 92 and 93 only
    ALTRIG : use X1RG
    ALTRHV : new INTEGER FUNCTION to return HV word from X1RG or XTCN
         In *CD -> TPCNEWS
    TCHKHV - get HV word from ALTRHV
         In *CD -> MUIDNEWS
    MRMHIT treat chambers 4c,4d in 93 monte carlo , add bank D4CD to
           show this has been done
    MUIDO  declare format of D4CD
    MUREDO drop old D4CD and add new one to output list
    --------------------------------------------------------------------
  ! 940411 - ALEPHLIB 15.9
         Remove following sets: ALREAD, EPIO, PRESS to make ALEPHLIB
         machine independant.
         the 3 sets are now in ALEPHIO .
    ------------------------------------------------------------------
  ! 940408 - ALEPHLIB 15.8
         In *CD -> ARDNEWS
    ASTAGE, AWRTAP - introduce stageout on VAX machines (U.Schaefer)
         In *CD -> SDESNEWS
    SILTOX, SIXTOL - to go to/from ARS and local sytems .
         In *CD -> VDETNEWS
    VTXNWT - add a protection against asin > 1. (W.Manner)
         In *CD -> ALEFNEWS
    move some routines from ALREAD to ALEF or to ALPHARD to be
    prepared to cut ALEPHLIB into ALEPHIO and ALEPHLIB.
    ALEPHIO will contain the machine dependant code : ALREAD, EPIO, PRESS
    ALEPHLIB will be machine independant
    -----------------------------------------------------------------
  ! 940111 - ALEPHLIB 15.7
         In *CD -> COMPNEWS
    UFTKAL - declare ZZ0 double precision, mandatory on AXP (W.Manner)
         In *CD -> TPCNEWS
    TFICOR - Allow original polynomial parameterization
             to be multiplied by a specified function of the
             coordinates, which could for example constrain
             corrections to be zero at the endplates.
         In *CD -> ALEFNEWS
    TRACBCK : CALL EXIT after the traceback on IBM.
    ALFMT : limit the test on the first 3 characters of NAME to find
            'ALL'
    ALFIEL : the 92 current offset is valid for 92,93,94....
    GTT0GL : T0GL depends on TPC setup code.
    UINDXS : call SORTI instead of SORTX deleted from CERNLIB 94A.
         In *CD -> PRINNEWS
    TPCODP - enlarge a format (I.Tomalin)
         In *CD -> ARDNEWS
    ADSPOS - extend CHNAM to 80 characters
    AOPERD, AOPTAP - on VAX and AXP declare SMG$blabla, LIB$..., SYS$..
                     INTEGER when they are used as function
                     (mandatory on AXP when running in debug mode)
    ACLOSE - when using EPIOc (status word 32 = 2) the EPIO file has to
             be closed before another one is opened to reduce the
             number of opened files (RFIO supports a small number<200
             of opened files)
    AOPTAP - on VAX open the staged NATIVE file in READONLY mode.
         In *CD -> GAMNEWS
    CORADOC - correct a bug
         In *CD -> YTOPNEWS
   YFMVTR, YFTVTR, YFVMAP, YFVMC, YFVMC1 -
            protection against division by zero (G.Lutz).
   YFMVTR, YFVMC, YFVMC1 - correction of two sign errors (G.Lutz).
   YTPAR  - correction of a sign error (G.Lutz).
   YFMVTC - new routine with lagrange multiplier mass constraint in
            vertex fit (G.Taylor).
         In *CD -> YV0NEWS
    YV1INI - replace WRITE(6) with IF (IW(6).GT.0) WRITE(IW(6))
    -----------------------------------------------------------------
  ! 931025 - ALEPHLIB 15.6
    BECAREFUL : SINCE THE CERNLIB 93D HAS BEEN RELEASED IT IS
                POSSIBLE TO USE THE EPIO C VERSION ON UNIX MACHINE.
                SO ALEPHLIB HAS BEEN MODIFIED TO CALL EPIO C.
                MAKE SURE THAT YOUR UNIX SYSTEM HAS GOT THE
                CERNLIB 93D.
         In *CD -> VDESNEWS
    VTXRAW - rewrite the routine to avoid recurrant problem.
             (D.Brown)
         In *CD -> ARDNEWS
    ACLOSE - when using EPIOC (status word 33 = 2) the EPIO file has to
             be rewinded before another one can be opened on the same
             unit.
         In *CD -> FYXXNEWS
    FYKILL : Correction for very rare cases giving a faulty FKIN bank
             (J.Boucrot)
         In *CD -> PRINNEWS
    FRFTDP - adapt code to new banks TWRF     (R.Johnson)
         In *CD -> YTOPNEWS
   YFTVTR , YFVMAP : correct a minor mathemathical bug
   YMKIDT: correct a logical error
   YVPOSS: prohibit overwriting of input track indices
         In *CD -> HDESNEWS
    HFBAHI : correct a bug in the hit finding
    HFBAHIO: new routine which is a copy of HFBAHI before the
             correction of the bug. This routine will be used
             for the '91 and '92 reprocessing to have a coherent
             processing data vs MC.
    -----------------------------------------------------------------
  ! 930910 - ALEPHLIB 15.5
         IN *CD -> HDESNEWS
    HRHTUB : put a protection when running with MC data made with
             JULIA < 271        (A.Venturi)
         In *CD -> ALEFNEWS
    ALEFIL, ALELEP : check that the row # returned by LFILRU is > 0
    GETLEP : check that the row # returned by ALEFIL is > 0
         In *CD -> ARDNEWS
    ACARD2 - rewrite the routine to suppress ASSIGN statments which give
             problems on ALPHA/OSF1 machines.
         In *CD -> COMPNEWS
    TNRHPA - add a protection to avoid division by 0 when a PT=0.
             charged track is processed.     (A.Venturi)
         In *CD -> DEDXNEWS
    TCGXRU, TDEDXV - new routine to handle new banks TCGX/TCSX
                     (W.Wiedenman)
    TCHKEX, TMDEDX - modified to use new banks TCGX/TCSX (W.Wiedenman)
    TBTBLK - choose the parametrization type depending on the presence
             or absence of parametrization coefficients in the TC4X
             bank and not on the data type (MC or real).  (D.Casper)
         In *CD -> TPCNEWS
    TDFVRU - remove a not used variable
             set IPRUN to 0 in data statment
         In *CD -> PRESNEWS
    DEMPBAN - there was a bug in the decompression of characters on VAX
              when it was compressed on UNIX machines.
         In *CD -> COMPNEWS
   UFMS, UFVDMS - protect against unphysical tracks with d0*w > 1
         In *CD -> VDETNEWS
    VDMSUP, VTRFIT - decrease the likelihood of garbage collections
                     to protect against " CALL xxx(IW(...)) "
    VTXRAW - rewrite the routine to avoid recurrant problem.
         In *CD -> YV0NEWS
    YNV0NF - replace the protection of 15.4 with a weaker one
    -----------------------------------------------------------------
  ! 930721 - ALEPHLIB 15.4
         In *CD -> ALPHNEWS
     remove ENTRY ABWSEL, introduce SUBROUTINE ABWSEL to please IBM/VM
         In *CD -> ARDNEWS
    REMEMBER for the moment the use of EPIO/CFIO is yanked until the release
             of the cernlib 93d.
    AOPERD - on ALWS as on UNIX when reading an IBM FILM card for a standard
             EPIO file (a GIME is present) transform it for a standard
             cartdridge:
             i.e. - FILM 'AB1234.EPIO | GIME PUBXU 456'
                    becomes
                    FILM 'ALDATA | EPIO | CART AB1234.1.SL'
    AOPTAP  : remove restriction to 'CART' or 'TAPE' on VAX to allow
              stagein of Robot cartridges through SHIFT.
         In *CD -> EDIRNEWS
    EEWIRS - Bhabha events selected from two ecal modules with uncalibrated
             wire energies above 30 GeV.
         In *CD -> IDESNEWS
    IDTCCC - Comments modified.
    IDRPJJ - New comdeck:
             IDRP HAC params.
    IDRPCC - New comdeck:
             New Drift-time relation parameters.
    IINRES - IDTC   fill drift-time parametrisation (old) into /IDTCCC/
                    and /IDRPCC/. IDTC bank used for 1989-1992 data.
             IDRP   fill drift-time parametrisation (new) into /IDTCCC/
                    and /IDRPCC/. IDRP bank used for 1993 onwards.
    IPRDAF - Add print for IDRP values.
         In *CD -> ITCNEWS
    ICDRIF, ITDRIF - Use function IDDIST for drift-distance calculation
    IDDIST - new function:
             Calculate drift-distance from params. in /IDRPCC/ and
             drift-time.
         In *CD -> GAMNEWS
    GXMCLM - add a limit on the cluster energy to be treated
         In *CD -> PHOTNEWS
    CLMONS - add a limit on the cluster energy to be treated
         In *CD -> YV0NEWS
    YNV0NF - add  a protection against huge values in XMT matrix or
             VT vector which make DEQINV CERNLIB routine crash
    -----------------------------------------------------------------
  ! 930617 - ALEPHLIB 15.3
         In *CD -> GAMNEWS
    various corrections in CORADOC, GAMPEX, GFRAC, GXIMPA
    for the overlap region
         In *CD -> YTOPNEWS
   YTPVTX : add a protection
         In *CD -> ARDNEWS
    ALGTENV : add BEAMPOSITION new environment variable to access
              phy:beam.position file.
    AOPEN,AOPENW,AOPTAP,AWRTAP : set EPIO status word 33 to 2 to use CFIO
                                 and RFIO package where it is avalaible,
    AOPTAP  : add access to cartridges on ALWS through SHIFT6
    AOPERD  : on ALWS open staged file on SHIFT6
    -----------------------------------------------------------------
  ! 930513 - ALEPHLIB 15.2
         In *CD -> ALEFNEWS
    ALGTRO : bug correction
    ALTRIG : look for LUPA or SILH bank to get trigger bits when no other
             bank is present.
    ALVSN  : add a protection in case of slow control record (IRUN=0)
    GETLUM : modified to get the lumi / nb of bhabhas from Sical in 1993
    GETSLU : modified to get the lumi from bank 'SLUM' if necessary
    ALFMT  : increase size of bank formats to 75 characters to fit LPZT
             bank format.
         In *CD -> ARDNEWS
    AOPTAP, AWRTAP, AOPERD - let TMS find out where a cartridge resides.
                             on IBM, if SIZE is not given on FILI card
                                     then SIZE 200 is assume.
                             on IBM, if no option is given CHOPT=' '
         In *CD -> PHOTNEWS
    GAPGID, GAPGPC  - corrections
    GVERCR - initialize some variables.
    ENOF4, ENOL12, ENOW12, GAPGID, ECLEAK - get necessary data base banks
    using *CA GTDBBK or MDARD for banks with NR=0
         In *CD -> VDETNEWS
    VTXTRK - check Z cylinder extrapolation
         In *CD -> YV0NEWS
    set keywords on CKEY cards
         In *CD -> YTOPNEWS
 1) Changes in YTRV0S to reject V0,s with hits before the vertex
 2) New routines YBIPAT YPRVER YSTVTX YCIRCR for this purpose
 3) YDEFRF changed to cope with new ALPHA
 4) Minor changes in YTSTRK to allow running on MINI
 5) 3 words added in bank YNTR
 6) New routine YFVMC1. It allows the enforcement of one
    or several submass constraints (e.g. psi mass in the
    decay Bs->psi K+ K-) in the vertex fit.
 7) Minor changes in routines YTCON, YTIJOB, YTPVTX, YTSTRK, YVDCOF
    -----------------------------------------------------------------
  ! 930427 - ALEPHLIB 15.1
         In *CD -> GAMNEWS
    CORADO is purged
    CORADOC - new function CORADOC (EN,TH,PHI)
    GAMPEX  - get run number from ABRUEV to distinguish between
              Real and MC data
              call CORADOC with new argument list
    GAPGID  - bug correction
    MORSTO  - suppress reference to BMACRO
    reintroduce old version for backward compatibility:
    GAMPEK, GATRAL, ISPARK, MECRFC behind *DK VOISTO.
    These decks should be deleted when GAMPEK is no longer used.
    the variable E4ETB in routine DEFOVE keeps the new value 0.851
    instead of the old one 0.85
         In *CD -> SDESNEWS
    SIRDAF : use ALGTDB instead of MDARD to get banks with setup code
             to avoid to duplicate banks with different NR but identical
             contents.
         In *CD -> VDETNEWS
    VRDDAF : get VDET geometry banks through ALGTDB instead
             of MDARD to avoid to repeat banks with different NR
             but identical contents.
         In *CD -> EDIRNEWS
    CLAS24  - remove acolinearity computation
    -----------------------------------------------------------------
    ------------------------------------------------------------------
  ! 930405 - ALEPHLIB 15.0
    ALEPHLIB 14.6 has been resequenced. The CRAY code has been removed.
    The YTOP package has been indented and dead code suppressed.
    Obsolete decks ABALFA and ALOPEN have been purged.
    ------------------------------------------------------------------
  ! 930402 - ALEPHLIB 14.6
         In *CD -> ALEFNEWS
    TRACBCK - add a CALL EXIT after CALL ERRTRA in IBM code
    GETSLU  - new routine to get SICAL Lumi and nb of Bhabhas for
              a given run
         In *CD -> ARDNEWS
    ALGTENV - on VAX check that EDIR or EPIO files starting with A or I
              have only 6 characters before prefixing them with
              AL$EDIR or AL$DATA
              on UNIX call GETENVF instead of GETENV to please APOLLO
    ABOPEN, ALOPEN, AOPEN, AOPENW, AOPERD, AOPEWR, AOPTAP, AWRTAP
            - reoganize error codes
         In *CD -> DEDXNEWS
    TIDHYP - remove obsolete code for DTRA bank (Mini)
    TMDSTX - obsolete routine removed (Mini)
         In *CD -> EDIRNEWS
    move ALSUMCL and ALCLASW from ALEF set to EDIR set
    ALSUMCL - add summary of class 24 and 26
    SELEVT  - add calls to CLAS24 and CLAS24
    CLAS24  - new routine to select class 24 events (tau group)
    CLAS26  - new routine to select class 26 events (alignment group)
    CHKCLAS - new routine to check the class word against the mask
              set with the CLAS data card
    ------------------------------------------------------------------
      Class #24: Defined in CLAS24 routine.
      ----------
      Content  : Dilepton candidates (e+ e-, mu+ mu- and tau+ tau-)
                 Enlarged class 15 selection.
      Class #26: Defined in CLAS26 routine.
      ----------
      Content  : Events to be used for alignement and
                 calibration purposes.
                 Muon events selected by mean of trigger bits pattern.
                 Bhabha events selected from two ecal modules with wire
                 energies above 30 GeV.
         In *CD -> GAMNEWS
     new version backward incompatible. The old version has been purged.
     main routine is called GAMPEX
         In *CD -> PHOTNEWS
    Steering and package added to caracterise photon/pi0
    GAPGID   Steering to built PGID bank using GBNEUT and CLMOMS
    GBNEUT   Modified from EBNEUT to caracterise the transverse
             shape of any neutral cluster . Argument are identical
             to EBNEUT
    GBTRAN   Modified from EBTRAN to caracterise any neutral cluster.
             Argument are identical to EBTRAN
    GBIMPA   Modified from EBIMPA to properly treat the pad in theta and
             impact. Argument are identical to EBIMPA
    GVERCR   Recalculate from individual storeys the cluster barycenter.
  >>>>>> In *CD -> PRESNEWS
    DMPCHR - introduce a local common block /LOCALP/ to please
             ALPHA machines.
         In *CD -> PTOJNEWS
    JPLIST : use LNBLNK instead of LENOCC.
    Add JLIST(1:LNBLNK(JLIST)) or PLIST (1:LNBLNK(PLIST)) to avoid bank
    with blanc name.
         In *CD -> SDESNEWS
    the  ADBSCONS 179 is mandatory
    new version of the SiCAL geometry package, look at SDESNEWS
    for more details .
         In *CD -> TRIGNEWS
    SIX2MK - add a LOGICAL BTEST (mandatory on apollo)
         In *CD -> YTOPNEWS
    YTOIJO : this obsolete routine is purged.
         In *CD -> YV0NEWS
    YDISMC - add a protection against  negative sqrt
    -----------------------------------------------------------------
  ! 930219 - ALEPHLIB 14.5
    mods in : ALFMT in ALEF set
              print on IW(6) if not 0
              ALREAD set
              ACDARG, ACLOSE, ADSPOS, AOPEN, AOPENW, AOPERD, AOPTAP,
              ASTAGE, AWRTAP
              implement stagein/stageout for UNIX machines
              implement fetch/gime/dispose for UNIX machines
              scripts reside on /aleph/bin/
              - FILI 'ALDATA | EPIO | CART AB1234.1.SL'
                alstagein creates a file /aleph/data/ab1234.epio
                for the 1st file of a cartdridge and a file
                /aleph/data/ab1234_n.epio for file no. n
              - FILO 'ALDATA | EPIO | SMCF I12345.n.SL
                alstageout writes on cartdridge a file
                /aleph/data/i12345.n.sl
              - READ 'MY.FILI | CARD | FETCH FLR 192'
                sfetch will fetch from cernvm the file MY FILI FLR.192
              - FILI 'vxalpha.cards | CARD | GIME ALWS RANJARD
                use vxalpha.cards if there
                if not there fetch vxalpha.cards from ALWS id RANJARD
                id RANJARD needs to be given when it is different from
                unix id.
                valid GIME or FETCH are:
                FETCH ALWS::AL1$USER3:[SMITH.ALPHA] RANJARD
                GIME dxal00
                GIME dxal00:~closier
                FETCH dxal10:/home/dxal00/smith/alpha/
              - FILO 'MY.EPIO | EPIO | DISPOSE'
                when use in a batch job sent from a remotehost different
                from the host , send MY.EPIO to the remoteuser reader
                if remotehost is cernvm or to the user main directory if
                remotehost is not cernvm.
              TWRRED in DEDX set
              fix a bug in production of TSDI bank
              FMTRAK in FMTRK set
              remove invalid characters
              YFMVTR, YFVMC in YTOP set
              remove invalid characters
              TRIGGER set
              add SiCAL trigger
              YV0 set
              get cuts from data base
              for more details look at *CD YV0NEWS
    new
    routine : ALVSN in ALEF set
              analizes RHAH bank to return
              ITYP     data type
              IPV(10)  program version #
              IAV(10)  alephlib version #
              IYR      year when data taken
    -------------------------------------------------------------------
  ! 930111 - ALEPHLIB 14.4
    mods in : ALEF, ALPHARD, ALREAD sets
              introduce a UNIX flag valid for all UNIX machines :
              the extraction of the fortran must be done with 2 flags
              *DF UNIX,DECS or UNIX,SGI or UNIX,RS6K or UNIX,APOLLO
              or UNIX,HP
              VAX, IBM, CRAY stay unchanged.
              AOPTAP in ALREAD set
              On UNIX machines introduce stagein through FILI cards
              cartridges are staged on $ALSTAGE/xxnnnn.epio or
              $ALSTAGE/xxnnn.native.
              AOPERD in ALREAD set
              allow to read IBM FILM cards from UNIX machines.
              edir files are stored on $ALEDIR/xxnnnn.edir
              data files are stored on $ALDATA/xxnnnn.epio
              ALGTENV in ALREAD set
              on CRAY returns dbas.bank for DBASBANK
              AOPEN in ALREAD set
              on CRAY store IBM data files in /pool/aleph
              AWRTAP in ALREAD set
              add options after the filename and not before
              ALFIEL in ALEF set
              correction to 92 current
              ALSUMCL in ALEF set
              define BTEST as LOGICAL to please APOLLO compiler
              ALRWEV in EDIR set
              add checks on the return code
              add a call to ACLOSE(0,ier) at end of job to dispose and
              stage out files if any.
              HRHTUB in MUONID set
              correction
              TXDEDX in DEDX set
              more accurate DEDX
              VDMSUP in VDET set
              correction in bank creation
              UFVDMS in COMPUTE set
              correction added
              VDHITS in VDET set
              save name-indices
              YTOP
              see YTOPNEWS for more details
  new
  routine  :  VDAMB in VDETDES set
  --------------------------------------------------------------------
  ! 921030 - ALEPHLIB 14.3
    mods in : ALEF, ALPHARD, ALREAD sets
              add Silicon Graphic flag SGI=DECS
              PRESS sets
              add Silicon Graphic flag SGI=HP
              AOPENW in ALREAD set
              open NATIVE files in direct access (UNIX flag)
              ACLOSE in ALREAD set
              add IOSTAT in a CLOSE statment
              ALGTENV in ALREAD set
              compiler error on RS6K
              AOPERD in ALREAD set
              transform AL$DATA: to /aleph/data/ on RS6K as on DECS
              ABOPEN, ABRSEL, ALOPEN in ALPHARD, ALREAD sets
              add INTEGER ACARD1 to please ALPHA machine
              PRESS set
              remove previous RS6K flag , make RS6K = HP flag
              TRHFLG in TPCDES set
              old bug
              TIDHYP in TPC set
              typing error mentionned in ALEPH142 but not corrected
    ------------------------------------------------------------------
  ! 921021 - ALEPHLIB 14.2
    mods in : VDET set
              corrections in UFTMSO, UFVDMS, VDMSUP, VTRFIT, UFMS
              TIDHYP in DEDX set
              typing error
              MRMHIT in MUID set
              get MC  efficiency from DataBase.
              ALGTENV in ALEF set
              introduce DBASBANK in the list of environment variables
              PRESS set
              introduce HP flag
              YTOP set
              suppress some print statments
    new
    routines: ALMACH (name) in ALEF set
              returns the Historian flag name used to build
              the library  as CHARACTER*8
              TIMEL in ALEF set
              C routine to replace Cernlib routine which does
              not work on DECS, and may be some other UNIX machines
    -----------------------------------------------------------------
  ! 921006 - ALEPHLIB 14.1
    mods in  : YTOPOL in YTOP set
               call YTOPNW
               YFMVTR
               wrong format
               ALGTENV in ALEF set
               on VAX and IBM
               when trying to open a card file with the
               name : ALPHACARDS, GALEPHCARDS, JULIACARDS,
               the following name is assumed
               XXXXXXX.CARDS
               to avoid confusion with existing files.
               FYFKIN, FYINEV in FYXXX set
               calls to BWIND were wrong
               DMPBAN in PRESS set
               mistyping error in RS6K flag
               VDET set
               new treatement of X-scattering : see VDETNEWS
               for more details
               MUID set
               corrections
               PHOTONS set
               purge EGNERI
               EBCLCF calls GTDBBK to get EPCC bank
    -----------------------------------------------------------------
  ! 920825 - ALEPHLIB 14.0
   +++++++++++++++ BECAREFUL ++++++++++++++++++++++++++++++++++++
             REMEMBER FILI/FILO/FILM cards MUST BE of the following
             type:
             FILI 'AB0314.EDIR | GIME PUBXU 209'
       or    FILI 'AB0314 EDIR | GIME PUBXU 209'
             FILM 'ALDATA | EPIO | CART AB0314.1.SL SIZE 200'
       or    FILM 'RUN0012345.DAT | NATIVE | SMCF I12345.1.SL SIZE 200'
             FILO 'MY.EPIO | GIME FLR 192 * MYPASS (MR'
       or    FILO 'MY EPIO | GIME FLR 192 * MYPASS (MR'
             this version requires EPIO 1.68 from CERNLIB 92b.
             on VAX the EPIO 1.68 is NOT part of CERNLIB 92b .So the
             necessary EPIO routines have been put into BOS77 no. 1889.
             Make sure that you have the CERNLIB 92b on your machine,
             then install the new BOS77 no. 1889 (ALEPHLIB 13.9 can
             run with BOS77 no. 1889),
             then install ALEPHLIB 14.0.
             An Historian flag : UNIX has been introduced mainly for
             testing purpose. Please don't use it yet. Use instead the
             machine flag: IBM, CRAY, VAX, APOLLO, HP, RS6K
   ++++++++++++++++++ BECAREFUL +++++++++++++++++++++++++++++++++++++++
   mods in : ALEF, ALPHARD, ALREAD sets
             introduce the following Historian flags:
             BIT64, UNIX, RS6K
             remove setting of number of bits in a machine word,
             it is done in ALBITW depending on the BIT64 flag.
             the READONLY parameter has been added in AOPEN on DECS,
             APOLLO, HP, UNIX.
             EPIO files are always opened by AOPEN and not EPIO.
             Data files are always opened in direct access on DECS.
             EPIO files are always opened in direct access on RS6K (=UNIX)
             ALDAWR, ALFIND, AUBLIS, AUBPRS in ALEF
             replace calls to NLIST by calls to NLISTB to avoid confusion
             with MULTINET or TCP/IP.
             ALK7TRU in ALEF set
             remove a bug
             GETLUM in ALEF
             when getting luminosity from LUMI bank take method # 5
             when no SiCAL and method # 9 when SiCAL.
             DEDX set
             TMDEDX, TCHKEX, TIDHYP, TMDSTX, TBTBLK, TDXERR
             Get TC1X, TC2X, TC3X, TC4X from data base depending on
             the setup code for MC data and on run number for real data.
             ALSUMCL, SELEVT in EDIR set
             add SICAL flags : class 22, 23.
             MUREDO in MUONID set
             remove use of S-list to store TREX bank.
             drop TREX at next entry into MUREDO.
             PRESS set
             CTOLOW, CMPHOST, CMPBAN, DMPBAN, DMPCHR
             introduce RS6K flag.
             PRINT set
             FRFTDP
             print pulse lengths
             call GTT0GL to get T0 depending on run number and
             number of bunches.
             TPC set
             TCRZVD
             call GTT0GL to get T0 depending on run number and
             number of bunches.
             TWRRED, TWPOLD
             create and output TSLE bank  (MC data)
             TUN1NC
             call TCORES to correct coordinates for field distorsions due
             to short circuits in the field cage.
             TWPANA
             update comments
             YTOP set
             YNMAJJ is extended
             look at YTOPNEWS for details.
   purge
   decks   : YADHVX,YBLDVX,YFTHVX,YFUMSC,YTOCON,YTOPAN,YTOPID,YTOPVT
             YPRIMV,YTORVO,YTOSTR,YXVPOS
   new
   comdecks: CRAYTYP  define CRAY type
             GTCHDECL ALREAD variable declarations
             GTCHUNIT get logical unit in characters
             GTFTYP   get file type and record length, close previous file
             GTVSN    get device type, vsn# and options
             PRENVIR  print aleph and full filename
             PRFILM   print FILM card information
             PRFNAME  print fname, ftype, fdevi
             PRMSG    print message
             STBFORMA set BOS file format
             ALBITW   set # of bits in a machine word
             GTDBBK   get DB banks depending on setup code for MC data
                      or on run number for real data.
   new
   routines: EXIT      IBMRS600  EXIT routine (RS6K Historian flag)
             KBYTREC   returns ALEPH record length in bytes
             PRSTAT    prints status message in case of error in OPEN
             ALGTENV   returns full filename from ALEPH filename
                       ADBSCONS, ADBSTEST, ADBS8990
                       BANKALFMT, RUNCARTLIST
                       ALPHACARDS, JULIACARDS, GALEPHCARDS, LOOKCARDS
                       ABxxxx.EPIO, AMxxxx.EPIO
                       AMxxxx.EDIR, AMxxxx.EDIR
                       Ixxxxx.EPIO
             GTT0GL    get T0 depending on run # and number of bunches
             TCORES    corrects TPC cord. for field distorsions
             YFVMAP    faster fit
             SIEDIR    compute class 22,23 (SICAL flags)
                  next 3 routines are under DECS historian flag
             SDRSX     converts DEC RISC floating format to DEC VAX
             SIBSDR    converts IBM to DEC RISC floating format
             SXSDR     converts from DEC VAX to DEC RISC floating format
             EPINIT    special VAX version to make sure that EPBLIN and
                       EPHEAD are loaded from BOS77 no.1889
  -------------------------------------------------------------------
  ! 920813 - ALEPHLIB 13.9
  mods in : ALEF, ALPHARD, ALREAD sets
            remove  unecessary SAVE, add specific SAVE statments
            IANDSH in ALEF set
            remove HP flag
            ACDARG, ACARD1 in ALREAD set
            make a common version for all machines
            UFTKAL in COMPUTE set
            precision problem
            HCCONS, HRDDAF in HCALDES set
            corrections to get the real tube length
  new
  function: HTULEN (ITUB,IMOD,ILAY,IPOR,IPOS) in HCALDES set
            get the real tube length depending on the hit position.
  new set : MUONID set
            old QMUIDO package. More details in *CD MUIDNEWS
  --------------------------------------------------------------------
  ! 920618 - ALEPHLIB 13.8
  mods in : ALK7FIL in ALEF set
            correction of bug
            ALGTDB, USGTDB in ALEF set
            suppress reference to NLIST and AGTLTC
            ALSUMCL in ALEF set
            add an entry point ALSUMGT (IARRAY,NDIM) which returns
            in IARRAY (1-NCLAS)  statistic of class words
                      (NCLAS+1)  no. of events without class word
                      (NCLAS+2)  no. of events with class word
                      (NCLAS+3)  no. of run records
                      the 1st NDIM words are filled
            AOPDBS, AOPENW in ALREAD set
            suppress reference to ALGTLTC and BKOUTF
            AFILMI , AOPERD in ALREAD set
            suppress CRAY dependant code in AFILMI
            modify CRAY dependant code in AOPERD to be able to read
            FILM card of the type CART I12345.1.SL or I12345 FS 1
            ASTAGE, AWRTAP in ALREAD set
            set NSTAGE to 0 in ASTAGE at 1st entry and not in AWRTAP
            to be sure that it is set even when there is no cartridge
            to be stage out.
            ABRSEL in ALPHARD set
            when ABRSEL is called after a IRET=6 (no more input file)
            it means that the user wants to loop over the same set of
            FILI cards.
            TSRTCO in PTOJ set
            correct a bug in FICL and FTCL
            PCPATQ in PTOJ set
            correct a bug
            KEJOB, KINIT in KINE set
            suppress calls to bookkeeping package
            KFEVBK in KINE set
            change the code to avoid machine precision problem
            KNODEC in KINE set
            handle KTMX card to force particle decays at
            generator level below a given life time
            PAIRFD in COMPUTE set
            when FRF2 data card is present use FRFT,NR=2 if it exists
            otherwise use FRFT,NR=0.
            UMSERR in COMPUTE set
            call ABRUEV to get run number, call GTSTUP every new run
            to get VDET setup code
    new
    decks : SIITOR, SIDALI in SCALDES set
    move  : BKCARI, BKINCA, BKRHAB, BKRHAL, BKRHAW from BOOK to ALEF
    purge : BOOK set
            MDARD,AGTLTC,ALSEQR,AREAD,ASEQR,RACCEP,ASEVT
    additional corrections after the release:
            FYXXX set
            increase buffer size MAXMCX in /FYRELA/ to allow 1000
            tracks or vertices.
    ------------------------------------------------------------------
  ! 920413 - ALEPHLIB 13.7
  mods in : YTOP set
            the NEW package becomes the default: look at YTOPNEWS
            for more details
            ENOLWF in PHOTONS set
            add some protections
            HSECO in HCALDES set
            compute correctly the position of the 2nd spacer if any
            ALRWEV in EDIR set
            suppress wrong EXTERNAL statment
            TWRRED in TPC set
            new wire reduction : new TSIR and TSDI banks are created
            instead of TRIR and TRDI.
            DMPLIS in COMPRESS set
            new data card : DLIS nam1 nam2 nam3 ... nami...
            gives the list of banks to be decompressed.
            if no DLIS card all banks are decompressed.
            FPTOJ in PTOJ set
            new data card : NOEM
            does not unpack error matrix
            if no NOEM card unpack error matrix.
            PCPATQ in PTOJ
            increase number of possible gammas in one CALOBJECT
            TPDVEL in TPC
            if montecarlo and TSIM bank is missing try to get TDVV,NR=1
            SCALDES set
            some fix in routines used by JULIA
  new
  routines: VDHITS in VDET set
            call VDHITS (IARRAY,MXARRAY)
            MXARRAY is the length of IARRAY
            MXARRAY is the greatest track number
            IARRAY  is numbered by FRFT track number,
                    only the first 8 bits are used, as described below
            bits:     meaning
            0-1       number of inner layer U hits on track (0,1,or2)
            2-3       number of outer layer U hits on track     "
            4-5       number of inner layer W hits on track     "
            6-7       number of outer layer W hits on track     "
  -------------------------------------------------------------------
  ! 920225 - ALEPHLIB 13.6
  mods in : ITC, ITCDES sets
            IRDDAF   - Remove call to obsolete routine IFEOLD
                       Call ALTELL if missing dbase banks.
            IPRDAF   - Remove obsolete print out.
                       Add print for IZNL values.
            IPTOJ    - Remove obsolete code for old MC data
            PITCOJ   - Remove obsolete code for IFCO
            ICRCOO   - Remove obsolete code for IFCO
            IFECON   - Protection for dbase const. values from
                       IRFE bank. Remove obsolete code for old MC.
                       Call GTSTUP to get run period for MC data
                       Get bank IZNL from dbase.
            IGEOMW   - call GTSTUP to get run period for MC data
            IINALI   - call GTSTUP to get run period for MC data
            IINRES   - call GTSTUP to get run period for MC data
            ITSWCO   - Use new S-bend parametrisation from IZNL.
            IRESRP   - Set default r-phi resolution to be 1990
                       values in case of missing IRRF bank.
            UFTTRK
            add chi2 cut on final fit
            VTLINK
            change definition of large pulses for increased errors
            ALEF,ALREAD,ALPHARD,BOOK,DBASE sets
            replace all occurences of LENOCC (obsolete) by LNBLNK.
            create an Historian flag HP identical to APOLLO.
            AOPTAP in ALREAD
            restore FNAME as it was in ALEPH134
            GAMPEK in GAMPACK
            mods to get list of storeys associated to a photon.
            LEPTO in EDIR
            remove ununsed variables
            AGTLTC in ALEF
            add protection against empty string
            ABRSEL in ALPHARD
            suppress call to ABWEND which must be called by the user.
            ABRREC in ALPHARD
            suppress entry point ABRUEV, replace it by a subroutine
            UFTKAL in COMPUTE
            small correction
            YVXBLD, YTRV0S,YFMVTR in YTOP
            some corrections
  New
  Routines: HFBAHIT, HFENHIT in HCALDES
            extensions of existing routines HFBHIT and  HFEHIT
            EGNERI, ENOF4, ENOL12, ENOLWF,ENOW12 in PHOTONS
            calculate normalized estimator for photon. Look at
            *CD PHOTNEWS for more details.
            TDFVRU, TPDVEL in TPC
            get the right drift velocity for the current input file
            TPDVEL should be called at beginning of a run
            - in AUNPCK for POT or DST : CALL TPDVEL('POT',DVA,DVB,IER)
            - in JULIA for ONL (PASS0) : CALL TPDVEL('ONL',DVA,DVB,IER)
            - in JULIA for RAW         : CALL TPDVEL('RAW',DVA,DVB,IER)
             DVA and DVB must be dimensionned to 3
             TCRZVD in TPC
             to correct Z coordinates for new drift velocity and t0.
             STOGAM in GAMPACK
             to load the list of storeys asociated to photon# IGAM
             of last call to GAMPEK.
             ABRUEV (IRUN,IEVT) in ALPHARD
             to return the current run and event number read by ABRSEL
             new set of routines SCALDES for the SiCAL geometry
  New
  Comdecks: IZNLJJ, IZNLCC, EF4NJJ, EL1NJJ, EL2NJJ, EW1NJJ, EW2NJJ
            JCONJJ, TDFVJJ, TDPVJJ, TLASJJ, TVXYJJ, GASTIN, SICOJJ
            SALIJJ, SIGECO, SIMACR, SIMASK
  Purge   : IFCOJJ, ITDCJJ, IZSCJJ, ITTDIC, ITZDIC, IFEOLD, IFIXDI
  --------------------------------------------------------------------
  ! 920122 - ALEPHLIB 13.5
  mods in : everywhere
            add a SAVE statment at the right place .
            ALREAD
            few modifications for DECS.
            AOPEN in ALREAD
            add ACTION='READ' in IBM code to please compiler 2.5.0
            AOPERD in ALREAD
            data file read in direct access mode are opened on a
            different logical unit than those read in sequential
            mode  to avoid problem on VAX when reading files in
            different modes.
            BOOK
            few mods to include NANOdst in the bookkeeping system
            FPRROW in PRINT
            small bug
            YTOP
            update of the YNEW package which should become the default.
            several routines are obsolete. some of them can be replaced
            by the one given in () :
            YADHVX (YFTVTR), YBLDVX (YVXBLD), YFTHVX (YFTVTR), YFUMSC,
            YPRIMV, YTOCON, YTOPAN, YTOPID, YTOPVT, YTORV0, YTOSTR,
            YVXPOS (YVPOSS).
  new
  routines: HCPRIND (ICODE) in PRINT
            to print nicely HLWD (ICODE=1)
                            HWDI (ICODE=2)
                            both (ICODE=3)
            INTEGER FUNCTION ALK7OP (LUK7) in ALEF
            open and read RUNCARTS LIST file on unit# LUK7
            INTEGER FUNCTION ALK7FRU (LUK7,IRUN,TYPE,TAPE) in ALEF
            return the tape number for a given run and data type
            INTEGER FUNCTION ALK7TRU (LUK7,TYPE,TAPE) in ALEF
            return the list of runs of a given type residing on a
            given tape.
            INTEGER FUNCTION ALK7FIL (TAPE) in ALEF
            return a FILI card to open TAPE .
            GETXYB(IRUN,IFOUN,IFL,XYZ,DXYZ,OFS,VLUM)
            Gets the beam position per run from bank 'RXYZ'
  --------------------------------------------------------------------
  ! 911206 - ALEPHLIB 13.4
  mods in : TRACBCK called in BABEND
            correct the trace back on VAX
            ADBRLIST used in ADBR
            replace SA with PM (for passive material:SAMBA)
            ALGTDB in ALEF
            drop all existing banks (not only the 1st one) with
            a no longer valid number.
            GTDBAS in ALEF
            mistyping error
            PRKINE in PRINT
            suppress double *if .not.doc
            TUN1NC in PTOJ
            call TFICOR to get corrections for mag.field distorsion
            UFVDMS in COMPUTE
            protection against TANL=tan(lambda)=0.
            EBCLCF in PHOTONS
            get the right EPCC bank
  new
  routines: TFICOR and TFIPOL in PTOJ
            to correct phi-cordinates for mag.field distorsion
    ------------------------------------------------------------------
  ! 911106 - ALEPHLIB 13.3
  mods in     : GETEVT in ALEF set
                if run record is read then
                   if event # .ne.0 is required in this run then
                      continue reading
                   else   return the run record
                  elseif slow control record is read then
                      if no event or no run is required then
                         return the slow control record
                      else  continue reading till the next event
                   endif
                   ABRSEL in ALPHARD set
                   resset BATC flag everytime ABMODE is called.
                   ABSEVT in ALPHARD set
                   set initial values to -1 instead of 0 to avoid
                   confusion getting slow control (NEVT=NRUN=0) from
                   EDIR files.
                   ABRREC in ALPHARD set
                   call new routine AREDIR
                   ITC set
                   allow a variable resolution across the ITC cell.
                   IINRES  - get IRRF bank from database
                   IMICCO  and IUPCCO -
                   use function IRESRP to set the r-phi resolution in
                   ICCO bank
                   YTOP set
                   several mods in YNEW
                   EXPFRF in ECALDES set
                   protection of an ACOS argument
                   EBLEAK in PHOTONS set
                   protection against negative correction.
                   VTCLLD in VDET set
                   ptotection against wrong wafer number
  new routines   : FJMMCL,JPCOMB and PJLINK in PHYSICS set
                   should replace QJMMCL ect... in ALPHA
                   and similar routines in JULIA
                   IRESRP  in ITC set
                   new function to give ITC r-phi resolution.
                   AREDIR (IEVT,IRUN,NREC,IRET) in ALPHARD set
                   read an EDIR file in BATCH or INTE mode
                   return next record required following SEVT,SRUN,
                   CLAS or IRUN cards. IEVT, IRUN, NREC are the event#,
                   run#, pointer# of the record to be read.
                   new set GAMPACK contains the GAMPEC algorithm
                   the main subroutine of the package has bee changed
                   to GAMPEK because an argument has been added to
                   give the total length of the GAMVE array.
                   Look at *CD GAMNEWS for more details.
    ------------------------------------------------------------------
  ! 911023 - ALEPHLIB 13.2
  mods in     : ITCDES set
                IDESNEWS - update comments on hierarchy of banks which
                may be found on the run-header or database.
                IGEOMW   - Get IWST bank according to hierarchy
                cards/run-header/dbase.
                IGETDB   - add comment.
                ITQUAL   - Fill IQXT bank with wire info. even if no
                coord. on wire.
              (This routine is not used in JULIA. The mod. was requested
               by those who do coord. and resolution studies in ALPHA-type
               jobs).
                 VDET set
                some improvments in VDET fit.
                  ECLEAK in PHOTONS set
                 apply energy loss corrections to charged clusters
                  YTIJOB in YTOP set
                 set the primary vertex flag to TRUE when there is
                 no YOPT data card.
    new routine: TZSCVD in TPC set
                 correct TPC coordinates for effects from sector
                 misalignment effects in Rz.
    ---------------------------------------------------------------------
  ! 911015 - ALEPHLIB 13.1 contains
             +++++++++++ BECAREFUL from now on data base bank given on
                         data cards and read with ALGTDB must have a
                         bank number NR=-1 ++++++++++++++++++++++++++++++
  mods        :  YTOP set
                new package version 131. Look at YTOPNEWS for details
                and at ALEPHNOTE 91-132  SOFTWR 91-005
                 KINE set
                mods in interface to JETSET 7.3
                 ADBRPN,ADBRUN,ADBROW,ADBRLIST
                prepare introduction of SiCAL
                 ALRWEV in EDIR set
                if the REVH bank does not exist or the class word
                does not exist in REVH call SELEVT to build the
                class word.
                  TPTOJ in PTOJ set
                to allow for reading the PTUN bank from data .This will
                give the possibility to change the packing factors for
                coordinates in the future.
                  ALREAD and COMPRESS sets
                several corrections for DECS stations
                  MUELID in EDIR set
                correction to use PEID instead of EIDT
                   ABRREC in  ALPHREAD set
                 modify the test to skip runs
                 introduce INTERACTIVE mode
                   ALGTDB, USGTDB in ALEF set
                  data card bank number is set to -1 by default
                   GTDBAS in ALEF set
                  drop BOS internal bank '+DIS' when a new data base is
                  opened.
   new routines:  FPKCM in PTOJ
                 allow to pack a covariance matrix. Use FUPKCM to unpack
                  ABOPEN (CASE,IRET) in ALPHARD set
                   to open FILI, FILO or BOTH files
                  GETEVT (FSEQ,LIST,ULIST,NRUN,NEVT,IRET)
                  to get event # NEVT from run # NRUN
                  ENTRY ABGTRCL(ICLASR)
                  to get the read class word set sofar
  ---------------------------------------------------------------------
  ! 910925 - ALEPHLIB 13.0 contains
          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          BECAREFUL this version should be used with ADBSCONS = or > 158
          +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  mods in       :    TLACOR , TUN1NC in TPC set
                  new sector edge correction for dE/dx.
                  bug fixes and improvements in 2-track dE/dx.
                  new Z corrections to TPC hits to correct for effects
                  measured by VDET.
                  new method for packing covariance matrices.
                  new code for TPC drift field corrections to account
                  for phi dependance.
                      VTRFIT package in VDET set
                  adjust error for large pulses or double pulses.
                  order track using extrap. error instead of momentum.
                  look for cluster in adjacent wafers.
                  add hit error to the extrap. error matrix.
                  use new matrix invertor.
                  cut on residual difference for overlap.
                  normalise pulseheight before cut, select good clusters.
                  track ambiguity.
                       UMSERR in COMPUTE set
                  add VDET material.
                        VTRKEX in VDET set
                   modify track error matrix.
                        AOPTAP in ALREAD set
                   modify a warning message
                         TRUSLU in EDIR set
                   small bug
                          ABRREC in ALPHREAD set
                   make a garbage collection before reading next record
                   in sequential mode
  new routines  : TLACOC, TLACOP, TZCRVD in TPC set
                  VDMJLS in  VDET set
                  internal routine called by JULIA works only for
                  1991 geometry.
  ------------------------------------------------------------------
  ! 910903 - ALEPHLIB 12.9 contains
   mods in      : PTOJ set
                  FPTOJ is modified to unpack the covariance matrix
                  depending on the content of word(29) of the
                  PFRF bank.
                  UFTKAL
                  add some protections
                  BOOK set
                  improve book keeping of MC data
                  ALTRIG
                  get the trigger bit words  from MINI DTBP bank
   new routines : COMPUTE set
                  UTRID
                  Householder reduction of a real, symmetric matrix
                  UVTRID
                  Eigenvalues and eigenvectors of real symmetric matrix
                  PTOJ set
                  internal routine FUPKCM called by FPTOJ
  -----------------------------------------------------------------
  ! 910803 - ALEPHLIB 12.8 contains
           ++++++++++++++++++++++++++++++++++++++++++++++++++
            REMEMBER the normal way to read/write EDIR files
            is through the ALPHARD package calling ABRSEL
            an example is stored in ALPHNEWS and ALRWEV.
            programs calling AREAD, BCLASW will not be able to
            write EDIR files correctly, and will not read them
            right when they contain several FILM cards.
            The BOS77 version 1489 is mandatory.
           ++++++++++++++++++++++++++++++++++++++++++++++++++++
    mods in       : ALPHARD set
                    to read/write several small (1000 words) $PTS
                    banks on EDIR files.
                    ALEF set
                    make a fix in ALFIEL for run 11961 which has a null
                    polarity in RALE bank.
                    DEDX set
                    use directly BOS routines to get data base banks
                    instead of ALGTDB in TBTBLK and TDXERR.
                    COMPUTE set
                    make sure thatcovariance matrices delivered by
                    UFTKAL are always positive definite.
    new entry     : ABGTWCL in ABRREC
                    to get the write class word set at the time of
                    the call : CALL ABGTWCL(KCLASW)
                    ABSTCL in ABRREC
                    to set the write class word to a given value:
                     CALL ABSTCL (KCLASW)
    new routine   :  ALEF set
                     ALCLASW (KCLASW) returns in KCLASW the class word
                     built by the EDIR package.
                     ALSUMCL (KCLASW) accumulates usage of various
                     classes
                     ALSUMCL (-1) will print the table.
  ------------------------------------------------------------------------
  ! 910723 - ALEPHLIB 12.7 contains
    mods in       : DMPCHR, YFTHVX
                    unset variables found by CRAY
                    GTDBAS
                    correction for DECS and APOLLO
                    PTEXSJ
                    small bug
                    HVOBIT,PHEDIR,AOPDBS,OPENDA,OPENDB
                    corrections for APOLLO
                    TDXERR
                    mods mandatory to analize DEDX in '91 data.
    purge           TEDEDEX,TINCAL,TELCAL,TBBLOK,TEXERR
                    these obsolete routines have been purged.
  --------------------------------------------------------------------
  ! 910618 - ALEPHLIB 12.6 contains
    mods in       : UFITQL, PAIRFD, PTEXSJ, EBNEUT, YPRIMV, YTOIJO,
                    YCHIV2,VDPRDI
                    small corrections.
                    TRACBCK to introduce CRAY trace back.
                    UMSERR to take VDET material into account.
                    PAIRFD to choose the bank FRFT with or without VDET
                    TCHKRV
                    ALREAD set
                    to introduce DEC station flag DECS
                    to modify the FILM card of the EDIR produced
                    on IBM.
                    VTRFIT and al. to use work banks instead of
                    named banks whereever it is possible.
    new routine   : ECLEAK in PHOTONS set
                    NVPCOB,NVPECO,PCMECU,PCPATQ in PTOJ set
                    fill PCQA bank from PCPA bank.
  --------------------------------------------------------------------
  ! 910502 - ALEPHLIB 12.5 contains
    mods in       : TRIGGER level 1 summary
                    *CD X1PARA and X1RSC are obsolete
                    *DK X1PREP and X1DCEB are obsolete
                    *DK X1RSUM is modified
                  - ALEF set
                    *CD ADBRLIST is modified to handle
                    detector "DB"
                    ADBRxx , GTSTUP are modified
                    ALGTDB is modified to call GTDBAS when
                    there is a new real data run to check the
                    validity of the data base.
                    GETLEP
                    new entry point to be called after a call to GETLEP
                    ENTRY GETOFS (IRUN,OFSET)
                    returns in OFSET  the average D0 for run = IRUN
                  - ECALDES set : new version  (see EDESNEWS)
                    print the date and version number at first entry
                    introduce treatment of the alignment
                 -  DE/DEX set :
                    add gain correction from TC3X bank to TIDHYP.
                    fix bug in TBTBLK.
                    use double precision in TNRHPA (VDET needs it)
                 -  PHOTONS set :
                    EBCLCF is modified to get EPCC and ECCA with the
                    right setup code (MC data) or run number (Raw data).
                 -  PRESS set :
                    APOLLO version introduced.
                    vectorized version introduced for CRAY.
                    call NLISTF in DMPLIS to speed up.
                    give the facility to prevent some banks (PIDI)
                    to be compressed.
                  - PTOJ set:
                    FPOTJ is modified to unpack PFRF,NR=2.
                    PTEXSJ is modified to unpack PT2X into T2XS.
                    PAIRFD is modified to make the computation
                    of the invariant mass in double precision to
                    avoid negative masses.
                  - VDET set :
                    The VDTRACK package is introduced.
                  - YV0 set:
   YV1CJJ - YV1C bank extended - more HAC parameters.
   YV1INI - extend common/YV0CUT/ for new cuts from YV1C.
            Load cuts into /YV0CUT/. If old YV1C bank then use defaults
            for new cuts
   YV0BOK - 4 histos added. Histos renumbered to be in sequence of cuts.
   YMFV0V - Add entry point YMFV00(NVMAX) to set max. no. of V0
            Use new cuts from /YV0CUT/:
               no. of TPC hits on track
               Minimum track momentum
               No. of coords. before vertex
               Min. distance from prim-to-decay vertices
               d0 of the V0
               Z0 of the V0
               Mass window around K0, Lambda, Gamma.
   YVCAME - modify to give total no. of coords before vx. in VXD+ITC+TPC.
   YCHIV2 - change to use d0 and errors w.r.t. primary vertex instead of
            origin (0,0,0). Uses new routines:-
    new routines :  INTEGER FUNCTION ALTRIG (ITRG1,ITRG2,ITRG3)
                    returns the 1st 3 words of XTEB or XTRB
                    ALTRIG = 0 if no XTRB or XTEB is present
                             1 if XTEB is there
                             2 if XTRB is there
                    INTEGER FUNCTION GTDBAS (LBAS,IRUN)
                    checks that the current data base is valid
                    for this run. If not open the valid one.
                    GTDBAS = 0 if a valid data base is opened.
                    UFITQL
                    subroutine moved from JULIA
                    EDIR set
                    set of subroutines to build EDIR class word
                    PRINT set
                    TPADD (ISECT,ILUN) dumps TPC pad hit bank
                    YVO set
                    YPSIVN YD0NFN YZPHAN YFIXYN
  -------------------------------------------------------------------
  ! 910305 - ALEPHLIB 12.4 contains
       +++++++++++++++++++++++++++++++++++++++++++++++++++++++
       BECAREFUL!!!!!! Some DE/DX routines require ADBSCONS 140
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mods in        : VDET and VDETDES
                     VRDDAF fills a specific common block
                     /VFTKAL/ for UFTKAL and /VDJGEO/ for
                     VDTRAK package.
                     UFTKAL
                     few corrections , introduction of /VFTKAL/
                     and UFVDMS
                     EBSATU,EBRGCD
                     small corrections.
                     AOPEN,CRNATY,AOPTAP
                     on CRAY use /pool/aleph/ instead of /pool/stage/xu/
                     and handle robot cartridges.
                     ADSPOS
                     dispose EPIO files with aldisp instead of dispose
                     CMPINI,CMPIN2,CMPINF
                     add an option to suppress bank formats for
                     compressed banks
                     MDST
                     A new library has been created independantly
                     of ALEPHLIB. It is maintained by S.Haywood.
                     MINI OLDLIB, TXTLIB PHY
                     ALEPH$GENERAL:[MINI]MINI.HLB, .OLB, _D.OLB, .FOR
                     The code has been removed from the ALEPHLIB.
                     DEDX
                     corrections to existing routines and some new
                     routines which need ADBSCONS 140
                     the factor EFACTM is put in a PARAMETER statment
                     it is used to unpack DTRA bank in TIDHYP
    new entry        ABRREC
                     new entry point ABGTCL (ICLAS) returns in ICLAS
                     the class word of the current event.
    ------------------------------------------------------------------
  ! 910122 - ALEPHLIB 12.3 contains
    mods in        : PRPART  update print format
                     BOOK    correction of few bugs and simplification
                     UFTKAL  few corrections, introduce VDET into the fit
                             (UFVDMS is not yet in the ALEPHLIB)
                     ABCHCK  correct a bug in SEVT card.
                     ABALFA  make sure that the old FILM card is dropped
                             before reading a new file.
                     AOPEN   do not call BUNIT and BRWND but BEPRW
                             before calling EPDEFU in case of EPIO files.
                             write messages on IW(6).
                             On VAX it is not possible to read an EPIO file
                             sequentially when the previus EPIO file has been
                             read directly!!!!!!!!!!!!!!!!
                     AOPTAP add DEV parameter just in case of SMCF
                     cartridges.
                     AFILMI, ADSPOS, AOPEN, AOPENW, AOPTAP, AWRTAP, CRNATY
                     CRAY corrections to use transparent (unblocked)
                     binary format
                     be able to read EDIR on cartdriges.
                     ADBROW,ADBRPN,ADBRUN,GTSTUP,ADBRJJ
                     add GEneral detector which defines the overall
                     structure of the apparatus.
                     IGEOMW, IFECON, ILIVEW, ITDRIF, IXHITS
     Ensure IRFE, IZFE and IWST banks are got from correct place. These
     three database banks may be in the run header and/or database. Also
     add some protection for missing banks.
                     ICRCOO  Add protection for missing ICAE bank.
                     IPRDAF  Tidy format.
                     ITROTN  Output angle in range 0 - twopi
                     IPTOJ   Tidy code used for data generated from
                             old versions of JULIA.
                     TGHPAL
                modified by extracting out most of its code into a
                separate routine which is completely arguement driven
                and can be called from a different context.
                     TMDEDX
                check if more than 40% of wire pulses within a sector
                are saturated.
                      PTEXSJ
                take care of additional word added to TEXS and PTEX for
                flagging tracks with too much saturation
     New routines   :  IGETDB
                       ALSTHO (IHOL,NWRDS,CHSTR)
                       transforms an array of hollerith into a char.string
                       CLMONS, BULOS
                       new photon identification package added
                       to the PHOTONS set. Look at PHOTNEWS for
                       more details.
                       KINE
                       add new routines KXL7.. to interface  LUND 7.3
                       TWRRED
        new TPC wire reduction code which can be called
        both from JULIA and TPCSIM.  The call in TPCSIM still needs to
        be added.  This module contains both the old algorthm as well
        as a new one which we are evaluating.
                       TSCINT and TSNEXT
        new geometry routines needed to improve the performance of the
        JULIA module TRKWRA
                        TK2IVM
        utility routine for calculation of the error on the
        invariant mass of a pair
                        UMSERR
        calculate multiple scattering contribution to track errors.
        This is meant to replace UINCOV.
     Purge            : TELOSS,TEDBSP,TEVBSP,TPARID
    -------------------------------------------------------------------
  ! 901213 - alephlib 12.2 contains
    mods in        : VRDDAF
                     use the setup code to get banks from the DAF.
                     ALGTDB
                     if run number is negative make sure that the required
                     banks are in memory.
                     AOPEN AOPTAP ACDARG
                     on IBM use the robot through the keyword SMCF
                     instead of CART.
          BECAREFUL THIS VERSION NEEDS ADBSCONS 138
    -------------------------------------------------------------------
  ! 901109 - ALEPHLIB 12.1 contains
    mods in        : AOPEN, AOPENW
                     mods for APOLLO.
                     ACLOSE,AFILIN,AFILMI,AINQUI,AOPEN,AOPERD, AOPTAP
                     on IBM, keep FILEDEF for EPIO files.
                     Otherwise open files using the facility:
                     OPEN (...,FILE=/fname fmode ftype,...)
                     read FILM card with BTERD directly to avoid a
                     wrong print statment.
                     when closing an EPIO file reset the EPIO access
                     mode flag to sequential.
                     on CRAY delete the tape files which have been staged
                     on $BIG/ (NO  -K in the FILI card) when closing
                     the file.
                     EBTRAN
                     pi0 at azimuthal angle=0.degree were wrong. It happened
                     in 1/1000 case.
                     VDET and VDETDES
                     few corrections.
                     THLCIR
                     make the algorithm more efficient.
                     TBBLOK
                     make it work with charge.ne.1.
                     TGHPTS
                     bug fix. DEDX was sometimes screwed up in JULIA.
    new routines   : 4 integer functions in ALEF set use the new GALEPH
                     ASIM bank and the new data base ADBR bank.
                     NROW = ADBROW (det,irow,IPERIOD,IRUN,ISETUP)
                     returns the run period, 1st run and setup code for
                     a given detector and a given ADBR row number.
                     NPERIOD = ADBRPN (det,IROW,iperiod,IRUN,ISETUP)
                     returns the ADBR row number,the run period,the 1st
                     run and setup code for a given detector and run date.
                     NRUN = ADBRUN (det,IROW,IPERIOD,irun,ISETUP)
                     returns the 1st run, the row number, the run period
                     and the setup code for a given detector and run #.
                     ISETUP = GTSTUP (det,irun)
                     returns the setup code for a given detector and run #.
    -------------------------------------------------------------------
  ! 901003 - ALEPHLIB 12.0 contains
    mods in        : When NOT using ABRSEL to do I/O BUT calling
                     ASEVT, or AREAD directly, please add a
                             CALL ABCHCK (IRET)
                     after reading data cards. IRET=11 means
                      "error in data cards".
                     ALEFIL, ALGTRO, MINTRA, IFECON
                     bugs removed
                     UFTKAL
                     protection added
                     ALPHARD package
                     reorganization, the ABRSEL routine is cut in several
                     pieces.
                     AOPEWR, CRFILM
                     when writing an EDIR file on the output write the
                     FILM bank when opening the EDIR file.
                     ABSEVT
                     a new data card 'ONER' indicates that there is only
                     one run per run. This allows to quit the input data
                     file when the last selected event has been found
                     without looking for another run.
                     new entry points ABSMAX, ABSLIM, ABONER
                     KINE and FYXX packages
                     handle new banks KZFR and FZFR
    new routines   : new set of routines in VDETDES package to handle
                     '90 VDET geometry.
                     JKLUN = ALKLUN (LUVER,LUDAT)
                     fills the KLUN bank with the LUND version # and date
                     of last change.
                     IRET = ALGTLU (LUVER,LUDAT)
                     returns the LUND version # and date of last change of
                     the LUND version used during event generation. IRET=0
                     when LUND was NOT used.
                     CALL ABSMAX (MAXRUN,MAXEVT)
                     resets the greatest run and event number to be selected.
                     CALL ABSLIM (NNMIN,NNMAX)
                     resets the 1st and last events to be selected.
                     CALL ABONER (ONE)
                     resets the flag ONERUN to true or false.
                     CALL ABOLDR (IOLDR)
                     dummy routine called after the end of run IOLDR.
                     CALL ABRSEL (ELIST,ULIST,IRET)
                     this routine is the steering routine of the new ALPHARD
                     package. The package runs in BATCH mode by default.
                     BATCH mode means ALPHA mode, it works exactely as
                     previous routine ABRSEL.
                     calling routine ABMODE('INTE') before calling ABRSEL
                     will switch the mode to INTEractive. But this mode is
                     not yet implemented.
                     CALL ABALFA (JRET)
                     part of old ABRSEL which was handling the opening
                     of files. JRET is a return flag. Called by ABRSEL in
                     BATCH mode every time a file has to be opened.
                     CALL ABCHCK (JRET)
                     checks the syntax of data cards SEVT,SRUN,IRUN,CLAS,
                     TIME. Called by ABRSEL at 1st entry. Can be called at
                     any time.
                     CALL ABRREC (ELIST,ULIST,IRET)
                     previous routine ABRSEL:
                     - writes output list if any before reading next record
                       (ABWEVE).
                     - reads next record
                     - checks that the run or event has been selected (ABSEVT)
                       if not continue reading
                     CALL ABWEND
                     close output files if any. Must be called at end of job.
                     CALL ABWEVE
                     called by ABRREC before reading the next record to write
                     the output list with or without EDIR.
                     The output list is set by a user call to ABWSEL.
  --------------------------------------------------------------------------
  ! 900917 - ALEPHLIB 11.9 contains
    mods in        : CMPINI, CMPIN2, CMPINF
                     to restore CFMT data card
                     IER = ALFMT (LUFMT,NAME,FMT)
                     add the facility to create all BOS formats
                     the 1st time the function is called if NAME='ALL '.
                     ABRSEL
                     move intialization of COMPRESS package right
                     at the beginning. If a garbage collection occurs
                     should not damage anything.
                     ABSEVT
                     decide on selection yes/no every time the
                     routine is called and not the 1st time only.
                     if run # = 0 ten look at the current run #.
                     new ENTRY ABSMAX (LASRUN,LASEVT)
                     to reset maximum run # and evt # to look at.
                     usefull in interactive mode.
                     ASEVT
                     reset LASRUN and LASEVT before calling AREAD.
                     AGTLTC
                     does not try to read LTC file when LTC logical
                     unit = 0.
                     JUNIDB
                     set LTC logical unit = 0.
                     ALFIEL
                     reverse the mag.field only for raw data file
                     with run # > 6000 and no FIEL data card.
                     AOPEN
                     remove bug in the CRAY GIME
                     PRINT package
                     BPRTAB has been re-written and PRTABL has been
                     modified accordingly to use the BANKAL FMT file
                     which contains all the known ALEPH bank formats.
                     PRTWRK has been dropped.
                     PRKINE, PRFKIN
                     update formats according to new KVOL and FVER banks.
                     FYXX package
                     add a word in FVER at the end of the line which
                     gives the mechanism at the origin of the vertex.
                     PTPCOJ, PTGMAJ
                     correct the TPCO format and increase JLIST dimension
                     TIDHYP
                     remove check on TPC HV bits which is better done
                     in TCHKHV.
                     UFTKAL
                     non-fatal bug
                     MDST package
                     look at MDSTNEWS for more details on changes.
                     PHOTONS package
                     look at PHOTNEWS for more details on changes.
    new routines:    INTEGER FUNCTION IGTFMT (NAMI)
                     returns the index of the BOS format bank of a
                     bank known by its name-index NAMI.
                     this routine will be moved to the BOS library
                     and then removed from the ALEPHLIB.
    -----------------------------------------------------------------
  ! 900725 - ALEPHLIB 11.8 contains
    mods in        : TCRTOF, TCRTRA
                     better use of the AGETDB return code (TDVV bank)
                     ALELEP, LFILRU, ALGTRO
                     to adapt to the new set of routines below.
                     ABRSEL
                     allow reinitialization of the package
    new routines   : GETLEP (IRUN,IFOUN,IFILL,NV,ELEP,XYZ,DXYZ)
                     returns the LEP energy for run # IRUN   ELEP
                     if IFOUN>0 returns the LEP fill #       IFILL
                                        the number of events NV
                                        the vertex position  XYZ
                                        the error on XYZ     DXYZ
                     GETLUM (IRUN,IFOUN,IRQFL,NZ,NB,RLUMI,BK,BT)
                     returns luminosity information for run # IRUN
                     if IFOUN=0 no information avalaible
                        IFOUN>0 returns # of Z0               NZ
                                        # of BhaBhas          NB
                                        luminosity            RLUM
                        IFOUN=1 returns run quality           IRQFL
                                        # of background BBs   BK
                                        BB trigger efficiency BT
    new entry     : ELEP =  ALEFIL (IRUN,JLFIL,IROW)    in ALELEP
                    returns ALEFIL = LEP energy for run # IRUN
                            JLFIL  = BOS index of LFIL bank used
                            IROW   = row # containing run # IRUN
                    JNAME = ALGTRO (NAME,NEW,JCOL,IROW)
                    returns ALGTRO = BOS index of the NAME data base
                                     bank which contains NEW in col. JCOL
                            IROW   = row # of the NAME bank which contains
                                     NEW in col. # JCOL
    ------------------------------------------------------------------------
  ! 900706 - ALEPHLIB 11.7 contains
    mods in        : USGTDB, FMINIT, EBRGCD, YV1INI
                     small bugs
                     DEDX, PTOJ (TPC part)
                     some routines are moved from JULIA to ALEPHLIB
                     UFTTRK
                     EBTRAN
                     protection against -ve SQRT
                     ABRSEL
                     in case of error during decompression , print a
                     message and reset the error flag to 0, then
                     go on with the unpacking of decompressed banks.
                     ALREAD
                     few bugs related with the GIME option
                     ALGTDB
                     the initialisation of LRUN is set to -999
                     instead of -1 to allow data bank number = -1.
                     introduce entry point ALGTD1
                     the default data card bank number can be
                     changed by a call to the INTEGER FUNCTION ALGTD1
                           IOLD = ALGTD1 (INEW)
                     will changed the data card bank number from
                     IOLD to INEW.
                     USGTDB
                     introduce entry point USGTD1
                     the default data card bank number can be
                     changed by a call to the INTEGER FUNCTION USGTD1
                           IOLD = USGTD1 (INEW)
                     will changed the data card bank number from
                     IOLD to INEW.
                     MDST
                     few changes
    new routines   : DEDX, TPCDES, PTOJ (TPC part)
                     IER = INTEGER FUNCTION ALFMT (LUFMT,NAME,FMT)
                     get the BOS format FMT of the NAME bank from
                     the BANKAL.FMT file opened on LUFMT
                     BKFMT is called with tthe FMT format
                     IER=1 if there is no format (default I)
                     IER=0 means a format has been found .
                     ENTRY DMPGER (LIST,ERLIST,NER) in DMPLIS
                     this routine can be called in ALPHA after
                     decompression to get the error flag and the
                     number and list of non decompressed banks.
                     IOLD = ALGTD1 (INEW) ENTRY in ALGTDB
                     this function can be called at any time to set
                     the data card bank number to INEW. The default
                     value of INEW is 0. It returns the previous value.
                     ADBSWP (IOLD,INEW)
                     will swap all data base banks present in the BOS
                     array at the time of the call with bank number IOLD
                     to INEW. And will call ALGTD1 (INEW) and USGTD1(INEW)
                     to set the data card bank number used in these 2
                     routines to INEW.
                     ECMS = ALELEP (IRUN)
                     will return the best estimate of the LEP energy
                     for the run # IRUN.
                     JLFIL= LFILRU (IRUN,IROW)
                     will return the row # IROW which contains the
                     run # IRUN in the LFIL bank with BOS index JLFIL.
                     JNAME = ALGTRO (NAME,NR,NEW,JCOL,IROW)
                     will return the row # IROW which contains in the
                     column # JCOL the quantity NEW in the BOS bank
                     NAME,nr=NR.
                     for these routines, look at the subroutine header
                     to understand the return code.
    ------------------------------------------------------------------
  ! 900621 - ALEPHLIB 11.5 contains
    mods in        : AOPTAP
                     to distinguish between VXCERN and VXALUW so that
                     things work properly for ASCII-labelled tapes.
                     ADSPOS, AOPENW
                     to distinguish between IBM and VAX CRAY stations
                     AGTLTC
                     blank input list and internal list
                     MALREC entry into JALREC
                     small bug
                     ECALDES
                     purely historian change: put all 4characters *CD
                     in one *CD ECCCOM.
                     PAIRFD
                     get conversion point coordinates through entry point
                     CALL PAIRCP(XA,YA,ZAV)
                     HDEADM
                     small bug fixed.
                     ITPRDI,ITPRHT,ITDCOR
                     adapt to new hit definition. Still compatible with
                     old Monte Carlo data.
                     PITCOJ
                     modified to produce the ITC corrected coordinates
                    (bank ICCO).
                     HAC
                     update existing HAC parameters with the ADBSCONS 127
                     X1DISC,X1DCEB
                     because of the change in XTEB.DDL (JXTEET does not
                     exist anylonger. It has been replaced by JXTELW)
                     VAENSA, VADESA
                     1st strip is number 1 (and not 0).
                     VDPRDI
                     prints new VDET banks VHLS,VPLH.
                     YV0
                     increases the size of some arrays
                     PHOTONS
                     few corrections
   new subroutines : to make ITC corrected coordinates.
                     IASIGA,ICDRIF,IMICCO,ITCFLG,ITQUAL,
                     ITXFLG,ITXING,IUDOCA,IUPCCO,IUVCRS.
                     VRDDAF(LBAS,IRUN,IFLAG)
                     to read VDET data base and fill geometry commons.
                     some routines for SCANBOOK
                     BKLFIL fills LFIL bank
                     BKRLUM fills RLUM bank
                     ALDAWR writes a LIST of banks on a DAF.
                     ALGTBK gets/creates/or modifies a DAF bank.
                     EBGAGA , EBHAHA in PHOTONS set
  --------------------------------------------------------------------
  ! 900501 - ALEPHLIB 11.2 contains
    mods in        : EBINIT
                     remove mods implemented in version 11.1
                     UFTKAL
                     add some protection
                     TMDEDX, TBBLOK
                     new DE/DX calibration
                     DMPBAN, DMPLIS
                     try to speed up decompression
    new routines   : TCHECK(IRUN)
                     checks for existence of good DE/DX constants
                     on the data base.
                     DMPBIN
                     set of routines written in IBM assembler to
                     speed up decompression on IBM.
    new package    : ALPHARD
                     I/O package called by  ALPHA .
  -------------------------------------------------------------------
  ! 900423 - ALEPHLIB 11.1 contains
    mods in        : ALREAD
                     implement EDIR on CRAY
                     small bug in AOPEN, AREAD
                     PRTABL, X2PRIN, YFTVVX
                     remove printing of unset variables
                     ALFIEL
                     change the sign of the field for run > 6000. when
                     there is no FIEL data card.
                     ECALDES
                     better description of the overlap region and
                     endcaps
                     PHOTONS
                     few bugs
                     TRIGGER LEVEL1
                     corrections to be compatible with old and new
                     data structure.
                     PRESS
                     to use CPRO bank instead of big TAB2,COL2 banks.
                     the use of CPRO is triggered by data card:
                     COMP  'CPRO'
    new routines   : CRENVI
                     to get the HOST machine (IBM or VAX) of the CRAY
                     YV0
                     new package. Look at YV0NEWS for details.
                     CMPIN2
                     called by CMPINI when CPRO option is chosen
                     initializes the COMPRESS package from CPRO bank
                     instead of TAB2,COL2.
                     DMPFMT
                     build a BOS format from compress bank info.
    -----------------------------------------------------------------
  ! 900320 - ALEPHLIB 11.0 contains:
    mods in        : ALREAD
                     DOES NOT CONTAIN MODS TO READ EDIR ON CRAY
                     to be able to read NATIVE files in DIRECT
                     access mode on IBM.
                     AOPEN, GIMEDK
                     bugs
                     calls JULREC to get the record length of an
                     input file
                     AOPENW
                     calls KALREC to get ALEPH record length of
                     an output file
                     AOPTAP
                     installs new facility MOUNT tapes/cartridges.
                     JALREC
                     adds entry points KALREC and MALREC.
                     AUBOS
                     calls USBOS which is dummy on the ALEPHLIB.
                     FYNHIS
                     to implement HERWIG history code
                     FYKILL
                     to keep the history of K0's decays and lambdas
                     in some parts of the ITC.
                     FPTOJ
                     small correction
                     AUHCYL
                     protection against -ve SQRT.
                     UFTKAL
                     small bug and unset variables
    new routines   : USBOS (NAME,NR,LE,KNDX,IGARB)
                     user routine called by AUBOS when there is no
                     space left after a garbage collection
                     JULREC (FTYPE,FDEVI)
                     gets the record length of a file with aleph type
                     FTYPE and device FDEVI.
                     FTYPE must be one of the ALEPHtypes.
                     FDEVI can contain the parameter LREC followed
                     by the record length
               i.e. FILI 'FLRLUN02 EPIO * | GIME PUBXU 407 LREC 3600'
                     KALREC (FTYPE)     entry point in JALREC
                     returns in KALREC the record length of aleph
                     type FTYPE.
                     MALREC (FTYPE,IRECL)   entry point in JALREC
                     the default ALEPH record length can be modified
                     by the function MALREC(FTYPE,IRECL).
                     AMOUNT (LUN,FNAME,ATYPE,FDEVI,IER)
                     mount tape/cartridge on IBM.
    -------------------------------------------------------------------
  ! 900215 - ALEPHLIB 10.8 contains:
    mods in        : GIMEDK
                     uses QDFREE installed on all IBM machines
                     X1TRIG
                     calls X1HIST
                     ALFIEL
                     correction of 1.1% when compensation coils are off
                     YTOPVT, UFTKAL, TLACOR
                     HCALDES
                     take care of the air between tubes in the end caps
                     the correction is made at the level of HRDDAF, the
                     correction introduced in HFEHIT in version 10.6 is
                     removed.
                     correction of few other bugs.
                     MUPRHT, MUPRDI
                     move these routines to PRINT set.
                     ECALDES
                     look at EDESNEWS for details
                     PAIRFD
                     reduce the number of error returns. make the
                     algorithm less sensitive to machine precision.
    new routine    : MUCATR (ITRA,PR1,PR2,IFLAG)
                     probability for a track to be a muon from MUCALO
    ------------------------------------------------------------------
  ! 900124 - ALEPHLIB 10.7 contains:
    mods in        : ALOPEN, DMPCHR
                     reset some variables to 0
                     ADBVER, AOPDBS
                     open LTC file and get version number and date
                     of it.
                     ACLOSE
                     close files depending on the mode (EPIO,FORTRAN)
                     and the machine (IBM,CRAY or VAX).
                     ACDARG
                     call GIMEDK on IBM
                     AOPENW
                     write EPIO files in RECFM F instead of U.
                     IRDDAF
                     get info. from new Dbase banks ICAE,ISFE,IZRS.
                     Must use next version of Dbase (version 120)
                     ICRCOO
                     better coord. determination and data correction
                     using new and existing Dbase banks.
                     PITCOJ
                     add IFCO bank to S-list.
                     HFEHIT
                     small correction of alignment
                     X1INP
                     mistyping error
                     correct few APOLLO fortran bugs in various routines
    new routines   : ILATCH
                     create IWCR (wire-to-coord relation) bank.
                     ILIVEW
                     create ILIV (live wire) bank.
                     TRIGGER package
                     introduction of a level1 trigger summary which
                     can be called in JULIA. Look at TRIGNEWS for more
                     details.
                     GIMEDK internal routine to ALREAD
                     get a free letter to make a GIME in READ or WRITE
    ------------------------------------------------------------------
  ! 900108 - ALEPHLIB 10.6 contains:
    mods in        : ASEVT, AUNPCK
                     remove references to +FIL bank
                     EBCRAD
                     small corrections
                     VDPAJJ
                     update HAC parameters
    ------------------------------------------------------------------
  ! 900100 - ALEPHLIB 10.5 contains:
    mods in        : X1INP
                     a HAC parameter had changed its name.
                     ALFIEL
                     get the magnetic field from 'RALE' raw data bank
                     when it is there
                     ACLOSE
                     new routine using +BUF BOS internal bank to close
                     all files opened in BOS.
                     AFILIN, AFILMI, AFILOU, AIOCAR, AOPERD, AOPEWR
                     new routines using /ALRCOM/. AOPERD and AOPEWR
                     do not call AFILIN and AFILOU
                     AIOCAR (CARIN,NINP,CAROUT,NOUT)
                     uses NINP and NOUT as input arguments to set the
                     length of CARIN and CAROUT
                     PHOTONS
                     several improvments
                     UFTKAL
                     protection against numerical problems .
    new routine    : AGTFIL (CARD,FLAG,LUN,IER)
                     open in FLAG mode ('READ' or 'WRITe) the file
                     given on CARD data card onto logical unit LUN.
                     several new routines in PHOTONS.
    ------------------------------------------------------------------
  ! 891100 - ALEPHLIB 10.4 contains:
    BECAREFUL THE HISTORIAN LIBRARY HAS BEEN RESEQUENCED
              HAC parameters have been replaced with the most recent
              version of BANKAL.HAC found in:
              ALWS::ALEPH$GENERAL:[DOC.BANKDOC]BANKAL.HAC
    mods in        : ALREAD
            ALSEQR : SEVT card is now standard between EDIRs and data files
            AOPERD : EDIRs with cartridges is now automatic. One can now
                     mix with multiple FILI cards, EDIRs refering to data
                     in NATIVE or EPIO format on cartridges, tapes or disks.
            ACLOSE : one can also mix data files and EDIRs in the same card
                     file.
                     fix to avoid crash at end of job when closing NATIve
                     file.
                     CRSTAGE is now part of the package. It is no
                     longer necessary to load it on CRAY: it will
                     be removed from the CRAYXU.401 disk.
               FILI  'FNAME.FTYPE | GIME tid  addr'
                     will assign the file $STAGE/fname.ftype if it
                     exist or will fetch it from IBM disk "tid addr"
               FILI  'FNAME.FTYPE | ACQUIRE tid addr'
               FILI  'FNAME.FTYPE | FETCH tid addr'
                     work as "acquire and fetch" in CRAY JCL.
               FILO  'FNAME.FTYPE | DISPOSE'
                     will dispose the file to the user reader.
                     BOOK
                     various corrections.
                     new routine BKCOPY
                     COMPUTE
                     new fitting routines UFTTRK, UTKXNG
                     look at UFTTRK for more details
                     DEDX
                     protection in TIDHYP and TMDEDX
                     check the TPC dE/dx HV bit in REVH and return an
                     error code if it is not set.
                     return an error code if the dE/dx calibration
                     constant is zero (I now set this constant to zero
                     for a run  if it is impossible to calibrate the run,
                     so this is a method to avoid such runs)
                     ITC
            ICRCOO   modified to create IFCO bank
            ITDRIF   modified to use IET0 Database bank
            IINRES   modified to get IET0 bank from database
            IFCOJJ   new HAC params. for IFCO
            IET0JJ   new HAC params  for IET0
                     PTOJ
                     protections added in PTPCOJ, PECHIC
                     TRIGGER LEVEL 2
                     has been updated to follow ONLINE level2 trigger
                     HAC
                     completely new set of HAC parameters from:
                     ALEPH$GENERAL:[DOC.BANKDOC_NEW]BANKAL.HAC  8-NOV-89
    new routines     ALRLEP will fill RLEP online data bank
    ------------------------------------------------------------------
  ! 891021 - ALEPHLIB 10.3 contains:
    mods in        : ALREAD
                     the flag DIRECT used in AOPEN to open files in
                     direct access mode is set to FALSE at 1st entry
                     into AOPEN or ACDARG by a call to ADIREC.
                     it is set to TRUE by ACDARG in case of a FILM
                     data card od a DAF file type.
                     it is set to FALSE at the end of AOPEN.
                     PRESS
                     corrections for CRAY.
    ------------------------------------------------------------------
  ! 891000 - ALEPHLIB 10.2 contains:
    mods in        : PHOTONS
                     small bugs
                     ALGTDB, USGTDB
                     at 1st entry opens the LongTermConstant file
                     ADBSLTC.NATIVE and fills the list of LTC banks.
                     at next entry if the bank which is required does
                     not belong to the LTC list then
                     the ShortTermConstant direct access file is read
                     JUNIDB
                     2 more entry point JUNISQ, NUNISQ to get
                     the logical unit number of the LTC file :
                     the default is 8 and can be changed with a
                     call to NUNISQ.
                     AOPTAP
                     mod to cope with new density default on CERNVM
                     AUBLIS
                     can print a list of any length
                     ITC
                     make use of the fine-tune constants in the ITC drift-
                     time relation. The new constants are in the IEWP and
                     IEDD data base banks.
                     THTFLG
                     take care of known dead channels.
                     TMDEDX, TC2XJJ
                     New calibration constant for the dE/dx routines.
                     YTOP
                     several corrections
                     ALREAD
                     correction to read several files with event dir.
                     in sequence.
                     do not execute a GIME if it was already done.
    - new routines:  AGTLTC (NLTC,LTCLST,IER)
                     LTCLST(1:NLTC) will be filled with the list of
                     banks read from ADBSLTC.NATIVE or from the file
                     given on the FLTC data card.
                     MDARD from BOS77
                     calls AGTLTC at 1st entry
                     TRHFLG(HPT,IFLG)
                     which padrows is a given helix with parameters HPT
                     expected to hit (IFLG(1:21)=1 if a hit is expected
                     on this row)
    -------------------------------------------------------------------

2 ALEF

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     general utilities
       this sets contains various subprograms directly callable by the USER.
    
     ! ALEPHLIB 31.4
         ALKJOB : modify the DATE given by DATIME to be yyyymmdd
         GETBP  : print date yyyymm
         XFMCBP : convert to the new ADBR format : yyyymm
    
     ! Correction file no. 2 to ALEPHLIB 31.3
         GETLE2 : Protect against incomplete RNF2 bank (M.Cattaneo)
    
     ! Correction file no. 1 to ALEPHLIB 31.0
         GETLEP : Bug fix - Fill number was not filled in certain cases (J.Boucrot)
    
     ! ALEPHLIB 31.0
         ALVERS : Print out version number only once in the job        (M.Cattaneo)
         GETBP  : New. Moved to Alephlib from Alpha                    (J.Boucrot)
         GETLEP : Completely rewritten to give always the best possible
                  available LEP energy and beam position for LEP1 and LEP2
                  (See Marco's Mainz talk of 980926)                   (J.Boucrot)
         GETLE1 : Replaced with version from Alpha (adds a protection) (J.Boucrot)
         GETLE2 : Replaced with version from Alpha (adds a protection) (J.Boucrot)
         FIXALPB: New. Moved to Alephlib from Alpha                    (J.Boucrot)
         XFMCBP : New. Moved to Alephlib from Alpha                    (J.Boucrot)
    
     ! Correction file no. 6 to ALEPHLIB 30.7
        ALKRAN : New - Build kine run header KRAN    (B.Bloch)
        ALKMAR : New - Create kine event header KMAR (B.Bloch)
    
     ! ALEPHLIB 30.7
        ALTRHV - Obsolete. Use XHVBIT instead (M.Cattaneo)
    
     ! ALEPHLIB 30.6
        ALBUNCH - New. Get number of bunches from LEP information in 1997 (B.Bloch)
    
     ! ALEPHLIB 30.5
        GETLE1 - New. Gives the exact run energy for 1993 -> 1995 LEP1 runs
                 from the latest estimations of the LEP energy        (J.Boucrot)
        GETLUM - get lumi from 'LUMI' if it's 0. in 'RLUM'            (J.Boucrot)
        
     ! ALEPHLIB 30.3
        GTT0GL - Correct bug in treatment of new alignment (D.Casper)
    
     ! ALEPHLIB 30.2 correction file no. 9
        GTT0GL - check whether new alignment banks are present before adjusting t0
                                                                         (D.Casper)
    
     ! ALEPHLIB 30.2
       new alignment (W.Wiedenman), new Kalman filter (D.Casper) are introduced.
        DVMOVE - new routine: DVMOVE(A,B,N) 
                 copy A(1:N) into B(1:N), A and B are double precision arrays.
        DVZERO - new routine: DVZERO(A,N) 
                 reset A(1:N) to zero , A is a double precision array.
    
     ! ALEPHLIB 21.6
        ALELEP - Replace previous code by call to identical routine ALEFIL 
                 (M.Cattaneo 10/02/1997)
        ALSECS - Remove test on century for leap year (year 2000 is a leap year)
                 (M.Cattaneo 27/02/1997)
    
     ! ALEPHLIB 21.4
        ALSECS - New routine to convert "Aleph format" date/time to integer
                 number of seconds elapsed since 1-JAN-1988  (O.Schneider)
    
     ! ALEPHLIB 21.3
        ALKJOB - Use kjobjj.h instead of kgjjpar.h
        RQBUNC - Set NWAG and INBU for '96. Avoid trying to get the info from the
                 unreliable LZZT as the bunch train scheme doesn't change 
                 within the year.
    
     ! ALEPHLIB 21.1
        RQBUNC - tagging of level 3 was not working at the beginning of 95
                 so set IBUN=1, IQUA=3 for runs in 4x1 configuration and
                 leave as before those in 4x2 configuration .
    
     ! ALEPHLIB 21.0
        GETLUM - get LCAL luminosity for High Energy runs ( LEP II )
        GETS4B - new routine : Sical lumi per bunch for multibunch runs
    
     ! ALEPHLIB 20.9
        ALFMT  - IF called for ALL banks : ALFMT (LUFMT,'ALL ',FMT)
                 after the 1st call, it will check ALL formats and redefine
                 those which are different from those stored on BANKAL.FMT
    
     ! ALEPHLIB 20.8
        ADBRJJ, ADBRLIST - add one column for beam position periods.
        ALLEP1 - logical function ALLEP1(irun) is true if energy of
                 run # irun is .lt. 100GeV
    
     ! ALEPHLIB 20.7
       ALTRIG - when X1RG is there take trigger bits from row starting
                with 'TPR '. (that was not the case for MC events.)
    
     ! ALEPHLIB 20.6
       ALFMT  - increase the number of bank formats to 1500.
       BKTOBK - new routine to copy a bank to another bank
                CALL BKTOBK ('ABCD',NR1,'EFGH',NR2)
                'EFGH' format is taken as 'ABCD' format.
       ALK7FIL, ALK7OP, ALK7TRU, ALK7FRU -
                Adapt to new RUNCARTSLIST format
    
     ! ALEPHLIB 20.5
       GETLEP - add a protection against negative sqrt.
    
     ! ALEPHLIB 20.4
       ALGTDB : make sure that the required bank is there.
    
     ! ALEPHLIB 20.3
       CAFIHT : remove a bug
    
     ! ALEPHLIB 20.2
       ALFIEL : give the correct value of the mag field for runs 25261
                and 25265.
       BKRHAL - get computer name on which the job is run.(P.Comas)
       BKRHAW - change the RHAH bank format.
    
     ! ALEPHLIB 20.1
       NAMERU : new FUNCTION to get the row# of NAME bank containing
                a given run.
       ALK7COM: Increase number of segments to 3 which allows 7500 runs
                instead of 5000.
     ! ALEPHLIB 20.0
       ALFIEL : '92 offset is valid for 92 and 93 only
    
     ! ALEPHLIB 15.8
       ALTRIG : use X1RG
       ALTRHV : new INTEGER FUNCTION to return HV word from X1RG or XTCN
    
     ! ALEPHLIB 15.8
       remove *CA ALRCOM from ALPHARD set, introduce an entry point AOPEWW
       in AOPEWR to get IFWITH flag from ALREAD set into ALPHARD set,
       move some routines from ALREAD to ALEF or to ALPHARD to be
       prepared to cut ALEPHLIB into ALEPHIO and ALEPHLIB.
       ALEPHIO will contain the machine dependant code : ALREAD, EPIO, PRESS
       ALEPHLIB will be machine independant
    
     ! ALEPHLIB 15.7
       TRACBCK : CALL EXIT after the traceback on IBM.
       ALFMT : limit the test on the first 3 characters of NAME to find
               'ALL'
       ALFIEL : the 92 current offset is valid for 92,93,94....
       GTT0GL : T0GL depends on TPC setup code.
       UINDXS : call SORTI instead of SORTX deleted from CERNLIB 94A.
    
     ! ALEPHLIB 15.6
       ALFMT : add a SAVE
    
     ! ALEPHLIB15.5
       ALEFIL, ALELEP : check that the row # returned by LFILRU is > 0
       GETLEP : check that the row # returned by ALEFIL is > 0
    
     ! ALEPHLIB 15.2
       ALGTRO : bug correction
       ALTRIG : look for LUPA or SILH bank to get trigger bits when no other
                bank is present.
       ALVSN :  add a protection against slow control records (IRUN=0)
       GETLUM : modified to get the lumi / nb of bhabhas from Sical in 1993
       GETSLU : modified to get the lumi from bank 'SLUM' if necessary
       ALFMT  : increase size of bank formats to 75 characters to fit LPZT
                bank format. That is the maximum length allowed on a file
                with a record length of 80.
    
     ! ALEPHLIB 15.1
       LFILRU : remove a bug which happened when reading '90 '91' '92
                data with a DBAS.BANK which contains '92 banks.
    
     ! ALEPHLIB 14.5
       New routine GETSLU : gets SICAL Lumi and nb of Bhabhas for a given
                            run.
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ALBUNCH    Get number of bunches from lep information in 1997
     ALEFIL     Returns the lep energy, the lfil index and row # for a given run
     ALELEP     Returns the lep energy for a given run
     ALFIEL     Returns the magnetic field
     ALKEVH     Create kine event header kevh
     ALKJOB     Book and fill kine job header kjob
     ALKLUN     Build lund run header klun
     ALKMAR     Create kine event header kmar
     ALKRAN     Build kine run header kran
     ALKRUN     Build kine run header krun
     ALLEP1     Is this a lep1 run?
     ALRLEP     Build data run header rlep
     ALSECS     Converts an aleph date/time into a unique integer
     ALTRHV     Obsolete. use xhvbit directly instead - mc 971205
     ALTRIG     Returns the 1st 3 words of xteb or xtrb or dtbp
     ALVERS     Return the alephlib version # in alefv
     DVMOVE     Move a double precision array
     DVZERO     Set a double precision array to zero
     FIXALPB    Fix alpb beam position banks
     GETBP      Chunk-by-chunk beam position and size
     GETLE1     Get the exact lep energy for lep 1 runs
     GETLE2     Get the "instantaneous" exact lep energy for lep 2 runs
     GETLEP     Gets the lep energy and beam position for run irun
     GETLUM     Gets the luminosity and # of z0s and bhabhas for a run
     GETS4B     Gets the sical luminosity per bunch for multibunch run irun
     GETSLU     Gets the sical luminosity for run irun
     GETXYB     Gets the beam position per run from bank 'rxyz'
     GTT0GL     Get t0 depending on run number and number of bunches
     LFILRU     Get a row of a bank
     RQBUNC     Read the bunch number to be used for reconstruction from eveh.
     XFMCBP     Handle new mc setup for chunk-by-chunk beam position and size

3 ALBUNCH
         SUBROUTINE ALBUNCH(NBUN)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Get number of bunches from lep information in 1997
   
      Author   :- B. Bloch                     25-Oct-1997
   
      get currents in each bunch from LXUN bank
      return number of bunches with non zero current
     Input  : LXUN bank
     Output : NBUN Number of wagons per train with non zero current
   
 
3 ALEFIL
         FUNCTION ALEFIL (IRUN,JLFIL,IROW)
  ------------------------------------------------------------------------------
    CKEY ALEF LEP ENERGY
  ------------------------------------------------------------------------------
   - F.Ranjard - 900803
   Returns the lep energy, the lfil index and row # for a given run
   - Input    : IRUN    / I     = run number
   - Output   : ALEFIL  / R    = LEP energy
                JLFIL   / I    = LFIL BOS index
                IROW    / I    = LFIL row # containing IRUN
   - IF (a row exists for this run in LFIL) THEN
        ALEFIL = LFIL(run,JLFILE)
     ELSE IF montecarlo (AFID exists) THEN
        ALEFIL = AFID word(JAFIBE)
     ELSE IF raw data (RLEP exists) THEN
        ALEFIL = RLEP word(JRLELE)*2./1000.
     ELSE no bank
        ALEFIL = 91.2
     ENDIF
     IF ALEFIL<50. THEN ALEFIL=91.2
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALELEP                                                                          
   GETLE1                                                                          
   GETLE2                                                                          
   GETLEP                                                                          
   GETOFS                                                                          
        |---- ALEFIL                                                               
                   |----  NAMIND                              External             
                   |----  REAL                                External             
                   |----  LFILRU                                                   
                   |----  IABS                                External             
   
 
3 ALELEP
         REAL FUNCTION ALELEP( IRUN )
  ------------------------------------------------------------------------------
    CKEY ALEF LEP ENERGY
  ------------------------------------------------------------------------------
   - F.Ranjard - 900803
   Returns the lep energy for a given run
   - Input    : IRUN    / I     = run number
     M.Cattaneo   10/02/1997
    routine superseded by ALEFIL with new calling sequence
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALLEP1                                                                          
   ALSUMCL                                                                         
   ALSUMGT                                                                         
   ESWEH                                                                           
   SELEVT                                                                          
   SELGGE                                                                          
   SELTRK                                                                          
   SELWWA                                                                          
   SELWWB                                                                          
   SIEDIR                                                                          
        |---- ALELEP                                                               
                   |----  ALEFIL                                                   
   
 
3 ALFIEL
         FUNCTION ALFIEL(DUM)
  ------------------------------------------------------------------------------
    CKEY FIELD
  ------------------------------------------------------------------------------
   - F.Ranjard - 890803       modified - 900419
   - modified by: D.Colling - 930111
                  take 92 current offset into account
                  F.Ranjard - 931213
                  the 92 current offset is valid for 92 and 93
                  F.Ranjard - 940624
                  polarity was wrong for run 25261 and 25265
                  give the correct mag.field value
   Returns the magnetic field
   - Input    : DUM             = dummy argument
   - Output   : ALFIEL  / R     = magnetic field value
   - IF (FIEL data card exists) THEN
        ALFIEL = FIEL word(1)
     ELSE IF montecarlo (AFID exists) THEN
        ALFIEL = AFID word(JAFIMF)
     ELSE IF raw data (RALE exists) THEN
        ALFIEL = RALE word(13)*word(14) * nominal field/current
     ELSE no bank
        ALFIEL = 15. (nominal field)
     ENDIF
     IF (no FIEL and  RUNH or RUNR) THEN
        IF (run number > 6000) ALFIEL = -ALFIEL
     ENDIF
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PPCORR                                                                          
   TK2IVM                                                                          
   UFITQL                                                                          
   UFMS                                                                            
   UMSERR                                                                          
   YHELIX                                                                          
   QPTRCK                                                                          
   QTRKCH                                                                          
   VDCOSMJ                                                                         
   UFECAL                                                                          
   FRFTDP                                                                          
   TUN1NC                                                                          
   VMMFLD                                                                          
   YSPCUT                                                                          
   YSVBLD                                                                          
   YCIRCR                                                                          
   YMFMIN                                                                          
   YMFV0V                                                                          
   YMFV00                                                                          
   YNV0NF                                                                          
   YNV0VE                                                                          
        |---- ALFIEL                                                               
                   |----  NAMIND                              External             
   
 
3 ALKEVH
         INTEGER FUNCTION ALKEVH (NRDN,NTRK,NVRTX,IDPRO,WEIT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - F.Ranjard - 870401
   Create kine event header kevh
   - Input :  NRDN   = 1st random number used(3)
              NTRK   = # of input tracks
              NVRTX  = # of input vertices
              IDPRO  = process identification
              WEIT   = weght of the event
   - Output : ALKEVH = KEVH bank index
                       0 means not enough space to book the bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KEEVT                                                                           
        |---- ALKEVH                                                               
                   |----  ALSEED                              External             
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
   
 
3 ALKJOB
         INTEGER FUNCTION ALKJOB (IDBV,IDBD)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - B.Bloch-Devaux 880720
     Modified: F.Ranjard 991206 y2k fix
   Book and fill kine job header kjob
   - Input :  IDBV   = DATA BASE version #
              IDBD   = DATA BASE last mod date
   - Output : ALKJOB = KJOB bank index
                       0 means not enough space to book the bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KINIT                                                                           
        |---- ALKJOB                                                               
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  DATIME                              External             
                   |----  MOD                                 External             
   
 
3 ALKLUN
         INTEGER FUNCTION ALKLUN (LUVER,LULMD)
  ------------------------------------------------------------------------------
    CKEY ALEF LUND KLUN / USER
  ------------------------------------------------------------------------------
   - B.Bloch-Devaux 900926
   Build lund run header klun
   - Input  :  LUVER   = JETSET version number (packed as 703 for 7.3)
               LULMD   = JETSET last date of change (as YYMMDD)
   - Output :  ALKLUN  = KLUN bank index
                         0 means not enough space to book the bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7PA                                                                          
   KXP6IN                                                                          
        |---- ALKLUN                                                               
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
   
 
3 ALKMAR
         INTEGER FUNCTION ALKMAR(NSEQ,NRDN,NRDN2)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - B.Bloch - 980313
   Create kine event header kmar
   - Input :  NRDN,NRDN2 = seeds for the random sequences used
              NSEQ = number of sequences used
   - Output : ALKMAR = KMAR bank index
                       0 means not enough space to book the bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALKMAR                                                               
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
   
 
3 ALKRAN
         INTEGER FUNCTION ALKRAN (NSEQ,IS)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    B. Bloch march 98, to keep seeds of NSEQ random sequence
   Build kine run header kran
   - Input  :  NSEQ    = # of random sequences
               IS      = array of initial seeds
   - Output :  ALKRAN  = KRAN bank index
                         0 means not enough space to book the bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALKRAN                                                               
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
   
 
3 ALKRUN
         INTEGER FUNCTION ALKRUN (IDGEN,NOTRK,TITLE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - F.Ranjard - 870331
   Build kine run header krun
    call ALSEED to get seeds of random generator number
   - Input  :  IDGEN   = generator identifier
               NOTRK   = NOtracking marker word
               TITLE   = run title (up to 48 characters)
   - Output :  ALKRUN  = KRUN bank index
                         0 means not enough space to book the bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KINIT                                                                           
   KMKRUN                                                                          
        |---- ALKRUN                                                               
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  INTCHA                              External             
                   |----  ALSEED                              External             
   
 
3 ALLEP1
         LOGICAL FUNCTION ALLEP1 (IRUN)
  ------------------------------------------------------------------------------
    CKEY ALEF LEP ENERGY
  ------------------------------------------------------------------------------
   Is this a lep1 run?
   - Steve Wasserbaech, 21 August 1995
     This function tests the center-of-mass energy to determine
     whether a run is a LEP1 run:
       ALLEP1 = (sqrt(s) .LT. 100 GeV)
     Calls: ALELEP
   - Input:
     IRUN   / I  Run number
   - Output:
     ALLEP1 / L  = .TRUE. if IRUN is a LEP1 run
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALLEP1                                                               
                   |----  ALELEP                                                   
   
 
3 ALRLEP
         INTEGER FUNCTION ALRLEP (IELEP,BLEP,IPERI,IFILL,IPOL)
  ------------------------------------------------------------------------------
    CKEY ALEF LEP RLEP
  ------------------------------------------------------------------------------
   - B.Bloch-Devaux 891106
   Build data run header rlep
   - Input  :  IELEP   = LEP energy in Mev
               BLEP    = Beam type (character*4)
               IPERI   = Lep operation period number
               IFILL   = Lep fill number
               IPOL    = Polarisation code
   - Output :  ALRLEP  = RLEP bank index
                         0 means not enough space to book the bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALRLEP                                                               
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  INTCHA                              External             
   
 
3 ALSECS
         INTEGER FUNCTION ALSECS(DATE,TIME)
  ------------------------------------------------------------------------------
    CKEY ALEF DATE TIME
  ------------------------------------------------------------------------------
       O. Schneider, CERN/PPE
       June 11, 1996
       Modified 27/02/97 (M.Cattaneo): Remove test on century for leap year
                                       (year 2000 is a leap year)
   Converts an aleph date/time into a unique integer
    which is a linear function of time.
       The ALEPH date/time is stored for examples in banks RUNH, EVEH, LXDA ...
       Input:   DATE = integer date (YYMMDD or YYYYMMDD)
       ------   TIME = integer time (HHMMSS)
                       WARNING: in bank EVEH the time has the format HHMMSSXX
                                instead of HHMMSS
       Function value: Number of seconds elapsed between Jan 1, 1988 at 0:00:00
       --------------- and the specified DATE and TIME
                        A negative function value indicates an error, i.e.
                        an invalid date or time, or date in a year before 1988
                        or after 2053.
       Examples:  ALSECS(  880101,000000) returns 0
       ---------  ALSECS(  880101,000017) returns 17
                  ALSECS(19880101,000017) returns 17
                  ALSECS(  960724,140213) returns 270223333
                  ALSECS(19960724,140213) returns 270223333
                  ALSECS(  960724,140313) returns 270223393
                  ALSECS(  531231,235959) returns 2082758399
                  ALSECS(20531231,235959) returns 2082758399
                  ALSECS(  960814,235959) returns 272073599
                  ALSECS(  960814,240000) returns -8 (error)
                  ALSECS(  960815,000000) returns 272073600
                  ALSECS(  960229,000000) returns 257558400
                  ALSECS(  970229,000000) returns -4 (error)
                  ALSECS(      -1,    -1) returns -38 (error)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALSECS                                                               
                   |----  MOD                                 External             
                   |----  MIN0                                External             
                   |----  MAX0                                External             
   
 
3 ALTRHV
         INTEGER FUNCTION ALTRHV (IBITHV)
  ------------------------------------------------------------------------------
    CKEY ALEF TRIGGER HV
  ------------------------------------------------------------------------------
   - F.Ranjard -940426
   Obsolete. use xhvbit directly instead - mc 971205
    returns trigger HV word from XTCN or X1RG
   - Output : - IBITHV  / I = word 4
                ALTRHV  / I = 0 if no bank there
                              1 if XTCN is there
                              2 if X1RG is there
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALTRHV                                                               
                   |----  XHVBIT                                                   
   
 
3 ALTRIG
         INTEGER FUNCTION ALTRIG (IBITT1,IBITT2,IBITL2)
  ------------------------------------------------------------------------------
    CKEY ALEF TRIGGER
  ------------------------------------------------------------------------------
   - F.Ranjard - 910318
   Returns the 1st 3 words of xteb or xtrb or dtbp
   -      Modified: L.Mirabito - 910828
         Take information in DTBP for mini DST
         Modified: H. Meinhard       29-Apr-1993  (2)
                   Check LUPA and SILH, if all other banks not existing
         Modified: F.Ranjard - 940426
         Take information from X1RG starting with 'TPR ', col# 2,3,4
         Modified: M.N.Minard - 960207
         Take information from X1RG starting with 'TPR ' or ' RPT'
         to cure a problemm seen on '95 MINIs made on UNIX
   - Output : - IBITT1 / I  = word 1 of 1st row of XTEB or XTRB
                IBITT2 / I  = word 2 ......
                IBITL2 / I  = word 3 ......
                ALTRIG / I  = 0 if no bank is there
                              1 if XTEB is there
                              2 if XTRB is there
                              3 if DTBP is there
                              4 if LUPA is there;
                              5 if SILH is there. Note that in the latter
                                two cases, the original level2 mask is
                                unavailable, and IBITT2 is set equal to
                                IBITT1
                              6 if X1RG is there
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUTRGS                                                                          
   PHEDIR                                                                          
   SNGMTR                                                                          
   STRIGF                                                                          
   VTRLAS                                                                          
   XT0SYN                                                                          
        |---- ALTRIG                                                               
                   |----  NAMIND                              External             
                   |----  INTCHA                              External             
   
 
3 ALVERS
         SUBROUTINE ALVERS (ALEFV)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - F.Ranjard - 870401
     Modified M.Cattaneo 981028 - Print out version number only once per job
   Return the alephlib version # in alefv
    Print the version # on IW(6)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   CORAD94                                                                         
   KINIT                                                                           
        |---- ALVERS.                                                              
   
 
3 DVMOVE
         SUBROUTINE DVMOVE (A,B,N)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Move a double precision array
   - F.Ranjard - 970220
   - Input   : A /DP  = double precision input array
               N /I   = number of words to move
   - Output  : B /DP  = double precision output array
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- DVMOVE.                                                              
   
 
3 DVZERO
         SUBROUTINE DVZERO (ARRAY,N)
  ------------------------------------------------------------------------------
    CKEY ALEF ZERO DOUBLE PRECISION
  ------------------------------------------------------------------------------
   Set a double precision array to zero
   - F.Ranjard - 970218
   - Input : ARRAY / DP = double precision array
             N     / I  = number of wordsto reset
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFGAIN                                                                          
   UFQPRC                                                                          
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- DVZERO.                                                              
   
 
3 FIXALPB
         SUBROUTINE FIXALPB (IRUN)
  ------------------------------------------------------------------------------
    CKEY ALEF BEAMSPOT
  ------------------------------------------------------------------------------
   Fix alpb beam position banks
                                         Author: S.Wasserbaech 24.04.95
   
    If (real data) .and. (ALPB exists) .and. (julia vers .lt. 276) then
      If (ALP1 exists for this setup code) then
        If (IRUN appears in ALP1) then
          Fix the bank:
          Make sure the first row is not null
          Replace first-event-number in last row if necessary
          If (dbas version .lt. 198) then scale y uncertainty
        Else
          Set the number of rows in ALPB equal to zero
        Endif
      Endif
    Endif
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GETBP                                                                           
        |---- FIXALPB                                                              
                   |----  ISHFT                               External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
                   |----  GTSTUP                              External             
                   |----  IAND                                External             
   
 
3 GETBP
         SUBROUTINE GETBP (IRUN, IEVT, ICHUNK, VTX, VTX_ERR, VTX_SIZE)
  ------------------------------------------------------------------------------
    CKEY ALEF BEAMSPOT
  ------------------------------------------------------------------------------
   Chunk-by-chunk beam position and size
   - Original version: Dave Brown  9-1-92
     Adapted to to 1993 data                            J. Boucrot 14-6-93
     Modified MC code to run off database               C. Goy     23-6-93
     Set up to read BPBB for 1993, ALPB for 1994/95 S. Wasserbaech  2-5-95
     Major changes :                                S. Wasserbaech  Aug-95
       Use BE setup code (see ADBR) to identify run periods.
       Decide on use of BPBB according to JULIA version, not year.
       Replaced ALLR with ALRP.
       Added control by means of BPER, BPWT, and BSIZ cards.
       Switched to RANMAR and RNORML for MC calculations.
       Moved code for new MC setup to routine XFMCBP.
     Add protection against zeros in ALPB           S. Wasserbaech 3-10-95
     Take care of glitch in MINIs:                  S. Wasserbaech  3-6-98
       return average uncertainty on y_beam
       if ALPB says it is zero, SW, 3 Jun 98
     Adapted to be put into the ALEPHLIB                J. Boucrot 23-9-98
     Y2K fixes                               M.Cattaneo,F.Ranjard 06-12-99
   - Input:
     IRUN         / I  Run number
     IEVT         / I  Event number
   - Input and output:
     ICHUNK       / I  Previous chunk number; set this to 0 for the
                         first call.  It is updated by the subroutine,
                         and the subsequent call to QFGET_BP should be
                         made with the returned value.  If ICHUNK is
                         returned -1, no BP information exists for this
                         run/event.
   - Output:
     VTX(3)       / R  (x,y,z) position of luminous region centroid (cm)
                         Notice: VTX(3) is always set equal to zero.
     VTX_ERR(3)   / R  Estimated uncertainties on VTX (cm)
                         Notice: VTX_ERR(3) is always set equal to 1.
     VTX_SIZE(3)  / R  (x,y,z) rms size of luminous region (cm),
                         averaged over the year/run period
     Real data:
     The beam position x and y and their uncertainties returned in VTX
     and VTX_ERR are taken from the ALPB bank in the run record, or
     from the beam.position file if JULIA version < 275.03.  The sizes
     of the luminous region returned in VTX_SIZE are taken from the
     ALRP database bank and are average values for the year (or run
     period).
     Monte Carlo:
     The beam position x and y returned in VTX are generated so as to
     simulate the desired beam size distribution.  The primary vertex
     position of the event is extracted from truth information and an
     offset is added according to the size of the luminous region.
     The smearing corresponding to the average chunk-by-chunk beam
     position uncertainty (VTX_ERR) is included.  The "desired" beam
     size distribution is by default taken from measurements of the
     actual LEP conditions for the geometry year of the Monte Carlo
     file.  This default may be changed by means of data cards as
     explained below.  The horizontal size of the luminous region,
     sigma_x, is thrown at random from the measured distribution, which
     is parametrized as the sum of two Gaussians (not a delta function).
     The uncertainties in x and y returned in VTX_ERR, as well as the
     three sizes returned in VTX_SIZE, are taken from the ALRP database
     bank and are average values for the year.
     Customizing the luminous region size for Monte Carlo:
     As mentioned above, the default behavior is to use the luminous
     region size parameters for the geometry year of the Monte Carlo
     file.  The BPER card allows the user to override the default.  The
     parameters from the year(s) specified on this card are then used;
     each event is assigned at random to a particular year.  The years
     (in the LEP 1 era) are weighted according to the numbers of qqbar
     events in the MAYB/PERF runs in the VD run selection.  Different
     weights may be specified by means of the BPWT card.  (This card is
     mandatory for specifying the relative weights of LEP 2 periods,
     if two or more periods are selected with BPER.)  Finally, arbitrary
     beam sizes may be simulated by means of the BSIZ card.
     The BPER, BPWT, and BSIZ cards have no effect when real data is
     analyzed.
     Syntax:
     BPER [per1 [per2 [per3...]]]
       where per1,per2,per3... are run periods as specified in the
       first column of ADBR.  Years may be given as "1992" or "92"
       or "9200".  Other run periods have the form "YYMM", such as
       "9510".  A list of valid run periods is printed (and
       execution terminates) if the BPER card is given with invalid
       or no run periods.
     BPWT [iwt1 [iwt2 [iwt3...]]]
       where iwt1,iwt2,iwt3... are *integer* weights for the periods
       listed on the BPER card.  An error results if there is no
       accompanying BPER or if it has a different number of tokens.
       The weights may have an arbitrary normalization.
     BSIZ sigma_x sigma_y [sigma_z]
       where sigma_x and sigma_y are floating point numbers giving the
       desired sizes of the luminous region in cm.  The BSIZ card
       overrides all values in ALRP.  The value of sigma_z, if given,
       is returned in VTX_SIZE(3) but has no other effect.  If sigma_z
       is not given, the value 1 is returned in VTX_SIZE(3).
       Notes: the beam position uncertainty is set to zero if BSIZ is
       given.  BPER/BPWT cards are ignored if BSIZ is given.
     Examples:
     1. To simulate 1993 and 1994 beam size conditions:
        BPER 1993 1994
     2. To simulate 1993 and 1994 with equal weights:
        BPER 1993 1994
        BPWT   50   50
     3. To simulate a luminous region size of 120 x 7 microns:
        BSIZ 0.0120 0.0007
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GETLEP                                                                          
   GETOFS                                                                          
        |---- GETBP                                                                
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  AOPEN                               External             
                   |----  MRESET                              External             
                   |----  BREADC                              External             
                   |----  ACLOSE                              External             
                   |----  GTSTUP                              External             
                   |----  NDROP                               External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  VZERO                               External             
                   |----  MOD                                 External             
                   |----  RMARIN                              External             
                   |----  RANMAR                              External             
                   |----  RNORML                              External             
                   |----  ADBRUN                              External             
                   |----  CHAINT                              External             
                   |----  FIXALPB                                                  
                   |----  NLINK                               External             
                   |----  MAX0                                External             
                   |----  MIN0                                External             
                   |----  FLOAT                               External             
                   |----  ISHFT                               External             
                   |----  MAX                                 External             
                   |----  MIN                                 External             
                   |----  IAND                                External             
   
 
3 GETLE1
         SUBROUTINE GETLE1(ELEP,IFLAG)
  ------------------------------------------------------------------------------
    CKEY ALEF LEP ENERGY
  ------------------------------------------------------------------------------
   Get the exact lep energy for lep 1 runs
                                                  J.Boucrot  26.08.97
    arguments :
    ELEP  = LEP c.m.s. energy, in Gev
    IFLAG = 2 if ELEP found from average run energy
          = 3 in all other cases (then ELEP is taken from bank 'LFIL')
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GETLEP                                                                          
   GETOFS                                                                          
        |---- GETLE1                                                               
                   |----  JUNIDB                              External             
                   |----  ABRUEV                              External             
                   |----  NAMIND                              External             
                   |----  MDARD                               External             
                   |----  ALEFIL                                                   
   
 
3 GETLE2
         SUBROUTINE GETLE2(ELEP,IFLAG)
  ------------------------------------------------------------------------------
    CKEY ALEF LEP ENERGY
  ------------------------------------------------------------------------------
   Get the "instantaneous" exact lep energy for lep 2 runs
                                                    J.Boucrot  26.3.97
    M.Cattaneo 23-NOV-1999 - Protect against incomplete RNF2 bank
    arguments :
    ELEP  = LEP c.m.s. energy, in Gev
    IFLAG = 1 if ELEP found from official time-slice LEP information
          = 2 if ELEP found from average run energy
          = 3 in all other cases (then ELEP is taken from bank 'LFIL')
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GETLEP                                                                          
   GETOFS                                                                          
        |---- GETLE2                                                               
                   |----  JUNIDB                              External             
                   |----  ABRUEV                              External             
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  MDARD                               External             
                   |----  ALEFIL                                                   
   
 
3 GETLEP
         SUBROUTINE GETLEP(IRUN,IFOUN,IFILL,NV,ELEP,XYZ,DXYZ)
  ------------------------------------------------------------------------------
    CKEY ALEF LFIL
  ------------------------------------------------------------------------------
   Gets the lep energy and beam position for run irun
    Author  J.Boucrot  15-June-1990
    Completely rewritten 22-Sep-1998 to give always the best possible
               available LEP energy and beam position for LEP1 and LEP2
    argument :
    IRUN = run number to be searched in above bank
    arguments :
     IFOUN = 0 if no information found for run IRUN
           = 1 if information found in 'LFIL' bank of ADBSCONS DAF
               (from the so-called "Toby Burnett" method
                for old LEP1 processings)
           = 2 if information found in the RUN Header banks RLEP,JSUM
               ( WARNING ! in this case , the quantities described
                 below have PROVISIONAL  values ! )
           = 3 all other cases
     ELEP  = LEP center-of-mass energy for this run , in GEV/C2
    following arguments are defined only if IFOUN.GT.0  :
     IFILL = LEP fill number  for this run :
       NV  = number of hadronic events used to compute XYZ , DXYZ
             for the LFIL bank (meaningful only for old LEP1
             processings, kept for backward-compatibility)
      XYZ  = X,Y,Z values of beam crossing for this run , in cm
     DXYZ  = Errors on XYZ , in cm
          ENTRY GETOFS :
          SUBROUTINE GETOFS(IRUN,OFSET)
    Must be called after GETLEP - meaningful only if IFLAG = 1
    Kept only for backward-compatibility for old LEP1 processings
    Output argument :
      OFSET = Average D0 for this run ( Last word of bank LFIL )
              used for systematic effects on vertex position
              with the "Toby Burnett" method for old LEP1 processings
            = 0. in all other cases
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFITQL                                                                          
   YTOIRU                                                                          
        |---- GETLEP                                                               
                   |----  ALEFIL                                                   
                   |----  IABS                                External             
                   |----  NAMIND                              External             
                   |----  GETLE1                                                   
                   |----  GETLE2                                                   
                   |----  FLOAT                               External             
                   |----  ABRUEV                              External             
                   |----  GETBP                                                    
                   |----  UCOPY                               External             
                   |----  GETXYB                                                   
                   |----  NLINK                               External             
                   |----  REAL                                External             
                   |----  SQRT                                External             
                   |----  MAX                                 External             
   
 
3 GETLUM
         SUBROUTINE GETLUM(IRUN,IFOUN,IRQFL,NZ,NB,RLUMI,BK,BT)
  ------------------------------------------------------------------------------
    CKEY ALEF LFIL LUMINOSITY
  ------------------------------------------------------------------------------
   Gets the luminosity and # of z0s and bhabhas for a run
    Author  J.Boucrot  15-June-1990
    Modified 28-Sep-1992 for runs with SICAL
    Modified 19-May-1993 to get informations from Sical bank 'SLUM'
    Modified 26-Aug-1997 to get lumi from 'LUMI' if it's 0. in 'RLUM'
      : IRUN    / INTE = run number
     : IFOUN   / INTE = return code
                              0   no information for run IRUN
                              1   information from 'RLUM' bank
                              2   information from the RUN Header banks
                                  JSUM and LUMI  ( LCAL)
                              3   information from the RUN Header banks
                                  JSUM and SLUM  ( Sical )
              The following arguments are defined only if IFOUN.GT.0  :
             NZ      / INTE = number of Z0 --> Hadrons
             NB      / INTE = number of Bhabhas
             RLUMI   / REAL = Best estimate of Luminosity , in nb**-1
               The following arguments are defined only if IFOUN=1
             IRQFL   / INTE = Run_Quality flag for this run
                       Bit 0 set = 'PERF'    1 = 'MAYB'     2 = 'DUCK'
             BK      / REAL = Number of background Bhabha events
             BT      / REAL = Bhabha trigger efficiency
   
    get the RLUM data base bank which contains the run IRUN
    if the bank does not exist get the information from the SOR banks
    JSUM and LUMI.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GETLUM                                                               
                   |----  ALGTRO                              External             
                   |----  IABS                                External             
                   |----  NLINK                               External             
   
 
3 GETS4B
         SUBROUTINE GETS4B(IRUN,IFOUN,ILUQ,NBUN,NBHA,XLUSI,XBASI)
  ------------------------------------------------------------------------------
    CKEY ALEF LFIL
  ------------------------------------------------------------------------------
   Gets the sical luminosity per bunch for multibunch run irun
    Author  J.Boucrot  10-Oct-1995
    argument :
    IRUN = run number
    arguments :
     IFOUN = 0 if no information found for run IRUN
           = 1 if information found in bank 'RS4B' of ADBSCONS DAF
           = 2 if information found in run header bank 'SLUM'
    following output arguments are defined ONLY if IFOUN.GT.0  :
     ILUQ     = Luminosity determination status :
                    1 = provisional
                    2 = final
     NBUN     = Number of bunches for this run ( must be 2 , 3 or 4 )
     NBHA (I) = Number of SICAL Bhabha events for bunch I ( I=1,.NBUN )
    XLUSI (I) = Best lumi estimate for run IRUN from SICAL , in nb**-1
                for bunch I ( I=1,..NBUN )
    XBASI (I) = Background estimate for bunch I ( I=1,..NBUN )
     NBHA,XLUSI,XBASI must be dimensioned to 4 in the calling routine
   
    the SICAL LUMI bunch informations from the 'RS4B' or 'SLUM' bank.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GETS4B                                                               
                   |----  ALGTRO                              External             
                   |----  IABS                                External             
                   |----  NLINK                               External             
   
 
3 GETSLU
         SUBROUTINE GETSLU(IRUN,IFOUN,ILUQR,NBHA,XLUSI,BAK,EWCOR)
  ------------------------------------------------------------------------------
    CKEY ALEF LFIL
  ------------------------------------------------------------------------------
   Gets the sical luminosity for run irun
    Author  J.Boucrot  16-Mar-1993
    Modified 19-May-1993 to get informations from Sical bank 'SLUM'
    argument :
    IRUN = run number to be searched in bank 'RSLU'
    arguments :
     IFOUN = 0 if no information found for run IRUN
           = 1 if information found in bank 'RSLU' of ADBSCONS DAF
           = 2 if information found in run header bank 'SLUM'
    following output arguments are defined ONLY if IFOUN.GT.0  :
     ILUQR = SICAL Flag  for Luminosity  :
             0 = unknown     1 = provisional value   2 = definitive value
      NBHA = Number of SICAL Bhabha events
    XLUSI  = Best estimate of lumi from SICAL , in nb**-1
    following quantities are defined ONLY if IFOUN = 1
      BAK  = background Bhabha events
    EWCOR  = Electroweak correction
   
    the SICAL LUMI informations from the 'RSLU' bank.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GETSLU                                                               
                   |----  ALGTRO                              External             
                   |----  IABS                                External             
                   |----  NLINK                               External             
   
 
3 GETXYB
         SUBROUTINE GETXYB(IRUN,IFOUN,IFL,XYZ,DXYZ,OFS,VLUM)
  ------------------------------------------------------------------------------
    CKEY ALEF LFIL BEAM
  ------------------------------------------------------------------------------
   Gets the beam position per run from bank 'rxyz'
   - J.Boucrot 15-Dec-1991
   - Input     : IRUN     / INTE   = run number
   - Output arguments :
           IFOUN    / INTE   = 0 if no information found for run IRUN
                             = 1 if information found
   All arguments described below are defined only if IFOUN = 1 :
           IFL      / INTE   = flag to tell how the beampos was obtained
                             = -1 no beam position ( not enough events )
                             =  0 position obtained with ITC/TPC only
                             =  1 position obtained using the VDET
           XYZ(3)   / REAL   = mean beam position :  X,Y,Z coordinates
           DXYZ(3)  / REAL   = errors on X,Y,Z
           OFS      / REAL   = offset ( mean D0 )
           VLUM     / REAL   = VDET lumi for this run
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GETLEP                                                                          
   GETOFS                                                                          
        |---- GETXYB                                                               
                   |----  ALGTRO                              External             
                   |----  IABS                                External             
                   |----  UCOPY                               External             
   
 
3 GTT0GL
         FUNCTION GTT0GL (IRUN)
  ------------------------------------------------------------------------------
    CKEY ALEF GET T0GL
  ------------------------------------------------------------------------------
   Get t0 depending on run number and number of bunches
   - F.Ranjard - 920924
                 940323 : T0GL depends on setup code
   - D.Casper  - 970325 : Support for new alignment (TNFV)
                 970423 : Check alignment type before
                          applying t0 correction
                 970512 : Correct bug in the above mod; TNLO
                          has not been read in yet the first
                          time this routine is called, and
                          checking for it puts the wrong
                          value in JCON!  Instead, check for
                          a valid TNFV entry and absence of
                          user card (TOAL) to disable it.
   - Input   : IRUN    / I = run number
   - Output  : GTT0GL  / R = T0 or 0. in case of error
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FRFTDP                                                                          
   TCRZVD                                                                          
        |---- GTT0GL                                                               
                   |----  NAMIND                              External             
                   |----  GTSTUP                              External             
                   |----  AGETDB                              External             
                   |----  TNFVRU                                                   
                   |----  ABS                                 External             
   
 
3 LFILRU
         INTEGER FUNCTION LFILRU (IRUN,IROW)
  ------------------------------------------------------------------------------
    CKEY ALEF GET BANK DA
  ------------------------------------------------------------------------------
   Get a row of a bank
   - F.Ranjard - 900517
   - Input:
               IRUN   / INTE  = run number
   - Output:   LFILRU / INTE  = LFIL BOS index
                                =0 means not enough space
                                <0 means a garbage collection occurded
               IROW   / INTE  = row # for the known IRUN
                                0 means IRUN not found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALEFIL                                                                          
        |---- LFILRU                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  GTDBAS                              External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
                   |----  BGARB                               External             
                   |----  LOCTAB                              External             
   
 
3 RQBUNC
         SUBROUTINE RQBUNC(IBUN,INBU,NWAG,IQUA)
  ------------------------------------------------------------------------------
    CKEY ALEF BUNCH
  ------------------------------------------------------------------------------
   - P.Comas, 28-APR-95
   Read the bunch number to be used for reconstruction from eveh.
    The routine provides:
         1 The wagon identification
         2 The interbunch distance from LZZT
         3 The number of wagons per train from LZZT
         4 The quality of the wagon identification
   
     Input  : EVEH, LZZT banks
     Output : IBUN
              Wagon identification in the bunch
                 0         no measure
                 1,2,3,4
   
              INBU
              Interbunch distance in ns
   
              NWAG
              Number of wagons per train
   
              IQUA
              Quality flag of the wagon identification
                 0         no information, bunch number is zero
                 1         ambiguous, inconsistent
                 2         probable
                 3         sure, no discussion
   
    Modified: P.Comas, 24-MAY-96
               Set NWAG and INBU for '96.
               Avoid trying to get the info from the
                unreliable LZZT as the bunch train scheme
                doesn't change wihtin the year.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TIZERN                                                                          
   TIZERO                                                                          
   ICRCOO                                                                          
        |---- RQBUNC                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  IBITS                               External             
   
 
3 XFMCBP
         LOGICAL FUNCTION XFMCBP (NSETMX, IGNSET, NSET, JSET, SETWT,
  ------------------------------------------------------------------------------
    CKEY ALEF BEAMSPOT
  ------------------------------------------------------------------------------
        >                                  XMC_PAR, VTX_RES, VTX_SIZ)
   Handle new mc setup for chunk-by-chunk beam position and size
   - Steve Wasserbaech, 28 August 1995
     Original version (GET_BP): Dave Brown  9-1-92
     Adapted for the ALEPHLIB : J. Boucrot 23-9-98
     Modified: F.Ranjard, M.Cattaneo 19991206 y2k fixes
   - Input:
     NSETMX        / I  Dimension of arrays JSET, SETWT, XMC_PAR,
                         VTX_RES, and VTX_SIZ in calling program
     Output:
     XFMCBP        / L  =.TRUE. if successful, =.FALSE. if error
     IGNSET        / L  =.TRUE. if we are ignoring the MC geometry setup
                         because BPER/BPWT/BSIZ card(s) were given
     NSET          / I  Number of setups specified on BPER card
     JSET(*)       / I  Row numbers in ALRP of selected setups
     SETWT(*)      / R  Integrated weights for generating setups;
                         the fraction of events in which setup JSET(I)
                         is generated is SETWT(I) - SETWT(I-1).
     XMC_PAR(5,*)  / R  Set of parameters for generating sigma_x.
                         The distribution of sigma_x is parametrized
                         as the sum of two Gaussians.  First index =
                          1 for fraction of total area in first Gaussian,
                          2 for mean of first Gaussian (cm),
                          3 for sigma of first Gaussian (cm),
                          4 for mean of second Gaussian (cm),
                          5 for sigma of second Gaussian (cm);
                         the second index runs from 1 to NSET.
     VTX_RES(3,*)  / R  Beam position uncertainty (cm).  First index =
                         1,2,3 for x,y,z; second index runs from 1 to
                         NSET.  Note: VTX_RES(3,I) = 1 always.
     VTX_SIZ(3,*)  / R  Average rms size of luminous region (cm).
                         First index = 1,2,3 for x,y,z; second index
                         runs from 1 to NSET.
   
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              XFMCBP                                                               
                   |----  MIN0                                External             
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  FLOAT                               External             
                   |----  GTSTUP                              External             
   

2 COMP

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various subprograms related to computing of tracks, angles...
     ! ALEPHLIB 31.3
        AUHCYL,PPCORR,THLCIR,TNRHPA,UFITZS,UFMS,UHELIX2 : 
         Double precision fixes for Linux                           (D.Smith)
    
     * correction file 1 to ALEPHLIB 31.2
        PPCORR : Now usable also for MonteCarlo. Added some output on first call,
                 database accessed only once per run.               (G.Dissertori)
    
     * correction file 1 to ALEPHLIB 30.8
        PPCORR : Use .NEQV. instead of .NE. to compare two logicals (A.Waanenen)
    
     * correction file 4 to ALEPHLIB 30.7
        THLCIR : Use DOUBLE PRECISION for R, to avoid numerical problems
                                                            (M.Cattaneo)
    
     * correction file 1 to ALEPHLIB 30.7
        PPCORR : New - Correct particle momenta for effects of residual 
                 distortions in the central tracking detector.
                 This is the so called "sagitta correction".    (I.Tomalin)
    
     ! ALEPHLIB 30.6
        UFITQL,UFMS,UMSERR,YV0ONE : fix variable type inconsistencies
            in function calls, for Linux                            (A.Waananen)
     
     ! ALEPHLIB 30.5
        YHELIX : New - Determine the turning angle and momentum of an 
                       FRFT track at a point                           (D.Casper)
        YSENSE : New - Determine the sense of direction of a track     (D.Casper)
    
     ! ALEPHLIB 30.4 correction file 3
        UFITQL : Put cut on NTPC hits, COS(theta) earlier in the routine 
                                                             (M.Cattaneo)
    
     ! ALEPHLIB 30.2
       new KALMAN filter (D.Casper) is introduced in /kalm.
       old one is removed from /comp.
        UFMATX -  new routine : matrix operations in double precision
                  res, a, b, c are mdim x mdim double precision matrices, 
                  v is mdim vector, s is a double precision scalar
                  UFMMUL (RES,A,B,MDIM) res = a * b
                  UFMMLT (RES,A,B,MDIM) res = a * b^T
                  UFMSCL (RES,A,V,MDIM) res(i,j) = a(i,j) / (v(i)*v(j))
                  UFMADD (A,S,B,RES)    res = a + s * b
                  UFMULT (A,B,C,RES)    res = a * b * c^T
       
        UHELIX2 - new routine: UHELIX2 (R,VV0, VV0COV, POS, POSCOV, IRET)
                  Given helix and covariance, compute pos and error at radius.
    
        UFTKAL UFTTRA UFVDMS - are removed, replaced by /kalm/.
    
        UFTTRK - is removed, obsolete routine replaced by UFTTRA.
    
     ! ALEPHLIB 21.5
     - AUHCYL Double precision on all platforms (M.Cattaneo)
    
     ! ALEPHLIB 21.3
     - UFVDMS fix multiple variable definitions
    
     ! ALEPHLIB 20.9
     - UFMS, UFTKAL, UFVDMS
         get multiple scattering constants from setup dependent bank
         VRLD instead of from FKAL bank
     - UFTTRA
         add a call to vdmsup for consistency
    
     ! ALEPHLIB 20.8
       UFTTRK, UFTTRA - remove a bug - name-indices were checked instead of
                        indices (D.Casper).
    
     ! ALEPHLIB 15.7
       UFTKAL - declare ZZ0 double precision, mandatory on AXP (W.Manner)
    
     ! ALEPHLIB 15.5
       TNRHPA - add a protection to avoid division by 0 when a PT=0.
                charged track is processed.     (A.Venturi)
        UFMS, UFTKAL - protect against unphysical tracks with d0*w > 1
                       (G.Taylor)
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     AUARCM     Compute shortest (signed) phi distance around an arc.
     AUHCYL     Computes intersection of helix with a cylinder with axis along the
     AUHDIS     Dist. between 2 points along a singly charged particle's helical trajectory
     AUHLEN     Give new position and direction cosines of helical
     AULCYL     Computes intersection of a line with a cylinder with axis along the
     AULLEN     Give new position and direction cosines of a straight
     AUTRPL     Compute intersection of track with plane parallel to the z-axis.
     HELINS     Calculates intersection of a helix with a set of radii
     PPCORR     Correct particle momenta for effects of residual distortions in
     SMAV       R(n) = a(n,n)*v(n)
     SMINV      Obtain solution of a system of linear equations v *  x  =  b  with
     SMNORM     Normalise symmetric n*n matrix so that diagonal elements=1
     THLCIR     Find intersection of helix with circle of radius rad centered
     TK2IVM     Invariant mass squared of two tracks, with errors
     TNRHPA     Return helix parameters of a track element
     UFIELD     Compute magnetic field at position pos =(x,y,z) in region irgn
     UFITQL     Decide on track quality
     UFITZS     Fitting routine for scattered helices in aleph
     UFMATX     Res = a * b, where res, a, b, are 5x5 double precision matrices
     UFMS       Calculates the contribution to the covariance matrix of a track
     UFTMSO     For frft (2) track itrac this routine will calculate the
     UHELIX     Gives x,y,z and px,py,pz for a given point in a track
     UHELIX2    Given helix and covariance, compute pos and error at radius.
     UINCOV     Increase the errors on the covariance matrix due to m.s
     UMSERR     Add multiple scattering contribution to track error matrix
     UNEWDP     Computes the value of d0 and phi0 of the helix parametres,
     UNEWZP     Computes the value of  the helix parametres,
     UTKXNG     Routine to compute track crossings of the itc sense wire planes
     UTRID      Householder reduction of a real, symmetric matrix
     UTSWCO     Get sense wire coord (+sag) for fitting
     UVTRID     Eigenvalues and eigenvectors of real symmetric matrix
     YFIX       Fix matrix convention in tgft
     YHELIX     Determine the turning angle and momentum of an frft track at a point
     YSENSE     Determine the sense of direction of a track
     YV0ONE     Find the point of helix close to the vertex and the inverse e.m.

3 AUARCM
         FUNCTION AUARCM (A)
  ------------------------------------------------------------------------------
    CKEY COMPUTE
  ------------------------------------------------------------------------------
   
   AUARCM  1.00  850101                             R.Beuselinck
   
   
   Compute shortest (signed) phi distance around an arc.
   
     Input:
             - A   /R  : Difference of two phi values, (A2 - A1).
                         A1, A2 must both be in the range 0 to 2pi.
     Result:
             - AUARCM /R  : Shortest phi displacement (with sign) to
                            go from A1 to A2 around an arc.
   
     This routine is a copy of the TASSO routine ARCMIN.
     This function calculates the minimum distance apart in phi with
     the appropriate sign of two phi values whose difference is the
     calling argument of this routine.  These two values must both be
     in the range 0 to 2pi.
     E.G. AUARCM(B-A) gives the shortest arc round a circle from A to B.
     This routine takes care of the 0-2pi wrap-around problem.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IMICCO                                                                          
   IUPCCO                                                                          
        |---- AUARCM                                                               
                   |----  ABS                                 External             
                   |----  AMOD                                External             
   
 
3 AUHCYL
         SUBROUTINE AUHCYL( RAD, ZMAX, FIELD,Q, PAR, PAREX, ICODE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M. MERMIKIDES   171186
     Modified  9/05/87 Generalised for -ve sign mag field
     Modified 22/07/96 Double precision on all platforms (M.Cattaneo)
     Modified 25/10/99 Double precision fixes for Linux  (D.Smith)
   Computes intersection of helix with a cylinder with axis along the
    z-axis. We keep the first intersection with either the barrel or
    endplane.
    NB. The starting point of the helix should be within the cylinder
        defined by RAD and ZMAX.
    Input:
          RAD   Radius of cylinder       (cm)
          ZMAX  Half-length of cylinder. (cm)
          FIELD Magnetic field in kG (assumed uniform, solenoidal)
          Q     Charge of track (+- 1.)
          PAR(1) = x
             (2) = y      Coordinates of start point on the track (cm)
             (3) = z
             (4) = dx/ds
             (5) = dy/ds  Direction cosines at start point
             (6) = dz/ds
             (7) = |p|    Abs. momentum of track (GeV/c)
    Output:
          PAREX(1) = x
               (2) = y      Coordinates at point of intersection
               (3) = z      with cylinder.
               (4) = dxds
               (5) = dxds   Dir. cosines at intersection point
               (6) = dzds
          ICODE  = Return code (1 = intersection in barrel part
                                2     "          "   end cap
                                0     "          not possible
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FMHITB                                                                          
   UFECAL                                                                          
        |---- AUHCYL                                                               
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  DATAN2                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ASIN                                External             
                   |----  SIGN                                External             
   
 
3 AUHDIS
         SUBROUTINE AUHDIS(FIELD,SLONG,VI,VO)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    Hilgart 10/12/86
    routine calculates the
   Dist. between 2 points along a singly charged particle's helical trajectory
        Input:  FIELD   in kG
                VI(7)    xi, yi, zi, dc1, dc2, dc3,ptot
                VO(3)    x0, y0
        Output: SLONG, in cm
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              AUHDIS                                                               
                   |----  VDIST                               External             
                   |----  MAX                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  ASIN                                External             
                   |----  MIN                                 External             
   
 
3 AUHLEN
         SUBROUTINE AUHLEN(FIELD,CHAR,SLONG,V,VOUT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    Hilgart 10/12/86
   Give new position and direction cosines of helical
   , given the length of track and initial position and direction
   
        Input:  FIELD     in kG
                CHAR      particle charge
                V(1-7)    x0, y0, z0, dc1, dc2, dc3,ptot
                SLONG     path length
        OUTPUT: VOUT(1-6) XOUT,YOUT,ZOUT,DC1OUT,DC2OUT,DC3OUT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              AUHLEN                                                               
                   |----  SIGN                                External             
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 AULCYL
         SUBROUTINE AULCYL( RAD, ZMAX, PAR, PAREX, ICODE)
  ------------------------------------------------------------------------------
    CKEY COMPUTE TRACK CYLINDER   /USER
  ------------------------------------------------------------------------------
    M. MERMIKIDES   171186
    Modified by B. Bloch-Devaux march 1988 to make it work also if
    initial start point is outside the cylinder
    Modified by B.Bloch-Devaux June 1989 : fix bug when track entering
    from outside by endplate.
   Computes intersection of a line with a cylinder with axis along the
    z-axis.
    Input:
          RAD   Radius of cylinder       (cm)
          ZMAX  Half-length of cylinder. (cm)
          PAR(1) = x
             (2) = y      Coordinates of start point on the line (cm)
             (3) = z
             (4) = dx/ds
             (5) = dy/ds  Direction cosines at start point
             (6) = dz/ds
    Output:
          PAREX(1) = x
               (2) = y      Coordinates at point of intersection
               (3) = z      with cylinder.
               (4) = dx/ds
               (5) = dy/ds  Direction cosines at end point
               (6) = dz/ds
          ICODE  = Return code (1 = intersection in barrel part
                                2     "          "   end cap
                                0     "          not possible
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FMHITB                                                                          
        |---- AULCYL                                                               
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  UCOPY                               External             
   
 
3 AULLEN
         SUBROUTINE AULLEN(SLONG,V,VOUT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    Hilgart 10/12/86
   Give new position and direction cosines of a straight
   , given the length of track and initial position and direction
   
        INPUT:  V(1-6)    x0, y0, z0, dc1, dc2, dc3,
                 SLONG
        OUTPUT: VOUT(1-6) XOUT,YOUT,ZOUT,DC1OUT,DC2OUT,DC3OUT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              AULLEN.                                                              
   
 
3 AUTRPL
         SUBROUTINE AUTRPL(XPL,PHI,HWID,FIELD,Q,PAR,PAREX,ICODE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M. MERMIKIDES 10/12/86
   Compute intersection of track with plane parallel to the z-axis.
    has width +-HWID and infinite extent in Z
     Input:  XPL   =  Normal distance of plane from origin
             PHI   =  Orientation of normal to plane wrt x-axis.
             HWID  =  Half width of plane (along local y)
             FIELD =  Magnetic field
             Q     =  Sign of curvature (+ve = clockwise)
             PAR(1)=  x
                 2 =  y    Coordinates of starting point on helix
                 3 =  z
                 4 =  dx/ds
                 5 =  dy/ds  Direction cosines at point (x,y,z)
                 6 =  dx/ds
                 7 =  Abs. value of momentum
     Output:
           PAREX(1)=  x
                 2 =  y    Coordinates at intersection with plane
                 3 =  z
                 4 =  dx/ds
                 5 =  dy/ds  Direction cosines at point (x,y,z)
                 6 =  dx/ds
             ICODE = 0  If intersection is not possible
                   = 1  One intersection found over width of plane
                   = 2  Two intersections found over width of plane
                        (we keep the one closest to starting point)
                   = 3  If intersection is outside the width
                        (Only for neutral track case for now)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              AUTRPL                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  NINT                                External             
                   |----  ABS                                 External             
                   |----  SQRT                                External             
                   |----  ASIN                                External             
   
 
3 HELINS
         SUBROUTINE HELINS(NR1,NR2,R,V,PHI,Z)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculates intersection of a helix with a set of radii
      AUTHOR: MARTIN POPPE
      CHANGE: MARTIN POPPE   22.JULY 1987
      INPUT: NR1, NR2    = RANGE OF INDICES IN R,V,PHI,Z
             R(NR1-NR2)  = RADII
             V(1-5)      = HELIX PARAMETERS (AS IN TGFT)
     OUTPUT: PHI(NR1-NR2)= PHI VALUES PREDICTED
             Z(NR1-NR2)  = Z   VALUES PREDICTED
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HELINS                                                               
                   |----  ABS                                 External             
                   |----  ASIN                                External             
   
 
3 PPCORR
         FUNCTION PPCORR(IJUL,NVDET,ERCORR,IFAIL)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Correct particle momenta for effects of residual distortions in
    the central tracking detector.
      This is the so called "sagitta correction".
    It depends upon cos(theta) and the year of data taking.
   
       Author   :  I.R. Tomalin
                   Based on subroutine QFBDEV written by I. ten Have.
       Date     :  10-3-1994
       Modified :  I.Tomalin 30/1/97.
                   Add LEP2 corrections and prepare move to ALEPHLIB.
       Modified :  A.Waananen 28/1/98
                   Use .NEQV. instead of .NE. for comparison of two logicals
       Modified :  G.Dissertori 8/10/99
                   Added some output to inform the user about PCOR usage
                   and made usage with MC possible.
                   Now it is also usable with MC. Finally, database
                   is only read for every new run.
   
    Input Arguments:
       IJUL    (INTE) : JULIA track number.
       NVDET   (INTE) : If your analysis only uses tracks with at
                          least 1 VDET hit, set NVDET=1; otherwise =0.
       Also uses EVEH and FRFT banks, plus PFIX and PNFX database banks.
   
    Output Arguments:
       PPCORR  (REAL) : Scale factor applied/to be applied to momentum.
       ERCORR  (REAL) : Statistical error on this factor.
       IFAIL   (INTE) : = 0 if all OK.
                        < 0 if no corrections available for this run.
                        > 0 if error occurred.
   
    Motivation:
      Every year, even after the detector alignment is finished and
    corrections have been made for field distortions etc., it is found
    that Ebeam/P in Z0 -> mu+mu- events is not precisely 1, presumably
    because of residual distortions.
      (Typically, in the region |cos(theta)| > 0.9, Ebeam/p is about 0.94
    for +ve tracks and 1.06 for -ve tracks. Elsewhere, Ebeam/p is usually
    consistent with 1 to within a percent or so. The effect is not quite
    forward-backward symmetric).
      The relative bias in momentum is proportional to P, so most people
    analysing hadronic events can ignore it. Exceptions include analyses
    using the ECAL electron identifiers in the region |cos(theta)| > 0.9,
    or analyses which are very sensitive to systematic biases in the
    momenta (e.g. jet charge, tau polarization).
      This routine provides a correction for the momenta based upon
    Ebeam/P measurements in Z0 -> mu+mu- events. It assumes that the
    corrections for -ve and +ve particles are equal in size, but of
    opposite sign. This is observed to be true, apart from a constant
    offset, Ebeam/p = 1.002, which is also present in the MC and so not
    corrected for.
      In principle, the correction depends upon your track selection
    cuts, but providing that the corrections have a small effect on your
    analysis, you can ignore this. Argument NVDET does correct for this
    to first approximation however.
   
    If corrections are not up to date, please contact the tracking group.
         SAVE
         LOGICAL FIRST,FIRSTREAD,FIRSTMC,NEWJUL,LASJUL
         INTEGER LRUN,IVAL1L,IVAL2L
         DATA FIRST/.TRUE./
         DATA FIRSTREAD/.TRUE./
         DATA FIRSTMC/.TRUE./
         DATA LASJUL/.FALSE./
         DATA LRUN/0/
         DATA IVAL1L/0/
         DATA IVAL2L/0/
         PARAMETER(NBIN=20,BSIZE=0.1)
         DIMENSION PCORR(NBIN,0:1),ECORR(NBIN,0:1)
         INTEGER AGETDB
         CHARACTER*4 CHAINT
         EXTERNAL AGETDB,CHAINT
   
   
   
   
   
   
   
   
         PPCORR = 1.0
         ERCORR = 0.0
         IFAIL  = 0
   
   
         IF (FIRST) THEN
           FIRST = .FALSE.
           NFRFT = NAMIND('FRFT')
           NRHAH = NAMIND('RHAH')
           NPFIX = NAMIND('PFIX')
           NPNFX = NAMIND('PNFX')
           NASIM = NAMIND('ASIM')
           NRUNH = NAMIND('RUNH')
         END IF
         KFRFT = IW(NFRFT)
         KRHAH = IW(NRHAH)
         IF (KFRFT.EQ.0.OR.KRHAH.EQ.0) THEN
           IFAIL = 1
           GOTO 999
         END IF
   
   -- get the Run number
         CALL ABRUEV(IRUN,IEVT)
         KRUNDA = IRUN
   
   -- do the following only for a new run
         IF (KRUNDA.NE.LRUN) THEN
   
   -- find out if it is DATA or MC from Run Number
   -- and get run period if MC
           IPERIOD = 0
           IF (KRUNDA.LT.2001) THEN
   -- got a MC
             JASIM = IW(NASIM)
             IF (JASIM.GT.0) THEN
               IPERIOD = ITABL(JASIM,1,JASIYM)
             ELSE
               JRUNH = IW(NRUNH)
               IF (JRUNH.GT.0) THEN
                 IPERIOD = IW(JRUNH+JRUNSD)/100
               ELSE
   -- do not apply corrections in this case
                 IFAIL = -3
                 RETURN
               END IF
             END IF
   -- get the first run of that period, check for TPC
             NPERIOD = ADBRPN('TP',IROW,IPERIOD,KRUNMC,ISETUP)
           END IF
   
           IF (KRUNDA.LT.2001) THEN
             KRUN = KRUNMC
           ELSE
             KRUN = KRUNDA
           END IF
   
    if this is new or old version of JULIA.
           JULVER = 0
           DO 10 IROW = 1,LROWS(KRHAH)
             IF (CHAINT(ITABL(KRHAH,IROW,JRHAPN)).EQ.'JULI')
        +             JULVER = ITABL(KRHAH,IROW,JRHAPV)
    10     CONTINUE
           IF (JULVER.GT.0) THEN
             NEWJUL = JULVER.GE.300
           ELSE
             IFAIL = 2
             GOTO 999
           END IF
   Access database bank containing corrections.
    correspond to mean value of 0.5*(1/p(+) - 1/p(-)) of dimuons,
    in twenty bins of cos(theta) from -1 to +1.
           IF (NEWJUL) THEN
             ISTAT = AGETDB('PNFX',KRUN)
             KPFIX = IW(NPNFX)
           ELSE
             ISTAT = AGETDB('PFIX',KRUN)
             KPFIX = IW(NPFIX)
           END IF
           IF (ISTAT.EQ.0.OR.KPFIX.EQ.0) THEN
    correction bank found for this run.
             IFAIL = -1
             GOTO 999
           ELSE IF ((ISTAT.LT.0).OR.(NEWJUL.NEQV.LASJUL)) THEN
             LASJUL = NEWJUL
    correction bank loaded. Unpack it into arrays.
             DO 20 IVDOPT = 0,1
               IROW = IVDOPT + 1
               JPFIX = KROW(KPFIX,IROW)
               CALL UCOPY(RW(JPFIX + JPFICO),PCORR(1,IVDOPT),NBIN)
               CALL UCOPY(RW(JPFIX + JPFIER),ECORR(1,IVDOPT),NBIN)
    20       CONTINUE
    also run range for which it is valid.
             IVAL1 = ITABL(KPFIX,1,JPFIVR)
             IVAL2 = ITABL(KPFIX,1,JPFIVR + 1)
           ENDIF
    that corrections are valid for this run.
           IF (KRUN.LT.IVAL1.OR.KRUN.GT.IVAL2) THEN
             IFAIL = -2
             GOTO 999
           END IF
   
           NVD = MIN(NVDET,1)
   
    magnetic field.
           QMFLD = ALFIEL(DUM)
   
    run dependent stuff is done
           LRUN = KRUNDA
         ENDIF
   
    the user now about the usage of PCOR
    it after first read or when the validity range and thus
    corrections have changed
         IF (FIRSTREAD.OR.IVAL1.NE.IVAL1L.OR.IVAL2.NE.IVAL2L) THEN
           FIRSTREAD = .FALSE.
           IVAL1L = IVAL1
           IVAL2L = IVAL2
           WRITE(IW(6),*)
           WRITE(IW(6),'(A)')' ** PPCORR : using PCOR with parameters: '
           IF (KRUNDA.LT.2001) THEN
             WRITE(IW(6),*)
             WRITE(IW(6),'(A)')'    NOTE : You are running PPCORR on MC!'
             WRITE(IW(6),26)   '    First MC Period found = ',IPERIOD
             WRITE(IW(6),*)
           ENDIF
           WRITE(IW(6),25)   '    Run Validity Range = ',IVAL1,IVAL2
           WRITE(IW(6),26)   '    VDET option        = ',NVD
           WRITE(IW(6),'(A)')'    Correction factors : '
           DO IC=1,INT(NBIN/5)
             WRITE(IW(6),27)(PCORR(ICC,NVD),ICC=(IC-1)*5+1,IC*5)
           ENDDO
           WRITE(IW(6),*)
    25     FORMAT(A,2I10)
    26     FORMAT(A,I4)
    27     FORMAT(4X,5F10.6)
         END IF
    cos(theta), momentum and charge of this track.
         IF (IJUL.LT.1.OR.IJUL.GT.LROWS(KFRFT)) THEN
           WRITE(IW(6),30) IJUL,(LROWS(KFRFT))
      30   FORMAT(' PPCORR FATAL ERROR: Crazy input arguments ',2I8)
           STOP
         END IF
         TANL = RTABL(KFRFT,IJUL,JFRFTL)
         CTHETA = TANL/SQRT(1 + TANL**2)
         RINV = RTABL(KFRFT,IJUL,JFRFIR)
         QCH  = SIGN(1.0,-RINV*QMFLD)
         PT   = 1.0E-5*CLGHT*QMFLD/MAX(ABS(RINV),1.0E-10)
         PMOM = PT*SQRT(1.0 + TANL**2)
    out which cos(theta) bin this track lies in.
         IBIN = 1 + INT((1.0 + CTHETA)/BSIZE)
         IBIN = MIN(IBIN,NBIN)
   
    find scale factor for momentum.
         IF (QCH.GT.0.0) THEN
           PPCORR = 1.0 + PCORR(IBIN,NVD)*PMOM
         ELSE
           PPCORR = 1.0 - PCORR(IBIN,NVD)*PMOM
         END IF
         ERCORR = ECORR(IBIN,NVD)*PMOM
     999 CONTINUE
         END
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PPCORR                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  ADBRPN                              External             
                   |----  AGETDB                              External             
                   |----  UCOPY                               External             
                   |----  MIN                                 External             
                   |----  ALFIEL                                                   
                   |----  INT                                 External             
                   |----  SQRT                                External             
                   |----  SIGN                                External             
                   |----  MAX                                 External             
                   |----  ABS                                 External             
   
 
3 SMAV
         SUBROUTINE SMAV(R,A,V,N)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   R(n) = a(n,n)*v(n)
       AUTHOR: MARTIN POPPE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFITZS                                                                          
        |---- SMAV  .                                                              
   
 
3 SMINV
         SUBROUTINE SMINV(V,B,N,M,NRANK)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
       AUTHOR: V.BLOBEL
       SUBROUTINE SMINV
       ----------------
   Obtain solution of a system of linear equations v *  x  =  b  with
       SYMMETRIC MATRIX V AND INVERSE (FOR M =  1)  OR  MATRIX  INVERSION
       ONLY (FOR M = 0)
                     - - - -
          CALL SMINV(V,B,N,M,NRANK)
                     - -     -----
             V = SYMMETRIC N-BY-N MATRIX IN SYMMETRIC STORAGE MODE
                 V(1) = V11, V(2) = V12, V(3) = V22, V(4) = V13, . . .
                 REPLACED BY INVERSE MATRIX
             B = N-VECTOR   (FOR M = 0 USE A DUMMY ARGUMENT)
                 REPLACED BY SOLUTION VECTOR
             M = SEE ABOVE
       METHOD OF SOLUTION IS BY ELIMINATION SELECTING THE  PIVOT  ON  THE
       DIAGONAL EACH STAGE. THE RANK OF THE MATRIX IS RETURNED IN  NRANK.
       FOR NRANK NE N, ALL REMAINING  ROWS  AND  COLS  OF  THE  RESULTING
       MATRIX V AND THE CORRESPONDING ELEMENTS OF  B  ARE  SET  TO  ZERO.
       SMINV USES A WORK ARRAY OF 2*N WORDS IN COMMON/MATCOM/. FOR N> 200
       THE USER HAS TO DEFINE COMMON/MATCOM/ WITH 2*N WORDS.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFITZS                                                                          
   UHELIX                                                                          
   PITMAJ                                                                          
        |---- SMINV                                                                
                   |----  IDR                                 External             
                   |----  ABS                                 External             
   
 
3 SMNORM
         SUBROUTINE SMNORM(V,N)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Normalise symmetric n*n matrix so that diagonal elements=1
       AUTHOR: MARTIN POPPE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SMNORM                                                               
                   |----  SQRT                                External             
   
 
3 THLCIR
         SUBROUTINE THLCIR(HP,RAD,S,PHI,Z,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Find intersection of helix with circle of radius rad centered
    at the origin
   
    Author:   R. Johnson   15-01-89
    Modified: M.Cattaneo   980310 Use DOUBLE PRECISION for R, to avoid
                                  numerical problems
    Modified: D.Smith      991025 Double precision fixes for Linux
   
        Input:
                HP      5 helix parameters
                              1/r,tanl,phi0,d0,z0 (world sign convention)
                RAD     Radius of circle
        Output:
                S       Arc length along helix to 2 intersection points
                        on the first turn of the helix
                PHI     Phi coordinates of the 2 intersection points
                Z       Z coordinates of the 2 intersection points
                IER     IER=0 if everything is OK, =1 if no intersection
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UMSERR                                                                          
   TPDINT                                                                          
   TRHFLG                                                                          
   TCRTOF                                                                          
        |---- THLCIR                                                               
                   |----  SIGN                                External             
                   |----  ABS                                 External             
                   |----  ACOS                                External             
                   |----  SQRT                                External             
                   |----  SIN                                 External             
                   |----  ASIN                                External             
   
 
3 TK2IVM
         SUBROUTINE TK2IVM(HP1,ER1,HP2,ER2,M,MASS2,EM2)
  ------------------------------------------------------------------------------
    CKEY COMPUTE MASS HELIX /USER
  ------------------------------------------------------------------------------
   Invariant mass squared of two tracks, with errors
   
     R. Johnson  26-12-90
   
     Input:   HP1,HP2        /R      Helix parameters of 2 tracks as in FRFT
              ER1,ER2        /R      Error matrices for HP1,2 in symmetric
                                     storage (as in FRFT)
                                    *Note that only the 1st 3 helix
                                     parameters and the first 6 elements of
                                     the error matrices are actually used.
              M(2)           /R      Masses of the two particles
     Output:  MASS2,EM2      /R      Invariant mass squared and error
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TK2IVM                                                               
                   |----  ALFIEL                                                   
                   |----  ABS                                 External             
                   |----  SQRT                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  MAX                                 External             
   
 
3 TNRHPA
         SUBROUTINE TNRHPA(P,X,Q,B,HELIX,XC,S)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Return helix parameters of a track element
   
       Author:   R. Johnson    12-08-87
       Modified: R. Johnson    17-04-91  make all variables double prec
       Modified: D. Smith      25-10-99  Double precision fixes for Linux
   
       Input:
          - P(3)     /R      Particle 3-momentum at point X
          - X(3)     /R      Point at which P is given
          - Q        /R      Charge of the particle
          - B        /R      Magnitude of the magnetic field (in +z direc
       Output:
          - HELIX(*) /R      Helix parameters with respect to the
                             detector origin:
                              r,phi0,d0,z0,tanl
          - XC(2)    /R      Center of the helix circle
          - S        /R      Distance from closest approach to origin to
                             the point X, along the track.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PITMAJ                                                                          
   PTGMAJ                                                                          
        |---- TNRHPA                                                               
                   |----  DATAN                               External             
                   |----  DSQRT                               External             
                   |----  DBLE                                External             
                   |----  DSIGN                               External             
                   |----  DATAN2                              External             
                   |----  ABS                                 External             
   
 
3 UFIELD
         SUBROUTINE UFIELD(POS,IRGN,B)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Compute magnetic field at position pos =(x,y,z) in region irgn
    field components are returned in B(3)
   -  Author : D. DECAMP ,  may 87
         modified may 1988 to introduce better parametrisation
   -  Structure : SUBROUTINE
                  User Entry Name : UFIELD
                  External References: none
                  Comdecks referenced : none
   -  Usage   : CALL UFIELD(POS,IRGN,B)
   -  Input   : POS(1-3)=x , y , z of spatial position
                IRGN   = region # ( in the range 1 to 11) as defined
                         by Jack Steinberger ( see aleph 87-65 )
   -  Output  : B(1-3) = Bx,By,Bz in KGauss at this position
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FMHELX                                                                          
   FMHITB                                                                          
        |---- UFIELD                                                               
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  MAX                                 External             
                   |----  SIGN                                External             
   
 
3 UFITQL
         INTEGER FUNCTION UFITQL(ITK)
  ------------------------------------------------------------------------------
    CKEY COMPUTE TRACK FIT
  ------------------------------------------------------------------------------
   Decide on track quality
      Author   :- D.Cinabro              3-DEC-1990
      Modified :- D.Cinabro             21-MAR-1991
                Get beam energy and positon with GETLEP and
                include 3 sigma error on momentum.
      Modified :- M.Cattaneo            16-JUL-1997
                Put cut on NTPC hits, COS(theta) earlier in the routine
   
   
      Inputs: ITK /I Track number in the FRFT bank
           -  FRFT,FRTL,YV0V,EVEH
   
      Outputs: Track quality flag
           -   1 = Good track from the origen
               2 = Good track but momentum > Ebeam
               3 = Good track but from a V0
               4 = Bad track
               Anything else is an error.
   
      Libraries required:
   
      Description
      ===========
      Decide on track quality.
      Good tracks must pass a cut on NTPC hits, COS(theta)
      Those in category 1 must pass D0 and Z0 but not in category 2
      Those in category 2 pass D0 and Z0 but have P > Ebeam
      Those in category 3 fail D0 and/or Z0 but flagged from a V0
      Those in category 4 are in no other category
      Cuts will be stored in the data base, and defaults stored in data
      statements
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFITQL                                                               
                   |----  NAMIND                              External             
                   |----  MDARD                               External             
                   |----  JUNIDB                              External             
                   |----  GETLEP                                                   
                   |----  SIN                                 External             
                   |----  ABS                                 External             
                   |----  ALFIEL                                                   
                   |----  SQRT                                External             
   
 
3 UFITZS
         SUBROUTINE UFITZS(N1,N2,N3,LIST1,LIST2,LIST3,IOPT,NMULT,RMS,XLEN,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        -VV0,EE0,COV,CHI2,IERR,FIELRC,CHIAC)
   Fitting routine for scattered helices in aleph
       AUTHOR:   LL. GARRIDO JANUARY 1989
       Modified: D.Smith     991025  Double precision fixes for Linux
   
            warning: in the calling routine you have to have the
                     following dimensions:
                     VV0(7),EE0(28),COV(28)
                     FIELRC is a input parameter!
               N1   = NUMBER OF POINTS IN TPC TO BE FITTED
               N2   = NUMBER OF POINTS IN IPC TO BE FITTED
               N3   = NUMBER OF POINTS IN VDET TO BE FITTED
               LISTI= LIST OF POINTS TO BE FITTED
               IOPT =
                      1 -> CIRCLE+LINE
                      2 -> 3-DIMENSIONAL ITERATION
                      3 -> M.S. A*(R-R0)/R
                      4 -> M.S. I-DD0(A) I-PH0(A)
                      5 -> M.S. IN X-Y AND R-Z PLANE
               NMULT= FLAG TO INCREASE THE ERROS INSIDE TO TPC
                       DO TO MULTIPLE SATTERING (NMULT=1 YES)
                       (THIS FLAG IS NOT USED FOR IOPT=1)
               RMS=RADIUS OF SCATERING ANGLE
               XLEN=LENGH OF MATERIAL IN RADIATION LENGH UNITS
               FIELRC = MAGNETIC FIELD VALUE
     OUTPUT:   VV0 = 1/R*CHARGE   [1/CM]  NEG. IF CLOCKWISE
                     TAN(LAMBDA)  -=DZ/DS}TAN(ANGLE TO X,Y PLANE)
                     PHI0         -0,2PI} ANGLE TO X-AXIS
                     D0*SIGN      [CM] POS. IF AT THIS PONIT THE
                        ANGULAR MOMENTUM AROUND THE ORIGIN IS POS
                     Z0           [CM]    Z POS AT R=D0
                     ALFA         [RAD]   SCATTERING ANGLE IN X-Y
                     ALFAZ        [RAD]   SCATTERING ANGLE IN R-Z
               EE0 = INVERSE COVAR MATRIX IN TRIANG. FORM
               COV = COVAR MATRIX IN TRIANG. FORM
               CHI2= CHI SQUARED = SUM (DEVIATIONS/ERRORS)**2
               IERR= :
                     =1 IF CIRCLE+LINE FIT FAILS
                     =2 IF COVARIANCE MATRIX CAN NOT BE INVERTED
                     =3 IF COVAR. MAT. NOT DIAGONAL POSITIVE
                     =4 IF THERE IS NO FIELD (FIELRC=0.)
                CHIAC= VECTOR THAT CONTAINS THE CHI**2
                       CONTRIBUTION IF EACH POINT IN THE FIT
       BASED ON   1) SUBROUTINE CIRCLE  (N.CHERNOV, G. OSOSKOV )
       REFERENCE:  COMPUTER PHYSICS COMMUNICATIONS VOL 33,P329
                  2) 3-DIMENSIONAL ITERACTION  (MARTIN POPPE)
       REFERENCE:  ALEPH NOTE 87-102
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFITZS                                                               
                   |----  ASIN                                External             
                   |----  NAMIND                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ABS                                 External             
                   |----  DSQRT                               External             
                   |----  DASIN                               External             
                   |----  ATAN                                External             
                   |----  SQRT                                External             
                   |----  OV                                  External             
                   |----  SMINV                                                    
                   |----  COV                                 External             
                   |----  SMAV                                                     
                   |----  NDIMVV0                             External             
                   |----  DV                                  External             
                   |----  VZERO                               External             
   
 
3 UFMATX
         SUBROUTINE UFMMUL(RES, A, B, MATDIM)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Res = a * b, where res, a, b, are 5x5 double precision matrices
    matdim specifies the dimension of the matrix to multiply.
   
 
3 UFMS
         SUBROUTINE UFMS(RADOUT, RADIN, VV0IN, COV)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Calculates the contribution to the covariance matrix of a track
    coming from multiple scattering from the radius RADOUT to the
    radius RADIN using a realistic approximation for the VDET geometry.
    This routine treats the multiple scattering in exactly the same way
    as in UFTKAL, most of the code is lifted directly
    from that routine.
   
       AUTHOR:   G.Taylor   28/09/92
       Modified: D.Smith    25/10/99  Double precision fixes for Linux
   
       INPUT:  VV0IN  =  input helix parameters
               RADIN  =  inner radius to go to
               RADOUT =  outer radius to start at
       OUTPUT: COV    =  5*5 track covariance matrix at RIN
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTMSO                                                                          
        |---- UFMS                                                                 
                   |----  VZERO                               External             
                   |----  VRLDGT                                                   
                   |----  ABRUEV                              External             
                   |----  ALFIEL                                                   
                   |----  DABS                                External             
                   |----  DSQRT                               External             
                   |----  ABS                                 External             
                   |----  DASIN                               External             
                   |----  DSIN                                External             
                   |----  REAL                                External             
   
 
3 UFTMSO
         SUBROUTINE UFTMSO(ITRAC,COVMAT)
  ------------------------------------------------------------------------------
    CKEY COMPUTE FIT
  ------------------------------------------------------------------------------
   For frft (2) track itrac this routine will calculate the
    contibution to the covariance matrix coming from multiple
    scattering between the last coordinate and the point
    of closest approach to the origin
   
   
       AUTHOR: G.Taylor 29/9/92
   
     INPUT:  ITRAC  = FRFT track number of track being fitted
     OUTPUT: COVMAT(15) = covariance matrix coming from multiple
                   scattering and the origin
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTRFIT                                                                          
        |---- UFTMSO                                                               
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  NLINK                               External             
                   |----  IABS                                External             
                   |----  ABS                                 External             
                   |----  UFMS                                                     
   
 
3 UHELIX
         SUBROUTINE UHELIX(KPOI,IFL,RXY,PSIB,XV,FIELRC,X,COVX,P,COVP,IFAIL)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Gives x,y,z and px,py,pz for a given point in a track
    AUTHOR: LL.GARRIDO     17/3/89
    WARNING: THE CHANGE OF THE PARAMETERS AND ERROS DUE TO
             MULTIPLE SCATTERING EFFECTS ARE NOT TAKEN INTO
             ACCOUNT IN THE PRESENT VERSION. THESE EFFECTS ARE
             SMALL BUT THEY ARE GOING TO BE INTRODUCED IN
             THE NEXT VERSION.
    INPUT:
               KPOI: TRACK NUMBER IN FRFT BANK
               IFL : FLAG THAT DETERMINES HOW THE POINT
                     OF THE HELIX IS DEFINED,
                    IF IFL.EQ.1 THE POINT THAT HAS RXY  IS USED
                    IF IFL.EQ.2 THE POINT THAT HAS PSIB IS USED
                    IF IFL.EQ.3 THEN THE CLOSEST POINT
                       OF THE HELIX (IN X-Y PLANE) TO THE POINT XV IS USE
               RXY : RADIUS OF THE POINT IN THE X-Y PLANE
                     (ONLY POINTS THAT ARE IN THE FIRST ARC OF
                      THE HELIX ARE CONSIDERED)
               PSIB: ANGLE PSI FOR THE HELIX POIN
               XV  : A GIVEN POINT IN THE SPACE (FOR INSTANCE
                     A VERTEX POINT)
               FIELRC: MAGNETIC FIELD
    OUTPUT:
               PSIB: ANGLE PSI FOR THE HELIX POINT
               X   : VECTOR THAT CONTAINS X,Y,Z OF THE POINT
               COVX: COVARIANCE MATRIX OF X,Y,Z IN CM.
               P   : MOMENTUM VECTOR PX,PY,PZ
               COVP: COVARIANCE MATRIX OF THE MOMENTUM IN GEV
               IFAIL: IF NOT 0 ERROR SOMEWHERE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YHELIX                                                                          
        |---- UHELIX                                                               
                   |----  ASIN                                External             
                   |----  NAMIND                              External             
                   |----  SIGN                                External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  ACOS                                External             
                   |----  YV0ONE                                                   
                   |----  SMINV                                                    
   
 
3 UHELIX2
         subroutine uhelix2(r, vv0, vv0Cov, pos, posCov, iret)
  ------------------------------------------------------------------------------
    CKEY USER TRACK HELIX
  ------------------------------------------------------------------------------
   Given helix and covariance, compute pos and error at radius.
   Author:   Paul Rensing 15-08-1995
    D.Smith      25-10-1999 Double precision fixes for Linux
    a radius and a set of helix parameters and covariance matrix
       (standard FRFT definitions), compute the position and its
       covariance. POS = (phi, z). POSCOV = ( phi, phi-z, z ).
   
     REAL R     = radius
     REAL VV0(5)  = helix parameters (as in FRFT)
     REAL VV0COV(15)  = helix covariance (as in FRFT)
   
     REAL POS(2)   = position (phi, z)
     REAL POSCOV(3)  = positon covariance (phi, phi-z, z)
     INTEGER IRET    = return code, =  0 if successful
                                    = -1 helix does not reach R
                                    = -2 bad helix parameters
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UHELIX2                                                              
                   |----  SIGN                                External             
                   |----  SQRT                                External             
                   |----  ASIN                                External             
   
 
3 UINCOV
         SUBROUTINE UINCOV (IR,IOPT,NTPC,NITC,NVDET,FIELRC,VV0,COVIN,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        +                   COVOU,IERR)
   Increase the errors on the covariance matrix due to m.s
    This routine is obsolete.  Using UMSERR instead.
       AUTHOR: LL. GARRIDO
       MODIFIED: I. TOMALIN & LL. GARRIDO 89/06/05
       MODIFIED: R. JOHNSON   22-01-91 to call UMSERR
       INPUT::
             IR : =0 MEANS YOU WANT THE ERROS ON THE INTERACTION
                     REGION
                  =1 MEANS YOU WANT THE ERRORS ON THE ITC REGION
                  =2 MEANS YOU WANT THE ERRORS ON THE TPC REGION
            IOPT: Not used
            NTPC: Not used
            NITC : NUMBER OF POINTS IN THE ITC USED IN  THIS
                  TRACK (CAN BE OBTAINED IN THE FRTL BANK)
            NVDET: NUMBER OF POINTS IN THE VDET USED IN  THIS
                  TRACK (CAN BE OBTAINED IN THE FRTL BANK)
            FIELRC: Not used
            VV0:    THE 5 PARAMETERS OF THE HELIX
            COVIN:  COVARIANCE MATRIX IN  TRIANGULAR FORM
      OUTPUT::
            COVOU: OUTPUT COVARIANCE MATRIX IN  TRIANGULAR FORM
                     (15 ELEMENTS)
            IERR: Error flag,
                  2= EVEH bank not found (for run number)
                  3= IR out of range
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PITMAJ                                                                          
        |---- UINCOV                                                               
                   |----  UMSERR                                                   
   
 
3 UMSERR
         SUBROUTINE UMSERR (IR,NITC,NVDET,HP,COVIN,
  ------------------------------------------------------------------------------
    CKEY COMPUTE MULTIPLE SCATTERING /USER
  ------------------------------------------------------------------------------
        +                   COVOU,IERR)
   Add multiple scattering contribution to track error matrix
    1991 VDET and beampipe geometry not yet in
       Author: R. Johnson  (adapted from UINCOV by LL. Garrido)
               22-01-91
       Mods: S. Wasserbaech, 6 May 1991.
             Adjusted material amounts, including VDET supports
             and carbon fiber tube.
             Corrected tan(lambda) dependence of multiple
             scattering errors.
             Improved the treatment of the off-diagonal errors.
             R. Jacobsen Sept. 1991
             Added regions 4 and 5 (see IR below)
             Adjusted material to handle 1991 Vdet config
             F.Ranjard, 3 June 1992
             call ABRUEV to get current run number
             call GTSTUP at every new run to get VDET setup code.
             declare GTSTUP INTEGER  variable.
       Input::
            IR: =1 Means you want the error matrix to be valid
                   in the region of the interaction point
                =2 Means you want the errors in the ITC region
                =3 Means you want the errors in the TPC region
                =4 Means you want the errors to include all material
                   outside and including Vdet outer layer, but not
                   the Vdet inner layer and beampipe
                =5 Means you want the errors to include all material
                   in the Vdet (i.e. both layers) but not the beampipe
            NITC:  Number of points in the ITC used in fitting this
                   track (can be obtained in the FRTL bank)
            NVDET: Number of points in the VDET used in fitting this
                   track (can be obtained in the FRTL bank)
            HP:    The 5 parameters of the helix as in FRFT
            COVIN: Covariance matrix in triangular form as in FRFT
      Output::
            COVOUT: Output covariance matrix in  triangular form
                     (15 elements)
            IERR: Error flag,
                  0= ok
                  3= IR out of range
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UINCOV                                                                          
   VTRKEX                                                                          
   YTCONV                                                                          
   YTPVTX                                                                          
        |---- UMSERR                                                               
                   |----  UCOPY                               External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALFIEL                                                   
                   |----  ABS                                 External             
                   |----  SQRT                                External             
                   |----  FSCT                                External             
                   |----  THLCIR                                                   
                   |----  PHI                                 External             
                   |----  S                                   External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  AMAX1                               External             
   
 
3 UNEWDP
         SUBROUTINE UNEWDP (VV0,D0P,PHI0P)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Computes the value of d0 and phi0 of the helix parametres,
    FOR POINTS LOCATED AFTER THE MULTIPLE SCATTERING OCCURS.
       AUTHOR: LL. GARRIDO
     INPUT :   VV0 = 1/R*CHARGE   [1/CM]  NEG. IF CLOCKWISE
                     TAN(LAMBDA)  -=DZ/DS}TAN(ANGLE TO X,Y PLANE)
                     PHI0         -0,2PI} ANGLE TO X-AXIS
                     D0*SIGN      [CM]    POS IF AT THIS POINT
                                  THE ANGULAR MOMEMTUM AROUND
                                  THE ORIGIN IS POS.
                                          POS. IF AXIS ENCIRCLED
                     Z0           [CM]    Z POS AT R=D0
                     ALFA         [RAD]   SCATTERING ANGLE
    OUTPUT :   D0P = VALUE OF D0 AFTER THE MUTIPLE SCATTERING
           : PHI0P = VALUE OF PHI0 AFTER THE MUTIPLE SCATTERING
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPFRF                                                                          
   THTFLG                                                                          
   TPDINT                                                                          
        |---- UNEWDP                                                               
                   |----  ASIN                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
   
 
3 UNEWZP
         SUBROUTINE UNEWZP (VV0,IOPT,VV0P)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Computes the value of  the helix parametres,
    FOR POINTS LOCATED AFTER THE ITC-TPC WALL
       AUTHOR: LL. GARRIDO
     INPUT :   VV0 = 1/R*CHARGE   [1/CM]  NEG. IF CLOCKWISE
                     TAN(LAMBDA)  -=DZ/DS}TAN(ANGLE TO X,Y PLANE)
                     PHI0         -0,2PI} ANGLE TO X-AXIS
                     D0*SIGN      [CM]    POS IF AT THIS POINT
                                  THE ANGULAR MOMEMTUM AROUND
                                  THE ORIGIN IS POS.
                                          POS. IF AXIS ENCIRCLED
                     Z0           [CM]    Z POS AT R=D0
                     ALFA         [RAD]   SCATTERING ANGLE IN X-Y
                     ALFAZ        [RAD]   SCATTERING ANGLE IN R-Z
                     (IF ALFA OR ALFAZ NOT KNOW SET IT TO 0.)
              IOPT: 0,2,4,5 OPTION USED WHEN THE TRACK WAS FITTED
                     (FOUND THIS FALUE IN FRFT BANK)
     INPUT :  VV0P  = LIKE VV0
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UNEWZP                                                               
                   |----  UCOPY                               External             
                   |----  ASIN                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
   
 
3 UTKXNG
         SUBROUTINE UTKXNG(HP,COSTHN,ZLYR)
  ------------------------------------------------------------------------------
    CKEY COMPUTE FIT
  ------------------------------------------------------------------------------
   Routine to compute track crossings of the itc sense wire planes
    This routine has some similarity to IXHITS by I. Tomalin.
   
       Author  :  W. B. Atwood  14-Oct-89
   
      Input:
        HP(5)  /R4 : Track helix parameters, as in bank FRFT
        need common /ITWICC/ for ITC geom.
   
    IMPORTANT: If you wish to use this subroutine, then at the beginning
               of each run, you must call the ALEPHLIB routine, IRDDAF,
               to fill commons with the ITC geometry etc.
   
      Output:
        XTK    /R4 : Array of space points for each crossing.
                     (dimension... (3,8))
        TTK    /R4 : Array of direction cosines.. for each XTK
   
      calls     : none
   
      Libraries required: BOS
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UTKXNG                                                               
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  ASIN                                External             
                   |----  SIGN                                External             
                   |----  COS                                 External             
   
 
3 UTRID
         SUBROUTINE UTRID(A,N,NP,D,E)
  ------------------------------------------------------------------------------
    CKEY COMPUTE EIGENVALUE / USER
  ------------------------------------------------------------------------------
   Householder reduction of a real, symmetric matrix
   
   
      Author   : J.Spiekerman, T.Lohse - 910814    from NUMERICAL RECIPIES
   
      Inputs:- A:  matrix which is transformed
               N:  order of matrix a
              NP:  first dimension of array a
   
      Outputs: D: vector of the n diagonal-elements of tridiagonal matrix
           -   E: vector of the n-1 off diagonal-elements of trid. matrix
               A: matrix which performs the transformation
   
      Description
      ===========
      Householder reduction of a real, symmetric, N by N matrix a, stored
      in an NP by at least N physical array. On output a is replaced by
      the orthogonal matrix Q effecting the transformation. D returns the
      diagonal elements of the tridiagonal matrix, and E the N-1 off-diagonal
      elements (E(2),...,E(N)). E(1) is set to zero.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FPKCM                                                                           
        |---- UTRID                                                                
                   |----  DABS                                External             
                   |----  DSIGN                               External             
                   |----  DSQRT                               External             
   
 
3 UTSWCO
         SUBROUTINE UTSWCO(IL,IWIRE,ZSW,RSW,PHSW)
  ------------------------------------------------------------------------------
    CKEY COMPUTE FIT /INTERNAL
  ------------------------------------------------------------------------------
   Get sense wire coord (+sag) for fitting
   
   
       Author          :- J. Sedgbeer
       Last Modified   :- J. Sedgbeer   89/09/01
       Changed to use ZSW : W.B. Atwood 89/10/4
       Input:
         IL     /I  : layer number
         IWIRE  /I  : wire number                      [1,960]
         ZSW    /R  : Z from where ever
                      /ITWICC/  ITC sense wire geom.
                      /ISWPHI/  ITC sense wire coords.
                      /IRESOL/  for sigma z
                      ALCONS
   
       Output:
         RSW    /R  : Radius of sense wire (cm.)
         PHSW   /R  : Phi of sense wire    (radians.)
   
       calls     : none
   
       Libraries required : none
   
    Get hit wire coord from wire number
    calculate wire sag at this Z
    Correct wire coord. due to sag.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ITQUAL                                                                          
   ITXING                                                                          
        |---- UTSWCO                                                               
                   |----  SIN                                 External             
                   |----  COS                                 External             
   
 
3 UVTRID
         SUBROUTINE UVTRID(D,E,N,NP,Z,IFAIL)
  ------------------------------------------------------------------------------
    CKEY COMPUTE EIGENVALUE /USER
  ------------------------------------------------------------------------------
   Eigenvalues and eigenvectors of real symmetric matrix
   
   
      Author   :- J.Speikerman, T.Lohse - 910814  from NUMERICAL RECIPIES
   
      Inputs: D: Diagonal elements of tridiagonal matrix
           -  E: N-1 off-diagonal elements of trid. matrix (E(2),...,E(N))
                 E(1) is abitrary
              N: order of tridiagonal matrix
              NP: first dimension of array Z
              Z: read description
   
      Outputs: D: Eigenvalues of tridiagonal matrix
           -   Z: read description
   
      Libraries required:
   
      Description
      ===========
      QL algorithm with implicit shifts, to determine the eigenvalues and
      eigenvectors of a real, symmetric, tridiagonal matrix, or of a real
      symmetric matrix previously reduced by TRID. D is a vector of length
      NP. On input it first n elments are the diagonal elements of the
      tridiagonal matrix. On output, it returns the eigenvalues. The vector
      E inputs the subdiagonal elements of th tridiagonal matrix with E(1)
      arbitrary. On output E is destroyed.
      If the eigenvectors of the tridiagonal matrix are desired, the matrix
      Z is input as the identity matrix.
      If the eigenvectors of a previously reduced matrix by TRID are desired
      Z is input as the outpt matrix of TRID.
      In either case, the kth column of Z returns the normalized eigenvector
      corresponding to D(k).
      IFAIL is set to zero if the syubroutine is successfully completed.
      IFAIL is set to one if more then 30 iterations would be needed.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FPKCM                                                                           
        |---- UVTRID                                                               
                   |----  DABS                                External             
                   |----  DSQRT                               External             
                   |----  DSIGN                               External             
   
 
3 YFIX
         SUBROUTINE YFIX(C,RIN,IERR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Fix matrix convention in tgft
      Created by Juergen Knobloch       1-JUL-1988
   
      Purpose   :
      Inputs    : C(5,5) double precision cov matrix old convention
                  RIN    radius new sign convention
      Outputs   : C(5,5) error matrix new convention
                : IERR = 1 if matrix singular
      Calls     : DINV / RINV (IF BIT64)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YV0ONE                                                                          
        |---- YFIX                                                                 
                   |----  SIGN                                External             
                   |----  SC                                  External             
                   |----  DINV                                External             
   
 
3 YHELIX
           SUBROUTINE YHELIX(IFRFT,POINT,SIGZ2,PSI,PTRK,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
   Determine the turning angle and momentum of an frft track at a point
                 D. Casper   10-Aug-1997
         Input:  IFRFT       Row number in FRFT bank
                 POINT(3)    Point on or near the track
                 SIGZ2       Z uncertainty of POINT (squared)
         Output: PSI         Turning angle at the point
                 PTRK(3)     Momentum vector at vertex
                 IER         0 if no error
                             -1 if no track bank or 0 field
     This routine generalizes UHELIX to deal the more complicated and
     ambiguous situations which arise in secondary interactions.
     The test relies on the fact that all the coordinates on a track
     must lie between psi = 0 and psi = pi (by definition).  Ambiguities are
     resolved using z information if possible.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSCLLD                                                                          
   YSGETS                                                                          
   YSTLLD                                                                          
   YSVTBK                                                                          
        |---- YHELIX                                                               
                   |----  ALFIEL                                                   
                   |----  NAMIND                              External             
                   |----  IW                                  External             
                   |----  RTABL                               External             
                   |----  SIGN                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  UHELIX                                                   
                   |----  VZERO                               External             
                   |----  ITABL                               External             
                   |----  ABS                                 External             
                   |----  ABRUEV                              External             
                   |----  UCOPY                               External             
   
 
3 YSENSE
           SUBROUTINE YSENSE(PSI_P,PSI_IN,PSI_OUT,PSI_S,ISENSE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
   Determine the sense of direction of a track
             D.Casper    10-Aug-1997
             Input:      PSI_P   turning angle of track at primary vertex
                         PSI_IN  turning angle of track at innermost coordinate
                         PSI_OUT turning angle of track at outermost coordinate
                         PSI_S   turning angle of track at secondary vertex
                         NOTE: these quantities should be computed by YHELIX
             Output:     ISENSE  = -1 if error; 0-3 are "normal" returns in
                                   all cases:
                                   0  is reserved.  This routine never returns
                                      a code of zero; it is intended to be set
                                      later for tracks which are finally id'ed
                                      as the incoming track.  Note that
                                      changing a class 2 track into class 0
                                      also implies a reversal of the track's
                                      momentum.
                                   1  track leaves secondary going outward
                                      (or enters going inward)
                                   2  track enters secondary going outward
                                      (or leaves going inward)
                                   3  track leaves secondary going outward
                                      (or enters going inward)
                                   4  track passes through secondary
                                      (in either direction)
                                   Return codes > 4 indicate a problem
                                   if the "primary" is the true event
                                   vertex near the origin.  See below for
                                   details.  Note that it is impossible to
                                   distinguish here between tracks which
                                   *really* go inward or outward without
                                   more information.  The caller must ultimately
                                   decide; for example, it would normally be rare
                                   for an radially inward track to create a
                                   secondary vertex, hence class 1 and 3 are
                                   probably daughter tracks of a secondary
                                   vertex.  Likewise, if a class 2 track is
                                   consistent with the primary vertex,
                                   the caller may decide it is actually the
                                   incoming track (code 0 is reserved for
                                   this situation).
     This routine is simplified by carefully computing psi with YHELIX, which
     should treat vertices on spiral branches or behind the primary correctly.
     There are a number of implicit assumptions which are checked for
     validity before going ahead.  First, a track's coordinates must lie
     at positive values of psi, with psi increasing with radius; this
     should happen by construction when fitting the helix.  Since the
     track may not come from the primary vertex, no requirement is made on
     psi_primary.  The track *is* supposed to pass through the secondary
     vertex, and hence the secondary must fall in a reasonable range of turning
     angles; from -pi to +3pi/2 (psi=0 is where the track parameters are
     defined and the track is closest to (0,0); psi=-pi corresponds to a half
     turn before that, psi=pi is where the helix turns over, and thus the
     psi < 3pi/2 requirement allows a vertex somewhat beyond the turn-around).
     Subject to these constraints the following cases (i.e. ordering of
     the turning angles are possible:
   1  p s i o     The expected case; track originates from secondary
   2  p i o s     Also reasonable; track ends at secondary
   3  s p i o     Track created at secondary and loops past primary
   4  p i s o     Track created at primary and passes through secondary;
                  could happen for a delta-ray emission...
   5  s i o p *   Track created at secondary and ends at the primary
   6  s i p o *   Track created at secondary and loops through the primary
   7  i o p s *   Track ends at the primary
   8  i o s p *   Track ends at the secondary
   9  i p o s *   Track passes through primary and ends at secondary
   10 i s o p *   Track passes through secondary and ends at primary
   11 i p s o *   Track passes through primary and then secondary
   12 i s p o *   Track passes through secondary and then primary
     Cases marked with a star(*) indicate a problem if the primary is
     at or near the origin (i.e. primary event vertex), since normally
     the main event vertex/origin should fall before any coordinates (psi~0)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVTBK                                                                          
        |---- YSENSE                                                               
                   |----  ABRUEV                              External             
   
 
3 YV0ONE
         SUBROUTINE YV0ONE(KPOI,PSIB,XM,BV,Z,IFAIL)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Find the point of helix close to the vertex and the inverse e.m.
   
         AUTHOR    : M.A. Ciocci, L. Rolandi 24/2/88
         MODIFIED  :
   
          INPUT : KPOI/I    The track number in the FRFT bank
                : PSIB/R    Angle psi for the helix point close
                            to the vertex
   
          OUTPUT: XM/D      The inverse of covariance matrix for a
                            variation of coordinates/momenta around
                            the values BV(6)
   
                : BV/D      BV(6) contains B(1.2.3) the coordinate
                            B(4.5.6) the momenta computed at the
                            angle PSIB
   
                : Z/D       Z(5,6) contains derivatives of
                            track parameters
   
                : IFAIL/I   IF = 1 -- Matrix singular
                            IF = 2 -- FRFT bank missing
                      DESCRIPTION
                      ===========
        1- Get track parameters from BOS BANK FRFT
        2- Computes coordinates B(3) at angle PSIB
        3- Computes momenta P(3) at angle PSIB (Momenta are
           measured in cm !!!)
        4- Computes the drivatives Z(5,6) of the track
           parameters (5) respect to a variation of coordinates/
           momenta (6)
        5- Computes the Chi**2 matrix XM(6,6) for a variation
           of coordinates/momenta as
                           t
                      XM =  Z C Z
           REQUIRED LIBRARIES:  BOS,CERN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UHELIX                                                                          
        |---- YV0ONE                                                               
                   |----  NAMIND                              External             
                   |----  SIGN                                External             
                   |----  YFIX                                                     
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  DBLE                                External             
                   |----  DMMLT                               External             
   

2 DEDX

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     TPC DE/DX package
     ! ALEPHLIB 31.2
        TBTBLP, TMPDDX, TPDHYP, TPXERR, TXPDDX : 
        Modified PAD calibration (S.Monteil)
        TBTBLK, TMDEDX, TIDHYP, TDXERR, TXDEDX : 
        All code removed from these obsolete routines, which now just call
        the replacement routines (M.Cattaneo)
    
     ! ALEPHLIB 31.0
         TDEDXV : Do no apply HV correction from 1998 (KRUN>45000) (F.Cerutti)
    
     ! ALEPHLIB 30.7
        TCHKHV - Call XHVBIT instead of ALTRHV, 
                 return .TRUE. for MonteCarlo      (M.Cattaneo)
    
     ! ALEPHLIB 21.1
       add pad dE/dx (D.Casper)
       TBTBLK, TMDEDX, TIDHYP, TDXERR, TXDEDX are obsolete and replaced by
       TBTBLP, TMPDDX, TPDHYP, TPXERR, TXPDDX
       the new routines work for WIRE or PAD dE/dx
       the first argument of the routines is 'PAD' or 'WIRE', the rest
       of the calling sequence stays unchanged.
    
     ! ALEPHLIB 21.0
       TDEDXV -  IF run# >= 40000 THEN
            The sector dE/dx modification for high voltage is only applied
            to the TCSX constants if the voltage is more than 10 volts from
            the nominal value.  If the voltage is at the nominal value
            (1250 volts), the TCSX constants are not modified. (J.Nachtman)
    
     ! ALEPHLIB 20.9
       TDEDXV -
       IF run# >= 40000 THEN  (140Gev runs and above)
          The global De/Dx normalisation factor is calculated
          using a parametrization given in TCPX bank.
          The sector De/Dx normalisation factor is taken from
          the TCSX bank and maybe modified by the TPHV bank.
          (J.Nachtman)
    
     ! ALEPHLIB 20.5
       TIDHYP - rewrite a statment to avoid floating point overflow.
    
     ! ALEPHLIB 20.1
       TBTBLK - set return code to 5 when TBTBLK<0.
       TXDEDX - if TBTBLK<0. then TBTBLK=0.
       TCHKEX - call TDEDXR to get DEDX calibration for IRUN run#
                returns GNR=SNR=0. if run is not calibrated on DAF
       TDEDXV - use only DAF banks TCGX/TCSX or TC2X
       TDEDXR - entry point into TDEDXV to set run number
    
     ! ALEPHLIB 15.5
       TCGXRU, TDEDXV - new routine to handle new banks TCGX/TCSX
                        (W.Wiedenman)
       TCHKEX, TMDEDX - modified to use new banks TCGX/TCSX (W.Wiedenman)
       TBTBLK - choose the parametrization type depending on the presence
                or absence of parametrization coefficients in the TC4X
                bank and not on the data type (MC or real).  (D.Casper)
     ! 930303 - ALEPHLIB 14.6
       TIDHYP - remove obsolete code for DTRA bank (Mini)
       TMDSTX - obsolete routine removed (Mini)
     ! 930202 - ALEPHLIB 14.5
       TWRRED - fix a bug in production of TSDI bank
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     TBTBLK     Routine for backward compatibility only. call tbtblp directly instead
     TBTBLP     Bethe-bloch parameterization of tpc de/dx for analysis
     TCGXRU     Get a row of bank tcgxru (after the model of tdfvru)
     TCHKEX     Check for existance of good de/dx calibration constants on the
     TCHKHV     Check tpc high voltage status for de/dx purposes
     TDEDXV     Get tpc de/dx global normalisation constant
     TDXERR     Routine for backward compatibility only. call tpxerr directly instead
     TIDHYP     Routine for backward compatibility only. call tpdhyp directly instead
     TMDEDX     Routine for backward compatibility only. call tmpddx directly instead
     TMPDDX     Return reduced and calibrated de/dx for a single track.
     TPDHYP     Particle id hypothesis from tpc de/dx
     TPXERR     Get expected relative de/dx error
     TXDEDX     Routine for backward compatibility only. call txpddx directly instead
     TXPDDX     Expected de/dx of relativistic particle

3 TBTBLK
         FUNCTION TBTBLK(BGL,Q,SMPL,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Routine for backward compatibility only. call tbtblp directly instead
    M.Cattaneo 1999-07-29
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TBTBLK                                                               
                   |----  TBTBLP                                                   
   
 
3 TBTBLP
         FUNCTION TBTBLP(NAME,BGL,Q,SMPL,IER)
  ------------------------------------------------------------------------------
    CKEY DEDX TPC BETHE
  ------------------------------------------------------------------------------
   Bethe-bloch parameterization of tpc de/dx for analysis
      Created by Robert P. Johnson     22-AUG-1988
      Modified by Dave Casper          14-JUN-1995
                                       Create TBTBLP from TBTBLK
      Modified by S. Monteil           20-JUL-1999
                                       Modify for calibration
   
      Inputs    : NAME      /A      'PAD ', 'PA6 ', or 'WIRE'
                  BGL       /R      log10(beta*gamma)
                  Q         /R      particle charge
                  SMPL      /R      log(sample length/4mm)
      Outputs   : TBTBLP    /R      dE/dx with minion=1.0
                                    Set to zero if Q=0 or if the
                                    calibration cannot be found.
                                    set to zero if <0.
                  IER       /I      Error return=0 for success
                                     4= cannot find calibration bank
                                     5= stupid result TBTBLP<0.
   
      Input banks:
            WIRE dE/dx - TC4X (calibration)
            PAD  dE/dx - TP4X, TP6X (calibration)
      TP4X don't have ID and validity range, HAC parameters are shifted
      by 3 compared to TC4X
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TBTBLK                                                                          
   TXPDDX                                                                          
        |---- TBTBLP                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  SQRT                                External             
                   |----  CHAINT                              External             
                   |----  ALTELL                              External             
   
 
3 TCGXRU
         INTEGER FUNCTION TCGXRU (IRUN,IROW)
  ------------------------------------------------------------------------------
    CKEY DEDX TPC CALIBRATION
  ------------------------------------------------------------------------------
   Get a row of bank tcgxru (after the model of tdfvru)
   - W.Wiedenmann-930831
   - Input:
               IRUN   / INTE  = run number
   - Output:   TCGXRU / INTE  = TCGX BOS index
                                =0 means not enough space
                                <0 means a garbage collection occurded
               IROW   / INTE  = row # for the known IRUN
                                0 means IRUN not found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TCGXRU                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  GTDBAS                              External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
                   |----  BGARB                               External             
                   |----  LOCTAB                              External             
   
 
3 TCHKEX
         LOGICAL FUNCTION TCHKEX(IRUN)
  ------------------------------------------------------------------------------
    CKEY DEDX TPC CALIBRATION
  ------------------------------------------------------------------------------
   Check for existance of good de/dx calibration constants on the
    database
      R. Johnson     27-4-90
      Modified:W. Wiedenmann 31-08-93 use new banks TCGX/TCSX
      Input:    IRUN      /I        Current run number
      Output:   TCHKEX    /L        .TRUE. if correct calibration
                                    exists, otherwise .FALSE.
      Correct calibration may not exist either because the run has not
      yet been calibrated, or it is a DUCK run.
      in this case the run is not included in TCGX/TCSX banks, the global
      calibration is set to 0.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TCHKEX                                                               
                   |----  TDEDXR                                                   
   
 
3 TCHKHV
         LOGICAL FUNCTION TCHKHV(IRUN,IEVT,IFLG)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Check tpc high voltage status for de/dx purposes
   
     R. Johnson    22-6-90
     F.Ranjard - 26-4-94
        get the high voltage word through ALTRHV
     M.Cattaneo  97-12-05
        use XHVBIT instead of ALTRHV, return .TRUE. if MonteCarlo
   
     Input:   IRUN    /I    Current run number
              IEVT    /I    Current event number
     Output:  TCHKHV  /L    .TRUE. if high voltage is (believed to be) on
              IFLG    /I    0 = test was made on dE/dx HV bit
                            1 = test was made on TPC tracking HV bit
                            2 = no test was made (banks not found)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TCHKHV                                                               
                   |----  AGETDB                              External             
                   |----  XHVBIT                                                   
                   |----  NAMIND                              External             
                   |----  IBITS                               External             
   
 
3 TDEDXV
         SUBROUTINE TDEDXV(GGNR,SSNR,IER)
  ------------------------------------------------------------------------------
    CKEY  DEDX TPC  / INTERNAL
  ------------------------------------------------------------------------------
   Get tpc de/dx global normalisation constant
     Author   :- W. Wiedenmann         31-Aug-1993
     modified by : F.Ranjard - 931217
     modified by : J.Nachtman, F.Ranjard - 950803
     modified by : J.Nachtman - 951106
     modified by : F.Cerutti  - 19-Oct-1998
     Outputs:
          - GGNR        / R     Global Normalisation Constant
          - SSNR        / R     Sector to sector Normalisation Constants
          - IER         / I     Error Code
                                 0 : OK
                                 1 : no calibration available
                                     or other inconsistency
     Description
     ===========
     the run# is got from ABRUEV
     IF run# >= 45000 THEN  (192 Gev runs and above)
        The global De/Dx normalisation factor is calculated
        using a parametrization given in TCPX bank.
        The sector De/Dx normalisation factor is taken from
        the TCSX bank.
     ELSE IF run# >= 40000 .and. run# < 45000 THEN  (140 -> 189 Gev runs)
        The global De/Dx normalisation factor is calculated
        using a parametrization given in TCPX bank.
        The sector De/Dx normalisation factor is taken from
        the TCSX bank and maybe modified by the TPHV bank.
     ELSEIF run# >= 20000 THEN
        The global/sector De/Dx normalisation is taken from
        the TCGX/TCSX bank for the present run IRUN.
     ELSE
        the TC2X bank is used.
     ENDIF
     If no calibration is available or an error occures
     IER=1, GGNR=0., SSNR=0. are returned.
      ENTRY points
      ============
      ENTRY TDEDXR (JRUN,GGNR,SSNR,IER)
      to input the run number.
      Input:
         - JRUN   /I   run number for which dedx calibration is
                          required.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TMPDDX                                                                          
        |---- TDEDXV                                                               
                   |----  ABRUEV                              External             
                   |----  NAMIND                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  NAMERU                              External             
                   |----  ABS                                 External             
                   |----  ALOG                                External             
                   |----  REAL                                External             
                   |----  EXP                                 External             
                   |----  GTSTUP                              External             
   
 
3 TDXERR
         FUNCTION TDXERR(NS,TL,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Routine for backward compatibility only. call tpxerr directly instead
    M.Cattaneo 1999-07-29
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TDXERR                                                               
                   |----  REAL                                External             
                   |----  TPXERR                                                   
   
 
3 TIDHYP
         SUBROUTINE TIDHYP(ITK,FIELD,N,RMASS,Q,RI,NS,TL,RIEXP,SIGMA,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Routine for backward compatibility only. call tpdhyp directly instead
    M.Cattaneo 1999-07-29
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TIDHYP                                                               
                   |----  TPDHYP                                                   
                   |----  NINT                                External             
   
 
3 TMDEDX
         SUBROUTINE TMDEDX(ITK,RI,RSIG,NS,TL,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Routine for backward compatibility only. call tmpddx directly instead
    M.Cattaneo 1999-07-29
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TMDEDX                                                               
                   |----  TMPDDX                                                   
                   |----  NINT                                External             
   
 
3 TMPDDX
         SUBROUTINE TMPDDX(NAME,ITK,RI,RSIG,XNS,TL,IER)
  ------------------------------------------------------------------------------
    CKEY DEDX TPC MDST
  ------------------------------------------------------------------------------
   Return reduced and calibrated de/dx for a single track.
   
   
       Author:  R. Johnson    31-05-89
       Modified:W. Wiedenmann 31-08-93 use new banks TCGX/TCSX
                D. Casper     14-06-95 create TMPDDX from TMDEDX
                S. Monteil    20-07-99 add PA6 option for calibration
   
    Input:   NAME        /A       'PAD', 'PA6', or 'WIRE'
             ITK         /I       Track number in FRFT bank
    Output:  RI          /R       Measured ionization (1.0=minion, Q=1)
             RSIG        /R       Relative error on the dE/dx
                                  The error to be used in analysis
                                  should be calculated from:
                                  SIGMA**2= (RSIG*Iexp)**2 + SIG_P**2
                                  where Iexp is the expected ionization
                                  for a given hypothesis, and SIG_P
                                  is the contribution from momentum
                                  error.
             XNS         /R       Number of useful wire samples on track
             TL          /T       Useful length of the track (cm)
             IER         /I       Error return= 0 for success
                                  2= can't find dE/dx bank
                                  3= track has no dE/dx information
                                  4= cannot find calibration banks
                                  6= no valid dE/dx calibration exists
                                     for this run
   
    Input banks:
          WIRE dE/dx - TEXS (data), TC1X (calibration)
          PAD  dE/dx - TPXS (data), TP1X (calibration)
    HAC parameters are the same for TEXS and TPXS
    HAC parameters are different for TC1X and TP1X, only one is used
    JTNATP set to JTC1TP or JTP1TP (percentage used for truncated mean)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TMDEDX                                                                          
   TPDHYP                                                                          
        |---- TMPDDX                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  TDEDXV                                                   
                   |----  REAL                                External             
                   |----  FLOAT                               External             
                   |----  TPXERR                                                   
   
 
3 TPDHYP
         SUBROUTINE TPDHYP(NAME,ITK,FIELD,N,RMASS,Q,RI,XNS,TL,RIEXP,SIGMA,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        +                  IER)
   Particle id hypothesis from tpc de/dx
    This is a user interface for dE/dx analysis.
   
       Author:  R. Johnson    23-09-88
       Modified:S. Haywood    07-06-90
       Modified:S. Haywood    03-03-93
       Modified:D. Casper     14-06-95 add pad dedx
       Modified:S. Monteil    20-07-99 add curvature for calibration
   
       Input:   NAME     /A       'PAD' or 'WIRE'
                ITK      /I       Track number in FRFT
                FIELD    /R       Magnetic field (sign doesn't matter)
                N        /I       Number of hypothesis to try
                RMASS(n) /R       Mass hypotheses
                Q(n)     /R       Charge hypotheses (sign doesn't matter)
       Output:  RI       /R       Measured ionization (1.O=minion, Q=1)
                XNS      /R       Number of useful wire samples on track
                TL       /R       Useful length of the track (cm)
                RIEXP(n) /R       Expected ionization for the given
                                  mass hypothesis (1.0=minion, Q=1)
                SIGMA(n) /R       Sigma of dE/dx measurement error,
                                  including the momentum error.
                                  Note that one can calculate a
                                  chi-squared with 1 d.o.f. as:
                                  chi2 = ((RI-RIEXP)/SIGMA)**2
                IER      /I       Error return= 0 for success.
                                  1= can't find track bank
                                  2= can't find dE/dx bank
                                  3= track has no dE/dx information
                                  4= can't find calibration banks
                                     TC1X, TC2X, and/or TC3X
                                  6= no valid dE/dx calibration exists
                                     for this run
     Input data banks:
            FRFT            for tracking information
     Input calibration banks:
            TC1X, TC2X, and
            TC3X  for WIRE dE/dx , TP3X for PAD dE/dx + TP5X
        JTNANR is set to JTC3NR or JTP3NR (overall normalisation corr.)
   
     Comments
     ========
     This interface is to be used for analysis of dE/dx information
     contained on POT, DST, or MDST data files.  One provides the
     track number and one or more particle hypotheses, and the
     program returns the corresponding measured dE/dx, expected
     dE/dx, and the estimated 1 sigma measurement error.  All
     calibration factors valid for the current run are applied.
     The program also returns the number of dE/dx samples of the track
     and the effective length of the track.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TIDHYP                                                                          
   FRFTDP                                                                          
        |---- TPDHYP                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  TMPDDX                                                   
                   |----  ALOG                                External             
                   |----  TXPDDX                                                   
   
 
3 TPXERR
         FUNCTION TPXERR(NAME,XNS,TL,IER)
  ------------------------------------------------------------------------------
    CKEY DEDX TPC ERROR
  ------------------------------------------------------------------------------
   Get expected relative de/dx error
    R. Johnson  9-2-90
    D. Casper  14-6-95  Create TPXERR from TDXERR
    S. Monteil 20-7-99  Modify for calibration.
    Input:   NAME    /A     'WIRE' or 'PAD' or 'PA6'
             XNS     /R     Number of dE/dx samples before truncation
             TL      /R     Track length
    Output:  TPXERR  /R     Error on the dE/dx (units 1=minion)
             IER     /I     Non-zero if database banks not found
    Input banks:
       WIRE dE/dx - TC4X (calibration)
       PAD  dE/dx - TP4X, TP6X (calibration)
       TC4X and TP4X have the same HAC parameters
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TDXERR                                                                          
   TMPDDX                                                                          
        |---- TPXERR                                                               
                   |----  ALTELL                              External             
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  ALOG                                External             
                   |----  CHAINT                              External             
                   |----  SQRT                                External             
   
 
3 TXDEDX
         SUBROUTINE TXDEDX(BG,SBG,Q,RSIG,SMPL,DEDX,SDEDX,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Routine for backward compatibility only. call txpddx directly instead
    M.Cattaneo 1999-07-29
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TXDEDX                                                               
                   |----  TXPDDX                                                   
   
 
3 TXPDDX
         SUBROUTINE TXPDDX(NAME,BG,SBG,Q,RSIG,SMPL,DEDX,SDEDX,IER)
  ------------------------------------------------------------------------------
    CKEY DEDX PARTICLE
  ------------------------------------------------------------------------------
   Expected de/dx of relativistic particle
       Author:  R. Johnson    17-06-87
       Modified: Z. Feng      26-11-92 modify the power term to general purpose
                 D. Casper    14-06-95 create TXPDDX from TXDEDX
                 S. Monteil   20-07-95 modify for calibration
   
       Input:  NAME    /A     'PAD ', 'PA6 ' or 'WIRE'
               BG      /R     beta*gamma of the particle
               SBG     /R     Uncertainty in BG
               Q       /R     Particle charge
               RSIG    /R     Relative uncertainty of trunc mean, as
                              given by the routine TMPDDX
       Output: DEDX    /R     Energy loss relative to minimum ionizing
               SDEDX   /R     Estimate of uncertainty in DEDX
               IER     /I     Error return=0 for success
                                  4= cannot find calibration bank
                                  5= TBTBLP returns a negative value,
                                     TBTBLP is set to zero.
       Calibration bank:
          WIRE dE/dx - TC4X
          PAD  dE/dx - TP4X, TP6X
   
       Description
       -----------
       This routine returns the most probable value of the
       dE/dx distribution expected for a TPC track of
       velocity beta, where beta*gamma= beta/SQRT(1-beta**2).
       Also returned is the 1-sigma uncertainty  on this most
       probable value.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPDHYP                                                                          
   TXDEDX                                                                          
        |---- TXPDDX                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  ALOG10                              External             
                   |----  TBTBLP                                                   
                   |----  SQRT                                External             
   

2 ECAL

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     various ECAL routines not included in ECALDES
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ECLEAN     Cleans etdi bank using information from eglo bank
     ECPRHI     Print history banks ettd,ewtd
     ECPRTO     Print banks etht and etdi
     ECPRTR     Print trigger banks ettr and ewtr
     ECPRWI     Print wire banks ewht, ewdi
     EMTZER     Return tzero of an ecal module # imodu

3 ECLEAN
         SUBROUTINE ECLEAN
  ------------------------------------------------------------------------------
    CKEY ECAL CLEAN  / USER
  ------------------------------------------------------------------------------
   Cleans etdi bank using information from eglo bank
    B. Bloch -Devaux  August 29,1989
    Structure : SUBROUTINE
                External references:WBANK, WDROP(BOS77)
                                    UCOPY(CERNLIB)
                Comdecks references:BCS,BMACRO
    Input : none
    Output : none
    Banks  : input  - EGLO, ETDI
                      ETHR (data cards)
             output - JDETDI (work bank dropped at the end)
    Action : removes from ETDI bank addresses present in EGLO
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECLEAN                                                               
                   |----  NAMIND                              External             
                   |----  IBITS                               External             
                   |----  WBANK                               External             
                   |----  UCOPY                               External             
                   |----  BKFRW                               External             
                   |----  WDROP                               External             
   
 
3 ECPRHI
         SUBROUTINE ECPRHI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        O.CALLOT    28-JAN-86
   Print history banks ettd,ewtd
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECPRHI                                                               
                   |----  NLINK                               External             
                   |----  SUMH                                External             
                   |----  NINT                                External             
                   |----  IBITS                               External             
   
 
3 ECPRTO
         SUBROUTINE ECPRTO
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
       O.CALLOT    27-JAN-86
   Print banks etht and etdi
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECPRTO                                                               
                   |----  NLINK                               External             
                   |----  VFILL                               External             
                   |----  IBITS                               External             
                   |----  NINT                                External             
   
 
3 ECPRTR
         SUBROUTINE ECPRTR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        O.CALLOT   29-JAN-86
   Print trigger banks ettr and ewtr
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECPRTR                                                               
                   |----  NLINK                               External             
                   |----  NINT                                External             
   
 
3 ECPRWI
         SUBROUTINE ECPRWI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        O.CALLOT     12-MAR-86
   Print wire banks ewht, ewdi
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECPRWI                                                               
                   |----  NLINK                               External             
                   |----  MOD                                 External             
                   |----  NINT                                External             
   
 
3 EMTZER
         REAL FUNCTION EMTZER ( IMODU )
  ------------------------------------------------------------------------------
    CKEY ECAL T0
  ------------------------------------------------------------------------------
   Return tzero of an ecal module # imodu
    return -9999. if PEWI/PWEI does exist or if IMODU is not there
   - M.N.Minard - 950510
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EMTZER                                                               
                   |----  NLINK                               External             
                   |----  REAL                                External             
   

2 EDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
        The ECAL geometry package contains a set of routines which expands
     the geometrical description of the ECAL contained in the data base
     providing utilities to access easily this geometrical information.
        This package is  used in GALEPH and JULIA and can be called
     by any program provided a correct initialisation is done.
        Particular care has been taken to present the data to the user in
     various convenient forms,especially for ECAL analysis and graphics
     applications.
        The communication between the ECAL geometry package and the user
     program is done only through subroutines or functions calls.
     Data transmission goes through arguments.Therefore,the data base access
     and all common blocks internal to the package are hidden to the user.
       The package contains 2 parts :
        - Readout geometry description and utilities : ECAL storeys
        - Volume description and utilities : The mechanical structure
        All ECAL geometrical constants are read from the ALEPH data base.
    
        The package must be initialized  by 2 calls at the run
     initialization stage , after BOS initialization and DAF opening.
                   CALL ERDDAF(LUNDAF,IRUN,IGOOD)
        which reads all ECAL banks from DAF ,fills internal ECAL commons
     and returns IGOOD = 1 when successfull.
                   CALL ECDFRD
        which expands the geometry description to ease the access.
    
     A full description of the package can be found in ALEPH note 88-177
             ECAL GEOMETRY PACKAGE  M.Rumpf ,H.Videau
    
    
    
     ! Correction file 6 for Alephlib 30.7
       EXPFRF : Bug fix. Correct treatment of d0 sign (C.Mannert)
                The bug affected mainly the calculation of the impact point on
                ECAL for GAMPEX photons
    
     ! ALEPHLIB 21.3
       EPRCOM, ERDDAF : Fix multiline strings
    
     ECALDES version 211
     ----------------------------------------------------------------------
     Changes since version 2.10
        Safety checks on cl1 et cl2 in EPLSQL, EPLSCC, EPLSCF
        Correction of a bug in EDEFLG,EGPTLG
        Modifications for alignement in EALIGN
        Modification in EPRCOM
        Change of sign in ESRPL in such a way that the power of inner
         points is positive.
        Safety checks in EXPFRF in case of ITC tracks.
     The name of the routine EXPAND has been changed to EXPNEC to avoid
    clashes with a routine from the GKS drivers.
         Correction in EDISGN, order of non diagonal matrices.
     ----------------------------------------------------------------------
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ACOUPE     Computes the contour of the section of a volume by a a plane
     AIRE       Computes the area of a polygon on plane
     AIRSCT     Area of a polygon section
     AVOLUM     Computes volumes volume
     EALGMK     Gets the alignment marks
     EALIGN     Fill alignment matrix
     EALTMK     Sets the alignment marks in ealimp
     ECDFRD     Init. ecal geometry
     ECPLST     Get relation plane stack
     ECRWRG     Row # -> region #,max columns
     ECSGEO     Computes shower system
     ECTILT     Get ecal tilt
     ECYLND     Impact of a neutral on a cylinder.
     EDEFCL     Initialises column system
     EDEFEC     Defines ecal (tilt)
     EDEFLG     Initialises rows system:
     EDEFMD     Initialises module system
     EDEFSC     Defines sub components geometry:
     EDEFSP     Defines stacks and planes geometry .
     EDEFSS     Defines the sector geometry in the module-type,
     EDISGN     Rotations matrices
     EFNCRS     Finds column, row and stack floating numbers
     EFNDCL     Finds column number
     EFNDLG     Finds row number
     EFNDMD     Finds module number
     EFNDPL     Finds plane number
     EFNDRG     Finds region number
     EFNDSC     Finds subcomponent number
     EFNDSS     Finds (sub)sector number
     EFNDST     Finds stack number
     EFNDTW     Finds column, row and stack numbers
     EFNICR     Finds column, row and stack floating numbers
     EFNITW     Finds column, row and stack numbers
     EFNLAY     Finds plane number (in sensitive zone)
     EGPTLG     Gen. points on row limit planes
     EGPTSP     Gets points on stack and plane planes
     EGTLNF     Gets a plane from elnf by its name
     EHSIMT     Cuts long track element
     EINTST     Checks storey address validity
     EINVRL     Inverts some relationships
     ELIMIN     Defines modules sensitive limits               m.rumpf  03/19/87
     ELIMRG     Get rows limiting region
     ELIMSC     Get subcomp. z limiting planes
     ELIMST     Finds stack boundary
     ELOCAL     Defines local system
     EMABSL     Gets the absorption length of a material!
     EMDEDX     Gets the dedx of a material!
     EMDTOW     Get subc and module from row and column
     EMPACT     Impacts of a neutrino.
     EMRADL     Gets the radiation length of a material!
     ENORME     Normalizes the 3-vector a
     ENTREE     Gives module entrance plane
     EOWFAR     Distance to the nearest border
     EPERCE     Impacts on an ecal volume type
     EPLMST     Gives stack middle plane
     EPLNOR     Utility routine.
     EPLSCC     Linear scan in planes pencil
     EPLSCF     Linear scan in planes pencil.floating result.
     EPLSCN     Linear scan in planes pencil
     EPLSDI     Dichotomic plane search
     EPLSQF     Quasi linear search on planes,real result.
     EPLSQL     Quasi linear search on planes
     EPLST      Gets a weighted plane in a stack
     EPRCOM     Print ecal commons contents for database interface checks and debug
     EQEDGE     Check position  of one point wrt cracks, overlap, fwd hole
     ERDDAF     Ecaldes interface with daf
     EROGEN     Rotations mod. type -> slots
     EROSYS     Build local ref. system
     EROTPL     Applies the displacement tensor b to the projective form a
     EROTPT     Applies the displacement tensor b to the point a memorised in t to give c.
     ERPADS     Computes the area of the pad
     ERWIDT     Computes the height and width (at mid height) of the 45 storeys
     ESRBC      Computes storey "barycentre"
     ESRCR      Computes storey corners
     ESRCT      Computes storey contours
     ESRDIR     Real i,j gives theta,phi.
     ESRFC      Computes storey faces
     ESRPL      Gives planes limiting storey
     ESRPT      Real i,j,k gives x,y,z.
     ETETRD     Gives tetrad from x,v1,v2
     ETHRU      Impact on a volume.
     ETOUCH     Impact on a ecal volume.
     ETZSMD     Module sensitive zone
     ETZSSL     Slot sensitive zone in local or aleph system
     EVABSL     Gets the absorption length of a volume!
     EVDEDX     Gets the dedx of a volume!
     EVFOIS     Adequate matrix product.
     EVOLCR     Computes volume corners from the planes.
     EVOLCT     Computes volume contour.
     EVOLFC     Computes volume faces
     EVOLPL     Gets planes limiting volume.
     EVOLUM     Computes ecal volumes volume
     EVRADL     Gets the radiation length of a volume!
     EXPAND     Expands the data structure at initialisation
     EXPFRF     Extrapolate a pfrf type track to a cylinder.
     EXPNEC     Expands the data structure at initialisation
     EXRWRW     Extended row # --> physical row #
     VECT4      Computes a 4d euclidean x-product

3 ACOUPE
         SUBROUTINE ACOUPE(NPL,PL,SECTION,NCOINS,COINS)
  ------------------------------------------------------------------------------
    CKEY ECALDES SECTION AREA /USER
  ------------------------------------------------------------------------------
       H.Videau      creation   Juin 90
   Computes the contour of the section of a volume by a a plane
    This routine computes the section of a convex volume
    given by its NPL limiting planes PL by a plane SECTION
     Input :
             NPL         number of planes  <= 10       INTEGER
             PL(4,NPL)   planes coefficients           REAL
             SECTION(4)  section plane coefficients    REAL
     Output:
             NCOINS,COINS(3,NCOINS)
     Calls: VECT4
     Called by USER, ERWIDT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ERWIDT                                                                          
   GXIMPA                                                                          
   GBIMPA                                                                          
        |---- ACOUPE                                                               
                   |----  VECT4                                                    
   
 
3 AIRE
         REAL FUNCTION AIRE(PLANE,LEPOIN,XFACE,YFACE,ZFACE)
  ------------------------------------------------------------------------------
    CKEY ECALDES POLYGON AREA / USER
  ------------------------------------------------------------------------------
       H.Videau      creation le 13/02/88
   Computes the area of a polygon on plane
    Computes the area of a convex polygon. The LEPOIN corners belong to a
    plane with coefficients PLANE. The sign of the area depends on the
    position of the origin with regard to the normal of the plane.
     Input :
             PLANE   4 coefficients of the plane
             LEPOIN  Number of corners
             XFACE,YFACE,ZFACE  3 coordinates of corners
     Output:
             AIRE
     Calls : none
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              AIRE  .                                                              
   
 
3 AIRSCT
           REAL FUNCTION AIRSCT(NPL,PL,SECTION)
  ------------------------------------------------------------------------------
    CKEY ECALDES SECTION AREA / USER
  ------------------------------------------------------------------------------
       H.Videau      creation   Juin 89
   Area of a polygon section
    This function computes the area of the section of a convex volume
    given by its NPL limiting planes PL by a plane SECTION
     Input :
             NPL         number of planes  <= 10       INTEGER
             PL(4,NPL)   planes coefficients           REAL
             SECTION(4)  section plane coefficients    REAL
     Output:
             AIRSCT
     Calls: VECT4
     Called by USER, ERPADS
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ERPADS                                                                          
        |---- AIRSCT                                                               
                   |----  VECT4                                                    
   
 
3 AVOLUM
         REAL FUNCTION AVOLUM(LEFACE,PLANES,PTRFCE,
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME / USER
  ------------------------------------------------------------------------------
        &     LEPOIN,XFACE,YFACE,ZFACE)
       H.Videau      creation le 13/02/88
   Computes volumes volume
    Computes the volume of a convex polyhedron.
    The LEPOIN points defining  the contour of the faces in
    their LEFACE planes are stored in XFACE,YFACE, ZFACE.
    PTRFCE contains LEFACE pointers on these arrays to the
    starting point of each face.
       This ugly definition is adopted to conform to the fortran binding
    of GKS for a fill area set.
      The ordering of the corners to build faces is such that the points
    go in the trigonometric sense around the normale to the plane.
     Input :
             LEFACE  number of faces
             PLANES  4 coefficients of the planes of the faces
             PTRFCE:  pointer
             LEPOIN:  number of points
             XFACE :  X of the point of the face
             YFACE :  Y of the point of the face
             ZFACE :  Z of the point of the face
     Output:
             AVOLUM volume
     Calls: none
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              AVOLUM.                                                              
   
 
3 EALGMK
         SUBROUTINE EALGMK(SC,MD,NMARKS,MARKS)
  ------------------------------------------------------------------------------
    CKEY ECALDES ALIGNMENT MARKS  / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      creation le 27/02/88           modifie le 04/11/88
   Gets the alignment marks
     Input :
             SC   subcomponent number
             MD   module number  (0 for module type)
     Output:
             NMARKS number of marks (mires) per module     INTEGER
             MARKS(3,NMARKS) the coordinates of the marks  REAL
     Calls: EROTPT
     Called by USER (alignement).
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EALGMK                                                               
                   |----  ESCOEQ                              External             
   
 
3 EALIGN
         SUBROUTINE EALIGN
  ------------------------------------------------------------------------------
    CKEY ECALDES ALIGNMENT MATRIX / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      creation le 15/12/85  modification le 04/03/91
   Fill alignment matrix
    This routine enters in EALIAM the displacement matrices from the
    EPHY bank. If EPHY NR =1 theoretical alignment, if NR = 2001
    alignment is taken from the february 91 analysis by HV.
    There is one matrix (4x4 ) per module in its slot: 36
     Input :
             none
     Output:
             Alignment matrix EALIAM
     Called by EDEFMD
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EALIGN                                                               
                   |----  EPHYLE                              External             
                   |----  EPHYAN                              External             
   
 
3 EALTMK
         SUBROUTINE EALTMK
  ------------------------------------------------------------------------------
    CKEY ECALDES ALIGNMENT MARKS  / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      creation le 5/12/88
   Sets the alignment marks in ealimp
    Rotates the marks given in EQTY at their position in EALIMP
     Calls: EROTPT
     Called by USER (alignement).
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EALTMK                                                               
                   |----  ESCOEQ                              External             
                   |----  EROTPT                                                   
                   |----  EALIMP                              External             
   
 
3 ECDFRD
         SUBROUTINE ECDFRD
  ------------------------------------------------------------------------------
    CKEY ECALDES EXPAND GEOMETRY INITIALISATION / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85      Modification 25/01/88
   Init. ecal geometry
    BE called by USER after ERDDAF.
    geometry for ECal .
    defines redundant relationships by product and inversion
    expands the content of the structure to make the access faster and
   
     Called by USER.
     Calls: EINVRL,EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECDFRD                                                               
                   |----  EINVRL                                                   
                   |----  EXPNEC                                                   
   
 
3 ECPLST
         SUBROUTINE ECPLST(IPLST)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE STACK RELATION / USER
  ------------------------------------------------------------------------------
    M.Rumpf                                   September 87
   Get relation plane stack
     Input : none
     Output:
             IPLST(I),I=1,45 contains 10*1,23*2,12*3
     Stack # = IPLST( plane #)
     Called by USER,EHSITW in GALEPH at init. time
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECPLST.                                                              
   
 
3 ECRWRG
         SUBROUTINE ECRWRG(RW,RG,MXCOL)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE ROW REGION / USER
  ------------------------------------------------------------------------------
    M.Rumpf          Creation 09/87      Modification H.Videau 01/88
   Row # -> region #,max columns
     Input :
             RW    row number in Theta  INTEGER
     Output:
             RG    region #   [1 -> 4]  INTEGER
             MXCOL number of column in region RG
     Called by USER and GALEPH
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAGRID                                                                          
   GAMPEK                                                                          
   GAMPEX                                                                          
        |---- ECRWRG                                                               
                   |----  EXRGER                              External             
   
 
3 ECSGEO
         SUBROUTINE ECSGEO(P,V,SC,MD)
  ------------------------------------------------------------------------------
    CKEY ECALDES SHOWER LOCAL SYSTEM GALEPH / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 12/11/86                M.Rumpf 03/19/87
   Computes shower system
     Input:
            P   Coordinates of new frame origin in Aleph system
            V   Vector along the new X axis in Aleph system
            SC  Subcomponent # containing P    INTEGER
            MD  Module #       containing P    INTEGER
    This routine is used in Galeph environment to compute shower system
   'GERBE' given shower origin and direction.
     Calls: EROSYS, ELOCAL
     Called by USER , EHSHOW in GALEPH
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECSGEO                                                               
                   |----  EROSYS                                                   
                   |----  ELOCAL                                                   
   
 
3 ECTILT
         REAL FUNCTION ECTILT(DUM)
  ------------------------------------------------------------------------------
    CKEY ECALDES TILT ANGLE / USER
  ------------------------------------------------------------------------------
   B.Bloch
   Get ecal tilt
     TILT = ECTILT(DUM)
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ECTILT.                                                              
   
 
3 ECYLND
            SUBROUTINE ECYLND(RCYL,ZCYL,POINT,VECT,IMPACT)
  ------------------------------------------------------------------------------
    CKEY ECALDES NEUTRAL IMPACT CYLINDER / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 10/12/88
   Impact of a neutral on a cylinder.
    This routine computes the impact of a sliding vector on a cylinder
    de revolution around oz with radius RCYL and half-height ZCYL
     Input :
             RCYL radius                           REAL
             ZCYL half_height                      REAL
             POINT origine of the sliding vector   REAL(3)
             VECT  vector                          REAL(3)
     Output:
             IMPACT point of impact                REAL(3)
     Calls: none
     Called by USER ,EPERCE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EPERCE                                                                          
   TRFIRE                                                                          
        |---- ECYLND                                                               
                   |----  SQRT                                External             
   
 
3 EDEFCL
         SUBROUTINE EDEFCL
  ------------------------------------------------------------------------------
    CKEY ECALDES COLUMNS INITIALISATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 30/01/88
                                                M.Rumpf   03/19/87
   Initialises column system
    Defines the column geometry in a module for the module-type, then
    applies the module displacement to get it in its slot.
    First generates points situated on the planes delimiting the columns
    in the module type frame. These contain ~ the z axis and are at
    deltaphi =  pi/(48*NRG) in region NRG
     Calls: EROTPL
     Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDEFCL                                                               
                   |----  FLOAT                               External             
                   |----  EREGLS                              External             
                   |----  TAN                                 External             
                   |----  VDOT                                External             
                   |----  EROTPL                                                   
                   |----  ETSCDM                              External             
                   |----  ESCOET                              External             
                   |----  EALICL                              External             
                   |----  EALIAM                              External             
   
 
3 EDEFEC
         SUBROUTINE EDEFEC
  ------------------------------------------------------------------------------
    CKEY ECALDES TILT ROTATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 23/01/88
   Defines ecal (tilt)
    Creates the displacement matrix ECALDM corresponding to the tilt of
    the electromagnetic calorimeter respective to Aleph system
    Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDEFEC                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 EDEFLG
         SUBROUTINE EDEFLG
  ------------------------------------------------------------------------------
    CKEY ECALDES ROW INITIALISATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 11/03/90
   Initialises rows system:
    Define row geometry in module_type then applies displacements
    for each module.
    Define region geometry
     Calls: EGPTLG
     Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDEFLG                                                               
                   |----  EGPTLG                                                   
                   |----  SQRT                                External             
                   |----  EXRGFR                              External             
                   |----  EROTPL                                                   
                   |----  ESCORR                              External             
                   |----  ETSCDM                              External             
                   |----  ESCOET                              External             
                   |----  EALIRW                              External             
                   |----  EALIAM                              External             
   
 
3 EDEFMD
         SUBROUTINE EDEFMD
  ------------------------------------------------------------------------------
    CKEY ECALDES MODULE INITIALISATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 26/01/88
   Initialises module system
    In this routine the modules are defined as angular sectors of pi/6
    in their theoretical position. We consider that an actual module can
    never gets out of its sector by an alignment mistake. The 12 sector
    make a partition of the complete space.
    The fine definition is given by the column, row, plane, stack
    description or by the sensitive zone of the module: ETZSMD
     Calls: EROGEN,EROTPL.
     Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDEFMD                                                               
                   |----  EROGEN                                                   
                   |----  EROTPL                                                   
                   |----  ESCOMD                              External             
                   |----  ETSCDM                              External             
                   |----  ESCOET                              External             
                   |----  FLOAT                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  VDOT                                External             
   
 
3 EDEFSC
         SUBROUTINE EDEFSC
  ------------------------------------------------------------------------------
    CKEY ECALDES SUBCOMPONENT INITIALISATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 26/01/88
   Defines sub components geometry:
                   end cap 1   z>0  SC=1
                   Barrel           SC=2
                   end cap 2   z<0  SC=3
    The numbering of the sub components follows theta
    We create the displacement matrices corresponding to the position
    of the subcomponents in the calorimeter frame: ETSCDM
     Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDEFSC                                                               
                   |----  COS                                 External             
                   |----  ETSCAF                              External             
                   |----  SIN                                 External             
   
 
3 EDEFSP
         SUBROUTINE EDEFSP
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE STACK  INITIALISATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 26/01/88
   Defines stacks and planes geometry .
    We assume that the stack and plane structure is identical in all the
    modules of a same subcomponent.
    Planes and stack geometry is first defined in module_type for each
    subcomponent,then placed in ALEPH system.
    The reference frame for stacks and planes in a module depends on
    the subcomponent.
    We make use explicitly of the fact that the number of modules is
    the same in the different subcomponents.
     Calls: EGPTSP, EROTPL
     Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDEFSP                                                               
                   |----  ESCOS1                              External             
                   |----  ESCOS2                              External             
                   |----  EGPTSP                                                   
                   |----  VDOT                                External             
                   |----  EROTPL                                                   
                   |----  ETSCDM                              External             
                   |----  ESCOET                              External             
                   |----  EALIPL                              External             
                   |----  EALIAM                              External             
   
 
3 EDEFSS
         SUBROUTINE EDEFSS
  ------------------------------------------------------------------------------
    CKEY ECALDES SECTOR ENDCAP INITIALISATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 31/12/85   Modification 30/01/86
                                           M.Rumpf     03/19/87
   Defines the sector geometry in the module-type,
    then puts it in place for each slot.
     Calls: EROTPL
     Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDEFSS                                                               
                   |----  EROTPL                                                   
                   |----  ESCOET                              External             
                   |----  ETSCDM                              External             
                   |----  EALISE                              External             
                   |----  EALIAM                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 EDISGN
         SUBROUTINE EDISGN
  ------------------------------------------------------------------------------
    CKEY ECALDES ROTATION MATRIX / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/05/87   Modification 26/01/88
   Rotations matrices
    routine computes the product of the matrices corresponding
    the setting of the calorimeter in Aleph : ECALDM
    the setting of the subcomponents in the calorimeter: ETSCDM,EECBD
    the setting of the modules in the subcomponents: EMODDM
    the alignmemt of the modules in their slots: EALIAM
     Calls: EVFOIS
     Called by EXPNEC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- EDISGN                                                               
                   |----  ESCOET                              External             
                   |----  EVFOIS                                                   
                   |----  ECALDM                              External             
                   |----  ETSCDM                              External             
                   |----  EALIAM                              External             
                   |----  EALITD                              External             
   
 
3 EFNCRS
         SUBROUTINE EFNCRS(X,CL,RW,ST,WRONG)
  ------------------------------------------------------------------------------
    CKEY ECALDES POINT COLUMN ROW STACK / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 23/10/87   Modification 14/03/90
   Finds column, row and stack floating numbers
    Looks for the column,the row and the stack containing the point X.
    Interpolates between the limiting planes to get a REAL position
    The pathological storeys are not taken into account.
    We check that the point is correct by calling ETZSMD.
     Input :
             X       point coordinates in  the Aleph system
     Output:
             CL    column number   i      REAL
             RW    row   number    j      REAL
             ST    stack number    k      REAL
             WRONG flag                   CHARACTER *16
                                   CORRECT
                                   SUBCOMPONENT
                                   MODULE
                                   ZONE
                                   REGION
                                   COLUMN
                                   ROW
                                   STACK
     Calls: EPLSCC,EPLSCN,EPLSCF,EPLSQF,ETZSMD
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBTRAN                                                                          
        |---- EFNCRS                                                               
                   |----  EPLSCC                                                   
                   |----  ESCOMD                              External             
                   |----  EMODPC                              External             
                   |----  ETZSMD                                                   
                   |----  EPLSCN                                                   
                   |----  EALIRW                              External             
                   |----  EXRGER                              External             
                   |----  EPLSCF                                                   
                   |----  EALICL                              External             
                   |----  NINT                                External             
                   |----  ESCOCF                              External             
                   |----  ESCOLS                              External             
                   |----  ESCOFR                              External             
                   |----  EPLSQF                                                   
                   |----  EXROPC                              External             
                   |----  ESCORF                              External             
                   |----  EALIPL                              External             
                   |----  ESSCPC                              External             
                   |----  ESSCPS                              External             
                   |----  FLOAT                               External             
   
 
3 EFNDCL
         INTEGER FUNCTION EFNDCL(SC,MD,X,SYSTM)
  ------------------------------------------------------------------------------
    CKEY ECALDES COLUMN / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 04.02/88
   Finds column number
    Looks for the column containing the point X in the module MD of
    the subcomponent SC.
     If the module number is wrong or if there is some discrepancy
    between the module limits and the column limits ( precision or
    alignement) EFNDCL can correspond to a column outside (by 1) the
    module.
     Input :
             SC      sub component #           INTEGER
             MD      module #                  INTEGER
             X       point coordinates in      REAL(3)
             SYSTM   coordinate system name    CHARACTER * 5
                     ('ALEPH' for example)
     Output:
             EFNDCL  column index 1<= EFNDCL<= 384
     Calls: EPLSQL,EFNDRG
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBSLIM                                                                          
        |---- EFNDCL                                                               
                   |----  EFNDRG                                                   
                   |----  EPLSQL                                                   
                   |----  EALICL                              External             
                   |----  ELOCCL                              External             
                   |----  NINT                                External             
                   |----  ESCOCF                              External             
   
 
3 EFNDLG
         INTEGER FUNCTION EFNDLG(SC,MD,X,SYSTM)
  ------------------------------------------------------------------------------
    CKEY ECALDES ROW / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 06/03/90
   Finds row number
    Looks for the row of the module MD in the sub-component SC
    in which the point DX is located.
     Input :
             SC      sub component #              INTEGER
             MD      module #                     INTEGER
             X       point coordinates in SYSTM   REAL(3)
             SYSTM   coordinate system name       CHARACTER*5
                     ('ALEPH' for example)
     Output:
             EFNDLG  Row  index 1<= EFNDLG<= 228  INTEGER
     Calls: EPLSQL,EFNDSS.
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBSLIM                                                                          
        |---- EFNDLG                                                               
                   |----  ESCOLS                              External             
                   |----  ESCOFR                              External             
                   |----  EFNDSS                                                   
                   |----  EPLSQL                                                   
                   |----  EALIRW                              External             
                   |----  EXROPC                              External             
                   |----  ELOCRW                              External             
                   |----  ESCORF                              External             
                   |----  EPLNPS                              External             
                   |----  EFNDPL                                                   
   
 
3 EFNDMD
         INTEGER FUNCTION EFNDMD(SC,X)
  ------------------------------------------------------------------------------
    CKEY ECALDES MODULE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   modification 30/01/88
   Finds module number
    Looks for the module of the subcomponent SC containing the point X.
    We deliberately consider theoretical module slots such that a point i
    a subcomponent is always in one module and one only.
    We do not make a precise test of the module limits.
    This is done when looking for a plane, column, row, by calling
    the routine ETZSMD or checking with the planes limiting the volume
     Input :
              SC       subcomponent #            INTEGER
              X        point coordinates
     Output:
              EFNDMD   Module # 1<= EFNDMD <= 12 INTEGER
     Calls: EPLSCC.
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EMPACT                                                                          
   EPERCE                                                                          
   TRFIRE                                                                          
   EBCOSI                                                                          
   EBSLIM                                                                          
        |---- EFNDMD                                                               
                   |----  EPLSCC                                                   
                   |----  ESCOMD                              External             
                   |----  EMODPC                              External             
   
 
3 EFNDPL
         INTEGER FUNCTION EFNDPL(SC,MD,X,SYSTM)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 03/02/88
   Finds plane number
    Looks in the module MD of the subcomponent SC for the plane
    containing the point X.
     Input :
             SC      sub component #    integer
             MD      module #                  INTEGER
             X       point coordinates in      REAL(3)
             SYSTM  coordinate system name     CHARACTER * 5
                    ('ALEPH' for example)
     Output:
             EFNDPL  Plane #  1<= EFNDPL<= 45  INTEGER
     Calls: EPLSQL
     Called by USER    (EHTRKE,EHSHOW in GALEPH)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNDLG                                                                          
        |---- EFNDPL                                                               
                   |----  EPLSQL                                                   
                   |----  EALIPL                              External             
                   |----  EPSCPC                              External             
   
 
3 EFNDRG
         INTEGER FUNCTION EFNDRG(SC,MD,X,SYSTM)
  ------------------------------------------------------------------------------
    CKEY ECALDES REGION / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 04/01/86   Modification 04/02/88
   Finds region number
    Looks for the region of the module MD in the sub-component SC
    in which the point X is located.
     Input :
             SC      sub component #         INTEGER
             MD      module #                INTEGER
             X       point coordinates in    REAL(3)
             SYSTM   coordinate system name  CHARACTER * 5
                    ('ALEPH' for example)
     Output:
             EFNDRG  Region#  1<= EFNDRG<= 4 INTEGER
     Calls: EPLSCN,EFNDSS.
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNDCL                                                                          
        |---- EFNDRG                                                               
                   |----  EFNDSS                                                   
                   |----  EPLSCN                                                   
                   |----  EALIRW                              External             
                   |----  ELOCRW                              External             
                   |----  EXRGER                              External             
   
 
3 EFNDSC
         INTEGER FUNCTION EFNDSC(X)
  ------------------------------------------------------------------------------
    CKEY ECALDES SUBCOMPONENT / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 15/12/85   modification 23/11/88
   Finds subcomponent number
    Looks for the sub-component of the calorimeter containing the
    point X. Returns zero if the point is out of zone.
     Input :
             X  point coordinates                         REAL(3)
     Output:
             EFNDSC : Sub component #    1<= EFNDSC <= 3  INTEGER
     Calls: none.
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EPERCE                                                                          
   TRFIRE                                                                          
   EBSLIM                                                                          
        |---- EFNDSC.                                                              
   
 
3 EFNDSS
         INTEGER FUNCTION EFNDSS(SC,MD,X,SYSTM)
  ------------------------------------------------------------------------------
    CKEY ECALDES SECTOR / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 31/12/85   Modification 30/01/88
   Finds (sub)sector number
    Looks in the module MD of the subcomponent SC for the
    subsector containing the point DX.
     Input :
             SC     sub component #             INTEGER
             MD     module #                    INTEGER
             X      point coordinates in        REAL(3)
             SYSTM  coordinate system name      CHARACTER * 5
             ('ALEPH' for example)
     Output:
             EFNDSS Subsector # 1<= EFNDSS<= 2  INTEGER
     Calls: none.
     Called by USER and EFNDLG
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNDLG                                                                          
   EFNDRG                                                                          
        |---- EFNDSS                                                               
                   |----  EALISE                              External             
                   |----  ELOCSE                              External             
   
 
3 EFNDST
         INTEGER FUNCTION EFNDST(SC,MD,X,SYSTM)
  ------------------------------------------------------------------------------
    CKEY ECALDES STACK / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 15/12/85   modification  6/06/88
   Finds stack number
    Looks in the module MD of the subcomponent SC for the
    stack containing the point X.
    If the point is outside a stack (in particular in the intermediate
    plates) ST is set to 0.
     Input :
             SC      sub component #                  INTEGER
             MD      module #          integer        INTEGER
             X       point coordinates in             REAL(3)
             SYSTM   coordinate system name           CHARACTER*5
                     ('ALEPH' for example)
     Output:
             EFNDST  Stack #    1<= EFNDST<= 3        INTEGER
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EFNDST                                                               
                   |----  EALIPL                              External             
                   |----  ESSCPC                              External             
                   |----  ESSCPS                              External             
   
 
3 EFNDTW
         SUBROUTINE EFNDTW(X,SYSTM,CL,RW,ST,SC,MD,PL,WRONG)
  ------------------------------------------------------------------------------
    CKEY ECALDES TOWER ROW COLUMN STACK / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 23/10/87   Modification 14/03/90
   Finds column, row and stack numbers
    Looks for the column,the row and the stack containing the point X.
     Input :
             X       point coordinates in the Aleph system  REAL
             SYSTM   defines the reference system (not implemented yet)
                                          CHARACTER*5
     Output:
             SC    subcomponent number    INTEGER
             MD    module number          INTEGER
             CL    column number   i      INTEGER
             RW    row   number    j      INTEGER
             ST    stack number    k      INTEGER
             PL    plane number           INTEGER
             WRONG character flag  :      CHARACTER*16
                                   CORRECT
                                   SUBCOMPONENT
                                   MODULE
                                   REGION
                                   COLUMN
                                   PLANE
                                   ROW
                                   STACK
   ACHTUNG!!! the notion of i and j is different in Ecal and Hcal
    parameter is CHARACTER in Ecal and INTEGER in Hcal
     Calls: EPLSCC,EPLSCN, EPLSQL
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EQEDGE                                                                          
   TRFIRE                                                                          
   EBCDRG                                                                          
        |---- EFNDTW                                                               
                   |----  EPLSCC                                                   
                   |----  ESCOMD                              External             
                   |----  EMODPC                              External             
                   |----  EPLSCN                                                   
                   |----  EALIRW                              External             
                   |----  EXRGER                              External             
                   |----  EPLSQL                                                   
                   |----  EALICL                              External             
                   |----  NINT                                External             
                   |----  ESCOCF                              External             
                   |----  EALIPL                              External             
                   |----  EPSCPC                              External             
                   |----  ESCOLS                              External             
                   |----  ESCOFR                              External             
                   |----  EXROPC                              External             
                   |----  ESCORF                              External             
                   |----  EPLNPS                              External             
                   |----  MIN                                 External             
                   |----  MAX                                 External             
                   |----  ESSCPS                              External             
   
 
3 EFNICR
         SUBROUTINE EFNICR(X,CL,RW,ST,WRONG)
  ------------------------------------------------------------------------------
    CKEY ECALDES TOWER ROW COLUMN STACK / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 23/11/88   Modification 14/03/90
   Finds column, row and stack floating numbers
    Looks for the column,the row and the stack containing the point X.
    Interpolates between the limiting planes to get a REAL position
    The pathological storeys are not taken into account.
    We check that the point is correct by calling ETZSMD.
     Input :
             X       point coordinates in  the Aleph system
     Output: CL    column number   i      REAL
             RW    row   number    j      REAL
             ST    stack number    k      REAL
             WRONG error flag      :      INTEGER
                                       0  CORRECT
                                       1  wrong SUBCOMPONENT
                                       2  wrong MODULE
                                       3  wrong REGION
                                       4  wrong COLUMN
                                       6  wrong ROW
                                       7  wrong STACK
                                       8  wrong ZONE
     Calls: EPLSCC,EPLSCN,EPLSCF,EPLSQF,ETZSMD
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EFNICR                                                               
                   |----  EPLSCC                                                   
                   |----  ESCOMD                              External             
                   |----  EMODPC                              External             
                   |----  ETZSMD                                                   
                   |----  EPLSCN                                                   
                   |----  EALIRW                              External             
                   |----  EXRGER                              External             
                   |----  EPLSCF                                                   
                   |----  EALICL                              External             
                   |----  NINT                                External             
                   |----  ESCOCF                              External             
                   |----  ESCOLS                              External             
                   |----  ESCOFR                              External             
                   |----  EPLSQF                                                   
                   |----  EXROPC                              External             
                   |----  ESCORF                              External             
                   |----  EALIPL                              External             
                   |----  ESSCPC                              External             
                   |----  ESSCPS                              External             
                   |----  FLOAT                               External             
   
 
3 EFNITW
         SUBROUTINE EFNITW(X,SYSTM,CL,RW,ST,SC,MD,PL,WRONG)
  ------------------------------------------------------------------------------
    CKEY ECALDES TOWER ROW COLUMN STACK / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 24/11/88      Modification 14/03/90
   Finds column, row and stack numbers
    The same routine as EFNDTW except the wrong flag which is here an
    integer
    Looks for the column,the row and the stack containing the point X.
     Input :
             X       point coordinates in the Aleph system  REAL
             SYSTM   the reference system (not implemented) CHARACTER*5
     Output:
             SC    subcomponent number    INTEGER
             MD    module number          INTEGER
             CL    column number   i      INTEGER
             RW    row   number    j      INTEGER
             ST    stack number    k      INTEGER
             PL    plane number           INTEGER
             WRONG error flag :           INTEGER
                                        0  CORRECT
                                        1  wrong SUBCOMPONENT
                                        2  wrong MODULE
                                        3  wrong REGION
                                        4  wrong COLUMN
                                        5  wrong PLANE
                                        6  wrong ROW
                                        7  wrong STACK
   ACHTUNG!!! the notion of i and j is different in Ecal and Hcal
     Calls: EPLSCC,EPLSCN, EPLSQL
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EFNITW                                                               
                   |----  EPLSCC                                                   
                   |----  ESCOMD                              External             
                   |----  EMODPC                              External             
                   |----  EPLSCN                                                   
                   |----  EALIRW                              External             
                   |----  EXRGER                              External             
                   |----  EPLSQL                                                   
                   |----  EALICL                              External             
                   |----  NINT                                External             
                   |----  ESCOCF                              External             
                   |----  EALIPL                              External             
                   |----  EPSCPC                              External             
                   |----  ESCOLS                              External             
                   |----  ESCOFR                              External             
                   |----  EXROPC                              External             
                   |----  ESCORF                              External             
                   |----  EPLNPS                              External             
                   |----  MIN                                 External             
                   |----  MAX                                 External             
                   |----  ESSCPS                              External             
   
 
3 EFNLAY
         INTEGER FUNCTION EFNLAY(SC,MD,X,SYSTM,INSTK)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE SENSITIVE LIMITS / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 10/10/88
   Finds plane number (in sensitive zone)
    Looks in the module MD of the subcomponent SC for the plane
    containing the point X.
    If the point is outside the sensitive zone of the module it returns 0
     Input :
             SC      sub component #                 INTEGER
             MD      module #                        INTEGER
             X       point coordinates in            REAL(3)
             SYSTM  coordinate system name           CHARACTER*5
                    ('ALEPH' for example)
     Output:
             EFNLAY  Plane #  1<= EFNLAY<= 45        INTEGER
                             if in sensitive zone of the module
                             if not EFNLAY = 0
             INSTK  specifies if the point is in the stacks (.TRUE.)
                                or in the interstack layers (.FALSE.)
     Calls: EPLSQL .
     Called by USER    (EHTRKE,EHSHOW in the MC)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EFNLAY                                                               
                   |----  EPLSQL                                                   
                   |----  EALIPL                              External             
                   |----  EPSCPC                              External             
                   |----  EALILP                              External             
                   |----  ELOCLP                              External             
   
 
3 EGPTLG
         SUBROUTINE EGPTLG(PTLG)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE LIMITS ROW / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 11/03/90
   Gen. points on row limit planes
    Generates points situated on the planes delimiting the rows
    ~theta = constant.  This is done for the module types in their
    construction position. The points are in the y,z plane.
    theoretical values are then calculated to take care of the
    thickness of the petals: the end cap points are trans-
    to the back of the modules.
     Calls: EGTLNF
     Called by EDEFLG (Internal)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EDEFLG                                                                          
        |---- EGPTLG                                                               
                   |----  ALOG                                External             
                   |----  SQRT                                External             
                   |----  EGTLNF                                                   
                   |----  COS                                 External             
                   |----  ESCOLS                              External             
                   |----  ESCOFR                              External             
                   |----  FLOAT                               External             
                   |----  SINH                                External             
   
 
3 EGPTSP
         SUBROUTINE EGPTSP(PTSTI,PTSTS,PTPL)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE LIMITS STACK  / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      creation 16/09/87   modification 26/01/88
   Gets points on stack and plane planes
    This routine
       searches for the stack volumes by name = VOLNAM
       picks the plane coefficients related to this volume
       chooses the front and end planes.
       constructs points by projecting on them the origin. PTSTI,PTSTS
       derives the pitches by dividing the stack thickness by the plane
       number.   ESTYPP
       constructs points on the planes by adding pitches to the stack
       points.  PTPL
     Input :
             none
     Output:
             PTSTS(ECALLS,ECALST,ECALSC)                  4, 3,3
             PTSTI(ECALLS,ECALST,ECALSC)                  4, 3,3
             PTPL (ECALLS,ECALPL+1,ECALSC)                4,46,3
     Calls  EVOLPL
     Called by EDEFSP
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EDEFSP                                                                          
        |---- EGPTSP                                                               
                   |----  EVOLPL                                                   
   
 
3 EGTLNF
         SUBROUTINE EGTLNF(PLANNM,PLAN)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE ELNF / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 02/02/88
   Gets a plane from elnf by its name
     Input :
             PLANNM    name of the plane
     Output:
             PLAN      the 4 coefficients of the plane
     Calls: none
     Called by USER ,EGPTLG
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EGPTLG                                                                          
        |---- EGTLNF.                                                              
   
 
3 EHSIMT
         SUBROUTINE EHSIMT(X,V,S,SC,MD,NMGTR,
  ------------------------------------------------------------------------------
    CKEY ECALDES CUT TRACK GALEPH / INTERNAL
  ------------------------------------------------------------------------------
        &                    NGTR,XD,XF,VS,SS,PL)
       H.Videau      Creation 15/12/85   Modification 8/09/89
   Cuts long track element
    This routine simulates GAZ TRACK ELEMENTS by slicing in
      (NGTR<NMGTR) pieces a long track element
   
      The long Track Element is defined by sub component SC   (integer)
                                           module        MD   (integer)
                                           origine       X(3)
                                           direction     V(3)
                                           length        S
     Output:
     The Gaz Track elements are defined by their plane       PL (integer)
                                           their origine     XD(3)
                                           their extremities XF(3)
                                           their direction   VS(3)
                                           their length      SS
     Calls: EPLSCN
     Called by EHTRKE in GALEPH if ECAL Run Condition TCUTRK on.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EHSIMT                                                               
                   |----  ENORME                                                   
                   |----  EPLSQL                                                   
                   |----  EALIPL                              External             
                   |----  EPSCPC                              External             
                   |----  MIN                                 External             
                   |----  MAX                                 External             
   
 
3 EINTST
         LOGICAL FUNCTION EINTST (XRW,CL,ST)
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY ROW STACK COLUMN / USER
  ------------------------------------------------------------------------------
     M.Rumpf                June 87
                                    Modification H.Videau  Fevrier 88
   Checks storey address validity
     Input :
              XRW   row # (soft)  related to Theta   integer
              CL    column #      related to Phi     integer
              ST    stack #                          integer
     Output:
        if input arguments within validity range then  EINTST = .TRUE.
        else  EINTST = .FALSE.
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EQEDGE                                                                          
   GXMCLM                                                                          
   CLMOMS                                                                          
        |---- EINTST                                                               
                   |----  EPLNPS                              External             
                   |----  EXRGER                              External             
   
 
3 EINVRL
         SUBROUTINE EINVRL
  ------------------------------------------------------------------------------
    CKEY ECALDES INVERT RELATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/01/88    Modification  14/03/90
   Inverts some relationships
     Called by ECDFRD.
     Calls: none
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECDFRD                                                                          
        |---- EINVRL                                                               
                   |----  EVLFEV                              External             
                   |----  ECNCET                              External             
                   |----  EFACET                              External             
   
 
3 ELIMIN
         SUBROUTINE ELIMIN
  ------------------------------------------------------------------------------
    CKEY ECALDES MODULE SENSITIVE LIMIT / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 17/08/86   Modification 26/01/88
   Defines modules sensitive limits               m.rumpf  03/19/87
    the limiting planes for the sensitive regions of the
   12 modules of the 3 subcomponents.
     Calls: EVOLPL
     Called by EXPNEC. (Internal)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EXPAND                                                                          
   EXPNEC                                                                          
        |---- ELIMIN                                                               
                   |----  EVOLPL                                                   
                   |----  EALILP                              External             
   
 
3 ELIMRG
         SUBROUTINE ELIMRG (XRG,XRWFR,XRWLS)
  ------------------------------------------------------------------------------
    CKEY ECALDES ROW REGION LIMIT /USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 03/03/89  Modification 14/03/90
   Get rows limiting region
     Input :
             XRG   extended region number (1->7)
     Output: XRWINF first row of the region XRG
             XRWSUP last  row of the region XRG
     Called by USER
    be used at initialisation only..
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ELIMRG                                                               
                   |----  EXRGFR                              External             
                   |----  EXRGLS                              External             
   
 
3 ELIMSC
         SUBROUTINE ELIMSC (ZA,ZB)
  ------------------------------------------------------------------------------
    CKEY ECALDES SUBCOMPONENT PLANE LIMIT / USER
  ------------------------------------------------------------------------------
    M.Rumpf                                   September 87
   Get subcomp. z limiting planes
     Input :
             none
     Output:
             ZA,ZB
      All points in Barrel have a Z coord : ZB < Z < ZA
      All points in End cap A have a Z coord  : Z > ZA > 0
      All points in End cap B have a Z coord  : Z < ZB < 0
    Can be used to compute quickly Sub Comp # knowing z coord of a
    point IN ALEPH general system.
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ELIMSC.                                                              
   
 
3 ELIMST
         REAL FUNCTION ELIMST(ST,COTE)
  ------------------------------------------------------------------------------
    CKEY ECALDES STACK BOUNDARY / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 02/05/86   Modification 05/02/88
   Finds stack boundary
    Gives the distance along the direction of the shower of the origine
    of the shower to the inferior or superior (as selected by COTE)
    boundary in depth of the stack designed by ST (unit CM)
    It uses the fact that the boundaries have been previously defined
    in the coordinate system of the shower by the routine ECSGEO. The
    direction of the shower is then along the x axis and if we note t
    equation of the boundary plane by ax+by+cz+d=0 the distance of th
    origin to the plane is -d/a
     Input :
             ST    Stack # for which boundary is searched (1,2,3) integer
             COTE    'INF' or 'SUP'
     Output:
             ELIMST  Distance along shower axis to the required
                     boundary of stack ST
     Calls: none
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ELIMST                                                               
                   |----  ESSCPC                              External             
                   |----  ESSCPS                              External             
   
 
3 ELOCAL
         SUBROUTINE ELOCAL(ROSE,SC,MD)
  ------------------------------------------------------------------------------
    CKEY ECALDES LOCAL SYSTEM  / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 23/12/85
                                                   M.Rumpf  03/19/87
   Defines local system
    This routine computes the reference planes for the planes,columns and
    rows of a given module (MD) in a given sub-component (SC) in the
    system defined by the displacement matrix ROSE.
     Input :
             MD    module #          integer
             SC    sub component #   integer
             ROSE   displacement matrix  (ECALLS*ECALLS) which can be
                    filled by EROSYS
     Output:
             result stored in comdeck ELOC
     Calls: EROTPL
     Called by USER ,ECSGEO (MC),ESHGEO
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECSGEO                                                                          
        |---- ELOCAL                                                               
                   |----  EROTPL                                                   
                   |----  ELOCLP                              External             
                   |----  EALILP                              External             
                   |----  ELOCSE                              External             
                   |----  EALISE                              External             
                   |----  EALIPL                              External             
                   |----  ELOCCL                              External             
                   |----  EALICL                              External             
                   |----  ELOCRW                              External             
                   |----  EALIRW                              External             
   
 
3 EMABSL
         REAL FUNCTION EMABSL(MATNAM)
  ------------------------------------------------------------------------------
    CKEY ECALDES ABSORPTION LENGTH / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 08/12/87
   Gets the absorption length of a material!
    This routine looks at the material with name MATNAM
     Input :
             MATNAM   the name of the material CH16
     Output:
             EMABSL  the absorption length     REAL
     Calls: none.
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EMABSL                                                               
                   |----  EMATAL                              External             
   
 
3 EMDEDX
         REAL FUNCTION EMDEDX(MATNAM)
  ------------------------------------------------------------------------------
    CKEY ECALDES DEDX / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 08/12/87
   Gets the dedx of a material!
    This routine looks at the material with name MATNAM
     Input :
             MATNAM   the name of the volume CH16
     Output:
             EMDEDX  the DEDX  in GeV        REAL
     Calls: none.
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EMDEDX                                                               
                   |----  EMATAN                              External             
                   |----  EMATDE                              External             
   
 
3 EMDTOW
             SUBROUTINE EMDTOW(RW,CL,SC,MD,RG)
  ------------------------------------------------------------------------------
    CKEY ECALDES ROW COLUMN SUBCOMPONENT MODULE/ USER
  ------------------------------------------------------------------------------
       H.Videau      creation 23/03/89
   Get subc and module from row and column
     Input :
             RW  row number         INTEGER
             CL column number       INTEGER
     Output: SC subcomponent number INTEGER
             MD module number       INTEGER
             RG region number       INTEGER
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ERPADS                                                                          
   ARISTO                                                                          
   EBGRIX                                                                          
   ECETDI                                                                          
   GAMPEK                                                                          
   GAMPEX                                                                          
   VOISTO                                                                          
   EBGRID                                                                          
   EBOIDP                                                                          
   EBRGCD                                                                          
        |---- EMDTOW                                                               
                   |----  EXRGER                              External             
                   |----  FLOAT                               External             
                   |----  ESCOCF                              External             
   
 
3 EMPACT
         SUBROUTINE EMPACT(VV,NSC,PIN,POU)
  ------------------------------------------------------------------------------
    CKEY ECALDES NEUTRINO IMPACT / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 03/04/87   Modification 30/01/88
   Impacts of a neutrino.
    This routine computes the NSC*2 intersections of a straight line
    passing through the origin, having a direction defined by the
    3-vector V with the envelope of the sensitive part of the
    encountered modules.
     Input :
             V  direction
     Output:
             NSC  number of subcomponents touched <3
             PIN(ECALLS-1,NSC) entrance point
             POU(ECALLS-1,NSC) exit point
     Calls: none
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBSLIM                                                                          
        |---- EMPACT                                                               
                   |----  SQRT                                External             
                   |----  EFNDMD                                                   
                   |----  EALILP                              External             
                   |----  ABS                                 External             
                   |----  AMIN1                               External             
                   |----  AMAX1                               External             
   
 
3 EMRADL
         REAL FUNCTION EMRADL(MATNAM)
  ------------------------------------------------------------------------------
    CKEY ECALDES RADIATION LENGTH / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 08/12/87
   Gets the radiation length of a material!
    This routine looks at the material  with name MATNAM
     Input :
             MATNAM   the name of the volume CH16
     Output:
             EMRADL  the radiation length    REAL
     Calls: none.
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EMRADL                                                               
                   |----  EMATRL                              External             
   
 
3 ENORME
         SUBROUTINE ENORME(A)
  ------------------------------------------------------------------------------
    CKEY ECALDES VECTOR NORMALISATION / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 22/12/86   Modification 26/03/86
   Normalizes the 3-vector a
    Utility routine
     Calls: none
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EHSIMT                                                                          
   EROSYS                                                                          
   ESRDIR                                                                          
   ETETRD                                                                          
   ETHRU                                                                           
   ETOUCH                                                                          
        |---- ENORME                                                               
                   |----  SQRT                                External             
   
 
3 ENTREE
         SUBROUTINE ENTREE(SYSTM,SC,MD,PLAN)
  ------------------------------------------------------------------------------
    CKEY ECALDES MODULE ENTRANCE PLANE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 22/12/86   Modification 04/11/88
   Gives module entrance plane
    Give in PLAN the coefficients in the system defined by SYSTM ( ALEPH
    or LOCAL) of the  plane corresponding to the entrance of the module
    MD of the subcomponent SC of the electromagnetic calorimeter.
    If MD = 0 the module is the module type for the subcomponent.
     Input :
             SC,MD  integers
             SYSTM  ch5
     Output:
             PLAN dim 4
     Calls: none
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBCOSI                                                                          
        |---- ENTREE                                                               
                   |----  ESSCPC                              External             
                   |----  ESCOS1                              External             
                   |----  EALIPL                              External             
   
 
3 EOWFAR
         FUNCTION EOWFAR(POINT,LEPLAN,PLANES)
  ------------------------------------------------------------------------------
    CKEY ECALDES DISTANCE BORDER / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 09/09/87   Modification  09/09/87
   Distance to the nearest border
    Computes the shortest distance from the point POINT to the set of
    LEPLAN planes PLANES limiting the convex volume of interest.
    If LEPLAN is negative the point is outside.
     Input :
             POINT : point 3 coordinates
             LEPLAN: number of planes limiting the volume
             PLANES(4,LEPLAN): planes coefficients
     Output:
             EOWFAR : distance
    LEPLAN and PLANES can be computed with routine EVOLPL which needs
    only VOLume NAMe as input.
     Calls: none
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EOWFAR.                                                              
   
 
3 EPERCE
            SUBROUTINE EPERCE(P,V,TYPE,N,IMPACT,INSIDE)
  ------------------------------------------------------------------------------
    CKEY ECALDES IMPACT VOLUME TYPE / USER
  ------------------------------------------------------------------------------
       H Videau    decembre 88
   Impacts on an ecal volume type
    This routine computes the N impacts in the assigned volume
    type of a straight line coming from point P along vector V.
    Input :
            P   point               REAL(3)
            V   vector              REAL(3)
            TYPE volume type        CHARACTER*16
                  TYPE= 'sensitive','stack1','stack2','stack3',
                        'external'
    Output:
            N number of impacts  <5   INTEGER
            IMPACT points of impact   REAL(3,N)
            INSIDE flag               LOGICAL
                 .TRUE. if P inside volume
     Calls ECYLND, EFNDSC, EFNDMD, ETOUCH
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EPERCE                                                               
                   |----  ECYLND                                                   
                   |----  EFNDSC                                                   
                   |----  EFNDMD                                                   
                   |----  EVOLPL                                                   
                   |----  ETOUCH                                                   
   
 
3 EPLMST
         SUBROUTINE EPLMST(SYSTM,SC,MD,ST,PLAN)
  ------------------------------------------------------------------------------
    CKEY ECALDES STACK MIDDLE PLANE / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 25/10/86   modification 04/11/88
                                                     M.Rumpf   03/19/87
   Gives stack middle plane
    This routine returns in PLAN the equation of the mid plane of the
    stack ST in the module MD of the subcomponent SC.
    Le vecteur normal au plan est norme.
    mid plane veut dire plan bissecteur des deux plans limites de stacks
    This plane contains the barycentres of the storeys of the stack.
    If MD = 0 the module is the module type for the subcomponent.
     Input :
            SYSTM    coordinate system name (example 'ALEPH')   ch5
            SC       sub component #     integer
            MD       module  #              "
            ST       Stack #                "
     Output:
            PLAN      4 coefficients defining mid plane of the stack ST
     Calls: EPLNOR
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   DEFOVE                                                                          
   TRFIRE                                                                          
        |---- EPLMST                                                               
                   |----  ESSCPC                              External             
                   |----  ESSCPS                              External             
                   |----  EPLNOR                                                   
   
 
3 EPLNOR
         SUBROUTINE EPLNOR(PLAN)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE NORMALISATION /USER
  ------------------------------------------------------------------------------
       H.Videau      creation 25/10/86
   Utility routine.
    Cette routine normalise le plan PLAN de sorte que son vecteur normal
    soit unitaire.
     Input :
             PLAN  (4 coefficients)
     Output:
             PLAN  (4 coefficients a,b,c,d with a**2+b**2+c**2=1)
     Called by USER ,EPLST
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EPLMST                                                                          
   EPLST                                                                           
   ESRPL                                                                           
        |---- EPLNOR                                                               
                   |----  SQRT                                External             
   
 
3 EPLSCC
         INTEGER FUNCTION EPLSCC(PLAN,NPLANS,LISPL,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES CIRCULAR SCAN / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 29/05/89
   Linear scan in planes pencil
    Makes a linear scan through the planes of the pencil to determine
    the ones which are around the point.
     Calls: none
     Called internally
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNCRS                                                                          
   EFNDMD                                                                          
   EFNDTW                                                                          
   EFNICR                                                                          
   EFNITW                                                                          
        |---- EPLSCC.                                                              
   
 
3 EPLSCF
         REAL FUNCTION EPLSCF(PLAN,NPLANS,LISPL,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES LINEAR SCAN / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/10/87   Modification 04/02/88
   Linear scan in planes pencil.floating result.
    Makes a linear scan through the planes of the pencil to determine
    the ones which are around the point, then interpolates.
     Calls: none
     Called internally
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNCRS                                                                          
   EFNICR                                                                          
        |---- EPLSCF                                                               
                   |----  FLOAT                               External             
   
 
3 EPLSCN
         INTEGER FUNCTION EPLSCN(PLAN,NPLANS,LISPL,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES LINEAR SCAN  /INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification le 27/10/87
   Linear scan in planes pencil
    Makes a linear scan through the planes of the pencil to determine
    the ones which are around the point.
     Calls: none
     Called internally
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNCRS                                                                          
   EFNDRG                                                                          
   EFNDTW                                                                          
   EFNICR                                                                          
   EFNITW                                                                          
        |---- EPLSCN.                                                              
   
 
3 EPLSDI
         INTEGER FUNCTION EPLSDI(PLAN,NPLANS,LISPL,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES DICHOTOMIC SEARCH   /INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification le 27/12/85
   Dichotomic plane search
    Makes a dichotomic search among planes of a pencil to find the
    ones surrounding the point.
    Effectue une recherche dichotomique parmi les plans d'un faisceau
    pour determiner ceux qui encadrent le point.
    A n'utiliser que pour une suite monotone!
    To be used only for monotonic series!
     Calls: none
     Called internally
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EPLSDI                                                               
                   |----  ALOG                                External             
                   |----  FLOAT                               External             
   
 
3 EPLSQF
         REAL FUNCTION EPLSQF(PLAN,NPLANS,LISPL,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES QUASI LINEAR SEARCH / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/10/87   Modification 03/02/88
   Quasi linear search on planes,real result.
    Makes a quasi linear search through the planes of a pencil to find
    the ones surrounding the point,then interpolates.
    A n'utiliser que pour une suite monotone!
    To be used only for monotonic series!
    This is the fastest search of the three but the more restrictive.
     Calls: none
     Called internally
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNCRS                                                                          
   EFNICR                                                                          
        |---- EPLSQF                                                               
                   |----  INT                                 External             
                   |----  FLOAT                               External             
                   |----  IABS                                External             
   
 
3 EPLSQL
         INTEGER FUNCTION EPLSQL(PLAN,NPLANS,LISPL,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES QUASI LINEAR SEARCH / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification le 03/02/88
   Quasi linear search on planes
    Makes a quasi linear search through the planes of a pencil to find
    the ones surrounding the point.
    A n'utiliser que pour une suite monotone!
    To be used only for monotonic series!
    This is the fastest search of the three but the more restrictive.
     Calls: none
     Called internally
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNDCL                                                                          
   EFNDLG                                                                          
   EFNDPL                                                                          
   EFNDTW                                                                          
   EFNITW                                                                          
   EFNLAY                                                                          
   EHSIMT                                                                          
        |---- EPLSQL                                                               
                   |----  INT                                 External             
                   |----  FLOAT                               External             
                   |----  IABS                                External             
   
 
3 EPLST
         SUBROUTINE EPLST(SYSTM,SC,MD,ST,PLAN)
  ------------------------------------------------------------------------------
    CKEY ECALDES PLANE STACK / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 25/10/86   modification 04/11/88
   Gets a weighted plane in a stack
    This routine returns in PLAN the equation of a plane of the
    stack INT(ST) in the module MD of the subcomponent SC.
    The plane is the barycentre of the two stack limiting planes with
    weights 1.-FRACT(ST),  FRACT(ST) .
    If MD = 0 the module is the module type for the subcomponent.
    Le vecteur normal au plan est norme.
     Input :
            SYSTM    coordinate system name (example 'ALEPH') ch5
            SC       sub component #      integer
            MD       module  #            integer
            ST       Stack # ( real)
     Output:
            PLAN      4 coefficients defining plane of the stack ST
     Calls: EPLNOR
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ERPADS                                                                          
   TRFIRE                                                                          
        |---- EPLST                                                                
                   |----  INT                                 External             
                   |----  AMOD                                External             
                   |----  ESSCPC                              External             
                   |----  ESSCPS                              External             
                   |----  EPLNOR                                                   
   
 
3 EPRCOM
         SUBROUTINE EPRCOM (KEY)
  ------------------------------------------------------------------------------
    CKEY ECALDES PRINT COMMON / INTERNAL
  ------------------------------------------------------------------------------
       M.Rumpf            November 87     Modification H V 14/03/90
   Print ecal commons contents for database interface checks and debug
     Input : KEY character * 4
    KEY values  are :
        'ALL'   ,'EALI'  ,'EBPL'  ,'ECGN'  ,'ECMT'  ,'ECNC'  ,'ECOL'  ,
        'ECRP'  ,'EECB'  ,'EFAC'  ,'ELNF'  ,'ELOC'  ,'ELTY'  ,'EMAT'  ,
        'EMOD'  ,'EPHY'  ,'EPLN'  ,'EPSC'  ,'EPTY'  ,'EQTY'  ,'EREG'  ,
        'EROW'  ,'ESCO'  ,'ESEC'  ,'ESLO'  ,'ESSC'  ,'ESTK'  ,'ESTY'  ,
        'ETSC'  ,'ETYV'  ,'EVLF'  ,'EVLS'  ,'EVOL'  ,'EXRG'  ,'EXRO'
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EPRCOM                                                               
                   |----  FORMAT                              External             
                   |----  EALIAM                              External             
                   |----  EALITD                              External             
                   |----  EALIMP                              External             
                   |----  EALIPL                              External             
                   |----  EALISE                              External             
                   |----  EALICL                              External             
                   |----  EALIRW                              External             
                   |----  EALILP                              External             
                   |----  ECALDM                              External             
                   |----  ECRPP1                              External             
                   |----  EFACEF                              External             
                   |----  ELTYET                              External             
                   |----  EPLNPS                              External             
                   |----  EPSCPC                              External             
                   |----  EPTYFS                              External             
                   |----  EREGLS                              External             
                   |----  ESLOEA                              External             
                   |----  ETYVNG                              External             
                   |----  EVLSVL                              External             
   
 
3 EQEDGE
         INTEGER FUNCTION EQEDGE(XINE,DISTAN,PHIEDG)
  ------------------------------------------------------------------------------
    CKEY ECALDES CLUSTER CRACK OVERLAP / USER
  ------------------------------------------------------------------------------
       S.Loucatos     creation February 89
                                    H. Videau modification 14 mars 90
   Check position  of one point wrt cracks, overlap, fwd hole
    Can be used to check energy measurement of a cluster given by
    its barycentre coordinates.
     Input  :
              XINE(3) Point.
     Output: Quality flag for Energy meas/t:
              EQEDGE:      0     =  OK
                       bit 0 set = point in the phi crack
                       bit 1 set =   "    "  "  Overlap BL-EC
                       bit 2 set =   "    "  "  EC edge towards beam hole
                       bit 3 set =   "  outside EMCAL theta,phi range
              DISTAN: distance to the closest lateral edge   REAL
              PHIEDG: -1 if closest is phi inf               REAL
                       1 if closest is phi sup.
    This can be combined with the sign of the track and the sign of the
    field to know if the track is entering the module or getting out.
     Calls: EINTST,EFNDTW,EVOLPL
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EQEDGE                                                               
                   |----  EFNDTW                                                   
                   |----  EINTST                                                   
                   |----  EVOLPL                                                   
                   |----  ABS                                 External             
   
 
3 ERDDAF
         SUBROUTINE ERDDAF(LUNDAF,IRUN,IGOOD)
  ------------------------------------------------------------------------------
    CKEY ECALDES READ DAF BANKS / USER
  ------------------------------------------------------------------------------
       M.Rumpf        June  88      Modification H Videau 14/03/90
   Ecaldes interface with daf
    Fill ECALDES commons from direct access file.
     Input :
            LUNDAF Logical Unit for DAF
            IRUN   Run number
     Output:
            IGOOD (0 = error,  1 = OK)
     Called by USER program before ECDFRD
     Calls: ALGTDB                    from ALEPHLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ERDDAF                                                               
                   |----  ALGTDB                              External             
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
   
 
3 EROGEN
         SUBROUTINE EROGEN(ROTMD)
  ------------------------------------------------------------------------------
    CKEY ECALDES MODULE TYPE SLOTS / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 26/01/88
   Rotations mod. type -> slots
    Generates the theoretical rotations displacing the module type
    to the slot position for each subcomponent.
     Output:
             ROTMD rotation matrix for each slot
     Called by EDEFMD
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EDEFMD                                                                          
        |---- EROGEN                                                               
                   |----  FLOAT                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 EROSYS
         SUBROUTINE EROSYS(X,V,ROSE)
  ------------------------------------------------------------------------------
    CKEY ECALDES LOCAL SYSTEM / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 23/12/85
   Build local ref. system
    Constructs in ROSE a triad around V as first vector
    Adds the displacement X to make a projective tetrad.
     Input :
             X(3) : origin coordinates
             V    : direction at X
     Output:
             Local tetrad ROSE
     Called by ECSGEO in GALEPH
     Calls: ENORME,CROSS
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECSGEO                                                                          
        |---- EROSYS                                                               
                   |----  SQRT                                External             
                   |----  ENORME                                                   
                   |----  ABS                                 External             
                   |----  CROSS                               External             
   
 
3 EROTPL
         SUBROUTINE EROTPL(C,A,B)
  ------------------------------------------------------------------------------
    CKEY ECALDES TENSOR DISPLACEMENT / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification le 27/01/88
   Applies the displacement tensor b to the projective form a
    memorised in T to give C.
     Input :
             A (ECALLS)
             B (ECALLS,ECALLS)
     Output:
             C (ECALLS)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EDEFCL                                                                          
   EDEFLG                                                                          
   EDEFMD                                                                          
   EDEFSP                                                                          
   EDEFSS                                                                          
   ELOCAL                                                                          
        |---- EROTPL.                                                              
   
 
3 EROTPT
         SUBROUTINE EROTPT(C,A,B)
  ------------------------------------------------------------------------------
    CKEY ECALDES TENSOR DISPLACEMENT / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau      Creation 5/12/88
   Applies the displacement tensor b to the point a memorised in t to give c.
     Input :
             A (ECALLS-1)
             B (ECALLS,ECALLS)
     Output:
             C (ECALLS-1)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EALTMK                                                                          
        |---- EROTPT.                                                              
   
 
3 ERPADS
           REAL FUNCTION ERPADS(RW,CL,PL)
  ------------------------------------------------------------------------------
    CKEY ECALDES PAD AREA / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 01/06/89
   Computes the area of the pad
    It takes into account the limits of the sensitive zone of the module
    as well as the pathological barrel pads.
     Input :
             RW  row number      INTEGER
             CL  column number   INTEGER
             PL  plane number    INTEGER
     Calls: AIRSCT,ESRPL,EMDTOW,EPLST
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ERPADS                                                               
                   |----  FLOAT                               External             
                   |----  ESRPL                                                    
                   |----  EMDTOW                                                   
                   |----  EPLNPS                              External             
                   |----  EPLST                                                    
                   |----  EALILP                              External             
                   |----  AIRSCT                                                   
   
 
3 ERWIDT
         SUBROUTINE ERWIDT(LONG,LARGE)
  ------------------------------------------------------------------------------
    CKEY ECALDES SECTION AREA  / USER
  ------------------------------------------------------------------------------
       H.Videau      creation   Juin 90
   Computes the height and width (at mid height) of the 45 storeys
    stack 1, column 1, rows 1 to 45.
     Input : none
     Output:
             LONG(45) :  height    REAL
             LARGE(45):  width     REAL
     Calls: ESRBC, ESRPL, ACOUPE
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   DEFOVE                                                                          
        |---- ERWIDT                                                               
                   |----  ESRBC                                                    
                   |----  ESRPL                                                    
                   |----  ACOUPE                                                   
                   |----  SQRT                                External             
   
 
3 ESRBC
         SUBROUTINE ESRBC(SYSTM,RW,CL,ST,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY BARYCENTRE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/10/86   modification 08/02/88
   Computes storey "barycentre"
    Computes the barycentre of a storey (RW,CL,ST) in the system 'SYSTM'.
    It first gets the limiting planes, then computes the intersection
    of the bissector planes for each family. The relation plane>family
    is defined by the FMtoPL table.
     Input :
             SYSTM   coordinate system name ('ALEPH' for example)
             RW      row index of storey      integer
             CL      column index of storey   integer
             ST      stack #                  integer
     Output:
             POINT   3 coordinates of barycentre in SYSTM ref.system
     Calls: ESRPL, VECT4
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ERWIDT                                                                          
   GAMPEK                                                                          
   GAMPEX                                                                          
   GATRAL                                                                          
   GXIMPA                                                                          
   GXMCLM                                                                          
   MECRFC                                                                          
   CLMOMS                                                                          
   EBARYC                                                                          
   GBIMPA                                                                          
   GVERCR                                                                          
        |---- ESRBC                                                                
                   |----  ESRPL                                                    
                   |----  VECT4                                                    
   
 
3 ESRCR
         SUBROUTINE ESRCR(SYSTM,RW,CL,ST,LEPOIN,CORNER)
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY CORNERS / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/10/86   modification 08/02/88
   Computes storey corners
    Computes the LEPOIN corners of a storey (RW,CL,ST) in the 'SYSTM'.
    It first gets the limiting planes, then computes their intersection
    3 by 3 to get the corners. The relation plane>corner is defined
    by the type of the volume 'Storey'
     Input :
             SYSTM   coordinate system name     character*5
                     ('ALEPH' for example)
             RW      row index of storey        integer
             CL      column index of storey     integer
             ST      stack #                    integer
     Output:
             LEPOIN  Number of corners computed
             CORNER  3 coordinates of corners in SYSTEM ref. system
     Calls: ESRPL, VECT4
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ESRCT                                                                           
        |---- ESRCR                                                                
                   |----  ESRPL                                                    
                   |----  ETYVFR                              External             
                   |----  ETYVLR                              External             
                   |----  VECT4                                                    
                   |----  ECRPP1                              External             
   
 
3 ESRCT
         SUBROUTINE ESRCT(SYSTM,RW,CL,ST,LECON,XCONTR,YCONTR,ZCONTR)
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY CONTOUR / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 12/03/87   modification 08/02/88
   Computes storey contours
    Gets the LEPOIN corners of a storey (RW,CL,ST) in the system 'SYSTM'
    stores their coordinates in the arrays XCONTR,YCONTR,ZCONTR in such
    a way that the contour of the storey can be drawn in one go.
    The number of points is LECON.
    This ugly definition is adopted to conform to the fortran binding
    of GKS.Please read GKS notice if necessary.
    The ordering of the points is given by the relationship ECNC with
    the type of the volume "Storey".
     Input :
             SYSTM         reference system (character*5)
             RW,CL,ST      storey address   (Integers)
     Output:
             LECON         number of points in the contour
             XCONTR(LECON)      Max(LECON) = 16 in type 1
             YCONTR(LECON)
             ZCONTR(LECON)  contour points coordinates
     Calls: ESRCR
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ESRCT                                                                
                   |----  ESRCR                                                    
                   |----  ETYVFT                              External             
                   |----  ETYVLT                              External             
   
 
3 ESRDIR
         SUBROUTINE ESRDIR(RW,CL,THETA,PHI)
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY ADDRESS DIRECTION THETA PHI / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 30/01/90           Modification 14/02/90
   Real i,j gives theta,phi.
    Computes the theta and phi of the direction of the tower designated
    RW and CL interpolating the row and column numbers inside the tower
    To do that we look for the tower defined by:
       INT(RW) and INT(CL)) then the point is the intersection of the
    planes linear combinations of the limiting planes of the tower with
    weights  1.-FRACT(RW), FRACT(RW) and the same for CL.
     It is done in the Aleph system
    to get the direction of the centre of the tower
   (row=24,column=32) specify RW=24.5  and CL=32.5
     Input :
             RW    real :      row index of storey
             CL    real :      column index of storey
     Output:
             THETA   REAL  radians
             PHI     REAL  radians
     Calls: CROSS, ENORME
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ESRDIR                                                               
                   |----  INT                                 External             
                   |----  AMOD                                External             
                   |----  EXRGER                              External             
                   |----  FLOAT                               External             
                   |----  ESCOCF                              External             
                   |----  EALICL                              External             
                   |----  EXROPC                              External             
                   |----  EALIRW                              External             
                   |----  ENORME                                                   
                   |----  CROSS                               External             
                   |----  SQRT                                External             
                   |----  ACOS                                External             
                   |----  ATAN2                               External             
   
 
3 ESRFC
         SUBROUTINE ESRFC(SYSTM,RW,CL,ST,LEFACE,PLANES,PTRFCE,
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY FACES / USER
  ------------------------------------------------------------------------------
        &     LEPOIN,XFACE,YFACE,ZFACE)
       H.Videau      Creation 06/03/87   modification 08/02/88
   Computes storey faces
    Computes the faces of a storey given by its row, column and stack
    numbers ( RW, CL, ST). The coordinates are given in the frame
    'SYSTM'. We have LEFACE (<=8) faces, the coordinates of the face
    planes are given in PLANES(LSP,LEFACE). The LEPOIN points defining
    the contour of the faces in their planes are stored in XFACE,YFACE,
    ZFACE. PTRFCE contains LEFACE pointers on these arrays to the
    starting point of each face.
       This ugly definition is adopted to conform to the fortran binding
    of GKS for a fill area set.Please read GKS notice if not done!
    The planes limiting the storey are first computed, then the corners
    The points inside the storey (convex) have a positive power with
    respect to the plan equations except pathologic cases.
      The ordering of the corners to build faces is given by the relation
    EFAC according to the type. It is such that the points go in the
    trigonometric sense around the normale to the plane.
     Input :
             SYSTM              character*5
             RW,CL,ST           integers
     Output:
             LEFACE             integer
             PLANES(4,LEFACE)   real
             PTRFCE(LEFACE)     integer
     Calls: ESRPL, VECT4
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ESRFC                                                                
                   |----  ESRPL                                                    
                   |----  ETYVFR                              External             
                   |----  ETYVLR                              External             
                   |----  VECT4                                                    
                   |----  ECRPP1                              External             
                   |----  ETYVFF                              External             
                   |----  ETYVLF                              External             
                   |----  EFACEF                              External             
                   |----  ELTYET                              External             
   
 
3 ESRPL
         SUBROUTINE ESRPL(SYSTM,RW,CL,ST,LEPLAN,PLANES)
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY PLANE LIMIT / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 25/10/86   modification 14/03/90
   Gives planes limiting storey
    Gives the LEPLAN planes (8) limiting a storey (RW,CL,ST) in the
    system 'SYSTM'. They are given in the following order:
    stack plane interior, stack plane exterior
    row plane inferior, row plane superior in theta
     Input :
             SYSTEM           character*5
             RW,CL,ST         integer
     Output:
             LEPLAN           integer
             PLANES(4,8)      real
     Calls: EPLNOR
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ERPADS                                                                          
   ERWIDT                                                                          
   ESRBC                                                                           
   ESRCR                                                                           
   ESRFC                                                                           
   ESRPT                                                                           
   GXIMPA                                                                          
   GBIMPA                                                                          
        |---- ESRPL                                                                
                   |----  EXRGER                              External             
                   |----  FLOAT                               External             
                   |----  ESCOCF                              External             
                   |----  ESSCPC                              External             
                   |----  EALIPL                              External             
                   |----  ESSCPS                              External             
                   |----  EALICL                              External             
                   |----  EXROPC                              External             
                   |----  EALIRW                              External             
                   |----  ELOCCL                              External             
                   |----  ELOCRW                              External             
                   |----  EPLNOR                                                   
   
 
3 ESRPT
         SUBROUTINE ESRPT(SYSTM,RW,CL,ST,POINT)
  ------------------------------------------------------------------------------
    CKEY ECALDES STOREY ADDRESS POINT COORDINATES / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 30/03/87   modification 08/02/88
   Real i,j,k gives x,y,z.
    Computes the POINT in space (x,y,z) corresponding to the values
    RW,CL,ST interpolating the row,column and stack numbers.
    To do that we look for the storey defined by:
     INT(RW), INT(CL), INT(ST) then the point is the intersection of the
    planes linear combinations of the limiting planes of the storeys with
    weights  1.-FRACT(RW), FRACT(RW) and the same for CL AND ST.
    It first gets the limiting planes, then computes the intersection
    of the weighted planes for each family. The relation plane>family
    is defined by the FMtoPL table.
     Input :
           SYSTM character*5 coordinate system name  'ALEPH' for example
           RW    real :      row index of storey
           CL    real :      column index of storey
           ST    real :      stack #
     Output:  POINT   3 coordinates in SYSTM reference system
     Calls: ESRPL, VECT4
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GXIMPA                                                                          
   EBIMPA                                                                          
   EBRACK                                                                          
   GBIMPA                                                                          
        |---- ESRPT                                                                
                   |----  INT                                 External             
                   |----  AMOD                                External             
                   |----  ESRPL                                                    
                   |----  VECT4                                                    
   
 
3 ETETRD
         SUBROUTINE ETETRD(X,V1,V2,ROSE)
  ------------------------------------------------------------------------------
    CKEY ECALDES ORTHONORMED TETRAD / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 15/12/85   Modification 23/12/85
   Gives tetrad from x,v1,v2
    Constructs in ROSE an orthonormed triad around V1 as first vector
    with the (V1,V2)plane normal to the third axis.
    Adds the displacement X to make a projective tetrad.
     Calls: ENORME,CROSS
     Called by USER ,ECSGEO in GALEPH
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ETETRD                                                               
                   |----  ENORME                                                   
                   |----  CROSS                               External             
   
 
3 ETHRU
         SUBROUTINE ETHRU(POINT,V,LEPLAN,PLANES,LENGTH,IMPACT,OUTSID)
  ------------------------------------------------------------------------------
    CKEY ECALDES IMPACT STRAIGHT LINE VOLUME / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 09/09/87   Modification
   Impact on a volume.
    This routine computes the intersection of a straight line
    passing through the POINT, having a direction defined by the
    3-vector V with the convex volume limited by the LEPLAN PLANES.
    When the point is inside there is always one such intersection.
     Input :
             POINT(ECALLS-1)  origine of the vector           ECALLS-1=3
             V(ECALLS-1)  direction
             LEPLAN number of planes limiting the volume
             PLANES(ECALLS,LEPLAN) coefficients of the planes   ECALLS=4
     LEPLAN and PLANES can be computed with routine EVOLPL which
     needs only VOLume NAMe as input.
     Output:
             LENGTH  distance along the vector between the origin and
                     the impact
             IMPACT(ECALLS-1) point of impact
             OUTSID logical flag
                 OUTSID = .FALSE. when the point is inside the volume
     Calls: ENORME
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ETHRU                                                                
                   |----  ENORME                                                   
                   |----  ABS                                 External             
                   |----  AMAX1                               External             
   
 
3 ETOUCH
         SUBROUTINE ETOUCH(POINT,VV,LEPLAN,PLANES,IMPACT,RIEN,INSIDE)
  ------------------------------------------------------------------------------
    CKEY ECALDES IMPACT STRAIGHT LINE VOLUME / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation            Modification
   Impact on a ecal volume.
    This routine computes the intersection of a straight line
    passing through the POINT, having a direction defined by the
    3-vector V with the convex volume limited by the LEPLAN PLANES.
    When the point is inside there is always one such intersection.
    Input:
            POINT(ECALLS-1)  origine of the vector           ECALLS-1=3
            V(ECALLS-1)  direction
            LEPLAN number of planes limiting the volume
            PLANES(ECALLS,LEPLAN) coefficients of the planes   ECALLS=4
     LEPLAN and PLANES can be computed with routine EVOLPL which
     needs only VOLume NAMe as input.
     Output:
             IMPACT(ECALLS-1) point of impact
             INSIDE logical flag
                 INSIDE = .TRUE.  POINT is inside the volume
             RIEN logical flag
                 RIEN = .TRUE. when no point is found
     Calls: ENORME
     Called by USER ,EPERCE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EPERCE                                                                          
        |---- ETOUCH                                                               
                   |----  ENORME                                                   
                   |----  ABS                                 External             
                   |----  AMIN1                               External             
   
 
3 ETZSMD
         SUBROUTINE ETZSMD(X,SC,MD,NATZON,ZONE)
  ------------------------------------------------------------------------------
    CKEY ECALDES MODULE SENSITIVE ZONE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 17/08/86   Modification 01/12/86
   Module sensitive zone
    The sensitive part of a module is a convex volume delimited by a set
    of planes. Hence the linear forms corresponding to the planes can be
    defined such that there values on an inner point be positive. To
    classify the outer regions in the vicinity of the inside we consider
    that a point can be on the wrong side of:
       1 plane    face region
       2 planes   edge region
       3 planes   corner region
    The logical variable NATZON tells you if you are inside: .TRUE.
    or outside the module: .FALSE.
    We consider three ways to be outside: in Z, in R or in PHI.
    The three words of ZONE (INTEGER) tell you then where you are:
    Zone(1)= -1  the Z of your point is too small
              0  your point is inside
             +1  the Z of your point is too large
    Zone(2)= -1  the R of your point is too small
              0  your point is inside
             +1  the R of your point is too large
    Zone(3)= -1  the PHI of your point is too small
              0  your point is inside
             +1  the PHI of your point is too large
    Remark that for the endcaps Rout is defined by the OR of 3 planes
    that in the barrel Phineg and Phipos are defined by the OR of 2.
     Input :
             X(3)              real
             SC,MD             integers
     Output:
             NATZON            logical
             ZONE(3)           integer
    NOTE: a precise test of the interstack insensitive region is not done
    this routine.
    test in the case of a local system is still not implemented.
     Calls: none
     Called by USER ,EFNCRS ,EFNDTW.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EFNCRS                                                                          
   EFNICR                                                                          
        |---- ETZSMD                                                               
                   |----  EALILP                              External             
                   |----  EVLSZN                              External             
                   |----  EVLSVL                              External             
   
 
3 ETZSSL
         SUBROUTINE ETZSSL(SYSTM,X,SC,MD,NATZON,ZONE)
  ------------------------------------------------------------------------------
    CKEY ECALDES SLOT  SENSITIVE ZONE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 08/10/88
   Slot sensitive zone in local or aleph system
    The sensitive part of a module is a convex volume delimited by a set
    of planes. Hence the linear forms corresponding to the planes can be
    defined such that there values on an inner point be positive. To
    classify the outer regions in the vicinity of the inside we consider
    that a point can be on the wrong side of:
       1 plane    face region
       2 planes   edge region
       3 planes   corner region
    The logical variable NATZON tells you if you are inside: .TRUE.
    or outside the module: .FALSE.
    We consider three ways to be outside: in Z, in R or in PHI.
    The three words of ZONE (INTEGER) tell you then where you are:
    Zone(1)= -1  the Z of your point is too small
              0  your point is inside
             +1  the Z of your point is too large
    Zone(2)= -1  the R of your point is too small
              0  your point is inside
             +1  the R of your point is too large
    Zone(3)= -1  the PHI of your point is too small
              0  your point is inside
             +1  the PHI of your point is too large
    that for the endcaps Rout is defined by the OR of 3 planes
    that in the barrel Phineg and Phipos are defined by the OR of 2 pl
     Input :
             SYSTM   coordinate system name    character*5
                     ('ALEPH' for example)
             X       point coordinates         Real  X(3)
             SC      sub component #           integer
             MD      module #                  integer
     Output:
             NATZON                            logical
             ZONE(3)                           integer
    NOTE: a precise test of the interstack insensitive region is not done
    this routine.
    test in the case of a local system is implemented.
     Calls: none
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ETZSSL                                                               
                   |----  EALILP                              External             
                   |----  EVLSZN                              External             
                   |----  EVLSVL                              External             
                   |----  ELOCLP                              External             
   
 
3 EVABSL
         REAL FUNCTION EVABSL(VOLNAM)
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME ABSORPTION LENGTH / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 08/12/87
   Gets the absorption length of a volume!
    This routine looks at the material associated to the volume
    with name VOLNAM
     Input :
             VOLNAM   the name of the volume CH16
     Output:
             EVABSL  the absorption length    REAL
     Calls: none.
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EVABSL                                                               
                   |----  EMATAL                              External             
   
 
3 EVDEDX
         REAL FUNCTION EVDEDX(VOLNAM)
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME DEDX / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 08/12/87
   Gets the dedx of a volume!
    This routine looks at the material associated to the volume
    with name VOLNAM
     Input :
             VOLNAM   the name of the volume CH16
     Output:
             EVDEDX  the DEDX  in GeV        REAL
     Calls: none.
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EVDEDX                                                               
                   |----  EMATAN                              External             
                   |----  EMATDE                              External             
   
 
3 EVFOIS
         SUBROUTINE EVFOIS(A,B,C)
  ------------------------------------------------------------------------------
    CKEY ECALDES MATRIX PRODUCT / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 3/07/87    modification 3/07/87
   Adequate matrix product.
    routine computes the product of two matrices in the right
    and permitting one of the input argument to be the output.
     Input :
             A,B
     Output:
     Calls: none
     Called by EDISGN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EDISGN                                                                          
        |---- EVFOIS.                                                              
   
 
3 EVOLCR
         SUBROUTINE EVOLCR(VOLNAM,LEPLAN,PLANES,LEPOIN,CORNER)
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME CORNER PLANE / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 28/04/87   modification 8/04/87
   Computes volume corners from the planes.
    Computes the corners of a volume named VOLNAM for which the limiting
    planes are given in PLANES. There are LEPLAN planes and LEPOIN corne
    It computes the corners as intersection of the three planes related
    to that corner by the relationships ECRP to EFTY named
    ECRPP1, ECRPP2, ECRPP3.
     Input :
             VOLNAM   Name of the volume             character*16
             LEPLAN   Number of planes               integer
             PLANES   4 coefficients of the planes   real
     Output:
             LEPOIN  Number of corners computed
             CORNER  3 coordinates of corners in SYSTEM ref. system
     Calls: VECT4
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EVOLCR                                                               
                   |----  EVOLET                              External             
                   |----  VECT4                                                    
                   |----  ECRPP1                              External             
   
 
3 EVOLCT
         SUBROUTINE EVOLCT(VOLNAM,LEPLAN,PLANES,LECON,XCONTR,YCONTR,ZCONTR)
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME CONTOUR / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 15/06/87   modification 15/06/87
   Computes volume contour.
     Input :
             VOLNAM: name of the volume
             LEPLAN: number of planes
             PLANES: planes coefficients
     Output:
             XCONTR:  X of the point of the contour
             YCONTR:  y of the point of the contour
             ZCONTR:  z of the point of the contour
     Computes the LEPOIN corners of a volume with name VOLNAM from the
     LEPLAN planes which have been found previously by using EVOLPL
     or from a storage and stores their coordinates in the arrays XCONTR
   
    YCONTR, ZCONTR in such a way that the contour of the storey can be
    drawn in one go.The number of points is LECON.
    This ugly definition is adopted to conform to the fortran binding
    of GKS.
    The ordering of the points is given by the relationship ECNC.
     Calls: VECT4
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EVOLCT                                                               
                   |----  EVOLET                              External             
                   |----  VECT4                                                    
                   |----  ECRPP1                              External             
                   |----  ECNCET                              External             
   
 
3 EVOLFC
         SUBROUTINE EVOLFC(VOLNAM,LEFACE,PLANES,PTRFCE,
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME FACE / USER
  ------------------------------------------------------------------------------
        &     LEPOIN,XFACE,YFACE,ZFACE)
       H.Videau      creation 16/06/87   modification 16/06/87
   Computes volume faces
     Input :
             VOLNAM:  name of the volume
             LEFACE:  number of faces. (commonly 6 or 8)
             PLANES:  coefficients of the planes
     Output:
             PTRFCE:  pointer          (LEFACE+1)
             LEPOIN:  number of points
             XFACE :  X of the point of the face
             YFACE :  Y of the point of the face
             ZFACE :  Z of the point of the face
      Computes the faces of a volume named VOLNAM given its limiting
     PLANES. . The LEPOIN points defining  the contour of the faces in
     their planes are stored in XFACE,YFACE, ZFACE.
     PTRFCE contains LEFACE pointers on these arrays to the
     starting point of each face.
       This ugly definition is adopted to conform to the fortran binding
     of GKS for a fill area set.
     The ordering of the corners to build faces is such that the points
     go in the trigonometric sense around the normale to the plane.
     Calls: VECT4
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EVOLUM                                                                          
        |---- EVOLFC                                                               
                   |----  EVOLET                              External             
                   |----  VECT4                                                    
                   |----  ECRPP1                              External             
                   |----  EFACET                              External             
                   |----  EFACEF                              External             
                   |----  ELTYET                              External             
   
 
3 EVOLPL
         SUBROUTINE EVOLPL(VOLNAM,SC,MD,LEPLAN,PLANES)
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME PLANE LIMIT / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 28/04/87   modification le 26/01/88
   Gets planes limiting volume.
     Input :
             VOLNAM : name of the volume.     Ch16
             SC     : subcomponent number    integer
             MD     : module number          integer (can be 0)
     Output:
             LEPLAN : number of planes limiting the volume.
             PLANES : the 4 coefficients of the planes.Dimension (4,<=8)
    routine searches for the volume name = VOLNAM
       picks the plane coefficients related to this volume
       applies the corresponding sign to make the volume positive
       applies the rotation corresponding to the slot if MD.NE.0
     Calls: none.
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EGPTSP                                                                          
   ELIMIN                                                                          
   EPERCE                                                                          
   EQEDGE                                                                          
   EVOLUM                                                                          
   EBSLIM                                                                          
        |---- EVOLPL                                                               
                   |----  ESCOEQ                              External             
                   |----  EVOLLS                              External             
                   |----  EVOLFR                              External             
                   |----  EVLFEL                              External             
   
 
3 EVOLUM
         REAL FUNCTION EVOLUM(VOLNAM,SC)
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 13/02/88
   Computes ecal volumes volume
    Computes the volume of an ECAL volume given by its name VOLNAM,
    and its subcomponent SC.
     Input :
             VOLNAM  name                  ch16
             SC      subcomponent number   integer
     Output:
             EVOLUM
     Calls: EVOLFC, AVOLUM
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EVOLUM                                                               
                   |----  EVOLPL                                                   
                   |----  EVOLFC                                                   
   
 
3 EVRADL
         REAL FUNCTION EVRADL(VOLNAM)
  ------------------------------------------------------------------------------
    CKEY ECALDES VOLUME RADIATION LENGTH / USER
  ------------------------------------------------------------------------------
       H.Videau      creation 08/12/87
   Gets the radiation length of a volume!
    This routine looks at the material associated to the volume
    with name VOLNAM
     Input :
             VOLNAM   the name of the volume CH16
     Output:
             EVRADL  the radiation length    REAL
     Calls: none.
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBSLIM                                                                          
        |---- EVRADL                                                               
                   |----  EMATRL                              External             
   
 
3 EXPAND
         SUBROUTINE EXPAND
  ------------------------------------------------------------------------------
    CKEY ECALDES EXPAND DATA STRUCTURE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/01/88
   Expands the data structure at initialisation
     Called by ECDFRD.
     Calls: EDEFEC,EDEFSC,EDEFMD,EDEFSS,EALIGN,EDISGN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EXPAND                                                               
                   |----  EDEFEC                                                   
                   |----  EDEFSC                                                   
                   |----  EDEFMD                                                   
                   |----  EALIGN                                                   
                   |----  EDISGN                                                   
                   |----  EALTMK                                                   
                   |----  ELIMIN                                                   
                   |----  EDEFSS                                                   
                   |----  EDEFSP                                                   
                   |----  EDEFCL                                                   
                   |----  EDEFLG                                                   
   
 
3 EXPFRF
         SUBROUTINE EXPFRF( RCYL, ZCYL, P, Q, ICODE)
  ------------------------------------------------------------------------------
    CKEY ECALDES EXTRAPOLATE TRACK CYLINDER / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 01/03/89
       C. Mannert    16/03/98
                     Correct treatment of d0 sign
   Extrapolate a pfrf type track to a cylinder.
    to AUHCYL but takes as standard input a PFRF track.
    cylinder has its axis along Z, its radius is Rcyl and it is
    to + - Zcyl. If the radius is larger than the TPC inner
   , the multiple scattering is taken into account.
    If the radius is too small to reach the barrel, tries to get
    end plates; if the TanLamb is too small it does just one turn.
    Input:
          RCYL     Radius of cylinder       (cm)
          ZCYL     Half-length of cylinder. (cm)
          P(1) = Inverse radius
           (2) = Tangent Lambda
           (3) = Phi0
           (4) = D0
           (5) = Z0
           (6) = Alpha multiple scattering angle
     Output:
          Q(1) = x
           (2) = y      Coordinates at point of intersection
           (3) = z      with cylinder.
           (4) = px/pt
           (5) = py/pt    momentum at the intersection point
           (6) = pz/pt
          ICODE  = Return code (1 = intersection with cylinder
                                2     "          "   flat caps
                                0     "          not possible
     Calls: UNEWDP from ALEPHLIB
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
   TRFIRE                                                                          
        |---- EXPFRF                                                               
                   |----  UNEWDP                                                   
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  ABS                                 External             
                   |----  AMIN1                               External             
                   |----  AMAX1                               External             
                   |----  SIGN                                External             
                   |----  ACOS                                External             
   
 
3 EXPNEC
         SUBROUTINE EXPNEC
  ------------------------------------------------------------------------------
    CKEY ECALDES EXPAND DATA STRUCTURE / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/01/88
   Expands the data structure at initialisation
     Called by ECDFRD.
     Calls: EDEFEC,EDEFSC,EDEFMD,EDEFSS,EALIGN,EDISGN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECDFRD                                                                          
        |---- EXPNEC                                                               
                   |----  EDEFEC                                                   
                   |----  EDEFSC                                                   
                   |----  EDEFMD                                                   
                   |----  EALIGN                                                   
                   |----  EDISGN                                                   
                   |----  EALTMK                                                   
                   |----  ELIMIN                                                   
                   |----  EDEFSS                                                   
                   |----  EDEFSP                                                   
                   |----  EDEFCL                                                   
                   |----  EDEFLG                                                   
   
 
3 EXRWRW
         INTEGER FUNCTION EXRWRW(XRW)
  ------------------------------------------------------------------------------
    CKEY ECALDES ROW NUMBER / USER
  ------------------------------------------------------------------------------
       H.Videau      Creation 26/03/88
   Extended row # --> physical row #
     Input : XRW extended row number (integer)   [1,228]
     Output: EXRWRW       row number (integer)   [1,218]
     Called by USER.
     Calls: none
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EXRWRW.                                                              
   
 
3 VECT4
         SUBROUTINE VECT4(R,AA,BB,CC)
  ------------------------------------------------------------------------------
    CKEY ECALDES CROSS PRODUCT / INTERNAL
  ------------------------------------------------------------------------------
       H.Videau
   Computes a 4d euclidean x-product
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ACOUPE                                                                          
   AIRSCT                                                                          
   ESRBC                                                                           
   ESRCR                                                                           
   ESRFC                                                                           
   ESRPT                                                                           
   EVOLCR                                                                          
   EVOLCT                                                                          
   EVOLFC                                                                          
        |---- VECT4                                                                
                   |----  DBLE                                External             
   

2 EDIR

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     First deck in EDIR set
     ! Correction file 1 to ALEPHLIB 31.2
        Bug fixes for class 16 and 17 at LEP energy > 200. GeV
        ESWEH  : Raise cut on maximum LEP energy from 200. to 250. GeV (M.Cattaneo)
        SELENU : Raise cut on maximum wire energy from 200. to 250 GeV (M.Cattaneo)
        SELTRK : Raise cut on maximum LEP energy from 200. to 250. GeV (M.Cattaneo)
    
     ! ALEPHLIB 30.6
        SELEVT : fix variable type inconsistencies in function calls, 
                 for Linux                            (A.Waananen)
    
     ! ALEPHLIB 30.5 correction file 2
        SNGMTR : Remove CALL from function references, for Linux. (A.Waananen)
    
     ! ALEPHLIB 21.6
        CLAS24 - Bug fix: Gampec photons were not being looked for in bank PGAC,
                 where they have been since December 1994 (G.Ganis, 17/02/1997)
    
     ! ALEPHLIB 21.5
       CLAS24, LEPTO : protect against possibility of missing banks (M.Cattaneo)
       CLAS24,LEPTO,TRUSLU : Reject tracks with bad TRPFRF ret. code (M.Cattaneo)
    
     ! ALEPHLIB 21.4
       Major changes for LEP 2 EDIRS (R.Edgecock et al)
       Modified routines: ALSUMCL,CLAS24,ESWEH,LEPTO,MUTRGS,PHEDIR,SELBHA,SELEMU,
                          SELEVT,SELTRK,SIEDIR,TIZERO,TRUSLU
       New routines: ENLCL2,GGESUM,GGSEH,GGTRKH,QTRKCH,SELENU,SELGGE,SELWWA,
                     SELWWB,TIZERN,TRKWWS,VDCOSM
    
       The LEP 1 EDIR classes are unchanged and the code has been written such 
       that the EDIRs for LEP 1 will be the same after a reprocessing, 
       except for the following:
    
        o class 19 - this now uses QMUIDO instead of Mucalo and accepts many fewer
                     events
        o class 21 - minor cut changes
        o classes 22 and 23 - very small changes as one of the thresholds is now
                              beam energy dependent
    
        In addition, the following should be noted:
    
    (1) A run at LEP 1 energies during LEP 2 will get a LEP 1 EDIR.
    (2) As the LEP 1.5 runs already have LEP 1 EDIRs, they will continue to get
        these if they are reprocessed.
    (3) The original EDIR code was written by various people and has been
        unsupported for a number of years. As a result, several bugs affecting the
        1995 data have come to light during the development of the LEP 2 code. They
        are:
    
        (a) for all 1995 running, class 20 always fails 
            (because of the PEWI to PWEI change)
        (b) for all 1995 running, events are rejected by classes 17 and 18 which
            should have been accepted (because of a cut on the Pastis timing, which
            is effected by the bunch trains). This has only a small effect on class
            17, but a large effect on class 18.
        (c) for the 1.5 GeV running, classes 16 and 17 will accept events they
            shouldn't because the wrong cms energy is used (91.1 GeV).
    
        These will be fixed if/when the data are reprocessed.
    
    (4) There are several classes which are unused.
    
                                      LEP 2 EDIR
                                     ============
    
    Status key:
    
       Old     = copied directly from the current LEP 1 EDIR
       Mod     = modified version of LEP 1 EDIR class
       New     = new LEP 2 class
    
     Class  Status                           Description
     ----- -------- ---------------------------------------------------------------
       1     New    >= 1 ECAL cluster E>1.5GeV + 1 module with Ewire>0.5, |T0|<200
       2     Old    HCAL energy(pads) + ECAL energy(wires) > 15 GeV
       3     New    Cosmics passing through VDET
       4     Old    HCAL energy(pads) > 3 GeV + HCW(4 planes) * ITC trigger
       5     Old    1 to 7 tracks with d0<5cm, z0<20cm, NTPC>=4
       6     Old    >= 8 tracks, cuts as above
       7     Mod    LUM A and LUM B, both E > 30GeV
       8     Mod    LUM A or LUM B, E > 30GeV
       9     New    2-photon: >= 3 trks, Ecalorimeter/ELep<0.5, Echarged/ELep<0.4
      10
      11     New    Low multiplicity WW A: >= 1 track of each sign
      12     New    Low multiplicity WW B: all tracks of same sign
      13
      14
      15     Old    Dileptons
      16     Old    QQbar based on tracks
      17     Old    QQbar based on calorimetry
      18
      19     Mod    Muon candidates (now using QMUIDO)
      20     Old    Bhabha candidates
      21     Mod    Single photon candidates (slightly different cuts)
      22     Mod    Sical A (E>=20 GeV) AND Sical B (E>=20*ELep/91.2 GeV)
      23
      24     Old    Dilepton candidates
      25     Old    Slow control records
      26     Mod    Alignment and calibration (Muon id modified)
      27*    Old    VDET laser events
      28**
      29     Old    Random triggers
      30     Old    Events which fail everything else
    
     *  On the MINI only, electron selection from QSELEP
     ** On the MINI only, muon selection from QSELEP
    
     ! ALEPHLIB 21.3
       ALSUMCL - fix multiline string
       ULANGL  - Replace call to RLU by call to RNDM
       VUROBO  - Put ULANGL function in separate file, suppress RLU function
    
     ! ALEPHLIB 20.8
       LEPTO   - add a protection against events with > 300 tracks
                 (S.Wasserbach)
    
     ! ALEPHLIB 20.5
       ALSUMCL - add summary of class 27
       SELEVT  - select class 27 events using VTRLAS from Julia
       TIZERO  - move to EDIR set
       ECAGET, ECALWR, ESUMW, ISPARK, SELBHA, TRIOFF -
       adapt to new PWEI bank.
    
    
     ! ALEPHLIB 20.1
       RPECO  - protect ACOS against abs(argument) > 1.(C.Rankin)
    
     ! ALEPHLIB 15.4
       EEWIRS - Bhabha events selected from two ecal modules with uncalibrated
                wire energies above 30 GeV.
    
     ! ALEPHLIB 15.1
       CLAS24  - remove acolinearity computation
    
     ! ALEPHLIB 14.6
       move ALSUMCL and ALCLASW from ALEF set to EDIR set
       ALSUMCL - add summary of class 24
       SELEVT  - add call to CLAS24
       CLAS24  - new routine to select class 24 events (tau group)
       CLAS26  - new routine to select class 26 events (alignment group)
       CHKCLAS - new routine to check the class word against the mask
                 set with the CLAS data card
       ------------------------------------------------------------------
    
        **** ALEPH events classification Package : EVTCLAS  ***
    
        EDIR is the Aleph official Package used to create public
        event directories. It contains a set of routines which allow
        to select and to classify events according to a pre-defined
        selection criteria. The list of event directory classes and
        their content are listed bellow :
    
         Class # 1: Defined in ECALSL routine.
         ---------
         Content : More than 2 Ecal modules with energy(wires) >=2.5GeV
                   in each.
    
         Class # 2: Defined in ECALSL routine.
         ----------
         Content  : Hcal energy(pads) + Ecal energy(wires) >15GeV.
    
         Class # 3: Defined in ECALSL routine.
         ----------
         Content  : Endcap A and Endcap B both with energy(wires) >2GeV
                    or Barrel with energy >6GeV.
    
         Class # 4: Defined in SNGRND routine.
         ----------
         Content  : Hcal energy(pads) >3GeV + HCW(4 planes) * ITC trigger.
    
         Class # 5: Defined in TRACKS routine.
         ----------
         Content  : 1--> 7 tracks with >=4 TPC hits, D0 <5cm and Z0 <20cm.
    
         Class # 6: Defined in TRACKS routine.
         ----------
         Content  : >=8 tracks with the same cuts.
    
         CLASS # 7: Defined in ENLCAL routine.
         ----------
         Content  : LUM A and LUM B, both E >15GeV.
    
         CLASS # 8: Defined in ENLCAL routine.
         ----------
         Content  : LUM A or  LUM B, E >15GeV.
    
         Class # 9: Defined in MUELID routine.
         ----------
         Content  : Muon (HMAD flag) with energy >3GeV.
    
         Class #10: Defined in MUELID routine.
         ----------
         Content  : Electron with momentum >=2GeV.
                    Electron candidates based on (-3.5<R2 ,-3.5<R3<4.0).
    
         Class #11: Defined in HVOBIT routine.
         ----------
         Content  : ECAL high voltage ON.
    
         Class #12: Defined in HVOBIT routine.
         ----------
         Content  : TPC  high voltage ON (Logical or between bit 4 and 15
                    of the high voltage word).
    
         Class #13: Defined in HVOBIT routine.
         ----------
         Content  : ITC  high voltage ON.
    
         Class #14: Defined in HVOBIT routine.
         ----------
         Content  : LCAL high voltage ON.
    
         Class #15: Defined in LEPTO routine.
         ----------
         Content  : Dilepton candidates (e+ e-, mu+ mu- and tau+ tau-)
                    Selections based on TPC tracks only.
    
         Class #16: Defined in SELTRK routine.
         ----------
         Content  : QQbar candidates based on TPC tracks selections.
    
         Class #17: Defined in SELCAL routine.
         ----------
         Content  : QQbar candidates based on calorimety selections.
    
         Class #18: Defined in TIZERO routine.
         ----------
         Content  : Events in time with the beam crossing :
                    selection based on T0 information from Ecal wires
                    abs(T0) <120ns in End caps and abs(T0) <100ns in Barrel.
    
         Class #19: Defined in SELEMU routine.
         ----------
         Content  : Muon candidates of all energies based on a logical OR
                    of HMAD, MCAD and Mucalo(proba>80%).
    
         Class #20: Defined in SELBHA routine.
         ----------
         Content  : Bhabha candidates (selection based on Ecal only) :
                    -at least 2 non adjacent modules with E(wires) >35GeV each
                    -2 Ecal clusters with E(pads) >35GeV and |cos(theta)| <0.95.
    
         Class #21: Defined in PHEDIR routine.
         ----------
         Content  : Single photon candidates.
    
         Class #22: Defined in SIEDIR routine.
         ----------
         Content  : Bhabha candidate in Sical A and B
                                                ---
         Class #23: Defined in SIEDIR routine.
         ----------
         Content  : Bhabha candidate in Sical A or B
                                                --
    
         Class #24: Defined in CLAS24 routine.
         ----------
         Content  : Dilepton candidates (e+ e-, mu+ mu- and tau+ tau-)
                    Enlarged class 15 selection.
    
         Class #25: Slow control records.
         ----------
    
         Class #26: Defined in CLAS26 routine.
         ----------
         Content  : Events to be used for alignement and
                    calibration purposes.
                    Muon events selected by mean of trigger bits pattern.
                    Bhabha events selected from two ecal modules with uncalibrated
                    wire energies above 30 GeV.
    
         Class #27: set in VTRLAS or CLAS278
         ----------
         POT      : VDET Laser events for VDET alignment / calibration
         MINI     : electron selection (Rt>-3, -3>Rl>3)  MINI only
    
         Class #28: set in CLAS278
         ---------
         MINI     : muon selection (QMUIDO flag 13 or 14)
    
         Class #29: Defined in SNGRND routine.
         ----------
         Content  : Random trigger events.
    
         Events which do not satisfy any of these 25 selections are
         classified as class #30.
    
         The list above can also be obtained on IBM or ALWS by mean
         of HELP EDIR. This help facility gives detailed descriptions
         of the cuts used to define the classes 15, 16, 17 and 21.
    
         To use this package in a stand-alone mode, to read and/or write
         public event directories one should use the following lines of
         Fortran :
    
          PROGRAM EVTCLAS
     --
          COMMON/BCS/IW(800000)
     --
          CALL BNAMES(3000)
          CALL BOS(IW,800000)
     --
       Opens the cards file EVTCLAS CARDS or whatever cards file name
       which contain input and output (FILI/FILO) data files.
     --
          CALL AOPEN(5,'EVTCLAS CARDS *',' ',' ',IER)
          CALL BREADC
     --
       Open input and/or output files and write event directory file.
       ALRWEV can also be used to write an EPIO file from an EDIR or
       Native file and vice versa.
     --
          CALL ALRWEV
     --
          END
    
         Important remark:
         -----------------
         To use this package in a program in which the event reading
         exists already, one has, in order to classify events, to call the
         steering routine of the package : SELEVT(EVTFLG) for each event.
         The argument EVTFLG is a logical array (dimenssioned to 30) which
         contains the different classes (when the corresponding logical flags
         are true) to which the event belongs.
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ALCLASW    Get aleph class word
     ALRWEV     Steering routine to read, classify and/or write events.
     ALSUMCL    Accumulate and print statistics about edir classes
     CHKCLAS    Get the class word from revh bank or selevt subroutine.
     CLAS24     Steering routine for events of class 24.
     CLAS26     Select clas 26 events (alignement/claibration purpose events)
     CLAS278    Set lepton tagging bits 27 and 28 in revh class-word
     ECAGET     Ecal wire energy of the two most energetic calobjects.
     ECALSL     Classes 1,2 and 3 code.
     ECALWR     Ecal wire energy.
     ECPHCO     Look id digital pattern linkes to phco object.
     EEWIRS     Select bhabha events for calibration studies
     ENLCAL     Luminosity from lcal.
     ENLCL2     Luminosity from lcal for lep 2. same as enlcal, but with higher thresholds
     ESUMW      Calculate ecal wire energy.
     ESWEH      Calculate energy of event.
     GGESUM     Calculate ecal wire energy.
     GGSEH      Calculate energy of event.
     GGTRKH     Returns number of good tracks and charged energy.
     HCALEN     Hcal total pads energy.
     HVOBIT     Gives the detector's high voltage setup.
     LEPTO      Steering routine for events of class 15.
     MODFND     Find which module a given peco is in.
     MUELID     Muons and electrons identification.
     MUTRGS     Muon tagging through trigger bits
     PHEDIR     Selects events containing one or more photons for aleph
     QPTRCK     Get tpc track momentum.
     QTRKCH     Get tpc track charge.
     REJBHA     Subroutine to reject bhabhas keeping hadrons and most of qqbars.
     RPECO      Calculate parameters of the 2 most energetic cluster.
     RWEDIR     Program to write an event directory file
     SELBHA     Purpose   : select bhabha events on ecal only:
     SELCAL     Steering routine for calorimeter selection.
     SELEMU     Muon identification class 19 code.
     SELENU     Look for events with at least one ecal cluster above some threshold
     SELEVT     Steering routine for events classification.
     SELGGE     Select good events according to gamma gamma group selection
     SELTRK     Select good events according to qqbar group selection.
     SELWWA     Select low multiplicity events for ww to lnulnu decay mode.
     SELWWB     Select low multiplicity events for ww to lnulnu decay mode.
     SIEDIR     Compute edir class from sical
     SNGMTR     Single muon trigger test.
     SNGRND     Classes 4 and 29 code.
     TIZERN     Calculate t0 from ecal wire module pastis.
     TIZERO     Calculate t0 from ecal wire module pastis.
     TRACKS     Tracks and tpc hits, classes 5 and 6 code.
     TRIOFF     Trigger off-line for qqbar selection.
     TRKHAD     Returns number of good tracks and charged energy.
     TRKWWS     Returns number of good positive and negative tracks and charged energy.
     TRPFRF     Charged tracks momentum.
     TRUSLU     Gives the correct format for thrust calculation and call the
     ULANGL     Routine not documented
     ULTHRU     Jetset routine
     VDCOSM     Select cosmic in vdet acceptance
     VUROBO     Routine not documented
     WCLUS      This routine counts the number of clusters using the wires.

3 ALCLASW
         SUBROUTINE ALCLASW (KCLASW)
  ------------------------------------------------------------------------------
    CKEY ALEF EDIR CLASS / USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 910801                    from M.Talby
   Get aleph class word
   -
     Output :  KCLASW   / I   = 30 bit mask known as EDIR class word
   -
     Called by   : USER
     Calls  : SELEVT, ABCLAS,ABGTWCL
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALRWEV                                                                          
   CHKCLAS                                                                         
        |---- ALCLASW                                                              
                   |----  SELEVT                                                   
                   |----  ABCLAS                              External             
                   |----  ABGTWCL                             External             
   
 
3 ALRWEV
         SUBROUTINE ALRWEV
  ------------------------------------------------------------------------------
    CKEY EDIR READ WRITE / USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 910804          from M.Talby
   - modified by - F.Ranjard - 921105
     keep events with LUPA bank
   Steering routine to read, classify and/or write events.
   -
     Called by   : USER
     Calls  : ALPHARD and EDIR packages
   -
     Input data cards : FILI, FILO, SEVT, SRUN, IRUN, NEVT
                        DEBUG   recmn  recmx
                                recmn = 1st record to debug
                                recmx = last record to debug
                  or    DEBU    recmx
                                recmx = 1st recmx records to debug
                        MINI    the input file is a MINI
   -
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALRWEV                                                               
                   |----  AOPDBS                              External             
                   |----  AWERRC                              External             
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  ABRSEL                              External             
                   |----  ABUNIT                              External             
                   |----  ABRUEV                              External             
                   |----  IGTLEN                              External             
                   |----  ALCLASW                                                  
                   |----  ABCLAS                              External             
                   |----  BTEST                               External             
                   |----  ABSTCL                              External             
                   |----  ABWSEL                              External             
                   |----  ABGTWCL                             External             
                   |----  ABGTCL                              External             
                   |----  ALSUMCL                                                  
                   |----  ABWEND                              External             
                   |----  BOSIO                               External             
                   |----  ACLOSE                              External             
   
 
3 ALSUMCL
         SUBROUTINE ALSUMCL (KCLASW)
  ------------------------------------------------------------------------------
    CKEY EDIR CLASS SUMMARY / USER
  ------------------------------------------------------------------------------
   Accumulate and print statistics about edir classes
   - F.Ranjard -910801                  from E.Lancon
                920506  introduce entry point ALSUMGT
   - Input   : - KCLASW  I/      30bits class word
                           --->  Special value = -1 , Print Summary
   - Entry   : ALSUMGT (IARRAY,NDIM)
               NDIM    = IARRAY dimension
               IARRAY  = 1-NCLAS   statistic of class words
                         NCLAS+1   no. of events without class word
                         NCLAS+2   no. of events with class word
                         NCLAS+3   no. of run records
                         the 1st NDIM words are filled
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALRWEV                                                                          
        |---- ALSUMCL                                                              
                   |----  BTEST                               External             
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
                   |----  MIN                                 External             
   
 
3 CHKCLAS
         LOGICAL FUNCTION CHKCLAS (KCLASW)
  ------------------------------------------------------------------------------
    CKEY EDIR CLASS REVH /USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 930309          from M.Talby
   Get the class word from revh bank or selevt subroutine.
   -  and check if it contains a selected class.
     Called by   : USER
     Calls  : ALPHARD and EDIR packages
   - Output - KCLASW  / I = class word
            - CHKCLAS / L = .FALSE. if the class word does not
                            contains one of the selected bits
   -
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              CHKCLAS                                                              
                   |----  NAMIND                              External             
                   |----  ALCLASW                                                  
                   |----  ABGTRCL                             External             
                   |----  BSELEC                              External             
                   |----  ABSTCL                              External             
   
 
3 CLAS24
         SUBROUTINE CLAS24(IGOOD)
  ------------------------------------------------------------------------------
    CKEY EDIR TAU CLASS24
  ------------------------------------------------------------------------------
   Steering routine for events of class 24.
    Lepton pair selection by hadron, 2-gamma and cosmic rejection.
   -
     Input  : None
     Output : IGOOD  = Class  logical flag
   -
     Input banks : PFRF,PFRT,EGPC
   -
       from ALEPHLIB routine LEPTO
                    Lepto :     Author : J.C.Brient        Date : 7/7/89
                                Updated: C.Geweniger       Date : 7/2/90
                    Tauclass :           Tau group         Date : 2/12/92
                                Last modification by
                                         S. Orteu                 2/2/93
                                The changes can be obtained by looking
                                at the commentaries CL15
                    Updated:             M.Cattaneo        Date : 21/7/96
                                Reject tracks with bad TRPFRF return code
                                Protect against missing banks
                                         G.Ganis           Date : 17/2/96
                                Add PGAC in the searched banks list for
                                GAMPE(C,X,K) photons
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- CLAS24                                                               
                   |----  NAMIND                              External             
                   |----  NINT                                External             
                   |----  TRPFRF                                                   
                   |----  ABS                                 External             
                   |----  MAX                                 External             
                   |----  VZERO                               External             
                   |----  TRUSLU                                                   
                   |----  VDOTN                               External             
                   |----  VADD                                External             
   
 
3 CLAS26
         SUBROUTINE CLAS26 (IGOOD)
  ------------------------------------------------------------------------------
    CKEY EDIR CLASS26
  ------------------------------------------------------------------------------
   Select clas 26 events (alignement/claibration purpose events)
   
      Author   :- E. Lancon              2-APR-1993
   
      Inputs:    None
           -
   
      Outputs:   IGOOD     Logical Flag
           -
   
      Description  Call EEWIRS and MUTRGS
      ===========  To select muon and bhabha events
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- CLAS26                                                               
                   |----  EEWIRS                                                   
                   |----  MUTRGS                                                   
   
 
3 CLAS278
         SUBROUTINE CLAS278 (KLASW)
  ------------------------------------------------------------------------------
    CKEY EDIR
  ------------------------------------------------------------------------------
   Set lepton tagging bits 27 and 28 in revh class-word
   - M.N Minard   28-Nov-1994
   - Output : KLASW / I = updated REVH class word
       Bit 27 = Electron selection (Rt>-3, -3<Rl<3))
       Bit 28 = Muon selection ( QMUIDO flag 13 or 14 )
    Called from QFLEPT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              CLAS278                                                              
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  IBSET                               External             
   
 
3 ECAGET
          SUBROUTINE ECAGET (TGV , EWTOT )
  ------------------------------------------------------------------------------
    CKEY EDIR HIGHEST CLUSTERS
  ------------------------------------------------------------------------------
   Ecal wire energy of the two most energetic calobjects.
   -
     Input  : None
     Output : TGV1(1-2) = Energy of the 2 most energetic cluster
              TGV1(3-4) = Polar angleof the 2 most energetic cluster
              TGV1(5)   = Angle between the 2 most energetic cluster
              TGV1(6-7) = PECO # of the 2 most energetic cluster
              EWTOT  = Total Ecal wire energy
   -
     Called by   : SELCAL
     Calls  : RPECO
     Input banks : PEWI,PRPW
   -
                                      Author: S.Dugey  - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
        |---- ECAGET                                                               
                   |----  VZERO                               External             
                   |----  NLINK                               External             
                   |----  RPECO                                                    
                   |----  NAMIND                              External             
   
 
3 ECALSL
         SUBROUTINE ECALSL(CLAS1,CLAS2,CLAS3)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS1-->3
  ------------------------------------------------------------------------------
   Classes 1,2 and 3 code.
   -
     Input  : None
     Output : CLAS1  = Class 1 logical flag
              CLAS2  = Class 2 logical flag
              CLAS3  = Class 3 logical flag
   -
     Called by   : SELEVT
     Calls  : ECALWR,HCALEN
     Input banks : None
   -
                                              Author: M. Talby March 91
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- ECALSL                                                               
                   |----  ECALWR                                                   
                   |----  HCALEN                                                   
   
 
3 ECALWR
         SUBROUTINE ECALWR(IMODUL,ECAPEA,ECALBE,ECAPEB)
  ------------------------------------------------------------------------------
    CKEY EDIR ECAL WIRE ENERGY
  ------------------------------------------------------------------------------
   Ecal wire energy.
   -
     Input  : None
     Output : IMODUL : Number of Ecal modules with energy > 2.5 GeV each
              ECAPEA : Ecal endcap A wire energy
              ECALBE : Ecal barrel wire energy
              ECAPEB : Ecal endcap B wire energy
   -
     Called by   : ECALSL
     Calls  : None
     Input banks : PEWI
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECALSL                                                                          
        |---- ECALWR                                                               
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
   
 
3 ECPHCO
         SUBROUTINE ECPHCO(IPHCO,IGOO)
  ------------------------------------------------------------------------------
    CKEY EDIR DIGITAL PATTERN
  ------------------------------------------------------------------------------
   Look id digital pattern linkes to phco object.
   -
     Input  IPHCO : Index of actual PHCO
     Output IGOO  : = 1 if at least 1 digital pattern linked
   -
     Called by   : ESWEH
     Calls  : MAKLIS
     Input banks : PPOB,PCRL
   -
                                      Author: M.N.Minard  - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ESWEH                                                                           
   GGSEH                                                                           
        |---- ECPHCO                                                               
                   |----  NLINK                               External             
                   |----  MAKLIS                                                   
   
 
3 EEWIRS
         LOGICAL FUNCTION EEWIRS (IDUMMY)
  ------------------------------------------------------------------------------
    CKEY EDIR CLASS26
  ------------------------------------------------------------------------------
   Select bhabha events for calibration studies
   
      Author   :- E. Lancon             15-APR-1992
   
      Libraries required:
   
      Description : Events are flagged if two modules have ECAL wire
      ===========   energies (EWHE) above 30 GeV.
   
      Modified :- E. Lancon              9-JUL-1993
                    Use uncalibrated wire energy
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   CLAS26                                                                          
        |---- EEWIRS                                                               
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
   
 
3 ENLCAL
         SUBROUTINE ENLCAL(CLAS7,CLAS8)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS7->8
  ------------------------------------------------------------------------------
   Luminosity from lcal.
   -
     Input  : None
     Output : CLAS7 = Class 7 logical flag
              CLAS8 = Class 8 logical flag
   -
     Called by   : SELEVT
     Calls  : None
     Input banks : LUPA
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- ENLCAL                                                               
                   |----  NAMIND                              External             
   
 
3 ENLCL2
         SUBROUTINE ENLCL2(CLAS7,CLAS8)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS7->8
  ------------------------------------------------------------------------------
   Luminosity from lcal for lep 2. same as enlcal, but with higher thresholds
   -
     Input  : None
     Output : CLAS7 = Class 7 logical flag
              CLAS8 = Class 8 logical flag
   -
     Called by   : SELEVT
     Calls  : None
     Input banks : LUPA
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- ENLCL2                                                               
                   |----  NAMIND                              External             
   
 
3 ESUMW
         SUBROUTINE ESUMW
  ------------------------------------------------------------------------------
    CKEY EDIR ECAL WIRE CLASS17
  ------------------------------------------------------------------------------
   Calculate ecal wire energy.
   -
     Input  : None
     Output : None
   -
     Called by   : SELCAL
     Calls  : None
     Input banks : PEWI
   -
                            Authors: M.N. Minard + M. Pepe     15/09/89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
        |---- ESUMW                                                                
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  FLOAT                               External             
   
 
3 ESWEH
         SUBROUTINE ESWEH (ETOT)
  ------------------------------------------------------------------------------
    CKEY EDIR EVENT ENERGY
  ------------------------------------------------------------------------------
   Calculate energy of event.
   -
     Input  : None
     Output : ETOT  = Total Ecal energy of the event
   -
     Called by   : SELCAL
     Calls  : ECPHCO
     Input banks : EVEH,PHCO
   -
                            Authors: M.N. Minard + M. Pepe     15/09/89
     Modified: 19991008 M.Cattaneo
               Raise cut on maximum LEP energy from 200. to 250. GeV
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
        |---- ESWEH                                                                
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
                   |----  ECPHCO                                                   
   
 
3 GGESUM
         SUBROUTINE GGESUM
  ------------------------------------------------------------------------------
    CKEY EDIR ECAL WIRE GAMMA_GAMMA
  ------------------------------------------------------------------------------
   Calculate ecal wire energy.
   -
     Input  : None
     Output : None
   -
     Called by   : SELGGE
     Calls  : None
     Input banks : PEWI
     Result put in common EWIR
   -
                            Authors: M.N. Minard + M. Pepe     15/09/89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELGGE                                                                          
        |---- GGESUM                                                               
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  FLOAT                               External             
   
 
3 GGSEH
         SUBROUTINE GGSEH (ETOT)
  ------------------------------------------------------------------------------
    CKEY EDIR EVENT ENERGY GAMMA_GAMMA
  ------------------------------------------------------------------------------
   Calculate energy of event.
   -
     Input  : None
     Output : ETOT  = Total Ecal + HCAL energy of the event
   -
     Called by   : SELGGE
     Calls  : ECPHCO
     Input banks : EVEH,PHCO
   -
                            Author: A.Finch 24 May 1996
   
   
   
   
   
   
   
   
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELGGE                                                                          
        |---- GGSEH                                                                
                   |----  NAMIND                              External             
                   |----  ECPHCO                                                   
   
 
3 GGTRKH
           SUBROUTINE GGTRKH (NGDTR,ECHRG)
  ------------------------------------------------------------------------------
    CKEY EDIR TRACKS ENERGY GAMMA_GAMMA
  ------------------------------------------------------------------------------
   Returns number of good tracks and charged energy.
    Good tracks:
         |D0| < 25cm, |Z0| < 100cm, >=4 TPC coord., |COS(THETA)|<0.97
         |P| > 0.1
   -
     Input  : None
     Output : NGDTR  = Number of good charged tracks
              ECHRG  = Energy sum of NGDTR charged track
   -
     Called by   : SELGGE
     Calls  : QPTRCK
     Input banks : PFRF,PFRT
   -
                                     Author: A.J.Finch       22-May-1996
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELGGE                                                                          
        |---- GGTRKH                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  QPTRCK                                                   
                   |----  SQRT                                External             
   
 
3 HCALEN
         SUBROUTINE HCALEN(EHCAL)
  ------------------------------------------------------------------------------
    CKEY EDIR HCAL PADS ENERGY
  ------------------------------------------------------------------------------
   Hcal total pads energy.
   -
     Input  : None
     Output : EHCAL : Hcal total pads energy
   -
     Called by   : ECALSL
     Calls  : None
     Input banks : PHCO
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECALSL                                                                          
   SNGRND                                                                          
        |---- HCALEN                                                               
                   |----  NAMIND                              External             
   
 
3 HVOBIT
           SUBROUTINE HVOBIT (HVECAL,HVTPC,HVITC,HVLCAL)
  ------------------------------------------------------------------------------
    CKEY EDIR HIGH VOLTAGE
  ------------------------------------------------------------------------------
   Gives the detector's high voltage setup.
   -
     Input  : None
     Output : HVECAL is true if HV on Ecal is ON
               HVTPC  "      "    "    TPC    "
               HVITC  "      "    "    ITC    "
               HVLCAL "      "    "    LCAL   "
   -
     Called by   : SELEVT
     Calls  : None
     Input banks : LOLE,REVH
   -
                             Authors: Ed.Blucher + M.Talby   19-Oct-1989
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- HVOBIT                                                               
                   |----  NAMIND                              External             
                   |----  BTEST                               External             
   
 
3 LEPTO
           SUBROUTINE LEPTO(IGOOD)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS15
  ------------------------------------------------------------------------------
   Steering routine for events of class 15.
    Lepton pair selection by hadron, 2-gamma and cosmic rejection.
   -
     Input  : None
     Output : IGOOD  = Class 15 logical flag
   -
     Called by   : SELEVT
     Calls :  TRPFRF,TRUSLU
     Input banks : PFRF,PFRT
   -
   Author : J.C.Brient        Date : 7/7/89
    C.Geweniger       Date : 7/2/90
    M.Cattaneo        Date : 21/7/96
     Protect against possibility of missing banks
     Reject tracks with bad TRPFRF return code
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- LEPTO                                                                
                   |----  NAMIND                              External             
                   |----  NINT                                External             
                   |----  TRPFRF                                                   
                   |----  ABS                                 External             
                   |----  VZERO                               External             
                   |----  TRUSLU                                                   
                   |----  VDOTN                               External             
                   |----  VADD                                External             
                   |----  VMOD                                External             
   
 
3 MODFND
         SUBROUTINE MODFND(THETA,PHI,IREG,MODULE,IRC)
  ------------------------------------------------------------------------------
    CKEY EDIR ECAL MODULES
  ------------------------------------------------------------------------------
   Find which module a given peco is in.
   -
     Input  : THETA  = Theta angle of Ecal cluster
              Phi    = Phi angle of Ecal cluster
     Output : IREG   = Ecal region flag
                       1 if Barrel
                       2 if Endcap
              MODULE = Module number
              IRC    = Return code
                       0 : success
                       1 : problem
   -
     Called by   : PHEDIR
     Calls :  None
     Input banks : None
   -
                                 Author: Lee Thompson, 31st January 1990
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MODFND                                                               
                   |----  INT                                 External             
   
 
3 MUELID
         SUBROUTINE MUELID(NMUON,NELEC)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS9->10
  ------------------------------------------------------------------------------
   Muons and electrons identification.
   -
     Input  : None
     Output : NMUON  = Number of muons (HMAD) with energy >= 3 GeV
              NELEC  = Number of electrons with energy >= 2 GeV
   -
     Called by   : SELEVT
     Calls  : None
     Input banks : HMAD,EIDT,PEID
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- MUELID                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  FLOAT                               External             
                   |----  QPTRCK                                                   
   
 
3 MUTRGS
         LOGICAL FUNCTION MUTRGS (IDUMMY)
  ------------------------------------------------------------------------------
    CKEY EDIR CLASS26
  ------------------------------------------------------------------------------
   
   Muon tagging through trigger bits
    Author: R.Tenchini  920416
    Modified: M.Cattaneo, 960530
       For LEP200, ask for 2 ITC track masks instead of
       vetoing with SNG_C_EM trigger bit
    INPUT Banks : IXTR + uses ALTRIG, GTSTUP
    OUTPUT Banks : none
    INPUT Arguments :
    IDUMMY = Dummy Argument
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   CLAS26                                                                          
        |---- MUTRGS                                                               
                   |----  ALTRIG                                                   
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  NAMIND                              External             
                   |----  IAND                                External             
   
 
3 PHEDIR
         SUBROUTINE PHEDIR (SNGPHO)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS21
  ------------------------------------------------------------------------------
   Selects events containing one or more photons for aleph
    event directories.
   -
     Input  : None
     Output : SNGPHO = Class 21 logical flag
   -
     Called by   : SELEVT
     Calls  : MODFND
     Input banks : REVH,PFRT,XTEB,PECO,EWHE
   -
                                 Author: Lee Thompson, 31st January 1990
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- PHEDIR                                                               
                   |----  NAMIND                              External             
                   |----  ALTRIG                                                   
                   |----  FLOAT                               External             
                   |----  ACOS                                External             
   
 
3 QPTRCK
         SUBROUTINE QPTRCK(NT,PZ,PTOT)
  ------------------------------------------------------------------------------
    CKEY EDIR TRACK MOMENTUM
  ------------------------------------------------------------------------------
   Get tpc track momentum.
   -
     Input  : NT   =  Track number
     Output : PZ   =  Track Z momentum component
              PTOT =  Track total momentum
   -
     Called by   : MUELID,TRKHAD
     Calls  : None
     Input banks : PFRT
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GGTRKH                                                                          
   MUELID                                                                          
   TRKHAD                                                                          
   TRKWWS                                                                          
        |---- QPTRCK                                                               
                   |----  ALFIEL                                                   
                   |----  NAMIND                              External             
                   |----  SQRT                                External             
   
 
3 QTRKCH
         SUBROUTINE QTRKCH(NT,ICHG)
  ------------------------------------------------------------------------------
    CKEY EDIR TRACK CHARGE
  ------------------------------------------------------------------------------
   Get tpc track charge.
   -
     Input  : NT   =  Track number
     Output : ICHG =  Charge of track, 0 if error
   -
     Called by   : TRKWWS
     Calls  : None
     Input banks : PFRT
   -
                                        Author: J. Yamartino 28 May 1996
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TRKWWS                                                                          
        |---- QTRKCH                                                               
                   |----  ALFIEL                                                   
                   |----  NAMIND                              External             
   
 
3 REJBHA
          SUBROUTINE REJBHA(XTOW,EWTOT,IQQT1,IQQT2,IOK)
  ------------------------------------------------------------------------------
    CKEY EDIR BHABHA REJECTION
  ------------------------------------------------------------------------------
   Subroutine to reject bhabhas keeping hadrons and most of qqbars.
    2 rejections available: 1 based on PECO
                            2 based on wires
   -
     Input  : XTOW(1-7) = Parameters of the 2 most energetic cluster
              EWTOT     = Wire energy
     Output : IQQT1     = 1 qqbar candidate if IOK = 0
              IQQT2     = 1 qqbar candidate if IOK = 0
              IOK       = 1 not a qqbar
   -
     Called by   : SELCAL
     Calls  : None
     Input banks : None
   -
                                      Author: S. Dugey - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
        |---- REJBHA                                                               
                   |----  INT                                 External             
   
 
3 RPECO
          SUBROUTINE RPECO( ETOWE, TGV1)
  ------------------------------------------------------------------------------
    CKEY EDIR CLUSTER PARAMETERS
  ------------------------------------------------------------------------------
   Calculate parameters of the 2 most energetic cluster.
   -
     Input   : None
     Output  : ETOWE  = Total tower energy
               TGV1(1-2) = Energy of the 2 most energetic cluster
               TGV1(3-4) = Polar angleof the 2 most energetic cluster
               TGV1(5)   = Angle between the 2 most energetic cluster
               TGV1(6-7) = PECO # of the 2 most energetic cluster
   -
     Called by   : ECAGET
     Calls  : None
     Input banks : PECO
   -
                                      Author: S.Dugey  - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECAGET                                                                          
        |---- RPECO                                                                
                   |----  VZERO                               External             
                   |----  NAMIND                              External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  ACOS                                External             
   
 
3 RWEDIR
   
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
         PROGRAM RWEDIR
   Program to write an event directory file
   
   
 
3 SELBHA
         SUBROUTINE SELBHA(IBHAEV)
  ------------------------------------------------------------------------------
    CKEY EDIR ECAL BHABHA
  ------------------------------------------------------------------------------
   Purpose   : select bhabha events on ecal only:
                - at least 2 non adjacent modules with
                  E > smwcut (35 Gev) on the wires (each)
                - 2 Ecal clusters with E > scocut (35 Gev) and
                  |cos(theta)|< qctcut (.95)
   -
     Inputs    : None
     Outputs   : IBHAEV  = Class 20 logical flag
   -
     Called by   : SELEVT
     Calls  : None
     Input banks : PEWI,PECO
   -
                              Author: Gilles de BOUARD       2-FEB-1990
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELBHA                                                               
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  MOD                                 External             
   
 
3 SELCAL
         SUBROUTINE SELCAL ( IECAL )
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS17
  ------------------------------------------------------------------------------
   Steering routine for calorimeter selection.
   -
     Input   : None
     Output  : IECAL  = Class 17 flag word
   -
     Called by   : SELEVT
     Calls  : ESUMW,TRIOFF,ESWEH,TRKHAD,ECAGET,REJBHA,TIZERO,WCLUS
     Input banks : None
   -
                                       Author: M.N.Minard  - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELCAL                                                               
                   |----  ESUMW                                                    
                   |----  TRIOFF                                                   
                   |----  ESWEH                                                    
                   |----  TRKHAD                                                   
                   |----  ECAGET                                                   
                   |----  REJBHA                                                   
                   |----  TIZERO                                                   
                   |----  WCLUS                                                    
   
 
3 SELEMU
         SUBROUTINE SELEMU (IFLAHM,IFLAMC,IFLACA,CLAS19)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS19
  ------------------------------------------------------------------------------
   Muon identification class 19 code.
   -
     Input  : None
     Output : IFLAHM = Muon flag from HMAD bank
              IFLAMC = Muon flag from MCAD bank
              IFLACA = Muon flag based on QMUIDO analysis
              CLAS19 = class 19 logical flag
   -
     Called by   : SELEVT
     Calls  : MUCATR
     Input banks : HMAD,MCAD,MUID
   -
                                         Author: R. Tenchini January 90
                                         Modified : G. Bagliesi April 96
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELEMU                                                               
                   |----  NAMIND                              External             
   
 
3 SELENU
         SUBROUTINE SELENU (ECNUOK)
  ------------------------------------------------------------------------------
    CKEY EDIR
  ------------------------------------------------------------------------------
   Look for events with at least one ecal cluster above some threshold
    a module with some wire energy and a reasonable pastis
   -
       Input  : None
       Output : ECNUOK is TRUE if good ECAL cluster found
   -
       Called by  : SELEVT
       Calls      : nothing
       Banks used : PEWI (or PWEI), PECO
   -
     Modified: 19991008 M.Cattaneo
               Raise cut on maximum wire energy from 200. to 250. GeV
   
   
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELENU                                                               
                   |----  VZERO                               External             
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  TIZERN                                                   
                   |----  ABS                                 External             
   
 
3 SELEVT
         SUBROUTINE SELEVT(EVTFLG)
  ------------------------------------------------------------------------------
    CKEY EDIR EVENTS CLASSIFICATION
  ------------------------------------------------------------------------------
   Steering routine for events classification.
   -
     Input  : None
     Output : Depends whether it is a LEP 1 or LEP 2 EDIR -
    For LEP 1
              EVTFLG( 1) : > 2 ECAL modules, > 2.5 GeV each
              EVTFLG( 2) : E(HCAL(pads) + ECAL(wires)) > 15. GeV
              EVTFLG( 3) : ECA(wires) and ECB(wires) , both E > 2. GeV
                           OR E(ECBAR(wires)) > 6. GeV
              EVTFLG( 4) : E(HCAL(pads)) > 3. GeV + ITC
              EVTFLG( 5) : 1-->7 tracks (D0 <5 cm and Z0 <20 cm + >4 hits)
              EVTFLG( 6) : >7 tracks same cuts
              EVTFLG( 7) : LumA and LumB  , both E > 15. GeV
              EVTFLG( 8) : LumA or  LumB  , E > 15. GeV
              EVTFLG( 9) : Muon with energy > 3 GeV
              EVTFLG(10) : Electron with energy > 2 GeV
              EVTFLG(11) : ECAL High voltage ON
              EVTFLG(12) : TPC  High voltage ON
              EVTFLG(13) : ITC  High voltage ON
              EVTFLG(14) : LCAL High voltage ON
              EVTFLG(15) : Lepton groupe selection
              EVTFLG(16) : QQbar events (selection based on TPC)
              EVTFLG(17) : QQbar events (selection based on Calorimeters)
              EVTFLG(18) : Events in time with the beam (cosmic rejection)
              EVTFLG(19) : Muon events of all energies
              EVTFLG(20) : Bhabha events based on calorimetry
              EVTFLG(21) : Single photon candidates
              EVTFLG(22) : SicalA and SicalB , both E >20 Gev
              EVTFLG(23) : SicalA or  SicalB , both E >20 Gev
              EVTFLG(24) : Enlarged class 15, tau group definition
              EVTFLG(25) : Slow control records
              EVTFLG(26) : Events for alignement/calibration purposes
              EVTFLG(27) : VDET LaserEvents for Calibration
              EVTFLG(28) : not yet filled
              EVTFLG(29) : Random trigger bit
    For LEP 2
              EVTFLG( 1) : ECAL selection
              EVTFLG( 2) : E(HCAL(pads) + ECAL(wires)) > 15. GeV
              EVTFLG( 3) : Cosmics through VDET
              EVTFLG( 4) : E(HCAL(pads)) > 3. GeV + ITC
              EVTFLG( 5) : 1-->7 tracks (D0 <5 cm and Z0 <20 cm + >4 hits)
              EVTFLG( 6) : >7 tracks same cuts
              EVTFLG( 7) : LumA and LumB  , both E > 15. GeV
              EVTFLG( 8) : LumA or  LumB  , E > 15. GeV
              EVTFLG( 9) : >= 3-prong 2-gamma selection
              EVTFLG(10) : not yet filled, could be 2-prong 2-gamma
              EVTFLG(11) : low multiplicity WW: >= 1 track of each sign
              EVTFLG(12) : low multiplicity WW: all tracks of same sign
              EVTFLG(13) : not yet filled
              EVTFLG(14) : not yet filled
              EVTFLG(15) : Lepton group selection
              EVTFLG(16) : QQbar events (selection based on TPC)
              EVTFLG(17) : QQbar events (selection based on Calorimeters)
              EVTFLG(18) : not yet filled
              EVTFLG(19) : Muon events of all energies
              EVTFLG(20) : Bhabha events based on calorimetry
              EVTFLG(21) : Single photon candidates
              EVTFLG(22) : SicalA and SicalB , both E >20 Gev
              EVTFLG(23) : not yet filled
              EVTFLG(24) : Enlarged class 15, tau group definition
              EVTFLG(25) : Slow control records
              EVTFLG(26) : Events for alignment/calibration purposes
              EVTFLG(27) : VDET LaserEvents for Calibration
              EVTFLG(28) : not yet filled
              EVTFLG(29) : Random trigger bit
   -
     Called by   : ALEVCL or user routine
     Calls  : ECALSL,SNGRND,TRACKS,ENLCAL,MUELID,HVOBIT,LEPTO,SELTRK,
              SELCAL,TIZERO,SELEMU,SELBHA,PHEDIR,CLAS24,VTRLAS(JULIA)
              SELENU,VDCOSMJ,ENLCL2,SELGGE,SELWWA,SELWWB
     Input banks : None
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALCLASW                                                                         
        |---- SELEVT                                                               
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
                   |----  ECALSL                                                   
                   |----  SNGRND                                                   
                   |----  TRACKS                                                   
                   |----  ENLCAL                                                   
                   |----  MUELID                                                   
                   |----  HVOBIT                                                   
                   |----  LEPTO                                                    
                   |----  SELTRK                                                   
                   |----  SELCAL                                                   
                   |----  TIZERO                                                   
                   |----  SELEMU                                                   
                   |----  SELBHA                                                   
                   |----  PHEDIR                                                   
                   |----  SIEDIR                                                   
                   |----  CLAS24                                                   
                   |----  CLAS26                                                   
                   |----  VTRLAS                                                   
                   |----  SELENU                                                   
                   |----  VDCOSMJ                                                  
                   |----  ENLCL2                                                   
                   |----  SELGGE                                                   
                   |----  SELWWA                                                   
                   |----  SELWWB                                                   
   
 
3 SELGGE
         SUBROUTINE SELGGE(TRKHOK)
  ------------------------------------------------------------------------------
    CKEY EDIR GOOD GAMMA_GAMMA
  ------------------------------------------------------------------------------
   Select good events according to gamma gamma group selection
    Good event : number of good tracks  >= 3
                   E(calorimeters)/ELEP <  0.5
                   Charged Energy/ELEP  <  0.4
   -
     Input  : none
     Output : TRKHOK is true if good event for gamma gamma selection
   -
     Called by   : SELEVT
     Calls  : GGTRKH
     Input banks : EVEH
   -
                                        Author: A. Finch 23-May-1996
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELGGE                                                               
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
                   |----  GGTRKH                                                   
                   |----  GGESUM                                                   
                   |----  GGSEH                                                    
   
 
3 SELTRK
           SUBROUTINE SELTRK(TRKHOK)
  ------------------------------------------------------------------------------
    CKEY EDIR GOOD TRACKS
  ------------------------------------------------------------------------------
   Select good events according to qqbar group selection.
    Good event = number of good tracks >=5 + E(track)/ELEP > 10.
   -
     Input  : none
     Output : TRKHOK is true if good event for QQbar selection
   -
     Called by   : SELEVT
     Calls  : TRKHAD
     Input banks : EVEH
   -
                                        Author: M. Talby    19-Oct-1989
     Modified: 19991008 M.Cattaneo
               Raise cut on maximum LEP energy from 200. to 250. GeV
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELTRK                                                               
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
                   |----  TRKHAD                                                   
   
 
3 SELWWA
           SUBROUTINE SELWWA(TRKHOK)
  ------------------------------------------------------------------------------
    CKEY EDIR GOOD TRACKS
  ------------------------------------------------------------------------------
   Select low multiplicity events for ww to lnulnu decay mode.
    Good event = number of good tracks <=7 + E(track)/ELEP > 0.05.
                 Also, at least 1 track of each sign.
   -
     Input  : none
     Output : TRKHOK is true if good event for WW A selection
   -
     Called by   : SELEVT
     Calls  : TRKWWS
     Input banks : EVEH
   -
                                        Author: J. Yamartino 28-May-1996
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELWWA                                                               
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
                   |----  TRKWWS                                                   
   
 
3 SELWWB
           SUBROUTINE SELWWB(TRKHOK)
  ------------------------------------------------------------------------------
    CKEY EDIR GOOD TRACKS
  ------------------------------------------------------------------------------
   Select low multiplicity events for ww to lnulnu decay mode.
    Good event = number of good tracks <=7 + E(track)/ELEP > 0.05.
                 Also, 0 positive or 0 negative tracks.
   -
     Input  : none
     Output : TRKHOK is true if good event for WW B selection
   -
     Called by   : SELEVT
     Calls  : TRKWWS
     Input banks : EVEH
   -
                                        Author: J. Yamartino 28-May-1996
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SELWWB                                                               
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
                   |----  TRKWWS                                                   
   
 
3 SIEDIR
         SUBROUTINE SIEDIR(SIARM,SIBHA)
  ------------------------------------------------------------------------------
    CKEY EDIR CLASS SICAL
  ------------------------------------------------------------------------------
   Compute edir class from sical
   -
     Input  : None
     Output : SIARM = Class 23 logical flag  single arm  A or B
              SIBHA = Class 22 logical flag  coincidence A and B
   -
     Called by   : SELEVT
     Calls  : None
     Input banks : SCLS
   -
                                     Author: B.Bloch-Devaux September 92
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SIEDIR                                                               
                   |----  NAMIND                              External             
                   |----  ALELEP                                                   
   
 
3 SNGMTR
         SUBROUTINE SNGMTR(TRIGMU)
  ------------------------------------------------------------------------------
    CKEY EDIR MUON TRIGGER
  ------------------------------------------------------------------------------
   Single muon trigger test.
   -
     Input  : None
     Output : TRIGMU(1) : If true random trigger is available
              TRIGMU(2) : If true single muon trigger is available
   -
     Called by   : SNGRND
     Calls  : None
     Input banks : EVEH,XTBN
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SNGRND                                                                          
        |---- SNGMTR                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  ALGTDB                              External             
                   |----  CHAINT                              External             
                   |----  ALTRIG                                                   
                   |----  IAND                                External             
                   |----  BTEST                               External             
   
 
3 SNGRND
         SUBROUTINE SNGRND(CLAS4,CLAS29)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS4-29
  ------------------------------------------------------------------------------
   Classes 4 and 29 code.
   -
     Input  : None
     Output : CLAS4   = Clas 4 logical flag
              CLAS29  = Clas 29 logical code
   -
     Called by   : SELEVT
     Calls  : SNGMTR,HCALEN
     Input banks : None
   -
                                              Author: M. Talby March 91
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- SNGRND                                                               
                   |----  SNGMTR                                                   
                   |----  HCALEN                                                   
   
 
3 TIZERN
         SUBROUTINE TIZERN ( TMEAN,TMEANR, IGOO)
  ------------------------------------------------------------------------------
    CKEY EDIR T0 BEAM
  ------------------------------------------------------------------------------
   Calculate t0 from ecal wire module pastis.
   -
     Input  : None
     Output : TMEAN = -9999. Tzero not available
                    = Otherwise average mean including bunch train
                      renormalisation . The t0 is calculated from
                      the bunch train time .
     Output : TMEANR= -9999. Tzero not available
                    = Otherwise average mean including bunch train
                      structure.
              IGOO  = 0  Not in time with beam
                      1  GOOD beam tag  (+-100ns)
   -
     Called by   : SELEVT,SELCAL
     Calls  : None
     Input banks : PEWI/PWEI, EVEH
   -
                                     Author: M.N.Minard       date !
   - modified by : F.Ranjard - 950511
                   use PWEI when PEWI is not there
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELENU                                                                          
        |---- TIZERN                                                               
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  RQBUNC                                                   
                   |----  FLOAT                               External             
                   |----  ABS                                 External             
   
 
3 TIZERO
         SUBROUTINE TIZERO ( TMEANR,IGOO )
  ------------------------------------------------------------------------------
    CKEY EDIR T0 BEAM
  ------------------------------------------------------------------------------
   Calculate t0 from ecal wire module pastis.
   -
     Input  : None
     Output : TMEANR= -9999. Tzero not available
                    = Otherwise average mean including bunch train
              IGOO  = 0  Not in time with beam
                      1  GOOD beam tag  (+-100ns)
   -
     Called by   : SELEVT,SELCAL
     Calls  : None
     Input banks : PEWI/PWEI, EVEH
   -
                                     Author: M.N.Minard       date !
   - modified by : F.Ranjard - 950511
                   use PWEI when PEWI is not there
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
   SELEVT                                                                          
        |---- TIZERO                                                               
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  RQBUNC                                                   
                   |----  FLOAT                               External             
                   |----  ABS                                 External             
   
 
3 TRACKS
           SUBROUTINE TRACKS (NTRK,CLAS5,CLAS6)
  ------------------------------------------------------------------------------
    CKEY EDIR DEF CLASS5->6
  ------------------------------------------------------------------------------
   Tracks and tpc hits, classes 5 and 6 code.
   -
     Input  : None
     Output : NTRK  = Number of TPC tracks with Nhits > 4, |D0| <  5 cm
                                                       and |Z0| < 20 cm
              CLAS5 = Class 5 logical flag
              CLAS6 = Class 6 logical flag
   -
     Called by   : SELEVT
     Calls  : None
     Input banks : PFRF,PFRT
   -
                                          Author: M. Talby September 89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- TRACKS                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
   
 
3 TRIOFF
         SUBROUTINE TRIOFF (IGOO)
  ------------------------------------------------------------------------------
    CKEY EDIR TRIGGER QQBAR
  ------------------------------------------------------------------------------
   Trigger off-line for qqbar selection.
    In absence of ADC information apply offline trigger from the wires.
   -
     Input  : None
     Output : IGOO  = 1 satisfy off-line trigger conditions
                      1.5 Gev in each of the Endcap module
                   or 6.  Gev in the Barrel
   -
     Called by   : SELCAL
     Calls  : None
     Input banks : PEWI
   -
                                       Author: M.N.Minard - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
        |---- TRIOFF                                                               
                   |----  VZERO                               External             
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  FLOAT                               External             
   
 
3 TRKHAD
           SUBROUTINE TRKHAD (NGDTR,ECHRG)
  ------------------------------------------------------------------------------
    CKEY EDIR TRACKS ENERGY
  ------------------------------------------------------------------------------
   Returns number of good tracks and charged energy.
    Good tracks:
         |D0| < 2cm, |Z0| < 10cm, >=4 TPC coord., |COS(THETA)|<0.95
   -
     Input  : None
     Output : NGDTR  = Number of good charged tracks
              ECHRG  = Energy sum of NGDTR charged track
   -
     Called by   : SELCAL,SELTRK
     Calls  : QPTRCK
     Input banks : PFRF,PFRT
   -
                                     Author: Ed. Blucher     18-Oct-1989
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
   SELTRK                                                                          
        |---- TRKHAD                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  QPTRCK                                                   
                   |----  SQRT                                External             
   
 
3 TRKWWS
           SUBROUTINE TRKWWS (NGDTP,NGDTN,ECHRG)
  ------------------------------------------------------------------------------
    CKEY EDIR TRACKS ENERGY
  ------------------------------------------------------------------------------
   Returns number of good positive and negative tracks and charged energy.
    Good tracks:
         |D0| < 2cm, |Z0| < 10cm, >=4 TPC coord.
   -
     Input  : None
     Output : NGDTP  = Number of good charged positive tracks
              NGDTN  = Number of good charged negative tracks
              ECHRG  = Energy sum of NGDTP+NGDTN charged track
   -
     Called by   : SELWWA,SELWWB
     Calls  : QPTRCK,QTRKCH
     Input banks : PFRF,PFRT
   -
                                     Author: J. Yamartino   28-May-1996
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELWWA                                                                          
   SELWWB                                                                          
        |---- TRKWWS                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  QPTRCK                                                   
                   |----  QTRKCH                                                   
                   |----  SQRT                                External             
   
 
3 TRPFRF
         SUBROUTINE TRPFRF(I,PP1,IRF)
  ------------------------------------------------------------------------------
    CKEY EDIR TRACKS 4-MOMENTUM
  ------------------------------------------------------------------------------
   Charged tracks momentum.
   -
     Input  : I   = PFRF track number
     Output : PP1 = PX, PY, PZ and PTOT*charge
              IRF = Return code
                     0 : success
                    -1 : overflow problem in pt value
   -
     Called by   : LEPTO,TRUSLU
     Calls  : None
     Input banks : PFRF
   -
                                  Author: J.C.Brient     date : 29/6/89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   CLAS24                                                                          
   LEPTO                                                                           
   TRUSLU                                                                          
        |---- TRPFRF                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  VMOD                                External             
   
 
3 TRUSLU
         SUBROUTINE TRUSLU(ITRQUA,KNCHS,THRUST,AXTR)
  ------------------------------------------------------------------------------
    CKEY EDIR THRUST
  ------------------------------------------------------------------------------
   Gives the correct format for thrust calculation and call the
    thrust routine.
   -
     Input  : ITRQUA  = Charged tracks quality array.
                        Track quality defined in LEPTO.
              KNCHS   = Number of good charged tracks.
                        Good tracks defined in LEPTO.
     Output : THRUT   = Thrust.
              AXTR    = Thrust axes.
   -
     Called by : LEPTO
     Calls     : ULTHRU,TRPFRF
     Input banks : PFRF
   -
   Author:  J.C.Brient        Date : 29/6/89
    M.Cattaneo        Date : 21/7/96
     Reject tracks with bad TRPFRF return code
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   CLAS24                                                                          
   LEPTO                                                                           
        |---- TRUSLU                                                               
                   |----  NAMIND                              External             
                   |----  TRPFRF                                                   
                   |----  SQRT                                External             
                   |----  ULTHRU                                                   
   
 
3 ULANGL
         FUNCTION ULANGL(X,Y)
  ------------------------------------------------------------------------------
    CKEY EDIR
  ------------------------------------------------------------------------------
   Routine not documented
   -
     Input  :
     Output :
   -
                                      Author: J.C.Brient - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ULTHRU                                                                          
        |---- ULANGL                                                               
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  ACOS                                External             
                   |----  ASIN                                External             
   
 
3 ULTHRU
         SUBROUTINE ULTHRU(MXWORK,N,PP,IFLAG,THR,THRAX,OBL)
  ------------------------------------------------------------------------------
    CKEY EDIR THRUST JETSET
  ------------------------------------------------------------------------------
   Jetset routine
   -
     Could be improved!!!
     modified for I/O via arguments
   -
     Input  : MXWORK number of working dimensions (usually=42)
              N  # of particles
              P(j,i)= px,py,pz,E of ith particle (i=1,N)
              IFLAG(i) =0 if particle i enters calculus
     Output : THR   = thrust
              THRAX =   "    axes
              OBL   = oblateness
   -
     Called by   : TRUSLU
     Calls  : VUROBO
     Input banks : None
   -
                                                        Author: Jetset!
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TRUSLU                                                                          
        |---- ULTHRU                                                               
                   |----  VZERO                               External             
                   |----  ULANGL                                                   
                   |----  VUROBO                                                   
                   |----  SQRT                                External             
                   |----  MIN                                 External             
                   |----  SIGN                                External             
                   |----  INT                                 External             
                   |----  RNDM                                External             
                   |----  MOD                                 External             
                   |----  ABS                                 External             
   
 
3 VDCOSM
         LOGICAL FUNCTION VDCOSMJ(IDUMMY)
  ------------------------------------------------------------------------------
    CKEY EDIR VDET COSMIC
  ------------------------------------------------------------------------------
   Select cosmic in vdet acceptance
   -
       Input  : None
       Output : VDCOSMJ - true if event passes VDET cosmic selection
   -
       Called by  : SELEVT
       Calls      : nothing
       Banks used : PFRF, PFRT
   -
                                       Author D.Rousseau  15/03/95
   
 
3 VUROBO
         SUBROUTINE VUROBO(N,P,IFLAG,THE,PHI,BEX,BEY,BEZ)
  ------------------------------------------------------------------------------
    CKEY EDIR ROTATE/BOOST
  ------------------------------------------------------------------------------
   Routine not documented
   -
     Input  :
     Output :
   -
     Called by   : ULTHRU
     Calls  : None
     Input banks : None
   -
                                      Author: J.C.Brient - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ULTHRU                                                                          
        |---- VUROBO                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 WCLUS
         SUBROUTINE WCLUS(NCLUS)
  ------------------------------------------------------------------------------
    CKEY EDIR CLUSTERS
  ------------------------------------------------------------------------------
   This routine counts the number of clusters using the wires.
   -
     Input  : None
     Output : NCLUS  = Number of clusters
   -
     Called by   : SELCAL
     Calls  : None
     Input banks : None
   -
                                       Author: M.N.Minard - 910400
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELCAL                                                                          
        |---- WCLUS .                                                              
   

2 FMTR

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various subprogram related to muon tracking
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     FMELOS     Compute energy loss in current step
     FMHELX     Performs the tracking of one step in a magnetic field
     FMHITB     Find intersection of track with boundary of region irg
     FMINIT     Initialise geometry, material constants and cuts for muon tracking.
     FMMULX     Predict mult. scattering error at extrapolated point
     FMPRNT     Print out properties of volumes for fast muon tracking
     FMREGN     This routine finds the current volume given the position of a
     FMSCAT     Compute displacent of position and direction of track over step
     FMTRAK     Track through fiducial regions until the particle leaves the

3 FMELOS
         SUBROUTINE FMELOS(IRG,P,SLENG,DP)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Compute energy loss in current step
    J. Hilgart 23/03/88
    Treat particles with Bethe-Bloch formula assuming muon mass
   Bethe-Bloch: dE/dx = c1/beta**2*[ ln(c2*(beta*gam)**2)-beta**2][Mev/cm]
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FMTRAK                                                                          
        |---- FMELOS                                                               
                   |----  SQRT                                External             
   
 
3 FMHELX
         SUBROUTINE FMHELX (CHARGE,STEP,VECT,VOUT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
       *****************************************************************
       *
   Performs the tracking of one step in a magnetic field
       *  The trajectory is assumed to be a helix in a constant field
       *  taken at the mid point of the step.
       *  Parameters:
       *   input
       *     STEP =arc length of the step asked
       *     VECT =input vector (position,direction cos and momentum)
       *     CHARGE=  electric charge of the particle
       *   output
       *     VOUT = same as VECT after completion of the step
       *
       *    ==>Adapted from GEANT3 routine GHELIX
       *       Author    M.Hansroul  *********
       *
       *****************************************************************
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FMHELX                                                               
                   |----  FMREGN                                                   
                   |----  UFIELD                                                   
                   |----  SQRT                                External             
                   |----  CROSS                               External             
                   |----  VUNIT                               External             
                   |----  VDOT                                External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
   
 
3 FMHITB
         SUBROUTINE FMHITB(IRG,PAR,CHARG,PAREX,SLENG,ICODE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Find intersection of track with boundary of region irg
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FMTRAK                                                                          
        |---- FMHITB                                                               
                   |----  FMRMAX                              External             
                   |----  UFIELD                                                   
                   |----  SQRT                                External             
                   |----  AUHCYL                                                   
                   |----  AULCYL                                                   
                   |----  STFRACCALLFMHELX                    External             
                   |----  UCOPY                               External             
                   |----  FMREGN                                                   
                   |----  ABS                                 External             
   
 
3 FMINIT
          SUBROUTINE FMINIT
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Initialise geometry, material constants and cuts for muon tracking.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FMINIT                                                               
                   |----  NAMIND                              External             
                   |----  SQRT                                External             
                   |----  ALOG                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
   
 
3 FMMULX
         SUBROUTINE FMMULX(P,AM,NRGN,IRGN,TPAR,XYZ,STH2,SR02)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Predict mult. scattering error at extrapolated point
     INPUT:
             P = Initial track momentum
             AM = particle mass
             NRGN = No of regions crossed
             IRGN(NRGN) = Region numbers crossed
             TPAR(14,NRGN) = track parameters at each crossing
             XYZ(3) = Coordinates of point for evaluating
                      cumulative m/s.
     OUTPUT:
             STH2 = Squared mult. scat. angular error
             SR02 = Squared mult. scat. position error
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FMMULX                                                               
                   |----  SQRT                                External             
                   |----  VDIST                               External             
   
 
3 FMPRNT
         SUBROUTINE FMPRNT
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print out properties of volumes for fast muon tracking
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FMPRNT                                                               
                   |----  FMRMAX                              External             
   
 
3 FMREGN
         SUBROUTINE FMREGN (VEC,IRG)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   This routine finds the current volume given the position of a
     particle.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FMHELX                                                                          
   FMHITB                                                                          
   FMTRAK                                                                          
        |---- FMREGN                                                               
                   |----  SQRT                                External             
                   |----  FMRMAX                              External             
   
 
3 FMSCAT
         SUBROUTINE FMSCAT(PINPUT,STEPM,XMASS,RADL,POUT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Compute displacent of position and direction of track over step
     of length STEP adopting the Gaussian formalism used in routine
     GMUL in GEANT 3.10. (see GEANT3 manual, PHYS 320).
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FMTRAK                                                                          
        |---- FMSCAT                                                               
                   |----  UCOPY                               External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  RNDM                                External             
                   |----  ALOG                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
   
 
3 FMTRAK
         SUBROUTINE FMTRAK (VEC,Q,NRGN,IRGN,TPAR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Track through fiducial regions until the particle leaves the
     detector or its energy falls below some minimum value
     INPUT:
             VEC(7) = $x,y,z,dx/ds,dy/ds,dz/ds,|p| at start point
               Q    = charge of track
     OUTPUT:
             NRGN   = No of regions crossed (Max = 11)
             IRGN(*) = Region numbers crossed
             TPAR(14*NRGN) = array of track parameters at each crossing
                 1 - 6. $x,y,z,dx/ds,dy/ds,dz/ds at entry to
                        present volume
                     7. Momentum |p| on exit from volume (after
                        energy loss)
                 8 -13. Parameters after mutliple scattering on
                        exit from present volume.
                    14. Step length in present volume
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FMTRAK                                                               
                   |----  UCOPY                               External             
                   |----  FMREGN                                                   
                   |----  FMHITB                                                   
                   |----  FMSCAT                                                   
                   |----  FMELOS                                                   
   

2 FYXX

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     FYXX package : build FYxx banks (kinematics)
     The FYXX package translates and filters MONTE CARLO tracks from one
     set of banks (KINE,VERT,KHIS,KPOL,KVOL) to another set
     (FKIN,FVER,FPOI,FPOL)  which is more convenient for analysis. A few
     utility routines are also included.
     When the package is used to
     translate KINE etc. to FKIN etc. certain types of 'uninteresting'
     tracks may be dropped: those tracks which originate
     in the ITC electronics or TPC endplate, tracks which originate in
     the calorimiters, and tracks whose momenta are below a certain
     threshold. Certain tracks will be kept regardless of these cuts,
     namely tracks which came from the event generator.
    
     The FYXX package must be initialized with a call to FYIRUN :
          CALL FYIRUN(0.,TKDRO,SHDRO,CUTRA)
     INPUTS:
           TKDRO       = IF true THEN drop history of interactions
                         in ITC electronics and TPC endplate
           SHDRO       = IF true THEN drop history of interactions
                         in calorimeters
           CUTRA       = IF not 0. THEN drop track with momentum
                         below CUTRA
    
      and for each event there must be a call to FYKINE :
          CALL FYKINE(DROP,GARB,IBFUL)
     - input arguments :
            DROP     = character flag
                       if = 'DROP' then drop KINE,VERT,KHIS,KVOL,KPOL banks
            GARB     = character flag
                       if = 'GARB' then make a garbage collection
     - output argument :
            IBFUL    = -1 means not enough space in BOS array
    
     ! 980313 corr.file no.5 to ALEPHLIB 30.7
        FYKILL : Don't kill vertices in TPC passive material at large angles
                 (membrane et al., resistor chain, laser mirrors and prisms)
                                                                    (S.Wasserbaech)
     
     ! 980401 corr.file no.6 to ALEPHLIB 30.7
        FYFKIN : Fill FSHO monte carlo bank from KSHO bank (B.Bloch)
        FYIRUN : Add FSHO bank to E list                   (B.Bloch)
        FYKINE : Drop also KSHO bank                       (B.Bloch)
        FYTOKI : Handle also KSHO/FSHO banks               (B.Bloch)
    
     ! ALEPHLIB 30.3
        FYRELA.H : Increase MAXMCX to 2000 (from 1000) to cope with PHOT02
                   events with too many KINE banks                   (W.Manner)
    
     ! 960823 corr.file no.1 to ALEPHLIB 21.5
        FYTREE - reset the number of kept tracks if some tracks were kept
                 without the vertex origin.
        FYFKIN - print FKIN/FVER when FYDEB flag is defined.
    
     ! ALEPHLIB 21.5
       FYIRUN : Fix a string concatenation (M.Cattaneo 22-July-96)
    
     ! ALEPHLIB 21.3
       FYRELA.H : Remove # as first character of 1 line, breaks CPP
    
     ! ALEPHLIB 20.5
       FYINEV : remove reference to ELISAD variable which was not set.
    
     ! ALEPHLIB 15.6
       FYKILL : Correction for very rare cases giving a faulty FKIN bank
                (J.Boucrot)
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     FYFKIN     Fill fkin and fver monte carlo banks from kine and vert banks
     FYINEV     Fxxx dst format event initialization.
     FYIRUN     Fxxx dst format one-time initialization.
     FYKILL     Tests which kine/vert banks are to be killed
     FYKINE     Translate kingal or galeph banks to equivalent fxxx mc banks
     FYLUHC     Decode lund history code.
     FYNHIS     Return the new history code
     FYREDC     Decode fxxx data card
     FYTOKI     Convert from fver,fkin,fpol,fzfr,fsho
     FYTREE     Build arrays which allow conversion from kine and vert banks

3 FYFKIN
         SUBROUTINE FYFKIN(IBFUL)
  ------------------------------------------------------------------------------
    CKEY FYXX  /INTERNAL
  ------------------------------------------------------------------------------
   Fill fkin and fver monte carlo banks from kine and vert banks
    Fill FPOL and FZFR monte carlo banks from KPOL and KZFR banks
    Fill FSHO monte carlo bank from KSHO bank
   - J. Hilgart 05.07.87             B.Bloch 10/10/90,13/03/98
   - Input banks   : INDKIN, INDVER, JDKNFO, JDKOFN, JDVOUT
   - Output banks  : FKIN, FVER, FPOI ,FPOL,FZFR,FSHO
   - Output argument : IBFUL = -1 if not enough space to book a bank
    by FYKINE
     AUBOS                                    from  ALEPHLIB.HLB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FYKINE                                                                          
        |---- FYFKIN                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  BWIND                               External             
                   |----  INTCHA                              External             
                   |----  FYNHIS                                                   
                   |----  BSWAP                               External             
   
 
3 FYINEV
         SUBROUTINE FYINEV(IBFUL)
  ------------------------------------------------------------------------------
    CKEY FYXX  /INTERNAL
  ------------------------------------------------------------------------------
    - 871307          mods 310588
   Fxxx dst format event initialization.
    this routine has already been called in this event, do not
    certain steps dealing w/ MC info.
    : IBFUL = -1 if not enough space to book a bank
   - Called from    USER
   - Calls          BLIST,BWIND,BDROP,WBANK,WDROP    from BOS.OLB
                    FYKILL                           from ALEPHLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FYKINE                                                                          
        |---- FYINEV                                                               
                   |----  NAMIND                              External             
                   |----  NDROP                               External             
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
                   |----  BWIND                               External             
                   |----  FYKILL                                                   
                   |----  WDROP                               External             
   
 
3 FYIRUN
         SUBROUTINE FYIRUN(BFIEL,TKDRO,SHDRO,CUTRA)
  ------------------------------------------------------------------------------
    CKEY FYXX MCARLO KINE INIT /USER
  ------------------------------------------------------------------------------
    - 871307   B.Bloch 901010,980316
   Fxxx dst format one-time initialization.
   
         BFIEL       = Magnetic field in kGauss
         TKDRO       = IF true THEN drop history of interactions
                       in ITC electronics and TPC endplate
         SHDRO       = IF true THEN drop history of interactions
                       in calorimeters
         CUTRA       = IF not 0. THEN drop track with momentum
                       below CUTRA
   - Called from    USER              from ALEPHLIB.HLB
   - Calls   BKFMT                    from BOS77.HLB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FYIRUN                                                               
                   |----  BKFMT                               External             
                   |----  NAMIND                              External             
                   |----  LNBLNK                              External             
                   |----  MOD                                 External             
   
 
3 FYKILL
          SUBROUTINE FYKILL (IBFUL)
  ------------------------------------------------------------------------------
    CKEY FYXX  / INTERNAL
  ------------------------------------------------------------------------------
   Tests which kine/vert banks are to be killed
    Boucrot  880525
    S Wasserbaech, 980312  Don't kill vertices in TPC passive
      material at large angles (membrane et al., resistor chain, laser
      mirrors and prisms)
   - Output argument : IBFUL = -1 if not enough BOS space
   - Input banks   : INDKIN, INDVER
   - output banks  : JDKEKS, JDVNFO
     1 word / KINE or VERT bank  = 0 if the KINE or VERT is killed
                                   new serial # if KINE or VERT is kept
    from FYKINE                           from ALEPHLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FYINEV                                                                          
        |---- FYKILL                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  WBANK                               External             
                   |----  CHAINT                              External             
                   |----  ABS                                 External             
   
 
3 FYKINE
         SUBROUTINE FYKINE(DROP,GARB,IBFUL)
  ------------------------------------------------------------------------------
    CKEY FYXX MCARLO KINE / USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 871202             B.Bloch 901010,980316
   Translate kingal or galeph banks to equivalent fxxx mc banks
    banks are KINE,VERT,KHIS,KVOL --> FKIN,FVER
                 KPOL,KZFR,KSHO      --> FPOL,FZFR,FSHO
    tracks and vertices depending on flags set at beginning of run
    a call to FYIRUN : A CALL TO FYIRUN IS MANDATORY.
    there is a problem with space, the old banks are not dropped.
   - input arguments :
          DROP     = character flag
                     if = 'DROP' then drop KINE,VERT,KHIS,KVOL,KPOL
                                 KSHO and KZFR banks
          GARB     = character flag
                     if = 'GARB' then make a garbage collection
   - output argument :
          IBFUL    = -1 means not enough space in BOS array
   - this routine must be called once per event after reading
   - USER routine
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FYKINE                                                               
                   |----  NAMIND                              External             
                   |----  FYINEV                                                   
                   |----  FYTREE                                                   
                   |----  FYFKIN                                                   
                   |----  BDROP                               External             
                   |----  BGARB                               External             
                   |----  WDROP                               External             
   
 
3 FYLUHC
         INTEGER FUNCTION FYLUHC(IFKIN,MXDAU,LUDAU)
  ------------------------------------------------------------------------------
    CKEY FYXX MCARLO KINE HISTORY / USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 880920
   Decode lund history code.
    Return the # of daughters and the list of daughter#s of a track
    known by its FKIN row #.
    There are FYLUHC such daughters.
    if FYLUHC .eq. 0 then NO daughter, or NOT a LUND history code
    if FYLUHC .gt. MXDAU then the buffer LUDAU is too small
   - structure: INTEGER FUNCTION subprogram
                User Entry Name: FYLUHC
                External References: NAMIND(BOS77)
                Comdecks referenced: BCS, BMACRO
   - usage  : NDAU  = FYLUHC (IHCOD,MXDAU,LUDAU)
   - input  : IFKIN = track# known by its row# in FKIN bank
              MXDAU = length of LUDAU array
   - output : LUDAU = array which contains the list of daughters
              FYLUHC= # of daughters ( the #s of the 1st MXDAU are
                      stored in LUDAU)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PRFKIN                                                                          
        |---- FYLUHC                                                               
                   |----  MOD                                 External             
                   |----  NAMIND                              External             
   
 
3 FYNHIS
         INTEGER FUNCTION FYNHIS (IOHIS)
  ------------------------------------------------------------------------------
    CKEY FYXX  / INTERNAL
  ------------------------------------------------------------------------------
   Return the new history code
   - F.Ranjard - 881125
   - Input     : IOHIS  old history code
   - Output    : FYNHIS new history code
   - Called by : FYFKIN
                 assume that JDKNFO exists, use IHTYPE history type
                 to recalculate the history code properly.
                 returns the old history code in case the history type
                 is unknown, or a new history code cannot be computed.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FYFKIN                                                                          
        |---- FYNHIS                                                               
                   |----  MOD                                 External             
   
 
3 FYREDC
         SUBROUTINE FYREDC (FDRTK,FDRSH,CUTF)
  ------------------------------------------------------------------------------
    CKEY FYXX MCARLO KINE CARDS / USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 880622
   Decode fxxx data card
   - output arguments:
              FDRTK /L   = .T. if one of the arguments = 'DRTK'
                         = .F. if one of the arguments = 'KPTK'
              FDRSH /L   = .T. if one of the arguments = 'DRSH'
                         = .F. if one of the arguments = 'KPSH'
              CUTF  /R   = momentum cut
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FYREDC                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
   
 
3 FYTOKI
         SUBROUTINE FYTOKI
  ------------------------------------------------------------------------------
    CKEY FYXX  / INTERNAL
  ------------------------------------------------------------------------------
   - J. Hilgart 14/06/88
                           modified by - F.Ranjard - 881107
                                         B.Bloch   - 901010,980316
   Convert from fver,fkin,fpol,fzfr,fsho
              to KINE,VERT,KHIS,KVOL,KPOL,KZFR,KSHO
    drop banks FKIN, FVER ,FPOL,FZFR,FSHO
    add KINE, VERT, KVOL, KHIS ,KPOL,KZFR,KSHO to the E-list
   - Calls: AUBOS                        from ALEPHLIB.HLB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FYTOKI                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  UCOPY                               External             
                   |----  INTCHA                              External             
                   |----  BSWAP                               External             
                   |----  BLIST                               External             
                   |----  BDROP                               External             
   
 
3 FYTREE
         SUBROUTINE FYTREE(IBFUL)
  ------------------------------------------------------------------------------
    CKEY FYXX  / INTERNAL
  ------------------------------------------------------------------------------
   - J. Hilgart 030987
   Build arrays which allow conversion from kine and vert banks
    to a true tree structure FVER,FKIN.
    This means  all secondary tracks from a vertex asspecified by
    FVER are all listed contiguously.
   - Input banks : KINE, VERT
   - Output bank : JDKNFO, JDKOFN, JDVOUT
   - Output
       : IBFUL = -1 if not enough space to book a bank
    from  FYKINE                      from ALEPHLIB.HLB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FYKINE                                                                          
        |---- FYTREE                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  WBANK                               External             
                   |----  MIN                                 External             
                   |----  WDROP                               External             
   

2 GAM

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     1st entry into GAMPACK set
     ! ALEPHLIB 312
        GBULOS : Double precision fixes for Linux                   (D.Smith)
        GFRAC  : Double precision fixes for Linux                   (D.Smith)
                 Suppress unused declarations                       (M.Cattaneo)
     ! ALEPHLIB 310
         CORAD94: Apply correction from EGAZ bank. 
                  Switched off if OLGA data card is present  (M-N.Minard)
     ! ALEPHLIB 20.4
       GAMPEX, VOISTO, GIVSTO - add several protections.
     ! ALEPHLIB 204
       GAMPEX, VOISTO, GIVSTO - add several protections.
     ! ALEPHLIB 203
       GAMPEX - Call ECETDI  to correct for gain correction from ECMC
              - New feature added to calculate the probability of
                a Gampex photon to be fake from electromagnetic or
                hadronic origine (GFAKE,GEMFAK,GHAFAK)
       CORAD94- Replace CORADOC for the current version of alephlib
       GAPGAC - Built photon bank PGAC
     ! ALEPHLIB 157
       CORADOC - correct a bug
     ! ALEPHLIB 154
       GXMCLM - add a limit on the cluster energy to be treated
     ! ALEPHLIB 152
       various corrections in CORADOC, GAMPEX, GFRAC, GXIMPA
       for the overlap region
     ! ALEPHLIB 151
       CORADO is purged
       CORADOC - new function CORADOC (EN,TH,PHI)
       GAMPEX  - get run number from ABRUEV to distinguish between
                 Real and MC data
                 call CORADOC with new argument list
       GAPGID  - bug correction
       MORSTO  - suppress reference to BMACRO
       reintroduce old version for backward compatibility:
       GAMPEK, GATRAL, ISPARK, MECRFC behind *DK VOISTO.
       These decks should be deleted when GAMPEK is no longer used.
       the variable E4ETB in routine DEFOVE keeps the new value 0.851
       instead of the old one 0.85
    
     ! ALEPHLIB 146 : new version
        main routine is called GAMPEX
          SUBROUTINE GAMPEX(IPECO,EMIGA,LTOTGA,NNGA,GAMVE,GAMCE,IRTFG)
        Input :
                 IPECO is the PECO cluster number
                 EMIGA is the min. energy for a photon
                 LTOTGA is the total length of GAMVE
                        in the user program:
                        GAMVE should be dimensioned to (20,NPHOT) and
                        GAMCE should be dimensioned to (20,NPHOT) and
                        LTOTGA = 20*NPHOT
                        in GAMPEK: GAMVE is dimensioned to (20,*)
                        the maximum number of photons will be: LTOTGA/20
        Output:
    
                 NNGA  Number of photons
    
                 GAMVE(I  , Photon number)  Photon Array
                      (1,     Energy    |   Best estimates
                      (2,     Theta     |   assuming only
                      (3,     Phi       |   1 gamma
                      (4,     Ad-hoc  energy correction (multiplicative)
                      (5,     FLAG border region endcap
                      (6,     F4
                      (7,     Normalized estim. for substructure
                      (8,     FLOAT( NST1 + 100*NST2 + 10000*NST3)
                              where  nstX is the # of storey in stack X
                      (9,     Estack1/ETOT
                      (10,    Estack2/ETOT
                      (11,    FLOAT( MORS1 + 10*MORS2 + 100*MORS3)
                              where  morsX is = 1 if there a dead storey
                              in central 3 x 3 matrix in stack X
                      (12,    Eraw
                      (13,    EBNEUT flag ECAL crack
                      (14,    itheta peak
                      (15,    jphi   peak
                      (16,    min.dist. to ch.track with barycen.
                      (17,    theta  barycenter  (from the vertex)
                      (18,    phi    barycenter  (from the vertex)
                      (19,    radius of the shower from barycenter
                      (20,    -1 for isolated germination storeys
                              Egerm(storey)-Eneighb./sqrt(Eneighb.)
    
                 GAMCE(I  ,   Cluster number)  Output array from BULOS
                      (1,     Small sigma of cluster in Eigenframe
                      (2,     Large sigma of cluster in Eigenframe
                      (3,     Third moment of cluster in direction of ALAMS
                      (4,     Third moment of cluster in direction of ALAML
                      (5,     Mass of cluster if two photon cluster
                    * Item 6-8 not yet implemented
                      (6,     Corrected small sigma for one photon cluster
                      (7,     Corrected large sigma for one photon cluster
                      (8,     Corrected mass of cluster for one photon
                      (9,     QE of 1st Gam for two photon cluster
                     (10,     QX of 1st Gam for two photon cluster
                     (11,     QY of 1st Gam for two photon cluster
                     (12,     QZ of 1st Gam for two photon cluster
                     (13,     QE of 2nd Gam for two photon cluster
                     (14,     QX of 2nd Gam for two photon cluster
                     (15,     QY of 2nd Gam for two photon cluster
                     (16,     QZ of 2nd Gam for two photon cluster
                     (17,     float(Error code)
                     (18,     float(Warning code)
                     (19,
                     (20,     gamma-gamma mass
    
    
    
               IRTFG  Return code
                      =  1 OK but .GE. 1 storey number out of range
                      =  0 EVERYTHING OK
                      = -1 missing bank (PEST,ETDI,PCRL,PECO)
                      = -2 # of PFRF track > NXM
                      = -3 # of storeys on cluster PECO > NSTRMX
                      = -4 # of cluster found > NKLUMX
                      = -5 # of gammas  found > NFOMAX
                      = -6 1 gamma contain > NSTGAX
                      = -7 ECAL geometry package not initialized before calling
                           GAMPEK
                      = -8 problem in EBNEUT initialization
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ARISTO     True if the tower (itheta,jphi) has a face on a crack
     BGETDS     Store the dead storeys in array imort
     CHACUT     Store in right format the storeys info. of photon for stack kstag
     CORAD94    Correct ecal cluster energy
     CORADOC    Correct ecal cluster energy
     DEFOVE     Define overlap region fron dbase bank ecgn and basic parameters
     DSTACK     Computes the angular distance expressed at pi/2 between the barycenters
     EBGRIX     Returns the storey numbers in the 3*3 grid
     EC4TRA     Reads the energies in the four central storeys associated to
     ECETDI     For each storey give the correction factor
     EVTVER     Get event vertex (x,y,z) from ytopol (x,y) and mean z0
     GAFORM     Store in right format the storeys info. of photon for stack kstag
     GAGRID     Create the matrix around the peak for stack kspic
     GAMFAK     Returns the real array pfake(4) = output of fake photon analysis
     GAMPEK     Finds photon in peco cluster
     GAMPEX     Finds photon in peco cluster
     GAPGAC     From gapgpc routine to fill extended photon bank pgac
     GAPGPC     Build pgpc bank (result of gampec)
     GATRAL     Compute f4/etot as function of theta,phi
     GBULOS     Calculate eigenvariances cluster.
     GEMFAK     Main routine for the electromagnetic fake photon likelihood
     GF4LST     Returns in kf4gri(2,2,3) the list of pest storey numbers in the
     GFAKE      Preparation of the elec. fake photon likelihood computation
     GFAKEW     Computes likelihood that photon "2" is an electromagnetic fake photon
     GFRAC      Output gfrac fraction of energy in central 2x2 towers
     GHAFAK     Main routine for hadronic fake photon likelihood computation
     GIVSTO     Reads in the general arrays estoi the individual informations of
     GXEM       Used in the computation of the electromagnetic fake photon likelihood.
     GXHAD      Used in the computation of the hadronic fake photon likelihood.
     GXIMPA     Corrected impact estimation for a gamma.
     GXMCLM     Guess the number of photons in a gampek photon on the basis of
     GXTRAN     Use the 3 x 3 matrix to compute some varaibles such f4, etc...
     INTOF4     True if the storey istore belongs to the the array kf4gri
     ISPARK     Search for spark in ecal
     MECRFC     Test ecal crack for photon
     MORSTO     Test if there is deads storeys in the central matrix around the peak
     OVESTO     Pour une storey itheta,kstack dit si elle est dans la liste des
     STOGAM     Load list of storeys for photon igam of the last pass gampec
     TRDIST     Distance track/straight line
     TRFIRE     Finds the storeys crossed by the track extrapolation
     VOISTO     True for 2 neighbours storeys

3 ARISTO
         LOGICAL FUNCTION ARISTO(ITHETA,JPHI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
       M. Verderi                                             2-10-94
   True if the tower (itheta,jphi) has a face on a crack
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- ARISTO                                                               
                   |----  EMDTOW                                                   
   
 
3 BGETDS
         SUBROUTINE BGETDS
  ------------------------------------------------------------------------------
    CKEY GAMPACK DEADST / USER
  ------------------------------------------------------------------------------
     AUTHOR   : A.Bonissent et A.Rosowsky
   Store the dead storeys in array imort
     Bank EDDB and EKLS are used too load the dead storeys list
     in array IMORT(3,imaxd)
     Input : None
     Output: None
     Calls: None
     Called by GAMPEX or USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
        |---- BGETDS                                                               
                   |----  ABRUEV                              External             
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  GTSTUP                              External             
                   |----  AGETDB                              External             
                   |----  MDARD                               External             
                   |----  IBITS                               External             
   
 
3 CHACUT
         SUBROUTINE CHACUT(PARC,VALP)
  ------------------------------------------------------------------------------
    CKEY GAMPACK STORE/ USER
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Store in right format the storeys info. of photon for stack kstag
     Input :
             PARC    Name of the parameter          CHARACTER*4
             VALP    new value of the param. PARC   REAL
     PARC could be
                 'EZSU'      hard and soft min.storey energy(30 MeV PECO)
                 'DIST'      min. dist. ch.track   stack 1
                 'ECL1'      start cluster stack 1
                 'ECL2'        "      "      "   2
                 'ECL3'        "      "      "   3
                 'ECLU'      min energy st1+st2 for gamma
                 'OK12'      min number of storey stack 1 for gamma
                 'OK23'      min   "         "      "   2  "    "
     Output:
     Calls: None
     Called by GAMPEX or USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              CHACUT.                                                              
   
 
3 CORAD94
         FUNCTION CORAD94(EN,TH,PH)
  ------------------------------------------------------------------------------
    CKEY GAMPACK ECAL
  ------------------------------------------------------------------------------
   Correct ecal cluster energy
   - Author: M.N Minard          930406
   - Revised : M.N Minard        981810 to use EGAZ bank when available
   - Input : EN      : Energy of cluster from 4 towers
   -          TH      : Cluster theta angle (rad)
   -          PH      : Cluster PHI angle (rad)
   - Output: CORAD94 : corrected energy
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              CORAD94                                                              
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  ALVERS                                                   
                   |----  INT                                 External             
                   |----  ADBVER                              External             
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  MIN                                 External             
   
 
3 CORADOC
         FUNCTION CORADOC(EN,TH,PH)
  ------------------------------------------------------------------------------
    CKEY GAMPACK ECAL
  ------------------------------------------------------------------------------
   Correct ecal cluster energy
   - Author: M.N Minard          930406
   - Input : EN      : Energy of cluster from 4 towers
   -          TH      : Cluster theta angle (rad)
   -          PH      : Cluster PHI angle (rad)
   - Output: CORADOC : corrected energy
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              CORADOC                                                              
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  MIN                                 External             
   
 
3 DEFOVE
         SUBROUTINE DEFOVE
  ------------------------------------------------------------------------------
    CKEY GAMPACK ECAL GAMPEX CONSTANT / INTERNAL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Define overlap region fron dbase bank ecgn and basic parameters
     Input : None
     Output: STORE ECOXA and  COMCUX common
     Calls : EPLMST , ERWIDT
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
        |---- DEFOVE                                                               
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  EPLMST                                                   
                   |----  ABS                                 External             
                   |----  ERWIDT                                                   
                   |----  FLOAT                               External             
                   |----  NAMIND                              External             
   
 
3 DSTACK
         REAL FUNCTION DSTACK(THESTA,PHISTA,THEST2,PHIST2)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M.Verderi                                             2-10-94
   Computes the angular distance expressed at pi/2 between the barycenters
     given by (thesta,phista) and (thest2,phist2)
    Called by GHAFAK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GHAFAK                                                                          
        |---- DSTACK                                                               
                   |----  SIGN                                External             
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  TAN                                 External             
                   |----  SQRT                                External             
   
 
3 EBGRIX
           SUBROUTINE EBGRIX( NUST,INDX,KSTO,ITCR,JFCR,KGRID)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
     M. Verderi     29/09/94
     Adapted from EBGRID (author J.Badier   01/09/89)
   Returns the storey numbers in the 3*3 grid
     (change of region in endcap: at least one storey has a number<0)
     Input  :  NUST    Number of storeys of the cluster.
               INDX(1,IST) Theta index of the storey IST.
               INDX(2,IST) Phi index of the storey IST.
               INDX(3,IST) Stack number of the storey IST.
                 KSTO(IST)   Storey index in PEST
                             IST = 1 , NUST
               ITCR      Central tower theta index
               JFCR      Central tower phi index
     Output : KGRID(IT,JF,KS)
                         Index storeys surounding the central tower.
                         IT = Theta index (1 to 3)
                         JF = Phi index   (1 to 3)
                         KS = Stack       (1 to 3)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- EBGRIX                                                               
                   |----  GRID                                External             
                   |----  EBRGCD                                                   
                   |----  MIN                                 External             
                   |----  EMDTOW                                                   
                   |----  IABS                                External             
                   |----  SIGN                                External             
   
 
3 EC4TRA
         SUBROUTINE EC4TRA (JTRA,EC4TR1,EC4TR2,EC4TR3)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    Marc Verderi                                        2-10-94
   Reads the energies in the four central storeys associated to
    the track JTRA
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EC4TRA                                                               
                   |----  NAMIND                              External             
   
 
3 ECETDI
         FUNCTION ECETDI (JT,IP)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   -    M.N Minard                   29-07-94
   For each storey give the correction factor
       from bank ECMC
       JT = Tower number in theta unit
       IP = Tower number in phi unit
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- ECETDI                                                               
                   |----  NAMIND                              External             
                   |----  EMDTOW                                                   
   
 
3 EVTVER
         SUBROUTINE EVTVER (X,Y,Z)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Get event vertex (x,y,z) from ytopol (x,y) and mean z0
   
      Author   :- E. Lancon              8-FEB-1993
   
      Inputs:
           -   None
   
      Outputs:
           -   X,Y       /R    x,y position of event vertex from
                               YTOPOL PYER bank
               Z         /R    from average z0 of tracks with UFITQL
                               quality flag = 1 or 2
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
   GAPGID                                                                          
        |---- EVTVER                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  FLOAT                               External             
   
 
3 GAFORM
         SUBROUTINE GAFORM(NSTAL,LISTAL,ESTAL,LSTK,ESTK,NSTK,KSTAG)
  ------------------------------------------------------------------------------
    CKEY GAMPACK STORE / INTERNAL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Store in right format the storeys info. of photon for stack kstag
     Input :
             NSTAL   # of storeys of the photon   INTEGER
             LISTAL  all the storeys of photon    INTEGER
             ESTAL   storeys energy               REAL
             KSTAG   stack number to store        INTEGER
     Output:
             NSTK    # of storeys in stack        INTEGER
             LSTK    list of storeys              INTEGER
             ESTK    storeys energy               REAL
     Calls: None
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
        |---- GAFORM.                                                              
   
 
3 GAGRID
         SUBROUTINE GAGRID(ITPIC,JFPIC,KSPIC,LST33)
  ------------------------------------------------------------------------------
    CKEY GAMPACK GRID / INTERNAL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Create the matrix around the peak for stack kspic
     Input :
             ITPIC   I row   of the energy peak   INTEGER
             JFPIC   J collumn of the energy peak INTEGER
             KSPIC   stack number                 INTEGER
     Output:
             LST33   matrix around the peak       REAL
     Calls: None
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
        |---- GAGRID                                                               
                   |----  ECRWRG                                                   
                   |----  FLOAT                               External             
                   |----  NINT                                External             
                   |----  ABS                                 External             
   
 
3 GAMFAK
         SUBROUTINE GAMFAK( IGAM, PFAKE )
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
     M.Verderi       Creation 26/09/94
   Returns the real array pfake(4) = output of fake photon analysis
     Input : IGAM  photon number of last gampex call.
     Output:
             PFAKE (01) Fake photon likelihood with electro. hypothesis
             PFAKE (02) Fake photon likelihood with hadroni. hypothesis
             PFAKE (03) Float ( 1000 * Iwarn(Electro) + IWarn(Hadron) )
             PFAKE (04) Float ( Gampex photon number of parent derived
                        the electrom. analysis)
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGAC                                                                          
        |---- GAMFAK.                                                              
   
 
3 GAMPEK
         SUBROUTINE GAMPEK(IPECO,EMIGA,LTOTGA,NNGA,GAMVE,IRTFG)
  ------------------------------------------------------------------------------
    CKEY GAMPACK PHOTON PECO / USER
  ------------------------------------------------------------------------------
       J.C.Brient  - A.Rouge   Creation 1/10/91
   Finds photon in peco cluster
    Reconstruct photon with A.Rouge algorithm (peak finding)
     Input :
              IPECO is the PECO cluster number
              EMIGA is the min. energy for a photon
              LTOTGA is the total length of GAMVE
                     in the user program:
                     GAMVE should be dimensioned to (20,NPHOT) and
                     LTOTGA = 20*NPHOT
                     in GAMPEK: GAMVE is dimensioned to (20,*)
                     the maximum number of photons will be: LTOTGA/20
     Output:
              NNGA  Number of photons
              GAMVE(I  , Photon number)  Photon Array
                   (1-3,    Px , Py , Pz
                   (4       Energy of the photon
                   (5,      # of subtruc. found by EBTRAN
                   (6,      F4
                   (7,   = FLOAT( ICRK )  , ICRK=1 IF ECAL CRAC
                   (8,   = FLOAT( NST1 + 100*NST2 + 10000*NST3)
                         where  nstX is the # of storey in stack X
                   (9    = Estack1/ETOT
                   (10,  = Estack2/ETOT
                   (11,  = FLOAT( MORS1 + 10*MORS2 + 100*MORS3)
                           where  morsX is = 1 if there a dead storey
                           in central 3 x 3 matrix in stack X
                   (12,  = Eraw
                   (13,  = flag about spark
                   (14,  = itheta peak
                   (15,  = jphi   peak
                   (16,  = min.dist. to ch.track with barycen.
                   (17,  = theta of photon from EBNEUT (like-S curve)
                   (18,  = phi   of photon from EBNEUT (like-S curve)
                   (19-20, = 0. (NOT USED)
            IRTFG  Return code
                   =  1 OK but .GE. 1 storey number out of range
                   =  0 EVERYTHING OK
                   = -1 missing bank (PEST,ETDI,PCRL,PECO)
                   = -2 # of PFRF track > NXM
                   = -3 # of storeys on cluster PECO > NSTRMX
                   = -4 # of cluster found > NKLUMX
                   = -5 # of gammas  found > NFOMAX
                   = -6 1 gamma contain > NSTGAX
                   = -7 ECAL geometry package not initialized before calling
                        GAMPEK
     Calls: BGETDS,EBARYC,ECLEAK,EBTRAN,GATRAL,GAFORM,GAGRID,ISPARK
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GAMPEK                                                               
                   |----  NAMIND                              External             
                   |----  DEFOVE                                                   
                   |----  NINT                                External             
                   |----  VZERO                               External             
                   |----  EXPFRF                                                   
                   |----  SQRT                                External             
                   |----  EMDTOW                                                   
                   |----  ECRWRG                                                   
                   |----  ESRBC                                                    
                   |----  FLOAT                               External             
                   |----  ELTA                                External             
                   |----  SORTRQ                              External             
                   |----  VOISTO                                                   
                   |----  AMIN1                               External             
                   |----  TRDIST                                                   
                   |----  MOD                                 External             
                   |----  IABS                                External             
                   |----  BGETDS                                                   
                   |----  EBARYC                                                   
                   |----  LVMAX                               External             
                   |----  ECLEAK                                                   
                   |----  EBTRAN                                                   
                   |----  GATRAL                                                   
                   |----  GAFORM                                                   
                   |----  GAGRID                                                   
                   |----  MORSTO                                                   
                   |----  ISPARK                                                   
   
 
3 GAMPEX
         SUBROUTINE GAMPEX(IPECO,EMIGA,LTOTGA,NNGA,GAMVE,GAMCE,IRTFG)
  ------------------------------------------------------------------------------
    CKEY GAMPACK PHOTON PECO / USER
  ------------------------------------------------------------------------------
       J.C.Brient  - A.Rouge   Creation 1/10/91
   Finds photon in peco cluster
    Reconstruct photon with A.Rouge algorithm (peak finding)
     Input :
              IPECO is the PECO cluster number
              EMIGA is the min. energy for a photon
              LTOTGA is the total length of GAMVE
                     in the user program:
                     GAMVE should be dimensioned to (20,NPHOT) and
                     GAMCE should be dimensioned to (20,NPHOT) and
                     LTOTGA = 20*NPHOT
                     in GAMPEK: GAMVE is dimensioned to (20,*)
                     the maximum number of photons will be: LTOTGA/20
     Output:
              NNGA  Number of photons
              GAMVE(I  , Photon number)  Photon Array
                   (1,     Energy    |   Best estimates
                   (2,     Theta     |   assuming only
                   (3,     Phi       |   1 gamma
                   (4,     Ad-hoc  energy correction (multiplicative)
                   (5,     FLAG border region endcap
                   (6,     F4
                   (7,     Normalized estim. for substructure
                   (8,     FLOAT( NST1 + 100*NST2 + 10000*NST3)
                           where  nstX is the # of storey in stack X
                   (9,     Estack1/ETOT
                   (10,    Estack2/ETOT
                   (11,    FLOAT( MORS1 + 10*MORS2 + 100*MORS3)
                           where  morsX is = 1 if there a dead storey
                           in central 3 x 3 matrix in stack X
                   (12,    Eraw
                   (13,    EBNEUT flag ECAL crack
                   (14,    itheta peak
                   (15,    jphi   peak
                   (16,    min.dist. to ch.track with barycen.
                   (17,    theta  barycenter  (from the vertex)
                   (18,    phi    barycenter  (from the vertex)
                   (19,    radius of the shower from barycenter
                   (20,    -1 for isolated germination storeys
                           Egerm(storey)-Eneighb./sqrt(Eneighb.)
              GAMCE(I  ,   Cluster number)  Output array from BULOS
                   (1,     Small sigma of cluster in Eigenframe
                   (2,     Large sigma of cluster in Eigenframe
                   (3,     Third moment of cluster in direction of ALAMS
                   (4,     Third moment of cluster in direction of ALAML
                   (5,     Mass of cluster if two photon cluster
                 * Item 6-8 not yet implemented
                   (6,     Corrected small sigma for one photon cluster
                   (7,     Corrected large sigma for one photon cluster
                   (8,     Corrected mass of cluster for one photon
                   (9,     QE of 1st Gam for two photon cluster
                  (10,     QX of 1st Gam for two photon cluster
                  (11,     QY of 1st Gam for two photon cluster
                  (12,     QZ of 1st Gam for two photon cluster
                  (13,     QE of 2nd Gam for two photon cluster
                  (14,     QX of 2nd Gam for two photon cluster
                  (15,     QY of 2nd Gam for two photon cluster
                  (16,     QZ of 2nd Gam for two photon cluster
                  (17,     float(Error code)
                  (18,     float(Warning code)
                  (19,
                  (20,     gamma-gamma mass
            IRTFG  Return code
                   =  1 OK but .GE. 1 storey number out of range
                   =  0 EVERYTHING OK
                   = -1 missing bank (PEST,ETDI,PCRL,PECO)
                   = -2 # of PFRF track > NXM
                   = -3 # of storeys on cluster PECO > NSTRMX
                   = -4 # of cluster found > NKLUMX
                   = -5 # of gammas  found > NFOMAX
                   = -6 1 gamma contain > NSTGAX
                   = -7 ECAL geometry package not initialized before
                        calling GAMPEK
                   = -8 problem in EBNEUT initialization
     Calls: BGETDS,EBCDRG,ECLEAK,GXTRAN,GAFORM,GAGRID
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGAC                                                                          
   GAPGPC                                                                          
        |---- GAMPEX                                                               
                   |----  NAMIND                              External             
                   |----  EBINIT                                                   
                   |----  DEFOVE                                                   
                   |----  NINT                                External             
                   |----  VZERO                               External             
                   |----  EXPFRF                                                   
                   |----  SQRT                                External             
                   |----  EMDTOW                                                   
                   |----  ECRWRG                                                   
                   |----  ESRBC                                                    
                   |----  FLOAT                               External             
                   |----  ECETDI                                                   
                   |----  EVTVER                                                   
                   |----  SORTRQ                              External             
                   |----  VOISTO                                                   
                   |----  AMIN1                               External             
                   |----  TRDIST                                                   
                   |----  IABS                                External             
                   |----  MOD                                 External             
                   |----  BGETDS                                                   
                   |----  ATAN2                               External             
                   |----  EBCDRG                                                   
                   |----  LVMAX                               External             
                   |----  EBCLAP                                                   
                   |----  ECLEAK                                                   
                   |----  ABRUEV                              External             
                   |----  EBGRID                                                   
                   |----  GXTRAN                                                   
                   |----  EBGRIX                                                   
                   |----  GF4LST                                                   
                   |----  UCOPY                               External             
                   |----  GIVSTO                                                   
                   |----  INTOF4                                                   
                   |----  ARISTO                                                   
                   |----  OVESTO                                                   
                   |----  GAFORM                                                   
                   |----  GAGRID                                                   
                   |----  MORSTO                                                   
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 GAPGAC
         SUBROUTINE GAPGAC
  ------------------------------------------------------------------------------
    CKEY GAMPACK PGAC EGPR
  ------------------------------------------------------------------------------
   From gapgpc routine to fill extended photon bank pgac
     - BUILD PGAC BANK (RESULT OF GAMPEC)
             EGPR bank (list of photon tower)
      Author   :  MN Minard             27-09-1994
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GAPGAC                                                               
                   |----  BKFMT                               External             
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  NDROP                               External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  GAMPEX                                                   
                   |----  INT                                 External             
                   |----  GAMFAK                                                   
                   |----  AUBPRS                              External             
   
 
3 GAPGPC
         SUBROUTINE GAPGPC
  ------------------------------------------------------------------------------
    CKEY GAMPACK PGPC EGPR
  ------------------------------------------------------------------------------
   Build pgpc bank (result of gampec)
             EGPR bank (list of photon tower)
      Author   :  MN Minard             27-JAN-1993
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GAPGPC                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  NDROP                               External             
                   |----  AUBOS                               External             
                   |----  GAMPEX                                                   
                   |----  INT                                 External             
                   |----  ECLEAK                                                   
                   |----  ABRUEV                              External             
                   |----  AUBPRS                              External             
   
 
3 GATRAL
         FUNCTION GATRAL ( ITPIC,JFPIC,THE,PHI)
  ------------------------------------------------------------------------------
    CKEY GAMPACK F4    / INTERNAL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Compute f4/etot as function of theta,phi
    J.Badier fitted function is used for the transverse energy
    deposition of single photon/electron . The widths of the storeys
    have been obtained from ECAL GEOM.PACKAGE by H.Videau.
     Input :
             ITPIC   Itheta peak                  INTEGER
             JFPIC   Jphi   peak                  INTEGER
             THE     theta  peak                  INTEGER
             PHI     phi    peak                  INTEGER
     Output:
             Function = F4/Etot(itpic,jfpic,the,phi)
     Calls: None
     Called by GAMPEK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
        |---- GATRAL                                                               
                   |----  ESRBC                                                    
                   |----  ABS                                 External             
                   |----  VMOD                                External             
                   |----  COS                                 External             
                   |----  STRPHI                              External             
   
 
3 GBULOS
         SUBROUTINE GBULOS(T,P,E,N,IERROR)
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
   Calculate eigenvariances cluster.
     Find a two photon decomposition of cluster based on
     Eigenvariaces and 3rd moments in direction of major axis.
    Author   : Nigel Keemer
    Modified : C.Goy        18/12/90
    Modified : D.Smith      25/10/99 Double precision fixes for Linux
      Input: T      - 1st coordinate of elements (storeys)
             P      - 2nd coordinate of elements (storeys)
             E      - Energy of elements (storeys)
             N      - Number of storeys in cluster
    Outputs: IERROR - Error
                      = 1 - cluster energy < 0.
      Calls: None
   Bank ref: None
    ref: None
   Bank mod: None
    mod: GULIMP - Decomposition of cluster into two impacts
             GUINFO - Values of second and third moments in Eigenframe
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GXMCLM                                                                          
        |---- GBULOS                                                               
                   |----  ABS                                 External             
                   |----  DATAN2                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  DMAX1                               External             
                   |----  SNGL                                External             
                   |----  DSQRT                               External             
                   |----  SQRT                                External             
   
 
3 GEMFAK
         SUBROUTINE GEMFAK (NNGA,TABEM,TABOUT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M.Verderi                                            2-10-94
   Main routine for the electromagnetic fake photon likelihood
    computation.
    Perfoms a double loops on the list of photons
    tabem (1-17,i) are the inputs, tabout(1-6,i) the outputs
    Input : TABEM ( 1,i) : Energy with gamma hyp. (Not used)
                  ( 2,i) : F4
                  ( 3,i) : Raw energy
                  ( 4,i) : Theta barycenter
                  ( 5,i) : Phi   barycenter
                  ( 6,i) : Germination stack
                  ( 7,i) : Peak storey stack 1 energy
                  ( 8,i) : Peak storey stack 2 energy
                  ( 9,i) : Prfak stack 1
                   (10,i) : Prfak stack 2
                   (11,i) : Raw energy of peak storey stack 1 cluster
                            neighbour (<0 if not in gampex photons list)
                   (12,i) : Raw energy of peak storey stack 2 cluster
                            neighbour (<0 if not in gampex photons list)
                   (13,i) : Raw energy of peak storey stack 3 cluster
                            neighbour (<0 if not in gampex photons list)
                   (14,i) : Border End Cap flag
                   (15,i) : Energy of storeys in the four central towers
                            sharing a face with storeys inside the four
                            central towers of an other photon
                   (16,i) : Energy of storey in the four central towers
                            having a face on a Ecal crack
                   (17,i) : gampex photon number
   
     Output: TABOUT( 1,i) : warning flag = 100. outside acceptance
                                                nothing done (cos>.95)
                                         =  10. Overlap region
                                         =   2. Crack in EnDCap
                                         =   1. Crack in Barrel
                                         =   0. o.k.
                 " ( 2,i) : raw energie of the parent
                                         =   0.0 for "very unlikely
                                                 fake photons" that is
                                                 photons which don't
                                                 satisfy a prelimary
                                                 criterion.
                                                 In this case no
                                                 computation is done
                 " ( 3,i) : electromagnetic fake photon likelihood
   
                 " (> 3,i): not given in the GAMFAK output
                 " ( 4,i): angular distance expressed at pi/2 between
                           the two photons barycenters
                 " ( 5,i): relative angle between the two photons
                 " ( 6,i): flag = 1. if at least one peak storey
                           has an neigbhour not in cluster
                                = 11. if the other cluster verifies also
                           this condition with the photon
   
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GEMFAK                                                               
                   |----  SORTRQ                              External             
                   |----  UCOPY                               External             
                   |----  GFAKE                                                    
   
 
3 GF4LST
         SUBROUTINE GF4LST(ESTO1,ESTO2,ESTO3,INDSTO,KGRID,KF4GRI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M. Verderi                                            2-10-94
    Adapted from GXTRAN
   Returns in kf4gri(2,2,3) the list of pest storey numbers in the
    four central towers of the input grid KGRID(3,3,3)
    Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- GF4LST                                                               
                   |----  GIVSTO                                                   
   
 
3 GFAKE
         SUBROUTINE GFAKE (FAKTAB,PFAKE,WARN,ERAW,DISTAN,ANG12,ECLFL)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M.Verderi                                                2-10-94
   Preparation of the elec. fake photon likelihood computation
    Called by GEMFAK
    Calls  gfakew
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GEMFAK                                                                          
        |---- GFAKE                                                                
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  GFAKEW                                                   
                   |----  FLOAT                               External             
   
 
3 GFAKEW
         REAL FUNCTION GFAKEW(NFAKE,NGOOD)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M.Verderi.   Creation 29/09/94
   Computes likelihood that photon "2" is an electromagnetic fake photon
      induced by the photon "1"
    Input : reference distribution numbers
    Rq    : Fills the words distang,angle12,Keclflag of the common
            emfake
    Called by GFAKE
    Calls GXEM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GFAKE                                                                           
        |---- GFAKEW                                                               
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  SQRT                                External             
                   |----  ASIN                                External             
                   |----  ACOS                                External             
                   |----  COS                                 External             
                   |----  SIGN                                External             
                   |----  TAN                                 External             
                   |----  GXEM                                                     
                   |----  MIN                                 External             
   
 
3 GFRAC
         FUNCTION GFRAC(XXE,YYE)
  ------------------------------------------------------------------------------
    CKEY GAMPACK
  ------------------------------------------------------------------------------
    Modified: D.Smith     991025 Double precision fixes for Linux
              M.Cattaneo  991025 Suppress unused declarations
    Input XXE X position cog in the 4X4 towers
          YYE Y position cog in the 4X4 towers
       -------
   Output gfrac fraction of energy in central 2x2 towers
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GXIMPA                                                                          
        |---- GFRAC                                                                
                   |----  DBLE                                External             
                   |----  SQRT                                External             
                   |----  SNGL                                External             
   
 
3 GHAFAK
         SUBROUTINE GHAFAK (TABHAD,PFAKE,WARNING,D12,D23)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    M.Verderi
   Main routine for hadronic fake photon likelihood computation
    Input : tabhad(19) (real)
          : tabhad( 1) Raw energy of cluster
          : tabhad( 2) Theta barycenter
          : tabhad( 3) Phi   barycenter
          : tabhad( 4) Distance barycenter (no corr. from Scurve) track
          : tabhad( 5) Energy of storeys fired the track extrapolation
          : tabhad( 6) float(number of storeys in stack 1)
          : tabhad( 7)   "  (  "    "    "     "    "   2)
          : tabhad( 8)   "  (  "    "    "     "    "   3)
          : tabhad( 9) Fraction of energy in stack 1
          : tabhad(10)    "     "    "    "    "   2
          : tabhad(11) Energy of outside storeys touching the peak
                       Storeys
          : tabhad(12) Theta barycenter stack 1
          : tabhad(13) Phi      "         "   1
          : tabhad(14) Theta    "         "   2
          : tabhad(15) Phi      "         "   2
          : tabhad(16) Theta    "         "   3
          : tabhad(17) Phi      "         "   3
          : tabhad(18) EIDT energy of four central storeys in stack 1
                       associated to the track
          : tabhad(19)                    "                         2
    Output: PFAKE,WARNING,D12,D23
            WARNING (integer) = 100 no computation done (cos>.95)
                                 10 overlap region (special case)
                                  5 photon in NEUTRAL PECO=>ROUGH
                                    ESTIMATION
                                  1 no EIDT information available for
                                    closest track
            PFAKE   (real)    = hadronic fake photon likelihood
                                Special cases:
                                -1.  if no computation done (cos>.95)
                                ~1.2 if photon recognized as a cluster
                                     of charged track
            D12, D23          = angular distances between stack1-stack2
                                and stack2-stack3 barycenters (computed
                                with dstack)
    Called from GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GHAFAK                                                               
                   |----  INT                                 External             
                   |----  DSTACK                                                   
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  GXHAD                                                    
   
 
3 GIVSTO
         SUBROUTINE GIVSTO(ESTO1,ESTO2,ESTO3,INDSTO,ISTORE,ESTO,KSTACK)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
       M. Verderi                                             2-10-94
   Reads in the general arrays estoi the individual informations of
    storey istore (PEST number). (avoid loops on ESTOi)
    by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
   GF4LST                                                                          
        |---- GIVSTO.                                                              
   
 
3 GXEM
         REAL FUNCTION GXEM (IHIS,XVAR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
     M.Verderi   Creation 29/09/94
   Used in the computation of the electromagnetic fake photon likelihood.
     Returns the content in the "histogram" IHIS of the bin that
     contains the value XVAR.
     Called by GFAKEW
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GFAKEW                                                                          
        |---- GXEM                                                                 
                   |----  FLOAT                               External             
   
 
3 GXHAD
         REAL FUNCTION GXHAD (IHIS,XVAR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
     M.Verderi   Creation 29/09/94
   Used in the computation of the hadronic fake photon likelihood.
     Returns the content in the "histogram" IHIS of the bin that
     contains the value XVAR.
     Called by GHAFAK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GHAFAK                                                                          
        |---- GXHAD                                                                
                   |----  FLOAT                               External             
   
 
3 GXIMPA
         SUBROUTINE GXIMPA( ITTT , JPHI , BARI , BARJ , GERB , CTHCOR )
  ------------------------------------------------------------------------------
    CKEY PHOTONS IMPACT / INTERNAL
  ------------------------------------------------------------------------------
   Corrected impact estimation for a gamma.
     AUTHOR   : J.Badier   31/10/88
     MODIF    : A. Rouge  10/12/92 PADI and PADJ computed
                using H. Videau's ERWIDT  code
                A. Rouge  24/2/93   Compute the expected F4
     Input   : ITET    Tetha index of a tower.
               JPHI    Phi index of a tower.
               BARI    Barycenter coordinates by respect to the
               BARJ       tower center expressed in pads units.
     Output  : GERB    Calculated impact on the first EMCAL plane.
               CTHCOR  Expected   F4
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GXTRAN                                                                          
        |---- GXIMPA                                                               
                   |----  INT                                 External             
                   |----  ESRBC                                                    
                   |----  ESRPL                                                    
                   |----  ACOUPE                                                   
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  FLOAT                               External             
                   |----  ESRPT                                                    
                   |----  AMIN1                               External             
                   |----  GFRAC                                                    
   
 
3 GXMCLM
         SUBROUTINE GXMCLM(IEC,NSTGAM,LSTGAM,THEGA,PHIGA,
  ------------------------------------------------------------------------------
    CKEY PHOTONS  / USER
  ------------------------------------------------------------------------------
        &NIMP,CMINFO,IWARN,IERROR,ECOR)
   Guess the number of photons in a gampek photon on the basis of
    the clusters moments
    Author    :       Nigel Keemer
    Modified  :       C.Goy             18/12/90
    Adapted   :       Marc Verderi      Un beau (?) jour d'avril.
      Input: IEC    - PECO  number of cluster
                  or  ECOB  number of cluster
                    - NSTGAM nombre de storey associe au gamma
                    - LSTGAM la liste de ces storeys
                    - THEGA theta du photon
                    - PHIGA phi   du photon
                    - ECOR energie GAMPEK --> energie du gamma
    Outputs: NIMP   - Number of photons 1 , 2 or 3+
             CMINFO - Additional information
                (1) - Small sigma of cluster in Eigenframe
                (2) - Large sigma of cluster in Eigenframe
                (3) - Third moment of cluster in direction of ALAMS
                (4) - Third moment of cluster in direction of ALAML
                (5) - Mass of cluster if two photon cluster
              * Item 6-8 not yet implemented
                (6) - Corrected small sigma for one photon cluster
                (7) - Corrected large sigma for one photon cluster
                (8) - Corrected mass of cluster for one photon
                (9) - QE of 1st Gam for two photon cluster
               (10) - QX of 1st Gam for two photon cluster
               (11) - QY of 1st Gam for two photon cluster
               (12) - QZ of 1st Gam for two photon cluster
               (13) - QE of 2nd Gam for two photon cluster
               (14) - QX of 2nd Gam for two photon cluster
               (15) - QY of 2nd Gam for two photon cluster
               (16) - QZ of 2nd Gam for two photon cluster
             IWARN  - Warning flag
                      = 1 - invalid storey address ( not serious )
                      = 2 - < 6 storeys (NIMP is set to 1)
             IERROR - Error flag
                      = 1 - banks missing
                      = 2 - arrays too small for No of storeys in cluster
                      = 3 - E < 0
                      = 4 - bulos error
      Calls: VUNIT  - CERNLIB
             GBULOS  - Internal
   Bank ref: PECO,   PEST,   ETDI
    ref: GULIMP - Decomposition of cluster into two impacts
             GUINFO - Values of second and third moments in Eigenframe
   Bank mod: None
    mod: None
    8/4/90
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GXMCLM                                                               
                   |----  NAMIND                              External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  CROSS                               External             
                   |----  VUNIT                               External             
                   |----  IBITS                               External             
                   |----  EINTST                                                   
                   |----  ESRBC                                                    
                   |----  VDOT                                External             
                   |----  GBULOS                                                   
                   |----  EXP                                 External             
                   |----  SQRT                                External             
                   |----  VZERO                               External             
   
 
3 GXTRAN
         SUBROUTINE GXTRAN (ITPIC,JFPIC,ES33,EGRAW,
  ------------------------------------------------------------------------------
    CKEY GAMPACK F4    / INTERNAL
  ------------------------------------------------------------------------------
        &                       F4,EST,THSC,PHSC,COREF,ICOK)
     J.C.Brient      Creation  4/12/92
   Use the 3 x 3 matrix to compute some varaibles such f4, etc...
     Input :
             ES33    ENERGY IN 3 X 3 MATRIX around the peak   REAL
     Output:
             F4       E4/EtotREAL
             EST      estimator ofr any substucture           REAL
             THSC     Best theta estimation from S-curve      REAL
             PHSC     Best phi   estimation from S-Curve      REAL
             COREF    scale to E4t to have best En. estim.    REAL
     Calls: None
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- GXTRAN                                                               
                   |----  SQRT                                External             
                   |----  GXIMPA                                                   
                   |----  ATAN2                               External             
   
 
3 INTOF4
         LOGICAL FUNCTION INTOF4(ISTORE,KF4GRI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
     Marc Verderi                                       2-10-94
   True if the storey istore belongs to the the array kf4gri
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- INTOF4.                                                              
   
 
3 ISPARK
         INTEGER FUNCTION ISPARK(MODUL,NEWPLA)
  ------------------------------------------------------------------------------
    CKEY GAMPACK SPARK/ INTERNAL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Search for spark in ecal
    Looks the energy wires in the 45 planes to flag spark in module
    number MODUL (input)
     Input :
             MODUL   ECAL module number           INTEGER
             NEWPLA  # OF WIRES PLANES IN ALEPH   INTEGER
     Output:
             Function = 1 if The module have a "spark" wires distribution
     Calls: VASUM,VMAXA,LVMAXA
     Called by GAMPEK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
        |---- ISPARK                                                               
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  VASUM                               External             
                   |----  VMAXA                               External             
                   |----  LVMAXA                              External             
                   |----  MOD                                 External             
   
 
3 MECRFC
         INTEGER FUNCTION MECRFC(LST33,KSTAG)
  ------------------------------------------------------------------------------
    CKEY GAMPACK CRACK / INTERNAL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Test ecal crack for photon
     Input :
             LST33   central matrix of the photon INTEGER
             KSTAG   stack number                 INTEGER
     Output:
             Function = 1 if the photon is near a ECAL crack
     Calls: ESRBC,EBCDRG
     Called by GAMPEK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MECRFC                                                               
                   |----  ESRBC                                                    
                   |----  VMOD                                External             
                   |----  ACOS                                External             
                   |----  ATAN2                               External             
                   |----  EBCDRG                                                   
   
 
3 MORSTO
         INTEGER FUNCTION MORSTO(ITPIC,JFPIC,LSTK,NSTK,LST33)
  ------------------------------------------------------------------------------
    CKEY GAMPACK DEAD STOREY / INTERNAL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  1/10/91
   Test if there is deads storeys in the central matrix around the peak
     Input :
             ITPIC   I row   of the energy peak   INTEGER
             JFPIC   J collumn of the energy peak INTEGER
             LSTK    List of storeys (all stack)  INTEGER
             LST33   central matrix of the photon INTEGER
             NSTK    stack number                 INTEGER
     Output:
             Function = 1 if there is dead(s) storey(s) in central matrix
     Calls: None
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
        |---- MORSTO                                                               
                   |----  VOISTO                                                   
   
 
3 OVESTO
         SUBROUTINE OVESTO(ITHETA,KSTACK,IBAREC)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    Verderi                                                 2-10-94
   Pour une storey itheta,kstack dit si elle est dans la liste des
    pathologiques du barrel ou dans celle des storeys de l'endcap
    regard des storeys pathologiques du barrel
    Input : ITHETA,KSTACK(physique) storey
    Output: IBAREC    =   0   : storey non overlap
                      =   1   : storey overlap Barrel ie pathologique
                      =   2   : storey overlap EndCap ie face a une patho
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- OVESTO.                                                              
   
 
3 STOGAM
             SUBROUTINE STOGAM(IGAM , NSTOR , LSTOR, NSMXS)
  ------------------------------------------------------------------------------
    CKEY GAMJUL USER LIST STOREYS/GAMJUL
  ------------------------------------------------------------------------------
     J.C.Brient      Creation  6/11/91
   Load list of storeys for photon igam of the last pass gampec
     Input :
             IGAM    photon number of the last gampec pass INTEGER
             NSMXS   max. number of storey in photon       INTEGER
     Output:
             NSTOR   number of storeys in photon           INTEGER
             LSTOR   list of PEST storeys in photon        INTEGER
             lstor(NSMXS)
     Calls: None
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              STOGAM                                                               
                   |----  MIN                                 External             
   
 
3 TRDIST
         FUNCTION TRDIST(Q,P)
  ------------------------------------------------------------------------------
    CKEY GAMPACK DISTANCE / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : A. Rouge       3/01/90
   Distance track/straight line
     Input :
             Q    Q(6) Line parameters: x0 y0 z0 cx cy cx         REAL
                  coordinates of a point and direction cosines
             P    P(3)  Point coordinates : x y z                 REAL
     Output:
             Function = distance track / straight line
     Calls: None
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
        |---- TRDIST                                                               
                   |----  SQRT                                External             
   
 
3 TRFIRE
         SUBROUTINE TRFIRE (JULTRA,NMXSTO,NSTOFI,STOFIR,WARNING)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
       M.Verderi                                            2-10-94
   Finds the storeys crossed by the track extrapolation
       Input : JULTRA = julia track number         (Integer)
               NMXSTO = maximum number of storeys  (Integer)
       Output: NSTOFI = number of storeys fired    (Integer)
               STOFIR (01/02/03,i) = itheta,jphi,kstack of
                        storeys fired              (integer(3,NMXSTO))
               WARNING= -10 jultra not in PFRF
                         1  track doesn't reach the ECAL, nstofi = 0
                         3   "      "     stack 3
                         10 too many storeys found (>nmxsto)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TRFIRE                                                               
                   |----  EPLMST                                                   
                   |----  ABS                                 External             
                   |----  NAMIND                              External             
                   |----  EXPFRF                                                   
                   |----  VUNIT                               External             
                   |----  ECYLND                                                   
                   |----  EFNDSC                                                   
                   |----  EFNDMD                                                   
                   |----  EPLST                                                    
                   |----  VDOT                                External             
                   |----  FLOAT                               External             
                   |----  EFNDTW                                                   
   
 
3 VOISTO
         LOGICAL FUNCTION VOISTO(IST1,IST2)
  ------------------------------------------------------------------------------
    CKEY GAMPACK NEIGHBOURING / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : A. Rouge       3/01/90
              : modify J.C.Brient 1/10/91
   True for 2 neighbours storeys
     Input :
             IST1   itheta,jphi,stack storey 1   INTEGER
             IST2   itheta,jphi,stack    "   2   INTEGER
     Output:
             Function = .TRUE. for 2 neighbour storeys
     Calls: EMDTOW
     Called by GAMPEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
   MORSTO                                                                          
        |---- VOISTO                                                               
                   |----  EMDTOW                                                   
                   |----  IABS                                External             
                   |----  MIN0                                External             
                   |----  MOD                                 External             
   

2 HDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     HCAL geometry package
       The HCAL Geometry Package contains a set of routines wich allows,
     starting from the informations collected in the Aleph Data Base,
     to describe properly the Hadron Calorimeter.
     In more details the package contains routines useful to:
    
               1) Read and expand the D.B Geometrical informations
               2) Trasmit these informations outside
               3) Change Ref. System
               4) Coding and Decoding adress
               5) Correlate Point --> Tower#
                                      Wire#
                                      Module#            and viceversa
                                      SubComponent#
                                      ecc. ecc.
               6)Check Status of components (Dead Zones ,broken Channels and so on)
               7)Print Geometrical Constants
    
     The comunications between the HCAL package and the outside id done only via
     subroutines and functions calls. Now it is used by Galeph and Julia but can
     be used by any other program previous initialisation of the package
     (routine HRDDAF).
     A Note with a full description of the package will be provided soon.
    
     ! ALEPHLIB 15.6
       HFBAHI : correct a bug in the hit finding
       HFBAHIO: new routine which is a copy of HFBAHI before the
                correction of the bug. This routine will be used
                for the '91 and '92 reprocessing to have a coherent
                processing data vs MC.
    
     ! ALEPHLIB 15.5
       HRHTUB : put a protection when running on MC data made
                with JULIA <271
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     HCBOUN     Compute theta (proj) boundaries of hcal towers
     HCCYL      Trasforms the coordinates from 'aleph'  to 'cylindrical' ref.sys
     HCDEIT     If .true. the tube is dead
     HCDPSP     Return the width of the spacer inum in the plane ilay
     HCDRBM     Return the thickness of the module outer wall
     HCDWSP     Evaluate the upper position of spacer inum-1 and the lower position
     HCHECK     Check if a point is inside hcal
     HCLATU     Compute the last tube of a plane
     HCMDPL     Trasform coordinates from module r.s. to plane r.s.
     HCPRGE     Print hcal geometrical and readout constants
     HCRINV     Trasforms coordinates from the module frame to the aleph frame
     HCRVOL     Trasforms the coorners coordinates of the volume
     HCSAMP     Return the average tube dimension in the subdetector ipor
     HCSECO     Calculate geometrical quantities from the d.b. constants
     HDEADM     Create and fill look_up tables for hcal dead tubes
     HFBAHI     Converts wire clusters to hits in hbarrel
     HFBAHIO    Converts wire clusters to hits in hbarrel
     HFBHIT     Converts wire clusters to hits in hbarrel
     HFEHIT     Converts wire clusters to hits in endcap
     HFENHI     Converts wire clusters to hits in endcap
     HFNDMD     Get module #, subcomp # from i,j,k for hcal
     HFNDTW     X,y,z to i,j,k conversion for hcal
     HGETGA     Trasfers same geometrical quantities from db to galeph
     HGETJU     Transfer global hcal geom data to julia
     HGINIT     Ini hcal geometry - get data base in geometry commons
     HINTST     Test if storey indices are in correct range
     HNEIGH     Evaluate eightfold and double_eightfold number
     HNREG      Computes hcal region # from theta index
     HPHMOD     To evaluate the phi value in the barrel module coordinates
     HRDDAF     Get hcal banks and store the content in the commons
     HSRCR      I,j,k to storey corners conversion
     HTADCO     Code the tube adress for the hcal in a standard way
     HTADDE     Decode the tube adress for the hcal in a standard way
     HTSTEC     Return the starting position of the tube itub in the endcap
     HTUACL     Return the active length of each tube in hcal
     HTULEN     Return the active length of each tube in hcal
     HTXANG     Return the double_eightfold inclination
     HTXDTL     Return the double_eightfold maximum length
     HTXSPL     Return the difference in lenght from one wire and the following
     HUSRAN     Compute angles relevant to storey geometry
     HYTRSF     Trasform to plane coordinate system for the end-caps

3 HCBOUN
         SUBROUTINE HCBOUN
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TOWER THETA / INTERNAL
  ------------------------------------------------------------------------------
    *************************************************************
   Compute theta (proj) boundaries of hcal towers
    G. CATANESI 2/12/1985      modified by - F.Ranjard - 880216
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HCSECO                                                                          
        |---- HCBOUN                                                               
                   |----  ALOG                                External             
                   |----  SQRT                                External             
                   |----  TAN                                 External             
                   |----  SINH                                External             
                   |----  ATAN2                               External             
   
 
3 HCCYL
         SUBROUTINE HCCYL(POINT,RL,THETAL,PHIL)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TRANSFORM COORDINATES / USER
  ------------------------------------------------------------------------------
   Trasforms the coordinates from 'aleph'  to 'cylindrical' ref.sys
   
             Author    :G.Catanesi  85/12/11
   
             input:
                  - POINT/R   : point in the 'ALEPH' frame
             output:
                  - RL,THETAL,PHIL : point in the 'CYLINDRICAL' frame
   
             Called by: HCCRTO
             Calls    : none
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCCYL                                                                
                   |----  ATAN2                               External             
                   |----  SQRT                                External             
   
 
3 HCDEIT
                LOGICAL FUNCTION HCDEIT(ITUB,ILAY,IMOD,IPOR)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL STATUS TUBE / USER
  ------------------------------------------------------------------------------
   If .true. the tube is dead
   
                                        Author:G.Catanesi 01/08/89
   
       INPUT:
              ITUB/I  :Tube #
              ILAY/I  :Layer #
              IMOD/I  :Module #
              IPOR/I  :Portion #
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCDEIT                                                               
                   |----  HNEIGH                                                   
                   |----  BTEST                               External             
   
 
3 HCDPSP
               FUNCTION HCDPSP(IPOR,ILAY,INUM)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL BARREL SPACER /USER
  ------------------------------------------------------------------------------
   Return the width of the spacer inum in the plane ilay
            of the portion IPOR
   
                                     Author:G.Catanesi 880729
   
       input:
              IPOR/I  portion number
              ILAY/I  layer number
              INUM/I  spacer number in layer ILAY
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HCDWSP                                                                          
        |---- HCDPSP                                                               
                   |----  HCSPLT                              External             
   
 
3 HCDRBM
             REAL FUNCTION HCDRBM(IPOR)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL GEOM SUBDETECTOR / USER
  ------------------------------------------------------------------------------
   Return the thickness of the module outer wall
       in the subdetector IPOR
   
                                Author:G.Catanesi 070188
   
         input:
                   IPOR/I  subdetector number
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HTSTEC                                                                          
        |---- HCDRBM.                                                              
   
 
3 HCDWSP
                 SUBROUTINE HCDWSP(IPOR,ILAY,INUM,YEDGE)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL  BARREL SPACER / USER
  ------------------------------------------------------------------------------
   Evaluate the upper position of spacer inum-1 and the lower position
    of the spacer INUM in the layer ILAY of portion IPOR.
    The R.S used is the PLANE R.S.
   
                              Author: G.Catanesi 080188
   
       input:
              IPOR/I  portion number
              ILAY/I  layer number
              INUM/I  spacer number in layer ILAY
   
       output:
              YEDGE/R y edges
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCDWSP                                                               
                   |----  HCDPSP                                                   
                   |----  HCBLSP                              External             
   
 
3 HCHECK
              SUBROUTINE HCHECK(X,IDEAD)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL  STATUS POINT / USER
  ------------------------------------------------------------------------------
   Check if a point is inside hcal
   
                           Authors: C.Capon,G.Catanesi
   
      Input : X/R Coordinates in the Aleph R.S.
   
      output: IDEAD/I = if 0 the point is inside
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCHECK                                                               
                   |----  ATAN2                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ABS                                 External             
   
 
3 HCLATU
         INTEGER FUNCTION HCLATU(IPOR,IPL)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TUBE PLANE / USER
  ------------------------------------------------------------------------------
   Compute the last tube of a plane
   
         Author       : G.Catanesi 10/01/87
   
         IPOR/I       : Portion number
         IPL /I       : Plane number
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCLATU                                                               
                   |----  NEITHC                              External             
   
 
3 HCMDPL
                  SUBROUTINE HCMDPL(IPOR,IMOD,ILAY,COIN,COUT)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TRANSFORM COORDINATES / USER
  ------------------------------------------------------------------------------
   
   Trasform coordinates from module r.s. to plane r.s.
   
                               Author:G.Catanesi 88/5/10
   
        Input:
                 IPOR/I portion number
                 IMOD/I module number
                 ILAY/I layer number
                 COIN(3)/R coordinates in Module R.S.
   
        Output:
                 COUNT(2)/R coordinates in Plane R.S.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCMDPL                                                               
                   |----  HCLAWI                              External             
                   |----  HYTRSF                                                   
   
 
3 HCPRGE
           SUBROUTINE HCPRGE
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL GEOM PRINT / USER
  ------------------------------------------------------------------------------
   Print hcal geometrical and readout constants
   
    G.Capon 870404
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCPRGE                                                               
                   |----  NEITHC                              External             
                   |----  NEITSP                              External             
                   |----  HCSPLT                              External             
                   |----  HCTHUL                              External             
   
 
3 HCRINV
         SUBROUTINE HCRINV(NROT,SPOT,VIN)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TRANSFORM COORDINATES / USER
  ------------------------------------------------------------------------------
   
   Trasforms coordinates from the module frame to the aleph frame
   
    The L-th row contains coefficients a(ij) for module L
    First 24 rows for barrel, 25 for ECAPA, 26 for ECAPB.
   
                                             Author:G.Catanesi 87/11/19
    INPUT:
          NROT/I   : row #
          SPOT/R   : spot coordinates in the Module Frame
   
    OUTPUT:
           VIN/R   : spot coordinates in the Aleph Frame
   
         Called from :HCBACK
         Calls:  none
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HCRVOL                                                                          
        |---- HCRINV.                                                              
   
 
3 HCRVOL
                 SUBROUTINE HCRVOL(NROT,VIN,VOUT,NPOINT)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TRANSFORM  CORNERS VOLUME / USER
  ------------------------------------------------------------------------------
   Trasforms the coorners coordinates of the volume
           from Module R.S. to Aleph R.S.
   
                                       Author G.Catanesi 880710
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCRVOL                                                               
                   |----  HCRINV                                                   
   
 
3 HCSAMP
             REAL FUNCTION HCSAMP(IPOR)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TUBE DIMENSION / USER
  ------------------------------------------------------------------------------
   Return the average tube dimension in the subdetector ipor
   
                              Author:G.Catanesi 071088
   
        Input:
                IPOR/I subdetector number
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCSAMP.                                                              
   
 
3 HCSECO
         SUBROUTINE HCSECO
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL GEOM CONSTANT / INTERNAL
  ------------------------------------------------------------------------------
   Calculate geometrical quantities from the d.b. constants
                                     Author:G.Catanesi 87/10/10
   
             Called by:HCIRUN
             Calls    :HCBOUN
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HRDDAF                                                                          
        |---- HCSECO                                                               
                   |----  HCBOUN                                                   
                   |----  NEITHC                              External             
                   |----  NEITSP                              External             
                   |----  HCSPLT                              External             
                   |----  IHCTID                              External             
                   |----  TAN                                 External             
                   |----  FLOAT                               External             
   
 
3 HDEADM
                  SUBROUTINE HDEADM
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL DEAD TUBE  / INTERNAL
  ------------------------------------------------------------------------------
   Create and fill look_up tables for hcal dead tubes
   
                               Author:G.Catanesi 1/08/89
                               Modify:L.Silvestris 07/07/90
   
   - Banks : read HTXD
           : read HRDT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HRDDAF                                                                          
        |---- HDEADM                                                               
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  NEITHC                              External             
   
 
3 HFBAHI
          SUBROUTINE HFBAHI(ISUBC,MODAQ,LAYER,LWIRE,NWCLU,MODBA,XHIT,
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL BARREL WIRE CLUSTER HIT / USER
  ------------------------------------------------------------------------------
        * CLUW,NHIT,NNWIRE,NHITWI)
   Converts wire clusters to hits in hbarrel
   
         A.Gregorio & A.Venturi 8-oct-1993:
                 correction of the decoding of the even modules
   
         G.Capon    17-feb-1992 (extended version of old HFBHIT)
        1 cluster ==> 1 hit, except if dead zones or spacers
         fall inside the cluster
    input :
         ISUBC : subcomponent number
         MODAQ : acquisition processor number (13-24)
         LAYER : streamer tubes layer number
         LWIRE : last wire(strip) of a cluster of consecutive hit wires
         NWCLU : number of consecutive hit wires in a cluster (1-16)
    output:
      MODBA(N) : phys module # for hit N (a cluster may be on 2 modules)
       XHIT(N) : local coordinate for hit N
       CLUW(N) : cluster width for hit N
       NHIT    : number of hits for this cluster (=1 except if dead zones)
      NNWIRE(I): wire number of wire at position I inside cluster
      NHITWI(I): hit    "                "            "
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HFBAHI                                                               
                   |----  NEITHC                              External             
                   |----  NEITSP                              External             
                   |----  FLOAT                               External             
                   |----  HCSPLT                              External             
   
 
3 HFBAHIO
          SUBROUTINE HFBAHIO(ISUBC,MODAQ,LAYER,LWIRE,NWCLU,MODBA,XHIT,
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL BARREL WIRE CLUSTER HIT / USER
  ------------------------------------------------------------------------------
        * CLUW,NHIT,NNWIRE,NHITWI)
   Converts wire clusters to hits in hbarrel
    THIS ROUTINE IS KEPT FOR THE '92 AND '91 REPROCESSING
    IT SHOULD BE DROPPED WHEN REPROCESSING IS OVER
    THE ROUTINE HFBAHI SHOULD BE USED INSTEAD
         G.Capon    17-feb-1992 (extended version of old HFBHIT)
        1 cluster ==> 1 hit, except if dead zones or spacers
         fall inside the cluster
    input :
         ISUBC : subcomponent number
         MODAQ : acquisition processor number (1-12)
         LAYER : streamer tubes layer number
         LWIRE : last wire(strip) of a cluster of consecutive hit wires
         NWCLU : number of consecutive hit wires in a cluster (1-16)
    output:
      MODBA(N) : phys module # for hit N (a cluster may be on 2 modules)
       XHIT(N) : local coordinate for hit N
       CLUW(N) : cluster width for hit N
       NHIT    : number of hits for this cluster (=1 except if dead zones)
      NNWIRE(I): wire number of wire at position I inside cluster
      NHITWI(I): hit    "                "            "
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HFBAHIO                                                              
                   |----  NEITHC                              External             
                   |----  NEITSP                              External             
                   |----  FLOAT                               External             
                   |----  HCSPLT                              External             
   
 
3 HFBHIT
          SUBROUTINE HFBHIT(ISUBC,MODAQ,LAYER,LWIRE,NWCLU,MODBA,XHIT,
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL BARREL WIRE CLUSTER HIT / USER
  ------------------------------------------------------------------------------
        * CLUW,NHIT)
   Converts wire clusters to hits in hbarrel
   
         G.Capon               date : 861001
        1 cluster ==> 1 hit, except if dead zones or spacers
         fall inside the cluster
    input :
         ISUBC : subcomponent number
         MODAQ : acquisition processor number (1-12)
         LAYER : streamer tubes layer number
         LWIRE : last wire(strip) of a cluster of consecutive hit wires
         NWCLU : number of consecutive hit wires in a cluster (1-16)
    output:
      MODBA(N) : phys module # for hit N (a cluster may be on 2 modules)
       XHIT(N) : local coordinate for hit N
       CLUW(N) : cluster width for hit N
       NHIT    : number of hits for this cluster (=1 except if dead zones)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HFBHIT                                                               
                   |----  NEITHC                              External             
                   |----  NEITSP                              External             
                   |----  FLOAT                               External             
                   |----  HCSPLT                              External             
   
 
3 HFEHIT
          SUBROUTINE HFEHIT(ISUBC,MODAQ,LAYER,LWIRE,NWCLU,ISEXT,XHIT,
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL ENDCAP WIRE CLUSTER HIT / USER
  ------------------------------------------------------------------------------
        * CLUW,NHIT)
   Converts wire clusters to hits in endcap
   
         G.Capon               date : 861001
                    mods -  900120 take air between tubes
                            into account : enlarge iron edge and spacers
         F.Ranjard  mods -  900214 remove the previous mod.
                            because the iron edge and spacer width are
                            changed in HRDDAF
         1 cluster ==> 1 hit, except if dead zones or spacers
         fall inside the cluster
    input :
         ISUBC : subcomponent number
         MODAQ : acquisition processor number (1-12)
         LAYER : streamer tubes layer number
         LWIRE : last wire(strip) of a cluster of consecutive hit wires
         NWCLU : number of consecutive hit wires in a cluster (1-16)
    output:
       ISEXT   : physical module # (sextant #)
       XHIT(N) : local coordinate for hit N
       CLUW(N) : cluster width for hit N
       NHIT    : number of hits for this cluster (=1 except if dead zones
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HFEHIT                                                               
                   |----  MOD                                 External             
                   |----  FLOAT                               External             
   
 
3 HFENHI
          SUBROUTINE HFENHI(ISUBC,MODAQ,LAYER,LWIRE,NWCLU,ISEXT,XHIT,
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL ENDCAP WIRE CLUSTER HIT / USER
  ------------------------------------------------------------------------------
        * CLUW,NHIT,NNWIRE,NHITWI)
   Converts wire clusters to hits in endcap
   
         G.Capon    17-feb-1992 (extended version of old HFEHIT)
                    mods -  900120 take air between tubes
                            into account : enlarge iron edge and spacers
         F.Ranjard  mods -  900214 remove the previous mod.
                            because the iron edge and spacer width are
                            changed in HRDDAF
         1 cluster ==> 1 hit, except if dead zones or spacers
         fall inside the cluster
    input :
         ISUBC : subcomponent number
         MODAQ : acquisition processor number (1-12)
         LAYER : streamer tubes layer number
         LWIRE : last wire(strip) of a cluster of consecutive hit wires
         NWCLU : number of consecutive hit wires in a cluster (1-16)
    output:
       ISEXT   : physical module # (sextant #)
       XHIT(N) : local coordinate for hit N
       CLUW(N) : cluster width for hit N
       NHIT    : number of hits for this cluster (=1 except if dead zones
      NNWIRE(I): wire number of wire at position I inside cluster
      NHITWI(I): hit    "                "            "
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HFENHI                                                               
                   |----  MOD                                 External             
                   |----  FLOAT                               External             
   
 
3 HFNDMD
            SUBROUTINE HFNDMD(INTET,INPHI,NSTAK,ISUBC,MODUL,
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TOWER MODULE  / USER
  ------------------------------------------------------------------------------
        *   IOVRL)
   Get module #, subcomp # from i,j,k for hcal
   
         G.Capon               date : 861001
    input :
            INTET : theta index of storey
            INPHI : phi     "        "
            NSTAK : stack number
    output :
           ISUBC  : subcomp # (1=endcapA,2=barrel,3=endcapB)
           MODUL  : phys module # (1-6 for endcaps,1-24 for barrel)
           IOVRL  : position flag (if ne 0 storey is splitted between
                          endcap and barrel jonction region)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PHSTOJ                                                                          
        |---- HFNDMD                                                               
                   |----  IHCREG                              External             
   
 
3 HFNDTW
           SUBROUTINE HFNDTW(X,SYSRF,IT,JF,KS,ISUBC,IMOD,IPL,IDEAD)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL POINT TOWER  / USER
  ------------------------------------------------------------------------------
   X,y,z to i,j,k conversion for hcal
   
         G.Capon               date : 861001
     convert x,y,z coordinates to storey indices and parameters
   
    input :
             X(3) : point coordinates (in Aleph system)
           SYSRF  : char. variable - specifies ref system - not used
    output :
              IT  : theta index of storey
              JF  : phi     "        "
              KS  : stack number
             ISUBC: subcomp # (1=endcapA, 2=barrel, 3=endcapB)
             IMOD : physical module # (1-6 for endcaps,1-24 for barrel)
             IPL  : plane # (set to zero in this version)
            IDEAD : dead zone flag (if ne 0 point is outside Hcal)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HFNDTW                                                               
                   |----  ATAN2                               External             
                   |----  INT                                 External             
                   |----  FLOAT                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ABS                                 External             
                   |----  HCTHUL                              External             
                   |----  IHCREG                              External             
   
 
3 HGETGA
         SUBROUTINE HGETGA(ARRAY)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL GEOM DBASE GALEPH / USER
  ------------------------------------------------------------------------------
   Trasfers same geometrical quantities from db to galeph
   
               Author : G.Catanesi  88/04/18
   
        INPUT :  Hcgeom common
   
        OUTPUT: ARRAY/R  geometrical quantities to be trasferred
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HGETGA                                                               
                   |----  FLOAT                               External             
                   |----  NHCTU1                              External             
                   |----  HCLARA                              External             
                   |----  HCLAWI                              External             
                   |----  IHCREG                              External             
                   |----  HCWINO                              External             
                   |----  HCTIRF                              External             
                   |----  NHCPLA                              External             
   
 
3 HGETJU
         SUBROUTINE HGETJU(ARRAY)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL GEOM DBASE JULIA / USER
  ------------------------------------------------------------------------------
   Transfer global hcal geom data to julia
   
    G.Capon             jan 1988
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HGETJU                                                               
                   |----  HCTIRF                              External             
   
 
3 HGINIT
           SUBROUTINE HGINIT
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL INIT /USER
  ------------------------------------------------------------------------------
   Ini hcal geometry - get data base in geometry commons
           back-compatibility routine
   
         G.Capon               Jan 88
         Mod: G.Catanesi       Jun 88
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HGINIT                                                               
                   |----  HRDDAF                                                   
   
 
3 HINTST
           LOGICAL FUNCTION HINTST(INTET,INPHI,KS)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL STATUS TOWER / USER
  ------------------------------------------------------------------------------
   Test if storey indices are in correct range
   
         G.Capon               date : 861001
         G.Catanesi 25-nov-1988 (mod. for D.B. access
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HINTST                                                               
                   |----  IHCREG                              External             
   
 
3 HNEIGH
               SUBROUTINE HNEIGH(ITUB,ILAY,IPOR,IHEIF,IDHEI)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL EIGHTFOLD TUBE STATUS /USER
  ------------------------------------------------------------------------------
   Evaluate eightfold and double_eightfold number
      (if IHEIF=0 tube is outside the range
   
                                Author:G.Catanesi 6/06/89
   
            INPUT:
                    ITUB/I = Tube#
                    ILAY/I = Layer#
                    IPOR/I = Portion#
   
            OUTPUT:
                    IHEIF/I = eightfold#
                    IDHEI/I = double_eightfold#
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HCDEIT                                                                          
   HTUACL                                                                          
   HTULEN                                                                          
        |---- HNEIGH                                                               
                   |----  NEITHC                              External             
   
 
3 HNREG
           INTEGER FUNCTION HNREG(ITETA)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL GEOM TOWER THETA REGION / USER
  ------------------------------------------------------------------------------
   Computes hcal region # from theta index
   
      G.Capon 10-jun-1987
      G.Catanesi 25-nov-1988 (mod. for D.B. access
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PHSTOJ                                                                          
        |---- HNREG                                                                
                   |----  IHCTID                              External             
   
 
3 HPHMOD
         REAL FUNCTION HPHMOD(PHITRK)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL BARREL COORDINATES PHI ANGLE / USER
  ------------------------------------------------------------------------------
   
                                      011186 G.Catanesi
   To evaluate the phi value in the barrel module coordinates
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HPHMOD                                                               
                   |----  MOD                                 External             
   
 
3 HRDDAF
         SUBROUTINE HRDDAF (LDBAS,IRUN,IFLAG)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL READ DAF BANK /USER
  ------------------------------------------------------------------------------
   - G.Catanesi - 871007            modified by - F.Ranjard - 880202
              Modify: L.Silvestris 09/07/90
   Get hcal banks and store the content in the commons
   - input arguments:
             LDBAS  : data base logical unit
             IRUN   : run number
   - output argument:
             IFLAG  : return flag  ( = ALGTDB(LDBAS,list,IRUN) )
             Called by : HCIRUN
             Calls     : ALGTDB,ALTELL,HDEADM from Alephlib
                         UCOPY from CERNLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HGINIT                                                                          
        |---- HRDDAF                                                               
                   |----  LNBLNK                              External             
                   |----  ALGTDB                              External             
                   |----  NAMIND                              External             
                   |----  UCOPY                               External             
                   |----  XLNHCE                              External             
                   |----  HCTLEI                              External             
                   |----  HCTLEO                              External             
                   |----  HCTAEI                              External             
                   |----  HCTAEO                              External             
                   |----  XHCSHI                              External             
                   |----  NEITHC                              External             
                   |----  NEITSP                              External             
                   |----  HCSPLT                              External             
                   |----  HDEADM                                                   
                   |----  MDARD                               External             
                   |----  HTINEC                              External             
                   |----  HBWCEC                              External             
                   |----  NHMBDF                              External             
                   |----  NHMBFL                              External             
                   |----  HCSECO                                                   
   
 
3 HSRCR
           SUBROUTINE HSRCR(SYSTM,IT,JF,KS,LHPOI,CORNR)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TOWER CORNERS  / USER
  ------------------------------------------------------------------------------
   I,j,k to storey corners conversion
   
         G.Capon               date : 861001
      Subroutine to compute coordinates of storey corners
        from storey indices IT,JF,NR,KS
    input :
            SYSTM : reference system (not used up to now)
              IT  : theta index of storey
              JF  : phi     "        "
              KS  : stack number
             LHPOI: number of storey points (=8 in general case)
    output:
        CORNR(3,K): x,y,z coord of corner K (K=1,LHPOI) in Aleph syst
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PHSTOJ                                                                          
        |---- HSRCR                                                                
                   |----  IHCREG                              External             
                   |----  HCTHUL                              External             
                   |----  FLOAT                               External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  TAN                                 External             
   
 
3 HTADCO
         SUBROUTINE HTADCO(ITUB,ILAY,IMOD,IPOR,IADR)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TUBE ADRESS /USER
  ------------------------------------------------------------------------------
   Code the tube adress for the hcal in a standard way
   
                                      Author:G.Catanesi 30/5/89
   
   
            INPUT:
                    ITUB/I = Tube#
                    ILAY/I = Layer#
                    IMOD/I = Module#
                    IPOR/I = Portion#
   
           OUTPUT:
                    IADR/I = Tube Adress
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HTADCO.                                                              
   
 
3 HTADDE
         SUBROUTINE HTADDE(IADR,ITUB,ILAY,IMOD,IPOR)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TUBE ADRESS /USER
  ------------------------------------------------------------------------------
   Decode the tube adress for the hcal in a standard way
   
                                      Author:G.Catanesi 30/5/89
   
   
            INPUT:
                    IADR/I = Tube Adress
   
           OUTPUT:
                    ITUB/I = Tube#
                    ILAY/I = Layer#
                    IMOD/I = Module#
                    IPOR/I = Portion#
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HTADDE                                                               
                   |----  MOD                                 External             
   
 
3 HTSTEC
                 REAL FUNCTION HTSTEC(ITUB,ILAY,IDHEI)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL ENDCAP POSITION TUBE /USER
  ------------------------------------------------------------------------------
   Return the starting position of the tube itub in the endcap
   
                                     Author:G.Catanesi 14/06/89
   
     INPUT:
              ITUB/I = tube#
              ILAY/I = layer#
              IDHEI/I= double_eightfold#
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HTSTEC                                                               
                   |----  HCDRBM                                                   
                   |----  HTINEC                              External             
                   |----  HBWCEC                              External             
                   |----  HTXDTL                                                   
                   |----  MOD                                 External             
                   |----  HTXSPL                                                   
                   |----  TAN                                 External             
   
 
3 HTUACL
              REAL FUNCTION HTUACL(ITUB,ILAY,IMOD,IPOR)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TUBE LENGTH /USER
  ------------------------------------------------------------------------------
   Return the active length of each tube in hcal
      If 0. the tube is absent or dead
   
                                Author : G.Catanesi 23/5/89
   
            INPUT:
                    ITUB/I = Tube#
                    ILAY/I = Layer#
                    IMOD/I = Module#
                    IPOR/I = Portion#
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HTUACL                                                               
                   |----  HNEIGH                                                   
                   |----  NHMBDF                              External             
                   |----  XLNHCE                              External             
                   |----  NEITHC                              External             
                   |----  HTXDTL                                                   
                   |----  HTXANG                                                   
                   |----  HTXSPL                                                   
                   |----  SIGN                                External             
                   |----  MOD                                 External             
                   |----  HCTLEI                              External             
                   |----  HTINEC                              External             
   
 
3 HTULEN
         REAL FUNCTION HTULEN(ITUB,ILAY,IMOD,IPOR,IPOS)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TUBE LENGTH /USER
  ------------------------------------------------------------------------------
   Return the active length of each tube in hcal
      If 0. the tube is absent or dead
   
                       Author : G.Catanesi 23/5/89
                       Mod by: Andrea Venturi & L.Silvestris 24/6/92
                       to take in account the shift of tubes in barrel...
   
            INPUT:
                    ITUB/I = Tube#
                    ILAY/I = Layer#
                    IMOD/I = Module#
                    IPOR/I = Portion#
                    IPOS/I = position sign (for the barrel only)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HTULEN                                                               
                   |----  HNEIGH                                                   
                   |----  NHMBDF                              External             
                   |----  XLNHCE                              External             
                   |----  NEITHC                              External             
                   |----  MOD                                 External             
                   |----  ABS                                 External             
                   |----  XHCSHI                              External             
                   |----  HTXDTL                                                   
                   |----  HTXANG                                                   
                   |----  HTXSPL                                                   
                   |----  HCTLEI                              External             
                   |----  HTINEC                              External             
   
 
3 HTXANG
            REAL FUNCTION HTXANG(IDHEI,ILAY)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL EIGHTFOLD TUBE ANGLE /USER
  ------------------------------------------------------------------------------
   Return the double_eightfold inclination
   
                             Author: G.Catanesi 5/06/89
   
            INPUT:
                   IDHEI/I = double_eightfold#
                   ILAY/I  = layer#
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HTUACL                                                                          
   HTULEN                                                                          
        |---- HTXANG                                                               
                   |----  HCTAEI                              External             
                   |----  HCTAEO                              External             
   
 
3 HTXDTL
            REAL FUNCTION HTXDTL(IDHEI,ILAY)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL EIGHTFOLD TUBE LENGTH /USER
  ------------------------------------------------------------------------------
   Return the double_eightfold maximum length
   
                             Author: G.Catanesi 5/06/89
   
            INPUT:
                   IDHEI/I = double_eightfold#
                   ILAY/I  = layer#
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HTSTEC                                                                          
   HTUACL                                                                          
   HTULEN                                                                          
        |---- HTXDTL                                                               
                   |----  HCTLEI                              External             
                   |----  HCTLEO                              External             
   
 
3 HTXSPL
             REAL FUNCTION HTXSPL(IDHEI,ILAY)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL EIGHTFOLD TUBE LENGTH /USER
  ------------------------------------------------------------------------------
   Return the difference in lenght from one wire and the following
     in a double_eightfold
   
                             Author: G.Catanesi 5/06/89
   
            INPUT:
                   IDHEI/I = double eightfold#
                   ILAY/I  = layer#
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HTSTEC                                                                          
   HTUACL                                                                          
   HTULEN                                                                          
        |---- HTXSPL                                                               
                   |----  HCTLEI                              External             
                   |----  HCTLEO                              External             
                   |----  ABS                                 External             
   
 
3 HUSRAN
           SUBROUTINE HUSRAN(INTET,INPHI,JSTAK,TETST,PHIST,
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL TOWER THETA PHI ANGLE / USER
  ------------------------------------------------------------------------------
        *  DTETS,DFIST)
   Compute angles relevant to storey geometry
   
         G.Capon               date : 861001
       compute theta,phi of storey center from indices IT,JF,KS,NR
       compute dtheta,dphi of storey
    input :
            INTET : theta index of storey
            INPHI : phi     "        "
            JSTAK : stack number
     output:
           TETST  : theta of storey center
           PHIST  :  phi       "      "
           DTETS  : angular width of storey (in theta) projected !!
           DFIST  : angular width of storey (in phi)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HUSRAN                                                               
                   |----  IHCREG                              External             
                   |----  FLOAT                               External             
                   |----  HCTHUL                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ATAN2                               External             
   
 
3 HYTRSF
         SUBROUTINE HYTRSF (X,Y,IP,IM)
  ------------------------------------------------------------------------------
    CKEY HCALDES HCAL ENDCAP TRANSFORM COORDINATES / USER
  ------------------------------------------------------------------------------
   Trasform to plane coordinate system for the end-caps
   
       Author      : G.Zito   85/05/21
       modified by : G.Catanesi 87/10/21
   
      -Called by : HCCOIN
      -Calls     : none
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HCMDPL                                                                          
        |---- HYTRSF                                                               
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  ACOS                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   

2 IDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     ITC geometry package
     ! 980902 ALEPHLIB 309.0
        IINRES : New Drift-time params: use Spline from IDSP bank for 1997 
                 data onwards (run > 43000). MC will still use IDRP. (J.Sedgbeer)
        IPRDAF : Add print of new variables in /IDRPCC/              (J.Sedgbeer)
    
     ! ALEPHLIB 30.2
       new alignment (W.Wiedenman) is introduced.
       IINALI - support for new alignment TPC bank TNOS.
    
     ! ALEPHLIB 15.4
       IDTCCC - Comments modified.
       IDRPJJ - New comdeck:
                IDRP HAC params.
       IDRPCC - New comdeck:
                New Drift-time relation parameters.
       IINRES - IDTC   fill drift-time parametrisation (old) into /IDTCCC/
                       and /IDRPCC/. IDTC bank used for 1989-1992 data.
                IDRP   fill drift-time parametrisation (new) into /IDTCCC/
                       and /IDRPCC/. IDRP bank used for 1993 onwards.
       IPRDAF - Add print for IDRP values.
    
                                                                 21/10/91
     Package to set-up ITC constants from DAF (data-base). Gets constants
     for geometry, alignment, front-end electronics and resolution, i.e.
     all constants necessary for ITC prepare data.
    
     Subroutine IRDDAF:  (Itc ReaD DAF)
     ------------------
           Gets constants for a particular run from data base banks.
           IRDDAF must be called once per run.
           See subroutine header for details of calling arguments and
           error returns etc.
    
               calls - IGEOMW   wire geometry
                       IINALI   alignment
                       IFECON   front-end constants
                       IINRES   resolution
    
     Subroutine    banks  comment
     IGEOMW        ITCC   wire sag and length into /ITWICC/
                   ILYR   fill /ITWICC/  IWIRIT(8), ... etc.
                          fill /ISWPHI/PHSWIS(960) phi of each wire in ITC frame.
                   IEWP   Correct each PHSWIS value.
                   IWST   get wire status bank from cards/run header/dbase
                   ICAE   get cabling errors bank from Dbase.
     IINALI        IALI   Fill /IALIGC/ ITC alignment wrt TPC
                   TPOS   Fill /IALIGG/ ITC-TPC alignment wrt ALEPH
                          Note that the TPC is NOT defined to be the ALEPH
                          frame. IALI is defined as the ITC wrt TPC.
                          To get ITC coords in the ALEPH frame first transform
                          into TPC frame then into ALEPH frame.
     IFECON        IRFE   fill /IRFECC/ R-phi front end consts.
                                               ( from dbase or run header)
                   IZFE   Fill /IZFECC/ Z front end Consts (dbase or run header)
                   IZNL   Fill /IZNLCC/ Z non linearity consts. (dbase)
                   ISFE   contains flags indicating if R-phi and/or Z TDC
                          data is O.K., i.e. coords. can be made.
     IINRES        IDTC   fill /IDTCCC/ drift-time relation parametrisation
                   IRES   fill /IRESCC/ r-phi resolution params.
                          fill /IRESOL/ nominal resolution in R-phi
                   IRRF   get from Dbase - r-phi resol. ued in track fits.
                   IZRS   fill /IZRSCC/ z resolution params.
                          fill /IRESOL/ nominal res. in z
                   IEDD   get from dbase - look-up tables of fine corrections
                          to drift-time relation in IDTC
                   IET0   get from Dbase - correction to each channel for
                          T0 offset
    
     IGETDB        used to get banks that can be on database or run header -
                   see comments below on Origin of Banks.
                   Note that IGETDB does not get the database or check that
                   the existing database is the correct one. This is O.K.
                   as the sequence of calls in IRDDAF is such that ALGTDB
                   has been called before IGETDB and so the correct database
                   will be open.
    
     Note: Origin of banks - Cards, Run Header record, Dbase.
     --------------------------------------------------------
    
     The majority of banks are only found in the Dbase or as input cards.
     For these banks the above routines use the ALEPHLIB function AGETDB
     to get the appropriate bank. The hierarchy is 1) cards, 2) Dbase.
    
     Input cards should have bank number=-1 in ALPHA and JULIA jobs.
    
     For the ITC the banks  IRFE, IZFE and IWST may be present in the
     run header record as well as in the Dbase or input cards. Run header
     banks have number=0 (up to now , i.e. 1n 1989,90,91)
     To ensure that the correct  IRFE, IZFE and IWST banks are located
     the subroutine IGETDB is used.
    
     The hierarchy for IRFE and IZFE (in both ALPHA and JULIA) is:
       without UDAF card              :   1)Cards, 2)Dbase,      3)Run header
       with    UDAF card (i.e. FALCON):   1)Cards, 2)Run header, 3)Dbase
    
     The hierarchy for IWST is:
       with or without UDAF card          1)Cards, 2)Run header  3)Dbase
    
    
     Subroutine IPRDAF:
     ------------------
           Print current contents of commons filled by IRDDAF.
           IRDDAF must be called before IPRDAF.
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     IFECON     Set up itc front-end electronics constants.
     IGEOMW     Set up itc geometry constants for wires.
     IGETDB     Get itc dbase banks - for banks on run header and/or dbase
     IINALI     Initialise itc alignment constants.
     IINRES     Set up itc drift-time corrections and resolutions.
     IPRDAF     Print current values of itc prepare data consts. from daf
     IRDDAF     Read daf banks for itc - for 'prepare data' only.

3 IFECON
         SUBROUTINE IFECON(IRUN,IRET)
  ------------------------------------------------------------------------------
    CKEY ITCDES ITC / INTERNAL
  ------------------------------------------------------------------------------
   Set up itc front-end electronics constants.
   
      Author          :-  J. Sedgbeer  89/03/03
      Modified        :-  J. Sedgbeer  89/10/11 Fix for IRFE bank format
                                                error.
      Modified        :-  J. Sedgbeer  90/01/04 Get ISFE DB bank
      Modified        :-  J. Sedgbeer  91/01/07 Ensure IRFE and IZFE
                       banks are got from correct place - can be on cards
                       run header or Dbase.
      Modified        :-  J. Sedgbeer  92/01/30 Check r-phi TDC bin width
                       from IRFE bank. Remove default setting. Remove
                       obsolete code (for old MC)
      Modified        :-  J. Sedgbeer  92/02/04 Implement run-period
                       scheme for some dbase banks.
      Modified        :-  J. Sedgbeer  92/02/07 Get IZNL from Dbase. Fill
                       /IZNLCC/ from IZNL (or from IZFE if no IZNL)
      Modified: 95/04/02 J.Sedgbeer. Remove check on TDC binwidth from IRFE
   
      Input:
       IRUN    /I : Current run number
       params.:    IRFEJJ  for ITDC bank
                   IZFEJJ  for IZFE bank
                   IZNLJJ  for IZNL bank
                   ISFEJJ  for ISFE bank
       commons:    /BCS/   for banks  IRFE,IZFE,IZNL,ISFE from 'DB'
      Output:
       IRET    /I : Error flag: (as for AGETDB)
                      IRET > 0  Existing values still valid
                      IRET = 0  Error. One or more banks missing for this
                                run. FATAL.
                      IRET < 0  1 or more banks reloaded
       common   /IRFECC/  R-phi front end parameters
                /IZFECC/  Z front end parameters
                /IZNLCC/  Z non linearity parameters
   
      calls     : AGETDB (Alephlib)
                  IGETDB (Alephlib)
                  GTSTUP (Alephlib)
      libraries:  BOS
   
      Description:
    Set up ITC front end constants.
    Get data from a direct access file ( filled from D.B.), or input
    data cards or via banks read in with data.
   
    If data (run number > 2000) then
      run period = run number
    else (MC)
      get run period from function GTSTUP
      if no set-up number found set run period = run number
    endif
    Get IRFE bank - IGETDB
    If (first and existing IRFE bank still valid) or (new IRFE bank) then
       get values from IRFE bank. Fill /IRFECC/
    Endif
    Get IZFE bank - IGETDB
    If (first and existing IZFE bank still valid) or (new IZFE bank) then
       get values from IRFE bank. Fill /IZFECC/
    Endif
    Get IZNL bank - AGETDB
    If (first and existing IZNL bank still valid) or (new IZNL bank) then
       get values from IZNL bank. Fill /IZNLCC/
    elseif( IZNL missing) then
       fill /IZNLCC/ from IZFE
    Endif
    Check validity of ISFE bank - AGETDB.
    Set Z flag in /IZFECC/
    Set return flag
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IRDDAF                                                                          
        |---- IFECON                                                               
                   |----  GTSTUP                              External             
                   |----  NAMIND                              External             
                   |----  IGETDB                                                   
                   |----  AGETDB                              External             
   
 
3 IGEOMW
         SUBROUTINE IGEOMW(IRUN,IRET)
  ------------------------------------------------------------------------------
    CKEY ITCDES ITC GEOM /INTERNAL
  ------------------------------------------------------------------------------
   Set up itc geometry constants for wires.
   
      Author          :-  J. Sedgbeer  89/03/03
      Modified        :-  J. Sedgbeer  89/10/11 Wire Position corrections
      Modified        :-  J. Sedgbeer  90/01/04 Get IWST and ICAE banks
      Modified        :-  J. Sedgbeer  91/01/07 Ensure IWST bank got from
                          correct place - can be cards, tape, dbase.
      Modified        :-  J.Sedgbeer   91/10/21 Get IWST from 1) cards,
                                       2) run header, 3) database
      Modified        :-  J. Sedgbeer  92/02/04 Implement run-period
                       scheme for some dbase banks.
      Input:
       IRUN    /I : Current run number
       params.:    ALCONS
                   ILYRJJ  for ILYR bank
                   ITCCJJ  for ITCC bank
                   IEWPJJ  for IEWP bank
       commons:    /BCS/   for banks  ILYR,ITCC,IEWP,IWST,ICAE from 'DB'
   
      Output:
       IRET    /I : Error flag: (as for AGETDB)
                      IRET > 0  Existing values still valid
                      IRET = 0  Error. One or more banks missing for this
                                run - leave values unchanged or, if first
                                time use default values.
                      IRET < 0  1 or more banks reloaded
       commons:    /ITWICC/  ITC wire geometry common
                   /ISWPHI/  Sense wire phi values in ITC frame.
   
      calls     : AGETDB (Alephlib)
                  IGETDB (Alephlib)
                  GTSTUP (Alephlib)
      libraries:  none
   
      Description:
    Set up ITC wire geometry in common /ITWICC/ and sense wire coords.
    in common /ISWPHI/.
    Get data from a direct access file ( filled from D.B.) or from
    data cards or via bank input with data.
    If no valid bank then use values already loaded into common or,
    if first time, use default values.
   
    If data (run number > 2000) then
      run period = run number
    else (MC)
      get run period from function GTSTUP
      if no set-up number found set run period = run number
    endif
    Check validity of ITCC bank - AGETDB
    If (first and no ITCC bank) then fill /ITWICC/ with default values
    If (first and existing ITCC bank still valid) or (new ITCC bank) then
       get values from ITCC bank. Fill part of /ITWICC/
    Endif
    Check validity of ILYR bank - AGETDB
    If (first and no ILYR bank) then fill /ITWICC/ and /ISWPHI/ with
                                        default values
    If (first and existing ILYR bank still valid) or (new ILYR bank) then
       get values from ILYR bank. Fill part of /ITWICC/
       hence fill /ISWPHI/
    Endif
    Check validity of IEWP bank - AGETDB
    If (first and existing IEWP bank still valid) or (new IEWP bank) then
       correct wire positions in /ISWPHI/
    Endif
    Get IWST bank - IGETDB
    Check validity of ICAE bank - AGETDB
    Set return flag
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IRDDAF                                                                          
        |---- IGEOMW                                                               
                   |----  GTSTUP                              External             
                   |----  AGETDB                              External             
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  IGETDB                                                   
   
 
3 IGETDB
         SUBROUTINE IGETDB(NAME,IRUN,IDAF,IRET,IER)
  ------------------------------------------------------------------------------
    CKEY ITCDES ITC / INTERNAL
  ------------------------------------------------------------------------------
   Get itc dbase banks - for banks on run header and/or dbase
   
      Author      :-  J. Sedgbeer  91/01/07
      Modified    :-  J. Sedgbeer  91/10/21 Comment added.
   
      Input:
       NAME    /A : Bank name
       IRUN    /I : Current run number
       IDAF    /I : Hierarchy flag:
                     IDAF.eq.0 : cards, Dbase, Run Header
                     IDAF.ne.0 : cards, Run header, Dbase
       commons    :  /BCS/   for banks
   
      Output:
       IRET    /I : Return flag: (as for AGETDB)
                      IRET > 0  Existing values still valid
                      IRET = 0  Bank missing for this run
                      IRET < 0  bank reloaded
       IER     /I : Error flag  O.K. if IER = 0
   
      calls     : JUNIDB - ALEPHLIB
      libraries : BOS
   
      Description:
    ONLY to be used for banks that can be on run header and or Dbase.
    For ITC at present this applies only to IRFE, IZFE, IWST.
    Get bank 'NAME' according to hierarchy specified by input argument
    IDAF. Note that this routine assumes that
       data cards have bank number  = -1
       run header banks have number =  0
       data base banks have number  >  0
    ** N.B.** This routine does not get the database or check that the
              database that is currently open is the correct one for the
              given run number. It is assumed that the correct database
              is already open.
   
    Get list of all banks 'NAME' currently in BCS
    If bank number = -1 exists (data card)  then set FCARD flag
    If bank number =  0 exists (run header) then set FHEAD flag
    If FCARD then
      drop all but cards bank, set IRET=1 and return
    endif
    If IDAF.ne.0 and run header bank exists (FHEAD) then
      drop all but header bank, set IRET=-1 and return
      (Note: IRET set to -1 as this forces an update as you can't tell
       if a new bank number 0 was read in and overwrote the previous one.)
    endif
    Get Dbase bank number, NKEEP, for this run (use NDANR)
    If no Dbase bank then
      keep header bank, NKEEP
      If no header bank then
        set IRET=0 (error) and return
      endif
    endif
    Drop all banks except bank number NKEEP (if it is already in /BCS/)
    Set IRET=1 (existing bank still valid)
    If bank NKEEP not already in BCS then
      get it from Dbase (use MDARD), set IRET = -1
      if problem loading it then set IRET=0
    endif
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IFECON                                                                          
   IGEOMW                                                                          
        |---- IGETDB                                                               
                   |----  JUNIDB                              External             
                   |----  NAMIND                              External             
                   |----  NDROP                               External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
   
 
3 IINALI
         SUBROUTINE IINALI(IRUN,IRET)
  ------------------------------------------------------------------------------
    CKEY ITCDES ITC GEOM /INTERNAL
  ------------------------------------------------------------------------------
   Initialise itc alignment constants.
   
      Author     :-  J. Sedgbeer  88/05/05
      Modified   :-  J. Sedgbeer  89/08/06
      Modified   :-  J. Sedgbeer  92/02/04 Implement run-period
                                  scheme for some dbase banks.
      Modified   :-  D. Casper    97/03/05  Handle new alignment banks
                                            INLI/TNOS as well as
                                            IALI/TPOS
   
      Input:
       IRUN    /I : Current run number
       params.:    IALIJJ  for IALI bank
                   INLIJJ  for INLI bank
                   TPOSJJ  for TPOS bank
                   TNOSJJ  for TNOS bank
       commons:    /BCS/  =>  banks  IALI and TPOS from 'DB'
   
      Output:
       IRET    /I : Error flag: (as for AGETDB)
                      IRET > 0  Existing values still valid
                      IRET = 0  Error. One or more banks missing for this
                                run - leave values unchanged or, if first
                                time use default values.
                      IRET < 0  1 or more banks reloaded
       commons  /IALIGC/
                /IALIGG/
   
      calls     : AGETDB (Alephlib)
                  GTSTUP (Alephlib)
   
      libraries:  BOS
   
      Description:
    Set up ITC alignment constants.
    Get data from a direct access file ( filled from D.B.).
    Input cards may be used to override the values in the d.a. file.
    If no valid bank then use values already loaded into common or,
    if first time, use default values.
   
    If data (run number > 2000) then
      run period = run number
    else (MC)
      get run period from function GTSTUP
      if no set-up number found set run period = run number
    endif
    Check validity of IALI bank - AGETDB
    If (first and no IALI bank) then fill /IALIGC/ with default values
    If (first and existing IALI bank still valid) or (new IALI bank) then
       get values from IALI bank. Fill /IALIGC/
    Endif
    Check validity of TPOS bank - AGETDB
    If (first and no TPOS bank) then fill /IALIGG/ with default values
    If (first and existing TPOS bank still valid) or (new TPOS bank) then
       get values from TPOS bank. Fill /IALIGG/
     Endif
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IRDDAF                                                                          
        |---- IINALI                                                               
                   |----  NAMIND                              External             
                   |----  GTSTUP                              External             
                   |----  AGETDB                              External             
                   |----  BDROP                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 IINRES
         SUBROUTINE IINRES(IRUN,IRET)
  ------------------------------------------------------------------------------
    CKEY ITCDES ITC /INTERNAL
  ------------------------------------------------------------------------------
   Set up itc drift-time corrections and resolutions.
   
      Author          :-  J. Sedgbeer  89/03/03
      Modified        :-  I. Tomalin   89/09/01
      Modified        :-  J. Sedgbeer  89/10/12  Get IEDD bank from Dbase
      Modified        :-  J. Sedgbeer  89/11/02  Get IET0 bank from Dbase
      Modified        :-  J. Sedgbeer  90/01/04  Get IZRS bank from Dbase
      Modified        :-  J. Sedgbeer  91/10/24  Get IRRF bank from Dbase
      Modified        :-  J. Sedgbeer  92/02/04 Implement run-period
                          scheme for some dbase banks.
      Modified        :-  J. Sedgbeer  93/07/01 New Drift-time params.
                          from bank IDRP for 1993 onwards (run > 20000)
      Modified        :-  J. Sedgbeer  98/08/15 New Drift-time params.
                          (Spline) from IDSP bank for 1997 data onwards
                          (run > 43000).   NB: MC will still use IDRP.
   
      Input:
       IRUN    /I : Current run number
       params.:    IDTCJJ  for IDTC bank
                   IDRPJJ  for IDRP
                   IRESJJ  for IRES
                   IZRSJJ  for IZRS
       commons:    /BCS/   for banks  IDTC,IDRP,IRES,IRRF,IZRS,IEDD,IET0
   
      Output:
       IRET    /I : Error flag: (as for AGETDB)
                      IRET > 0  Existing values still valid
                      IRET = 0  Error. One or more banks missing for this
                                run - leave values unchanged or, if first
                                time use default values.
                      IRET < 0  1 or more banks reloaded
       commons:    /IDTCCC/  Drift-time corrections - old parametrisation.
                   /IDRPCC/  Drift-time corrections - new parametrisation.
                   /IRESCC/  Resolution vs. cell position coeffs.
                   /IZRSCC/  Z Resolution coeffs.
                   /IRESOL/  Mean DC resolution common.
   
      calls     : AGETDB (Alephlib)
                  GTSTUP (Alephlib)
   
      libraries:  BOS
   
      Description:
    Set up ITC drift-relation constants.
    Get data from a direct access file ( filled from D.B.) or from
    data cards or via bank input wth data.
    If no valid bank then use values already loaded into common or,
    if first time, use default values.
   
    If data (run number > 2000) then
      run period = run number
    else (MC)
      get run period from function GTSTUP
      if no set-up number found set run period = run number
    endif
    If 1989-1992 data ( 2000 < run number < 20000) then
      Check validity of IDTC bank - AGETDB
      If (first and no IDTC bank) then fill /IDTCCC/ and /IDRPCC/ with
           default values. Note that /IDTCCC/ is kept for backwards compat.
      If (first and existing IDTC bank still valid) or (new IDTC bank) then
         get values from IDTC bank. Fill /IDTCCC/ and /IDRPCC/
      Endif
    ElseIf (Monte Carlo or 1993-1996 data;  runs 20000-43000 or < 2000)
      Check validity of IDRP bank - AGETDB
      If (first and no IDRP bank) then fill /IDTCCC/ and /IDRPCC/ with
                                   default values
      If (first and existing IDRP bank still valid) or (new IDRP bank) then
         get values from IDRP bank. Fill /IDTCCC/ and /IDRPCC/
      Endif
    Else (1997 data onwards;  runs > 43000 )
      Check validity of IDSP bank - AGETDB
      If (first and no IDSP bank) then fill /IDRPCC/ with
                                   default values
      If (first and existing IDSP bank still valid) or (new IDSP bank) then
         get values from IDSP bank. Fill /IDRPCC/
      Endif
    Endif
    Check validity of IRES bank - AGETDB
    If (first and no IRES bank) then fill /IRESCC/ and /IRESOL/ with
       default values
    If (first and existing IRES bank still valid) or (new IRES bank) then
       get values from IRES bank. Fill /IRESCC/ and /IRESOL/
    Endif
    Check validity of IZRS bank - AGETDB
    If (first and no IZRS bank) then fill /IZRSCC/ and /IRESOL/ with
       default values
    If (first and existing IZRS bank still valid) or (new IZRS bank) then
       get values from IZRS bank. Fill /IZRSCC/ and /IRESOL/
    Endif
    Check validity of IEDD bank - AGETDB
    Check validity of IET0 bank - AGETDB
    Check validity of IRRF bank - AGETDB
    Set return flag
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IRDDAF                                                                          
        |---- IINRES                                                               
                   |----  GTSTUP                              External             
                   |----  AGETDB                              External             
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
   
 
3 IPRDAF
         SUBROUTINE IPRDAF
  ------------------------------------------------------------------------------
    CKEY ITCDES ITC PRINT
  ------------------------------------------------------------------------------
   Print current values of itc prepare data consts. from daf
   
      Author          :-  J. Sedgbeer  89/03/03
      Modified        :-  J. Sedgbeer  91/01/07 Tidy Formats.
      Modified        :-  J. Sedgbeer  92/01/30 Remove obsolete code
      Modified        :-  J. Sedgbeer  92/02/07 Print /IZNLCC/
      Modified        :-  J. Sedgbeer  93/07/01 Print /IDTCCC/ mods.
                                                Add print /IDRPCC/
      Modified        :-  J. Sedgbeer  98/08/16 Add print of new
                                                variables in /IDRPCC/
      Input:
       commons:    /ITWICC/  ITC wire geometry
                   /ISWPHI/  Sense wire phi values in ITC frame.
                   /IALIGC/  ITC alignment constants.
                   /IALIGG/  Global alignment constants.
                   /IRFECC/  ITC R-phi Front-end constants
                   /IZFECC/  ITC Z Front-end constants
                   /IZNLCC/  ITC Z non linearity constants
                   /IRESOL/  DC R-phi resolution common (nominal).
                   /IRESCC/  DC R-Phi resolution common -parametrisation.
                   /IZRSCC/  DC Z resolution common -parametrisation.
                   /IDTCCC/  Drift-time relation common - old.
                   /IDRPCC/  Drift-time relation common.
                   /BCS/     for print stream IW(6)
   
      Output: none
   
      Description:
      Print current values of ITC Geometry and Alignment constants
      contained in commons /ITWICC/ and /IALIGC/ and /IALIGG/
      Print current values of ITC R-phi and Z Front-End constants
      contained in commons /IRFECC/ and /IZFECC/
      Print current values of Z non-linearity params. in /IZNLCC/
      Print current values of ITC Drift-time and resolution parameters
      contained in commons /IRESCC/, /IZRSCC/, /IRESOL/, /IDTCCC/ and
                                                        /IDRPCC/.
      Note: Must fill commons first by calling IRDDAF.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              IPRDAF                                                               
                   |----  CELWIT                              External             
                   |----  FORMAT                              External             
                   |----  ITLOIZ                              External             
                   |----  ITHIIZ                              External             
                   |----  DSPLID                              External             
   
 
3 IRDDAF
         SUBROUTINE IRDDAF(IRUN,IRET)
  ------------------------------------------------------------------------------
    CKEY ITCDES ITC
  ------------------------------------------------------------------------------
   Read daf banks for itc - for 'prepare data' only.
   
      Author     :-  J. Sedgbeer  89/03/07
      Modified   :-  J. Sedgbeer  92/01/30 Remove call IFEOLD (obsolete)
                                           Add calls to ALTELL.
      Input:
       IRUN    /I : Current run number
   
      Output:
       IRET    /I : Error flag: (as for AGETDB)
                      IRET > 0  Existing values still valid
                      IRET = 0  Error. One or more banks missing for this
                                run - leave values unchanged or, if first
                                time use default values.
                      IRET < 0  1 or more banks reloaded
   
      calls     : IGEOMW  (ALEPHLIB)  Get ITC Geometry consts.
                  IFECON  (ALEPHLIB)  Get Front-end constants
                  IINALI  (ALEPHLIB)  Get alignment constants
                  IINRES  (ALEPHLIB)  Get Drift-time and resolution consts.
   
      libraries:  none
   
      Description:
    Set up ITC constants from DAF. Gets constants for geometry, alignment,
    front-end and resolution only, i.e. all constants necessary for
    ITC prepare data.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              IRDDAF                                                               
                   |----  IGEOMW                                                   
                   |----  IINALI                                                   
                   |----  IFECON                                                   
                   |----  IINRES                                                   
                   |----  ALTELL                              External             
   

2 ITC

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various ITC routines not included into ITCDES
     ! 980902 ALEPHLIB 309.0
        IDDIST : Modify to use polynom. or spline drift-time coeffs. 
                 depending on the flag IFLGID in /IDRPCC/            (J.Sedgbeer)
    
     ! ALEPHLIB 20.6
       IDDIST, ITDRIF - Protect for v.large times beyond reasonable input
                        range of t-d relation.
    
     ! ALEPHLIB 20.5
       modifications for bunch-train (J.Sedgbeer)
       IFECON - Remove obsolete Rphi TDC bin-width test
       ICRCOO - Get Bunch-train info. (Call RQBUNC)
       ITDRIF - Use bunch train info to calculate drift-time from TDC value
       IBUNCC - New Comdeck with Bunch train info.
    
     ! ALEPHLIB 15.4
       ICDRIF, ITDRIF - Use function IDDIST for drift-distance calculation
       IDDIST - new function:
                Calculate drift-distance from params. in /IDRPCC/ and
                drift-time.
    
     Various ITC utility routines used in ALPHA or JULIA, or for users.
    
     Prepare data package:
       ICRCOO - Create ITC coords. from digitisings
                with ITSWCO, ITDRIF, ITROTN
    
     Coordinate correction and resolution information package (W.Atwood):
       IMICCO - Make corrected ITC coords. bank ICCO
       IASIGA - gives coord. and resolution info. for one track.
                with ILATCH, ILIVEW, ITXING, ITCFLG, ITQUAL, IUPCCO,
                     ITXFLG, ICDRIF, ITROTN, IUDOCA, IUVCRS
                (IXHITS obsolete? - superceded by ITXING)
    
     Print routines:
       ITPRDI - print digitisings
       ITPRHT - print hits (Monte Carlo)
    
     Various:
       ITDCOR - create Monte Carlo track to ITC digitisings relations
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     IASIGA     Asign itc coords to a track
     ICDRIF     Get corrected drift dist. and error.
     ICRCOO     Create itc coordinates from digitisings
     IDDIST     Drift-distance calc. from drift-time relation.
     ILATCH     Create 'latched' wire bank iwcr (wire-to-coord relation)
     ILIVEW     Create 'live' wire bank iliv
     IMICCO     Make corrected coordinate bank (icco) from track and coord banks.
     IRESRP     Get itc r-phi coordinate resolution
     ITCFLG     Get coords,wires and flags from track coord. list
     ITDCOR     Create itc track to digits correlation banks.
     ITDRIF     Get approx. drift dist. and error.
     ITPRDI     Print out itc digitisings in a readable format.
     ITPRHT     Print out contents of itc hit bank in a readable form.
     ITQUAL     Create itc track quality info. bank for one track
     ITROTN     Rotate coord to aleph frame
     ITSWCO     Get sense wire coord (+sag).
     ITXFLG     Get coords,wires and flags from list of cells crossed for one track.
     ITXING     Compute track crossings of the itc sense wire planes.
     IUDOCA     Calculates dist. of closest approach for two straight lines.
     IUPCCO     Update icco bank for coords. on one track.
     IUVCRS     Calculates the vector cross product c = a x b
     IXHITS     See if a track should have had a coord. in each itc layer.

3 IASIGA
         SUBROUTINE IASIGA(ITK,VV0,ADJC,SIGMX,NHIT,NGHT,CHIP,IER)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Asign itc coords to a track
   
       Author  :  W. B. Atwood  2-Oct-89
       Modified:  J.Sedgbeer 20/04/90 To go in ALEPHLIB
   
      Input:
        ITK    /I4 : number of bank/track
        VV0(5) /R  : track params (1/r tanl phi0 d0 z0)
        ADJC   /R  : Adjacent cell cut (fraction 0. -> 1.)
        SIGMX  /R  : Sigma R-Phi maximum cut (number of sigma)
        commons:    /BCS/ for BOS banks.
        params:     IQXTJJ
   
      Output:
        IER    /I  : Error flag:
                     =  0 if O.K.
                     =  1 Missing input banks. No output
                     =  2 No room to create BOS banks. No output.
                     =  3 Track doesn't cross any ITC layers. No output
                     = -1 O.K. but garbage collection done
                     = -10 O.K. but missing ILIV bank (i.e. no info
                           on dead wires etc. available
        NHIT   /I  : Number of coords found on track (in same cell)
        NGHT   /I  : Number of coords within SIGMX (in same cell)
        CHIP   /R  : Chisq per point = Sum of (residual/err)**2 divided
                                        by number of good hits (NGHT)
        IQXT bank number ITK  - track quality and resolution info
   
      calls     : ITXING, ITXFLG, ITQUAL
   
      Libraries required: BOS
   
    IASIGA: Given a set of track parameters VV0 and a track number, ITK,
    this routine makes a bank IQXT number ITK containing information on
    the track crossings, coordinates, residuals etc (see DDL).
   
    Get Track crossings in ITC - ITXING
    If no crossings then skip
    Set flag, wire and coordinate lists for the crossings
    Create bank IQXT number ITK: contains all info for this track.
    Update flags in IQXT bank: good coords (flag=1) within SIGMX of
                                               track get flag=0
    Make global quantities NHIT,NGHT and CHIP.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              IASIGA                                                               
                   |----  ITXING                                                   
                   |----  ITXFLG                                                   
                   |----  ITQUAL                                                   
                   |----  NLINK                               External             
                   |----  ABS                                 External             
                   |----  AMAX1                               External             
                   |----  FLOAT                               External             
   
 
3 ICDRIF
         SUBROUTINE ICDRIF(IL,IWIRE,TIME,RSW,ZOLD,ZNEW,DIST1,DIST2,SIGRP)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Get corrected drift dist. and error.
   
       Author          :- W. Atwood  89/12/16.
       Modified        :- J.Sedgbeer 01/07/93 Use function IDDIST for
                                              Drift-distance calc.
       Input:
         IL     /I  : ITC layer number
         IWIRE  /I  : ITC wire no. [1,960]
         TIME   /I  : Drift time - fully corrected (ns)
         RSW    /R  : Sense wire radius
         ZOLD   /R  : Old value of z at which co-ord was evaluated
         ZNEW   /R  : New value of z at which co-ord will be evaluated
         need commons     /ITWICC/ ITC wire geom.
                          /IRESCC/ Resolution vs cell position coeffs.
                          /BCS/    For IWST and IEDD banks
              parameters  ALCONS
                          IEDDJJ
                          IWSTJJ
   
       Output:
         DIST1  /R  : Azimuthal dist.of +ve hit from sense wire (cm.)
                                          DIST1 is positive
         DIST2  /R  : Azimuthal dist.of -ve hit from sense wire  (cm.)
                                          DIST2 is negative
         SIGRP  /R  : Sigma R-Phi   (cm.)
                            > 0   if O.K.
                            < 0   if TDC value out of O.K. range
   
       calls     : IDDIST (Alephlib)
       Libraries required : none
   
    This routine is based on ITDRIF. ITDRIF makes a coord. (drift-dist)
    from a digitising, i.e. before track info. is available. This routine
    ICDRIF, corrects the drift distance the Z using info. from the track
    trajectory.
   
     Correct drift-time for TOF and signal propagation time at new Z
     Calculate drift distance from time - use function IDDIST
     Correct drift distance
     Set Sigma(R-Phi)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ITQUAL                                                                          
        |---- ICDRIF                                                               
                   |----  NAMIND                              External             
                   |----  SQRT                                External             
                   |----  IDDIST                                                   
                   |----  AMAX1                               External             
                   |----  CELWIT                              External             
                   |----  AMIN1                               External             
   
 
3 ICRCOO
         SUBROUTINE ICRCOO(IER)
  ------------------------------------------------------------------------------
    CKEY IPREDATA ITC
  ------------------------------------------------------------------------------
   Create itc coordinates from digitisings
   
       Author     :- J. Sedgbeer   89/03/03
       Modified   :- J. Sedgbeer   89/04/11
       Modified   :- R. Johnson    89/11/02   Add bank IFCO
       Modified   :- J. Sedgbeer   90/01/04  Correct swapped wire numbers
       Modified   :- J. Sedgbeer   91/01/07 Protect for missing bank ICAE
       Modified   :- J. Sedgbeer   92/01/30 Remove obsolete IFCO
       Modified   :- J. Sedgbeer   95/04/02 Add call to RQBUNC to get
                                   bunchtrain info - put into /IBUNCC/.
   
       Input:
         commons:       /BCS/    => bank  IDIG, DB banks ICAE,ISFE
                        /ITWICC/ ITC wire geom. Filled by IGEOMW
         parameters:    ITCOJJ   parameters for ITCO bank
                        ICAEJJ   parameters for ICAE DB bank
                        ISFEJJ   parameters for ISFE DB bank
                        IDIGJP
                        ALCONS
   
       Output:
         IER   /I    : Error flag:
                          IER = 0 if all O.K.
                          IER = 1 if no IDIG bank, or data not OK, or
                                  no good bunch info.
                          IER = 2 if no room to create banks
                          IER = 3 no digits in IDIG bank
                          IER = 4 ITCO bank empty - no valid coords made
                                  ITCO and IDCR dropped. (IDIG not empty)
                          IER = -1  bad data - wire out of range
                          if IER > 0  no ITCO or IDCR created.
                          if IER < 0 ITCO and IDCR created
         ITCO             bank of ITC coordinates
         IDCR             digit-to-coord relation bank
         commons:       /BCS/ for banks IDCR and ITCO
   
       calls     : AUBOS  (Alephlib)
                   ITSWCO (Alephlib)
                   ITDRIF (Alephlib)
                   ITROTN (Alephlib)
                   RQBUNC
   
       Libraries required: BOS
   
    This routine creates ITC coords. from digis.
    The ITC Alephlib routines needed to do this are:-
                    ICRCOO,ITSWCO,ITDRIF and ITROTN.
    Also, common blocks containing constants needed MUST be initialised
    once per run by using the ITC Alephlib routine: IRDDAF.
   
    Get IDIG bank
    Get bunch-train info (sub RQBUNC) put into /IBUNCC/
    Loop over digitisings
      Correct for swapped channels (wire number)
      Find coord of hit sense wire
      Transform coord. to ALEPH frame
      Find drift distance from TDC value
      Form ITC coord.
      Add coord to ITCO bank
      Put digit to coord. relationship into IDCR bank
    End Loop
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PITCOJ                                                                          
        |---- ICRCOO                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  RQBUNC                                                   
                   |----  AUBOS                               External             
                   |----  MDROP                               External             
                   |----  IBITS                               External             
                   |----  ITSWCO                                                   
                   |----  ITROTN                                                   
                   |----  ITDRIF                                                   
   
 
3 IDDIST
         REAL FUNCTION IDDIST(IL,TIME,DDDT)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Drift-distance calc. from drift-time relation.
   
       Author    :- J.Sedgbeer 93/07/01
       Modified  :- J.Sedgbeer 95/06/10 Protect for v.large times beyond
                    reasonable input range of t-d relation.
       Modified  :- J.Sedgbeer 98/08/16 Modify to use polynom. or spline
                               drift-time coeffs. depending on the flag
                               IFLGID in /IDRPCC/.
                               Note that only the array of coeffs (in
                               /IDRPCC/) corresponding to IFLGID will
                               be set - the other array is undefined.
       Input:
         IL     /I  : ITC layer number
         TIME   /I  : Drift time - fully corrected (ns)
         need commons     /IDRPCC/ Drift-time relation.
                          /ITWICC/ ITC geom.
   
       Output:
        IDDIST  /R  : Drift-distance (cm.). Max value = cell width.
        DDDT    /R  : dD/dt - gradient of drift-relation at time TIME
                         - for poly. set negative if v. large input time.
                         - for spline set =  0.0  if v. large input time.
   
       calls     :          none
       Libraries required : none
   
    Use drift relation coeffs. in /IDRPCC/ and TIME to calculate
    the drift distance and the gradient dD/dt at time TIME.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ICDRIF                                                                          
   ITDRIF                                                                          
        |---- IDDIST                                                               
                   |----  FLOAT                               External             
                   |----  CELWIT                              External             
                   |----  DSPLID                              External             
   
 
3 ILATCH
         SUBROUTINE ILATCH(LIST,IER)
  ------------------------------------------------------------------------------
    CKEY ITC WIRE
  ------------------------------------------------------------------------------
   Create 'latched' wire bank iwcr (wire-to-coord relation)
   
       Author     :- W. Atwood
       Modified   :- J. Sedgbeer  89/12/08
   
       Input:
         LIST   /C    : BOS list to which IWCR is to be added e.g. 'T+'
         commons:     /BCS/     for bank ITCO
         params:      ITCOJJ
   
       Output:
         IER    /I    : = 0 successful
                        = 1 input bank is empty or does not exist
                        = 2 not enough space (garbage coll. may have
                                    been done)
                        =-1 O.K. but garbage collection
         IWCR bank
   
    ILATCH:
    Create bank IWCR of latched ITC wires for this event. IWCR is
    really a relation bank which gives the coordinate number for
    a given wire, or zero if no coord. for the wire - see DDL.
   
     If first then Set name indices and bank formats
     Check for non-empty ITCO bank.
     Create IWCR bank
     Loop over coordinates
       fill IWCR
     End Loop
     Add IWCR to BOS list
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IMICCO                                                                          
        |---- ILATCH                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  MOD                                 External             
                   |----  BLIST                               External             
   
 
3 ILIVEW
         SUBROUTINE ILIVEW(LIST,IER)
  ------------------------------------------------------------------------------
    CKEY ITC WIRE ILIV
  ------------------------------------------------------------------------------
   Create 'live' wire bank iliv
   
       Author     :- W. Atwood
       Modified   :- J. Sedgbeer  89/12/08
       Modified   :- J. Sedgbeer  91/01/07 Ensure correct IWST bank used.
   
       Input:
         LIST   /C    : BOS list to which ILIV is to be added e.g. 'T+'
         commons:     /BCS/     dbase bank IWST
         params:      IWSTJJ
   
       Output:
         IER    /I    : = 0 successful
                        = 1 input bank is empty or does not exist
                        = 2 not enough space (garbage collection may
                                     have been done).
                        =-1 O.K. but garbage collection
         ILIV bank
   
      calls     : none
   
    ILIVEW:
    Create bank ILIV of 'live' ITC wires for this event. ILIV gives
    the status of a wire (channel) - see DDL.
   
     If first then Set name indices and bank formats
     Create ILIV bank
     Get IWST bank
     Loop over wires in IWST
       fill ILIV
     End Loop
     Add ILIV to BOS list
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IMICCO                                                                          
        |---- ILIVEW                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
   
 
3 IMICCO
         SUBROUTINE IMICCO(IER)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Make corrected coordinate bank (icco) from track and coord banks.
   
      Author:     J.Sedgbeer 20/04/90
      Modified:   J.Sedgbeer 24/10/91 Use IRESRP to set rphi res. in ICCO
   
      Input:
        common  :  /BCS/ for BOS banks FRFT,FRTL,FICL,ITCO
        params. :  FRFTJJ
                   FRTLJJ
                   ITCOJJ
                   ICCOJJ
      Output:
        IER    /I  : Error flag:
                       = 0 if O.K.
                       = 1 if missing (or empty) input banks
                       = 2 no room to create banks.
                       =-1 O.K. but garbage collection done.
        ICCO bank of corrected ITC coords.
   
      calls     : ITXING, ITCFLG, ITQUAL, IUPCCO
   
      Libraries required: BOS
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PITCOJ                                                                          
        |---- IMICCO                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  FORMAT                              External             
                   |----  IABS                                External             
                   |----  AUARCM                                                   
                   |----  ABS                                 External             
                   |----  IRESRP                                                   
                   |----  ILATCH                                                   
                   |----  ILIVEW                                                   
                   |----  IOFFORMAT                           External             
                   |----  ITXING                                                   
                   |----  ITCFLG                                                   
                   |----  ICOFORMAT                           External             
                   |----  IERFORMAT                           External             
                   |----  ITQUAL                                                   
                   |----  IUPCCO                                                   
                   |----  ALLBDROP                            External             
   
 
3 IRESRP
         REAL FUNCTION IRESRP(LAY,DDS,CALP)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Get itc r-phi coordinate resolution
   
     Author  :- J. Sedgbeer   24/10/91
     Modified:- J. Sedgbeer   12/02/92 Make the default values of the
                              r-phi resol. those of 1990 data (as the
                              IRRF bank is not in ADBS890 !).
   
       Input:
         LAY     /I  :  Itc layer number (1-8)
         DDS     /R  :  Drift-distance to coordinate (signed)
         CALP    /R  :  Cosine of entrance angle of track thru cell.
   
         commons:       /BCS/ for bank IRRF. Note that it is assumed
                              IRRF has already exists in /BCS/
                              (i.e. IRDDAF previously called)
                        /ITWICC/ ITC geometry - for cell width
         parameters:    IRFFJJ
   
       Output:
         IRESRP  /R  : ITC r-phi resolution (cm)
   
         ** N.B. *
         IRESRP is > 0  if all O.K.
         If IRRF bank is missing then the nominal r-phi resolution is
         taken to be the 1990 data values and IRESRP is set NEGATIVE.
         The 1990 data values are used because if IRRF is
         missing it is probably because 8990 data is being read and
         hence ADBS8990  - IRRF is NOT in this DAF.
   
    Check for IRRF bank
    If no IRRF bank then
       set nominal resolution
    else
       get resolution parameters for layer LAY from IRRF bank
       calculate resolution for drift distance DDS
       limit to maximum/minimum allowed
    endif
    Correct resolution for entrance angle
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IMICCO                                                                          
   IUPCCO                                                                          
        |---- IRESRP                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  CELWIT                              External             
   
 
3 ITCFLG
         SUBROUTINE ITCFLG(NLC,LCO,ICLW,IFLG,IWIR,ICO,IER)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Get coords,wires and flags from track coord. list
   
       Author  :  J.Sedgbeer 20/04/90
   
      Input:
        NLC      /I  : No. of coords. in LCO. (Maximum of 8)
        LCO(i)   /I  : List of coords (as in FICL etc)
        ICLW(i)  /I  : List of closest wires to track crossings
        common   /BCS/ for BOS banks ITCO (ITC coords. bank)
                                     ILIV (ITC live/dead channel info.)
                 /ITWICC/ ITC Wire geometry
        params   ITCOJJ
   
      Output:
       IFLG(i)  /I  : flag: = 1 to 5  See Below.
       IWIR(i)  /I  : wire for layer i
       ICO(i)   /I  : Coord. no. (in ITCO) for wire IWIR(i)
       IER      /I  : error flag:
                      =    0 all O.K.
                      =    1 ITCO missing - fatal - No useful output info
                      =  < 0 - non-fatal problem: contributions:-
                          -1 ILIV missing - Output arrays filled but info
                                     about dead/live channels not used.
                         -10 IWIR not adjacent to ICLW encountered at
                             least once.
                        -100 At least one coord. in list LCO is on a
                             supposedly dead wire! (Coord is kept)
                       -1000 At least one coord. in list LCO is at layer
                             with no track crossing point! (Coord. is
                             rejected).
   
      Libraries required: BOS
   
    ICLW|IFLG IWIR  ICO     | ICLW  Comment
        |                   |status
      N |  1   N    IC(N)   |  -    Coord. #IC on wire N
      N |  2   M    IC(M)   |  -    Coord. on wire M. (M.ne.N)
      N |  3   N     0      | live  N live and no entry in list LCO
        |                   |       corresponding to this layer.
      N |  4   N     0      | dead  N Dead and no entry in list LCO
        |                   |       corresponding to this layer.
      0 |  5   0     0      |  -    No Crossing
   
    Set error flag IER depending on existence of ITCO and ILIV banks.
    If no ITCO bank then return.
    Loop over ITC layers
      Set default values IFLG=5, IWIR=ICLW, ICO=0
      If ICLW is dead (look in ILIV) then
        set IFLG = 4
      else
        set IFLG = 3
      endif
    Endloop
    Loop over coords. in list LCO
      Get corresponding wire and layer number from ITCO
      If wire supposedly dead the set error flag IE4
      If no crossing at this layer then
        set error flag IE5
        skip to end of loop
      endif
      Set IFLG=1 and set IWIR and ICO
      If IWIR not same as ICLW then set IFLG = 2
      If IWIR and ICLW not adjacent set error flag IEA.
    Endloop
    Update error flag IER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IMICCO                                                                          
        |---- ITCFLG                                                               
                   |----  NAMIND                              External             
                   |----  FORMAT                              External             
                   |----  JWSTFORMAT                          External             
                   |----  IABS                                External             
                   |----  MOD                                 External             
   
 
3 ITDCOR
         SUBROUTINE ITDCOR
  ------------------------------------------------------------------------------
    CKEY ALEF ITC HISTORY MCARLO
  ------------------------------------------------------------------------------
   
     2.00  900430  18:16                      R.Beuselinck
   
   
   Create itc track to digits correlation banks.
   
      Input banks: IHIT, ITHT, IDHR
     Output banks: ITDR, ITDL
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ITPRDI                                                                          
        |---- ITDCOR                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  ALBOS                               External             
                   |----  SORTZV                              External             
                   |----  AUBPRS                              External             
   
 
3 ITDRIF
         SUBROUTINE ITDRIF(IL,IWIRE,ITDC,RSW,ZSW,SIGZ,
  ------------------------------------------------------------------------------
    CKEY IPREDATA ITC /INTERNAL
  ------------------------------------------------------------------------------
        *                   DIST1,DIST2,TIME,SIGRP)
   Get approx. drift dist. and error.
   
       Author     :- J. Sedgbeer
       Modified   :- J. Sedgbeer  90/01/04 Add check for neg. dist.
                                      Correct channels read at B end
       Modified   :- J. Sedgbeer  91/01/07 Ensure IWST bank O.K.
       Modified   :- J. Sedgbeer  01/07/93 Use function IDDIST for
                                          Drift-distance calc.
       Modified   :- J. Sedgbeer  02/04/95 Bunch-trains: modify calc.
                                  of time from TDC value to use bunch
                                  number and spacing in /IBUNCC/
       Modified   :- J. Sedgbeer  10/06/95. Protect against very large
                                  drift-times in data with bunch trains.
   
       Input:
         IL     /I  : ITC layer number
         IWIRE  /I  : ITC wire number [1,960]
         ITDC   /I  : TDC value
         RSW    /R  : Radius (cm.)
         ZSW    /R  : Z coord. (cm.)
         SIGZ   /R  : sigma(Z) (cm.)
         need commons     /ITWICC/ ITC wire geom.
                          /IRFECC/ R-phi front-end constants.
                          /IDRPCC/ Drift-time relation coeffs.
                          /IRESCC/ Resolution vs cell position coeffs.
                          /BCS/    For IWST, IEDD and IET0 banks
                          /IBUNCC/ For bunch train info.
              parameters  ALCONS
                          IEDDJJ
                          IET0JJ
                          IWSTJJ
   
       Output:
         DIST1  /R  : Azimuthal dist.of +ve hit from sense wire (cm.)
                                          DIST1 is positive
         DIST2  /R  : Azimuthal dist.of -ve hit from sense wire  (cm.)
                                          DIST2 is negative
         TIME   /R  : Drift time    (ns.)
         SIGRP  /R  : Sigma R-Phi   (cm.)
                            > 0   if O.K.
                            < 0   if TDC or time value out of O.K. range
   
       called by : ICRCOO (Alephlib)
       calls     : IDDIST (Alephlib)
       Libraries required : none
   
    This routine is part of the ITC Alephlib routines to make coords.
    from digis.  See ICRCOO. Initialisation must be done - see ICRCOO.
   
     Convert TDC value to time.
     Correct time for TOF and signal propagation.
     Correct for fine tune time offsets (per layer and wire)
     Calculate drift distance from time - use function IDDIST
     Correct drift distance
     Set Sigma(R-Phi)
     If Z coord. bad (or unknown) adjust Sigma(R-Phi)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ICRCOO                                                                          
        |---- ITDRIF                                                               
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  SQRT                                External             
                   |----  IDDIST                                                   
                   |----  AMAX1                               External             
                   |----  CELWIT                              External             
                   |----  AMIN1                               External             
   
 
3 ITPRDI
         SUBROUTINE ITPRDI
  ------------------------------------------------------------------------------
    CKEY PRINT ITC MCARLO
  ------------------------------------------------------------------------------
   
     2.10  900430  18:00                        R.Beuselinck
   
   
   Print out itc digitisings in a readable format.
   
    This routine uses the IHIT (or ITHT) and IDHR banks to correlate
    the digitisings to particular tracks.
    This routine uses either ITDI or IDIG.
   
     Calls: ITDCOR                                      (from this HLB)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ITPRDI                                                               
                   |----  NAMIND                              External             
                   |----  ITDCOR                                                   
                   |----  BKTOW                               External             
                   |----  MIN                                 External             
                   |----  IBITS                               External             
                   |----  WDROP                               External             
   
 
3 ITPRHT
         SUBROUTINE ITPRHT
  ------------------------------------------------------------------------------
    CKEY PRINT ITC MCARLO
  ------------------------------------------------------------------------------
   
     2.00  900430  18:00                        R.Beuselinck.
   
   
   Print out contents of itc hit bank in a readable form.
   
     Input bank: IHIT or ITHT
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ITPRHT                                                               
                   |----  NLINK                               External             
   
 
3 ITQUAL
         SUBROUTINE ITQUAL(ITK,IFLG,IWIR,ICO,XHT,XDC,IER)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Create itc track quality info. bank for one track
   
       Author  :  W. B. Atwood  2-Oct-89
       Modified:  J.Sedgbeer 20/04/90 To go in ALEPHLIB.
       Modified:  J.Sedgbeer 21/10/91 Fill wire info. in IQXT even if no
                                      coordinate
      Input:
         ITK       /I : Track number - bank IQXT will be created with
                                                  this number.
         IFLG(i)   /I : Quality flag at layer i
         IWIR(i)   /I : Wire number at layer i. IWIR=0 if no crossing.
         ICO(i)    /I : Coord. no at wire i. ICO=0 if no coord.
         XHT(3,i)  /R : Track crossing point at layer i.
         XDC(3,i)  /R : Direction cosines of track at XHT
         commons:   /BCS/ for BOS bank ITCO and IQXT
         params:    ALCONS
                    IQXTJJ
                    ITCOJJ
   
     Output:
     -------
        IER      /I  : error flag:
                      = 0  all O.K.
                      = 1  ITCO missing or empty - IQXT not created.
                      = 2  no room to create banks - IQXT not created
                      =-1  O.K. but garbage collection done.
        IQXT bank number ITK
   
      calls: UTSWCO - ALEPHLIB
             ITROTN - ALEPHLIB
             ICDRIF - ALEPHLIB
             IUDOCA - ALEPHLIB
             AUBOS  - ALEPHLIB
   
      Libraries required: BOS
   
    Create IQXT bank number ITK - this bank contains info on the
    track crossings, wire positions, coord. positions and residuals
    for the track. Note that the coord. and residual info. is
    only filled if there is a valid coord on the wire, i.e. ICO(i) > 0.
    Otherwise the contents of this part of the bank is UNDEFINED.
    (If the bank is newly created then it will contain zeroes, however,
    if the bank already existed then it will contain whatever was there
    before - you have been warned!).
   
    Set error flag IER depending on existence of ITCO bank.
    If no ITCO bank then return (IER=1)
    Create(or locate) IQXT bank number ITK
    If no room for bank then set error flag (IER=2) and return.
    If Garbage collection done then set IER=-1
    Loop over ITC layers
      Fill part of IQXT bank from input arrays.
      If no crossing at this layer (wire=0) then skip
      Wire & track related info:
        Use wire no. and Z of track crossing to get sense wire coord
                                (corrected for alignment).
        From wire position and track crossing get DOCA
        Calculate track position at DOCA
        Fill IQXT bank with wire info
      If no coord on this wire then skip
      Coord. related info:
        Get the drift distance and error (use drift-time etc from ITCO)
        Choose coord. ambiguity closest to DOCA.
        Get residuals
        Fill IQXT bank with coord info.
    Endloop
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IASIGA                                                                          
   IMICCO                                                                          
        |---- ITQUAL                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  UTSWCO                                                   
                   |----  ITROTN                                                   
                   |----  AMOD                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  IUDOCA                                                   
                   |----  SQRT                                External             
                   |----  ICDRIF                                                   
                   |----  ABS                                 External             
                   |----  DERFORMAT                           External             
                   |----  RSFFORMAT                           External             
   
 
3 ITROTN
         SUBROUTINE ITROTN(R,PHI,Z)
  ------------------------------------------------------------------------------
    CKEY IPREDATA ITC /INTERNAL
  ------------------------------------------------------------------------------
   Rotate coord to aleph frame
   
       Author     :- J. Sedgbeer
       Modified   :- J. Sedgbeer   89/08/06
       Modified   :- J. Sedgbeer   91/01/07 Phi in range 0 - twopi
   
       Input:
         R      /R  : Radius    (cm.)
         PHI    /R  : Phi value (radians.)
         Z      /R  : Z         (cm.)
         commons    : /IALIGC/  ITC alignment constants
                      /IALIGG/  Global alignment of ITC+TPC wrt ALEPH
         parameters : ALCONS
   
       Output:
         R      /R  : Radius
         PHI    /R  : Phi
         Z      /R  : Z
   
       called by : ICRCOO (Alephlib)
       calls     : none
   
       Libraries required : none
   
    ITC Alephlib routine - part of package to make ITC coords from digis.
    See ICRCOO.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ICRCOO                                                                          
   ITQUAL                                                                          
   ITXING                                                                          
        |---- ITROTN                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
   
 
3 ITSWCO
         SUBROUTINE ITSWCO(IL,IWIRE,IZDIG,RSW,PHSW,ZSW,SIGZ)
  ------------------------------------------------------------------------------
    CKEY IPREDATA ITC /INTERNAL
  ------------------------------------------------------------------------------
   Get sense wire coord (+sag).
   
       Author     :- J. Sedgbeer
       Modified   :- J. Sedgbeer   90/01/04 Check use of Z and tidy
                                                       Z resolution.
       Modified   :- J. Sedgbeer   92/02/07 Use Z non-linearity from
                                                 /IZNLCC/
   
       Input:
         IL     /I  : layer number
         IWIRE  /I  : wire number                      [1,960]
         IZDIG  /I  : Z TDC value
         need commons /IZFECC/  Z front-end parameters
                      /IZNLCC/  Z non-linearity params.
                      /ITWICC/  ITC sense wire geom.
                      /ISWPHI/  ITC sense wire coords.
                      /IZRSCC/  for sigma z
                      ALCONS
   
       Output:
         RSW    /R  : Radius of sense wire (cm.)
         PHSW   /R  : Phi of sense wire    (radians.)
         ZSW    /R  : Z position           (cm.)
         SIGZ   /R  : Sigma Z
                      > 0   if all O.K.
                     set to large value if IZDIG out of range (ZSW = 0.0)
   
       calls     : none
   
       Libraries required : none
   
    Get hit wire coord from wire number
    calculate z coord from Z scalar value
    calculate wire sag at this Z
    Correct wire coord. due to sag.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ICRCOO                                                                          
        |---- ITSWCO                                                               
                   |----  ITLOIZ                              External             
                   |----  FLOAT                               External             
                   |----  SIN                                 External             
                   |----  ABS                                 External             
                   |----  COS                                 External             
   
 
3 ITXFLG
         SUBROUTINE ITXFLG(ICLW,DRF,ADJC,IFLG,IWIR,ICO,IER)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Get coords,wires and flags from list of cells crossed for one track.
   
       Author  :  W. B. Atwood  2-Oct-89
       Modified:  J.Sedgbeer    20/04/90 To go in ALEPHLIB.
   
      Input:
        ICLW(i) /I  : List of wire numbers for layers i=1,8
                        ICLW(i) = 0 if no crossing on layer i.
        DRF(i)  /I  : Expected drift distance (signed) as fraction
                      of cell half-width.
        ADJC    /R  : 'Adjacent cell' cut, i.e. if no coord. in closest
                       cell and closest cell is not dead then look in
                       adjacent cell if ABS(DRF) > ADJC.
        common   /BCS/ for BOS banks IWCR (ITC wire to coord. relation)
                                     ILIV (ITC live/dead channel info.)
                 /ITWICC/ ITC Wire geometry
   
      Output:
       IFLG(i)  /I  : flag: = 1 to 5  See Below.
       IWIR(i)  /I  : wire for layer i
       ICO(i)   /I  : Coord. no. (in ITCO) for wire IWIR(i)
       IER      /I  : error flag:
                      = 0 all O.K.
                      = 1 IWCR missing - fatal - No useful output info.
                      =-1 ILIV missing - Output arrays filled but info.
                                     about dead/live channels not used.
   
      Libraries required: BOS
   
    ICLW|IFLG IWIR  ICO     | ICLW  Require   Comment
        |                   |status
      N |  1   N    IC      |  -       -      Coord. #IC on wire N
      N |  2   N+-1 IC(N+-1)| live  DRF>ADJC  N live, but no coord. on N,
        |                   |                 and track near edge of cell
        |                   |                 and coord. on adjacent wire
      N |  3   N     0      | live  DRF>ADJC  N live, but no coord. on N,
        |                   |                 and track near edge of cell
        |                   |                 but no coord. on adj. wire
      N |  3   N     0      | live  DRF<ADJC  N live, but no coord. on N,
        |                   |                 and track NOT near edge
        |                   |                 of cell.
      N |  4   N     0      | dead     -      Dead R-phi channel - don't
        |                   |                 look in adjacent cell.
      0 |  5   0     0      |  -       -      No Crossing
   
    Set error flag IER depending on existence of IWCR and ILIV banks.
    If no IWCR bank then return.
    Loop over ITC layers
      Set default values IFLG=5, IWIR=ICLW, ICO=0
      If no crossing at this layer (ICLW=0) then skip
      If there is coord. at closest wire (look in IWCR) then
         set IFLG=1,IWIR=wire#, ICO=coord# (in ITCO)
      Else
         If wire dead (look in ILIV) then IFLG = 4
         If wire live and close to edge of cell then
           If there is a coord on adjacent wire then
             IFLG = 2, IWIR = adjacent wire number
           else
             IFLG = 3
           endif
         Endif
         If wire live and not close to edge of cell then
           IFLG = 3 (inefficient)
         Endif
      Endif
    Endloop
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IASIGA                                                                          
        |---- ITXFLG                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
   
 
3 ITXING
         SUBROUTINE ITXING(VV0,IZTST,NXNG,ICLW,XHT,XDC,DRF)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Compute track crossings of the itc sense wire planes.
   
       Author  :  W. B. Atwood  14-Oct-89
       Modified:  J.Sedgbeer    20/04/90 To go into ALEPHLIB.
   
      Input:
        VV0(5) /R : Track params 1/r,tanL,phi0,d0,z0
        IZTST  /I : Z Test flag:
                     IZTST = 0  Test for crossing in r-phi and Z
                     Otherwise only test for crossing in R-phi
        commons:    /ITWICC/ for ITC geom.
        params.:    ALCONS
   
      Output:
        NXNG     /I  : Number of layers crossed
        ICLW(8)  /I  : Array of ITC wire numbers for each of the 8
                      ITC planes. A zero entry indicates no crossing
        XHT(3,8) /R  : Array of space points (x,y,z) for each crossing.
        XDC(3,8) /R  : Array of direction cosines.. for each XHT
        DRF(8)   /R  : Array of scaled (-1,1) drift distances expected
   
      calls :  UTSWCO   - Alephlib
               ITROTN   - Alephlib
   
      Libraries required: none
   
    ITXING: Given the 5 track parameters VV0(5) this routine calculates
    the coordinate (x,y,z),on the track, where the track crosses each of
    the 8 ITC layers (at the nominal radius). This coord. is stored in
    XHT. The direction cosines of the track at the point XHT are stored
    in XDC. The number of the sense wire closest to the crossing point
    is stored in ICLW. Note that this wire number is adjusted for the
    ITC alignment. The expected, scaled drift distance, in R-phi, is
    stored in DRF. DRF is the distance, in R-phi, between the point XHT
    and the sense wire position (corrected for alignment) as a fraction
    of the cell half-width. Note that DRF is signed.
    If a track does not intersect a given layer then ICLW(layer) = 0
    and the contents of XHT, XDC and DRF, for that layer, are undefined.
    NXNG gives the number of layers for which ICLW is non-zero.
   
    Loop over 8 ITC layers
      Check that track crosses this layer in R-phi - if not then skip
      Calculate Phi of track crossing
      Calculate Z of track crossing
      If (IZTST > 0) Check that Z coord is within active length
                                 of chamber - if not then skip
      Fill XHT and XDC
      Find wire (cell) number at intersection
      Find Rad and Phi of the sense wire (at Z of intersection) UTSWCO
      Correct Rad and Phi of sense wire for ITC alignment - ITROTN
      Correct wire number for alignment
      Calculate expected scaled drift distance DRF
    Endloop
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IASIGA                                                                          
   IMICCO                                                                          
        |---- ITXING                                                               
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  ASIN                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  SIGN                                External             
                   |----  FORMAT                              External             
                   |----  FLOAT                               External             
                   |----  PHWRIT                              External             
                   |----  AMOD                                External             
                   |----  INT                                 External             
                   |----  UTSWCO                                                   
                   |----  ITROTN                                                   
                   |----  IWIREFORMAT                         External             
   
 
3 IUDOCA
         SUBROUTINE IUDOCA (X1,T1,X2,T2,DCA,DX1,DX2)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Calculates dist. of closest approach for two straight lines.
   A
    If the lines are parallel, the doca is calcuated, but DX1 and DX2
    are returned zero.
   ARGUMENTS:
   ----------
     X1(3)               Point on first line
     X2(3)               point on second line
     T1(3)             Direction cosines for first line
     T2(3)             direction cosines for second line
     DCA                 distance of closest approach
     DX1                 distance along line 1 from X1 to DOCA vector
     DX2                 distance along line 2 from X2 to DACA vector
    by WBA 2-79, mocified by CCY 2-83 to take care of nearly
    lines.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ITQUAL                                                                          
        |---- IUDOCA                                                               
                   |----  IUVCRS                                                   
                   |----  SQRT                                External             
                   |----  ABS                                 External             
   
 
3 IUPCCO
         SUBROUTINE IUPCCO(ITK,IFLMX,IER)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Update icco bank for coords. on one track.
   
     Author  :- J. Sedgbeer   20/04/90
     Modified:- J.Sedgbeer 24/10/91 Use IRESRP to set rphi res. in ICCO
     Modified:- J.Sedgbeer 12/11/91 Protect against v. small DOCAs
   
       Input:
         ITK     /I  :  Track number (number of bank IQXT)
         IFLMX   /I  :  Only coords (in IQXT) with Flag less than or
                        equal to IFLMX are stored in ICCO
         commons:       /BCS/ for banks IQXT and ITCO
         parameters:    ITCOJJ
                        ICCOJJ
                        IQXTJJ
                        ALCONS
   
       Output:
         IER   /I    : Error flag:
                          IER = 0 if all O.K.
                          IER = 1 if no ITCO or IQXT banks
                          IER = 2 if no room to create ICCO
                          IER = -1 O.K. but garbage collection done.
         ICCO   bank of ITC corrected coords. updated.
   
       calls     : AUBOS  (Alephlib)
   
       Libraries required: BOS
   
    Get ITCO bank - if none (or empty) set error flag IER=1 and return
    Get IQXT bank number ITK if none (or empty) set IER=1 and return
    Create/locate ICCO bank
    If no room for ICCO set IER=2 and return
    If garbage collection done then set IER=-1
    Loop over layers
      Get flag from IQXT, skip if flag > IFLMX
      Get coord from IQXT, skip if no coord on this layer
      Use hit and wire posit. etc. to calc coord. position
      Store coord in ICCO
    End Loop
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IMICCO                                                                          
        |---- IUPCCO                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  ABS                                 External             
                   |----  YHITFORMAT                          External             
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
                   |----  AMOD                                External             
                   |----  COS                                 External             
                   |----  AUARCM                                                   
                   |----  IRESRP                                                   
                   |----  FORMAT                              External             
   
 
3 IUVCRS
         SUBROUTINE IUVCRS (A,B,C,IERR)
  ------------------------------------------------------------------------------
    CKEY ITC
  ------------------------------------------------------------------------------
   Calculates the vector cross product c = a x b
    is error return flag:
       0  ok
       1  one of the input vectors has zero length
       2  both input vectors are non-zero but are parallell;
          output vector has zero length
   ARGUMENTS:
   ----------
     A(1)                vector one
     B(1)                vector two
     C(1)                cross product of vector one with vector two
     IERR                error return flag
    VECTOR CROSS PRODUCT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   IUDOCA                                                                          
        |---- IUVCRS.                                                              
   
 
3 IXHITS
         SUBROUTINE IXHITS(IRUN,NT,IV,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   See if a track should have had a coord. in each itc layer.
   
       Author  :- I. Tomalin  89/06/24
       Modified:- J.Sedgbeer  89/10/12 Remove obsolete IHTD bank
       Modified:- J.Sedgbeer  91/01/07 Ensure correct IWST bank. Test
                                       r-phi coords only.
      Input:
        IRUN   /I4 : Run number.
        NT     /I4 : FRFT number of track.
        need common /BCS/ for FRFT bank.
        need common /ITWICC/ for ITC geom.
   
    IMPORTANT: If you wish to use this subroutine, then at the beginning
               of each run, you must call the ALEPHLIB routine, IRDDAF,
               to fill commons with the ITC geometry etc.
   
      Output:
        IVi    /I4:  =1 if coordinate was expected in ITC layer i
                     =0 if it was not.
        IER    /I4:  =1 if FRFT bank was missing (and IV is not filled).
                     =0 if all O.K.
   
      calls     : none
   
      Libraries required: BOS
   
    This subroutine determines in which layers of the ITC, the track NT
    should have had coordinates. This is done on the basis of whether the
    track actually intersected each layer, and upon whether the wire at
    the intersection point was "alive".
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              IXHITS                                                               
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  ASIN                                External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  FLOAT                               External             
                   |----  PHWRIT                              External             
                   |----  AMOD                                External             
                   |----  INT                                 External             
   

2 KALM

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     ! ALWPHLIB 31.3 correction file no.1
        UFTKAL: Protect against overflow in REAL*8 to REAL*4 conversion, 
                fix line longer than 72 characters                  (M.Cattaneo)
    
     ! ALEPHLIB 31.3
        UF2CRD,UF2TRK,UFDISC,UFJACO,UFLOSS,UFQPRC,UFTKAL,UFVDMS,UTPROC
         Double precision fixes for Linux                           (D.Smith)
    
     ! ALEPHLIB 30.6
        UFG2GT,UFTKAL : fix variable type inconsistencies in function calls, 
                        for Linux                            (A.Waananen)
        UFTKAL : Disable removal of outliers if track has 4 or less remaining
                 3-D coordinates. Fail if numerical problem would reduce track
                 to exactly 3 hits.                               (D.Casper)
          
     ! ALEPHLIB 30.5 correction file 2
        UFECAL : Remove CALL from function references, for Linux. (A.Waananen)
    
      ! ALEPHLIB 30.5 correction file 1
        UFGAIN - Protect against zero determinant
        UFTKAL - Fit the track (using a zero gain matrix for this point) 
                 even if something went wrong in the determinant       (D.Casper)
    
      ! ALEPHLIB 30.3 correction file 1
        UFTKAL - protect against incorrect angular subtraction during smoothing;
                 add support for tracing the fit of a track by calling UFTRAC(.TRUE.)
                 immediately before fitting.                           (D.Casper)
    
      ! ALEPHLIB 30.3
        UFDISC - Set the energy loss to zero if it is more than 5% of
                 the track's starting energy                           (D.Casper)
        UFLOSS - Set the energy loss to zero if it is more than 5% of
                 the track's starting energy                           (D.Casper)
        UFVDMS - Protect against very high incidence angle tracks      (D.Casper)
    
      ! ALEPHLIB 30.2 correction file 9
        UFVDMS - fix overwrite of flag enabling energy loss in Kalman filter
                                                                       (D.Casper)
      ! ALEPHLIB 30.2
        introduction of the new Kalman filter (D.Casper)
        new routines:
        UBANGL  UF2SCA  UFBEBL  UFCOVA  UFGAIN  UFLOSS  UFSCOV  UFSWMS  
        UFTRAN  ULOAD   UF2ARC  UF2TRK  UFBERR  UFDISC  UFGETT  UFQPRC  
        UFSTAT  UFSWMX  UFTTRA  UPCONS  UF2CRD  UF2USE  UFCHI2  UFECAL  
        UFJACO  UFREIN  UFSWMC  UFTKAL  UFVDMS  UTPROC
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     UBANGL     Bound an angle in the range 0 -> 2pi
     UF2ARC     Calculate arc-length along track to reach coordinates
     UF2CRD     Translate coordinates to internal values and sort by decreasing radius
     UF2TRK     Initialize input track and check constraints for kalman filter
     UF2USE     Find usable coordinates (consistent with input track params)
     UFBEBL     Function to calculate energy loss for kalman filter.
     UFBERR     Function to roughly estimate the landau fluctuations in energy loss
     UFCHI2     Return probability for a given chi^2 and #dof
     UFCOVA     Calculate filtered covariance matrix
     UFDISC     Apply discrete energy loss in thin layer of material to state vector
     UFECAL     Function to extrapolate the last track fit by uftkal to the ecal
     UFG2GT     Read the ufg2 bank for the double gaussian parameters from dbase or
     UFGAIN     Calculate kalman gain matrix
     UFGETT     Calculate the process time at a given radius
     UFJACO     Get jacobian of transport from one radius to another
     UFLOSS     Integrate continuous energy loss in a thick layer and apply to state
     UFQPRC     Create process noise array and energy loss for kalman filter
     UFREIN     Read the ufg2 bank for the double gaussian parameters and initialize
     UFSCOV     Compute the smoothed covariance matrix
     UFSTAT     Calculate filtered state vector
     UFSWMC     Swim covariance matrix through time t and convert to global coords
     UFSWMS     Add multiple scattering to covariance matrix at origin
     UFSWMX     Swim state vector through time t and convert to global coords
     UFTKAL     New and improved kalman filter
     UFTRAN     Transport a state vector to a new radius
     UFTTRA     Fitting routine for helices in aleph
     UFVDMS     Get multiple scattering in vdet and beam-pipe in a realistic
     ULOAD      Convert state vector and covariance matrix to real*4
     UPCONS     Apply momentum constraint to filtered covariance matrix
     UTPROC     Calculate change in process time from one radius to another

3 UBANGL
         SUBROUTINE UBA2PI(PHI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Bound an angle in the range 0 -> 2pi
   
 
3 UF2ARC
         SUBROUTINE UF2ARC(INNER, OUTER, DBL_TRK, R_COORD,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        &  X_SMOOTH, XY_ARC)
   Calculate arc-length along track to reach coordinates
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UF2ARC                                                               
                   |----  DCOS                                External             
                   |----  DSIN                                External             
                   |----  UBA2PI                                                   
                   |----  DATAN                               External             
                   |----  DABS                                External             
                   |----  DSIGN                               External             
                   |----  DATAN2                              External             
   
 
3 UF2CRD
         SUBROUTINE UF2CRD(N_COORD, R_IN, RPHI_IN, Z_IN,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        +           RPHI_SIG, Z_SIG, RPHI_Z_COR,
        +           N_PT, R_PT, PHI_PT, Z_PT,
        +           WT_RPHI, WT_Z, COR_RPHI_Z, I_COORD, *)
   Translate coordinates to internal values and sort by decreasing radius
   
    Modified: D.Smith 991025 Double precision fixes for Linux
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UF2CRD                                                               
                   |----  NAMIND                              External             
                   |----  UCOPY                               External             
                   |----  UZERO                               External             
                   |----  ABS                                 External             
                   |----  SORTZV                              External             
                   |----  DBLE                                External             
                   |----  UBA2PI                                                   
   
 
3 UF2TRK
         SUBROUTINE UF2TRK(TRK_IN, DBL_TRK, *)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Initialize input track and check constraints for kalman filter
   
    Modified: D.Smith 991025 Double precision fixes for Linux
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UF2TRK                                                               
                   |----  DBLE                                External             
                   |----  DSIGN                               External             
   
 
3 UF2USE
         SUBROUTINE UF2USE(N_PT, DBL_TRK, R_PT, I_COORD, N_COORD,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        &  INNER, OUTER, *)
   Find usable coordinates (consistent with input track params)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UF2USE                                                               
                   |----  DSIGN                               External             
                   |----  DBLE                                External             
                   |----  ABS                                 External             
                   |----  MAX                                 External             
   
 
3 UFBEBL
         DOUBLE PRECISION FUNCTION UFBEBL(BETA_GAMMA, MASS, MATERIAL, MODE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Function to calculate energy loss for kalman filter.
   
     Uses Bethe-Bloch expression from Particle Data Book, and references
   
     Input:      BETA_GAMMA      Beta * Gamma
                 MASS            Particle mass hypothesis in GeV
                 MATERIAL        Material code:
                                                 1       Silicon
                                                 2       Carbon
                                                 3       Argon
                                                 4       Beryllium
                 MODE            Energy loss mode:
                                                 0       NO energy loss
                                                 1       Use BB curve
                                                 2       Scale by measured
                                                         ionization
     Output:     UFBEBL          Energy loss per radiation length (in GeV)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFQPRC                                                                          
   UFVDMS                                                                          
   UFVDMM                                                                          
        |---- UFBEBL                                                               
                   |----  ALTELL                              External             
                   |----  X0_TAB                              External             
                   |----  Z_TAB                               External             
                   |----  E_TAB                               External             
                   |----  SQRT                                External             
                   |----  DLOG                                External             
   
 
3 UFBERR
         DOUBLE PRECISION FUNCTION UFBERR(X)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Function to roughly estimate the landau fluctuations in energy loss
     for Kalman filter.  Uses expression in particle data book for dE/dx
     resolution in Argon gas sampling chamber, and generalizes to any material
     by assuming the spread is a function of the number of radiation lengths
     traversed.  Add 15% uncertainty on Bethe-Bloch curve in quadrature.
   
     INPUT:      X       Number of radiation lengths traversed
     OUTPUT:     UFBERR  Sigma(%)^2 of energy loss
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFQPRC                                                                          
   UFVDMS                                                                          
   UFVDMM                                                                          
        |---- UFBERR.                                                              
   
 
3 UFCHI2
         FUNCTION UFCHI2(CHI2,NDEG)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Return probability for a given chi^2 and #dof
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFCHI2                                                               
                   |----  PROB                                External             
                   |----  EXP                                 External             
   
 
3 UFCOVA
         SUBROUTINE UFCOVA(C_PRED,GAIN,C_FILT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculate filtered covariance matrix
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFCOVA.                                                              
   
 
3 UFDISC
         SUBROUTINE UFDISC(STATE, MASS, DE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Apply discrete energy loss in thin layer of material to state vector
    Modified: D.Casper  970502   To add sanity check on energy loss
    Modified: D.Smith   991025   Double precision fixes for Linux
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFDISC                                                               
                   |----  DABS                                External             
                   |----  DBLE                                External             
                   |----  DCOS                                External             
                   |----  DSQRT                               External             
                   |----  ABS                                 External             
                   |----  DSIGN                               External             
   
 
3 UFECAL
         INTEGER FUNCTION UFECAL(X_ECAL,ERR_ECAL)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Function to extrapolate the last track fit by uftkal to the ecal
   
             D. Casper 06/06/96
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFECAL                                                               
                   |----  UFDALI                                                   
                   |----  ALFIEL                                                   
                   |----  UF2PNT                                                   
                   |----  SNGL                                External             
                   |----  ATAN2                               External             
                   |----  SIN                                 External             
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  SIGN                                External             
                   |----  AUHCYL                                                   
                   |----  SQRT                                External             
                   |----  UF2XYZ                                                   
                   |----  UCOPY                               External             
   
 
3 UFG2GT
         SUBROUTINE UFG2GT(CF,CW,TW,IE,FP)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Read the ufg2 bank for the double gaussian parameters from dbase or
     data cards, or return defaults if no UFG2 found
     Returns:     CF(R*4)     Fraction of scatters in the core Gaussian
                  CW(R*4)     Width of the core Gaussian,
                              normalized to default = 1
                  TW(R*4)     Width of the tail Gaussian
                  IE(I*4)     If 0, No energy loss, if 1, energy loss by
                              particle,
                  FP(R*4)     Probability cut to filter (remove) a
                              coordinate
     If no UFG2 card, do a single Gaussian, no energy loss or filtering
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFREIN                                                                          
   UF2SCA                                                                          
   UFTFIL                                                                          
        |---- UFG2GT                                                               
                   |----  NAMIND                              External             
                   |----  MDARD                               External             
                   |----  JUNIDB                              External             
                   |----  ALTELL                              External             
                   |----  MIN                                 External             
                   |----  MAX                                 External             
   
 
3 UFGAIN
         SUBROUTINE UFGAIN(V, C, DET, W, GAIN)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculate kalman gain matrix
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFGAIN                                                               
                   |----  DVZERO                                                   
   
 
3 UFGETT
         INTEGER FUNCTION UFGETT(RADIUS, STATE, T_PROC)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculate the process time at a given radius
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFGETT                                                               
                   |----  ABS                                 External             
                   |----  DCOS                                External             
                   |----  DSIN                                External             
                   |----  DATAN                               External             
   
 
3 UFJACO
         INTEGER FUNCTION UFJACO(R_OLD,R_NEW,STATE,DFDX)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Get jacobian of transport from one radius to another
   
    Modified: D.Smith 991025 Double precision fixes for Linux
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFJACO                                                               
                   |----  UTPROC                                                   
                   |----  ABS                                 External             
                   |----  DSIN                                External             
                   |----  DCOS                                External             
                   |----  DTAN                                External             
   
 
3 UFLOSS
         SUBROUTINE UFLOSS(STATE, JACO, MASS, DE)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Integrate continuous energy loss in a thick layer and apply to state
    Modified: D. Casper  990502  To add sanity check on energy loss
    Modified: D.Smith    991025  Double precision fixes for Linux
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFLOSS                                                               
                   |----  DABS                                External             
                   |----  DBLE                                External             
                   |----  DCOS                                External             
                   |----  DSQRT                               External             
                   |----  ABS                                 External             
                   |----  DSIGN                               External             
   
 
3 UFQPRC
         SUBROUTINE UFQPRC(FIELD, INNER, OUTER, DBL_TRK, R_COORD, XY_ARC,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        +                  X_SMOOTH, AT_VTX, MASS,
        +                  Q_PROC, DO_ELOSS_IN, ELOSS)
   Create process noise array and energy loss for kalman filter
   
    Modified: D.Smith 991025 Double precision fixes for Linux
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFQPRC                                                               
                   |----  DVZERO                                                   
                   |----  DSQRT                               External             
                   |----  DBLE                                External             
                   |----  DABS                                External             
                   |----  MAX                                 External             
                   |----  ABS                                 External             
                   |----  DLOG                                External             
                   |----  UFBEBL                                                   
                   |----  UFBERR                                                   
                   |----  UFVDMM                                                   
                   |----  DCOS                                External             
                   |----  DSIN                                External             
                   |----  DTAN                                External             
   
 
3 UFREIN
         SUBROUTINE UFREIN
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Read the ufg2 bank for the double gaussian parameters and initialize
     If no UFG2 bank or card, do a single Gaussian, no energy loss or
     filtering
   
     ENTRY UF2SCA(CF,CW,TW,IE)    sets scattering parameters to user-defined
                                  values
     Parameters:  CF(R*4)         Fraction of scatters in the core Gaussian
                  CW(R*4)         Width of the core Gaussian,
                                  normalized to default = 1
                  TW(R*4)         Width of the tail Gaussian
                  IE(I*4)         If 0, No energy loss, if 1, energy loss by
                                  particle,
   
     ENTRY UFTFIL sets the filtering probability to a user defined value
     *and returns the old value
     Input:       FP(R*4)         Probability cut to filter (remove) a
                                  coordinate (MODIFIED BY CALL)
     Returns:     FP(R*4)         Old probability cut
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFREIN                                                               
                   |----  UFG2GT                                                   
                   |----  MIN                                 External             
                   |----  MAX                                 External             
                   |----  DBLE                                External             
                   |----  CHISIN                              External             
                   |----  ALOG                                External             
   
 
3 UFSCOV
         SUBROUTINE UFSCOV(C_SMTHKP1, C_PREDKP1, C_FILT,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        $       GAIN_SMOOTH, C_SMOOTH, MATDIM)
   Compute the smoothed covariance matrix
    C_SMOOTH = C_FILT + GAIN * (C_SMOOTH(k+1) - C_PRED(k+1)) * GAIN^T
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFSCOV.                                                              
   
 
3 UFSTAT
         INTEGER FUNCTION UFSTAT(R,X_PRED,RES_PRED,GAIN,X_FILT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculate filtered state vector
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFSTAT                                                               
                   |----  UBA2PI                                                   
                   |----  UBAPI2                                                   
                   |----  ABS                                 External             
   
 
3 UFSWMC
         SUBROUTINE UFSWMC(RADIUS, STATE, T_PROC, COV_OLD, MASS, COV_NEW)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Swim covariance matrix through time t and convert to global coords
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFSWMC                                                               
                   |----  UBA2PI                                                   
                   |----  DSIN                                External             
                   |----  ABS                                 External             
                   |----  DCOS                                External             
                   |----  DTAN                                External             
                   |----  DSIGN                               External             
                   |----  DBLE                                External             
                   |----  DSQRT                               External             
                   |----  DABS                                External             
   
 
3 UFSWMS
         SUBROUTINE UFSWMS(C_OLD, Q_PROC, C_NEW)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Add multiple scattering to covariance matrix at origin
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFSWMS.                                                              
   
 
3 UFSWMX
         SUBROUTINE UFSWMX(RADIUS,STATE_OLD,T_PROC,STATE_NEW)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Swim state vector through time t and convert to global coords
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UFSWMX                                                               
                   |----  UBA2PI                                                   
                   |----  DSIN                                External             
                   |----  ABS                                 External             
                   |----  DTAN                                External             
   
 
3 UFTKAL
         INTEGER FUNCTION UFTKAL(FIELD,
  ------------------------------------------------------------------------------
    CKEY KALMAN
  ------------------------------------------------------------------------------
        +                  N_COORD, R_IN, RPHI_IN, Z_IN,
        +                  RPHI_SIG, Z_SIG, RPHI_Z_COR,
        +                  TRK_IN,CHI2_IN,
        +                  TRK_OUT, COV_OUT, CHI2_OUT, N_DOF)
   New and improved kalman filter
     with double Gaussian multiple scattering, energy loss,
     and other goodies.
               - Dave Casper
   
     Modified: 29-oct-1997 D.Casper
       Disable removal of outliers if track has 4 or less remaining 3-D coord.
       Fail if numerical problem would reduce track to exactly 3 hits.
   
    Modified: D.Smith    991025 Double precision fixes for Linux
    Modified: M.Cattaneo 991115 Protect against overflow in REAL*8 to REAL*4
                                conversion, fix line longer than 72 characters
   
     INPUT:  FIELD  = magnetic field strength in kG
             TRK_IN = 5 input track parameters from a preliminary fit
                 1 : 1/R         [1/cm]   neg. if clockwise
                 2 : TAN(LAMBDA) [dZ/dS]  tan(angle to x,y plane)
                 3 : PHI0        [0,2pi]  angle to x-axis
                 4 : D0*SIGN      [cm]    minimal dist. to z-axis,
                                          sign of angular mom. lz
                 5 : Z0           [cm]    z pos at r=d0
             CHI2_IN = chi**2 of preliminary fit
   
             N_COORD     = number of coordinates
   
             R_IN       = array of r- coordinates
             RPHI_IN    = array of r-phi-coordinates
             Z_IN       = array of z-coordinates
             RPHI_SIG   = array of sigma(rphi)**2
             Z_SIG      = array of sigma(z)**2
             RPHI_Z_COR = array of rphi-z correlations
   
     The following parameters are read from the UFG2 CARD:
   
               CORE_FRACT = fraction of scattering in core
               CORE_WIDTH = width of core compared to nominal
               TAIL_WIDTH = width of tail compared to nominal
               FILTER_PROB= probability cut to remove coord
               DO_ELOSS   = 0: No energy loss
                            1: Energy loss by particle hypothesis
                               mass in call, or pion by default.
   
     OUTPUT:   TRK_OUT = 6 final track parameters
                 1 : 1/R          [1/cm]  neg. if clockwise
                 2 : TAN(LAMBDA)  =dz/DS} tan(angle to x,y plane)
                 3 : PHI0        [0,2pi]} angle to x-axis
                 4 : D0*SIGN      [cm]    minimal dist. to z-axis,
                                          sign of angular mom. lz
                 5 : Z0           [cm]    z pos at r=d0
                 6 : ALPHA      [-pi,pi]: scattering angle
                                          at ITC wall (in x-y)
               COV_OUT = covariance matrix in lower triang. form
                        1
                        2  3
                        4  5  6
                        7  8  9 10
                       11 12 13 14 15
                       16 17 18 19 20 21
               CHI2_OUT = chi squared from last kalman filter step
               N_DOF= number of degrees of freedom
   
     NOTE:     fit done for the 5 helix parameters only.
               the angle alpha is computed but elements
               16,...,21 of cov_out are dummy.
   
     MASS HYPOTHESIS FOR FIT
     =======================
   
         ENTRY UFMKAL(FIELD, N_COORD, R_IN, RPHI_IN, Z_IN,
        +                  RPHI_SIG, Z_SIG, RPHI_Z_COR,
        +                  TRK_IN,CHI2_IN, MASS_IN,
        +                  TRK_OUT, COV_OUT, CHI2_OUT, N_DOF)
   
     Identical to calling UFTKAL, except MASS_IN is used as the
     particle mass to determine energy loss.
   
   
     SWIMMING TO TRACK ORIGIN:
     =========================
               CALL UFSWIM( 1 ) ===>  fit errors are given for track
                                      origin from now on
               CALL UFSWIM( 0 ) ===>  fit errors are given at innermost
                                      coordinates from now on
                                      (===> DEFAULT <===)
   
     FILTERING OF BAD COORDINATES:
     ============================
               CALL UFTFIL( FILTER_PROB )
               FILTER_PROB =  probability to throw away a good (!)
                              coordinate when filtering for badies
                              in the first smoother step.
                              if =0, no coordinate filtering will
                              be done.
                              recommended for filtering: 5.e-4
   
     CONSTRAINTS POSSIBLE:
     ====================
               OMEGA :       fixed to OME_FIX by calling UFTOME(1)
                             released by calling UFTOME(0)
   
               TAN(LAMBDA) : fixed to TANL_FIX by calling UFTTAL(1)
                             released by calling UFTTAL(0)
                             if TAN(LAMBDA) is fixed there is no
                             multiple scattering in s-z plane
   
               MOMENTUM :    fixed to P_FIX (>0) by calling
                             UFTMOM(1)
                             released by calling UFTMOM(0)
   
               RADIUS :      energy loss and multiple scattering are
                             restricted to R > RAD_CUT.  This is
                             useful for V0s which decay outside the
                             beampipe, VDET, etc.  RAD_CUT is set
                             by CALL UFTRAD(RAD_MIN).  CALL UFTRAD(0.)
                             afterward!
   
           The values for the constraints are steered via
           COMMON /UFCSTR/ OME_FIX, TANL_FIX, P_FIX, RAD_CUT
   
     SPECIAL MODE FOR EVENT DISPLAY APPLICATIONS:
           CALL   DALINF(1)  to fill  COMMON / INFDAL /
           CALL   DALINF(0)  if smoothed local track parameters
                             are not any longer needed
   
     SPECIAL STEERING INFORMATION FOR VDET PATTERN RECOGNITION
         ENTRY UFVDIN(NVDIN,ISAFVD,ISBEVD)
                 INPUT:
                 NVDIN  : number of vdet coordinates to be used in filter
                 ISAFVD :  .NE. 0 <=> stop after vdet filtering (flag)
                 ISBEVD :  .NE. 0 <=> start before vdet filtering (flag)
         ENTRY UFVDOU(NVDOUT,CHISVD)
                 OUTPUT:
                 NVDOUT : number of vdet measurements surviving filter
                 CHI2VD : chi**2 of fit after vd filtering
   
      KALMAN FILTER ALGORITHM INTERNALS
   
      STATE VECTOR (1,K)  ===>  R*FI       AT R(K)
                   (2,K)  ===>  Z          AT R(K)
                   (3,K)  ===>  PHI        AT R(K)
                   (4,K)  ===>  LAMBDA     AT R(K)
                   (5,K)  ===>  OMEGA      AT R(K)
   
      "TIME"              ===>  PAD ROW RADIUS R(K)
   
      PREDICTED STATE VECTOR  ===>  X_PRED(5,K)
      FILTERED  STATE VECTOR  ===>  X_FILT(5,K)
      SMOOTHED  STATE VECTOR  ===>  X_SMOOTH(5,K)
   
      MEASUREMENT VECTOR      ===>  R_MEAS(2,N)
                R_MEAS(1,K)  ===>  R*FI       AT R(K)
                R_MEAS(2,K)  ===>  Z          AT R(K)
   
      COVARIANCE MATRICES (SYMMETRIC):
        C_PRED(5,5,K)   ===>  PREDICTION INTO ROW K
        C_FILT(5,5,K)   ===>  FILTER IN ROW K
        C_SMOOTH(5,5,K)   ===>  SMOOTHING IN ROW K
   
      PROCESS NOISE MATRIX (WITH ALL CORRELATIONS):
        Q_PROC(5,5,K) ===>  COVARIANCE MATRIX FOR STATE VECTOR
                           FROM MULTIPLE SCATTERING ON THE WAY
                           TO ROW K
   
      MEASUREMENT NOISE MATRIX (DIAGONAL):
        V_MEAS(2,2,K) ===>  COVARIANCE MATRIX FOR MEASUREMENT
                           VECTOR FROM ERRORS IN THE TPC
                           COORDINATES IN ROW K
   
   
     UTILITY ENTRIES FOR TRACKING STUDIES ETC
     ======= ======= === ======== ======= ===
   
       ENTRY UF2RES(RES_TRIM, TRIM_ERR, FIT_TRIM, FIT_ERR)
   
         Returns:
                  RES_TRIM(2,MAX_PTS) (R*4)
                     Coordinate residuals (rphi,z) calculated for each point
                     by excluding that point from the fit.  This
                     removes the bias from measuring coordinate resolution
                     using tracks fitted with the coordinates (since the
                     fit is pulled towards the coordinates, the measured
                     resolution will be smaller than the true resolution
                     otherwise).
                 TRIM_ERR(2,MAX_PTS) (R*4)
                     Calculated error on the fit (omitting the coordinate)
                     at the coordinate.  RES_TRIM is roughly the sum in
                     quadrature of the true resolution and the error in the
                     fitted track position.
                 FIT_TRIM(2,MAX_PTS) (R*4)
                     The r-phi and z position of the track at each coordinate,
                     when the coordinate is excluded from the fit.
                 FIT_ERR(2,MAX_PTS) (R*4)
                     The calculated error on the fit at the coordinate if
                     the coordinate is included.
   
       INTEGER FUNCTION UF2PNT(FIELD, R_PNT, X_PNT, C_PNT)
   
         Input:
                 FIELD (R*4)
                     Magnetic field strength in standard Aleph units.
   
                 R_PNT (R*4)
                     Radius at which the state vector its covariance are
                     desired (user should check that the value of R_PNT is
                     sensible or face unpredictable consequences...)
   
         Returns:
                 X_PNT(5) (R*4)
                     Smoothed state vector at R_PNT.
   
                 C_PNT(21) (R*4)
                     Covariance of X_PNT.
   
                 UF2PNT (I*4)
                     0 if OK; Kalman error code otherwise.
   
   
       INTEGER FUNCTION UF2TRM(ICOORD, TRK_TRIM, COV_TRIM)
   
         Input:
                 ICOORD (I*4)
                     Coordinate at which the track fit and covariance
                     matrix, using all points EXCEPT ICOORD in the fit,
                     is desired.
   
         Output:
                 TRK_TRIM(6) (R*4)
                     Helix parameters at ICOORD, calculated by fitting
                     all other points, expressed in the standard helix
                     form.
   
                 COV_TRIM(21) (R*4)
                     Covariance matrix of TRK_TRIM, in usual triangular
                     form.
   
                 UF2TRM (I*4)
                     Returns zero if OK.
   
       INTEGER FUNCTION UF2TPO(ICOORD, TRK_TRIM, COV_TRIM, POS_TRIM)
   
         Input:  Same as UF2TRM
   
         Output: Same as UF2TRM, plus
                 POS_TRIM(2) (R*4)
                     Returns the rphi and z value at the coordinate requested
   
       INTEGER FUNCTION UF2XYZ(XPOS,EPOS)
   
         Input:  None, but must be called immediately after UF2PNT
   
         Output:
                 XPOS(6) (R*4)
                     The (x,y,z) position and (dx,dy,dz) direction cosines
                     of the track at the last point requested by UF2PNT.
   
                 EPOS(2) (R*4)
                     The error on r-phi and z at the last point requested
                     in a call to UF2PNT.
   
   
       ENTRY UFTRAC(LTRACE)
   
         Input: LTRACE (Logical)
                     Call with value .TRUE. to enable printout of the
                     state vectors on the *next* track fit by UFTKAL.
                     Tracing is automatically disabled on return; there
                     is no need for the user to explicitly disable it.
   
   
     KALMAN FILTER RETURN CODES
     ====== ====== ====== =====
   
         0       = Success
         1       = Invalid B field
         2       = Invalid input track
         3       = Invalid input coordinates
         4       = Unusable input coordinates
         5       = Invalid number of coordinates for VDET patrec
         6       = Too many bad coordinates
         7       = Core determinant is zero
         8       = Ratio of determinants negative
         9       = Transport error during VDET patrec
         10      = Transport error leaving too few coordinates
         11      = Transport error in UFTRAN
         12      = Error calculating Jacobian
         13      = Filtered chi^2 not positive
         14      = Error calculating process time
         15      = # DOF < 1
         16      = Smoothed covariance matrix invalid
         17      = Matrix inversion failed
         18      = Unable to calculate chi^2
         19      = Unable to calculate scattering angle
         20      = Failure to converge
         21      = No used coordinates for UF2PNT
         22      = Chi^2 was above the set limit (see UFCLIM)
         23      = Trimmed state vector not valid
         24      = Error calculating new state in UFSTAT
         25      = Covariance matrix with negative diagonal in UFTKAL
         26      = Covariance matrix with negative diagonal in UF2PNT
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFTKAL                                                               
                   |----  DBLE                                External             
                   |----  ABRUEV                              External             
                   |----  VRLDGT                                                   
                   |----  ALTELL                              External             
                   |----  UFREIN                                                   
                   |----  DASIN                               External             
                   |----  UF2TRK                                                   
                   |----  UF2CRD                                                   
                   |----  WT_RPHI_PT                          External             
                   |----  WT_Z_PT                             External             
                   |----  COR_RPHI_Z_PT                       External             
                   |----  UF2USE                                                   
                   |----  UF2ARC                                                   
                   |----  UFQPRC                                                   
                   |----  DVMOVE                                                   
                   |----  UBAPI                                                    
                   |----  DVZERO                                                   
                   |----  C_PRED                              External             
                   |----  DATAN                               External             
                   |----  DSIGN                               External             
                   |----  UFGAIN                                                   
                   |----  UFCOVA                                                   
                   |----  DTAN                                External             
                   |----  UPCONS                                                   
                   |----  ABS                                 External             
                   |----  UFDISC                                                   
                   |----  DE_DX                               External             
                   |----  UFJACO                                                   
                   |----  DF_DX                               External             
                   |----  UFLOSS                                                   
                   |----  UFMULT                                                   
                   |----  UFMADD                                                   
                   |----  SNGL                                External             
                   |----  UFSWMX                                                   
                   |----  ULOAD                                                    
                   |----  UFGETT                                                   
                   |----  UFSWMC                                                   
                   |----  UFSWMS                                                   
                   |----  Q_PROC                              External             
                   |----  C_SMOOTH                            External             
                   |----  UBAPI2                                                   
                   |----  DSQRT                               External             
                   |----  UFMSCL                                                   
                   |----  DSINV                               External             
                   |----  UFMMLT                                                   
                   |----  UFMMUL                                                   
   
 
3 UFTRAN
         INTEGER FUNCTION UFTRAN(R_OLD, R_NEW, STATE_OLD, T, STATE_NEW)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transport a state vector to a new radius
    Returns process time and new state vector
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFTRAN                                                               
                   |----  UTPROC                                                   
                   |----  DSIN                                External             
                   |----  DCOS                                External             
                   |----  DABS                                External             
                   |----  DATAN2                              External             
                   |----  UBA2PI                                                   
   
 
3 UFTTRA
         INTEGER FUNCTION UFTTRA(ITRAC,FIELD,
  ------------------------------------------------------------------------------
    CKEY COMPUTE FIT
  ------------------------------------------------------------------------------
        +                  VV0IN,CHI2IN,NCOTPC,NCOITC,NCOVD,
        +                  LISTPC,LISITC,LISVD,VV0,CC0,CHI2,NDEG)
   Fitting routine for helices in aleph
                 ===>  INCLUDING MULTIPLE SCATTERING
                 ===>  BASED ON EXTENDED KALMAN FILTERING
                 ===>  CALLS UFTKAL
   
    This is to be used for the final fit of ALEPH tracks,
    including TPC, ITC and VDET.  The preliminary fits are made
    by another program, UFITMS, which is a few times faster but
    does not handle the errors and covariance matrices strictly
    correctly.  This routine takes into account correlations
    between all measuring planes which result from multiple
    scattering.
   
   
       AUTHOR:   T. LOHSE     16-10-89
       Modified: R. Johnson, W. Atwood, to improve use of ITC
                                        coordinates in the fit.
       Modified: J.Sedgbeer 15/01/90 Replace IFCO bank with ICCO
       Modified: B.Mours 11/03/91 Add VDET pattern recon. logic
       Modified: TSM     18/09/91 track ambiguity
       Modified: B.Mours 13/02/92 add chi2 cut on final fit
       Modified: G.Taylor 29/9/92 add itrac arguement and change
                                  name UFTTRK -> UFTTRA
                                  change treatment of multiple
                                  scattering in VDET
       Modified: D.Casper 08/2/96 Remove old VDET patrec code and
                                  pass KF error code as function
                                  value.
   
       INPUT:  ITRAC  = FRFT track number of track being fitted
               FIELD  = Magnetic field strength in kG
               VV0IN  = 5 INPUT TRACK PARAMETERS FROM
                        A PRELIMINARY FIT
                 1 : 1/R         [1/CM]   NEG. IF CLOCKWISE
                 2 : TAN(LAMBDA)  =DZ/DS} TAN(ANGLE TO X,Y PLANE)
                 3 : PHI0        [0,2PI]} ANGLE TO X-AXIS
                 4 : D0*SIGN      [CM]    MINIMAL DIST. TO Z-AXIS,
                                          sign OF ANGULAR MOM. LZ
                 5 : Z0           [CM]    Z POS AT R=D0
               CHI2IN = CHI**2 OF PRELIMINARY FIT
   
               NCOTPC = NUMBER OF TPC COORDINATES
               NCOITC = NUMBER OF ITC COORDINATES
               NCOVD  = NUMBER OF VD  COORDINATES
               LISTPC = COORDINATE NUMBERS IN TPCO
               LISITC = COORDINATE NUMBERS IN ICCO
               LISVD  = COORDINATE NUMBERS IN VDCO
   
     OUTPUT:   VV0 = 6 FINAL TRACK PARAMETERS
                 1 : 1/R          [1/CM]  NEG. IF CLOCKWISE
                 2 : TAN(LAMBDA)  =DZ/DS} TAN(ANGLE TO X,Y PLANE)
                 3 : PHI0        [0,2PI]} ANGLE TO X-AXIS
                 4 : D0*SIGN      [CM]    MINIMAL DIST. TO Z-AXIS,
                                          sign OF ANGULAR MOM. LZ
                 5 : Z0           [CM]    Z POS AT R=D0
                 6 : ALPHA      [-PI,PI]: SCATTERING ANGLE
                                          AT ITC WALL (IN X-Y)
               CC0 = COVARIANCE MATRIX IN LOWER TRIANG. FORM
                        1
                        2  3
                        4  5  6
                        7  8  9 10
                       11 12 13 14 15
                       16 17 18 19 20 21
               CHI2= CHI SQUARED FROM LAST KALMAN FILTER STEP
               NDEG= NUMBER OF DEGREES OF FREEDOM
   
     NOTE:     FIT DONE FOR THE 5 HELIX PARAMETERS ONLY.
               THE ANGLE ALPHA IS COMPUTED BUT ELEMENTS
               16,...,21 OF CC0 ARE DUMMY.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFTTRA                                                               
                   |----  NAMIND                              External             
                   |----  MAX                                 External             
                   |----  IABS                                External             
                   |----  VDMSUP                                                   
                   |----  UCOPY                               External             
   
 
3 UFVDMS
         SUBROUTINE UFVDMS( FIELD, OMEGA, TANL, PHI0, D0, Z0,
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
        &  R_STOP, R_START, QMS )
   
   Get multiple scattering in vdet and beam-pipe in a realistic
    APPROXIMATION FOR THE VDET GEOMETRY
   
       AUTHOR:   T. LOHSE   8.12.1990
                 G. Taylor 23.9.1992
                 - Add option of allowing a more detailed treatment of th
                   multiple scattering in the Vdet to be provided
                   through a VDMS bank 0
                 D. Casper 6.04.1995
                 - Rework for energy loss
                           2.04.1997
                 - Protect against very high incidence angle tracks
   
    Modified: D.Smith 991025 Double precision fixes for Linux
   
       INPUT:  FIELD  =  MAGNETIC FIELD IN KG (SINGLE PRECISION)
                  THE REST IS DOUBLE PRECISION
               OMEGA  =  CURVATURE OF TRACK  (MUST BE .NE. 0)
               TANL   =  TAN(LAMBDA)
               PHI0   =  PHI-ANGLE OF TRACK AT ORIGIN
               D0     =  IMPACT PARAMETER OF TRACK
               Z0     =  Z AT TRACK ORIGIN
               R_STOP =  INNER RADIUS TO GO TO
                         IF NEGATIVE, FIT STOPS AT ABS(R_STOP)
               R_START=  OUTER RADIUS TO START AT
               QMS    =  2*2 MULTIPLE SCATTERING MATRIX AT R_START
       OUTPUT: QMS    ===>  CHANGED TO MULTIPLE SCATTERING MATRIX
                            UP TO R_STOP
   
          ****    EVERYTHING DOUBLE PRECISION    ***
     Entry UFVDMM allows specifying mass of particle
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              UFVDMS                                                               
                   |----  VRLDGT                                                   
                   |----  DABS                                External             
                   |----  DBLE                                External             
                   |----  DSQRT                               External             
                   |----  NLINK                               External             
                   |----  ABS                                 External             
                   |----  MAX                                 External             
                   |----  DLOG                                External             
                   |----  UFBEBL                                                   
                   |----  UFBERR                                                   
                   |----  ALTELL                              External             
   
 
3 ULOAD
         SUBROUTINE ULOAD(DBL_TRK, C_NEW, TRK_OUT, COV_OUT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Convert state vector and covariance matrix to real*4
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- ULOAD                                                                
                   |----  SNGL                                External             
   
 
3 UPCONS
         SUBROUTINE UPCONS(FACT,C)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Apply momentum constraint to filtered covariance matrix
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
        |---- UPCONS.                                                              
   
 
3 UTPROC
         INTEGER FUNCTION UTPROC(R_OLD,R_NEW,STATE,T)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculate change in process time from one radius to another
   
    Modified: D.Smith 991025 Double precision fixes for Linux
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFJACO                                                                          
   UFTRAN                                                                          
        |---- UTPROC                                                               
                   |----  DSIN                                External             
                   |----  DCOS                                External             
                   |----  DSQRT                               External             
                   |----  DATAN                               External             
   

2 KINE

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     KINGAL package
     ! ALEPHLIB 31.4
        KXP6IN : Declare WIDM REAL*4, suppress particle types 52-55 (B.Bloch)
        KWGTBK : New - BOOK and fill bank KWGT with weight info     (B.Bloch)
    
     ! ALEPHLIB 31.3
        KXL74A,KXL7PA,KXLUPA,KXP6IN : Update LEP energy to 220 GeV  (B.Bloch)
    
     ! ALEPHLIB 31.1
        KCLEAN : Add XVRT bank to list of possibly user modified banks (B.Bloch)
        KEJOB  : Add bank KSEC to list of end of run banks             (B.Bloch)
        KSECBK : New - BOOK and fill bank KSEC with cross section info (B.Bloch)
        KXLUPR : New - print out jetset switches and parameters        (B.Bloch)
    
     ! Correction file 6 to ALEPHLIB 30.7
        KP6SHO : New - BOOK and fill bank KSHO with fragmentation info (B.Bloch)
        KSHOBK : New - BOOK and fill bank KSHO with fragmentation info (B.Bloch)
    
     ! Correction file 3 to ALEPHLIB 30.7
        KXP6CO : Fix a WRITE statement               (B.Bloch)
    
     ! Correction file 1 to ALEPHLIB 30.7
        KKMOVE : extend NMX from 100 to 200          (B.Bloch)
        KZFRBK : take booking of bank out of do loop (B.Bloch)
        KP6ZFR,KPYZET,KXP6AL,KXP6BR,KXP6CO,KXP6IN,KXP6ST,KXP6TO,PTY6COM.h :
          c.f. KZFRBK,KLUZET,KXL7AL,KXL7BR,KXL7CO,KXL7PA,KXL7ST,KXL7TO,LUN7COM.h
          New - Kingal interface routines for PYTHIA 6.1        (B.Bloch)
    
     ! ALEPHLIB 30.5
        KBPART : handle properly particles which should be tracked by 
                 GEANT (flr)
    
     ! ALEPHLIB 30.3 correction set 2
        KCLEAN : Allow user to supersede GKBR bank             (B.Bloch)
        KLUZET : New - transfer fragmentation info from JETSET (B.Bloch)
        KXL74A : Extend particle codes from JETSET             (B.Bloch)
        KXL7AL : Handle correctly Tau's from PYTHIA            (B.Bloch)
        KXL7PA : Extend particle codes from JETSET             (B.Bloch)
        KZFRBK : New - book KZFR bank                          (B.Bloch)
    
     ! ALEPHLIB 21.3
       KCLEAN, KINIT, KSWAP, KXL7AL, KXL7BR, KXL7ST, KXLUAL, KXLUBR :
         split character string stretching over two lines 
       KIPARA : increase the number of particles/event for LEP2 generators
       KXL7AL : fix format statement
       KXL7PA : fix maximum energy to 205. Gev compatible with LEP2
       KXL74A : interface routine to JETSET 7.4
    
     ! ALEPHLIB 15.8
       KKDROP,KKMOVE,KSWAP,KCLEAN - service routines to overwrite
                                    reference cards from DB (B.Bloch-Devaux)
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     KAEXA1     Init routine example #1
     KAEXA2     Init routine example #2
     KAEXA3     Init routine example #3
     KATEST     Main program to run kingal in a stand alone mode
     KBKINE     Fill kine bank
     KBKLIN     Book and fill klin bank
     KBPART     Complete the part bank with new particles
     KBVERT     Fill vert bank
     KCLEAN     Clean up data cards from data base overwritten by possible user's
     KEEVT      Kingal end of event
     KEJOB      Kingal end of job
     KFEVBK     Fill event banks kine vert khis
     KGDECL     Generates decay length in cm
     KGPART     Return aleph particle # of user particle # iuser
     KIAVER     Return the alephlib version # and the program origin
     KIBPRS     Compress the banks put on the list 'list', following the
     KIFYNW     Return new format of kine and/or fkin
     KIFYOL     Return old format of kine and/or fkin
     KINIT      Initialize event interface package
     KKDROP     Drops banks from memory if they refer to same kf
     KKMOVE     Move banks from temporary to memory if needed
     KLUZET     Transfer the content of fragmention information  to zb array
     KMKRUN     Modify krun parameters
     KMPART     Complete the part bank with the width and the antiparticle#
     KMRUNH     Modify runh parameters
     KNODEC     Return in the array nodec the user particle# of the part.
     KP6SHO     Book and fill bank ksho with fragmentation info
     KP6ZFR     Book and fill bank kzfr with fragmentation info
     KPYZET     Transfer the content of fragmention information  to zb array
     KSECBK     Book and fill bank ksec with cross section info
     KSHOBK     Book and fill bank ksho with fragmentation info
     KSWAP      Swap cards read from data base to temporary ones
     KWGTBK     Book and fill bank kwgt with weight info
     KXL74A     Fill 'part' bank with lund7 particles
     KXL7AL     Build the event interface lund 7.3-aleph
     KXL7BR     Modify decay scheme inside lund7.3 for requested particles
     KXL7CO     Set lund parameters by data cards
     KXL7PA     Fill 'part' bank with lund7 particles
     KXL7ST     Print decay modes and rates in lund7.3 for requested particle code kf
     KXL7TO     Lund application routine to find lifetime of non-standard particles
     KXLUAL     Build the event interface lund-aleph
     KXLUBR     Modify decay scheme inside lund for requested particles
     KXLUCO     Set lund parameters by data cards
     KXLUPA     Fill 'part' bank with lund particles
     KXLUPR 
     KXLUTO     Lund application routine to find lifetime of non-standard particles
     KXP6AL     Build the event interface pythia 6.1-aleph
     KXP6BR     Modify decay scheme inside pythia 6.1 for requested particles
     KXP6CO     Set lund parameters by data cards
     KXP6IN     Fill 'part' bank with pythia particles
     KXP6ST     Print decay modes and rates in pythia 6.1 for requested particle code kpp
     KXP6TO     Lund application routine to find lifetime of non-standard particles
     KZFRBK     Book bank kzfr with fragmentation info

3 KAEXA1
   
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL EXAMPLE   /USER
  ------------------------------------------------------------------------------
         SUBROUTINE ASKUSI(IGCOD)
          Author : B. Bloch-Devaux sept. 87
   Init routine example #1
       structure : subroutine
       input     : none
       output    : generator code IGCOD as defined in the KINGAL library
    Example of a very simple generator :
    -internal particle numbering is Aleph one
    -no extra particles are needed by the generator
    -no decay was allowed in the generator
   
   
 
3 KAEXA2
   
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL EXAMPLE   /USER
  ------------------------------------------------------------------------------
         SUBROUTINE ASKUSI(IGCOD)
          Author : B. Bloch-Devaux sept. 87
   Init routine example #2
       structure : subroutine
       input     : none
       output    : generator code IGCOD as defined in the KINGAL library
    Example of a more complex generator :
    -internal particle numbering is not Aleph one
    -extra particles are needed by the generator
    -some decay was allowed in the generator
   
   
 
3 KAEXA3
   
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL EXAMPLE   /USER
  ------------------------------------------------------------------------------
         SUBROUTINE ASKUSI(IGCOD)
          Author : B. Bloch-Devaux sept. 87
   Init routine example #3
       structure : subroutine
       input     : none
       output    : generator code IGCOD as defined in the KINGAL library
    Example of a Lundlike   generator :
    -internal particle numbering is not Aleph one
    -extra particles are needed by the generator
    -some decay was allowed in the generator
   
   
 
3 KATEST
   
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL MAIN / INTERNAL
  ------------------------------------------------------------------------------
         PROGRAM KINGAL
   - B. Bloch-Devaux sept. 87                     F.Ranjard - 871116
   Main program to run kingal in a stand alone mode
     The program calls 3 interface routines to be provided by the user
       -ASKUSI    at initialisation step
       -ASKUSE    at event process step
       -USCJOB    at end of job step
     a set of these suboutines follows the PROGRAM KINGAL in this deck
     and can be selected with the historian flag 1.
     This example uses LUND as the user event generator.
     The FORTRAN file can be extracted from the ALEPHLIB using
     Historian:
       $ @HISTOR P=ALE:ALEPHLIB.HLB,C=KINGAL.FOR,Q
         *DF 1
         *E KATEST
         ctrl Z
       $
     In order to extract only the main program, use the historian flag
     KMAIN as below:
       $ @HISTOR P=ALE:ALEPHLIB.HLB,C=KAMAIN.FOR,Q
         *DF 1,KMAIN
         *E KATEST
         ctrl Z
       $
     Other examples can be found in decks KAEXA1, KAEXA2, KAEXA3.
     The code can be accessed using the Historian flags 1.
   
   
 
3 KBKINE
         INTEGER FUNCTION KBKINE (NTR,PXYZM,IPART,NVX)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK /USER   INTERNAL
  ------------------------------------------------------------------------------
   - Y.Kariotakis - 860200    modified by F.Ranjard - 870504
   Fill kine bank
     first connect track# NTR to vertex bank VERT,NR=NVX (enlarge
           VERT,NR=NVX bank if necessary)
           IF the track# NTR is .LE. 0 THEN fill the corresponding
           bank KINE,NR=NTR without connecting the track to any
           vertex
     then  fill KINE,NR=NTR bank (use SBANK to see the content)
           in case the energy is not given compute the energy of the
           particle from its momemtum and its mass found in the particle
           data bank PART.
   - structure : INTEGER FUNCTION subprogram
                 User Entry Names: KBKINE
                 External References: AUBOS(ALEPHLIB), NLINK (BOS77)
                 Comdecks referenced: KIPARA, BCS, BMACRO, RMACRO
   - usage   : JKINE  = KBKINE (NTR,PXYZM,IPART,NVX)
   - input   : PYXZM  = px,py,pz and mass of the track
                        if PXYZM(4)=0. get the mass taken from the PART bank
               IPART  = particle# (row# in PART bank)
               NVX    = vertex origin (VERT bank # of the origin)
               NTR    = track # (KINE bank # to be filled)
   - output  : KBKINE = BOS index of the KINE bank just filled
                        0 means not enough space to book it
                       -1       bank VERT,NR=NVX does not exist
                       -2       not enough space to increase VERT
                       -3       PART bank does not exist
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KFEVBK                                                                          
   KXL7AL                                                                          
   KXLUAL                                                                          
   KXP6AL                                                                          
        |---- KBKINE                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
   
 
3 KBKLIN
         INTEGER FUNCTION KBKLIN (IPART,IUGEN)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK /   INTERNAL
  ------------------------------------------------------------------------------
   - J.Boucrot - F.Ranjard - 870423
   Book and fill klin bank
    the KLIN bank contains the user particle# IUGEN of an ALEPH particle#
    IPART
   - structure : INTEGER FUNCTION subprogram
                 User Entry Names : KBKLIN
                 External References: AUBOS (ALEPHLIB)
                                      BLIST/BKFMT(BOS77)
                 Comdecks referenced: BCS, KIPARA, BMACRO
   - usage:  JKLIN = KBKLIN (IPART,IUGEN)
   - input:  IPART = ALEPH particle# (row# in PART bank)
             IUGEN = user generator particle#
   - output: KBKLIN= index of KLIN bank
                     0  means : PART or KLIN bank missing
                     -N means : cannot extend KLIN after row# N
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7PA                                                                          
   KXLUPA                                                                          
   KXP6IN                                                                          
        |---- KBKLIN                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
   
 
3 KBPART
         INTEGER FUNCTION KBPART (IGEA,NAME,ITRTP,ZMAS,ZCHA,TLIF)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK /   INTERNAL
  ------------------------------------------------------------------------------
   - J.Boucrot - B.Bloch - F.Ranjard - 870424
   Complete the part bank with new particles
    first Get the necessary name-indices and the NOtracking marker word
          from the KRUN bank
    then  IF it is a new particle  THEN
             fill a new row of the PART bank
          ELSE IF it is a particle already known by GEANT THEN
             modify the content of the corresponding row
          END IF
    then  Return the particle row #
   - structure : INTEGER FUNCTION subprogram
                 User Entry Name: KBPART
                 External References: AUBOS/LOCTAB(ALEPHLIB), NAMIND(BOS77
                 Comdeck References: BCS, KIPARA, BMACRO
   - usage : IPART  = KBPART (IGEA,NAME,ITRTP,ZMAS,ZCHA,TLIF)
   - input : IGEA   = Geant#
             NAME   = particle name (at most 12 char.)
             ITRTP  = Geant tracking type
             ZMAS   = particle mass
             ZCHA   = particle charge
             TLIF   = particle time life (if TLIF>1000. then TLIF=1.E+15)
   - output: KBPART = Aleph particle#
                      0 means no PART bank
                      - N means : PART is full with N particles
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7PA                                                                          
   KXLUPA                                                                          
   KXP6IN                                                                          
        |---- KBPART                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  INTCHA                              External             
   
 
3 KBVERT
         INTEGER FUNCTION KBVERT (NVX,VXYZT,NTR)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK / USER  INTERNAL
  ------------------------------------------------------------------------------
   - Y.Kariotakis - 860200    modified by F.Ranjard - 870504
   Fill vert bank
    Book and fill VERT,NR=NVX bank with vertex position and time of
         flight
    Connect vertex# NVX to track# NTR (enlarge KINE,NR=NTR bank if
         necessary)
    Return VERT,NR=NVX bank index
   - structure: INTEGER FUNCTION subprogram
                User Entry Name: KBVERT
                External References: AUBOS(ALEPHLIB), NLINK(BOS77)
                Comdecks referenced: BCS, KIPARA, BMACRO, KMACRO
   - usage   : JVERT  = KBVERT (NVX,VXYZT,NTR)
   - input   : VYXZT  = vx,vy,vz and time of flight
               NTR    = track origin (KINE bank # of the origin)
               NVX    = vertex# (VERT bank # to be filled)
   - output  : KBVERT = BOS index of the VERT bank just filled
                        0 means not enough space to book it
                       -1       bank KINE,NR=NTR does not exist
                       -2       not enough space to increase KINE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KFEVBK                                                                          
        |---- KBVERT                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
   
 
3 KCLEAN
         SUBROUTINE KCLEAN(IOK)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL INIT  /   INTERNAL
  ------------------------------------------------------------------------------
   -  B.Bloch September 92
   Clean up data cards from data base overwritten by possible user's
    cards
      IOK = 0  ok
      IOK = 1  error occured
   
    Banks input to KINGAL are of different types:
     Banks with an explicit NR : MSTJ,PARJ,... for JETSET 7.3
     -------------------------   MSTA,PARA     for ARIADNE
                                 GMAS          for HERWIG
     the last one read in from  user input  wins!
     Banks with no explicit NR : GMOB,GADM,GRPL for JETSET modifications
     --------------------------
     The last one is taken into account but you may copy many arrays
     before getting through.Better drop those which are overwritten
     Banks with no explicit NR : GHVF,GDYM,GMIX....  for HVFL02
     --------------------------  GARI                for Ariadne
                                 GHRW,GGSW,GBDE,GPAR for Herwig
                                 GKOR,GBEA,GTAU,GKBR for Koralz
                                 SVRT,XVRT           for general use
     There should be only one bank with a given name , better drop the
     first one if another has been provided by the user .Rename it to
     NR = 0 , in case the generator makes an explicit link to it instead
     of using NAMIND.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KCLEAN                                                               
                   |----  NAMIND                              External             
                   |----  NDROP                               External             
                   |----  KKDROP                                                   
                   |----  KKMOVEWRITE                         External             
   
 
3 KEEVT
         SUBROUTINE KEEVT (IEVT,ISTAT,NVX,NTRK,WEIT,IDPRO,ECMS,LWRT)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK /  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 870505
   Kingal end of event
     if it is a good event fill the EVEH and KEVH banks and write
     the event on a file if required . Then reset the BOS array (drop
     the event list and garbage collect)
   - structure: SUBROUTINE program
                User Entry Name: KEEVT
                External references: ALEVEH/ALKEVH(ALEPHLIB)
                                     NAMIND/BWRITE/BLIST/BDROP/BGARB(BOS77
                                     RDMOUT(CERNLIB)
                Comdecks referenced: BCS, BMACRO
   - usage   : CALL KEEVT (IEVT,ISTAT,NVX,NTRK,WEIT,IDPRO,ECMS,LWRT)
   - input   : IEVT   = event#
               ISTAT  = status word ( = 1 means OK)
                        the event is written out only if ISTAT=1
               NVX    = # of vertices in the event
               NTRK   = # of tracks in the event
               IDPRO  = event process identification
               WEIT   = event weight
               ECMS   = beam energy in center of mass
               LWRT   = output logical unit ( 0 means do not write)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KEEVT                                                                
                   |----  NAMIND                              External             
                   |----  KIBPRS                                                   
                   |----  ALEVEH                              External             
                   |----  RDMOUT                              External             
                   |----  ALKEVH                                                   
                   |----  BWRITE                              External             
                   |----  BLIST                               External             
                   |----  BDROP                               External             
                   |----  BGARB                               External             
   
 
3 KEJOB
         SUBROUTINE KEJOB (LWRT,MXEVT)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK /  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 870505
   Kingal end of job
     close output file if it exists and print BOS statistics
     B.Bloch   - 9812   add bank KSEC to end of run bank list
   - structure: SUBROUTINE program
                User Entry Name: KEJOB
                External References: ALRUNE/BKENRU/BKENJO(ALEPHLIB)
                                     NAMIND/BWRITE/BOSTA(BOS77)
                Comdecks referenced: BCS, BMACRO
   - usage   : CALL KEJOB (LWRT,MXEVT)
   - input   : LWRT   = output file logical unit
               MXEVT  = # of events in the run
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KEJOB                                                                
                   |----  NAMIND                              External             
                   |----  ALRUNE                              External             
                   |----  BLIST                               External             
                   |----  BWRITE                              External             
                   |----  BOSTA                               External             
   
 
3 KFEVBK
         SUBROUTINE KFEVBK (VMAIN,RPARA,IPARA,MTRAK,ISTAT)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK /  INTERNAL
  ------------------------------------------------------------------------------
   - J.Boucrot - B.Bloch - F.Ranjard - 870515
   Fill event banks kine vert khis
    first KINE and VERT banks are booked and filled with parameters
          sent as arguments (all vertices at the same position).
    then  depending on the decay length of secondary particles , the
          secondary vertices are displaced from the main vertex . The
          propagation follows a straight line for neutral generating a
          secondary vertec, and a simple helix for charged particles.
          In case of charge particles generating a secondary vertex,
          swim Px and Py of all secondaries up to decay vertex. Then
          store the time of flight.
          The magnetic field is assumed to be 15.0 Kgauss.
   - structure: SUBROUTINE subprogram
                User Entry Name: KFEVBK
                External References: KBVERT/KBKINE/KGPART/KGDECL(ALEPHLIB)
                Comdecks referenced: BCS, ALCONS, KIPARA, BMACRO, KMACRO
   - Usage   : CALL KFEVBK (VMAIN,RPARA,IPARA,MTRAK,ISTAT)
   - Input   : VMAIN          = vx,vy,vz of the main vertex
               RPARA (1-4,k)  = px,py,pz,(mass) of track(k)
                                if RPARA(4,k)=0. then the mass is taken
                                from the PART bank.
               IPARA (1,k)    = vertex# of the origin of the track(k)
                     (2,k)    = vertex# of the decay of the track(k)
                                  0 if there is no decay
                     (3,k)    = ALEPH particle#
               MTRAK          = # of tracks
               ISTAT          = return code  ( 0 means OK)
                                -1 means too many particles
                                -2 means wrong KINE/VERT booking
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL7AL                                                                          
   KXLUAL                                                                          
   KXP6AL                                                                          
        |---- KFEVBK                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  ABS                                 External             
                   |----  NAMIND                              External             
                   |----  KBVERT                                                   
                   |----  KBKINE                                                   
                   |----  KGDECL                                                   
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 KGDECL
         REAL FUNCTION KGDECL(P,AM,T0)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL DECAY /  INTERNAL
  ------------------------------------------------------------------------------
   Generates decay length in cm
        B.Bloch-Devaux        september 86
   - structure: REAL FUNCTION subprogram
                User Entry Name: KBDECL
                External References: RNDM(CERNLIB)
                Comdeck referenced: ALCONS
   - Usage   : DECL = KGDECL (P,AM,T0)
   - Input   : P      = momentum of the particle
               AM     = particle mass
               T0     = particle life time
   - Output  : KGDECL = decay length in cm
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KFEVBK                                                                          
        |---- KGDECL                                                               
                   |----  RNDM                                External             
                   |----  ALOG                                External             
   
 
3 KGPART
          INTEGER FUNCTION KGPART (IUSER)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL PART /  USER INTERNAL
  ------------------------------------------------------------------------------
   - J.Boucrot - F.Ranjard - 870516
   Return aleph particle # of user particle # iuser
   - structure: INTEGER FUNCTION subprogram
                User Entry Name: KGPART
                External References: NAMIND(BOS77)
                                     IUCOMP(CERNLIB)
                Comdecks referenced: BCS, BMACRO
   - usage   : IPART = KGPART (IUSER)
   - input   : IUSER = user generator particle #
   - Output  : KGPART = ALEPH#
                        0 if not found
                        -1 if KLIN bank not there
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7AL                                                                          
   KXL7CO                                                                          
   KXL7PA                                                                          
   KXLUAL                                                                          
   KXLUPA                                                                          
   KXP6AL                                                                          
   KXP6CO                                                                          
        |---- KGPART                                                               
                   |----  NAMIND                              External             
                   |----  IUCOMP                              External             
   
 
3 KIAVER
         SUBROUTINE KIAVER (AVER,IPROG)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL VERSION  /  USER INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 890201
   Return the alephlib version # and the program origin
    Return the ALEPHLIB version # used during KINGAL processing.
    if no KINGAL processing return the ALEPHLIB version# used during
    GALEPH processing.
   - structure: SUBROUTINE subprogram
                User Entry Name: KIAVER
                External References: NAMIND(BOS77)
                Comdecks referenced: BCS, KGJJPAR, AJJPAR, BMACRO
                Banks referenced: KJOB, AJOB
   - usage    : CALL KIAVER (AVER,IPROG)
   - output   : AVER  = ALEPHLIB version # used during the 1st step
                        of the generation.
                        0. means not a montecarlo file
                IPROG = 1 means KINGAL generation
                        2       GALEPH generation
                        0       not a montecarlo file
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KIFYNW                                                                          
   KIFYOL                                                                          
   EBSATU                                                                          
   PRDTMC                                                                          
   PRFKIN                                                                          
   PRKINE                                                                          
        |---- KIAVER                                                               
                   |----  NAMIND                              External             
                   |----  REAL                                External             
   
 
3 KIBPRS
         SUBROUTINE KIBPRS (LIST)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL BANK COMPRESS  /   INTERNAL
  ------------------------------------------------------------------------------
   - F.RANJARD - 860307
   Compress the banks put on the list 'list', following the
     convention : bank length = 1st word + 2nd word + 3rd word
     the 1st word is the header length : LHD=3
     if LHD .ne. 3 then the routine do nothing
     if LHD .eq. 3 then the bank length is reduced to:
             LEN = LHD + 2nd word + 3rd word
     this routine is forseen to reduce the length of VERT and
     KINE banks.
   - structure : SUBROUTINE subprogram
                 User Entry Name: KIBPRS
                 External References: NAMIND/NBANK/NLIST(BOS77)
                 Comdecks refenced: BCS
   - usage   : CALL KIBPRS (LIST)
   - input   : LIST  = list of bank names (should be 'VERTKINE')
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KEEVT                                                                           
        |---- KIBPRS                                                               
                   |----  NLIST                               External             
                   |----  NAMIND                              External             
                   |----  NBANK                               External             
   
 
3 KIFYNW
         SUBROUTINE KIFYNW
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL BANK FORMAT  / USER  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 890202
   Return new format of kine and/or fkin
    bank KINE and/or FKIN is modified in place :
    KINE : word(4) will contain the mass of the track defined by KINE
    FKIN : word(4) will contain the mass of the track defined by KINE
    the routine can be called for any file (old or new format) :
    a test is made on the creation date to determine the format.
    the routine must be called before using the KINE/FKIN bank in order
    to use the same code for old an new format.
   - structure: SUBROUTINE subprogram
                User Entry Name: KIFYNW
                External References: NAMIND/NLINK(BOS77)
                                     KIAVER(ALEPHLIB)
                Comdecks referenced: BCS, BMACRO, KMACRO, FKINJJ
                Banks referenced: NAME
   - usage    : CALL KIFYNW
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KIFYNW                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  KIAVER                                                   
   
 
3 KIFYOL
         SUBROUTINE KIFYOL
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL BANK FORMAT  / USER  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 890202
   Return old format of kine and/or fkin
    bank KINE and/or FKIN is modified in place :
    KINE : word(4) will contain the energy of the track defined by KINE
    FKIN : word(4) will contain the energy of the track defined by KINE
    the routine can be called for any file (old or new format) :
    a test is made on the creation date to determine the format.
    the routine must be called before using the KINE/FKIN bank in order
    to use the same code for old an new format.
   - structure: SUBROUTINE subprogram
                User Entry Name: KIFYOL
                External References: NAMIND/NLINK(BOS77)
                                     KIAVER(ALEPHLIB)
                Comdecks referenced: BCS, FKINJJ, BMACRO, KMACRO
                Banks referenced: KINE, FKIN, PART
   - usage    : CALL KIFYOL
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KIFYOL                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  KIAVER                                                   
   
 
3 KINIT
         SUBROUTINE KINIT (LBCS,LBASE,LCARD,LOUT,LWRT,FMT)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL INIT  /   INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 870504    modified 870924 B.Bloch for Data Base
   - Modified JULY88 B.Bloch for Data Base access and KJOB Bank
   Initialize event interface package
    MUST be called by the user once per job
    can be called a 2nd times if the user has modified some parameters
    by data cards.
    if 1st entry then
       initialize the BOS array with LBCS words
       if LCARD.ne.0 then read data cards and RETURN
    endif
    if 1st entry and LCARD.eq.0  or  if 2nd entry and LCARD.ne.0  then
       read the data base from LBASE unit to get PART bank
       stop if no PART bank
       if LOUT.ne.0 then set BOS output unit = LOUT
       if LWRT.ne.0 then initialize BOS writing unit LWRT
       book and fill RUNH and KRUN banks with default values
    endif
    if 3rd entry then STOP
   - structure: SUBROUTINE subprogram
                User Entry Name: KINIT
                External References: BOS/BKFMT/BLIST/BREADC/BUNIT(BOS77)
                                     ACDARG/AFILOU/AOPDBS/AOPEN/AOPENW/
                                     ADBVER/JUNIDB/
                                     BKINJB/
                                     ALRUNH/ALKRUN/ALKJOB(ALEPHLIB)
                Comdecks referenced: BCS, KIPARA,BMACRO
   - usage  : CALL KINIT (LBCS,LBASE,LCARD,LOUT,LWRT,FMT)
   - Input  : LBCS   = BOS array length (at least 10000 words)
              LBASE  = data base logical unit (not used)
              LCARD  = data card log. unit ( 0 means no data card)
              LOUT   = print out unit      ( 0 means no printout)
              LWRT   = output file unit    ( 0 means no output file)
              FMT    = output file format    ( 'EPIO' or ' '='NATI')
              LOUT, LWRT, FMT could be overwritten by data card
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KINIT                                                                
                   |----  BOS                                 External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  ALVERS                                                   
                   |----  BREADC                              External             
                   |----  NAMIND                              External             
                   |----  AFILOU                              External             
                   |----  EXIT                                External             
                   |----  AOPENW                              External             
                   |----  BUNIT                               External             
                   |----  JUNIDB                              External             
                   |----  AOPDBS                              External             
                   |----  ADBVER                              External             
                   |----  MDARD                               External             
                   |----  IREDBFORMAT                         External             
                   |----  ALRUNR                              External             
                   |----  ALRUNH                              External             
                   |----  ALKRUN                                                   
                   |----  ALKJOB                                                   
                   |----  EXITRETURN                          External             
   
 
3 KKDROP
         SUBROUTINE KKDROP( NAME , KF)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL INIT  /   INTERNAL
  ------------------------------------------------------------------------------
   -  B.Bloch September 92
   Drops banks from memory if they refer to same kf
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KCLEAN                                                                          
        |---- KKDROP                                                               
                   |----  NAMIND                              External             
                   |----  NDROP                               External             
   
 
3 KKMOVE
         SUBROUTINE KKMOVE
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL INIT  /   INTERNAL
  ------------------------------------------------------------------------------
   -  B.Bloch September 92
   Move banks from temporary to memory if needed
      Modified December 97 : extend NMX from 100 to 200
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KKMOVE                                                               
                   |----  NAMIND                              External             
                   |----  NSWAP                               External             
                   |----  BDROP                               External             
                   |----  EXITRETURN                          External             
   
 
3 KLUZET
         SUBROUTINE KLUZET(ZB)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transfer the content of fragmention information  to zb array
      B.Bloch-Devaux January   1991
       comdecks referenced : LUN7COM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KZFRBK                                                                          
        |---- KLUZET.                                                              
   
 
3 KMKRUN
         INTEGER FUNCTION KMKRUN (IUCOD,NOTRK,TITLE)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK   /  USER  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 870604
   Modify krun parameters
    KRUN bank has been filled in ALKRUN with default parameters
    which can be overwritten calling this subroutine
    first Drop KRUN bank, then recreate it
   - structure : INTEGER FUNCTION subprogram
                 User Entry Name: KMKRUN
                 External References: BDROP(BOS77)
                 Comdecks referenced: BCS
   - usage    : JKRUN = KMKRUN (IUCOD,NOTRK,TITLE)
   - input    : IUCOD = user generator code
                NOTRK = NOtracking marker word
                TITLE = user run title
   - output   : KMKRUN= KRUN bank index
                        0 means KRUN does not exist
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KMKRUN                                                               
                   |----  BDROP                               External             
                   |----  ALKRUN                                                   
   
 
3 KMPART
         INTEGER FUNCTION KMPART (IPART,WIDTH,IANTI)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL PART FORMAT  /  USER  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 890203
   Complete the part bank with the width and the antiparticle#
    first Get the necessary name-indices and check that the # of
    columns of the PART bank is .ge. 10
    then  IF the particle exists THEN
             fill word(9) and word(10) of the given particle
          ELSE
             RETURN
          END IF
    then  Return the particle row # or 0
   - structure : INTEGER FUNCTION subprogram
                 User Entry Name: KBPART
                 External References: NAMIND(BOS77)
                 Comdeck References: BCS, BMACRO, PARTJJ
   - usage : IRETU  = KMPART (IPART,WIDTH,IANTI)
   - input : IPART  = Aleph particle# (row# in PART bank).
             WIDTH  = Mass width (or 0.)
             IANTI  = row# of the antiparticle
   - output: KMPART = Aleph particle#
                      0 means no PART bank
                     -1       PART bank has not enough columns
                     -2       Aleph particle does not exist
                     -3       antiparticle does not exist
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7PA                                                                          
   KXLUPA                                                                          
   KXP6IN                                                                          
        |---- KMPART                                                               
                   |----  NAMIND                              External             
   
 
3 KMRUNH
         INTEGER FUNCTION KMRUNH (NRUN,NEXPE,IRTYP)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL FILL BANK   /  USER  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard - 870604
   Modify runh parameters
    RUNH bank has been filled in ALRUNH with default parameters
    which can be overwritten calling this subroutine
    first Drop RUNR and RUNH banks, then recreate them
   - structure : INTEGER FUNCTION subprogram
                 User Entry Name: KMRUNH
                 External References: BDROP(BOS77)
                 Comdecks referenced: BCS
   - usage    : JRUNH = KMRUNH (NRUN,NEXPE,IRTYP)
   - input    : NRUN  = run #
                NEXPE = experiment #
                IRTYP = run type
   - output   : KMRUNH= RUNH bank index
                        0 means RUNH or RUNR does not exist
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KMRUNH                                                               
                   |----  BDROP                               External             
                   |----  ALRUNH                              External             
                   |----  ALRUNR                              External             
   
 
3 KNODEC
         INTEGER FUNCTION KNODEC (NODEC,LPDEC)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL DECAY       /  USER  INTERNAL
  ------------------------------------------------------------------------------
   - F.Ranjard -870423                    modified - 880831
   - B.Bloch                              modified - 920507
   Return in the array nodec the user particle# of the part.
    which have not to be decayed by the generator.
    particles with time of life < 1.E-15 are still decayed by
    the generator.
    If a card KTMX exists , the life time is taken from the Data card
    and supersedes the 1.E-15 value
    they are KNODEC such particles
    IF the bank KLIN does not exist THEN
      KNODEC = - the # of nodecay particles
    LPDEC is the dimension of the array NODEC
    if KNODEC .gt. LPDEC it means that the buffer is too small
   - structure: INTEGER FUNCTION subprogram
                User Entry Name: KNODEC
                External References: NAMIND(BOS77)
                Comdecks referenced: BCS, KIPARA, BMACRO
   - usage  : MXDEC = KNODEC (NODEC,LPDEC)
   - input  : NODEC = array to contain user generator particle #
              LPDEC = length of the NODEC array
   - output : KNODEC= # of particles which should not be decayed
                      by the generator (the #s of the 1st LPDEC
                      are stored in NODEC)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KNODEC                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
   
 
3 KP6SHO
         integer function KP6SHO(ISH,ISHO,IP1,IP2,ICR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Book and fill bank ksho with fragmentation info
        B. Bloch -Devaux November 1997
       structure : integer function
       input     : ISH  index of shower in event (1,2,...)
                   ISHO current line number of shower  in LUJETS common
                   IP1  current line number of parton1 in LUJETS common
                   IP2  current line number of parton2 in LUJETS common
                   ICR  Color reconnection flag I= CR happened in scheme I
                                                0= No CR happened
       output    : index of KSHO bank ( should be >0 if OK)
                   KSHO bank is written to Event list
       comdecks referenced : LUN7COM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KP6SHO                                                               
                   |----  ABS                                 External             
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
   
 
3 KP6ZFR
         subroutine KP6ZFR(IST)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Book and fill bank kzfr with fragmentation info
        B. Bloch -Devaux November 1998 for PYTHIA 6.1
       structure : subroutine
       input     : none
       output    : IST status flag ( 0 means ok)
       comdecks referenced : PYT6COM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KP6ZFR                                                               
                   |----  VZERO                               External             
                   |----  KPYZET                                                   
                   |----  ABS                                 External             
                   |----  ALTABL                              External             
   
 
3 KPYZET
         SUBROUTINE KPYZET(ZB)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transfer the content of fragmention information  to zb array
      B.Bloch-Devaux January   1998 for Pythia 6.1
       comdecks referenced : PYT6COM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KP6ZFR                                                                          
        |---- KPYZET.                                                              
   
 
3 KSECBK
         integer function KSECBK(IS,IDC,IVER,NTOT,NACC,XTOT,RTOT,XACC,RACC)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Book and fill bank ksec with cross section info
        B. Bloch -Devaux December 1998
       structure : integer function
       input     : IS   index of cross-section to be stored
                   IDC  generator id
                   IVER generator version
                   NTOT generated events
                   NACC accepted events
                   XTOT generated cross-section (nb)
                   RTOT generated cross-section error (nb)
                   XACC accepted cross-section (nb)
                   RACC accepted cross-section error (nb)
       output    : index of KSEC bank ( should be >0 if OK)
                   KSEC bank is written to Run Header list
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KSECBK                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
   
 
3 KSHOBK
         integer function KSHOBK(ISH,ISHO,IP1,IP2,ICR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Book and fill bank ksho with fragmentation info
        B. Bloch -Devaux November 1997
       structure : integer function
       input     : ISH  index of shower in event (1,2,...)
                   ISHO current line number of shower  in LUJETS common
                   IP1  current line number of parton1 in LUJETS common
                   IP2  current line number of parton2 in LUJETS common
                   ICR  Color reconnection flag I= CR happened in scheme I
                                                0= No CR happened
       output    : index of KSHO bank ( should be >0 if OK)
                   KSHO bank is written to Event list
       comdecks referenced : LUN7COM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KSHOBK                                                               
                   |----  ABS                                 External             
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
   
 
3 KSWAP
         SUBROUTINE KSWAP
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL INIT  /   INTERNAL
  ------------------------------------------------------------------------------
   -  B.Bloch September 92
   Swap cards read from data base to temporary ones
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KSWAP                                                                
                   |----  BSWAP                               External             
   
 
3 KWGTBK
         integer function KWGTBK(IS,IWEI,wei)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Book and fill bank kwgt with weight info
        B. Bloch -Devaux January 1999
       structure : integer function
       input     : IS   row number to be filled
                   IWEI weight number to be stored
                   WEI  weight value  to be stored
       output    : index of KWGT bank ( should be >0 if OK)
                   KWGT bank is written to Event list
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KWGTBK                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
   
 
3 KXL74A
          SUBROUTINE KXL74A (IPART,JKLIN)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 PART  /  USER
  ------------------------------------------------------------------------------
   - B.Bloch - March 94 adapted to JETSET 7.4 from KXL7PA (JETSET 7.3 )
   Fill 'part' bank with lund7 particles
    Create the KLUN bank with version and date of JETSET library
    Get  the NOtracking marker word NOTRK from KRUN bank
    Fill KLIN bank with LUND particle# which correspond
         to GEANT particles ( or ALEPH particles)
    Fill Antilambda C when necessary
    Get  LUND particles and transfer them to PART bank
         if they can be produced at LEP energies,
         update Lep energy to 220. GeV B.Bloch Oct 99
         with a GEANT# and a tracking type set to NOTRK
         because they are not used by GEANT.
    Reduce PART and KLIN banks to their normal size
    Make sure Jetset uses ALEPH values for masses and life times
   - structure: SUBROUTINE subprogram
                User Entry Name: KXL74A
                External References: NAMIND(BOS77)
                                     KGPART/KBKLIN/KBPART/KXL7TO/KMPART
                                     ADBVER/ALKLUN/PRTABL/KXL7CO/AUBPRS
                                     (ALEPHLIB)
                                     LUCHGE/ULMASS/LUNAME/LUCOMP(JETSET)
                                     IUCOMP(CERNLIB)
                Comdecks referenced: BCS, BMACRO,KMACRO
   - Usage    : CALL KXL74A (IPART,JKLIN)
   - Output   : IPART   = KBPART return flag
                          .gt. 0 means OK
                JKLIN   = KBKLIN return flag
                          .gt. 0 means OK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXL74A                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  ADBVER                              External             
                   |----  MOD                                 External             
                   |----  ALKLUN                                                   
                   |----  EXIT                                External             
                   |----  PRTABL                                                   
                   |----  KBKLIN                                                   
                   |----  KGPART                                                   
                   |----  LUCHGE                              External             
                   |----  ULMASS                              External             
                   |----  LUNAME                              External             
                   |----  KBPART                                                   
                   |----  KMPART                                                   
                   |----  KXL7CO                                                   
                   |----  IUCOMP                              External             
                   |----  KXL7TO                                                   
                   |----  MAX                                 External             
                   |----  LUCOMP                              External             
                   |----  AUBPRS                              External             
                   |----  IABS                                External             
   
 
3 KXL7AL
         SUBROUTINE KXL7AL (VMAIN,ISTAT,MVX,MTRK)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND FILL   /  USER
  ------------------------------------------------------------------------------
   - B.Bloch-Devaux - J.Boucrot - F.Ranjard - 870516
   - Modified for Jetset 7.3 T.Medcalf - 900802
                             B.Bloch   - 900930
     fixes for PYTHIA history            970420
   Build the event interface lund 7.3-aleph
   - Fill    : PTRAK(ix,n)  = px,py,pz,mass of track(n)
                              if mass=0. it will be filled by the system
               IPVNU(1,n)   = origin vertex # of track(n)
                    (2,n)   = decay vertex # of track(n)
                               0 if no decay
                    (3,n)   = ALEPH particle #
               IPCOD(n)     = LUND history code of track(n)
   - Book    : KHIS bank filled with IPCOD(n)
   - Call    : KFEVBK (VMAIN,PTRAK,IPVNU,MTRK,JSTAT)
               to book and propagate the decay and fill VERT and KINE
   - structure: SUBROUTINE subprogram
                User Entry Name: KXL7AL
                External Regerences: NAMIND(BOS77)
                                    ALTABL/KFEVBK/KGPART/KBKINE(ALEPHLIB)
                Comdecks referenced: BCS, LUN7COM, ALCONS, KIPARA,BMACRO
                                     KMACRO
   - usage   : CALL KXL7AL (VMAIN,ISTAT,MVX,MTRK)
   - Input   : VMAIN = vx,vy,vz,tof of the primary vertex
   - Output  : ISTAT = status word ( = 0 means OK)
                       - 1 means VERT or KINE bank missing
                       - 2 means not enough space for VERT or KINE
                       - 3 means too many tracks
                       - 4 electrons beams not stored as lines 1 and 2
                       - 5 means Lund status code larger than 30 found
                       > 0 means unknown LUND particle# ABS(ISTAT)
               MVX   = # of vertices
               MTRK  = # of tracks to be propagated ( no beam electrons )
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXL7AL                                                               
                   |----  ABS                                 External             
                   |----  K7LU                                External             
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  KGPART                                                   
                   |----  LUCOMP                              External             
                   |----  KBKINE                                                   
                   |----  KFEVBK                                                   
                   |----  ALTABL                              External             
   
 
3 KXL7BR
         SUBROUTINE KXL7BR
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 DECAY  /  INTERNAL
  ------------------------------------------------------------------------------
            B.Bloch-Devaux -910125
   Modify decay scheme inside lund7.3 for requested particles
    Bos data cards are used with the following convention:
    GADM : define new decay channel for given particle in LUND
    GRPL : replace a final state by another one
    GMOB : defines the branching ratios of a LUND particle
    GADM KF MXEL KDP1 KDP2 KDP3 KDP4  KDP5
         KF Refers to the Lund7 particle code
         MXEL is the matrix element to be used for that decay
         KDP1-KDP5 Refer to the lund7 code of the 5 particles final state
          to be added at the end of the list of decay modes.
         (if less than 5 particles needed, fill others with 0  )
          include matrix element code in MXEL, if MXEL=101  5 more
          positions can be filled for the same decay chain
    GRPL KF  II  MSWI  MXEL KDP1 KDP2 KDP3 KDP4  KDP5
         KF Refers to the Lund particle code
         II Refers to the decay mode number in the list for particle KF
         MSWI is the switch to be used for that decay ( 0,-1,1,....5)
         MXEL is the matrix element to be used for that decay
         KDP1-KDP5 Refer to the lund code of the 5 particles final state
         (if less than 5 particles needed, fill others with 0  )
    GMOB KF  BR(1)..................BR(n)
         KF Refers to the Lund particle code
         BR(1)...BR(n) are the non-cumulated branching fractions
         of the n decay modes defined for particle KF
    you may have as many GADM as you want as long as you do not overfill
    the LUDAT3 array (dimension 2000)otherwise an error message is issued
    and the process is stopped.
    NOTE: all GADM cards with the same KF must follow each other !!
   ------
    GRPL cards are treated in sequence as they appear.
    GMOB cards should define as many Branching fractions as decay modes
    including those added through GADM cards.If not, a message is issued
    and no modification is done.When modified a printout of the resulting
    decay modes and branching ratios for the particle is issued.
   - structure : SUBROUTINE
                 User entry name :KXL7BR
                 External references:NAMIND/BKFMT/BLIST(BOS77)
                                     KXL7ST( this library)
                                     LUCOMP(JETSET7.3)
                 Comdecks refenced :BCS,LUN7COM
   - usage : CALL KXL7BR
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL7CO                                                                          
        |---- KXL7BR                                                               
                   |----  NAMIND                              External             
                   |----  LUCOMP                              External             
                   |----  KFDP                                External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  KXL7ST                                                   
   
 
3 KXL7CO
         SUBROUTINE KXL7CO(LUPAR)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 DECAY  /  USER INTERNAL
  ------------------------------------------------------------------------------
   - Modified for Jetset 7.3 T.Medcalf - 900802
                             B.Bloch   - 900926
   Set lund parameters by data cards
    Every LUND parameter is a BOS data card keyword,the index of the
    parameter is the bank number.
    the list of keywords with their format is given below:
   'MSTU'(I),'PARU'(F),'MSTJ'(I),'PARJ'(F),
   'KCH1'(I),'KCH2'(I),'KCH3'(I),'PMA1'(F),'PMA2'(F),'PMA3'(F),
   'PMA4'(F),'PARF'(F),
   'MDC1'(I),'MDC2'(I),'MDC3'(I),'MDM1'(I),'MDM2'(I),'BRAT'(F),
   'KFD1'(I),'KFD2'(I),'KFD3'(I),'KFD4'(I),'KFD5'(I)
      KEY  i  /  ival     ====>  KEY(i)=ival
      RKEY i  /  value    ====>  RKEY(i)=value
   - structure: SUBROUTINE subprogram
                User Entry Name: KXL7CO
                External References: NAMIND/BKFMT/BLIST(BOS77)
                                     KXL7BR (this Lib)
                Comdecks referenced: BCS,LUNDCOM
   - usage    : CALL KXL7CO(LUPAR)
   - input    : LUPAR=No. of read data cards
   
     Note that, if a particle mass (PMA1), width (PMA2) or life-time (PMA
    is modified, the PART bank entry is changed accordingly.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7PA                                                                          
        |---- KXL7CO                                                               
                   |----  NAMIND                              External             
                   |----  LUCOMP                              External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  KGPART                                                   
                   |----  KXL7BR                                                   
   
 
3 KXL7PA
          SUBROUTINE KXL7PA (IPART,JKLIN)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 PART  /  USER
  ------------------------------------------------------------------------------
   - B.Bloch - 870300      modified by F.Ranjard - 870423
   -modified by B.Bloch 890510 for new PART bank
   -Modified for Jetset 7.3 T.Medcalf  900802
                            B.Bloch 900926,910110,910923
   Fill 'part' bank with lund7 particles
    Create the KLUN bank with version and date of JETSET library
    Get  the NOtracking marker word NOTRK from KRUN bank
    Fill KLIN bank with LUND particle# which correspond
         to GEANT particles ( or ALEPH particles)
    Fill Antilambda C when necessary
    Get  LUND particles and transfer them to PART bank
         if they can be produced at LEP energies,
         updated Energy to 220. GeV B.Bloch Oct 99
         with a GEANT# and a tracking type set to NOTRK
         because they are not used by GEANT.
    Reduce PART and KLIN banks to their normal size
    Make sure Jetset uses ALEPH values for masses and life times
   - structure: SUBROUTINE subprogram
                User Entry Name: KXL7PA
                External References: NAMIND(BOS77)
                                     KGPART/KBKLIN/KBPART/KXL7TO/KMPART
                                     ADBVER/ALKLUN/PRTABL/KXL7CO/AUBPRS
                                     (ALEPHLIB)
                                     LUCHGE/ULMASS/LUNAME/LUCOMP(JETSET)
                                     IUCOMP(CERNLIB)
                Comdecks referenced: BCS, BMACRO,KMACRO
   - Usage    : CALL KXL7PA (IPART,JKLIN)
   - Output   : IPART   = KBPART return flag
                          .gt. 0 means OK
                JKLIN   = KBKLIN return flag
                          .gt. 0 means OK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXL7PA                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  ADBVER                              External             
                   |----  MOD                                 External             
                   |----  ALKLUN                                                   
                   |----  EXIT                                External             
                   |----  PRTABL                                                   
                   |----  KBKLIN                                                   
                   |----  KGPART                                                   
                   |----  LUCHGE                              External             
                   |----  ULMASS                              External             
                   |----  LUNAME                              External             
                   |----  KBPART                                                   
                   |----  KMPART                                                   
                   |----  KXL7CO                                                   
                   |----  IUCOMP                              External             
                   |----  KXL7TO                                                   
                   |----  LUCOMP                              External             
                   |----  AUBPRS                              External             
                   |----  IABS                                External             
   
 
3 KXL7ST
         SUBROUTINE KXL7ST(KF)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 DECAY  /  INTERNAL   USER
  ------------------------------------------------------------------------------
            B.Bloch-Devaux -901106
   Print decay modes and rates in lund7.3 for requested particle code kf
   - structure : SUBROUTINE
                 User entry name :KXL7ST
                 External references:LUCOMP/LUNAME/ULMAS(JETSET7.3)
                 Comdecks refenced :LUN7COM
   - usage : CALL KXL7ST(KF)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL7BR                                                                          
        |---- KXL7ST                                                               
                   |----  LUCOMP                              External             
                   |----  LUNAME                              External             
                   |----  ULMASS                              External             
                   |----  KFDP                                External             
   
 
3 KXL7TO
           SUBROUTINE KXL7TO(KLUN,TLIF)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 LIFETIME /   INTERNAL
  ------------------------------------------------------------------------------
    26,1990 B. Bloch for Lund 7.3
   Lund application routine to find lifetime of non-standard particles
                      Modified 910923
   - input   :  KLUN = LUND particle code
   - output  :  TLIF = particle lifetime ( in seconds )
    only for particles not defined in the ALEPH database
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7PA                                                                          
        |---- KXL7TO                                                               
                   |----  IABS                                External             
                   |----  MOD                                 External             
   
 
3 KXLUAL
         SUBROUTINE KXLUAL (VMAIN,ISTAT,MVX,MTRK)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND FILL   /  USER
  ------------------------------------------------------------------------------
   - B.Bloch-Devaux - J.Boucrot - F.Ranjard - 870516
   Build the event interface lund-aleph
   - Fill    : PTRAK(ix,n)  = px,py,pz,mass of track(n)
                              if mass=0. it will be filled by the system
               IPVNU(1,n)   = origin vertex # of track(n)
                    (2,n)   = decay vertex # of track(n)
                               0 if no decay
                    (3,n)   = ALEPH particle #
               IPCOD(n)     = LUND history code of track(n)
   - Book    : KHIS bank filled with IPCOD(n)
   - Call    : KFEVBK (VMAIN,PTRAK,IPVNU,MTRK,JSTAT)
               to book propagate the decay and fill VERT and KINE
   - structure: SUBROUTINE subprogram
                User Entry Name: KXLUAL
                External Regerences: NAMIND(BOS77)
                                     ALTABL/KFEVBK(ALEPHLIB)
                Comdecks referenced: BCS, LUNDCOM, ALCONS, KIPARA
   - usage   : CALL KXLUAL (VMAIN,ISTAT,MVX,MTRK)
   - Input   : VMAIN = vx,vy,vz,tof of the primary vertex
   - Output  : ISTAT = status word ( = 0 means OK)
                       - 1 means VERT or KINE bank missing
                       - 2 means not enough space for VERT or KINE
                       - 3 means too many tracks
                       - 4 electrons beams not stored as lines 1 and 2
                       - 5 means Lund status code larger than 5 found
                       > 0 means unknown LUND particle# ISTAT
               MVX   = # of vertices
               MTRK  = # of tracks to be propagated ( no beam electrons )
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXLUAL                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  KGPART                                                   
                   |----  MOD                                 External             
                   |----  IABS                                External             
                   |----  KBKINE                                                   
                   |----  KFEVBK                                                   
                   |----  ALTABL                              External             
   
 
3 KXLUBR
         SUBROUTINE KXLUBR
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND DECAY  /  INTERNAL
  ------------------------------------------------------------------------------
    P. Henrard - 881117           B.Bloch-Devaux -881205
   Modify decay scheme inside lund for requested particles
    Bos data cards are used with the following convention:
    GADB : define new decay channel for given particle in LUND
    GREP : replace a final state by another one
    GMOB : defines the branching ratios of a LUND particle
    GADB KF KDP1 KDP2 KDP3 KDP4
         KF Refers to the Lund particle code
         KDP1-KDP4 Refer to the lund code of the 4 particles final state
          to be added at the end of the list of decay modes.
         (if less than 4 particles needed, fill others with 0
          include matrix element code in KDP1 if necessary)
    GREP KF  II  KDP1 KDP2 KDP3 KDP4
         KF Refers to the Lund particle code
         II Refers to the decay mode number in the list for particle KF
         KDP1-KDP4 Refer to the lund code of the 4 particles final state
         (if less than 4 particles needed, fill others with 0
          include matrix element code in KDP1 if necessary)
    GMOB KF  BR(1)..................BR(n)
         KF Refers to the Lund particle code
         BR(1)...BR(n) are the non-cumulated branching fractions
         of the n decay modes defined for particle KF
    you may have as many GADB as you want as long as you do not
    overfill the IDBLU3 array (dimension 400) otherwise an error message
    is issued and the process is stopped.
    GREP cards are treated in sequence as they appear.
    GMOB cards should define as many Branching fractions as decay modes
    including those added through GADB cards.
   - structure : SUBROUTINE
                 User entry name :KXLUBR
                 External references:NAMIND/BKFMT/BLIST(BOS77)
                                     LULIST(JETSET)
                 Comdecks refenced :BCS,LUNDCOM
   - usage : CALL KXLUBR
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXLUCO                                                                          
        |---- KXLUBR                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  EXIT                                External             
   
 
3 KXLUCO
          SUBROUTINE KXLUCO (LUPAR)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND DECAY  /  USER INTERNAL
  ------------------------------------------------------------------------------
   - M.Reyrolle - 860820                   F.Ranjard - 871114
   Set lund parameters by data cards
    Every LUND parameter is a BOS data card keyword, the index of the
    parameter is the bank # .
    the list of keywords with their format is given below:
     'MST'  (I), 'PAR'  (F), 'KTYP' (I), 'PMAS' (F), 'PWID' (F),
     'CFR'  (F), 'DPAR' (F), 'IDB '  (I), 'CBR'  (F), 'KDP'  (I),
     'MSTE' (I), 'PARE' (F)
      KEY  i  /  ival     ====>  KEY(i) = ival
      RKEY i  /  value    ====>  RKEY(i) = value
    special treatment for KEY = IDB :
      IDB  i  /  'ON'     ====>  IDB(i) stays unchanged : decay is allowed
      IDB  i  /  'OFF'    ====>  IDB(i) = 0 : decay is inhibited
   - structure: SUBROUTINE subprogram
                User Entry Name: KXLUCO
                External References: NAMIND/BKFMT/BLIST(BOS77)
                                     KXLUBR (this Lib)
                Comdecks referenced: BCS,LUNDCOM
   - usage   : CALL KXLUCO (LUPAR)
   - input   : LUPAR = # of read data cards
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXLUCO                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  KXLUBR                                                   
   
 
3 KXLUPA
          SUBROUTINE KXLUPA (IPART,JKLIN)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND PART  /  USER
  ------------------------------------------------------------------------------
   - B.Bloch - 870300      modified by F.Ranjard - 870423
   -modified by B.Bloch 890510 for new PART bank
   Fill 'part' bank with lund particles
    Get  the NOtracking marker word NOTRK from KRUN bank
    Fill KLIN bank with LUND particle# which correspond
         to GEANT particles ( or ALEPH particles)
    Fill Antilambda C when necessary
    Get  LUND particles and transfer them to PART bank
         if they can be produced at LEP energies,
         Lep energy updated to 220. GeV B.Bloch oct 99
         with a GEANT# and a tracking type set to NOTRK
         because they are not used by GEANT.
    Reduce PART and KLIN banks to their normal size
   - structure: SUBROUTINE subprogram
                User Entry Name: KXLUPA
                External References: NAMIND(BOS77)
                                     KGPART/KBKLIN/KBPART/KXLUTO/AUBPRS
                                     (ALEPHLIB)
                                     LUCHGE/ULMASS/LUNAME(JETSET)
                                     IUCOMP(CERNLIB)
                Comdecks referenced: BCS, BMACRO,KMACRO
   - Usage    : CALL KXLUPA (IPART,JKLIN)
   - Output   : IPART   = KBPART return flag
                          .gt. 0 means OK
                JKLIN   = KBKLIN return flag
                          .gt. 0 means OK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXLUPA                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  ADBVER                              External             
                   |----  KBKLIN                                                   
                   |----  KGPART                                                   
                   |----  LUCHGE                              External             
                   |----  ULMASS                              External             
                   |----  LUNAME                              External             
                   |----  KBPART                                                   
                   |----  KMPART                                                   
                   |----  IUCOMP                              External             
                   |----  KXLUTO                                                   
                   |----  MOD                                 External             
                   |----  AUBPRS                              External             
   
 
3 KXLUPR
         SUBROUTINE kxlupr(ifl)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
        print out jetset parameters mstj, parj,mstu,paru
        B.Bloch july 96
        input  IFL : printout flag
                 1 = print only the 100 first values of MSTJ,PARJ
                 2 = print also the 100 first values of MSTU,PARU
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXLUPR.                                                              
   
 
3 KXLUTO
           SUBROUTINE KXLUTO(KLUN,TLIF)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND LIFETIME /   INTERNAL
  ------------------------------------------------------------------------------
   A. Blondel  24 - 06 - 86
    june 15, 1988   B. Bloch for updated B life times
   Lund application routine to find lifetime of non-standard particles
   - input   :  KLUN = LUND particle code
   - output  :  TLIF = particle lifetime ( in seconds )
    only for particles not defined in the ALEPH database
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXLUPA                                                                          
        |---- KXLUTO                                                               
                   |----  IABS                                External             
   
 
3 KXP6AL
         SUBROUTINE KXP6AL (VMAIN,ISTAT,MVX,MTRK)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND FILL   /  USER
  ------------------------------------------------------------------------------
   - B.Bloch-Devaux - 98012 for Pythia 6.1 from KXL7AL(Jetset 7.4)
     fixes for PYTHIA history            970420
   Build the event interface pythia 6.1-aleph
   - Fill    : PTRAK(ix,n)  = px,py,pz,mass of track(n)
                              if mass=0. it will be filled by the system
               IPVNU(1,n)   = origin vertex # of track(n)
                    (2,n)   = decay vertex # of track(n)
                               0 if no decay
                    (3,n)   = ALEPH particle #
               IPCOD(n)     = LUND history code of track(n)
   - Book    : KHIS bank filled with IPCOD(n)
   - Call    : KFEVBK (VMAIN,PTRAK,IPVNU,MTRK,JSTAT)
               to book and propagate the decay and fill VERT and KINE
   - structure: SUBROUTINE subprogram
                User Entry Name: KXP6AL
                External Regerences: NAMIND(BOS77)
                                    ALTABL/KFEVBK/KGPART/KBKINE(ALEPHLIB)
                Comdecks referenced: BCS, PYT6COM, ALCONS, KIPARA,BMACRO
                                     KMACRO
   - usage   : CALL KXP6AL (VMAIN,ISTAT,MVX,MTRK)
   - Input   : VMAIN = vx,vy,vz,tof of the primary vertex
   - Output  : ISTAT = status word ( = 0 means OK)
                       - 1 means VERT or KINE bank missing
                       - 2 means not enough space for VERT or KINE
                       - 3 means too many tracks
                       - 4 electrons beams not stored as lines 1 and 2
                       - 5 means Lund status code larger than 30 found
                       > 0 means unknown LUND particle# ABS(ISTAT)
               MVX   = # of vertices
               MTRK  = # of tracks to be propagated ( no beam electrons )
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXP6AL                                                               
                   |----  ABS                                 External             
                   |----  K7LU                                External             
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  KGPART                                                   
                   |----  PYCOMP                              External             
                   |----  KBKINE                                                   
                   |----  KFEVBK                                                   
                   |----  ALTABL                              External             
   
 
3 KXP6BR
         SUBROUTINE KXP6BR
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 DECAY  /  INTERNAL
  ------------------------------------------------------------------------------
            B.Bloch-Devaux -980112
   Modify decay scheme inside pythia 6.1 for requested particles
    Bos data cards are used with the following convention:
    GADM : define new decay channel for given particle in LUND
    GRPL : replace a final state by another one
    GMOB : defines the branching ratios of a LUND particle
    GADM KF MXEL KDP1 KDP2 KDP3 KDP4  KDP5
         KF Refers to the Lund7 particle code
         MXEL is the matrix element to be used for that decay
         KDP1-KDP5 Refer to the lund7 code of the 5 particles final state
          to be added at the end of the list of decay modes.
         (if less than 5 particles needed, fill others with 0  )
          include matrix element code in MXEL, if MXEL=101  5 more
          positions can be filled for the same decay chain
    GRPL KF  II  MSWI  MXEL KDP1 KDP2 KDP3 KDP4  KDP5
         KF Refers to the Lund particle code
         II Refers to the decay mode number in the list for particle KF
         MSWI is the switch to be used for that decay ( 0,-1,1,....5)
         MXEL is the matrix element to be used for that decay
         KDP1-KDP5 Refer to the lund code of the 5 particles final state
         (if less than 5 particles needed, fill others with 0  )
    GMOB KF  BR(1)..................BR(n)
         KF Refers to the Lund particle code
         BR(1)...BR(n) are the non-cumulated branching fractions
         of the n decay modes defined for particle KF
    you may have as many GADM as you want as long as you do not overfill
    the LUDAT3 array (dimension 2000)otherwise an error message is issued
    and the process is stopped.
    NOTE: all GADM cards with the same KF must follow each other !!
   ------
    GRPL cards are treated in sequence as they appear.
    GMOB cards should define as many Branching fractions as decay modes
    including those added through GADM cards.If not, a message is issued
    and no modification is done.When modified a printout of the resulting
    decay modes and branching ratios for the particle is issued.
   - structure : SUBROUTINE
                 User entry name :KXP6BR
                 External references:NAMIND/BKFMT/BLIST(BOS77)
                                     KXP6ST( this library)
                                     PYCOMP(Pythia 6.1)
                 Comdecks refenced :BCS,LUN7COM
   - usage : CALL KXP6BR
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXP6CO                                                                          
        |---- KXP6BR                                                               
                   |----  NAMIND                              External             
                   |----  PYCOMP                              External             
                   |----  KFDP                                External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  KXP6ST                                                   
   
 
3 KXP6CO
         SUBROUTINE KXP6CO(LUPAR)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 DECAY  /  USER INTERNAL
  ------------------------------------------------------------------------------
   - Modified for Pythia 6.1
                             B.Bloch   - 980112
   Set lund parameters by data cards
    Every PYTHIA parameter is a BOS data card keyword,the index of
    the parameter is the bank number.
    the list of keywords with their format is given below:
   'MSTU'(I),'PARU'(F),'MSTJ'(I),'PARJ'(F),
   'KCH1'(I),'KCH2'(I),'KCH3'(I),'KCH4'(I),
   'PMA1'(F),'PMA2'(F),'PMA3'(F),'PMA4'(F),
   'PARF'(F),'CHA1'(I),'CHA2'(I),
   'MDC1'(I),'MDC2'(I),'MDC3'(I),'MDM1'(I),'MDM2'(I),'BRAT'(F),
   'KFD1'(I),'KFD2'(I),'KFD3'(I),'KFD4'(I),'KFD5'(I),
   'MSEL'(I),'MSUB'(I),'CKIN'(F),'MSTP'(I),'PARP'(F),
   'MSTI'(I),'PARI'(F),'IMSS'(I),'RMSS'(F)
      KEY  i  /  ival     ====>  KEY(i)=ival
      RKEY i  /  value    ====>  RKEY(i)=value
   - structure: SUBROUTINE subprogram
                User Entry Name: KXP6CO
                External References: NAMIND/BKFMT/BLIST(BOS77)
                                     KXP6BR (this Lib)
                Comdecks referenced: BCS,LUNDCOM
   - usage    : CALL KXP6CO(LUPAR)
   - input    : LUPAR=No. of read data cards
    Note that, if a particle mass(PMA1), width(PMA2) or life-time(PMA4)
    is modified, the PART bank entry is changed accordingly.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXP6IN                                                                          
        |---- KXP6CO                                                               
                   |----  NAMIND                              External             
                   |----  IW                                  External             
                   |----  PYCOMP                              External             
                   |----  CHAINT                              External             
                   |----  KFDP                                External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  KGPART                                                   
                   |----  KXP6BR                                                   
   
 
3 KXP6IN
          SUBROUTINE KXP6IN (IPART,JKLIN)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 PART  /  USER
  ------------------------------------------------------------------------------
   - B.Bloch - January 98 adapted to PYTHIA 6.1 from KXL7PA (JETSET 7.3 )
   Fill 'part' bank with pythia particles
    Create the KLUN bank with version and date of PYTHIA library
    Get  the NOtracking marker word NOTRK from KRUN bank
    Fill KLIN bank with LUND particle# which correspond
         to GEANT particles ( or ALEPH particles)
    Fill Antilambda C when necessary
    Get  LUND particles and transfer them to PART bank
         if they can be produced at LEP energies,
         update Lep Energy to 220. GeV B.Bloch Oct 99
         with a GEANT# and a tracking type set to NOTRK
         because they are not used by GEANT.
    Reduce PART and KLIN banks to their normal size
    Make sure Jetset uses ALEPH values for masses and life times
   - structure: SUBROUTINE subprogram
                User Entry Name: KXP6IN
                External References: NAMIND(BOS77)
                                     KGPART/KBKLIN/KBPART/KXP6TO/KMPART
                                     ADBVER/ALKLUN/PRTABL/KXP6CO/AUBPRS
                                     (ALEPHLIB)
                                     PYCHGE/PYMASS/PYNAME/PYCOMP(PYTHIA)
                                     IUCOMP(CERNLIB)
                Comdecks referenced: BCS, BMACRO,KMACRO
   - Usage    : CALL KXP6IN (IPART,JKLIN)
   - Output   : IPART   = KBPART return flag
                          .gt. 0 means OK
                JKLIN   = KBKLIN return flag
                          .gt. 0 means OK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KXP6IN                                                               
                   |----  SQRT                                External             
                   |----  NLINK                               External             
                   |----  NAMIND                              External             
                   |----  ADBVER                              External             
                   |----  MOD                                 External             
                   |----  ALKLUN                                                   
                   |----  EXIT                                External             
                   |----  PRTABL                                                   
                   |----  KBKLIN                                                   
                   |----  KXP6CO                                                   
                   |----  PYCOMP                              External             
                   |----  IUCOMP                              External             
                   |----  PYNAME                              External             
                   |----  PYCHGE                              External             
                   |----  KXP6TO                                                   
                   |----  MAX                                 External             
                   |----  KBPART                                                   
                   |----  KMPART                                                   
                   |----  AUBPRS                              External             
                   |----  IABS                                External             
   
 
3 KXP6ST
         SUBROUTINE KXP6ST(KPP)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 DECAY  /  INTERNAL   USER
  ------------------------------------------------------------------------------
            B.Bloch-Devaux -901106
   Print decay modes and rates in pythia 6.1 for requested particle code kpp
   - structure : SUBROUTINE
                 User entry name :KXP6ST
                 External references:PYCOMP/PYNAME(PYTHIA 6.1)
                 Comdecks refenced :PYT6COM
   - usage : CALL KXP6ST(KPP)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXP6BR                                                                          
        |---- KXP6ST                                                               
                   |----  PYCOMP                              External             
                   |----  PYNAME                              External             
                   |----  KFDP                                External             
   
 
3 KXP6TO
           SUBROUTINE KXP6TO(KLUN,TLIF)
  ------------------------------------------------------------------------------
    CKEY KINE KINGAL LUND7 LIFETIME /   INTERNAL
  ------------------------------------------------------------------------------
    12 1998 B. Bloch for Pythia 6.1
   Lund application routine to find lifetime of non-standard particles
   - input   :  KLUN = LUND particle code
   - output  :  TLIF = particle lifetime ( in seconds )
    only for particles not defined in the ALEPH database
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXP6IN                                                                          
        |---- KXP6TO                                                               
                   |----  IABS                                External             
                   |----  MOD                                 External             
   
 
3 KZFRBK
         subroutine KZFRBK(IST)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Book bank kzfr with fragmentation info
        B. Bloch -Devaux November 1994 IMPLEMENTATION OF HVFL05
        modified December 97 : take booking of bank out of do loop
       structure : subroutine
       input     : none
       output    : IST status flag ( 0 means ok)
       comdecks referenced : LUN7COM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              KZFRBK                                                               
                   |----  VZERO                               External             
                   |----  KLUZET                                                   
                   |----  ABS                                 External             
                   |----  ALTABL                              External             
   

2 LDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     read the LCAL data base and build geometry
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     LCALMV     Return the number of mev per lcal adc count

3 LCALMV
         INTEGER FUNCTION LCALMV (LSTAK)
  ------------------------------------------------------------------------------
    CKEY LCALDES LCAL ADC ENERGY / USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 890428
   Return the number of mev per lcal adc count
    information is taken from the data base
   - Input   : none
   - Output  : LSTAK(3) / I  number of MeV per ADC count
                             for the 3 stacks
               LCALMV        return code :
                             =0 means information not avalaible
   - Banks   : none
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              LCALMV.                                                              
   

2 MDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     MUONDES package: MUON geometry
    
     ! ALEPHLIB 21.3
        MUPRGE : Fix multiline strings (M.Cattaneo)
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     MBAPOL     Muon barrel : convert local xx,yy to polar coordinates
     MBSPOL     Muon special barrel : convert local xx,yy to polar coordinates
     MENPOL     Muon endcaps : convert local xx,yy to polar coordinates
     MGINIT     Initialize muon reconstruction
     MMAPOL     Muon middle angle : convert local xx,yy to polar coordinates
     MUPRGE     Print muon geometry and readout data
     MXYLOC     Converts x,y strip numbers to local coordinates

3 MBAPOL
         SUBROUTINE MBAPOL(NSLOT,ISUBC,LAYER,XX,YY,RHO,THETA,PHI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Muon barrel : convert local xx,yy to polar coordinates
   
      F.Bossi/G.Capon/D.Kuhn             861107
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MBAPOL                                                               
                   |----  RINTEB                              External             
                   |----  ZZOFFS                              External             
                   |----  ATAN2                               External             
                   |----  FLOAT                               External             
                   |----  INPHIB                              External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
                   |----  ACOS                                External             
   
 
3 MBSPOL
         SUBROUTINE MBSPOL(NSLOT,ISUBC,LAYER,XX,YY,RHO,THETA,PHI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Muon special barrel : convert local xx,yy to polar coordinates
   
      G.Capon/R.Xu                 871029
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MBSPOL                                                               
                   |----  RINTEB                              External             
                   |----  ZZOFFS                              External             
                   |----  ATAN2                               External             
                   |----  FLOAT                               External             
                   |----  INPHIB                              External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
                   |----  ACOS                                External             
   
 
3 MENPOL
         SUBROUTINE MENPOL(NSLOT,ISUBC,LAYER,XX,YY,RHO,THETA,PHI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Muon endcaps : convert local xx,yy to polar coordinates
   
      F.Bossi/G.Capon/D.Kuhn             861107
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MENPOL                                                               
                   |----  MOD                                 External             
                   |----  YWIDTH                              External             
                   |----  ABS                                 External             
                   |----  ATAN2                               External             
                   |----  SQRT                                External             
                   |----  ZENCAP                              External             
                   |----  ZZOFFS                              External             
                   |----  ACOS                                External             
   
 
3 MGINIT
         SUBROUTINE MGINIT(LRGEO,IRUNR,IERR,NEWNR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Initialize muon reconstruction
   
       Author:   Weimin Wu/Giorgio Capon     10-06-1987
       modified :F.Ranjard                   26-02-1988
       Description
       ===========
       This routine is called once per run for
       initialization of the MUON reconstruction program.
   
       called by READRN
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MGINIT                                                               
                   |----  ALGTDB                              External             
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
   
 
3 MMAPOL
         SUBROUTINE MMAPOL(NSLOT,ISUBC,LAYER,XX,YY,RHO,THETA,PHI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Muon middle angle : convert local xx,yy to polar coordinates
   
      F.Bossi/G.Capon/D.Kuhn             861107
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MMAPOL                                                               
                   |----  FLOAT                               External             
                   |----  INPHIM                              External             
                   |----  ZMODUL                              External             
                   |----  RINTEM                              External             
                   |----  ZZOFFS                              External             
                   |----  ATAN2                               External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
                   |----  ACOS                                External             
   
 
3 MUPRGE
            SUBROUTINE MUPRGE
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print muon geometry and readout data
   
     Weimin Wu/Giorgio Capon   9th June 1987
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MUPRGE                                                               
                   |----  YWIDTH                              External             
                   |----  WD16MU                              External             
   
 
3 MXYLOC
            SUBROUTINE MXYLOC(ISUBC,LAYER,NSTRX,LCLUX,NSTRY,LCLUY,XX,YY)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Converts x,y strip numbers to local coordinates
     NSTRPX,NSTRPY=strip #   LCLUX,LCLUY=cluster width
     XX,YY = local coordinates in muon chamber ref system
   
      F.Bossi/G.Capon/D.Kuhn             861107
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MXYLOC                                                               
                   |----  MOD                                 External             
                   |----  WD16MU                              External             
                   |----  FLOAT                               External             
   

2 MUCA

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     give the relation muon-calobjects in HCAL
    
       Long writeup : ALEPH 89-123/SOFTWR 89-16,G.Bagliesi et al.
       Since an Aleph Note on the subject is available, here we will
       describe just the usage of the package. The idea is to
       give for each calobject a probability of being associated
       to a muon (not necessarily isolated). The probability
       is calculated using the HCAL information only, hence can
       be used succesfully even when the TPC or Muon Chambers
       are not available.
       There is a single routine (MUCALO) interfacing the package to
       the user program. For the calling sequence and arguments
       please look at the routine header. If you want to use it
       naively look at the following example, a POT analysis
       routine that accesses the probabilty for prompt muon
       for each calobject.
                                *** EXAMPLE ***
          SUBROUTINE CALOMU
          ......................
          ......................
          PARAMETER(MAXL=20)
          DIMENSION NCAVEC(MAXL)
          ......................
          ......................
          KCALO=NLINK('PCOB',0)
          IF(KCALO.EQ.0) GO TO 999
          NCALO=LROWS(KCALO)
          DO 10 ICAL=1,NCALO
             CALL MUCALO(ICAL,PR1,ERPR1,PR2,ERPR2,NCAL,NCAVEC,MAXL,IER)
             IF(IER.EQ.-1) THEN
    
     ECAL ONLY SKIP IT
    
             ELSEIF(IER.EQ.0) THEN
    
     TAKE PR2 AND ERPR2 AND DO YOUR ANALYSIS
    
             ELSEIF(IER.GT.0)
    
     ERROR : REPORT IT TO THE AUTHORS
    
             ENDIF
     10   CONTINUE
     999  END
                                *** END EXAMPLE ***
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     MAKLIS     Make list of objects for tabular relation banks
     MDSCR      Define  discriminant variables and compute probability
     MUCALO     Looking for muons in calobs
     MUCATR     Probability for a track to be a muon from mucalo
     MUDBE      Looking for pattern in barrel or endcap
     MUDSO      Looking for pattern in  barrel-endcap overlap

3 MAKLIS
         SUBROUTINE MAKLIS(IRLBN,JHACPA,JHACPB,INDOBJ,N,NVEC,IER)
  ------------------------------------------------------------------------------
    CKEY MUCAL MUON CALOBJ / INTERNAL
  ------------------------------------------------------------------------------
   
   Make list of objects for tabular relation banks
    Author:    R.Tenchini     890310
    Input : IRLBN = Relation bank index (the one from NLINK)
            JHACPA= HAC parameter for object A
            JHACPB= HAC parameter for object B
            INDOBJ= Element of object A for which  you want
                    the list of elements of objects B that
                    are in relation
    Output:
            N     = Number of elements B related to INDOBJ
            NVEC  = List of B elements related to INDOBJ
            IER   = 0 -> OK
                  = 1 -> ERROR More than LENVEC relations
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ECPHCO                                                                          
   MUCALO                                                                          
   MUCATR                                                                          
        |---- MAKLIS.                                                              
   
 
3 MDSCR
         SUBROUTINE MDSCR(NPLIS,IPLIS,IZNDS,PHDIS,NHPLT,
  ------------------------------------------------------------------------------
    CKEY MUCAL MUON CALOBJ / INTERNAL
  ------------------------------------------------------------------------------
        *          PR1,ERPR1,PR2,ERPR2)
   
   Define  discriminant variables and compute probability
    Authors: U. Bottigli, A.Messineo - 890310
    Input : NPLIS = Number of element of IPLIS
            IPLIS = Vector of patterns index
            IZNDS = Flag of hcal region
            PHDIS = Pulse hight
            NHPLT = Vector of hits in hcal planes
    Output:
            PR1  =  Probabilty as jet with    mu-prompt
            ERPR1= Error on the probability  PR1
            PR2  = Probabilty as jet with mu-prompt or decay
            ERPR2= Error on the probability PR2
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUCALO                                                                          
        |---- MDSCR                                                                
                   |----  ABS                                 External             
                   |----  EXP                                 External             
                   |----  SQRT                                External             
   
 
3 MUCALO
         SUBROUTINE MUCALO(ICAL,PR1,ERPR1,PR2,ERPR2,NCAL,NCAVEC,MAXL,IER)
  ------------------------------------------------------------------------------
    CKEY MUCAL MUON CALOBJ / USER
  ------------------------------------------------------------------------------
   
   Looking for muons in calobs
    Authors: U.Bottigli,A.Messineo,R.Tenchini  890216
    INPUT Banks : PCRL,PPOB,PPDS,PHCO
    OUTPUT Banks : none
    INPUT Arguments :
    ICAL = Calob pointer
    MAXL = Dimension of NCAVEC (you must dimension
             NCAVEC in your routine, DIMENSION NCAVEC(20)
             should be enough)
    OUTPUT Arguments :
    PR1  = Identification Probabilty as jet with mu-prompt
           or mu-decay
    ERPR1= Error on the Identification probability PR1
    PR2  = Identification Probabilty as jet with mu-prompt
    ERPR2= Error on the Identification probability PR2
    NCAL = --> 0 no Digital Pattern for that ICAL
                 we cannot calculate the probabilities
           --> 1 the probability is unambiguously given
                 for ICAL
           --> N the probability is given for ICAL + (N-1)
                 other objects
                 (in practice if NCAL=1 no problem,
                  else if NCAL.GT.1 the probability
                  concerns the NCAL objects as a whole
    NCAVEC = Vector containing ICAL plus the (N-1)
             extra objects .
    IER    = -1 --> Calob without Digital Patterns
           = 0 ---> OK
           = 1 ---> Insufficient MAXL
           = 2 ---> Error from MAKLIS
           = 3 ---> Insufficient LENMAX
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUCATR                                                                          
        |---- MUCALO                                                               
                   |----  NLINK                               External             
                   |----  MAKLIS                                                   
                   |----  UCOPY                               External             
                   |----  MUDBE                                                    
                   |----  MUDSO                                                    
                   |----  MDSCR                                                    
   
 
3 MUCATR
         SUBROUTINE MUCATR(ITRA,PR1OUT,PR2OUT,IFLAG)
  ------------------------------------------------------------------------------
    CKEY MUCAL TRACK CALO / USER
  ------------------------------------------------------------------------------
   Probability for a track to be a muon from mucalo
    Author:    R.Tenchini     900128
    Input :
       ITRA = track index in PFRF
    Output:
       PR1OUT  = Probability (from 0 to 100%) to have muon in
                 the calobject linked to that track
       PR2OUT  = Same meaning as PR1, but for prompt muons only
                 (i.e. exiting HCAL)
       IFLAG = return flag.
                            1 = OK
                            0 = Calob without Digital Patterns
                           -1 = Track not linked to calobs
                           -2 = Maklis or Mucalo vectors underdimensioned
   - Input banks : PCRL
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MUCATR                                                               
                   |----  NAMIND                              External             
                   |----  MAKLIS                                                   
                   |----  MUCALO                                                   
   
 
3 MUDBE
         SUBROUTINE MUDBE(NPLIS,IPLIS,KPPDS,NPPDS,KPPOB,NHPLT)
  ------------------------------------------------------------------------------
    CKEY MUCAL MUON CALOBJ / INTERNAL
  ------------------------------------------------------------------------------
   
   Looking for pattern in barrel or endcap
    Authors: U. Bottigli, A.Messineo  -  890310
    Input : NPLIS = Number of element of IPLIS
            IPLIS = Vector of patterns index
            KPPDS = Bank index of PPDS
            NPPDS = Rows of PPDS
            KPPOB = Bank index of PPOB
    Output:
            NHPLT = Vector of hits for each hcal plane
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUCALO                                                                          
        |---- MUDBE                                                                
                   |----  IFIX                                External             
   
 
3 MUDSO
         SUBROUTINE MUDSO(NPLIS,IPLIS,KPPDS,NPPDS,KPPOB,NHPLT)
  ------------------------------------------------------------------------------
    CKEY MUCAL MUON CALOBJ / INTERNAL
  ------------------------------------------------------------------------------
   
   Looking for pattern in  barrel-endcap overlap
    Authors: U. Bottigli, A.Messineo  - 890310
    Input : NPLIS = Number of element of IPLIS
            IPLIS = Vector of patterns index
            KPPDS = Bank index of PPDS
            NPPDS = Rows of PPDS
            KPPOB = Bank index of PPOB
    Output:
            NHPLT = Vector of hits for each hcal plane
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUCALO                                                                          
        |---- MUDSO                                                                
                   |----  IFIX                                External             
   

2 MUID

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     1st deck of MUONID
           Code for performing the official muon identification.
           Most of this is for internal use only.
           The function HDODGY may be used externally to deterimine whether
           or not a given run has good HCAL digital tube information
    
     ! ALEPHLIB 31.4
        MRMHIT : y2k fix; ASIM can be yyyymm, MCPE can have NR>99      (M.Cattaneo)
        HRHTUB : y2k fix; ASIM can be yyyymm, HZEF,HDTE can have NR>99 (M.Cattaneo)
    
     ! ALEPHLIB 21.6
        MUREDO - Moved to Julia library (version 285) because it calls Julia
                 routines (M.Cattaneo 19/02/97)
    
     ! ALEPHLIB 21.2
             ALPROB Fix a small bug: ALPROB gets the required numbers of
                    random numbers according to the run, event number and
                    seed. If the routine was called twice or more following
                    with the same seed the result was not the same because a
                    vector was not defined in the right way. (A.Gregorio)
             MRMHIT Fix a small bug: MRMHIT masks Monte Carlo bank MHIT to
                    take into account muon chambers inefficiencies. During
                    the 1993 the chambers 4C and 4D were off for a certain
                    period and in order to consider this inefficiency inside
                    MRMHIT a new bank (D4CD) was filled for 93 Monte Carlo.
                    This bank was filled in the wrong position and was not
                    present if a muon hit has not been fired. (A.Gregorio)
     ! ALEPHLIB 20.0
             MRMHIT treat chambers 4c,4d in 93 monte carlo , add bank D4CD to
                    show this has been done
             MUIDO  declare format of D4CD
             MUREDO drop old D4CD and add new one to output list
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     ALPROB     Get a random number rnd which depends on run,event number as well
     AMUID      Get the muon id information from the banks mcad,hmad,muid
     HDODGY     Author : g. taylor                12-apr-1992
     HGSUDN     Calculate the normalised sum of square of residuals (uses hroa bank)
     HRHTUB     Remake the htub bank based on hcal tube efficiencies observed
     MRMHIT     Mask montecarlo bank mhit to take into account
     MSHAD      Test if two muon candidate tracks are in shadow (uses hroa bank)
     MSOLMC     Find out if track itr1 has a mu chamber hit which it shares with
     MSOLSH     Solve ambiguity for 2 mu-candidates tracks in shadow
     MUIDF      Calculates the muon id flag
     MUIDO      Official aleph muon id routine

3 ALPROB
         SUBROUTINE ALPROB(KSEED,NUMRND,RND)
  ------------------------------------------------------------------------------
    CKEY MUONID / INTERNAL
  ------------------------------------------------------------------------------
   Get a random number rnd which depends on run,event number as well
       as seed KSEED
   
      Author   :- G.Taylor             4-FEB-1992
   
      Inputs:  KSEED/I  Event specific seed
               NUMRND/I Number of random numbers needed
      Outputs: RND /R   A Random number uniformally distrubuted between
                        zero and one
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   HRHTUB                                                                          
   MRMHIT                                                                          
        |---- ALPROB                                                               
                   |----  ABRUEV                              External             
                   |----  RMARIN                              External             
                   |----  RANMAR                              External             
                   |----  MIN                                 External             
                   |----  MOD                                 External             
   
 
3 AMUID
         SUBROUTINE AMUID(ITRAC,IRUN,IBE,IBT,IM1,IM2,NEXP,NFIR,N10,N03,
  ------------------------------------------------------------------------------
    CKEY MUONID MUON INTERFACE / INTERNAL
  ------------------------------------------------------------------------------
        &  XMULT,RAPP,ANG,ISHAD,SUDNT,IDF,IMCF,IER)
   Get the muon id information from the banks mcad,hmad,muid
   
       Author    - G.Taylor              15-MAY-1992
   
       Inputs  :  ITRAC /I = Track number in FRFT bank
       Outputs :  IRUN  /I = (=0)
                  IBE   /I = Expected HCAL bit map
                  IBT   /I = Found HCAL bit map
                  IM1   /I = num hits in first layer of muon chambers
                  IM2   /I = num hits in first layer of muon chambers
                  NEXP  /I = num fired planes expected in hcal
                  NFIR  /I = num fired planes in hcal
                  N10   /I = num fired planes in last 10 expected
                  N03   /I = num fired planes in last 3 expected
                  XMULT /R = excess digital multiplicity in last 10
                              hcal planes
                  RAPP  /R = (dist/dcut) for closest muon chamber hit
                  ANG   /R = angle between shadowing track and muon
                             chamber track segment
                  ISHAD /R = shadowing flag (=0 if not shadowing,
                             otherwise is the JULIA track number which
                             it was shadowing)
                  SUDNT /R = sum of hcal residuals
                  IDF   /I = muon id flag (see bank MUID)
                  IMCF  /I = (=0)
                  IER   /I = (=0)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              AMUID                                                                
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  IBITS                               External             
                   |----  MIN                                 External             
   
 
3 HDODGY
         LOGICAL FUNCTION HDODGY(KRUN)
  ------------------------------------------------------------------------------
    CKEY MUONID HCAL /  USER
  ------------------------------------------------------------------------------
   Author : g. taylor                12-apr-1992
     logical is true if the hcal digital readout is bad for this event
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HDODGY                                                               
                   |----  MDARD                               External             
                   |----  JUNIDB                              External             
   
 
3 HGSUDN
         FUNCTION HGSUDN(ITR)
  ------------------------------------------------------------------------------
    CKEY MUONID HCAL SHADOW / INTERNAL
  ------------------------------------------------------------------------------
   Calculate the normalised sum of square of residuals (uses hroa bank)
   
     author : G. Taylor         15-May-1991
   
     input : ITR (in JULIA)
     output: HGSUDN /R= normalised sum of square of residuals :
                      =1/nfired*sum (dx.i/roadwidth.i)**2
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUIDO                                                                           
        |---- HGSUDN                                                               
                   |----  NLINK                               External             
                   |----  VZERO                               External             
                   |----  BTEST                               External             
   
 
3 HRHTUB
         SUBROUTINE HRHTUB(IER)
  ------------------------------------------------------------------------------
    CKEY MUONID HCAL EFFICIENCY / INTERNAL
  ------------------------------------------------------------------------------
   Remake the htub bank based on hcal tube efficiencies observed
       in the data
   
      Author   :- D.Cinabro             20-MAY-1990
                  G.Taylor              10-APR-1992
                  Changed to have map for all monte carlo samples
                  to allow easy incorpoation of MC changes
                  Change grouping of HCAL layers
                  G.Taylor              10-APR-1992
                  map efficiency using HDTE c/w HTEF
                  ie use modules c/w supermodules
                  M.Cattaneo            08-DEC-1999
                  y2k fix: ASIM can be yyyymm, HZEF,HDTE can have NR>99
   
      Inputs: HTUB bank
      Outputs: Remade HTUB bank
               IER /I Error flag
                       = 0 ok
                       = 1 old galeph version
                       = 2 no ASIM bank
                       = 3 year not in range 1990-1994
                       = 6 no HTUB bank
                       = 7 bos garbage collection
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HRHTUB                                                               
                   |----  NAMIND                              External             
                   |----  MDARD                               External             
                   |----  JUNIDB                              External             
                   |----  NLINK                               External             
                   |----  NSWAP                               External             
                   |----  NDROP                               External             
                   |----  AUBOS                               External             
                   |----  MOD                                 External             
                   |----  ALPROB                                                   
                   |----  UCOPY                               External             
                   |----  NBANK                               External             
   
 
3 MRMHIT
         SUBROUTINE MRMHIT(IER)
  ------------------------------------------------------------------------------
    CKEY MUONID MUON EFFICIENCY / INTERNAL
  ------------------------------------------------------------------------------
   Mask montecarlo bank mhit to take into account
       muon chambers inefficiencies
   
       authors: G.Capon and F.Cerutti    10-JUN-1990
       revised: G.Taylor                 20-APR-1992
                G.Taylor                 21-OCT-1992
                 get the monte carlo eff from
                 the database
                M.Cattaneo               08-DEC-1999
                 y2k fix; ASIM can be yyyymm, MCPE can have NR>99
   
       output : IER/I = Error flag
                       = 0 ok
                       = 1 no ASIM bank
                       = 2 year not in range 1990-1994
                       = 3 corresponding MCPE bank not on database
                       = 4 no MHIT bank
                       = 5 bos garbage collection
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MRMHIT                                                               
                   |----  NAMIND                              External             
                   |----  MDARD                               External             
                   |----  JUNIDB                              External             
                   |----  ALPROB                                                   
                   |----  NDROP                               External             
                   |----  AUBOS                               External             
                   |----  NSWAP                               External             
                   |----  NLINK                               External             
                   |----  UCOPY                               External             
                   |----  NBANK                               External             
   
 
3 MSHAD
         FUNCTION MSHAD(I1,I2)
  ------------------------------------------------------------------------------
    CKEY MUONID MUON SHADOW / INTERNAL
  ------------------------------------------------------------------------------
   Test if two muon candidate tracks are in shadow (uses hroa bank)
   
     author : G. Capon         23-mar-1991
              G. Taylor        23-apr-1992
   
     input : I1,I2 track numbers (in JULIA)
     output: MSHAD  = flag (=1/0 if tracks are/are not in shadow)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUIDO                                                                           
        |---- MSHAD                                                                
                   |----  VZERO                               External             
                   |----  NLINK                               External             
                   |----  BTEST                               External             
                   |----  NAMIND                              External             
   
 
3 MSOLMC
         LOGICAL FUNCTION MSOLMC(ITR1)
  ------------------------------------------------------------------------------
    CKEY MUONID MUON SHADOW / INTERNAL
  ------------------------------------------------------------------------------
   Find out if track itr1 has a mu chamber hit which it shares with
     no other track
     author : G. TAYLOR        7-APR-1992
   
     input : ITR1 track numbers (in JULIA)
     output: MSOLMC = .TRUE. if track has a non shared mu ch hit
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUIDO                                                                           
        |---- MSOLMC                                                               
                   |----  NAMIND                              External             
   
 
3 MSOLSH
         SUBROUTINE MSOLSH(I1,IDF1,RAPP1,SUDN1,AN1,I2,IDF2,RAPP2,SUDN2,AN2
  ------------------------------------------------------------------------------
    CKEY MUONID SHAD / INTERNAL
  ------------------------------------------------------------------------------
        &                  ,IGT)
   Solve ambiguity for 2 mu-candidates tracks in shadow
   
     author : G. Capon                 11-jun-1990
            : G. Taylor                12-APR-1992
                 change to use dist (c/w dist/dcut)
                 use info from layer 2 of mu chambers
   
     input : I1 , I2     : track numbers (in JULIA)
             IDF1, IDF2  : identif flags (=1,2,3 for Hmad,mcad,hmad+mcad)
             RAPP1,RAPP2 : dist for tracks (see mcad bank)
             SUDN1,SUDN2 : sum of residuals for tracks (see HGSUDN)
             AN1,AN2     : ANG/ACUT for tracks (see mcad bank)
     output :IGT         : index of accepted track (that is I1 or I2)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUIDO                                                                           
        |---- MSOLSH.                                                              
   
 
3 MUIDF
         SUBROUTINE MUIDF(NEXP,NFIR,IM1,IM2,N10,N03,MULT,ISHAD,RAPP,
  ------------------------------------------------------------------------------
    CKEY MUONID MUON / INTERNAL
  ------------------------------------------------------------------------------
        $                  ANG,IDF)
   Calculates the muon id flag
       authors: D.Cinabro    10-JUN-1990
       revised: G.Taylor     20-APR-1992
                G.Taylor      5-OCT-1992
                Split flag 15 into 15 and 10 add arguements RAPP,DIST
   
       input  : NEXP  /I = num of hcal dig hits expected
                NFIR  /I = num of hcal dig hits fired
                IM1   /I = num of muon chamber hits in first layer
                IM2   /I = num of muon chamber hits in second layer
                N10   /I = num of hcal dig hits fired in last 10 exp
                N03   /I = num of hcal dig hits fired in last 3 exp
                MULT  /I = excess digital multiplicity in last 10
                             hcal planes(*100)
                ISHAD /I = shadowing flag (=0 if best candidate)
                RAPP  /F = dist/cut muon chamber
                ANG   /F = ang/cut muon chamber
   
       output : IDF/I = muon id flag
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   MUIDO                                                                           
        |---- MUIDF                                                                
                   |----  FLOAT                               External             
                   |----  ABS                                 External             
   
 
3 MUIDO
         SUBROUTINE MUIDO(IER)
  ------------------------------------------------------------------------------
    CKEY MUONID MUON IDENTIFICATION / INTERNAL
  ------------------------------------------------------------------------------
   Official aleph muon id routine
       Brings together HCAL and MUON chamber information
       Treats shadowing
   
       Author    - G.Taylor              15-MAY-1992
   
       Outputs :  MUID bos bank
                 IER /I = Error flag
                        = 0 ok
                        = 1,2 garbage collection
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MUIDO                                                                
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  MIN                                 External             
                   |----  IBITS                               External             
                   |----  MUIDF                                                    
                   |----  HGSUDN                                                   
                   |----  MSHAD                                                    
                   |----  MSOLSH                                                   
                   |----  MSOLMC                                                   
   

2 PHOT

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
       AUTHOR   : J.Badier    17/04/89
      Gammas and neutral clusters analysis.
    
       The PHOTONS package concerns the analysis of the neutral clusters.
       PHOTONS has to be initialised by a call to EBINIT.
    
       Presently, the main subroutine is EBLONG.
       The input is the content of the 3 stacks and a direction defined
       by the theta and phi polar angles.
       The output gives two calculated estimators and an electromagnetic
       identification is proposed. The validity of this identification
       depends of the physic and has to be checked by the user. The
       estimators may be converted into conditional probability.
       Sometimes they cannot be calculated.
       The proximity of an overlap and of a crack is given.
    
       The EBCDRG routine allows to generate information on cracks and
       overlap proximity.
    
       The EBGENE routine gives the parameters of a mean shower.
    
     ! ALEPHLIB 313
        EBLEAK,EBLPST,EBPREP,EBPRGA,ECLEAK : Raise upper limit for doing EM cluster
         corrections to 150GeV (from 100GeV)                        (M.-N.Minard)
    
     ! ALEPHLIB 312
        EBECMD : bug fix - correction was applied incorrectly to clusters near a
                 crack in endcap B (about 1% of clusters)  (G.Taylor, M.-N.Minard)
    
     ! ALEPHLIB 30.2, correction file no. 9
        EBLEAK,EBLPST,EBPREP,EBPRGA,ECLEAK - increase to 100 GeV the cut on
                 maximum energy of a cluster                         (M.N.-Minard)
    
     ! ALEPHLIB 154
       CLMOMS - add a limit on the cluster energy to be treated
    
     ! ALEPHLIB 15.2
       GAPGID, GAPGPC  - corrections
       ENOF4, ENOL12, ENOW12, GAPGID, ECLEAK - get necessary data base banks
       using *CA GTDBBK or MDARD for banks with NR=0
       GVERCR - add initialization of some variables.
    
     ! ALEPHLIB 14.6
       Steering and package added to caracterise photon/pi0
    
       GAPGID   Steering to built PGID bank using GBNEUT and CLMOMS
       GBNEUT   Modified from EBNEUT to caracterise the transverse
                shape of any neutral cluster . Argument are identical
                to EBNEUT
       GBTRAN   Modified from EBTRAN to caracterise any neutral cluster.
                Argument are identical to EBTRAN
       GBIMPA   Modified from EBIMPA to properly treat the pad in theta and
                impact. Argument are identical to EBIMPA
       GVERCR   Recalculate from individual storeys the cluster barycenter.
    
     ! ALEPHLIB 12.2
       Another photon identification package is added : Author Nigel Keemer
    
       CLMONS  guess the number of photons in a cluster on the basis of
               the clusters moments. It uses BULOS routine which calculates
               the eigenvariance of cluster .It  finds a two photon
               decomposition of a cluster based on eigenvariances and 3rd
               moments in direction of major axis.
    
          SUBROUTINE CLMOMS(IEC,NIMP,CMINFO,IWARN,IERROR,ECOR)
    
         Input: IEC    - PECO  number of cluster
                     or  ECOB  number of cluster
       Outputs: NIMP   - Number of photons 1 , 2 or 3+
                CMINFO - Additional information
                   (1) - Small sigma of cluster in Eigenframe
                   (2) - Large sigma of cluster in Eigenframe
                   (3) - Third moment of cluster in direction of ALAMS
                   (4) - Third moment of cluster in direction of ALAML
                   (5) - Mass of cluster if two photon cluster
                 * Item 6-8 not yet implemented
                   (6) - Corrected small sigma for one photon cluster
                   (7) - Corrected large sigma for one photon cluster
                   (8) - Corrected mass of cluster for one photon
                   (9) - QE of 1st Gam for two photon cluster
                  (10) - QX of 1st Gam for two photon cluster
                  (11) - QY of 1st Gam for two photon cluster
                  (12) - QZ of 1st Gam for two photon cluster
                  (13) - QE of 2nd Gam for two photon cluster
                  (14) - QX of 2nd Gam for two photon cluster
                  (15) - QY of 2nd Gam for two photon cluster
                  (16) - QZ of 2nd Gam for two photon cluster
                IWARN  - Warning flag
                         = 1 - invalid storey address ( not serious )
                         = 2 - < 6 storeys (NIMP is set to 1)
                IERROR - Error flag
                         = 1 - banks missing
                         = 2 - arrays too small for No of storeys in cluster
                         = 3 - E < 0
                         = 4 - bulos error
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     BULOS      Calculate eigenvariances cluster.
     CLMOMS     Guess the number of photons in a cluster on the basis of
     EBARYC     Barycenter calculation.
     EBCDRG     Region codes for the direction theta , phi.
     EBCLAP     Overlap correction to the cluster energy.
     EBCLCF     Coefficients of ecal clustering correction
     EBCOCL     Compute correction between cluster energy and total energy deposited
     EBCOHD     Hadronic energy.
     EBCONF     Calculate the configuration index.
     EBCOSI     Incidence angle by respect to the module.
     EBCRAD     Analysis for a photon hitting a barrel module near a crack.
     EBCREP     Set initial information in the ebenec common.
     EBDEVI     Standard deviation of a shower from the mean distribution.
     EBECMD     Analysis for a photon hitting an end cap module near a crack.
     EBGAGA     Multi gammas compactness.
     EBGENE     Generation of the fluctuated parameters of an electron shower.
     EBGRID     Contruct an array of storeys surrounding a central tower.
     EBHADR     Hadronic neutral clusters.
     EBHAHA     Hadrons for ebegid
     EBIMPA     Corrected impact estimation for a gamma.
     EBIMPC     Location of impact    -     crack or module.
     EBINIT     Banks initialisation.
     EBLEAK     Cluster corrected energy for longitudinal and transverse leakage.
     EBLONG     Longitudinal analysis of a neutral cluster.
     EBLPST     Conditional probability deduced from stacks configurations.
     EBNEUT     Analysis of a neutral cluster.
     EBOIDP     Stacks and modules contents.
     EBPARA     Calculation of the shower parameters from the stacks content.
     EBPHCC     Analysis of a photon in a crack proper.
     EBPREP     Prepare the analysis of a cluster.
     EBPRGA     Longitudinal analysis of a neutral cluster.
     EBRACK     Main routine for treatment of neutral clusters in crack regions of
     EBRANC     Steering routine for treatment of neutral clusters in crack regions
     EBRGCD     Region codes for the tower irow,jcol ( softwr 88-15 ).
     EBSATU     Saturation correction
     EBSHAP     Unormalized longitudinal shower distribution.several arguments.
     EBSHOW     Unormalized longitudinal shower distribution.one argument.
     EBSLIM     Stacks widths crossed along a projective line of flight.
     EBSTAK     Stacks contents when several modules.
     EBTRAN     Particle identification using transverse distribution.
     EBTZTH     Unpacks the ezth bank to find the zero suppression thresholds
     EBVLAP     Add overlap correction to the stack 1 of the endcap.
     EBYPHI     Convert local coordinate y ,orthogonal to a crack, to aleph
     ECLEAK     Cluster corrected energy for longitudinal and transverse leakage.
     ENOF4      Calculate normalised estimator for photon
     ENOL12     Calculate normalised estimator for photon
     ENOLWF     Calculate normalised xin using xparm parametrisation
     ENOW12     Calculate normalised estimator for photon
     GAPGID     Build pgid bank (result from ebneut )
     GBIMPA     Corrected impact estimation for a gamma.
     GBNEUT     Analysis of a neutral cluster.
     GBTRAN     Particle identification using transverse distribution.
     GVERCR     Calculate cluster coordinate

3 BULOS
         SUBROUTINE BULOS(T,P,E,N,IERROR)
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
   Calculate eigenvariances cluster.
     Find a two photon decomposition of cluster based on
     Eigenvariaces and 3rd moments in direction of major axis.
    Author    :       Nigel Keemer
    Modified  :       C.Goy             18/12/90
      Input: T      - 1st coordinate of elements (storeys)
             P      - 2nd coordinate of elements (storeys)
             E      - Energy of elements (storeys)
             N      - Number of storeys in cluster
    Outputs: IERROR - Error
                      = 1 - cluster energy < 0.
      Calls: None
   Bank ref: None
    ref: None
   Bank mod: None
    mod: BULIMP - Decomposition of cluster into two impacts
             BUINFO - Values of second and third moments in Eigenframe
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   CLMOMS                                                                          
        |---- BULOS                                                                
                   |----  ABS                                 External             
                   |----  ATAN2                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  AMAX1                               External             
                   |----  SQRT                                External             
   
 
3 CLMOMS
         SUBROUTINE CLMOMS(IEC,NIMP,CMINFO,IWARN,IERROR,ECOR)
  ------------------------------------------------------------------------------
    CKEY PHOTONS  / USER
  ------------------------------------------------------------------------------
   Guess the number of photons in a cluster on the basis of
    the clusters moments
    Author    :       Nigel Keemer
    Modified  :       C.Goy             18/12/90
      Input: IEC    - PECO  number of cluster
                  or  ECOB  number of cluster
    Outputs: NIMP   - Number of photons 1 , 2 or 3+
             CMINFO - Additional information
                (1) - Small sigma of cluster in Eigenframe
                (2) - Large sigma of cluster in Eigenframe
                (3) - Third moment of cluster in direction of ALAMS
                (4) - Third moment of cluster in direction of ALAML
                (5) - Mass of cluster if two photon cluster
              * Item 6-8 not yet implemented
                (6) - Corrected small sigma for one photon cluster
                (7) - Corrected large sigma for one photon cluster
                (8) - Corrected mass of cluster for one photon
                (9) - QE of 1st Gam for two photon cluster
               (10) - QX of 1st Gam for two photon cluster
               (11) - QY of 1st Gam for two photon cluster
               (12) - QZ of 1st Gam for two photon cluster
               (13) - QE of 2nd Gam for two photon cluster
               (14) - QX of 2nd Gam for two photon cluster
               (15) - QY of 2nd Gam for two photon cluster
               (16) - QZ of 2nd Gam for two photon cluster
             IWARN  - Warning flag
                      = 1 - invalid storey address ( not serious )
                      = 2 - < 6 storeys (NIMP is set to 1)
             IERROR - Error flag
                      = 1 - banks missing
                      = 2 - arrays too small for No of storeys in cluster
                      = 3 - E < 0
                      = 4 - bulos error
      Calls: VUNIT  - CERNLIB
             BULOS  - Internal
   Bank ref: PECO,   PEST,   ETDI    if POT
             ECOB,   ECLU,   ESDA    if JULIA
    ref: BULIMP - Decomposition of cluster into two impacts
             BUINFO - Values of second and third moments in Eigenframe
   Bank mod: None
    mod: None
    8/4/90
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGID                                                                          
        |---- CLMOMS                                                               
                   |----  NAMIND                              External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  CROSS                               External             
                   |----  VUNIT                               External             
                   |----  IBITS                               External             
                   |----  EINTST                                                   
                   |----  ESRBC                                                    
                   |----  VDOT                                External             
                   |----  BULOS                                                    
                   |----  EXP                                 External             
                   |----  SQRT                                External             
                   |----  VZERO                               External             
   
 
3 EBARYC
         SUBROUTINE EBARYC( NUST,INDX,ESTO,IKOD,BARY )
  ------------------------------------------------------------------------------
    CKEY PHOTONS BARYCENTER / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     05/10/89
   Barycenter calculation.
     The storeys are weighted with the raw signal.
     Input     : NUST    Number of storeys of the cluster ICLN.
                 INDX(1,IST) Theta index of the storey IST.
                 INDX(2,IST) Phi index of the storey IST.
                 INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
     Output    : IKOD(9)
                 1   Theta index of the barycenter tower.
                 2   Phi index of the barycenter tower.
                 3   Subcomponent number( 1 to 3 ).
                 4   Module number( 1 to 12 ).
                 5   Region number( 1 to 4 ).
                 6   1 or 2 if limit of region.
                 7   1 if endcap crack in the overlap.
                 8   1 , 2 , 3 or 4 if near a crack.
                 9   1 to 6:barrel/endcap overlap, 7:endcap/luminometer.
                 BARY(1) Theta of the barycenter in radians.
                 BARY(2) Phi of the barycenter in radians.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBARYC                                                               
                   |----  ESRBC                                                    
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
                   |----  EBCDRG                                                   
   
 
3 EBCDRG
           SUBROUTINE EBCDRG(TETA , PHI , ITRW , JFCL , KODE , NREG , IER)
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA REGION CODE / USER
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Region codes for the direction theta , phi.
     The position of the tower by respect to the cracks , the overlaps
     and the limits of region is coded in the KODE array.
     Crack : Hole between two modules of a same subdetector.
     Overlap : Junction between barrel (or luminometer) and endcap.
     Input  :  TETA   Theta angle.
               PHI    Phi angle.
     Output :  ITRW   Raw    | of the tower containing
               JFCL   Column | the theta , phi direction.
               KODE
                   KODE(1) (LRTM) 1 or 2 if limit of region.
                   KODE(2) (KSTM) 1 if endcap crack in the overlap.
                   KODE(3) (KRTM) 1 , 2 , 3 or 4 if near a crack.
                   KODE(4) (NVTM) 1 to 6 if barrel/endcap overlap.
                                  7 if endcap/luminometer.
               NREG(3)
                   NREG(1)   Subcomponent number( 1 to 3 ).
                   NREG(2)   Module number( 1 to 12 ).
                   NREG(3)   Region number( 1 to 4 ).
               IER    1 if tower row out of range.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Calls EFNDTW  EBRGCD
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
   MECRFC                                                                          
   EBARYC                                                                          
   EBCOCL                                                                          
   EBLONG                                                                          
        |---- EBCDRG                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  EFNDTW                                                   
                   |----  EBRGCD                                                   
   
 
3 EBCLAP
         SUBROUTINE EBCLAP( ILAP , NUST , INDX , ESTO , EVLP , IVLP )
  ------------------------------------------------------------------------------
    CKEY PHOTONS OVERLAP / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     05/10/89
   Overlap correction to the cluster energy.
     An estimation of the energy deposited in the overlap is calculated
     accordingly tothe method defined by the control word ILAP.
     Input     : ILAP    Control word.
                         = 0 JULIA method.
                         = 1 No correction.
                         = 2 Shape dependant method.
                 NUST    Number of storeys of the cluster ICLN.
                 INDX(1,IST) Theta index of the storey IST.
                 INDX(2,IST) Phi index of the storey IST.
                 INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
     Output    : EVLP    Estimated energy in the 5 theta overlap.
                 IVLP    Number of storeys in the overlap.
     BANKS :
       INPUT   : EGVP
       OUTPUT  : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBCLAP                                                               
                   |----  VLP                                 External             
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  ABS                                 External             
   
 
3 EBCLCF
         SUBROUTINE EBCLCF(CLCCO)
  ------------------------------------------------------------------------------
    CKEY PHOTONS ECAL CLUSTER CORRECTION
  ------------------------------------------------------------------------------
   Coefficients of ecal clustering correction
     Author: R.Edgecock - 900115
      Modified :- E. Lancon              2-MAY-1991
                         EPCC taken from setup scheme for MC
                  F.Ranjard              6-Oct-1992
                         use GTDBBK to get EPCC
   
    This routine calculates the coefficients that should be used for the
    ECAL clustering correction for given ROC Zero suppression thresholds
    for the endcaps. It assumes the clustering correction is of the form:
   
           D(E) = ALPHA*SQRT(E) + BETA*E, where D(E) is the correction to
                                          energy E and ALPHA and BETA are
                                          returned by this routine.
   
      WARNINGS!!
      ==========
                (1) This routine returns the default values of ALPHA and
                    BETA for the barrel as nobody has studied this yet;
                (2) It takes no account of the clustering thresholds
                    (currently 30 MeV);
                (3) It assumes that the stack 1 zero suppression threshold
                    is less than the clustering threshold;
                (4) It works upto a stack 2 threshold of 45 MeV and stack 3
                    threshold of 65 MeV.
   
      Input:     None
      Output:    CLCCO(Coeff,ECAL Component) is the array giving the
                 coefficients:
                              Coeff = 1 => Alpha
                                    = 2 => Beta
                          ECAL comp = 1 => Endcap A
                                      2 => Barrel
                                      3 => Endcap B
   
      Banks Used: EPCC (Stored on DataBase)
                  EZTH (Comes with run header)
   
    Should be called once at the start of each run
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBCOCL                                                                          
        |---- EBCLCF                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  EBTZTH                                                   
                   |----  ABS                                 External             
   
 
3 EBCOCL
          SUBROUTINE EBCOCL(METH,NUST,PHOT,CORR)
  ------------------------------------------------------------------------------
    CKEY PHOTONS CORRECTION STOREY THRESHOLD / INTERNAL
  ------------------------------------------------------------------------------
         AUTHOR :        JP Albanese - 891010
                         R.Edgecock  - 900115
   Compute correction between cluster energy and total energy deposited
    in ECAL. For now, use the same idea as the original, and calculate
    the required parameters on the first entry only. This can be modified
    later if the thresholds start varying between modules.
     Input     :    METH Option index.
                    NUST      Number of storeys
                    PHOT      Raw energy , stacks content ,...
     Output    :    CORR      Correction factor.
     Banks     Input     RUNH
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBCOCL                                                               
                   |----  NAMIND                              External             
                   |----  EBCLCF                                                   
                   |----  EBCDRG                                                   
                   |----  ABS                                 External             
                   |----  SQRT                                External             
   
 
3 EBCOHD
         SUBROUTINE EBCOHD( PHOT , CORH )
  ------------------------------------------------------------------------------
    CKEY PHOTONS HADRON CORRECTION / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier   09/10/89
   Hadronic energy.
     The energy is corrected by the pion/electron ratio.
     Input  :    PHOT    Number of storeys of the cluster ICLN.
     Output :    CORH     Hadronic correction factor.
     BANKS :
       INPUT   : ECNS
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBHADR                                                                          
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBCOHD                                                               
                   |----  NAMIND                              External             
   
 
3 EBCONF
         SUBROUTINE EBCONF( STAC , KLAS )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA CONFIGURATION / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Calculate the configuration index.
     The 3 stacks are compared to fixed thresholds in order to find
     the configuration index of the cluster.
     A configuration class is defined by respect to the  following
     thresholds :
     Stack 1 :.050 Gev , Stack 2 :.070 Gev , Stack 3 :.100 Gev
     IF( Stack(k) .GE. Threshold(k) ) Ik = 1
                  ELSE                Ik = 0
                  KLAS = I1 + 2 * I2 + 4 * I3
     KLAS    :    0    1    2    3    4    5    6    7
     Stack 1 :    -    +    -    +    -    +    -    +
     Stack 2 :    -    -    +    +    -    -    +    +
     Stack 3 :    -    -    -    -    +    +    +    +
     Input : STAC(3)     Stacks content in Gev.
     Output: KLAS        Stack configuration index.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Called by EBPRGA  EBLPST
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBLPST                                                                          
   EBPRGA                                                                          
        |---- EBCONF.                                                              
   
 
3 EBCOSI
         SUBROUTINE EBCOSI( TETA , PHI , ISC , COSI )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA INCIDENCE /  INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Incidence angle by respect to the module.
     COSI is the cosinus of the incidence angle on the module
     layer accordingly to the classical optical definition.
     Input : TETA        Polar angle in radians.
             PHI         Azimuthal angle in radians.
             ISC         Subcomponent number.
     Output: COSI        Cosinus of the incidence angle.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Calls EFNDMD , ENTREE
     Called by EBPRGA , EBLPST , EBSLIM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBLPST                                                                          
   EBPRGA                                                                          
   EBSLIM                                                                          
        |---- EBCOSI                                                               
                   |----  COS                                 External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  EFNDMD                                                   
                   |----  ENTREE                                                   
   
 
3 EBCRAD
         SUBROUTINE EBCRAD
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK BARREL / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   :  J.Badier   29/11/89  ( from R. Clifft )
   Analysis for a photon hitting a barrel module near a crack.
    Calculate a corrected energy and a position.
    Use data from crack clusters within functions derived empirically
    from Monte Carlo studies which relate the energy ratios RATIO1
    and RATIO2 to missing energy and impact coordinate
       called by      EBRANC
       calls          NONE
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBRANC                                                                          
        |---- EBCRAD                                                               
                   |----  SQRT                                External             
   
 
3 EBCREP
         SUBROUTINE EBCREP( ECLS , CLUR  )
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK IDENTIFICATORS / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   :  R.Clifft   08/06/88
                 J.Badier   18/07/89
                 J.Badier   29/11/89
   Set initial information in the ebenec common.
          RATIO1  energy of last pad row/total energy ,for ECAL module
                  wuth greater energy
          RATIO2  energy of lesser energy module/total cluster energy
     Input     ECLS(3,3)
               CLUR(3,3,3)
       called by      EBRACK
       calls          EBCOSI
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBRACK                                                                          
        |---- EBCREP                                                               
                   |----  KODEEB                              External             
   
 
3 EBDEVI
         SUBROUTINE EBDEVI( NATU , ENER , ALPH , BETA , ECAR )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA DEVIATION / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Standard deviation of a shower from the mean distribution.
     Input :   NATU      Type of initial particle
                     1 : Electron ( E > .1 Gev )
                     2 : Photon.
                     3 : Pi0.
                     4 : Electron ( E < .1 Gev )
                     5 : Pi0 from an interacting hadron.
               ENER      Initial particle energy in Gev.
               ALPH      Alpha shower parameter.
               BETA      Beta shower parameter.
     Output :  ECAR(1)   Standard deviation of 1. / Alpha.
               ECAR(2)   Standard deviation of Beta / Alpha.
                         Both set to 10. if uncalculable.
     BANKS :
       INPUT   : EGPA    Parameters of a mean shower.
       OUTPUT  : NONE
       CREATED : NONE
     Called by EBPRGA
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBPRGA                                                                          
        |---- EBDEVI                                                               
                   |----  NAMIND                              External             
                   |----  ALOG                                External             
                   |----  SQRT                                External             
   
 
3 EBECMD
         SUBROUTINE EBECMD
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK ENERGY POSITION / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : R.Clifft 08/06/88
                J.Badier 29/11/89
   Analysis for a photon hitting an end cap module near a crack.
    Calculate a corrected energy and a position.
    Use data from crack clusters within functions derived empirically
    from Monte Carlo studies which relate the energy ratios RATIO1
    and RATIO2 to missing energy and impact coordinate
       called by      EBCRAD
       calls          NONE
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBRANC                                                                          
        |---- EBECMD                                                               
                   |----  KODEEB                              External             
                   |----  NREGEB                              External             
                   |----  FLOAT                               External             
                   |----  EXP                                 External             
                   |----  YLIMIT                              External             
   
 
3 EBGAGA
         SUBROUTINE EBGAGA( KOUIN , GAM1 , GAM2 )
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier   18/06/90
   Multi gammas compactness.
                 KOUIN   = 0 Input
                         = 1 Output
                 GAM1    First gamma
                 GAM2    Second gamma
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBTRAN                                                                          
        |---- EBGAGA.                                                              
   
 
3 EBGENE
         SUBROUTINE EBGENE( NATU , ENER , ALPH , BETA , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS SHOWER PARAMETER / USER
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Generation of the fluctuated parameters of an electron shower.
     Input :   NATU      Type of initial particle
                     1 : Electron ( E > .1 Gev )
                     2 : Photon.
                     3 : Pi0.
                     4 : Electron ( E < .1 Gev )
                     5 : Pi0 from an interacting hadron.
               ENER      Initial particle energy in Gev.
     Output :  ALPH      Alpha shower parameter.
               BETA      Beta shower parameter.
               IER       Error, no generation.
                         0 : OK
                         1 : missing bank
                         2 : energy out of range
     BANKS :
       INPUT   : EGPA    Parameters of a mean shower.
       OUTPUT  : NONE
       CREATED : NONE
     Calls NAMIND
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EBGENE                                                               
                   |----  NAMIND                              External             
                   |----  ALOG                                External             
                   |----  RANNOR                              External             
                   |----  SQRT                                External             
   
 
3 EBGRID
           SUBROUTINE EBGRID( NUST,INDX,ESTO,ITCR,JFCR,GRID)
  ------------------------------------------------------------------------------
    CKEY PHOTONS ARRAY CLUSTER STOREYS / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier   01/09/89
   Contruct an array of storeys surrounding a central tower.
     Input  :  NUST    Number of storeys of the cluster.
               INDX(1,IST) Theta index of the storey IST.
               INDX(2,IST) Phi index of the storey IST.
               INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
               ITCR      Central tower theta index
               JFCR      Central tower phi index
     Output :  GRID(IT,JF,KS)
                         Content of storeys surounding the central tower.
                         IT = Theta index (1 to 3)
                         JF = Phi index   (1 to 3)
                         KS = Stack       (1 to 3)
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
   EBNEUT                                                                          
   EBTRAN                                                                          
   GBNEUT                                                                          
   GBTRAN                                                                          
        |---- EBGRID                                                               
                   |----  RID                                 External             
                   |----  EBRGCD                                                   
                   |----  MIN                                 External             
                   |----  EMDTOW                                                   
                   |----  ABS                                 External             
                   |----  SIGN                                External             
   
 
3 EBHADR
         SUBROUTINE EBHADR(IHAD,NUST,INDX,ESTO,PHOT,NATU,GAMM)
  ------------------------------------------------------------------------------
    CKEY PHOTONS HADRON / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier   09/10/89
   Hadronic neutral clusters.
     The energy is corrected by the pion/electron ratio.
     A transverse analysis is performed (not yet implemented)
     Input  :    IHAD    Correction option.
                 NUST    Number of storeys of the cluster ICLN.
                 INDX(1,IST) Theta index of the storey IST.
                 INDX(2,IST) Phi index of the storey IST.
                 INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
                 PHOT
     Output :    NATU(1)  Transverse identification.
                 NATU(2)  Nature of the first identified particle.
                 NATU(3)  Nature of the second identified particle.
                 GAMM(1)  First transverse estimator : proportion of
                          energy in the four central towers.
                 GAMM(2)  Second transverse estimator : deviation from the
                          mean shape of a single photon. The distribution
                          is a normal law for an isolated gamma.
                 GAMM(3)  Best estimate of the first particle energy (Gev)
                 GAMM(4)  Teta line of flight of the first particle.
                 GAMM(5)  Phi line of flight of the first particle.
                 GAMM(6)  Best estimate of the 2nd particle Energy (Gev)
                 GAMM(7)  Teta line of flight of the second particle.
                 GAMM(8)  Phi line of flight of the second particle.
                 IER      Error code
                          = 0 No error.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBHADR                                                               
                   |----  EBCOHD                                                   
   
 
3 EBHAHA
         SUBROUTINE EBHAHA( IFOT , PHOT , ENHAD )
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier   18/06/90
   Hadrons for ebegid
    Input  :     IFOT    Integer array of EBNEUT
                 PHOT    Real array of EBNEUT
    Output :     ENHAD   Hadronic energy
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EBHAHA.                                                              
   
 
3 EBIMPA
         SUBROUTINE EBIMPA( ITET , JPHI , BARI , BARJ , GERB )
  ------------------------------------------------------------------------------
    CKEY PHOTONS IMPACT / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier   31/10/88
   Corrected impact estimation for a gamma.
     Input   : ITET    Tetha index of a tower.
               JPHI    Phi index of a tower.
               BARI    { Barycenter coordinates by respect to the
               BARJ    { tower center expressed in pads units.
     Output  : GERB    Calculated impact on the first EMCAL plane.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBTRAN                                                                          
        |---- EBIMPA                                                               
                   |----  ESRPT                                                    
                   |----  ABS                                 External             
   
 
3 EBIMPC
         SUBROUTINE EBIMPC( IFLG )
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK IMPACT / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : R.Clifft 08/06/88
                 J.Badier   29/11/89
   Location of impact    -     crack or module.
       called by      EBRACK
       calls          NONE
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBRANC                                                                          
        |---- EBIMPC.                                                              
   
 
3 EBINIT
         SUBROUTINE EBINIT (IRET)
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA INITIALISATION / USER
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Banks initialisation.
    OUTPUT : IRET / I  return code
                       (=0 means OK, =1 means D.B. missing banks)
     BANKS :
       INPUT   : EGST
                 EGVP
                 EGPA
                 EGMD
                 EGTH
                 ECNS
                 ECLK
       OUTPUT  : NONE
     Calls  NAMIND , JUNIDB , MDARD
     Called by USER.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEX                                                                          
        |---- EBINIT                                                               
                   |----  JUNIDB                              External             
                   |----  NAMIND                              External             
                   |----  MDARD                               External             
   
 
3 EBLEAK
         SUBROUTINE EBLEAK( METH , STAC , ANGL , ECOR )
  ------------------------------------------------------------------------------
    CKEY PHOTONS LEAKAGE / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    15/06/89
                            10/10/89
   Cluster corrected energy for longitudinal and transverse leakage.
     Input : METH        Correction option.
             STAC(3)     Stacks content.
             ANGL(2)     Polar and azimuthal angles in radians.
     Output: ECOR        Corrected energy.
     BANKS :
       INPUT   : ECLK  Correction parameters.
                 EGTH
       OUTPUT  : NONE
       CREATED : NONE
     Calls none.
     Called by ECOENT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBLEAK                                                               
                   |----  NAMIND                              External             
                   |----  ALOG                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  INT                                 External             
                   |----  EBSLIM                                                   
                   |----  EXP                                 External             
   
 
3 EBLONG
         SUBROUTINE EBLONG( STAC , TETA , PHI , ITY2 , ITY3 , SHAP , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA LONGITUDINAL / USER
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Longitudinal analysis of a neutral cluster.
     A first e.m./hadron separation is obtained from the configuration
     of the hitted stacks. Later a more refined treatment leads to
     identification parameters. A set of standard cut'off is proposed.
     It is clear that they are physic dependant.
     Input  :  STAC(3)   3 stacks contents.
               TETA      Polar angle (radians)
               PHI       Azimuthal angle (radians)
     Output :  ITY2      Identification indice.
                         0 : Electromagnetic.
                         1 : Hadronic
                         2 : Ambiguous
               ITY3      Gives the available identifiers.
                         0 : SHAP(1) and SHAP(2) are available.
                         1 : SHAP(1) is available.
                         2 : SHAP(2) is available.
                         3 : The two identifiers are not available.
               SHAP      Identification parameters.
               SHAP(1)   1 : Materialisation depth.
               SHAP(2)   2 : Deviation from the mean shape.
               IER       Error code.
                         0 : No error
                         1 : Missing bank.
                         2 : Too many storeys
                         3 : No storey in this cluster.
                         4 : Energy > EMIN = .05
                         5 : Energy < EMIN = 80.
                        -1 : Truncated endcap , 3 stacks.
                        -2 : Truncated endcap , 2 stacks.
                        -3 : Overlap near endcap , 2 stacks.
                        -4 : Overlap near endcap , 3 stacks.
                        -5 : Overlap near barrel.
                        -6 : Truncated barrel , 2 stacks.
                        -7 : Truncated barrel , 3 stacks.
                       -11 : Crack.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Calls EBLPST , EBPRGA
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBLONG                                                               
                   |----  EBLPST                                                   
                   |----  EBPRGA                                                   
                   |----  ABS                                 External             
                   |----  EXP                                 External             
                   |----  EBCDRG                                                   
   
 
3 EBLPST
         SUBROUTINE EBLPST( STAC , TETA , PHI , KLAS , PROB , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA PROBABILITY / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Conditional probability deduced from stacks configurations.
     The 3 stacks are compared to fixed thresholds in order to find
     the configuration index of the cluster. The proportion of gammas
     belonging to a same configuration depends of the total energy and
     of the incidence angle. The EGST table contains these proportions
     deduced from a Monte Carlo simulation. This routine performs an
     interpolation into the EGST table.
     This algorithm is not valid in the cracks and overlaps regions.
     Input : STAC(3)     Stacks content in Gev.
             TETA        Polar angle in radians.
             PHI         Azimuthal angle in radians.
     Output: KLAS         Configuration class.
             PROB         Estimated probability.
             IER          Error code.
                     = 0  No error.
                     > 0  Fatal error.
                     < 0  Overlap.
                     = 1  Missing bank.
                     = 4  Energy < EMIN = .05
                     = 5  Energy > EMAX = 80.
                     = 6  Petal inner edge
                     = -1 Truncated endcap.
                     = -3 Overlap.
                     = -6 Truncated barrel.
     BANKS :
       INPUT   : EGST  Proportion of gammas per configuration.
                 EGTH  Limits on the theta angle.
       OUTPUT  : NONE
       CREATED : NONE
     Calls EBCONF , EBCOSI
     Called by EBLONG
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBLONG                                                                          
        |---- EBLPST                                                               
                   |----  NAMIND                              External             
                   |----  ALOG                                External             
                   |----  EBCOSI                                                   
                   |----  EBCONF                                                   
                   |----  EXP                                 External             
   
 
3 EBNEUT
         SUBROUTINE EBNEUT( ICLN , IOPT , IFOT , PHOT , CORE , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS NEUTRAL CLUSTER ANALYSIS / USER
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     04/10 89
   Analysis of a neutral cluster.
     ICLN is the number of the cluster as defined in JULIA ( row number
     in ECLU or ECOB ) and in the POT ( row number in PECO or PEOB ).
     IOPT(6) is an array of control words defining the corrections to be
     applied to the energies estimations.
     IFOT(19) and PHOT(20) are respectively integer and real arrays
     containing the results of the analysis.This information is calculate
     using only the storeys of the cluster ICLN.
     IER is an error code.
     Input     : ICLN    Cluster number.
                 IOPT    Corrections control words.
                         IOPT(N)  =    0 : JULIA method.
                                       1 : No correction.
                                      >1 : Other method to be defined.
                         N = 1  :  Overlap correction.
                         N = 2  :  Crack correction.
                         N = 3  :  Leakage correction.
                         N = 4  :  Clusterisation correction.
                         N = 5  :  Saturation correction.
                         N = 6  :  Hadronic energy estimation.
    :
            IFOT Integer output array.
                 1   Theta index of the barycenter tower.
                 2   Phi index of the barycenter tower.
                 3   Subcomponent number( 1 to 3 ).
                 4   Module number( 1 to 12 ).
                 5   Region number( 1 to 4 ).
                 6   1 or 2 if limit of region.
                 7   1 if endcap crack in the overlap.
                 8   1 , 2 , 3 or 4 if near a crack.
                 9   1 to 6:barrel/endcap overlap, 7:endcap/luminometer.
                10   Cluster extension covering several regions.
                         = 0 for 1 region,
                         = 1 for 2 regions (NR and NR+1), the greatest
                            signal belonging to region NR+1,
                         = 2 for 2 regions (NR and NR+1), the greatest
                             signal belonging to region NR,
                11   Overlap and crack in the secondary detector.
                12   Cluster covering two modules (MD and MD+1) : crack.
                         in the same detector.
                         = 1 the main module is MD+1.
                         = 2 the main module is MD.
                13   Cluster extension covering two detectors : overlap.
                         = 1 the barrel is the main detector,
                         = 2 the endcap is the main detector,
                         = 3 there is an overlap with the luminometer
                14   Concerns the cluster analysis method.
                         = 0 , 9 : Standard.
                         = 10,19 : Crack between modules.
                         = 20,29 : Overlap between detectors.
                         = 30.39 : Crack in the overlap.
                         = 40,49 : Dead storey.
                15   Validity of the two longitudinal estimators.
                         The first one ( PHOT(7) ) is the starting depth
                         of the shower.The second one ( PHOT(8) ) is the
                         deviation of the shower shape from the mean
                         expected shape. Such quantities may be
                         uncalculable :
                          = 0 : The two identificators may be used.
                          = 1 : Only the first one may be used.
                          = 2 : Only the second one may be used.
                          = 3 : The two identificators are uncalculable.
                16   Concerns the nature of the hypothesis
                          = 0 : The cluster is unambiguously identified
                          as an electromagnetic object.
                          = 1 : The cluster is unambiguously identified
                          as an hadronic object.
                          = 2 : The cluster identification is ambiguous.
                17   Concerns the transverse identification.
                          It depends of the nature of the hypothesis.
                          If IFOT(7) is 0 or 2 ( electromagnetic ) :
                          = 0 : Single isolated gamma.
                          = 1 : Unresolved multi gammas.
                          = 2 : One gamma extracted from a multi gammas.
                          = 3 : Two gammas extracted from the cluster.
                          If IFOT(7) is 1 ( hadronic ) :
                          = 0 : Purely hadronic cluster.
                          = 1 : Mixed cluster.
                          = 2 : One gamma extracted from the cluster.
                18   Nature of the first identified particle.
                          =  1    Isolated gamma
                          =  2    Gamma from multi gammas cluster.
                          =  3    Gamma from identified Pi0.
                          = 10    Unresolved gamma-gamma.
                          = 17    ECAL fraction of a neutral hadron.
                19   Nature of the second identified particle.
                          =  0    No second particle.
                          =  2    Gamma from multi gammas neutral cluster
                          =  3    Gamma from identified Pi0.
                          = 12    Residual e.m. energy.
                          = 17    ECAL fraction of a neutral hadron.
            PHOT Real output array.
                 1   Raw Energy (Gev)
                 2   Proportion of raw energy in stack 1. "Stack 1" is
                     defined properly for the overlap region according to
                     the tower number.
                 3   Proportion of raw energy in stack 2. "Stack 2" is
                     defined properly for the overlap region according to
                     the tower number.
                 4   Energy (Gev) corrected for geometrical effects
                     (cracks,detector,overlap, dead storeys,leakage,
                     clusterisation) accordingly to the IOPT array.
                 5   Barycenter : Theta coordinate in radians.
                 6   Barycenter : Phi coordinate in radians.
                 7   First longitudinal estimator : materialisation
                     depth in radiation lengthes.
                 8   Second longitudinal estimator : deviation from the
                     mean shape. The distribution of this variable is a
                     normal law for the photonic showers.
                 9   Crack estimator 1 : Main module energy.
                10   Crack estimator 2 : Energy of the row adjacent to
                                         the crack.
                11   Crack estimator 3 : Energy ratio stack 1+2 / 1+2+3
                12   First transverse estimator : proportion of energy in
                     the four central towers.
                13   Second transverse estimator : deviation from the mea
                     shape of a single photon. The distribution is a
                     normal law for an isolated gamma.
                14   Best estimate of the first particle Energy (Gev)
                     All corrections defined in IOPT have been applied.
                15   Teta line of flight of the first particle.
                16   Phi line of flight of the first particle.
                17   Best estimate of the second particle Energy (Gev)
                     All corrections defined in IOPT have been applied.
                18   Teta line of flight of the second particle.
                19   Phi line of flight of the second particle.
                20   Corrected energy in the hadronic hypothesis.
           CORE      Applied corrections accordingly to IOPT.
           IER       Error code.
                     = 0  No error.
                     > 0  Fatal error.
                     < 0  Overlap or crack.
                     = 1  Missing bank.
                     = 2  Too many storeys
                     = 3  No storey in this cluster.
                     = 4  Energy < EMIN = .05
                     = 5  Energy > EMAX = 80.
                     = 6  Petal inner edge
                     = 7  Pathologic cluster.
                     = -1 Truncated endcap , 3 stacks.
                     = -2 Truncated endcap , 2 stacks.
                     = -3 Overlap near endcap , 2 stacks.
                     = -4 Overlap near endcap , 3 stacks.
                     = -5 Overlap near barrel.
                     = -6 Truncated barrel , 2 stacks.
                     = -7 Truncated barrel , 3 stacks.
                     =-11 Crack.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              EBNEUT                                                               
                   |----  EBPREP                                                   
                   |----  EBOIDP                                                   
                   |----  EBCLAP                                                   
                   |----  EBARYC                                                   
                   |----  EBSTAK                                                   
                   |----  EBVLAP                                                   
                   |----  EBLONG                                                   
                   |----  EBLEAK                                                   
                   |----  EBCOCL                                                   
                   |----  EBGRID                                                   
                   |----  EBRACK                                                   
                   |----  EBTRAN                                                   
                   |----  EBSATU                                                   
                   |----  EBHADR                                                   
                   |----  EBCOHD                                                   
   
 
3 EBOIDP
         SUBROUTINE EBOIDP(NUST , INDX , ESTO , ICRE , MODU , ECLS )
  ------------------------------------------------------------------------------
    CKEY PHOTONS STACKS MODULE EXTENSION / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     25/09/89
   Stacks and modules contents.
     Input     : NUST    Number of storeys of the cluster ICLN.
                 INDX(1,IST) Theta index of the storey IST.
                 INDX(2,IST) Phi index of the storey IST.
                 INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
     Output    : ICRE(4)    Describe the cluster extension over
                            several modules.
                 MODU(M,1)  Module number of the module M.
                 MODU(M,2)  Subcomponent number of the module M.
                 ECLS(K,M)  Content of the stack K in the module M.
                         Up to 3 modules ordered as decreasing energies.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBOIDP                                                               
                   |----  EMDTOW                                                   
   
 
3 EBPARA
         SUBROUTINE EBPARA(STAC , ETAG , ALPH , BETA , IBON)
  ------------------------------------------------------------------------------
    CKEY PHOTONS SHAPE / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Calculation of the shower parameters from the stacks content.
     The shower is supposed to have a shape described by :
              S ** (Alpha) * exp(-Beta)
     The Alpha and Beta parameters are calculated from the stacks
     limits and contents.
    Input :   STAC   3 stacks contents in Gev.
              ETAG   6 stacks limits in rad. lengthes.
    Output:   ALPH   Estimated parameter Alpha.
              BETA   Estimated parameter Beta.
              IBON   Rejection code :
                     = 0 : ALPH and BETA calculated.
                     > 0 :  "        "   uncalculated.
                     = -1: ALPH = 1. and BETA calculated.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Calls  EBSHOW , EBSHAP , GAUSS
     Called by EBPRGA
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBPRGA                                                                          
        |---- EBPARA                                                               
                   |----  ALOG                                External             
                   |----  EBSHAP                                                   
                   |----  GAUSS                               External             
                   |----  EBSHOW                                                   
   
 
3 EBPHCC
         SUBROUTINE EBPHCC( JREG )
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK ENERGY POSITION / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : R.Clifft 08/06/88
                 J.Badier   29/11/89
   Analysis of a photon in a crack proper.
    Calculate a corrected energy and a position.
     Input  :  JREG  Region index.
       called by      EBRANC
       calls          NONE
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBRANC                                                                          
        |---- EBPHCC                                                               
                   |----  YLIMIT                              External             
                   |----  SIGN                                External             
                   |----  ALOG                                External             
   
 
3 EBPREP
         SUBROUTINE EBPREP( MXST , ICLN , NUST , INDX , ESTO , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS ARRAY STOREYS / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     25/09/89
   Prepare the analysis of a cluster.
     The storeys of the cluster ICLN are stored in the INDX and ESTO
     arrays. The number of storeys has to be greater than MXST.
     The storeys are searched in the ESDA bank , then if ESDA is missing
     in the PEST and ETDI banks.
     Input     : MXST    Maximum number of storeys.
                 ICLN    Cluster number.
     Output    : NUST    Number of storeys of the cluster ICLN.
                 INDX(1,IST) Theta index of the storey IST.
                 INDX(2,IST) Phi index of the storey IST.
                 INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
                 IER     = 0 No error.
                         = 1 Storeys bank missing.
                         = 2 More than MXST storeys.
                         = 3 No storey in the cluster.
                         = 4 Energy < EMIN
                         = 5 Energy > EMAX
     BANKS :
       INPUT   : ESDA or PEST,ETDI.
       OUTPUT  : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBPREP                                                               
                   |----  NAMIND                              External             
                   |----  IBITS                               External             
   
 
3 EBPRGA
         SUBROUTINE EBPRGA( STAC , TETA , PHI , ITY3 , SHAP , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA DEPTH PROBABILITY / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Longitudinal analysis of a neutral cluster.
     Using the stacks content one estimates the materialisation depth and
     the deviation from average shower parameters. These quantities are
     are named shape parameters and stored into SHAP(1) and SHAP(2). The
     information that they cannot be calculated is stored in ITY3.
     If 3 stacks are above the thresholds ( KLAS = 7 ) , SHAP(1) and
          SHAP(2) are estimated, the electromagnetic nature of the cluster
          is deduced from their values. ITY3 is set to 0 .
          The distribution in the 3 stacks may be such incompatible with
          an electromagnetic shower that the shape parameters are not
          calculable. ITY3 is set to 3 .
     If stacks 1 and 2 ( KLAS = 3 ) or stacks 2 and 3 ( KLAS = 6 ) are
          above the thresholds the materialisation depth is evaluated from
          a parametrisation .
          Class 3 : SHAP(1) = exp( A + B * R )
          Class 6 : SHAP(1) = A + B * R
          R is the ratio of the stack 2 to the total energy.
          A and B are linear functions of AI and ENLG with coefficients
          stored in the EGMD bank.
          AI = 1. / cos(incidence) - 1. , ENLG = ALOG( energy )
          SHAP(2) cannot be calculated, ITY3 is set to 1.
     If only one stack is above the threshold the materialsation depth
          may be estimated with a precision of the stack size. ITY3 is
          set to 1.
     If the stack 2 is under the threshold the cluster is considered
          as hadronic. ITY3 is set to 3.
     Using KLAS , ITY3 , SHAP(1) and SHAP(2) a decision concerning the
     cluster nature can be performed.
     Input  :  STAC(3)   3 stacks contents.
               TETA      Polar angle expressed in radians.
               PHI       Azimuthal angle in radians.
     Output :  ITY3      Gives the available identifiers.
                         0 : SHAP(1) and SHAP(2) are available.
                         1 : SHAP(1) is available.
                         3 : The two identifiers are not available.
               SHAP(2)   Identification parameters.
                         1 : Materialisation depth.
                         2 : Deviation from the mean shape.
               IER       Error code.
                         0 : No error
                         1 : Missing bank.
                         2 : Too many storeys
                         3 : No storey in this cluster.
                         4 : Energy > EMIN = .05
                         5 : Energy < EMIN = 80.
                        -1 : Truncated endcap , 3 stacks.
                        -2 : Truncated endcap , 2 stacks.
                        -3 : Overlap near endcap , 2 stacks.
                        -4 : Overlap near endcap , 3 stacks.
                        -5 : Overlap near barrel.
                        -6 : Truncated barrel , 2 stacks.
                        -7 : Truncated barrel , 3 stacks.
                       -11 : Crack.
     BANKS :
       INPUT   : EGMD , EGTH
       OUTPUT  : NONE
       CREATED : NONE
     Called by  EBLONG
     Calls EBCONF , EBSLIM , EBPARA , EBDEVI , EBCOSI
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBLONG                                                                          
        |---- EBPRGA                                                               
                   |----  NAMIND                              External             
                   |----  EBCONF                                                   
                   |----  EBSLIM                                                   
                   |----  EBPARA                                                   
                   |----  EBDEVI                                                   
                   |----  SIGN                                External             
                   |----  SQRT                                External             
                   |----  EBCOSI                                                   
                   |----  ALOG                                External             
                   |----  ABS                                 External             
                   |----  EXP                                 External             
                   |----  JERSHAP                             External             
   
 
3 EBRACK
            SUBROUTINE EBRACK(ITMX,CLUR,ECLS,ICRE,CRAC,IFLG)
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK MAIN / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   :  R.Clifft   08/06/88
                 J.Badier   29/11/89
   Main routine for treatment of neutral clusters in crack regions of
      ECAL.( Crack clusters )
     The general procedure which uses ECAL storey energies only makes
     use of the ratios :
          RATIO1  energy of last pad row/total energy ,for ECAL module
                  wuth greater energy
          RATIO2  energy of lesser energy module/total cluster energy
     These ratios are used in empirical relations derived from Monte Carlo
     studies to evaluate an energy and position for an assumed incident
     photon. For particles calculated to have impinged on a sensitive
     region of ECAL near a crack, a final energy and phi coordinate is
     output.For the others where in general most of the energy does not
     enter ECAL, a nominal energy correction is made.In this case a final
     correction requires the use of HCAL data together with particle
     hypothesis assumptions and hence will be made elsewhere.
     Input     ITMX(1)     Theta index of higher storey.
               ITMX(2)     Phi index of the higher storey.
               CLUR(3,3,3) Storeys surrounding the stack 2 storey
                           in the TETA,PHI direction.
               ECLS(3,3)   Stacks content for each hitted module.
               ICRE(4)     Extension code( region,crack in overlap,crack,
                           overlap)
     Output    CRAC(5)
                         1 Corrected energy
                         2 Corrected azimuth
                         3 Main module energy
                         4 Energy of the pad row adjacent to the crack
                         5 Energy ratio stack 1+2 / 1+2+3 .
               IFLG        Treatment flag
                        <0 No treatment : CRAC(I) = .0 , I=1,5
                         0 An energy estimation is given, but the standard
                           one is recommended.
                         1 Energy and azimuth are estimated, the standard
                           identification is valid.
                         2 Energy and azimuth are estimated,the standard
                           identification is wrong,the HCAL information
                           is necessary to terminate the treatment.
       called by      USER
       calls          EBTSTC,EBCREP,EBRANC
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBRACK                                                               
                   |----  EBRGCD                                                   
                   |----  KODEEB                              External             
                   |----  ESRPT                                                    
                   |----  SQRT                                External             
                   |----  NREGEB                              External             
                   |----  EBCREP                                                   
                   |----  EBRANC                                                   
   
 
3 EBRANC
         SUBROUTINE EBRANC( IFLG )
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK STEERING / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   :  R.Clifft   08/06/88
                 J.Badier   29/11/89
   Steering routine for treatment of neutral clusters in crack regions
     A photon is estimated in a crack proper ( IFLG = 2 ) or in the
     module near the crack ( IFLG = 1 ).
     No correction if no energy in pad rows next to crack and IFLG = 0
     Barrel and endcap have not the same treatment.
     Input     NONE
     Output    IFLG   Treatment flag.
       called by      EBRACK
       calls          EBIMPC,EBCRAD ,EBECMD,EBPHCC,EBYPHI
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBRACK                                                                          
        |---- EBRANC                                                               
                   |----  EBIMPC                                                   
                   |----  NREGEB                              External             
                   |----  EBCRAD                                                   
                   |----  EBECMD                                                   
                   |----  KODEEB                              External             
                   |----  EBPHCC                                                   
                   |----  EBYPHI                                                   
   
 
3 EBRGCD
           SUBROUTINE EBRGCD( IROW , JCOL , KODE , NREG , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA REGION CODE / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Region codes for the tower irow,jcol ( softwr 88-15 ).
     The position of the tower by respect to the cracks , the overlaps
     and the limits of region is coded in the KODE array.
     Crack : Hole between two modules of a same subdetector.
     Overlap : Junction between barrel (or luminometer) and endcap.
     Input  :  IROW   Tower number along theta.
               JCOL   Tower number along phi.
     Output :  KODE(4)
                   KODE(1) (LRTM) 1 or 2 if limit of region.
                   KODE(2) (KSTM) 1 if endcap crack in the overlap.
                   KODE(3) (KRTM) 1 , 2 , 3 or 4 if near a crack.
                   KODE(4) (NVTM) 1 to 6 if barrel/endcap overlap.
                                  7 if endcap/luminometer.
               NREG(3)
                   NREG(1)   Subcomponent number( 1 to 3 ).
                   NREG(2)   Module number( 1 to 12 ).
                   NREG(3)   Region number( 1 to 5 ).
               IER    1 if tower row out of range.
                      2 if tower column out of range.
                      0 OK
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Calls EMDTOW
     Called by EBCDRG
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBGRIX                                                                          
   EBCDRG                                                                          
   EBGRID                                                                          
   EBRACK                                                                          
        |---- EBRGCD                                                               
                   |----  EMDTOW                                                   
                   |----  MIN                                 External             
                   |----  MOD                                 External             
   
 
3 EBSATU
         SUBROUTINE EBSATU(ISAT , NATU , ENER , CORR )
  ------------------------------------------------------------------------------
    CKEY PHOTONS SATURATION / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     05/10/89
   Saturation correction
     The correction is applied to the isolated gammas.
     Input     : ISAT    Control word.
                 NATU    Particle nature.
                 ENER    Energy
     Output    : CORR    Correction factor.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBSATU                                                               
                   |----  KIAVER                                                   
   
 
3 EBSHAP
         SUBROUTINE EBSHAP( S , ALPH , BETA , INIT , VALE )
  ------------------------------------------------------------------------------
    CKEY PHOTONS GAMMA SHAPE / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Unormalized longitudinal shower distribution.several arguments.
             EBSHAP = S ** (Alpha) * exp(-Beta)
     Input : S      Longitudinal abcissa expressed in rad.l.
             ALPH   Alpha parameter of the shower.
             BETA   Beta parameter of the shower.
             INIT   Initialisation index.
     Output: VALE   Shower profile at the S abcissa.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Called by EBPARA , EBSHOW
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBPARA                                                                          
   EBSHOW                                                                          
        |---- EBSHAP                                                               
                   |----  ALOG                                External             
                   |----  ABS                                 External             
                   |----  EXP                                 External             
   
 
3 EBSHOW
         REAL FUNCTION EBSHOW(S)
  ------------------------------------------------------------------------------
    CKEY PHOTONS SHAPE / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Unormalized longitudinal shower distribution.one argument.
     Used for integrations
     Input :   S    Longitudinal abcissa in radiation lengthes.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
     Calls EBSHAP which has to be initialised in order to define
     the showers parameters.
     Called by EBPARA through GAUSS.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBPARA                                                                          
        |---- EBSHOW                                                               
                   |----  EBSHAP                                                   
   
 
3 EBSLIM
           SUBROUTINE EBSLIM( TETA , PHI , SLIM , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS STACK / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier    17/04/89
   Stacks widths crossed along a projective line of flight.
     Along a line of flight , one crosses 3 'stacks' whose limits are
     calculated and put into SLIM(6) after a conversion in radiation
     lengthes. The origin is the end of the TPC gaz.
     SLIM(1) : Begining of stack 1 = TPC outer wall + ECAL front plate.
     SLIM(2) : End of stack 2 = SLIM(1) + stack 2 width.
     SLIM(3) : Begining of stack 2 = SLIM(2) + separation layer
     SLIM(4) .........
     .................
     In the barrel endcap overlap one uses the following convention :
     Irow = 51,52,177 or 178 :
                          'stack 1' = Barrel stacks 1 , 2 and 3
                          'stack 2' = Petal stack 1
                          'stack 3' = Petal stacks 2 and 3
     Irow = 53,54,55,174,175 or 176 :
                          'stack 1' = Barrel stack 1
                          'stack 2' = Barrel stacks 2 and 3
                          'stack 3' = Petal stacks 1 , 2 and 3
     Near the overlap the truncation of the modules is taken in
     account.
     The lines of flight which are into the cracks between modules
     are out of the sensitive region : the SLIM output correspond to the
     nearest good region.
     Input  :  TETA      Theta angle of the line of flight in radians.
               PHI       Phi angle in radians.
     Output :  SLIM(6)   Stacks limits in rad. lengthes.
               IER       Error code.
                         0 : if succesful SLIM calculation.
                         1 : Missing bank.
                         2 : Too many storeys
                         3 : No storey in this cluster.
                         4 : Energy > EMIN = .05
                         5 : Energy < EMIN = 80.
                        -1 : Truncated endcap , 3 stacks.
                        -2 : Truncated endcap , 2 stacks.
                        -3 : Overlap near endcap , 2 stacks.
                        -4 : Overlap near endcap , 3 stacks.
                        -5 : Overlap near barrel.
                        -6 : Truncated barrel , 2 stacks.
                        -7 : Truncated barrel , 3 stacks.
     BANKS :
       INPUT   : EGVP , EGTH
       OUTPUT  : NONE
       CREATED : NONE
     Calls  EVOLPL , EBCOSI , EMPACT, EFNDSC , EFNDMD , EFNDLG , EFNDCL
            NAMIND  EVRADL
     Called by EBPRGA
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBLEAK                                                                          
   EBPRGA                                                                          
   ECLEAK                                                                          
        |---- EBSLIM                                                               
                   |----  NAMIND                              External             
                   |----  EVOLPL                                                   
                   |----  EVRADL                                                   
                   |----  LIM                                 External             
                   |----  EBCOSI                                                   
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  TAN                                 External             
                   |----  EMPACT                                                   
                   |----  EFNDSC                                                   
                   |----  EFNDMD                                                   
                   |----  EFNDLG                                                   
                   |----  ABS                                 External             
                   |----  SQRT                                External             
                   |----  EFNDCL                                                   
                   |----  MOD                                 External             
                   |----  MIN                                 External             
   
 
3 EBSTAK
           SUBROUTINE EBSTAK( NVTM , MODU , ECLS , STAC )
  ------------------------------------------------------------------------------
    CKEY PHOTONS STACKS / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier      28/09/89
   Stacks contents when several modules.
     Input     : NVTM    Overlap region code.
                 MODU(M,1)  Module number of the module M.
                 MODU(M,2)  Subcomponent number of the module M.
                 ECLS(K,M)  Content of the stack K in the module M.
                         Up to 3 modules ordered as decreasing energies.
     Output    : STAC(3)  Stacks contents.
                          If NVTM = 2 or 4 : STAC(1) = Barrel ,
                          STAC(2) = Endcap st1 , STAC(3) = Endcap st2,3
                          If NVTM = 3 or 5 : STAC(1) = Barrel st1 ,
                          STAC(2) = Barrel st2,3 , STAC(3) = Endcap.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBSTAK                                                               
                   |----  CL                                  External             
   
 
3 EBTRAN
         SUBROUTINE EBTRAN( NUST,INDX,ESTO,BARY,NATU,GAMM )
  ------------------------------------------------------------------------------
    CKEY PHOTONS TRANSVERSE PARTICLES / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J.Badier   09/10/89
   Particle identification using transverse distribution.
     The better inpact estimation is calculated from the barycenter
     of 3 by 3 towers around a central tower. The 2 by 2 towers around
     the barycenter allow to perform an identification.
     Input  :    NUST    Number of storeys of the cluster ICLN.
                 INDX(1,IST) Theta index of the storey IST.
                 INDX(2,IST) Phi index of the storey IST.
                 INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
     Output :    NATU(1)  Transverse identification.
                 NATU(2)  Nature of the first identified particle.
                 NATU(3)  Nature of the second identified particle.
                 GAMM(1)  First transverse estimator : proportion of
                          energy in the four central towers.
                 GAMM(2)  Second transverse estimator : deviation from th
                          mean shape of a single photon. The distribution
                          is a normal law for an isolated gamma.
                 GAMM(3)  Best estimate of the first particle energy (Gev
                 GAMM(4)  Teta line of flight of the first particle.
                 GAMM(5)  Phi line of flight of the first particle.
                 GAMM(6)  Best estimate of the 2nd particle Energy (Gev)
                 GAMM(7)  Teta line of flight of the second particle.
                 GAMM(8)  Phi line of flight of the second particle.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   EBNEUT                                                                          
        |---- EBTRAN                                                               
                   |----  EBGRID                                                   
                   |----  SQRT                                External             
                   |----  EBIMPA                                                   
                   |----  ATAN2                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  TAN                                 External             
                   |----  EFNCRS                                                   
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  EBGAGA                                                   
   
 
3 EBTZTH
         SUBROUTINE EBTZTH(ESTHR,IRC)
  ------------------------------------------------------------------------------
    CKEY PHOTONS ECAL ROC EZTH
  ------------------------------------------------------------------------------
    Author : R.Edgecock - 900115
   Unpacks the ezth bank to find the zero suppression thresholds
    used the ECAL ROCs.
     Input:    None
     Output:   ESTHR(STACK,ECAL_SUBCOMPONENT) = the thresholds per stack
                                                 for ECA, barrel and ECB,
                                                 in MeV(!)
               IRC = 0 - all OK
               IRC = 1 - EZTH doesn't exist, defaults used
               IRC = 2 - EZTH exists, but cannot be used, defaults taken
               IRC = 3 - Bank error, defaults used
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBCLCF                                                                          
        |---- EBTZTH                                                               
                   |----  NAMIND                              External             
   
 
3 EBVLAP
         SUBROUTINE EBVLAP( NVTM , ISC , TVLP , STAC )
  ------------------------------------------------------------------------------
    CKEY PHOTONS OVERLAP / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     05/10/89
   Add overlap correction to the stack 1 of the endcap.
     The correction calculated in EBCLAP is added to the first endcap
     stack. The central tower overlap code NVTM allows to increment the
     good element of the STAC array.
     Input     : NVTM    Overlap code.
                 ISC     Subcomponent.
                 TVLP    Calculated correction.
                 STAC    Gathered stacs accordingly to EBSLIM.
                         STAC is modified.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBNEUT                                                                          
   GBNEUT                                                                          
        |---- EBVLAP.                                                              
   
 
3 EBYPHI
         SUBROUTINE EBYPHI( YCO , PHI )
  ------------------------------------------------------------------------------
    CKEY PHOTONS CRACK COORDINATE / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : R.Clifft 08/06/88
                 J.Badier   29/11/89
   Convert local coordinate y ,orthogonal to a crack, to aleph
    coordinate phi.
     Input  :    YCO  Local coordinate.
     Output    :    PHI  ALEPH coordinate phi.
       called by      EBRANC
       calls          NONE
       banks          NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   EBRANC                                                                          
        |---- EBYPHI                                                               
                   |----  NREGEB                              External             
                   |----  YLIMIT                              External             
                   |----  FLOAT                               External             
                   |----  SIGN                                External             
                   |----  EXP                                 External             
                   |----  ATAN2                               External             
                   |----  KODEEB                              External             
   
 
3 ECLEAK
         SUBROUTINE ECLEAK( METH , STAC , ANGL , ICHA , ECOR )
  ------------------------------------------------------------------------------
    CKEY PHOTONS LEAKAGE / INTERNAL
  ------------------------------------------------------------------------------
   Cluster corrected energy for longitudinal and transverse leakage.
     AUTHOR   : J.Badier    15/06/89
                            10/10/89
                             1/05/91  ECLEAK
      Modified :- E. Lancon             23-OCT-1991
                 Load ECIL to apply energy loss correction to
                 charged clusters
     ECLEAK is a modified version of EBLEAK , with a new argument : ICHA
     Input : METH        Correction option.
             STAC(3)     Stacks content.
             ANGL(2)     Polar and azimuthal angles in radians.
             ICHA        Charge : 0 for a neutral cluster.
     Output: ECOR        Corrected energy.
     BANKS :
       INPUT   : ECLK,NR=0  Correction parameters.
                 EGTH,NR=0
                 ECIL,NR=run#
       OUTPUT  : NONE
       CREATED : NONE
     Calls none.
     Called by ECOENT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAMPEK                                                                          
   GAMPEX                                                                          
   GAPGPC                                                                          
        |---- ECLEAK                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  ALOG                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  INT                                 External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  MAX                                 External             
                   |----  EBSLIM                                                   
                   |----  EXP                                 External             
   
 
3 ENOF4
          SUBROUTINE ENOF4(F4,ECLU,THET,ESF4N)
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
   Calculate normalised estimator for photon
        Author                             M.N Minard 10/02/92
   
        Input    F4 : transverse estimator
                ECLU : cluster energy
                Thet : Theta of cluster
        Output  ESF4N: Normalised  estimator
        Banks used EF4N
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGID                                                                          
        |---- ENOF4                                                                
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  UCOPY                               External             
                   |----  SQRT                                External             
   
 
3 ENOL12
          SUBROUTINE ENOL12(XL1,XL2,ECLU,THET,ESL1N,ESL2N)
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
   Calculate normalised estimator for photon
        Author                             M.N Minard 10/02/92
   
        Input   XL1 : 1st longitudinal estimator
                XL2 : 2nd longitudinal estimator
                ECLU : cluster energy
                Thet : Theta of cluster
        Output  ESL1N: Normalised 1st estimator
                ESL2N: Normalised 2nd estimator
        Banks used EL1N , EL2N
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGID                                                                          
        |---- ENOL12                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  UCOPY                               External             
                   |----  ENOLWF                                                   
   
 
3 ENOLWF
          SUBROUTINE ENOLWF(XIN , ECLU , XPARM , ESX)
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
   Calculate normalised xin using xparm parametrisation
        Author                             M.N Minard 10/02/92
        Input      XIN  : Estimator to normalise
                   ECLU : Energy of object
             XPARM(3,2) : (1,1) TO (3,1) parametrisation of xin
                          (1,2) to (3,2) error parametrisation
        Output    ESX   : Normalised estimator
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ENOL12                                                                          
   ENOW12                                                                          
        |---- ENOLWF.                                                              
   
 
3 ENOW12
          SUBROUTINE ENOW12(XW1,XW2,ECLU,THET,ESW1N,ESW2N)
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
   Calculate normalised estimator for photon
        Author                             M.N Minard 10/02/92
   
        Input   XW1 : 1st longitudinal estimator
                XW2 : 2nd longitudinal estimator
                ECLU : cluster energy
                Thet : Theta of cluster
        Output  ESW1N: Normalised 1st estimator
                ESW2N: Normalised 2nd estimator
        Banks used EW1N , EW2N
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGID                                                                          
        |---- ENOW12                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  UCOPY                               External             
                   |----  ENOLWF                                                   
   
 
3 GAPGID
         SUBROUTINE GAPGID
  ------------------------------------------------------------------------------
    CKEY PHOTONS PGID
  ------------------------------------------------------------------------------
   Build pgid bank (result from ebneut )
      Author   :- MN Minard             27-JAN-1993
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              GAPGID                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  VZERO                               External             
                   |----  EVTVER                                                   
                   |----  NDROP                               External             
                   |----  AUBOS                               External             
                   |----  GBNEUT                                                   
                   |----  ENOL12                                                   
                   |----  ENOF4                                                    
                   |----  CLMOMS                                                   
                   |----  ENOW12                                                   
                   |----  GVERCR                                                   
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
                   |----  AUBPRS                              External             
   
 
3 GBIMPA
         SUBROUTINE GBIMPA( ITET , JPHI , BARI , BARJ , GERB )
  ------------------------------------------------------------------------------
    CKEY PHOTONS
  ------------------------------------------------------------------------------
     AUTHOR   : M.N. Minard 17/03/03
     Extracted from EBIMPA : Author J.Badier 31/10/88
   Corrected impact estimation for a gamma.
  ------------------------------------------------------------------------------
    CKEY PHOTONS IMPACT / INTERNAL
  ------------------------------------------------------------------------------
     Input   : ITET    Tetha index of a tower.
               JPHI    Phi index of a tower.
               BARI    { Barycenter coordinates by respect to the
               BARJ    { tower center expressed in pads units.
     Output  : GERB    Calculated impact on the first EMCAL plane.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GBTRAN                                                                          
        |---- GBIMPA                                                               
                   |----  ESRBC                                                    
                   |----  ESRPL                                                    
                   |----  ACOUPE                                                   
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  FLOAT                               External             
                   |----  ESRPT                                                    
   
 
3 GBNEUT
         SUBROUTINE GBNEUT( ICLN , IOPT , IFOT , PHOT , CORE , IER )
  ------------------------------------------------------------------------------
    CKEY PHOTONS NEUTRAL CLUSTER ANALYSIS / USER
  ------------------------------------------------------------------------------
     AUTHOR   : J. Badier     04/10 89
   Analysis of a neutral cluster.
     ICLN is the number of the cluster as defined in JULIA ( row number
     in ECLU or ECOB ) and in the POT ( row number in PECO or PEOB ).
     IOPT(6) is an array of control words defining the corrections to be
     applied to the energies estimations.
     IFOT(19) and PHOT(20) are respectively integer and real arrays
     containing the results of the analysis.This information is calculate
     using only the storeys of the cluster ICLN.
     IER is an error code.
     Input     : ICLN    Cluster number.
                 IOPT    Corrections control words.
                         IOPT(N)  =    0 : JULIA method.
                                       1 : No correction.
                                      >1 : Other method to be defined.
                         N = 1  :  Overlap correction.
                         N = 2  :  Crack correction.
                         N = 3  :  Leakage correction.
                         N = 4  :  Clusterisation correction.
                         N = 5  :  Saturation correction.
                         N = 6  :  Hadronic energy estimation.
    :
            IFOT Integer output array.
                 1   Theta index of the barycenter tower.
                 2   Phi index of the barycenter tower.
                 3   Subcomponent number( 1 to 3 ).
                 4   Module number( 1 to 12 ).
                 5   Region number( 1 to 4 ).
                 6   1 or 2 if limit of region.
                 7   1 if endcap crack in the overlap.
                 8   1 , 2 , 3 or 4 if near a crack.
                 9   1 to 6:barrel/endcap overlap, 7:endcap/luminometer.
                10   Cluster extension covering several regions.
                         = 0 for 1 region,
                         = 1 for 2 regions (NR and NR+1), the greatest
                            signal belonging to region NR+1,
                         = 2 for 2 regions (NR and NR+1), the greatest
                             signal belonging to region NR,
                11   Overlap and crack in the secondary detector.
                12   Cluster covering two modules (MD and MD+1) : crack.
                         in the same detector.
                         = 1 the main module is MD+1.
                         = 2 the main module is MD.
                13   Cluster extension covering two detectors : overlap.
                         = 1 the barrel is the main detector,
                         = 2 the endcap is the main detector,
                         = 3 there is an overlap with the luminometer
                14   Concerns the cluster analysis method.
                         = 0 , 9 : Standard.
                         = 10,19 : Crack between modules.
                         = 20,29 : Overlap between detectors.
                         = 30.39 : Crack in the overlap.
                         = 40,49 : Dead storey.
                15   Validity of the two longitudinal estimators.
                         The first one ( PHOT(7) ) is the starting depth
                         of the shower.The second one ( PHOT(8) ) is the
                         deviation of the shower shape from the mean
                         expected shape. Such quantities may be
                         uncalculable :
                          = 0 : The two identificators may be used.
                          = 1 : Only the first one may be used.
                          = 2 : Only the second one may be used.
                          = 3 : The two identificators are uncalculable.
                16   Concerns the nature of the hypothesis
                          = 0 : The cluster is unambiguously identified
                          as an electromagnetic object.
                          = 1 : The cluster is unambiguously identified
                          as an hadronic object.
                          = 2 : The cluster identification is ambiguous.
                17   Concerns the transverse identification.
                          It depends of the nature of the hypothesis.
                          If IFOT(7) is 0 or 2 ( electromagnetic ) :
                          = 0 : Single isolated gamma.
                          = 1 : Unresolved multi gammas.
                          = 2 : One gamma extracted from a multi gammas.
                          = 3 : Two gammas extracted from the cluster.
                          If IFOT(7) is 1 ( hadronic ) :
                          = 0 : Purely hadronic cluster.
                          = 1 : Mixed cluster.
                          = 2 : One gamma extracted from the cluster.
                18   Nature of the first identified particle.
                          =  1    Isolated gamma
                          =  2    Gamma from multi gammas cluster.
                          =  3    Gamma from identified Pi0.
                          = 10    Unresolved gamma-gamma.
                          = 17    ECAL fraction of a neutral hadron.
                19   Nature of the second identified particle.
                          =  0    No second particle.
                          =  2    Gamma from multi gammas neutral cluster
                          =  3    Gamma from identified Pi0.
                          = 12    Residual e.m. energy.
                          = 17    ECAL fraction of a neutral hadron.
            PHOT Real output array.
                 1   Raw Energy (Gev)
                 2   Proportion of raw energy in stack 1. "Stack 1" is
                     defined properly for the overlap region according to
                     the tower number.
                 3   Proportion of raw energy in stack 2. "Stack 2" is
                     defined properly for the overlap region according to
                     the tower number.
                 4   Energy (Gev) corrected for geometrical effects
                     (cracks,detector,overlap, dead storeys,leakage,
                     clusterisation) accordingly to the IOPT array.
                 5   Barycenter : Theta coordinate in radians.
                 6   Barycenter : Phi coordinate in radians.
                 7   First longitudinal estimator : materialisation
                     depth in radiation lengthes.
                 8   Second longitudinal estimator : deviation from the
                     mean shape. The distribution of this variable is a
                     normal law for the photonic showers.
                 9   Crack estimator 1 : Main module energy.
                10   Crack estimator 2 : Energy of the row adjacent to
                                         the crack.
                11   Crack estimator 3 : Energy ratio stack 1+2 / 1+2+3
                12   First transverse estimator : proportion of energy in
                     the four central towers.
                13   Second transverse estimator : deviation from the mea
                     shape of a single photon. The distribution is a
                     normal law for an isolated gamma.
                14   Best estimate of the first particle Energy (Gev)
                     All corrections defined in IOPT have been applied.
                15   Teta line of flight of the first particle.
                16   Phi line of flight of the first particle.
                17   Best estimate of the second particle Energy (Gev)
                     All corrections defined in IOPT have been applied.
                18   Teta line of flight of the second particle.
                19   Phi line of flight of the second particle.
                20   Corrected energy in the hadronic hypothesis.
           CORE      Applied corrections accordingly to IOPT.
           IER       Error code.
                     = 0  No error.
                     > 0  Fatal error.
                     < 0  Overlap or crack.
                     = 1  Missing bank.
                     = 2  Too many storeys
                     = 3  No storey in this cluster.
                     = 4  Energy < EMIN = .05
                     = 5  Energy > EMAX = 80.
                     = 6  Petal inner edge
                     = 7  Pathologic cluster.
                     = -1 Truncated endcap , 3 stacks.
                     = -2 Truncated endcap , 2 stacks.
                     = -3 Overlap near endcap , 2 stacks.
                     = -4 Overlap near endcap , 3 stacks.
                     = -5 Overlap near barrel.
                     = -6 Truncated barrel , 2 stacks.
                     = -7 Truncated barrel , 3 stacks.
                     =-11 Crack.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
     Called by USER
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGID                                                                          
        |---- GBNEUT                                                               
                   |----  EBPREP                                                   
                   |----  EBOIDP                                                   
                   |----  EBCLAP                                                   
                   |----  EBARYC                                                   
                   |----  EBSTAK                                                   
                   |----  EBVLAP                                                   
                   |----  EBLONG                                                   
                   |----  EBLEAK                                                   
                   |----  EBCOCL                                                   
                   |----  EBGRID                                                   
                   |----  EBRACK                                                   
                   |----  GBTRAN                                                   
                   |----  EBSATU                                                   
                   |----  EBHADR                                                   
                   |----  EBCOHD                                                   
   
 
3 GBTRAN
         SUBROUTINE GBTRAN( NUST,INDX,ESTO,BARY,NATU,GAMM )
  ------------------------------------------------------------------------------
    CKEY PHOTONS TRANSVERSE PARTICLES / INTERNAL
  ------------------------------------------------------------------------------
     AUTHOR   : M.N. Minard 17/03/93
     Extracted from EBTRAN : Author J.Badier 09/10/89
   Particle identification using transverse distribution.
     The better inpact estimation is calculated from the barycenter
     of 3 by 3 towers around a central tower. The 2 by 2 towers around
     the barycenter allow to perform an identification.
     Input  :    NUST    Number of storeys of the cluster ICLN.
                 INDX(1,IST) Theta index of the storey IST.
                 INDX(2,IST) Phi index of the storey IST.
                 INDX(3,IST) Stack number of the storey IST.
                 ESTO(IST)   Raw content of the storey IST.
                             IST = 1 , NUST
     Output :    NATU(1)  Transverse identification.
                 NATU(2)  Nature of the first identified particle.
                 NATU(3)  Nature of the second identified particle.
                 GAMM(1)  First transverse estimator : proportion of
                          energy in the four central towers.
                 GAMM(2)  Second transverse estimator : deviation from th
                          mean shape of a single photon. The distribution
                          is a normal law for an isolated gamma.
                 GAMM(3)  Best estimate of the first particle energy (Gev
                 GAMM(4)  Teta line of flight of the first particle.
                 GAMM(5)  Phi line of flight of the first particle.
                 GAMM(6)  Best estimate of the 2nd particle Energy (Gev)
                 GAMM(7)  Teta line of flight of the second particle.
                 GAMM(8)  Phi line of flight of the second particle.
     BANKS :
       INPUT   : NONE
       OUTPUT  : NONE
       CREATED : NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GBNEUT                                                                          
        |---- GBTRAN                                                               
                   |----  EBGRID                                                   
                   |----  SQRT                                External             
                   |----  GBIMPA                                                   
                   |----  ATAN2                               External             
   
 
3 GVERCR
          SUBROUTINE GVERCR(IPECO,RAD,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculate cluster coordinate
    Author   :- MN Minard             27-JAN-1993
        Input
   -     IPECO / I = PECO row number
        Output
   -     RAD   / R = Radius of shower
        IER   / I = error code
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GAPGID                                                                          
        |---- GVERCR                                                               
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  IBITS                               External             
                   |----  ESRBC                                                    
                   |----  SQRT                                External             
   

2 PHY

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various subprograms related to physics
    
     ! ALEPHLIB 31.3
        PAIRFD : Double precision fixes for Linux                   (D.Smith)
    
     ! ALEPHLIB 31.0
         PAIRFD : Protection to avoid crashes when reading MINIs with
                  the ITCO bank                          (T.Greening, J.Boucrot)
    
     ! ALEPHLIB 30.6
        ALTHRU,PIDECY : fix variable type inconsistencies in function calls, 
                        for Linux                            (A.Waananen)
    
     ! ALEPHLIB 21.2
       FJMMCL - (JADE algorithm) Speed up by doing linear search (O.Callot)
    
    Name:   FJMMCL
    Type:   Subroutine (meant to be user-callable)
    Purpose:Find jets using the JADE minimal mass cluster algorithm
    Usage:
            +----------------------------------------------------------------+
            |     CALL  FJMMCL( YCUT, ENORM, SCHEME, VERSN, ARRAY1, ARRAY2,  |
            |    &              NPAR, PPARX, PPARY,  PPARZ, PPARE,  NJETMX,  |
            |    &              NJET, PJETX, PJETY,  PJETZ, PJETE,  JNOFP  ) |
            +----------------------------------------------------------------+
    
    Input:  YCUT            REAL    ycut value ( (M/ENORM)**2 )
            ENORM           REAL    normalising energy (if 0.0, use visible E)
            SCHEME          CHAR*2  combination scheme, either 'E ', 'E0', 'P '
            VERSN           CHAR*6  formula, either 'NORMAL' or 'BETTER'
            ARRAY1(k)       REAL    workspace (k = 1,NPAR*NPAR)
            ARRAY2(k)       REAL    workspace (k = 1,NPAR)
            NPAR            INT     number of particles
            PPARX,Y,Z,E(i)  REAL    4-momentum of input particles (i=1,NPAR)
            NJETMX          INT     maximum number of jets there is space for
    
    Output: NJET            INT     +ve number of jets found (normal return)
                                     -1 input  error (NPAR/ENORM)
                                     -2 error from individ. track
                                     -3 too many jets
                                     -4 unknown particle combination scheme wanted
                                     -5 neither NORMAL nor BETTER algorithm wanted
            PJETX,Y,Z,E(j)  REAL    4-momentum of jet j (j=1,NJET < NJETMX)
            JNOFP(i)        INT     jet no. of particle i   (i=1,NPAR)
    
    alls:  s/r JPCOMB (ALEPHLIB)
    
    Notes:  The JADE method for finding jets has a number of options. The
            standard ('NORMAL') formula is:
                          2*E(i)*E(j)*(1-cos(theta_i_j))         .
            An improved formula ('BETTER') has been proposed by Dokshitzer
            and is:
                          2*Min(E(i),E(j))*(1-cos(theta_i_j))    .
    
            There is also a choice of particle combination schemes (how the
            particle 4-vectors are added to form the jets). The E scheme
            is the Lorentz-invariant approach; the E0 scheme normalises the
            momentum components to produce massless jets while the P scheme
            sets the energy to the total momentum to achieve the same effect.
    
    
    
    Name:   JPCOMB
    Type:   Subroutine (not meant to be user-callable)
    Purpose:Combine 2 particles according to input scheme (for FJMMCL)
    Usage:
            +----------------------------------------------------------------+
            |     CALL  JPCOMB( ( SCHEME, PP, IP1, IP2 )                     |
            +----------------------------------------------------------------+
    
    Input:  SCHEME          CHAR*2  combination scheme, either 'E ', 'E0', 'P '
            PP(5,k)         REAL    array of 5-vectors (k = 1,no_of_particles)
            IP1             INT     pointer to particle 1 in PP ("winner")
            IP2             INT     pointer to particle 2 in PP ("loser")
    
    Output: PP(5,k)         REAL    as defined above (modified)
    
    alls:  none
    
    Notes:  (See also notes for FJMMCL)
            The 5-vectors describing particle_2 (PX, PY, PZ, E, PTOT) are
            added to those of particle_1 according to the desired scheme and
            the result overwrites the data for particle_1. The data for
            particle_2 are set to (0,0,0,0,-1).
    
    
    
    Name:   PJLINK
    Type:   Subroutine (meant to be user-callable)
    Purpose:Update links between particles and jets after further evolution
            of jets from a low ycut to a higher ycut (JADE method).
    Usage:
            +----------------------------------------------------------------+
            |     CALL  PJLINK( KOLDPJ, NP, KJJ, NJ, KNEWPJ, ERROR )         |
            +----------------------------------------------------------------+
    
    Input:  KOLDPJ(i)       INT     Association of particle i to 'old' jet
            NP              INT     Number of 'old' jets
            KJJ(k)          INT     Association of 'old' jet k to 'new' jet
            NJ              INT     Number of 'new' jets
    
    Output: KNEWPJ(i)       INT     Association of particle i to 'new' jet
            ERROR           LOGICAL = .TRUE. if KOLDPJ has an illegal jet number
                                    = .FALSE. otherwise
    
    alls:  none
    
    Notes:  The routine assumes the original particles are numbered 1..NP
            and that the old jets are in the range 1..NJ.
    
    
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     AINJET     Initialize parts of the lund commons for alclus avoiding block data
     ALCLUS     Alephlib copy of the lund algorithm luclus.
     ALROBO     Alephlib copy of the lund routine lurobo .
     ALTHRU     Alephlib copy of the lund algorithm luthru.
     FJMMCL     Find jets using the jade scaled invariant mass
     GETX       Using the technique of importance sampling to return an x value (x1)
     GETY       Given a value of x (x1) returns a y value (y1) which defines the dalitz
     JPCOMB     Two particles are combined to a form a 'jet' using the specified
     PAIRFD     Simple algorithm to find pair conversions
     PIDECY     Handle dalitz decays  of pi0
     PJLINK     Update links between particles and jets after further evolution

3 AINJET
         SUBROUTINE AINJET
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Initialize parts of the lund commons for alclus avoiding block data
   
       Author:    T.Sjostrand
       Modified:  S.Haywood
   
    Description
    -----------
       See LUND Monte-Carlo write-up.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALCLUS                                                                          
        |---- AINJET                                                               
                   |----  UCOPY                               External             
   
 
3 ALCLUS
         SUBROUTINE ALCLUS(NJET,TGEN,DMIN)
  ------------------------------------------------------------------------------
    CKEY PHYSICS LUND JETS MINI MDST /USER
  ------------------------------------------------------------------------------
   Alephlib copy of the lund algorithm luclus.
       Author:    T.Sjostrand
       Modified:  S.Haywood
       Called by RMIMJT in Mini-DST code.
       Input:     by commons contained in comdeck LUNDCOM (and LUNDEQU).
                  These are filled partially by the initialisation
                  routine AINJET and partially by the user.
       Output:    NJET   = number of jets found
                  TGEN, DMIN see LUND writeup.
    Description
    -----------
       See LUND Monte-Carlo write-up: CERN Pool program W5035.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALCLUS                                                               
                   |----  AINJET                                                   
                   |----  SQRT                                External             
                   |----  IABS                                External             
                   |----  MAX                                 External             
   
 
3 ALROBO
         SUBROUTINE ALROBO(THE,PHI,BEX,BEY,BEZ,ITYP)
  ------------------------------------------------------------------------------
    CKEY PHYSICS LUND THRUST E-FLOW / USER
  ------------------------------------------------------------------------------
   Alephlib copy of the lund routine lurobo .
       Rotate vector P(i,5) from comdeck LUNDCOM
             THE : Teta angle of rotation
             PHI : Phi angle of rotation
             BEX,BEY,BEZ : Centre of rotation coordinate
             ITYP        : type of fit (1=Calorimeters, 2=Masks)
       called by subroutine Althru
       Adapted by M.N.Minard & M.Pepe
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALTHRU                                                                          
        |---- ALROBO                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  DBLE                                External             
                   |----  DSQRT                               External             
                   |----  SNGL                                External             
   
 
3 ALTHRU
         SUBROUTINE ALTHRU(ITYP,THR,OBL)
  ------------------------------------------------------------------------------
    CKEY PHYSICS LUND THRUST E-FLOW / USER
  ------------------------------------------------------------------------------
   Alephlib copy of the lund algorithm luthru.
       Adapted by M.N.Minard & M.Pepe
       Called by EFAXE in E-Flow code
   -    INPUT  : ITYP = type of fit (1=Calorimeters, 2=Masks)
   -
   -    OUTPUT : THR  = Thrust value
   -             OBL  = oblatness value
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              ALTHRU                                                               
                   |----  ATAN2                               External             
                   |----  ALROBO                                                   
                   |----  SQRT                                External             
                   |----  MIN                                 External             
                   |----  SIGN                                External             
                   |----  INT                                 External             
                   |----  RNDM                                External             
                   |----  ABS                                 External             
                   |----  MAX                                 External             
   
 
3 FJMMCL
         SUBROUTINE FJMMCL( YCUT, ENORM, SCHEME, VERSN, MASMAT, PP,
  ------------------------------------------------------------------------------
    CKEY PHYSICS JET JADE
  ------------------------------------------------------------------------------
        &                   NPAR, PPARX, PPARY,  PPARZ, PPARE,  NJETMX,
        &                   NJET, PJETX, PJETY,  PJETZ, PJETE,  JNOFP  )
     Author   : C. Bowdery      9-OCT-1990  Faster algorithm than SJMMCL
     Modified : M.N. Minard    20-FEB-1991  COMMON replaced by arguments
     Modified : C. Bowdery     18-APR-1991  SCHEME argument added
     Modified : C. Bowdery     28-APR-1991  VERSN argument added
     Modified : C. Bowdery     18-OCT-1991  Name change for ALEPHLIB
     Modified : C. Bowdery     21-OCT-1991  More argument changes
     Modified : O. Callot      20-DEC-1995  Performance by linear search
     Description
     ===========
   Find jets using the jade scaled invariant mass
      squared algorithm using BOS work bank.
      Uses E, E0 or P scheme.
      Uses standard ('NORMAL') or improved ('BETTER') JADE algorithm
      according to VERSN argument.
    Input   : YCUT            ycut value ( (M/ENORM)**2 )
              ENORM           normalising energy (if 0.0, use visible E)
              SCHEME          CHAR*2, either 'E ', 'E0', 'P '
              VERSN           CHAR*6, either 'NORMAL' or 'BETTER'
              MASMAT          (empty) invariant mass**2 square matrix
              PP              (empty) matrix for temporary particle usage
              NPAR            number of particles
              PPARX,Y,Z,E(i)  four momentum of input particles (i=1,NPAR)
              NJETMX          maximum number of jets there is space for
    Output  : NJET       +ve  number of jets (normal return)
                          -1  input  error (NPAR/ENORM)
                          -2  error from individ. track
                          -3  too many jets
                          -4  unknown particle combination scheme wanted
                          -5  neither NORMAL nor BETTER algorithm wanted!
              PJETX,Y,Z,E(j)  four  momentum of jet j (j=1,NJET)
              JNOFP(i)        jet no. of particle i   (i=1,NPAR)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FJMMCL                                                               
                   |----  SQRT                                External             
                   |----  MIN                                 External             
                   |----  JPCOMB                                                   
                   |----  JIF                                 External             
   
 
3 GETX
           SUBROUTINE GETX(FLAM,ALPHA,RSQ,A,X1)
  ------------------------------------------------------------------------------
    CKEY PHYSICS MCARLO /INTERNAL
  ------------------------------------------------------------------------------
    ************************************************************************
    *  Author : Jane Ratcliffe   6/6/88
    *  Called by SUBROUTINE PIDECY
   Using the technique of importance sampling to return an x value (x1)
    ************************************************************************
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PIDECY                                                                          
        |---- GETX                                                                 
                   |----  EXP                                 External             
                   |----  SQRT                                External             
                   |----  RNDM                                External             
                   |----  ALOG                                External             
   
 
3 GETY
           SUBROUTINE GETY(RSQ,A,X1,Y1)
  ------------------------------------------------------------------------------
    CKEY PHYSICS MCARLO /INTERNAL
  ------------------------------------------------------------------------------
   
    Author : Jane Ratcliffe   6/6/88
    Called by SUBROUTINE PIDECY
   Given a value of x (x1) returns a y value (y1) which defines the dalitz
    Decay in C. of M.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PIDECY                                                                          
        |---- GETY                                                                 
                   |----  SQRT                                External             
                   |----  RNDM                                External             
                   |----  SIGN                                External             
                   |----  ABS                                 External             
   
 
3 JPCOMB
         SUBROUTINE JPCOMB( SCHEME, PP, IP1, IP2 )
  ------------------------------------------------------------------------------
    CKEY PHYSICS JET JADE
  ------------------------------------------------------------------------------
     Author      : C. Bowdery     18-APR-1991  Does particle combining
     Description
     ===========
   Two particles are combined to a form a 'jet' using the specified
      scheme.
    input   : SCHEME      CHAR*2, combination scheme: 'E', 'E0', 'P'
              PP          array of n-vectors (to be modified)
              IP1         pointer to particle 1 ("winner")
              IP2         pointer to particle 2 ("loser")
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FJMMCL                                                                          
        |---- JPCOMB                                                               
                   |----  SQRT                                External             
   
 
3 PAIRFD
         SUBROUTINE PAIRFD(I1,I2,FIELD,DXY,DZ0,DZ2,DTH,RMA,ZMA,XMA,NC1,
  ------------------------------------------------------------------------------
    CKEY PHYSICS PAIR GAMMA CONVERSION / USER
  ------------------------------------------------------------------------------
        &                  DIN1,NC2,DIN2,P,IER)
   Author:    D.Cinabro  05/09/89
    : D.Rousseau 05/04/91
        Double precision calculation of the invariant mass
    : D.Payne    21/04/92
        Use FRFT #0 bank if 'FRF2' card supplied but no FRFT #2 bank
    : D.Smith    26/10/99
        Double precision fixes for Linux
   Simple algorithm to find pair conversions
    I1 = The index of one FRFT track
           I2 = The index of another FRFT track
           FIELD = the magnetic field in kilogauss
    DXY = the distance(cm) in the xy plane between the two tracks
                 at the closest approach to the materialization point
           DZ2 = the distance(cm) apart the tracks are in z at the xy point
           DZ0 = the distance(cm) between the tracks in z at the origin
           DTH = the theta difference of the two tracks
           RMA = the rho value at the materializtion point
           ZMA = the z value at the materialization point
           XMA = the invariant mass of the tracks at the materializtion
                 point assuming they are both electrons
           NC1(2) = Number of coordinates with radius inside RMA for
                    track 1(2).  0 if no coordinate information available or
                    if there are no such coordinates.
           DIN1(2) = Distance(cm) in radius that the furthest in coordinate
                     is inside of RMA for track 1(2).  0. if no coordinate
                     information is available or there are no such coordinates.
           P(3) = Summed momentum of the two tracks at the materialization
                  point in order x,y,z.
           IER = 0 if all OK
                 1 if error in calculation
   
   Banks Used:FRFT,FRTL,FVCL,FICL,FTCL,TPCO,ITCO,VDCO
    point: PAIRCP (XA,YA,ZAV)
                get the coordinates of the conversion point
                XA,YA,ZAV are output arguments
    algorithm used is based on the fact that photons have zero mass
    that the electrons from their "decay" will come out initially
     It finds the point on each helix where the tracks are
    in the X-Y plane and pass closest together.  It then
    the distance between the two helixes at these points.  Using
    other parameters of the helix it finds the distance in Z between
    tracks at these same points and at the origin.  Also the difference
    theta of the two tracks is returned. The average position of the two
    is computed in Z and in Radius from the Z-axis.  This is called
    "materialization point".  The invariant mass of the two tracks
    the electron mass for each is computed at the materialization
     The summed momentum of the two tracks at the materialization
    is also calculated.  For each track the number of cordinates "inside"
    materialization point is returned.  A coordinate is "inside" if it
    Z or Radius from the Z-Axis less than the materialization point.  Also
    Radius from the Z-Axis the furthest out of the points "inside" the
    point from the materialization point is returned for each
     If there are no coordinates inside the materialization point for
    track then these last two values are zero.  An error results if
    track numbers passed in are outside of the FRFT bank or if the
    passed in have the same calculated charge.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PAIRFD                                                               
                   |----  NAMIND                              External             
                   |----  NLINK                               External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  ATAN2                               External             
                   |----  ATAN                                External             
                   |----  DBLE                                External             
                   |----  REAL                                External             
                   |----  IABS                                External             
   
 
3 PIDECY
           SUBROUTINE PIDECY(PIM,EM,PV)
  ------------------------------------------------------------------------------
    CKEY PHYSICS MCARLO /INTERNAL
  ------------------------------------------------------------------------------
    ****************************************************************
      Author : Jane Ratcliffe   6/6/88
   Handle dalitz decays  of pi0
      Input arguments :PIM      Mass of parent PI0
                        EM       Mass of Electron
      Output argument :       PV(4,3)
                       px,py,pz,energy for Gamma,Positron,Electron
   
      Method is Described in ALEPH note ..........
    ****************************************************************
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PIDECY                                                               
                   |----  GETX                                                     
                   |----  GETY                                                     
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  ACOS                                External             
                   |----  SIN                                 External             
                   |----  RNDM                                External             
                   |----  COS                                 External             
                   |----  RMMLT                               External             
   
 
3 PJLINK
         SUBROUTINE PJLINK( KOLDPJ, NP, KJJ, NJ, KNEWPJ, ERROR )
  ------------------------------------------------------------------------------
    CKEY PHYSICS JADE JETS
  ------------------------------------------------------------------------------
     Author   : C. Bowdery     10-JAN-1991    Update particle-jet links
     Description
     ===========
   Update links between particles and jets after further evolution
       of jet clustering from standard y-cut to user-specified y-cut.
    input   : KOLDPJ    Old assoc. of original particles to old jets
              NP        Number of original particles (dim of KOLDPJ)
              KJJ       Assoc. of old jets to new jets
              NJ        Number of old jets (dim of KJJ)
    output  : KNEWPJ    New assoc. of original particles to new jets
                        KNEWPJ can be the same as KOLDPJ if wanted.
              ERROR     .TRUE. if KOLDPJ has an illegal jet number
                        .FALSE. otherwise
    The routine assumes the original particles are numbered 1..NP
    and that KOLDPJ(i) contains info on particle i
    and that the old jets are in the range 1..NJ
    and that KJJ(j) contains info on old jet j.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PJLINK.                                                              
   

2 PRIN

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various subprograms related to printing
    
     ! ALEPHLIB 31.4
        PRRHAH : Modify format statement for Y2K                 (F.Ranjard)
    
     ! Correction file no. 1 to Alephlib 311
        FRFTDP : Read clock frequency in Hz from TSOR bank (W.Wiedenman)
    
     ! ALEPHLIB 30.6
        FRFTDP : fix variable type inconsistencies in function calls, 
                 for Linux                            (A.Waananen)
    
     ! ALEPHLIB 21.6
        PRWORK - Obsolete. Removed as it calls non-existent routine BPRWRK
                 (A.Waananen 5/12/96)
    
     ! ALEPHLIB 21.0
        PRRHAH - Modified for LEP II selected Data and printout of Computer
    
     ! ALEPHLIB 15.7
        TPCODP - enlarge a format (I.Tomalin)
    
     ! ALEPHLIB 15.6
        FRFTDP - adapt code to new banks TWRF     (R.Johnson)
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     BPRTAB     Print tabular named bank
     FRFTDP     Dump single track from the frft bank along with coordinates and
     FTKDMP     Dump all fitted tracks from frft
     HCPRIND    Decode hlwd and hwdi and print them
     MUPRDI     Print out 'mudi'
     MUPRHT     Print out 'muht'
     PRDTMC     Print dtmc and dvmc banks in readable format
     PRFKIN     Print fkin and fver banks in readable format
     PRGDEC     Print decay  bank gdec in readable format
     PRIMPA     Print impact bank in readable format
     PRKINE     Print kinematics track and vertex banks in readable format
     PRPART     Print particle bank part in readable format
     PRRHAH     Prints bank rhah in readable format
     PRTABL     Prints tabular banks in a pretty format.
     SMPRT      Prints the symmetric n-by-n matrix v
     TPADDP     Dump tpc pad hit bank (tpad)
     TPCODP     Dump bos bank tpco to iunit

3 BPRTAB
         SUBROUTINE BPRTAB (NAMI,IND,LROW1,LROW2)
  ------------------------------------------------------------------------------
    CKEY PRINT BOS BANK
  ------------------------------------------------------------------------------
   Print tabular named bank
   - F.Ranjard - 900830    from V.Blobel WPRNT/BOS77
   - Input      : NAMI  / I  = bank name-index
                  IND   / I  = bank index
                  LROW1 / I  = print from row# LROW1
                  LROW2 / I  =       to   row# LROW2
   - Bank       : UFMT  / Input
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PRTABL                                                                          
        |---- BPRTAB                                                               
                   |----  NAMIND                              External             
                   |----  IGTFMT                              External             
                   |----  MOD                                 External             
                   |----  CHAINT                              External             
                   |----  FPRROW                              External             
                   |----  WPRNT                               External             
                   |----  MIN                                 External             
                   |----  BLO32W                              External             
                   |----  BLO16W                              External             
                   |----  BLO8W                               External             
                   |----  BBUFM                               External             
   
 
3 FRFTDP
         SUBROUTINE FRFTDP(ITK,IUNIT,ICTRL)
  ------------------------------------------------------------------------------
    CKEY PRINT TRACKS TPC ITC VDET
  ------------------------------------------------------------------------------
   Dump single track from the frft bank along with coordinates and
    associated wire hits.
   
      Author:      R. Johnson  29-06-88
      modified by  F. Ranjard  24-02-92
                   call ABRUEV to get the run number
                   call TPDVEL to get drift velocity
                   R. Johnson   5-09-93  use TWRF instead of TWPU
                   F.Ranjard   27-11-95  call TPDHYP instead of TIDHYP
                   W.Wiedenmann 12.05.99  Read clock frequency in Hz
                                          from TSOR bank
   
      Called by FTKDMP
   
      Input:
            - ITK     /I    Track num
            - IUNIT   /I    Fortran output logical unit number
            - ICTRL   /I    Control parameter
                            0:  print only track information
                            1:  include coordinates
                            2:  include wire hits
                            3:  include coordinates and wire hits
                            NOTE that wire hits generally are not
                                 available from the POT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FTKDMP                                                                          
        |---- FRFTDP                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  PROB                                External             
                   |----  ALFIEL                                                   
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  PTFORMAT                            External             
                   |----  TPDHYP                                                   
                   |----  ITKFORMAT                           External             
                   |----  MOD                                 External             
                   |----  IABS                                External             
                   |----  GTT0GL                                                   
                   |----  AGETDB                              External             
                   |----  TPDVEL                                                   
                   |----  FLOAT                               External             
                   |----  NLINK                               External             
                   |----  IBITS                               External             
                   |----  IENDTP                              External             
                   |----  MIN                                 External             
   
 
3 FTKDMP
         SUBROUTINE FTKDMP(IUNIT,ICTRL)
  ------------------------------------------------------------------------------
    CKEY PRINT TRACKS TPC ITC VDET
  ------------------------------------------------------------------------------
   Dump all fitted tracks from frft
   
      Author:    R. Johnson  29-06-87
   
      Called by TPCREC
   
      Input:
            - IUNIT   /I    Fortran output logical unit number
            - ICTRL   /I    Control parameter
                            0:  print only track information
                            1:  include coordinates
                            2:  include wire hits
                            3:  include coordinates and wire hits
                            NOTE that wire hits generally are not
                                 available from the POT
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FTKDMP                                                               
                   |----  NAMIND                              External             
                   |----  FRFTDP                                                   
   
 
3 HCPRIND
         SUBROUTINE HCPRIND (ICODE)
  ------------------------------------------------------------------------------
    CKEY PRINT HCAL PRINT / USER
  ------------------------------------------------------------------------------
   Decode hlwd and hwdi and print them
   
          Author      : F.Ranjard - 911121
   
          Input       :       ICODE  / I   = 1 print HLWD
                                             2       HWDI
                                             3       both
          Input bank  :       HWDI and HLWD
   
         -Called by : user
         -Calls     : MVBITS  from CERNLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              HCPRIND                                                              
                   |----  NAMIND                              External             
                   |----  MIN                                 External             
                   |----  IBITS                               External             
   
 
3 MUPRDI
         SUBROUTINE MUPRDI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
   Print out 'mudi'
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MUPRDI                                                               
                   |----  NLINK                               External             
   
 
3 MUPRHT
         SUBROUTINE MUPRHT
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
   Print out 'muht'
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              MUPRHT                                                               
                   |----  NLINK                               External             
   
 
3 PRDTMC
         SUBROUTINE PRDTMC
  ------------------------------------------------------------------------------
    CKEY PRINT MINI KINE / USER
  ------------------------------------------------------------------------------
   Print dtmc and dvmc banks in readable format
    G. Ganis                   - 950325 -
    Modification of PRFKIN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PRDTMC                                                               
                   |----  NAMIND                              External             
                   |----  KIAVER                                                   
                   |----  CHAINT                              External             
   
 
3 PRFKIN
         SUBROUTINE PRFKIN
  ------------------------------------------------------------------------------
    CKEY FYXX PRINT / USER
  ------------------------------------------------------------------------------
   Print fkin and fver banks in readable format
    J. Boucrot  and J. Hilgart - 880529 -
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PRFKIN                                                               
                   |----  NAMIND                              External             
                   |----  KIAVER                                                   
                   |----  CHAINT                              External             
                   |----  FYLUHC                                                   
                   |----  MIN                                 External             
   
 
3 PRGDEC
         SUBROUTINE PRGDEC
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print decay  bank gdec in readable format
    B. Bloch-Devaux     870812
   
      No arguments
      refers to Banks GDEC (if it exits   ) and PART
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PRGDEC                                                               
                   |----  CHAINT                              External             
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
   
 
3 PRIMPA
         SUBROUTINE PRIMPA
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - O.Callot and F.Ranjard - 860929
   Print impact bank in readable format
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PRIMPA                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
   
 
3 PRKINE
         SUBROUTINE PRKINE
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    J. Boucrot , Y. Karyotakis , F.Ranjard  - 860929 -
   Print kinematics track and vertex banks in readable format
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PRKINE                                                               
                   |----  NAMIND                              External             
                   |----  KIAVER                                                   
                   |----  NLINK                               External             
                   |----  CHAINT                              External             
   
 
3 PRPART
         SUBROUTINE PRPART
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print particle bank part in readable format
    B. Bloch-Devaux     861024  mods  873103
   
      No arguments
      refers to Banks PART and KLIN if it exits
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PRPART                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
   
 
3 PRRHAH
         SUBROUTINE PRRHAH
  ------------------------------------------------------------------------------
    CKEY PRINT RHAH RUN HEADER / USER
  ------------------------------------------------------------------------------
   Prints bank rhah in readable format
   Author     J. Boucrot     26-Sep-1988    modified  02-Feb-1989
      F. Ranjard     06-Dec-1999    y2k fix
    from USER
    bank : RHAH  ( Run Header Analysis History )
   
   
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PRRHAH                                                               
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  CHAINT                              External             
                   |----  INTCHA                              External             
   
 
3 PRTABL
         SUBROUTINE PRTABL (NAME,NUM)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
   Author : S. Orteu       24-NOV-1986
   Prints tabular banks in a pretty format.
    the routine assumes that the banks has a miniheader of 2 words:
    the # of columns, the # of rows.
    if the # of columns is > 1000 , the bank is assumed not to be of
    tabular format. In this case the routine prints a message and
    returns.
    in the other case , it uses a modified version of BPRNT (BOS77)
    to print 1 row at a time.
   - structure : SUBROUTINE subprogram
                 User Entry Names: PRTABL
                 External References: BPRTAB
                                      NAMIND, NLINK (BOS77)
                 Comdecks referenced: BCS, BMACRO
   - usage   : CALL PRTABL (NAME,NUM)
   - input   : NAME  = bank name (up to 4 char.)
               NUM    =bank # (if = 0 all banks are printed)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   KXL74A                                                                          
   KXL7PA                                                                          
   KXP6IN                                                                          
   TFICOR                                                                          
   TGEPBK                                                                          
        |---- PRTABL                                                               
                   |----  NAMIND                              External             
                   |----  NLINK                               External             
                   |----  BPRTAB                                                   
                   |----  NPRNT                               External             
   
 
3 SMPRT
         SUBROUTINE SMPRT(V,N,TEXT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
       SUBROUTINE SMPRT
       ----------------
   Prints the symmetric n-by-n matrix v
                     - - ----
          CALL SMPRT(V,N,TEXT)
          AUTHOR: VOLKER BLOBEL
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SMPRT .                                                              
   
 
3 TPADDP
          SUBROUTINE TPADDP(ISECT,LUN)
  ------------------------------------------------------------------------------
    CKEY PRINT TPC PAD / USER
  ------------------------------------------------------------------------------
   Dump tpc pad hit bank (tpad)
   
   
        Author:   D. Schlatter    25-08-87
        Modified: R. Johnson      12-10-90   Add printout of digits
   
        Input:
            ISECT     /I      Sector slot number to dump
            LUN       /I      Fortran logical unit number for output
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TPADDP                                                               
                   |----  NLINK                               External             
                   |----  IBITS                               External             
                   |----  MOD                                 External             
   
 
3 TPCODP
         SUBROUTINE TPCODP(IUNIT)
  ------------------------------------------------------------------------------
    CKEY PRINT TPC
  ------------------------------------------------------------------------------
   Dump bos bank tpco to iunit
   
       Author:    R. Johnson  23-10-86
       Modified:  R. Johnson  18-06-90
   
       Input:
            - IUNIT   /I    Fortran output logical unit number
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TPCODP                                                               
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
   

2 PTOJ

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     ! ALEPHLIB 31.3
        FPKCM,FUPKCM,TFICOR, : Double precision fixes for Linux     (D.Smith)
    
     ! ALEPHLIB 30.6
        PITMAJ,TUN1NC : fix variable type inconsistencies in function calls, 
                        for Linux                            (A.Waananen)
     ! ALEPHLIB 30.5 correction file no.3
        TFICOR - Don't make corrections for new alignment (W.Wiedenmann)
    
     ! ALEPHLIB 30.3 correction file no.3
        PJPFXT - New: Create the FXTR bank and fill it from PFXT  (D.Casper)
    
     ! ALEPHLIB 30.2 correction file no.9
        TUN1NC - fix unintentional disabling of wire coordinates
                 print a message indicating whether wire coordinates will be used
                 avoid error messages when reading junk events by removing error
                 return on absence of PCOI (return silently instead) (D.Casper)
     ! ALEPHLIB 30.2
       new alignment (W.Wiedenman), new Kalman filter (D.Casper) and many
       corrections in the TPC reconstructions are introduced.
    
       PTPCOJ - support for wire coordinates
       TUN1NC - include wire coord and error when unpacking PTNC
    
    
     ! ALEPHLIB 21.5
       FPTOJ, IPTOJ, PHSTOJ - Replace LENOCC by LNBLNK (M.Cattaneo)
    
     ! ALEPHLIB 21.2
       FUPKCM - Speed up by computing DSQRT of constants on first call and
                remembering for subsequent calls (O. Callot)
     ! ALEPHLIB 21.1
       PTEXSJ - Also transfer PTPX to TPXS (D.Casper)
    
     ! ALEPHLIB 14.6
       JPLIST : use LNBLNK instead of LENOCC.
       Add JLIST(1:LNBLNK(JLIST)) or PLIST (1:LNBLNK(PLIST)) to avoid bank
       with blanc name.
       -------------------------------------------------------------------
                  POT to JUL package
                  ==================
    
        The PTOJ package (historian SET) contains routines used to unpack
      POT banks into JUL banks and related HAC parameters.
    
    
        The following naming convention has been used whenever possible:
    
       - steering routine to unpack x-detector POT banks to JUL: xPTOJ
       - unpacking of a POT 'Pabc' bank to a JUL 'abcd' bank   : PabcdJ
       - name-indices start with N : NPabc, Nabcd
       - BOS indices start with  J : JPabc, Jabcd
       - row indices start with  K : KPabc, Kabcd
    
       - miniheader length         : LMHLEN
       - # of columns offset       : LMHCOL
       - # of rows offset          : LMHROW
    
       - # of columns in 'Pabc'    : LPabcA or LCOLS(JPabc)
       - # of rows in 'Pabc'       : LROWS(JPabc)
    
    
        The calling sequence MUST contain at least 1 input argument: LIST
      and 1 output argument: IER.
    
        LIST is a character variable of 1 or 2 characters. The first one
      is the BOS event list. The second character , if equal to '-' , means
      that the unpacked POT bank(s) will be dropped and removed from the
      BOS event list.
    
        The user MUST set a local character variable PLIST which contains
      the list of POT banks which could be dropped by the routine.
    
        The user MUST set a local character variable JLIST which contains
      the list of JUL banks created by the routine. JLIST must be updated
      eveytime a new bank has been successfully created.
    
        These 3 variables are used by the macro  JPLIST kept as a *CD.
      This macro MUST be called at the end of the routine when at least
      one bank has been created.
    
    
        The error flag IER is set as follow: = 0  OK
                                               1  at least one POT bank missing
                                               2  not enough space
                                              -1  OK but garbage collection
    
        Such a routine MUST contain the following steps:
    
        1. - set name-indices and bank formats at 1st entry.
        2. - check that input bank exist. Return with IER=1 if not there or
             empty.
        3. - Create the output bank. Return with IER=2 if not enough space.
             set JLIST with the name of the bank just created.
             if more banks have to be created then
                if   IER=2 then goto 5.
                else append JLIST(1:LENOCC(JLIST)) with the name of the bank
                     just created.
        4. - Fill the bank using the HAC parameters.
        5. - Call macro JPLIST to drop POT bank when required and put JUL
             bank on S-list.
        6. - Set IER=-1 in case of garbage collection.
    
        An example is given below:
    
    $AF
    $CD PabcJJ   HAC parameters of Pabc bank
    $CD abcrJJ   HAC parameters of abcr bank
    $CD abcdJJ   HAC parameters of abcd bank
    $DK PabcdJ
          SUBROUTINE PabcdJ (LIST,IER)
    ----------------------------------------------------------------------
     Create JULIA 'abcd' and 'abcr' banks from POT 'Pabc' bank
     - F.Ranjard - 881201
    
         Input :    LIST /C   BOS event list
                              if LIST(2:2).eq.'-' drop POT banks
    
         Output:    IER  /I   = 0  successful
                              = 1  input bank does not exist or is empty
                              = 2  not enough space
                              =-1  OK but garbage collection
    ======================================================================
    $IF .NOT.1
    $CA BCS         BOS array
    $CA abcdJJ      'abcd'.HAC parameters
    $CA abcrJJ      'abcr'.HAC parameters
    $CA PabcJJ      'Pabc'.HAC parameters
    
     - LIST is the input argument which is used by the macro *CD JPLIST
       to drop or not drop POT banks.
       PLIST is used by *CD JPLIST : it contains the list of POT banks
       JLIST is used by *CD JPLIST : it contains the list of JUL banks
       !!!!!!!!!! DO NOT CHANGE THE NAMES OF THESE 3 VARIABLES!!!!!!!!
          CHARACTER*(*) LIST, PLIST*4, JLIST*4
    
          LOGICAL FIRST,BTEST
          DATA FIRST/.TRUE./
    $CA BMACRO
    
     - set name-indices and bank formats at 1st entry  ===================
    
          IF(FIRST) THEN
            FIRST=.FALSE.
            NPabc=NAMIND('Pabc')
            Nabcd=NAMIND('abcd')
            Nabcr=NAMIND('abcr')
            CALL BKFMT('abcr','I')
            CALL BKFMT('abcd','2I,(5I,2F,5I)')
          ENDIF
    
     - check existence of input banks, return if not there or empty =====
       IER is set to 1 in this case
    
          IER=1
          JPabc = IW(JPabc)
          IF (JPabc.LE.0) GOTO 999
          NPROW = LROWS(JPabc)
          IF (NPROW.EQ.0) GOTO 999
    
     - create output bank(s), return if not enough space ================
    
          LEN = LMHLEN+NPROW*LabcdA
          CALL AUBOS('abcd',0,LEN,Jabcd,IER)
          IF (IER.EQ.2) GOTO 999
          JLIST = 'abcd'
          JPabc = IW(NPabc)
          IW(Jabcd+LMHCOL)=LabcdA
          IW(Jabcd+LMHROW)=NPROW
    
          LEN = LMHLEN + NPROW*LabcrA
          CALL AUBOS('abcr',0,LEN,Jabcr,IER)
          IF (IER.EQ.2) GOTO 998
          JLIST = JLIST(1:LENOCC(JLIST))  
          JPabc = IW(NPabc)
          Jabcd = IW(Nabcd)
          IW(Jabcr+LMHCOL) = LabcrA
          IW(Jabcr+LMHROW) = NPROW
    
     - fill output bank(s) ===========================================
    
          Kabcd = Jabcd + LMHLEN
          DO 10 I=1,NPROW
            RW(Kabcd+Jabcxy) = ITABL(JPabc,I,JPabxy) * 0.01
    
           ------ user code ----
      10  Kabcd = Kabcd +LabcdA
    
      998 CONTINUE
     - get the drop flag if any, then drop POT banks if required, =======
       add JUL banks to S-list
       POT banks are on PLIST, JUL banks on JLIST
    
          PLIST = 'Pabc'
    $CA JPLIST
    
     - if garbage collection then set IER = -1  =======================
       if the AUBOS return code is 1 it means that a garbage collection
       occured: set IER to -1 in this case.
    
          IF (IER .EQ. 1) IER = -1
    
     - return  ======================================================
    999   END
    $EI
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     FPKCM      Pack an aleph track covariance matrix
     FPTOJ      Unpack track fit banks from pot
     FUPKCM     Unpack covariance matrix of a track
     IPTOJ      Change itc pot banks to julia format.
     NVPCOB     Navigate from pcob to pcpa
     NVPECO     Navigate from peco to pcpa
     PCMECU     Fill pcqa bank from parloc array
     PCPATQ     Prepare parloc array ready to fill pcqa bank from pcpa bank.
     PCRLTJ     Split pcrl bank into pfer, pfhr, pher, phpr relation banks
     PECHIC     Builds the relation between cal objects and mc tracks for the ecal
     PEIDTJ     Unpack  peid bank into eidt bank
     PHCHIC     Builds the relation between cal objects and mc tracks for the hcal
     PHMADJ     Change phma pot bank into hmad julia bank
     PHSTOJ     Change hcal pot banks into julia banks
     PITCOJ     Author   :- d. schlatter             10-apr-1989
     PITMAJ     Unpack the pot banks pitm and pasl, to the itma and iasl banks.
     PJPFXT     Create the fxtr bank and fill it from pfxt, if possible
     PSCOOJ     Convert pot bank psco into julia bank scoo
     PSTCPJ     Convert pot bank pspo into julia bank stcp
     PTBCOJ     Transfer the ptbc bank to the tbco bank
     PTEXSJ     Transfer the ptex bank to the texs bank
     PTGMAJ     Unpack banks tgma and tmtl from the pot
     PTPCOJ     Unpack the ptco or ptnc bank into tpco. needs banks frtl and frft.
     SPTOJ      Steering for satr unpacking of pot banks
     TFICOR     Correct tpc coordinates for field distortions.
     TFILTU     Fill bank ptun with constants for packing and unpacking
     TFIPOL     Function called in tficor to calculate regression
     TPTOJ      Change tpc pot banks back to the julia format
     TSRTCO     Sort the tpco bank and produce the rowlist (tcrl) bank
     TUN1CO     Unpack single coordinate from ptco
     TUN1NC     Unpack single coordinate from ptnc

3 FPKCM
         SUBROUTINE FPKCM(CIN,COUT)
  ------------------------------------------------------------------------------
    CKEY PTOJ PACK MATRIX / USER
  ------------------------------------------------------------------------------
   Pack an aleph track covariance matrix
      AUTHOR  :- JUERGEN SPIEKERMANN     8-AUG-1991
      Modified:  D.Smith  991026  Double precision fixes for Linux
   
      INPUTS: CIN
           -  COVARIANCE MATRIX IN TRIANGULAR FORM
   
      OUTPUTS: COUT
            -  CONVERTED COVARIANCE MATRIX IN TRIANGULAR FORM
                         EIGENVALUES ON DIAGONAL
                         10 ANGLES DIVIDED BY PI ON OFF DIGONAL PLACES
   
      LIBRARIES REQUIRED: ------
   
      DESCRIPTION
      ===========
      THIS SUBROUTINE CALCULATES THE EIGENVALUES OF A COVARIANCE MATRIX
      AND 10 ROTATION ANGLES WHICH DETERMINE THE MATRIX OF EIGENVECTORS
   
      IT IS USED TO CONVERT THE COVARIANCE MATRIX TO SUCH A FORM, THAT
      AFTER UNPACKING WITH SUBROUTINE FUPKCM THE MATRIX IS GUARANTEED
      TO BE POSITIVE DEFINITE.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FPKCM                                                                
                   |----  DBLE                                External             
                   |----  SQRT                                External             
                   |----  UTRID                                                    
                   |----  UVTRID                                                   
                   |----  DFACT                               External             
                   |----  SIGN                                External             
                   |----  DATAN2                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 FPTOJ
         SUBROUTINE FPTOJ (LIST,IER)
  ------------------------------------------------------------------------------
    CKEY FPTOJ UNPACK FIT
  ------------------------------------------------------------------------------
   Unpack track fit banks from pot
     Author:   L. Garrido
     Modified: J.Sedgbeer 90/05/23. No. deg. of freedom unpacked from
                          PFRF bank (available from JUL240.21 onwards).
                          If not available use NDF calculated from
                          number of coords on track as before.
               F.Ranjard  91/04/16 to unpack PFRF,NR=2 into FRFT,NR=2
               R. Johnson 91/08/07 call FUPKCM to unpack covariance matrix
               S. Haywood 92/03/04 Skip error matrix if not required.
     Input:   banks PFRF,PFRT
              LIST  BOS event list
                    if LIST(2:2).eq.'-' drop POT banks
              If a NOEM card is supplied, error matrix is not filled.
     Output:  banks FRFT,FRTL
              banks FTCL,FICL,FVCL
                    meaningful only if coordinate banks exist
       Output:    IER       = 0  successful
                            = 1  input bank does not exist or is empty
                            = 2  not enough space
                            =-1  OK but garbage collection
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              FPTOJ                                                                
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  NLINK                               External             
                   |----  UCOPY                               External             
                   |----  FLOAT                               External             
                   |----  FUPKCM                                                   
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 FUPKCM
         SUBROUTINE FUPKCM (CIN,COUT)
  ------------------------------------------------------------------------------
    CKEY PTOJ UNPACK/INTERNAL
  ------------------------------------------------------------------------------
   Unpack covariance matrix of a track
   
   
      AUTHOR  :- JUERGEN SPIEKERMANN     8-AUG-1991
                 THOMAS LOHSE
      Modified:  D.Smith  991026  Double precision fixes for Linux
   
      INPUTS: COUT
           -  CONVERTED COVARIANCE MATRIX IN TRIANGULAR FORM
                        EIGENVALUES ON DIAGONAL
                        10 ANGLES DIVIDED BY PI ON OFF DIGONAL PLACES
   
      OUTPUTS: CIN
            -  COVARIANCE MATRIX IN TRIANGULAR FORM
   
   
      DESCRIPTION
      ===========
      THIS SUBROUTINE RECONSTRUCTS THE COVARIANCE MATRIX CONVERTED BY
      SUBROUTINE FPKCM.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FPTOJ                                                                           
        |---- FUPKCM                                                               
                   |----  DSQRT                               External             
                   |----  DCOS                                External             
                   |----  DSIN                                External             
   
 
3 IPTOJ
         SUBROUTINE IPTOJ(LIST,IER)
  ------------------------------------------------------------------------------
    CKEY PTOJ ITC
  ------------------------------------------------------------------------------
   Change itc pot banks to julia format.
   
       Author     :- I. Tomalin    88/08/25
       Modified   :- I. Tomalin    88/11/17
       Modified   :- J. Sedgbeer   89/03/03 Modified from ITUPDI to be
                                            an ALEPHLIB routine.
       Modified   :- J. Sedgbeer   89/04/11
       Modified   :- J. Sedgbeer   91/01/07 Get JULIA version no. from
                                   RHAH bank. Use this - tidy code.
       Modified   :- J. Sedgbeer   92/01/30 Remove obsolete code.
   
       Input:
         LIST   /C    : BOS event list:
                            if LIST(2:2).eq.'-' then drop POT banks
         commons:     /BCS/     for banks  PIDI and FRTL
                      /ITWICC/  ITC Geometry - filled by subr. IGEOMW
                      /IZFECC/  New Z front end params. Filled by IFECON
                      /IRFECC/  New R-phi f-end params. Filled by IFECON
         params:      FRTLJJ
                      IDIGJP
                      ALCONS
   
       Output:
         IER    /I    : = 0 successful
                        = 1 input bank is empty or does not exist
                        = 2 not enough space
   1                     =-1 O.K. but garbage collection
         IDIG bank of ITC digitisings.
         FICL bank track coordinate list. Only created if FRTL exists.
   
    IPTOJ:
    Recreate the IDIG bank from the packed digitisings (PIDI) bank.
    The IDIG bank will be ordered according to increasing wire number.
    Also create/overwrite FICL bank if FRTL bank exists.
    N.B. MUST CALL IRDDAF before using this routine (to fill ITC
    geometry and front-end commons.
   
     If first then Set name indices and bank formats
     Check for non-empty PIDI bank.
     If FRTL bank exists then
       find total number of ITC coords assoc. with tracks, NUSED.
     else
       set NUSED = 0
     endif
     Create IDIG bank
     If FRTL bank exists then Create FICL bank
     Create a work bank for relation between old and new order (IADRIW).
     Loop over the packed digitisings.
       Unpack information about each digitising
       Load this into bank IDIG
       If FRTL exists then fill the relation work bank (IADRIW)
     End Loop
     Loop over digits
       Move digi. info. to correct place in bank IDIG
       If non-empty FRTL exists then fill the FICL bank
     Endloop
     Compress the IDIG bank.
     Set Jlist and Plist.
     Add Jlist to S list, drop Plist if required.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PITCOJ                                                                          
        |---- IPTOJ                                                                
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  BDROP                               External             
                   |----  WBANK                               External             
                   |----  IBITS                               External             
                   |----  IBCLR                               External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  LNBLNK                              External             
                   |----  BLIST                               External             
                   |----  IF                                  External             
                   |----  CALLWDROP                           External             
   
 
3 NVPCOB
         SUBROUTINE NVPCOB(IPCOB, ILINE, NLINE, NMAX, IERR)
  ------------------------------------------------------------------------------
    CKEY PTOJ PCOB PCPA / INTERNAL
  ------------------------------------------------------------------------------
       Author: J.Carr               Date : 20- 3-91
   Navigate from pcob to pcpa
       PCOB <- PCHY <- PCPA
       IPCOB : number of the row in bank PCOB
       ILINE (NLINE) : list of the rows corresponding to IPCOB in bank PC
       IERR  =   0 : OK
       IERR  =  98 : no solution
       IERR  = -99 : NLINE > NMAX
       IERR  = - 1 : error on banks
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PCPATQ                                                                          
        |---- NVPCOB                                                               
                   |----  NAMIND                              External             
   
 
3 NVPECO
         SUBROUTINE NVPECO(IPECO, ILINE, NLINE, NMAX, IERR)
  ------------------------------------------------------------------------------
    CKEY PTOJ PECO PCPA / INTERNAL
  ------------------------------------------------------------------------------
       Author : J.Carr            Date : 25- 3-91
   Navigate from peco to pcpa
       PECO <- PEHY <- PPRL -> PCPA
       IPECO : number of the row in bank PECO
       ILINE (NLINE) : list of the rows corresponding to IPECO in bank PC
       IERR  =   0 : OK
       IERR  =  98 : no solution
       IERR  = -99 : NLINE > NMAX
       IERR  = - 1 : error on banks
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PCPATQ                                                                          
        |---- NVPECO                                                               
                   |----  NAMIND                              External             
   
 
3 PCMECU
         SUBROUTINE PCMECU(NMXALL,MXNEUT,PARLOC,IPEPC,IPCOB,ITYPE,PARGON)
  ------------------------------------------------------------------------------
    CKEY PTOJ PCPA PCQA / USER
  ------------------------------------------------------------------------------
   Fill pcqa bank from parloc array
            if NEMO card not presents merge some particles
            make some cuts on partioles with low energy
   
          NMXALL  total number of PCPA particles in this event
          MXNEUT  dimension of arrays
          PARLOC  array containing 4-vector + PSUM for each particle
          IPEPC   PECO number for each particle
          IPCOB   PCOB number for each particle
          ITYPE   nature for each particle ( see PCPA DDL )
          PARGON  logical flag .TRUE. to ignore/cut particle
   
      Author   :-J. Carr    20 June 1991
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PCPATQ                                                                          
        |---- PCMECU                                                               
                   |----  NAMIND                              External             
                   |----  MAX0                                External             
                   |----  AMAX1                               External             
                   |----  SQRT                                External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
   
 
3 PCPATQ
         SUBROUTINE PCPATQ(IER)
  ------------------------------------------------------------------------------
    CKEY PTOJ PCPA PCQA / USER
  ------------------------------------------------------------------------------
   Prepare parloc array ready to fill pcqa bank from pcpa bank.
   
        IER =  0 OK
            = -1 banks missing
      Author   :-J. Carr    8 May 1991
       modified:-J. Carr    20 June 1991
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PCPATQ                                                               
                   |----  NAMIND                              External             
                   |----  MIN                                 External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  NVPECO                                                   
                   |----  NVPCOB                                                   
                   |----  PCMECU                                                   
   
 
3 PCRLTJ
         SUBROUTINE PCRLTJ(IERR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - J.F. Grivaz 15-03-1989
   Split pcrl bank into pfer, pfhr, pher, phpr relation banks
   - Output
   -   IERR = 0 if successful unpacking
            =-1 OK but garbage collection
            = 1 PCRL bank missing or structure error
            = 2 if unsuccessful ( No room to book banks )
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PCRLTJ                                                               
                   |----  BKFMT                               External             
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  MIN0                                External             
                   |----  MAX0                                External             
                   |----  UTWOCL                              External             
                   |----  BLIST                               External             
   
 
3 PECHIC
         SUBROUTINE PECHIC (IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Builds the relation between cal objects and mc tracks for the ecal
    and the LCAL
    Cinabro - 890500
     PECO,PEST,ETDI,ESHI,PLSD,LSHI,FPOI
    PEMH
           IER  = 0  OK
                  -1 LCAL input bank missing
                  -2 ECAL input bank missing
                  -3 not enough space : output bank missing
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PECHIC                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
                   |----  NINT                                External             
                   |----  FLOAT                               External             
                   |----  W                                   External             
                   |----  AUBPRS                              External             
                   |----  WDROP                               External             
   
 
3 PEIDTJ
         SUBROUTINE PEIDTJ (LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Unpack  peid bank into eidt bank
   
       Author:  D. PALLIN - 881129
       Input :   LIST      /C    BOS event list
                                 if LIST(2:2).eq.'-' drop POT banks
   
       Output:   IER       /I    Error return=0 if operation successful
                                             -1 if OK but garbage coll.
                                              2 if not enough space
                                              1 POT bank missing
   
       Input bank  : PEID
       Output bank : EIDT
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PEIDTJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  FLOAT                               External             
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 PHCHIC
         SUBROUTINE PHCHIC (IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Builds the relation between cal objects and mc tracks for the hcal
    Cinabro
     PHCO,HTHT,HTDT,PHST,FPOI
    PHMH
           IER   = 0  OK
                   -1 input bank missing
                   -2 inconsistancy in HCAL address
                   -3 not enough space
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PHCHIC                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  AUBPRS                              External             
   
 
3 PHMADJ
         SUBROUTINE PHMADJ (LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Change phma pot bank into hmad julia bank
     Author   :D. SCHLATTER              5-NOV-1988
       Input :    LIST      BOS event list
                            if LIST(2:2).eq.'-' drop POT banks
       Output:    IER       = 0  successful
                            = 1  input bank does not exist or is empty
                            = 2  not enough space
                            =-1  OK but garbage collection
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PHMADJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  BTEST                               External             
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 PHSTOJ
         SUBROUTINE PHSTOJ (LIST,IER )
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Change hcal pot banks into julia banks
     Author   :D. SCHLATTER              5-NOV-1988
     modified by: G.Capon , F.Ranjard    1-DEC-1988
     Inputs:    banks:  PHST
                LIST  /C         BOS event list
                                 if LIST(2:2).eq.'-' drop POT banks
     Outputs:   IER              = 0 successful
                                 = 1 input bank does not exist or empty
                                 = 2 not enough space
                                 =-1 OK but garbage collection
                banks:  HSDA, HSTO
                        IF the number of storeys .lt. MXSTO(=1000) THEN
                           fill HSDA word(JHSDNS)
                           in this case  JDWORK is used
                        ENDIF
          -
     Calls:     HFNDMD,BDROP,BKFMT,AUBOS
                SORTZV from KERNLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PHSTOJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  HFNDMD                                                   
                   |----  HNREG                                                    
                   |----  WBANK                               External             
                   |----  SORTZV                              External             
                   |----  WDROP                               External             
                   |----  LNBLNK                              External             
                   |----  VZERO                               External             
                   |----  HSRCR                                                    
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 PITCOJ
         SUBROUTINE PITCOJ( LIST , IER )
  ------------------------------------------------------------------------------
    CKEY PTOJ UNPACK ITCO
  ------------------------------------------------------------------------------
   Author   :- d. schlatter             10-apr-1989
     Modified :- J. Sedgbeer  90/01/04  Mod. for IFCO bank
     Modified :- J. Sedgbeer  90/04/20  Mod. to create ICCO bank
     Modified :- J. Sedgbeer  92/01/30  Remove obsolete IFCO code
   
    Get ITCO and ICCO banks from POT banks. 1. unpack digitizings
                                            2. calculate coordinates
                                            3. make corrected coords.
     Inputs:     LIST  /C    BOS event list
          -                  if LIST(2:2).eq.'-' drop POT banks
   
     Outputs:    IER = 0  successful unpacking of all banks.
                     = 1  some missing or empty input banks
                     = 2  No room to create some/all banks
                     = -1 O.K. but garbage collection done.
   
     Called by :   AUNPCK
     Calls     :   IPTOJ,ICRCOO,IMICCO
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PITCOJ                                                               
                   |----  NAMIND                              External             
                   |----  IPTOJ                                                    
                   |----  ICRCOO                                                   
                   |----  BLIST                               External             
                   |----  IMICCO                                                   
   
 
3 PITMAJ
         SUBROUTINE PITMAJ(LIST,FIELD,IER)
  ------------------------------------------------------------------------------
    CKEY PTOJ ITC
  ------------------------------------------------------------------------------
   Unpack the pot banks pitm and pasl, to the itma and iasl banks.
       Author:   R. Johnson   10-1-89 (original name : PTGMAJ)
       Modified: I. Tomalin   15-3-89 to unpack combined ITC-TPC banks.
       Modified: I. Tomalin   01-6-89 to include scattering.
       Input :    LIST      BOS event list
                            if LIST(2:2).eq.'-' drop POT banks
                  FIELD     Signed Magnetic Field in KG.
       Output:    IER       = 0  successful
                            = 1  input bank does not exist or is empty
                            = 2  not enough space
                            =-1  OK but garbage collection
      Calls     : SMINV,TRNHPA,UINCOV
      Libraries required : BOS, ALEPHLIB
    Create ITMA and IASL banks.
    Loop over the FRFT tracks.
      Load information from PITM and PASL banks into the new banks.
    End loop.
    Find the no. of ITC + TPC hits on each track and put into ITMA bank.
    Find CHI**2 of comparison between helix params. of FRFT and FKIN
    tracks. Put this into the IASL bank.
    Sort out the bank lists.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PITMAJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  MOD                                 External             
                   |----  ABS                                 External             
                   |----  UINCOV                                                   
                   |----  SMINV                                                    
                   |----  TNRHPA                                                   
                   |----  LNBLNK                              External             
                   |----  BLIST                               External             
   
 
3 PJPFXT
           SUBROUTINE PJPFXT(JFXTR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
   Create the fxtr bank and fill it from pfxt, if possible
         Author: D.Casper    17/06/97
         Input:  FRFT, PFXT banks
         Output: JFXTR   BOS index of the newly created FXTR bank; zero if
                         track bank is missing or BOS array is full
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              PJPFXT                                                               
                   |----  NAMIND                              External             
                   |----  IW                                  External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  LROWS                               External             
                   |----  KROW                                External             
   
 
3 PSCOOJ
         SUBROUTINE PSCOOJ(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Convert pot bank psco into julia bank scoo
   
       Author:     H. Meinhard       26-May-1989
   
       Input:      - LIST      /C    BOS event list
                                     If LIST(2:2) .eq. '-' drop POT bk
       Output:     - IER       /I    = 0  successful
                                     = 1  input bank does not exist or
                                          is empty
                                     = 2  not enough space
                                     = -1 ok, but garbage collection
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SPTOJ                                                                           
        |---- PSCOOJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  REAL                                External             
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 PSTCPJ
         SUBROUTINE PSTCPJ(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Convert pot bank pspo into julia bank stcp
   
       Author:     H. Meinhard       26-May-1989
   
       Input:      - LIST      /C    BOS event list
                                     If LIST(2:2) .eq. '-' drop POT bk
       Output:     - IER       /I    = 0  successful
                                     = 1  input bank does not exist or
                                          is empty
                                     = 2  not enough space
                                     = -1 ok, but garbage collection
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SPTOJ                                                                           
        |---- PSTCPJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  RVCPY                               External             
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 PTBCOJ
         SUBROUTINE PTBCOJ(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transfer the ptbc bank to the tbco bank
   
       Author:   R. Johnson  16-06-88
       Input :    LIST      BOS event list
                            if LIST(2:2).eq.'-' then drop POT banks
       Output:    IER       = 0  successful
                            = 1  input bank does not exist or is empty
                            = 2  not enough space
                            =-1  OK but garbage collection
   
       Called by TPTOJ
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPTOJ                                                                           
        |---- PTBCOJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  ITPTYP                              External             
                   |----  FLOAT                               External             
                   |----  TPDRBG                              External             
                   |----  TPDRST                              External             
                   |----  TPDPHW                              External             
                   |----  TPDSEP                              External             
                   |----  MIN                                 External             
                   |----  INT                                 External             
                   |----  TCTGLB                                                   
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 PTEXSJ
         SUBROUTINE PTEXSJ(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transfer the ptex bank to the texs bank
   
       Author:   R. Johnson  16-06-88
       Modified: D. Cinabro  07-04-91 Also transfer PT2X to T2XS
       Modified: D. Casper   16-11-95 Also transfer PTPX to TPXS
   
       Input :   LIST      /C    BOS event list
                                 if LIST(2:2).eq.'-' POT bank is dropped
   
       Output:   IER       /I    Error return=0 if operation successful
                                              -1   OK but garbage coll.
                                               2   not enough space
                                              >2   TPC errors
   
       Called by TPTOJ
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPTOJ                                                                           
        |---- PTEXSJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  FLOAT                               External             
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 PTGMAJ
         SUBROUTINE PTGMAJ(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Unpack banks tgma and tmtl from the pot
       Author:   R. Johnson   10-1-89
       Input :    LIST      BOS event list
                            if LIST(2:2).eq.'-' drop POT banks
       Output:    IER       = 0  successful
                            = 1  input bank does not exist or is empty
                            = 2  not enough space
                            =-1  OK but garbage collection
      Called by TPTOJ
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPTOJ                                                                           
        |---- PTGMAJ                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  TNRHPA                                                   
                   |----  LNBLNK                              External             
                   |----  BLIST                               External             
   
 
3 PTPCOJ
         SUBROUTINE PTPCOJ(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Unpack the ptco or ptnc bank into tpco. needs banks frtl and frft.
      Author:  R. Johnson   16-06-88
               modified by D.Schlatter
       Input :    LIST      BOS event list
                            if LIST(2:2).eq.'-' drop POT banks
       Output:    IER       = 0  successful
                            = 1  input bank does not exist or is empty
                            = 2  not enough space
                            =-1  OK but garbage collection
      Called by TPTOJ
      Calls     TUN1CO or TUN1NC
      Warning:  this routine does not sort the coordinates in TPCO
                by row and sector number, so the resulting bank cannot
                be used as input into the pattern recognition routines.
                Call TSRTCO to sort the coordinates appropriately.
      Note: if PTNC (the new POT coordinate bank) is found, then it
            is unpacked.  Otherwise the routine looks for the old
            version, named PTCO.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPTOJ                                                                           
        |---- PTPCOJ                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  AUBOS                               External             
                   |----  TUN1NC                                                   
                   |----  TUN1CO                                                   
                   |----  LNBLNK                              External             
                   |----  BDROP                               External             
                   |----  BLIST                               External             
   
 
3 SPTOJ
         SUBROUTINE SPTOJ(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Steering for satr unpacking of pot banks
   
       Author:     H. Meinhard       26-May-1989
   
       Input:      - LIST      /C    BOS event list
                                     If LIST(2:2) .eq. '-' drop POT bk
       Output:     - IER       /I    = 0  successful
                                     = 1  input bank does not exist or
                                          is empty
                                     = 2  not enough space
                                     = -1 ok, but garbage collection
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SPTOJ                                                                
                   |----  PSCOOJ                                                   
                   |----  PSTCPJ                                                   
   
 
3 TFICOR
         SUBROUTINE TFICOR(IEND,IROW,R,PHI,Z,RCR,PHICR,ZCR)
  ------------------------------------------------------------------------------
    CKEY TPC FIELD-CORRECTION
  ------------------------------------------------------------------------------
   Correct tpc coordinates for field distortions.
    This correction was developped for the data where a short
    in the fieldcage caused large coordinate distortions.
   
   
     Author    :   W. Wiedenmann  91/11/18
     Modified  :   I. Tomalin     94/01/24
                   Allow original polynomial parameterization
                   to be multiplied by a specified function of the
                   coordinates, which could for example constrain
                   corrections to be zero at the endplates.
     Modified  :   I. Tomalin     94/06/29
                   Allow several T3FC corrections to be applied in series
                   to the same data.
                   Extend T3FC bank to allow for corrections to r and z.
                   For distortions which can't be well parameterized by
                   T3FC alone (shown by JT3FIP column), call TFIMUL to
                   multiply T3FC corrections by some additional function
                   of phi, TPC current etc.
     Modified  :   W.Wiedenmann 971017
                   Don't make corrections for new alignment
                   (already incorporated in TNFC bank)
     Modified  :   D.Smith      991026  Double precision fixes for Linux
   
     Input     :
                   IEND  /I  : TPC side A (=1), B (=2)
                   IROW  /I  : TPC pad row number
                   R     /R  : radius of TPC coordinate  [cm]
                   PHI   /R  : angle  of TPC coordinate  [radian]
                   Z     /R  : z of TPC coordinate [cm]
   
     Output     :  TCR   /R  : corrected R coordinate
                   PHICR /R  : corrected PHI coordinate
                   ZCR   /R  : corrected Z coordinate
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TFICOR                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  EXIT                                External             
                   |----  NDROP                               External             
                   |----  MOD                                 External             
                   |----  PRTABL                                                   
                   |----  TFIPOL                                                   
                   |----  ABS                                 External             
                   |----  EXP                                 External             
                   |----  SNGL                                External             
   
 
3 TFILTU
         SUBROUTINE TFILTU(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Fill bank ptun with constants for packing and unpacking
    of TPC data to and from the POT.
   
       Author:   R. Johnson   15-06-88
   
       Output:   IER       /I    Error return=0 if operation successful
   
       Called by TJTOP and TPTOJ
   
       Eventually these constants will be taken from the data base.
       For now they are hard wired into this routine.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPTOJ                                                                           
        |---- TFILTU                                                               
                   |----  AUBOS                               External             
   
 
3 TFIPOL
         DOUBLE PRECISION FUNCTION TFIPOL(ITYP,IDEG,X)
  ------------------------------------------------------------------------------
    CKEY TPC FIELD-CORRECTION
  ------------------------------------------------------------------------------
   Function called in tficor to calculate regression
         Adapted from HBOOK function HSTELF
   
   
         GIVES THE VALUE COMPUTED AT X OF A STANDARD
         ELEMENTARY FUNCTION (POLYNOMIAL) OF TYPE ITYP
         AND DEGREE IDEG
         ITYP = 0   MONOMIAL
                1   TCHEBYSHEV POLYNOMIAL
                2   LEGENDRE POLYNOMIAL
                3   SHIFTED TCHEBYSHEV POLYNOMIAL
                4   LAGUERRE POLYNOMIAL
                5   HERMITE POLYNOMIAL
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TFICOR                                                                          
        |---- TFIPOL.                                                              
   
 
3 TPTOJ
         SUBROUTINE TPTOJ(FLAGS,FSORT,LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Change tpc pot banks back to the julia format
   
       Author:  R. Johnson   16-06-88
       Modified: W. Wiedenmann  3-10-91
                 allow reading of bank PTUN from datastream
   
       Input:    FLAGS(3)  /L    Flag for each of
                                      1= coordinates
                                      2= bad coordinates
                                      3= dE/dx
                                 Set true for unpacking of the item.
                 FSORT     /L    Set true to sort the coordinates by
                                 row and sector and to produce the
                                 TCRL bank.  This is necessary if the
                                 coordinates are to be input to the
                                 pattern recognition.
                 LIST      /C    BOS event list
                                 if LIST(2:2) .eq. '-' then
                                    drop POT banks
     Output:      IER   = 0  successful unpacking
                          -1 OK but garbage collection
                          1  at least 1 POT bank does not exist
                          2  not enough space
                          >2 TPC internal error
   
       If it is desired to have the coordinate bank sorted (FSORT=.T.),
       then the tracks (FRFT) should be unpacked first, so that the
       pointers from track to coordinate may be updated.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TPTOJ                                                                
                   |----  NAMIND                              External             
                   |----  TFILTU                                                   
                   |----  PTPCOJ                                                   
                   |----  TSRTCO                                                   
                   |----  PTBCOJ                                                   
                   |----  PTEXSJ                                                   
                   |----  PTGMAJ                                                   
   
 
3 TSRTCO
         SUBROUTINE TSRTCO(LIST,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Sort the tpco bank and produce the rowlist (tcrl) bank
   
       Author:  R. Johnson   28-06-88
       Modified: I. Tomalin  12-05-92 to correct bug in reordering of
                                      FTCL bank.
       Input :    LIST      BOS event list
                            if LIST(2:2).eq.'-' drop POT banks
       Output:    IER       = 0  successful
                            = 1  input bank does not exist or is empty
                            = 2  not enough space
                            =-1  OK but garbage collection
   
       Called by TPTOJ
   
       Comments
       ========
       This is meant to be used when unpacking the POT.
       If the FRTL and FTCL banks exist, then the pointers in FTCL
       are updated to point properly into the new TPCO bank.  Thus
       the track bank should be unpacked before calling this routine.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPTOJ                                                                           
        |---- TSRTCO                                                               
                   |----  NAMIND                              External             
                   |----  WBANK                               External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  SORTZV                              External             
                   |----  UCOPY                               External             
                   |----  BSWAP                               External             
                   |----  IENDTP                              External             
                   |----  LNBLNK                              External             
                   |----  BLIST                               External             
                   |----  WDROP                               External             
   
 
3 TUN1CO
         SUBROUTINE TUN1CO(IC,ITPCO,RTPCO,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Unpack single coordinate from ptco
   
       Author:  R. Johnson    15-06-88
   
       Input:  IC       /I         Coordinate number to unpack
       Output: ITPCO(6) /I         Integer attributes of bank TPCO
               RTPCO(6) /R         Real attributes of bank TPCO
               IER      /I         Error return= nonzero if coordinate
                                   cannot be found.
        Called by PTPCOJ
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PTPCOJ                                                                          
        |---- TUN1CO                                                               
                   |----  NAMIND                              External             
                   |----  ITPTYP                              External             
                   |----  FLOAT                               External             
                   |----  TPPROW                              External             
                   |----  TPDPHW                              External             
                   |----  TPDSEP                              External             
                   |----  MIN                                 External             
                   |----  INT                                 External             
                   |----  IENDTP                              External             
                   |----  TPPHI0                              External             
   
 
3 TUN1NC
         SUBROUTINE TUN1NC(IC,ITK,ITPCO,RTPCO,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Unpack single coordinate from ptnc
   
       Author:  R. Johnson    17-06-90
       Modified:D. Casper     07-06-96   Average in wire coordinates, unless
                                         a TNWZ card is present.  Also,
                                         automatically compute coordinate
                                         errors, and load in TPCO.
                D. Casper     23-04-97   Ignore the wires if a TOAL card
                                         is present, since they won't be
                                         right.
   
       Input:  IC       /I         Coordinate number to unpack
               ITK      /I         Track number in FRFT
       Output: ITPCO(12)/I         Integer attributes of bank TPCO
               RTPCO(12)/R         Real attributes of bank TPCO
               IER      /I         Error return= nonzero if coordinate
                                   cannot be found.
        Called by PTPCOJ
   
        changes:
        - print statement in first call
        - wire flag stored in jtpcit
        - modify call to TCRTRA->TCRTRN
        - correct bug 100000*IROWG+1000*ISLOT
                                 | was irow
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PTPCOJ                                                                          
        |---- TUN1NC                                                               
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
                   |----  ITPTYP                              External             
                   |----  FLOAT                               External             
                   |----  TPPROW                              External             
                   |----  TCRZVD                                                   
                   |----  IENDTP                              External             
                   |----  TCTGLB                                                   
                   |----  TCRTOF                                                   
                   |----  ALFIEL                                                   
                   |----  TLACOR                                                   
                   |----  TCRTRN                                                   
                   |----  TZCRVD                                                   
                   |----  TZCSVD                                                   
                   |----  TCORES                                                   
                   |----  TFICOR                                                   
   

2 SATR

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various SATR routines
    
     ! ALEPHLIB 21.3
        SAPRDI,SAPRHI : Fix multiline strings (M.Cattaneo)
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     SAPRDI     Print out sadigitization bank in readable format
     SAPRHI     Print out sahit bank in readable format

3 SAPRDI
         SUBROUTINE SAPRDI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print out sadigitization bank in readable format
                      H.Burkhardt    27/05/87
    Modified          H. Meinhard    14/03/89 (crate numbering corr.)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SAPRDI                                                               
                   |----  NAMIND                              External             
                   |----  IBITS                               External             
   
 
3 SAPRHI
         SUBROUTINE SAPRHI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print out sahit bank in readable format
                      H.Burkhardt    27/05/87
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SAPRHI                                                               
                   |----  NAMIND                              External             
                   |----  IBITS                               External             
                   |----  FLOAT                               External             
   

2 SDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     1st entry in SCALDES set
    
     ! ALEPHLIB 21.3
         new routine STRIGF ( B.Bloch ) to identify trigger type
         new routine STMASK ( B.Bloch ) to build trigger masks
    
     ! ALEPHLIB 15.8
       SILTOX, SIXTOL - to go to/from ARS and local sytems .
    
    
     ! ALEPHLIB 15.7
         new routine SIIDPO from B.Bloch
             SIIDPO (IMD,IST,IPH,IRD,Z,PHI,RAD) transform indices(Module,
             layer,phi,rad ) to semi-cylindrical coordinates (Z,Phi,R) with
             ideal alignment
             Phi is in degrees
             an error code is returned with RAD <0 in case of problem
    
     ! ALEPHLIB 15.1
       SIRDAF : use ALGTDB instead of MDARD to get banks with setup code
                to avoid to duplicate banks with different NR but identical
                contents.
    
     ! ALEPHLIB 14.6
       the  ADBSCONS 179 is mandatory
       -------------------------------------------------------------------
             SCALDES - SICAL GEOMETRY PACKAGE
             ----------------------------------
    
     This package is a stand alone code which may be called to access
    the SICAL geometry with different level of complexity.It knows about
    readout geometry as well as space geometry.
    
     It uses banks from the data base ( SIGO,SALG,SINT,STYP )to take into
    account internal geometry and alignment .
    
     It needs initialisation performed through a call to SIRDAF which
    will access the Data Base and initialise the package.
    
     Then any of the internal subroutine can be called.
     As a general rule ,a negative value for any output argument means
     an error occurred.
    
     Two addressing schemes are considered , one corresponding to  RAW Data
    ( which applies to triplets ) , the other one corresponding to extended
    address including the position in triplet as used in reconstructed data.
    
     RAW data format ( SIDI and SIFO banks)
     ----------------
                -------------------------------------
                |11|10| 9| 8| 7| 6| 5| 4| 3| 2| 1| 0|    Address in [0,4095]
                -------------------------------------
                <- <--------------<-----------<-----|
                 Mod   Phi Bin       R bin     Triplet
                 [0,1]  [0,31]       [0,15]     [0,3]
    
     Recontructed Data (SPDA,SMPD banks)
     ----------------
         ------------------------------------------
        |13|12|11|10| 9| 8| 7| 6| 5| 4| 3| 2| 1| 0|  +1 Address in [1,12288]
         ------------------------------------------  ==
        <---- <- <--------------<-----------<----->
        Tptpos Mod   Phi Bin       R bin     Triplet
         [0,2] [0,1]  [0,31]       [0,15]     [0,3]
    
     A first set of subroutines and function provide access to the package
     and some geometry quantities.
    
     A second set of subroutines provides decoding and encoding of addresses
     to and from indices. This , of course , doesn't use any alignment info,
     only the readout geometry.Both addressing schemes are provided.
    
     A third set of subroutines provides decoding and encoding of addresses
     to and from spatial position in cartesian and cylindrical coordinates.
     This uses internal geometry ,alignment information and the readout
     geometry.
     The addressing scheme is the Raw data scheme as described above.
    
     A fourth set of subroutines provides decoding and encoding of address
     indices to and from spatial position in cartesian and cylindrical
     coordinates.This uses internal geometry ,alignment information and the
     readout geometry.
     As it uses address indices , it can work in either addressing scheme.
    
     1_General routines
     ----------------
             SIRDAF (LUNDAF , IRUN,IOK): Initialise the package , loads
                    necessary banks from Data base unit LUNDAF for run
                    IRUN  , computes auxilliary quantities,fills internal
                    common .IOK is zero if no error , negative if error.
    
             SIGTGO (ICONS,RCONS) : Returns in array ICONS(5),RCONS(20) the
                    following quantities
                    ICONS(1) = number of modules
                    ICONS(2) = number of z layers ( called minimod)
                    ICONS(3) = number of Radial bins
                    ICONS(4) = number of Phi bins
                    ICONS(5) not yet used
    
                    RCONS(1) = z position of first sens layer side A
                    RCONS(2) = z position of first sens layer side B
                    RCONS(3) = z width of a minimod
                    RCONS(4) = lower R position of first padrow side A
                    RCONS(5) = lower R position of first padrow side B
                    RCONS(6) = R width of a pad
                    RCONS(7) = Phi offset in first triplet plane
                    RCONS(8) = Phi offset in second triplet plane
                    RCONS(9) = Phi offset in third triplet plane
                    RCONS(10)= Phi width of a pad
       The next quantities are related to parametrization and correspond to
     amounts of material :
                    RCONS(11)= # of radlength before first sens layer
                    RCONS(12)= # of radlength per minimod
                    RCONS(13)= width of material(cm) before first minimod
                    RCONS(14)= width of material(cm) after last minimod
                    RCONS(15)= width of last minimod(cm)
                    RCONS(16)= width of material(cm) before first sens layer
                    RCONS(17)= overlap of adjacent crystals (cm)
                    RCONS(18-20)  not yet used
    
             SIPRGO : Prints out a summary of the current geometry constants
    
             SIDALI (IFL,IBD) : function that returns,for address IBD in the
                    Reconstructed Rata scheme , a crude position which does
                    not include internal alignment and fine offsets, only
                    the basic alignment.
                    For IFL = 1  , SIDALI is R (cm)
                    For IFL = 2  , SIDALI is Phi ( degrees)
                    For IFL = 3  , SIDALI is Z ( cm)
                    In case of problem , SIDALI is 0.
    
    2_Encoding/decoding addresses from and to indices
    ------------------------------------------------
          SIDCOD (IAD,IOR,IMD,IST,IPH,IRD) decode IAD,IOR (in Raw Data scheme)
          SIDCOZ (IBD,IMD,IST,IPH,IRD) decode IBD (in Reconstructed Data scheme)
          SIENCD (IAD,IOR,IMD,IST,IPH,IRD) encode to IAD,IOR (in Raw Data scheme)
          SIENCZ (IBD,IMD,IST,IPH,IRD) encode to IBD (in Reconstructed Data scheme)
    
    3_Encoding/decoding to/from addresses from/to spatial position
    --------------------------------------------------------------
          In case of error ( missing bank ,wrong address or space point outside
          detector) an error code is returned with IOK <0
    
          SIATOR (IAD,IOR,RAD,TETA,PHI,IOK)decode IAD,IOR (in Raw Data scheme)
                                           To cylindrical coordinates (R,Theta,Phi)
          SIATOX (IAD,IOR,POS,IOK)         decode IAD,IOR (in Raw Data scheme)
                                           To cartesian coordinates POS(3)=X,Y,Z
          SIRTOA (IAD,IOR,RAD,TETA,PHI,IOK)encode to IAD,IOR (in Raw Data scheme)
                                         from cylindrical coordinates (R,Theta,Phi)
          SIXTOA (IAD,IOR,X,Y,,Z,IOK)      encode to IAD,IOR (in Raw Data scheme)
                                         from cartesian coordinates (X,Y,Z)
    
    4_Encoding/decoding to/from add indices from/to spatial position
    --------------------------------------------------------------
       SIITOR (IMD,IST,IPH,IRD,Z,PHI,RAD) transform indices(Module,layer,phi,rad)
                         to semi-cylindrical coordinates (Z,Phi,R).
                         Phi is in degrees
                         an error code is returned with RAD <0 in case of problem
    
       SIXTOI (R,PHI,Z,IRD,IPH,IST,DR,DP,IOK)encode to indices (rad,Phi,layer)
                         from semi-cylindrical coordinates (R,Phi,Z)
          additionnal output : DR = normalised position within R bin [0.,1.]
                           DP(3)= normalised position within Phi bin [0.,1.]
                                  with the 3 possible offsets
                   an error code is returned with IOK <0 in case of problem
    
       SIZFRI(ZPOS,IST,IMD) from indices (layer,module) get ZPOS coordinate
    
       SIZTOI(ZPOS,IST,IMD) transform ZPOS coor into indices ( layer,module)
                            IST < 0 means outside detector
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     SIATOR     Address decoding routine  into r,theta,phi radial coordinates
     SIATOX     Address decoding routine  into x,y,z position
     SIDALI     Address decoding function sical into rho,phi,z
     SIDCOD     Address decoding routine  sical
     SIDCOZ     Address decoding routine  sical
     SIENCD     Address encoding routine  sical
     SIENCZ     Address encoding routine  sical
     SIGTGO     Get geometry constants for  sical
     SIIDPO     Transform subcomponents indices into z,phi,rho coordinates
     SIITOR     Transform subcomponents indices into z,phi,rho coordinates
     SILTOX     Geometrical transformation routine from local r,phi  cylindrical
     SIPLOC     Find local position inside phi bin
     SIPRGO     Geometry printing routine  sical
     SIPTOJ     Find phi bin number frm phi position in module
     SIRDAF     Scaldes interface with daf
     SIRLOC     Find local position inside r bin
     SIRTOA     Address encoding routine  from r,theta,phi radial coordinates
     SIRTOI     Find r bin number from r position in module
     SIXTOA     Address encoding routine  from x,y,z coordinates
     SIXTOI     Address encoding routine from r,phi,zed  radial coordinates to add
     SIXTOL     Geometrical transformation routine from ars cylindrical
     SIZFRI     Find z position  from  z layer and module
     SIZTOI     Find z layer and module   from z position
     STMASK     Return trigger masks for current run using xtbn bank
     STRIGF     Return trigger type for current event

3 SIATOR
         SUBROUTINE SIATOR(IAD,IOR,RAD,TETA,PHI,IOK)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address decoding routine  into r,theta,phi radial coordinates
     Input :
            IAD   ADDRESS encoded (16 bits)
            IOR   Bin number in triplet (0-2)
     Output:
            RAD ,TETA,PHI Radial coordinates of pad center
            IOK = -1 means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIATOR                                                               
                   |----  SIDCOD                                                   
                   |----  ISINUM                              External             
                   |----  PHSHFT                              External             
                   |----  Z0SNSI                              External             
                   |----  COS                                 External             
                   |----  DPOSSI                              External             
                   |----  GAPXSI                              External             
                   |----  SIN                                 External             
                   |----  SQRT                                External             
                   |----  ATG                                 External             
   
 
3 SIATOX
         SUBROUTINE SIATOX(IAD,IOR,POS,IOK)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address decoding routine  into x,y,z position
     Input :
            IAD   ADDRESS encoded (16 bits)
            IOR   Bin number in triplet (0-2)
     Output:
            POS(3) x,y,z of corresponding pad barycenter
            IOK = -1 means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIATOX                                                               
                   |----  SIDCOD                                                   
                   |----  ISINUM                              External             
                   |----  PHSHFT                              External             
                   |----  Z0SNSI                              External             
                   |----  COS                                 External             
                   |----  DPOSSI                              External             
                   |----  GAPXSI                              External             
                   |----  SIN                                 External             
   
 
3 SIDALI
          REAL FUNCTION SIDALI(IFL,IBD)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       May 1992
   Address decoding function sical into rho,phi,z
     Input :
            IFL   FLAG to define return value(1= rho,2=phi,3=z)
            IBD   ADDRESS encoded (14 bits)
     Output:
            Rho    Radial position ( cm)
      OR    Phi    Azimuth ( degrees fom 0. to 360.)
      OR    z      Z position ( cm)
            0..    means error
     Called by USER program  : NO FINE INTERNAL ALIGNEMENT PROVIDED !!!!!
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIDALI                                                               
                   |----  IAND                                External             
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
                   |----  COS                                 External             
                   |----  DPOSSI                              External             
                   |----  SIN                                 External             
                   |----  SQRT                                External             
                   |----  ATG                                 External             
                   |----  Z0SNSI                              External             
   
 
3 SIDCOD
         SUBROUTINE SIDCOD(IAD,IOR,IMD,IST,IPH,IRD)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address decoding routine  sical
     Input :
            IAD   ADDRESS encoded (16 bits)
            IOR   Bin number in triplet (0-2)
     Output:
            IMD    Module number1-2
            IST    Stack  number 1-12
            IPH    PHibin number 1-32
            IRD    Radialbin number 1-16
        any Ixx = -1 means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SIATOR                                                                          
   SIATOX                                                                          
   SIXAMK                                                                          
        |---- SIDCOD                                                               
                   |----  IAND                                External             
   
 
3 SIDCOZ
         SUBROUTINE SIDCOZ(IBD,IMD,IST,IPH,IRD)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address decoding routine  sical
     Input :
            IBD   ADDRESS encoded (14 bits)
     Output:
            IMD    Module number1-2
            IST    Stack  number 1-12
            IPH    PHibin number 1-32
            IRD    Radialbin number 1-16
        any Ixx = -1 means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIDCOZ                                                               
                   |----  IAND                                External             
   
 
3 SIENCD
         SUBROUTINE SIENCD(IAD,IOR,IMD,IST,IPH,IRD)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address encoding routine  sical
     Input :
            IMD    Module number1-2
            IST    Stack  number 1-12
            IPH    PHibin number 1-32
            IRD    Radialbin number 1-16
     Output:
            IAD   ADDRESS encoded (16 bits)
            IOR   Bin number in triplet (0-2)
            IAD = -1 means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SIRTOA                                                                          
   SIXTOA                                                                          
        |---- SIENCD                                                               
                   |----  MOD                                 External             
   
 
3 SIENCZ
         SUBROUTINE SIENCZ(IAD,IMD,IST,IPH,IRD)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address encoding routine  sical
     Input :
            IMD    Module number1-2
            IST    Stack  number 1-12
            IPH    PHibin number 1-32
            IRD    Radialbin number 1-16
     Output:
            IAD   ADDRESS encoded (14 bits)
            IAD = -1 means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIENCZ                                                               
                   |----  MOD                                 External             
   
 
3 SIGTGO
         SUBROUTINE SIGTGO (ICONS,RCONS)
  ------------------------------------------------------------------------------
    CKEY SCALDES GET GEOMETRY / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Get geometry constants for  sical
     Input : none
     Output: ICONS  array of integer constants  DIM(5)
             RCONS  array of real    constants  DIM(20)
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIGTGO                                                               
                   |----  Z0SNSI                              External             
                   |----  DPOSSI                              External             
                   |----  PHSHFT                              External             
   
 
3 SIIDPO
         SUBROUTINE SIIDPO(IMD,IST,IPH,IRD,ZZ,PHI,RAD)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE / USER
  ------------------------------------------------------------------------------
       B.BLOCH     December 1993
   Transform subcomponents indices into z,phi,rho coordinates
    without fine alignment = ideal positions ( to be used within DALI)
     Input :
            IMD   Module number ( 1-2)
            IST   Z stack number ( 1-12)
            IPH   Phi bin number ( 1-32)
            IRD   Radial bin number ( 1-16)
     Output:
            ZZ,PHI,RAD    corresponding z, phi ( degrees), rho
            RAD = -1.     means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIIDPO                                                               
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
                   |----  Z0SNSI                              External             
   
 
3 SIITOR
         SUBROUTINE SIITOR(IMD,IST,IPH,IRD,ZZ,PHI,RAD)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE / USER
  ------------------------------------------------------------------------------
       B.BLOCH       May    1992
   Transform subcomponents indices into z,phi,rho coordinates
     Input :
            IMD   Module number ( 1-2)
            IST   Z stack number ( 1-12)
            IPH   Phi bin number ( 1-32)
            IRD   Radial bin number ( 1-16)
     Output:
            ZZ,PHI,RAD    corresponding z, phi ( degrees), rho
            RAD = -1.     means error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIITOR                                                               
                   |----  MOD                                 External             
                   |----  ISINUM                              External             
                   |----  PHSHFT                              External             
                   |----  Z0SNSI                              External             
                   |----  COS                                 External             
                   |----  DPOSSI                              External             
                   |----  GAPXSI                              External             
                   |----  SIN                                 External             
                   |----  SQRT                                External             
                   |----  ATG                                 External             
   
 
3 SILTOX
         SUBROUTINE SILTOX(RLO,PLO,IST,IMD,RCL,PCL)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Geometrical transformation routine from local r,phi  cylindrical
    coordinates to ARS cylindrical coordinates
     Input :
            RLO ,PLO   R,PHI coordinates of space point in local system
            IST ,IMD   plane and module indices
     Output:
            RCL,PCL       corresponding coordinates in ARS sytem
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SILTOX                                                               
                   |----  ISINUM                              External             
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
                   |----  COS                                 External             
                   |----  DPOSSI                              External             
                   |----  GAPXSI                              External             
                   |----  SIN                                 External             
                   |----  SQRT                                External             
                   |----  ATG                                 External             
   
 
3 SIPLOC
         REAL FUNCTION SIPLOC(PHI,Z)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE POSITION/ USER
  ------------------------------------------------------------------------------
       B.BLOCH       February 92
   Find local position inside phi bin
     Input :
            PHI  Azimuth (rad)
            Z    Z position (cm)
     Output:
            SIPLOC Position   within Phi bin (0.,1.)
                  -1.means outside detector or error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIPLOC                                                               
                   |----  INT                                 External             
                   |----  ABS                                 External             
                   |----  Z0SNSI                              External             
                   |----  DPOSSI                              External             
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
   
 
3 SIPRGO
         SUBROUTINE SIPRGO
  ------------------------------------------------------------------------------
    CKEY SCALDES PRINT GEOMETRY / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Geometry printing routine  sical
     Input : none
     Output: none
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIPRGO.                                                              
   
 
3 SIPTOJ
         INTEGER FUNCTION SIPTOJ(PHI,IMD,IST)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       February 92
   Find phi bin number frm phi position in module
     Input :
            PHI  PHI (radian)
            IMD  Module number ( 1 or 2)
            IST  Stack number  ( 1 to 12)
     Output:
            SIPTOJ integer Phi bin ( 1 to 32)
                   0 means outside detector or error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIPTOJ                                                               
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
                   |----  INT                                 External             
   
 
3 SIRDAF
         SUBROUTINE SIRDAF(LUNDAF,IRUN,IOK)
  ------------------------------------------------------------------------------
    CKEY SCALDES READ DAF BANKS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Scaldes interface with daf
    Fill SCALDES commons from direct access file.
     Input :
            LUNDAF Logical Unit for DAF
            IRUN   Run number
     Output:
            IOK   (0 = OK   , -1 = ERROR)
     Called by USER program
     Calls: ALGTDB                    from ALEPHLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIRDAF                                                               
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  CHAINT                              External             
   
 
3 SIRLOC
         REAL FUNCTION SIRLOC(RAD,Z)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE POSITION/ USER
  ------------------------------------------------------------------------------
       B.BLOCH       February 92
   Find local position inside r bin
     Input :
            RAD  Radius (cm)
            Z    Z position (cm)
     Output:
            SIRLOC Position ( cm) in R bin (0.,1.)
                  -1.means outside detector or error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIRLOC                                                               
                   |----  INT                                 External             
   
 
3 SIRTOA
         SUBROUTINE SIRTOA(IAD,IOR,RAD,TETA,PHI,IOK)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address encoding routine  from r,theta,phi radial coordinates
     Input :
            RAD ,TETA,PHI Radial coordinates of space point
     Output:
            IAD   ADDRESS encoded (16 bits) for SIDI
            IOR   Bin number in triplet (0-2)
            IOK non 0 means error    -1 wrong in R
                                     -2 wrong in Z
                                     -3 wrong in Phi
                                     -4 wrong in address coding
                                     -5 falls in gap between halves
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIRTOA                                                               
                   |----  COS                                 External             
                   |----  TAN                                 External             
                   |----  SIN                                 External             
                   |----  ABS                                 External             
                   |----  INT                                 External             
                   |----  Z0SNSI                              External             
                   |----  DPOSSI                              External             
                   |----  ISINUM                              External             
                   |----  GAPXSI                              External             
                   |----  SQRT                                External             
                   |----  ATG                                 External             
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
                   |----  SIENCD                                                   
   
 
3 SIRTOI
         INTEGER FUNCTION SIRTOI(RAD,IMD)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       February 92
   Find r bin number from r position in module
     Input :
            RAD  Radius (cm)
            IMD  Module number ( 1 or 2)
     Output:
            SIRTOI integer R bin ( 1 to 16)
                   0 means outside detector or error
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIRTOI                                                               
                   |----  INT                                 External             
   
 
3 SIXTOA
         SUBROUTINE SIXTOA(IAD,IOR,XX,YY,ZZ,IOK)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address encoding routine  from x,y,z coordinates
     Input :
            XX ,YY ,ZZ  coordinates of space point
     Output:
            IAD   ADDRESS encoded (16 bits) for SIDI
            IOR   Bin number in triplet (0-2)
            IOK non 0 means error    -1 wrong in R
                                     -2 wrong in Z
                                     -3 wrong in Phi
                                     -4 wrong in address coding
                                     -5 falls in gap between halves
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIXTOA                                                               
                   |----  ABS                                 External             
                   |----  INT                                 External             
                   |----  Z0SNSI                              External             
                   |----  DPOSSI                              External             
                   |----  ISINUM                              External             
                   |----  GAPXSI                              External             
                   |----  SQRT                                External             
                   |----  ATG                                 External             
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
                   |----  SIENCD                                                   
   
 
3 SIXTOI
         SUBROUTINE SIXTOI(RED,PHU,ZED,IRD,IPH,IST,DRA,DP,IOK)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Address encoding routine from r,phi,zed  radial coordinates to add
    indices
     Input :
            RED ,PHU,ZED  R,PHI,Z coordinates of space point
     Output:
            IRD,IPH,IST   corresponding bins in R , Phi , Z
            DRA           offset[0.,1.] Within bin IRD
            DP(3)         offset[0.,1.] Within bin IPH in 3 offset planes
            IOK non 0 means error    -1 wrong in R
                                     -2 wrong in Z
                                     -3 wrong in Phi
                                     -5 falls in gap between halves
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIXTOI                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ABS                                 External             
                   |----  INT                                 External             
                   |----  Z0SNSI                              External             
                   |----  DPOSSI                              External             
                   |----  ISINUM                              External             
                   |----  GAPXSI                              External             
                   |----  SQRT                                External             
                   |----  ATG                                 External             
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
   
 
3 SIXTOL
         SUBROUTINE SIXTOL(IRD,IPH,IST,IMD,DRA,DPH,RLO,PLO,ZLO)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
       B.BLOCH       October 91
   Geometrical transformation routine from ars cylindrical
    coordinates indices to local cylindrical coordinates
     Input :
            IRD ,IPH,IST  R,PHI,Z indices of space point
            IMD           Module  index
            DRA           offset[0.,1.] Within bin IRD
            DPH           offset[0.,1.] Within bin IPH of cluster z plane
     Output:
            RLO,PLO,ZLO   corresponding coordinates in local sytem
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIXTOL                                                               
                   |----  MOD                                 External             
                   |----  PHSHFT                              External             
                   |----  Z0SNSI                              External             
   
 
3 SIZFRI
         SUBROUTINE SIZFRI(ZPOS,IST,IMD)
  ------------------------------------------------------------------------------
    CKEY SCALDES DECODE  / USER
  ------------------------------------------------------------------------------
       B.BLOCH       Marh 93
   Find z position  from  z layer and module
     Input :
            IST       corresponding Z bin
            IMD       corresponding Module number
     Output:
            ZPOS     Z coordinate  of space point
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIZFRI                                                               
                   |----  Z0SNSI                              External             
                   |----  DPOSSI                              External             
   
 
3 SIZTOI
         SUBROUTINE SIZTOI(ZPOS,IST,IMD)
  ------------------------------------------------------------------------------
    CKEY SCALDES ENCODE  / USER
  ------------------------------------------------------------------------------
       B.BLOCH       Marh 93
   Find z layer and module   from z position
     Input :
            ZPOS     Z coordinate  of space point
     Output:
            IST       corresponding Z bin  IF < 0  : outside detector
            IMD       corresponding Module number
     Called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SIZTOI                                                               
                   |----  ABS                                 External             
                   |----  INT                                 External             
                   |----  Z0SNSI                              External             
                   |----  DPOSSI                              External             
   
 
3 STMASK
         SUBROUTINE STMASK(IRUN,MASKL,MASKR,MASKP,MASKS,MASK)
  ------------------------------------------------------------------------------
    CKEY SCALDES TRIGGER MASK
  ------------------------------------------------------------------------------
   Return trigger masks for current run using xtbn bank
       INPUT:  IRUN
       OUTPUT: MASKL - Trigger mask for any LCAL trigger
               MASKR - Trigger mask for random   trigger
               MASKP - Trigger mask for any physics trigger
               MASKS - Trigger mask for SICAL  trigger
        Author B Bloch-Devaux May 1992
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   STRIGF                                                                          
        |---- STMASK                                                               
                   |----  VZERO                               External             
                   |----  NAMIND                              External             
                   |----  AGETDB                              External             
                   |----  CHAINT                              External             
                   |----  IBSET                               External             
   
 
3 STRIGF
         SUBROUTINE STRIGF(IRUN,TLCAL,TRAND,TPHYS,TSCAL,FAIL)
  ------------------------------------------------------------------------------
    CKEY SCALDES TRIGGER TYPE
  ------------------------------------------------------------------------------
   Return trigger type for current event
   
       Author B.Bloch-Devaux may 92
                         Use ALTRIG to access Trigger bits
       Input:  IRUN
       Output: TLCAL    - Trigger is any LCAL trigger
               TRAND    - Trigger is random   trigger
               TPHYS    - Trigger is any physics trigger
               TSCAL(4) - Trigger is any SICAL  trigger
               FAIL     - no trigger info
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              STRIGF                                                               
                   |----  STMASK                                                   
                   |----  ALTRIG                                                   
                   |----  NAMIND                              External             
                   |----  IAND                                External             
   

2 TDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     TPC geometry package
     ! correction file no.1 for ALEPHLIB 30.8
        TRDDAF : Print calibration bank style message once only (M.Cattaneo)
    
     ! correction file no.4 for ALEPHLIB 30.7
        THTRAN : Use DOUBLE PRECISION for SP0,CP0, to avoid numerical problems
                                                                  (M.Cattaneo)
    
     ! ALEPHLIB 30.5
        TSCINT : Add 201 statement after end of DO loop for Linux (A.Waananen)
    
     ! ALEPHLIB 30.4 correction file 1
        TSCINT : Protect against infinite momentum tracks 
                 (e.g. if magnetic field is off)           (M.Cattaneo)
    
     ! ALEPHLIB 30.3
        TCTSEC - Correct for transverse drift velocity                (D.Casper)
        TCTGLB - disable transverse drift correction if sector number
                 is negative (to allow old behavior to be selected)   (D.Casper)
    
     ! ALEPHLIB 30.2
        new alignment (W.Wiedenman) is introduced
    
        TRDDAF, TGHPAL, TALINI, TCTGLB - support for new alignment banks.
        TCRTRN - new routine (copied from TCRTRA) for new alignment.
        TMATUT - new routine auxillary to TALINI.
    
     ! ALEPHLIB 21.3
        TGEPBK : Fix multiline strings (M.Cattaneo)
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     TALINI     Establish tpc alignment matrices at run beginning for 1997 alignment
     TCOREC     Correct tpc coordinates for imperfections of the drift field
     TCRTRN     New transverse drift velocity correction of tpc coordinates
     TCTGLB     Transform tpc coordinates to global frame,
     TCTSEC     Transform coordinates to tpc sector frame,
     TGEDMP     Dump tpc geometry
     TGEPBK     Print content of bos -banks referring to the tpc
     TGEPRI     Short printout of the tpc geometry on unit# lout
     TGEWIR     Fill wire geometry
     TGHPAL     Transform helix from aleph coordinates to tpc coordinates
     TGHPTS     Transform helix to sector frame
     THTFLG     Which tpc padrows is a given track expected to hit?
     THTRAN     Transform helix to another coordinate system with z axis parallel
     TMATUT     Compute the matrix : aout = (a1)*(t_ic)*(a2**t)
     TPDINT     Find intersection of aleph track with tpc padrows, including
     TRDDAF     Read daf and fill commom blocks tpgeom,tpgeop,tpgeow,tpgeot
     TRDT90     Initialize tpc90 geometry
     TRHFLG     Which tpc padrows is a given helix expected to hit?
     TSCHEK     Check if track falls within sector
     TSCINT     Test if helix intersects a given tpc sector in r*phi
     TSNEXT     Return list of sectors adjacent to an input list of sectors

3 TALINI
         SUBROUTINE TALINI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - R.Johnson - 880627
   Establish tpc alignment matrices at run beginning for 1997 alignment
    This routine is compatible with either old or new alignment constants
    W.Wiedenmann - 05-03-97
               -  modified to do Rz correction from TNLO bank
               -  If no TNLO bank is found then the old TSLO bank
                  is used and the Rz correction is not done in
                  TALINI but in TZCSVD from the old TRZS bank.
                  Thus TALINI should be backward compatible to
                  old setup.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TRDDAF                                                                          
        |---- TALINI                                                               
                   |----  NAMIND                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  FLOAT                               External             
                   |----  MOD                                 External             
                   |----  RTABL                               External             
                   |----  TMATUT                                                   
                   |----  XTEMP                               External             
   
 
3 TCOREC
         SUBROUTINE TCOREC(RAD,PHI,Z)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Correct tpc coordinates for imperfections of the drift field
   
     Author    :   M. Schmelling   88/08/30
   
     Input     :
                   RAD /R  : radius of TPC coordinate  [cm]
                   PHI /R  : azimuthal angle of TPC coordinate [rad]
                   Z   /R  : z of TPC coordinate [cm]  (not changed)
   
     Output     :  RAD /R  : corrected radius
                   PHI /R  : corrected azimuthal angle
   
     Called by TCOOR
     External references   : FINT  Cernlib E104
   
     Description
     ===========
     TCOREC applies a first order correction to the transverse
     components of individual TPC coordinates. The coordinates have
     to be given in the overall ALEPH reference frame.
   
     To apply the correction the user has to specify the option
     'TCOR' on the TOPT steering card.
   
     --> Currently only the imperfections of the magnetic field <--
     --> are taken into account.                                <--
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TLACOC                                                                          
   TLACOP                                                                          
   TLACOR                                                                          
        |---- TCOREC                                                               
                   |----  ABS                                 External             
                   |----  FINT                                External             
                   |----  FSPACE                              External             
                   |----  INDCOR                              External             
   
 
3 TCRTRN
         SUBROUTINE TCRTRN(ISLOT,R,PHI,Z,RC,PHIC,ZC)
  ------------------------------------------------------------------------------
    CKEY TPC,E-FIELD,DISTORTIONS
  ------------------------------------------------------------------------------
   New transverse drift velocity correction of tpc coordinates
    Used for 1997 alignment procedure where transverse drift depends on the
    slot number (rather than the endplate) and also affects Z.
    This routine is a modification of TCRTRA and is compatible with
    either new or old alignment constants.
   
     Author    :   A. Jahn    89/06/23
     Modified  :   R. Johnson 90/06/06   To operate stand-alone in
                                         the ALEPHLIB.
   
                   F.Ranjard  92/02/24   To call TPDVEL
                   W.Wiedenmann          Use new alignment with calculated
                                         transverse drift velocities.
                                         Create TCRTRN from TCRTRA
   
   
     Input     :
                   ISLOT/I  : TPC sector number (1-36)
                   R    /R  : radius of TPC coordinate  [cm]
                   PHI  /R  : azimuthal angle of TPC coordinate [rad]
                   Z    /R  : z of TPC coordinate [cm]
   
     Output     :  RC   /R  : corrected radius
                   PHIC /R  : corrected azimuthal angle
                   ZC   /R  : corrected z coordinate
   
     Description
     ===========
     TCRTRN takes the drift-velocity components ux, uy and uz as
     measured by the laser-calibration system and evaluates the
     true coordinates via:
               x_real = x_meas + zdrft*(ux/uz)
               y_real = y_meas + zdrft*(uy/uz)
     where zdrft is the drift length.
   
     Note:  the TPC geometry must be initialized before calling this
            routine.
            TPDVEL must have been called with the right option either
            by JULIA or AUNPCK.
            It is always called by AUNPCK at beginning of run with
            option 'POT'.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TCRTRN                                                               
                   |----  NAMIND                              External             
                   |----  IENDTP                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ALTELL                              External             
                   |----  TCTSEC                                                   
                   |----  TPC_UXY                             External             
                   |----  TPDVEL                                                   
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
   
 
3 TCTGLB
         SUBROUTINE TCTGLB(JSLOT,RS,RPHIS,ZS,R,RPHI,Z)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transform tpc coordinates to global frame,
    including associated alignment corrections
   
        Author:    R. Johnson 7-2-87
        Modified:  R. Johnson 3-8-87
        Modified:  W. Wiedenmann 5-3-97
                      - correct for transverse drift in tilted
                        coordinate system
                   D. Casper 08-05-97
                      - disable transverse drift correction if sector number
                        is negative (to allow old behavior to be selected)
   
        Input:
            - JSLOT    /I     Sector number; if negative, no transverse
                              drift correction is applied.
            - RS       /R     Radius in sector frame
            - RPHIS    /R     R*Phi is sector frame
            - ZS       /R     Z in sector frame
        Output:
            - R        /R     Radius in global frame
            - RPHI     /R     R*Phi in global frame
            - Z        /R     Z in global frame
   
        Called by TCOOR
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   PTBCOJ                                                                          
   TUN1NC                                                                          
   TZCSVD                                                                          
        |---- TCTGLB                                                               
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  ASTOGL                              External             
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
   
 
3 TCTSEC
         SUBROUTINE TCTSEC(ISLOT,RG,PHIG,ZG,RS,RPHIS,ZS)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transform coordinates to tpc sector frame,
    including associated alignment corrections
   
        Author:    R. Johnson 20-3-88
        Modified:  R. Johnson 15-4-88
   
        Input:
            - ISLOT    /I     Sector number
            - RG       /R     Radius in global frame
            - PHIG     /R     Phi in global frame
            - ZG       /R     Z in global frame
        Output:
            - RS       /R     Radius in sector frame
            - RPHIS    /R     R*Phi in sector frame
            - ZS       /R     Z in sector frame
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TCRTRN                                                                          
   TZCSVD                                                                          
        |---- TCTSEC                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  DGLTOS                              External             
                   |----  AGLTOS                              External             
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
   
 
3 TGEDMP
         SUBROUTINE TGEDMP(IUNIT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Dump tpc geometry
   
    Author:   R. Johnson  7-09-86
    Modified: R. Johnson  1-10-87
    Modified: R. Richter  9-05-88
   
    Description
    ===========
   
         This routine dumps the commons TPGEOM,TPGEOP,TPGEOW
         and TPGEOT to unit IUNIT.
   
    Called by USER program after TRDDAF is called
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TGEDMP                                                               
                   |----  TPPROW                              External             
                   |----  ITPTYP                              External             
                   |----  NTPCRN                              External             
                   |----  TPCORN                              External             
                   |----  FORMAT                              External             
                   |----  TPDRBG                              External             
                   |----  TPDRST                              External             
                   |----  TPDPHF                              External             
                   |----  TPDPHW                              External             
                   |----  TPDPHS                              External             
                   |----  TPTRBG                              External             
                   |----  ITPADG                              External             
                   |----  TPTPHC                              External             
                   |----  TPTPHW                              External             
                   |----  NTREG1                              External             
                   |----  ITLWIL                              External             
                   |----  ITLWIF                              External             
                   |----  MAX0                                External             
                   |----  MIN0                                External             
                   |----  FLOAT                               External             
   
 
3 TGEPBK
         SUBROUTINE TGEPBK
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print content of bos -banks referring to the tpc
   
        Author:    R. Richter      2-06-87
         !!!   This S.R. will have to be changed for versions
         !!!   of ADBSDAF > 105 in order to show the additional
         !!!   constants in TCGD and in TMTY.  R. Richter 11.05.88
   
        Called by USER program after call to TRDDAF
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TGEPBK                                                               
                   |----  NAMIND                              External             
                   |----  PRTABL                                                   
   
 
3 TGEPRI
         SUBROUTINE TGEPRI (LOUT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - M.Mermikides, F.Ranjard - 880420
   Short printout of the tpc geometry on unit# lout
   - called by USER program after a call to TRDDAF
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TGEPRI                                                               
                   |----  TPDPHF                              External             
                   |----  TPDPHW                              External             
                   |----  TPCORN                              External             
                   |----  NTPCRN                              External             
                   |----  TPDRBG                              External             
                   |----  TPDSEP                              External             
                   |----  TPDWID                              External             
                   |----  TPTRBG                              External             
                   |----  TPTRST                              External             
                   |----  TPTRHG                              External             
                   |----  FORMAT                              External             
                   |----  ITPADG                              External             
                   |----  TPTPHW                              External             
   
 
3 TGEWIR
         SUBROUTINE TGEWIR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Fill wire geometry
   
     Author:   D.Demille   2-2-86
     Modified: R.Johnson   6-5-87
     Modified: R.Richter  29-4-88  (removed frame-part from wire-length)
   
     Called from TRDDAF
   
     Description:
     ===========
     This routine determines the horizontal extent of each wire on each
     type of sector in the ALEPH TPC.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TRDDAF                                                                          
        |---- TGEWIR                                                               
                   |----  NTPCRN                              External             
                   |----  UCOPY                               External             
                   |----  TPCORN                              External             
                   |----  NTREG1                              External             
                   |----  ATAN                                External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
   
 
3 TGHPAL
         SUBROUTINE TGHPAL(P,PA)
  ------------------------------------------------------------------------------
    CKEY TPCDES HELIX TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform helix from aleph coordinates to tpc coordinates
       Author:   R. Johnson   19-08-89
       Modified: R. Johnson   21-1-91 separate the geometry calculations
                              into another routine which can be called
                              in a different context
                 D. Casper    05-03-97 handle new style alignment bank
                              (TNOS)
       Input:
         - P(5)       /R     Helix parameters in ALEPH frame
                             1/r,tanl,phi0,d0,z0
                             (d0>0 = positive ang. mom. about z axis)
                             (r>0  = counterclockwise rotation)
       Output:
         - PA(5)     /R      Helix parameters in TPC frame
     Remarks:  only translations and rotations about the z axis are
               possible in this case.  Rotations about x and y are
               ignored since the helix model always assumes a helix
               about the z axis.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   THTFLG                                                                          
   TPDINT                                                                          
        |---- TGHPAL                                                               
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  THTRAN                                                   
   
 
3 TGHPTS
         SUBROUTINE TGHPTS(ISLOT,P,PS)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Transform helix to sector frame
   
       Author:   R. Johnson   07-08-87
   
       Input:
          - ISLOT      /I     TPC sector slot number (1-36)
          - P(5)       /R     Helix parameters in global frame
                              1/r,tanl,phi0,d0,z0
                              (d0>0 = positive ang. mom. about z axis)
                              (r>0  = counterclockwise rotation)
       Output:
          - PS(5)      /R     Helix parameters in the reference frame
                              of the sector ISLOT:  z=0 is at the
                              sense wire plane with the positive z
                              axis pointing toward detector center.
                              The origin is at the padrow centers, and
                              the x axis divides the sector into two
                              symmetric pieces.
   
        Description:
        -----------
        The basic transformation involves just a rotation in phi
        and a translation in z and, for endplate 1, A, a reflection
        in z.  In principle alignment corrections should be made,
        however, that is not done for two reasons: first, after
        such corrections, the helix would no longer be aligned with
        the z axis;  second, that would waste a lot of time, as this
        routine is intended to be used primarily for matching tracks
        with wire pulses, for which great accuracy is not necessary
        (the cuts for picking up wires being the order of centimeters).
        To find an accurate extrapolation of a helix to sector coordinates,
        one must find the desired point on the helix in the global system
        and transform that point, including alignment and field
        corrections, into the sector system.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPDINT                                                                          
   TSCINT                                                                          
        |---- TGHPTS                                                               
                   |----  IENDTP                              External             
                   |----  TPPHI0                              External             
   
 
3 THTFLG
         SUBROUTINE THTFLG(ITK,IFLG)
  ------------------------------------------------------------------------------
    CKEY TPCDES TRACK TPC / USER
  ------------------------------------------------------------------------------
   Which tpc padrows is a given track expected to hit?
    Author:  R. Johnson    13-07-89
    Input:     ITK       /I      Track number in FRFT
    Output:    IFLG(21)  /I      0 if no hit expected on this row
                                 1 if a hit is expected on this row
    NOTE:  the TPC geometry commons must be initialized by a call to
           TRDDAF before this routine is called
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              THTFLG                                                               
                   |----  NAMIND                              External             
                   |----  UNEWDP                                                   
                   |----  TGHPAL                                                   
                   |----  TRHFLG                                                   
   
 
3 THTRAN
         SUBROUTINE THTRAN(P,ORIG,DPHI,PA)
  ------------------------------------------------------------------------------
    CKEY TPCDES HELIX TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform helix to another coordinate system with z axis parallel
    to the original
     Author: R. Johnson   28-12-90
    M.Cattaneo   980310 Use DOUBLE PRECISION for SP0,CP0, to avoid
                                 numerical problems
       Input:
         - P(5)       /R     Helix parameters in original frame
                             1/r,tanl,phi0,d0,z0
                             (d0>0 = positive ang. mom. about z axis)
                             (r>0  = counterclockwise rotation)
         - ORIG(3)    /R     Origin of the new coordinate system
                             in the old system
         - DPHI       /R     Phi of the x axis of the new coordinate
                             system in the old system
       Output:
         - PA(5)     /R      Helix parameters in new frame.
     Remarks:  only translations and rotations about the z axis are
               possible in this case.  Rotations about x and y are
               ignored since the helix model always assumes a helix
               about the z axis.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TGHPAL                                                                          
        |---- THTRAN                                                               
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  ALTELL                              External             
                   |----  SIGN                                External             
                   |----  ABS                                 External             
                   |----  SQRT                                External             
                   |----  DBLE                                External             
                   |----  DATAN2                              External             
   
 
3 TMATUT
         Subroutine TMATUT(a1_in,a2_in,isect,ic,aout)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Compute the matrix : aout = (a1)*(t_ic)*(a2**t)
       Input : a1_in(3,3,ltsect)
               a2_in(3,3,ltsect)
               isect           = Sector number
               ic              = coordinate number (x=1, y=2, z=3)
       Output: aout(3,3)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TALINI                                                                          
        |---- TMATUT.                                                              
   
 
3 TPDINT
         SUBROUTINE TPDINT(HP,JBITS,ISLT,RPHIO,ZO)
  ------------------------------------------------------------------------------
    CKEY TPCDES TRACK TPC / USER
  ------------------------------------------------------------------------------
   Find intersection of aleph track with tpc padrows, including
    all alignment corrections
    R. Johnson    12-6-90
    Input:   HP(6)      /R     Helix parameters, as from FRFT
             JBITS       /I    Pattern of bits telling which
                               rows to calculate (bit 1=row 1)
             ISLT(21)   /I     Sector slot number or 0 if the program
                               could not find an intersection
             RPHIO(21)  /R     R*PHI of intersection, in
                               sector coordinates
             ZO(21)     /R     Z of intersection, in sector
                               coordinates
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TPDINT                                                               
                   |----  UNEWDP                                                   
                   |----  TGHPAL                                                   
                   |----  IBITS                               External             
                   |----  THLCIR                                                   
                   |----  TPPROW                              External             
                   |----  IENDTP                              External             
                   |----  ITPTYP                              External             
                   |----  TPPHI0                              External             
                   |----  ABS                                 External             
                   |----  TPDPHW                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  DTPTOS                              External             
                   |----  ATPTOS                              External             
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
                   |----  TGHPTS                                                   
                   |----  SIGN                                External             
   
 
3 TRDDAF
         SUBROUTINE TRDDAF (LBASE,IRUN,IRET)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    - M.Mermikides - 860921             modified by F.Ranjard - 880420
   Read daf and fill commom blocks tpgeom,tpgeop,tpgeow,tpgeot
      with useful TPC geometric quantities derived from data base
    - D.Casper - 970305  modify to read new alignment (TNLO, etc)
                         if available.  If new-style alignment does not
                         exist, old alignment is used.  TOAL card forces
                         old alignment even if new banks exist
                 970416  check validity range of TNLO to avoid using
                         invalid calibrations for a previous year if none
                         exist for the current year.
    M.Cattaneo 980605 Print calibration bank style message once only
   - Input arguments:  LBASE   = DAF file logical unit #
                       IRUN    = current run #
   - Output argument:  IRET    = return code ( = ALGTDB return value)
                                 = 0 means at least one bank is missing
                                 < 0 means at least one bank is new
                                 > 0 means no bank is new
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TRDDAF                                                               
                   |----  NAMIND                              External             
                   |----  ALGTDB                              External             
                   |----  BDROP                               External             
                   |----  ALTELL                              External             
                   |----  TREG1                               External             
                   |----  FLOAT                               External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  TGEWIR                                                   
                   |----  TALINI                                                   
   
 
3 TRDT90
         SUBROUTINE TRDT90
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - M.Mermikides, R.Johnson, F.Ranjard  - 880420
   Initialize tpc90 geometry
   - called by USER program
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TRDT90                                                               
                   |----  FLOAT                               External             
   
 
3 TRHFLG
         SUBROUTINE TRHFLG(HPT,IFLG)
  ------------------------------------------------------------------------------
    CKEY TPCDES TRACK TPC / USER
  ------------------------------------------------------------------------------
   Which tpc padrows is a given helix expected to hit?
    Author:  R. Johnson    13-07-89
    Input:     HPT(5)    /I      Track helix parameters
    Output:    IFLG(21)  /I      0 if no hit expected on this row
                                 1 if a hit is expected on this row
    NOTE:  the TPC geometry commons must be initialized by a call to
           TRDDAF before this routine is called
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   THTFLG                                                                          
        |---- TRHFLG                                                               
                   |----  NAMIND                              External             
                   |----  TPDHGT                              External             
                   |----  TPPROW                              External             
                   |----  VZERO                               External             
                   |----  THLCIR                                                   
                   |----  ABS                                 External             
                   |----  IENDTP                              External             
                   |----  ITPTYP                              External             
                   |----  TPPHI0                              External             
                   |----  TPDPHW                              External             
                   |----  TPDPHS                              External             
                   |----  IBITS                               External             
                   |----  TPDSEP                              External             
                   |----  FLOAT                               External             
   
 
3 TSCHEK
         SUBROUTINE TSCHEK(ISLOT,PS,S1,DS,NMX,NX,PX,ITP)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Check if track falls within sector
   
       Author:   R. Johnson   06-08-87
       Modified: R. Johnson   21-10-87
   
       Call by: TFNDXP
       Input:
          - ISLOT      /I     TPC sector slot number (1-36)
          - PS(*)      /R     Track helix parameters:
                              1/r,tanl,phi0,d0,z0
                              These must be in the coordinate system
                              of the sector ISLOT:  z=0 is at the
                              sense wire plane with the positive z
                              axis pointing toward detector center.
                              The origin is at the padrow centers, and
                              the x axis divides the sector into two
                              symmetric pieces.
          - S1         /R     Distance to starting point on the helix
          - DS         /R     Length of arc to consider on the helix
          - NMX        /I     Maximum number of intersections to find
       Output:
          - NX         /I     Number of intersections with sector boundar
                              plus number of endpoints within sector.
          - PX(3, )    /R     Coordinates of intersection point or
                              points.
          - ITP( )     /I     Type of intersection
                                  1= enter or exit from edge
                                  2= enter or exit from end
                                  3= termination within the sector
   
       Description:
       -----------
       This routine returns all the intersection points of a circular
       track element with the boundaries of a TPC sector specified by
       ISLOT.  If the element begins or ends within the sector, then
       that point also is included.  It is only approximate for end
       crossings and internal points.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TSCHEK                                                               
                   |----  NTPCRN                              External             
                   |----  TPCORN                              External             
                   |----  AMIN1                               External             
                   |----  AMAX1                               External             
                   |----  ATAN2                               External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  SIGN                                External             
                   |----  ABS                                 External             
                   |----  SQRT                                External             
                   |----  ITPTYP                              External             
                   |----  FLOAT                               External             
   
 
3 TSCINT
         LOGICAL FUNCTION TSCINT(HP,ISLOT)
  ------------------------------------------------------------------------------
    CKEY TPCDES HELIX SECTOR INTERSECTION / USER
  ------------------------------------------------------------------------------
   Test if helix intersects a given tpc sector in r*phi
    R. Johnson  28-11-90
    Modified     8-07-97 M.Cattaneo
       Protect against infinite momentum tracks (e.g. if magnetic field is off)
    Modified    30-07-97 A.Waananen
       Add 201 statement after end of DO loop for Linux
    Input:         HP      /R      Helix parameters (as in FRFT)
                   ISLOT   /I      TPC sector number (1-36)
    Output:        TSCINT  /L      TRUE if the track intersects
                                   at least one edge of the sector in
                                   the x-y plane AND the intersection
                                   point in z is between 0 and 220cm
                                   in the sector coordinates
    Only the first 180 degrees of the helix are considered.
    Note that alignment corrections are ignored and that a track can
    pass through the sector without TSCINT=.TRUE. if it enters through
    the membrane and exits through the endplate or vice-versa.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TSCINT                                                               
                   |----  NTPCRN                              External             
                   |----  TPCORN                              External             
                   |----  AMIN1                               External             
                   |----  AMAX1                               External             
                   |----  TGHPTS                                                   
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  SIGN                                External             
                   |----  ABS                                 External             
                   |----  SQRT                                External             
                   |----  ITPTYP                              External             
                   |----  FLOAT                               External             
                   |----  ATAN2                               External             
   
 
3 TSNEXT
         SUBROUTINE TSNEXT(NIN,ISLOT,MXOUT,NOUT,LIST)
  ------------------------------------------------------------------------------
    CKEY TPCDES SECTORS / USER
  ------------------------------------------------------------------------------
   Return list of sectors adjacent to an input list of sectors
    R. Johnson  28-11-90
    Input:         NIN       /I     Number of sectors in input list
                   ISLOT(*)  /I     List of input sectors
                   MXOUT     /I     Maximum length of output LIST
    Output:        NOUT      /I     Number of adjacent sectors
                   LIST(*)   /I     List of adjacent sectors
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TSNEXT                                                               
                   |----  IENDTP                              External             
   

2 TPC

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various TPC routines not included into TPCDES,DEDX,PTOJ
     ! ALEPHLIB 31.3
        TCORES : Double precision fixes for Linux                   (D.Smith)
    
     ! ALEPHLIB 31.2
        TIMDIF : Fix y2k bug (I.Tomalin)
    
     ! ALEPHLIB 30.8 correction file no.1
        TPDVEL : Print TNFV/TDFV correction message once only (M.Cattaneo)
    
     ! ALEPHLIB 30.5 correction file no.4
        TFIXT0 : New - Correct for 1997 hardware problem which shifted T0 
                       by several ns. during periods of high luminosity at 
                       start of fill                            (I.Tomalin)
    
     ! ALEPHLIB 30.5 correction file no.3
        TCORES - Don't make corrections for new alignment (W.Wiedenmann)
    
     ! ALEPHLIB 30.5
        TDFVRU : Drop TDFV bank if a good row is not found (D.Casper)
    
     ! ALEPHLIB 30.2
       new alignment (W.Wiedenman) is introduced.
       TPDVEL, TFCINI, TLACOR, TZCSVD - support for new alignment.
       TNFVRU - new routine (copied from TDFVRU) for new alignment bank TNFV.
    
     ! ALEPHLIB 21.6
       TPDVEL - Some comments corrected (I.Tomalin, 9/10/96)
    
     ! ALEPHLIB 21.5
       TPDVEL - For the option RAW/ONL, check TDFV from Daf before taking TLAS
                from data (P.Comas)
    
     ! ALEPHLIB 21.0
       TPDVEL - allow laser drift velocity from TLAS to be used in
                normal JULIA processing.
                introduce TVOF data card to allow user to offset
                drift velocity. (I.Tomalin)
    
     ! ALEPHLIB 20.6
       TFICOR - cure some problems encountered in runs 16127-16141
                (I.Tomalin)
    
     ! ALEPHLIB 20.5
       corrections and new routines to cure the '94 TPC gating problem
       (I.Tomalin).
       TFICOR - Allow several T3FC corrections to be applied in series
                to the same data.
                Extend T3FC bank to allow for corrections to r and z.
                For distortions which can't be well parameterized by
                T3FC alone (shown by JT3FIP column), call TFIMUL to
                multiply T3FC corrections by some additional function
                of phi, TPC current etc.
       TFIMUL, TGTCUR, TIMDIF - new routines
    
     ! ALEPHLIB 15.8
       TCHKHV - get HV word from ALTRHV
    
     ! ALEPHLIB 15.7
       TFICOR - Allow original polynomial parameterization
                to be multiplied by a specified function of the
                coordinates, which could for example constrain
                corrections to be zero at the endplates.
    
     ! ALEPHLIB 15.5
       TDFVRU - remove a not used variable
                set IPRUN to 0 in data statment
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     TCORES     Correct tpc coordinates for field distortions caused by a short
     TCRTOF     Correct tpc time for time-of-flight
     TCRTRA     Correct tpc coordinates for transverse drift velocity components
     TCRZVD     Correct z coordinates for new drift velocity and t0 values
     TDFVRU     Get a row of a bank
     TFCINI     Initialize tpc field corrections constants in tfcorr
     TFIMUL     Correct tpc coordinates for field distortions.
     TFIXT0     Correct for 1997 hardware problem which shifted t0 by several ns.
     TGTCUR     Read tpc currents in each side of tpc from tcur database bank.
     TIMDIF     Author    :   i. tomalin  94/06/29
     TLACOC     Corrections for b-field distortions (phi independent)
     TLACOP     Corrections for b-field distortions (phi dependent)
     TLACOR     Corrections for b-field distortions
     TNFVRU     Get a row of a bank
     TPDVEL     Get tpc drift velocity
     TPRCOO     Print tpc coodinates from tpco and tpch banks
     TPRHIT     Print out tpc hit bank contents
     TWPANA     Reduce a tpc wire pulse to charge and time, as done in the tpp
     TWPOLD     Reduce a tpc wire pulse to charge and time, as was done in the tpp for
     TWRRED     Apply the tpp wire reduction algorithm to the data
     TZCRVD     Correct tpc coordinates for whatever causes z residuals in the vdet
     TZCSVD     Correct tpc coordinates for effects from sector missalignment

3 TCORES
         SUBROUTINE TCORES(IEND,IROW,R,PHI,Z,RCR,PHICR,ZCR)
  ------------------------------------------------------------------------------
    CKEY TPC FIELD-CORRECTION
  ------------------------------------------------------------------------------
   Correct tpc coordinates for field distortions caused by a short
    circuit in the field cage.
    The correction  function is based on an expansion of the distortions
    in a Fourier Bessel Series.
   
   
     Author    :   W. Wiedenmann  09/07/92
     Modified  :   W. Wiedenmann  971017
                   Don't make corrections for new alignment
                   (already incorpoated in TNFC bank)
     Modified  :   D.Smith        991026  Double precision fixes fot Linux
   
   
   
     Input     :
                   IEND  /I  : TPC side A (=1), B (=2)
                   IROW  /I  : TPC pad row number
                   R     /R  : radius of TPC coordinate  [cm]
                   PHI   /R  : angle  of TPC coordinate  [radian]
                   Z     /R  : z of TPC coordinate [cm]
   
     Output     :  RCR   /R  : corrected R coordinate
                   PHICR /R  : corrected PHI coordinate
                   ZCR   /R  : corrected Z coordinate
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TCORES                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  ABRUEV                              External             
                   |----  FLOAT                               External             
                   |----  MOD                                 External             
                   |----  DBLE                                External             
                   |----  COS                                 External             
                   |----  COSH                                External             
                   |----  TANH                                External             
                   |----  SINH                                External             
                   |----  SQRT                                External             
                   |----  BESI1                               External             
                   |----  BESK1                               External             
                   |----  BESI0                               External             
                   |----  BESK0                               External             
                   |----  ABS                                 External             
   
 
3 TCRTOF
         SUBROUTINE TCRTOF(FIELD,R,Z,ITK,BNAME,ZC)
  ------------------------------------------------------------------------------
    CKEY TPC,TOF
  ------------------------------------------------------------------------------
   Correct tpc time for time-of-flight
    Author:  R. Johnson     18-01-90
    Modified by: F.Ranjard  24-02-92
                 call TPDVEL to get drift velocity
    Input:   FIELD   /F       Magnitude of B-field
             R       /F       Coordinate radius
             Z       /F       Coordinate z
             ITK     /I       Associated track (0 if none yet)
             BNAME   /C       Name of track bank (TGFT or FRFT)
    Output:  ZC      /F       Corrected z position
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TCRTOF                                                               
                   |----  TPDVEL                                                   
                   |----  SQRT                                External             
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  THLCIR                                                   
   
 
3 TCRTRA
         SUBROUTINE TCRTRA(IEND,R,PHI,Z,RC,PHIC)
  ------------------------------------------------------------------------------
    CKEY TPC,E-FIELD,DISTORTIONS
  ------------------------------------------------------------------------------
   Correct tpc coordinates for transverse drift velocity components
   
     Author    :   A. Jahn    89/06/23
     Modified  :   R. Johnson 90/06/06   To operate stand-alone in
                                         the ALEPHLIB.
   
                   F.Ranjard  92/02/24   To call TPDVEL
   
     Input     :
                   IEND /I  : side of the TPC (1=A, 2=B)
                   R    /R  : radius of TPC coordinate  [cm]
                   PHI  /R  : azimuthal angle of TPC coordinate [rad]
                   Z    /R  : z of TPC coordinate [cm]  (not changed)
   
     Output     :  RC   /R  : corrected radius
                   PHIC /R  : corrected azimuthal angle
   
     Description
     ===========
     TCRTRA takes the drift-velocity components ux, uy and uz as
     measured by the laser-calibration system and evaluates the
     true coordinates via:
               x_real = x_meas + zdrft*(ux/uz)
               y_real = y_meas + zdrft*(uy/uz)
     where zdrft is the drift length.
   
     Note:  the TPC geometry must be initialized before calling this
            routine.
            TPDVEL must have been called with the right option either
            by JULIA or AUNPCK.
            It is always called by AUNPCK at beginning of run with
            option 'POT'.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TCRTRA                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  TPDVEL                                                   
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
   
 
3 TCRZVD
         SUBROUTINE TCRZVD(IEND,ZOLD,ZNEW)
  ------------------------------------------------------------------------------
    CKEY TPC Z /INERNAL
  ------------------------------------------------------------------------------
   Correct z coordinates for new drift velocity and t0 values
       Author:    F. Sefkow      3-02-92
       Modified:  W. Wiedenmann  3-02-92
                  F. Ranjard    24-02-92
       Input:  IEND     /I         TPC side (A=1,B=2)
               ZOLD     /R         old z coordinate
       Output: ZNEW     /R         new z coordinate
   
       Description:
       Get old and new drift velocity and t0 and correct Z coordinate
       with these values.
       If drift velocity or old T0 is not found STATUS is set to wrong
       for the full run: Z-coordinates will not be corrected.
       If new T0 is not found it is assumed to be equal to old T0 and the
       STATUS is OK.
   
       Called by TUN1NC
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TCRZVD                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  TPDVEL                                                   
                   |----  GTT0GL                                                   
   
 
3 TDFVRU
         INTEGER FUNCTION TDFVRU (IRUN,IROW)
  ------------------------------------------------------------------------------
    CKEY TPC  GET BANK DA
  ------------------------------------------------------------------------------
   Get a row of a bank
   - F.Ranjard - 900517
   
   - D.Casper  - 970721  Drop TDFV bank if a good row is not found.
   - Input:
               IRUN   / INTE  = run number
   - Output:   TDFVRU / INTE  = TDFV BOS index
                                =0 means not enough space
                                <0 means a garbage collection occurded
               IROW   / INTE  = row # for the known IRUN
                                0 means IRUN not found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TPDVEL                                                                          
        |---- TDFVRU                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  GTDBAS                              External             
                   |----  BDROP                               External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
                   |----  BGARB                               External             
                   |----  LOCTAB                              External             
   
 
3 TFCINI
         SUBROUTINE TFCINI(LOUT,LCONS,IRUN,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Initialize tpc field corrections constants in tfcorr
   
       Author:   R. Johnson   22-09-88
                 Adapted from code by M. Schmelling in order to
                 interface to the ALEPH database.
       Modified: D. Casper    05-03097
                 Handle new field map (TNFC) as well as old (T2FC)
   
       Input:    LOUT        /I      Output unit for error messages
                 LCONS       /I      Input unit for the data base
                 IRUN        /I      Current run number
       Output:   IER         /I      Error code:
                                        0  successful initialization
                                        1  data-base banks not found
                                        2  NSPACE too small in TFCORR
                                        3  NGMAX  too small in TFCORR
       Called by TINIRU
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TLACOC                                                                          
   TLACOP                                                                          
   TLACOR                                                                          
        |---- TFCINI                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  ALGTDB                              External             
                   |----  FLOAT                               External             
   
 
3 TFIMUL
         FUNCTION TFIMUL(IRUN,NBNK,IMUL,IEND,IT3,IROW,XCOR,SHIFT)
  ------------------------------------------------------------------------------
    CKEY TPC FIELD-CORRECTION
  ------------------------------------------------------------------------------
   Correct tpc coordinates for field distortions.
    This code is called by TFICOR. It allows for more complicated
    corrections than TFICOR alone can provide, depending for example
    on phi or on the TPC currents.
   
     Author    :   I. Tomalin  94/06/29
   
     Input     :   IRUN    /I  : Current run number.
                   NBNK    /I  : T3CC/T3FC bank number.
                   IMUL    /I  : Code number of correction to apply.
                   IEND    /I  : TPC side A (=1), B (=2)
                   IT3     /I  : Correction based upon the IT3'th row
                                 referring to this TPC side, in the
                                 T3FC/T3CC banks
                   IROW    /I  : TPC pad row number
                   XCOR(3) /R  : R, PHI and Z of TPC coord. respectively,
                                 with R and Z scaled to have modulus less
                                 than 1.
                   SHIFT   /R  : Correction prior to calling TFIMUL.
   
     Output     :  TFIMUL  /R  : Correction to phi/z coord. previously
                                 obtained by TFICOR is to be multiplied
                                 by TFIMUL.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TFIMUL                                                               
                   |----  NDROP                               External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  NBNKFORMAT                          External             
                   |----  EXIT                                External             
                   |----  TGTCUR                                                   
                   |----  MOD                                 External             
                   |----  EXP                                 External             
                   |----  SIGN                                External             
                   |----  MAX                                 External             
                   |----  ABS                                 External             
   
 
3 TFIXT0
         FUNCTION TFIXT0(IRUN,IEVT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Correct for 1997 hardware problem which shifted t0 by several ns.
    during periods of high luminosity at start of fill.
   
       Author:    I. Tomalin    3-10-97
   
    INPUT:
      INTE IRUN: Run number
      INTE IEVT: Event number
    OUTPUT:
      REAL TFIXT0: Offset which should be applied to TPC t0 in ns.
         SAVE
         DATA LRUN/0/
   
   
   
          TFIXT0 = 0.0
    bother looking at data in dodgy period.
          IF (IRUN.GE.43700.AND.IRUN.LE.44200) THEN
   Access database bank containing corrections.
           IF (IRUN.NE.LRUN) THEN
    new run then read it from the database.
             IF (LRUN.GT.0) KTFT0 = NDROP('TFT0',LRUN)
             LRUN = IRUN
             LDBAS = JUNIDB(0)
             KTFT0 = MDARD(IW,LDBAS,'TFT0',IRUN)
           ELSE
    just relink it.
             KTFT0 = NLINK('TFT0',IRUN)
           ENDIF
           IF (KTFT0.GT.0) THEN
    over periods needing different corrections in this run.
             DO 10 I = 1,LROWS(KTFT0)
               IF (IEVT.LE.ITABL(KTFT0,I,JTFTEV)) THEN
                 TFIXT0 = RTABL(KTFT0,I,JTFTT0)
                 GOTO 99
               END IF
      10     CONTINUE
           END IF
         END IF
      99 CONTINUE
         END
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TFIXT0                                                               
                   |----  NDROP                               External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  NLINK                               External             
   
 
3 TGTCUR
         SUBROUTINE TGTCUR(TCURA,TCURB,ADOUBT,BDOUBT,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Read tpc currents in each side of tpc from tcur database bank.
    N.B. TCUR bank only exists for very few runs. It can be created
    using info. from online time-chart information.
   
     Author    :   I. Tomalin  94/07/01
   
      Input:  TCUR database bank.
      Output: TCURA /R  : Current in side A of TPC (measured in nA).
              TCURB /R  : Current in side B of TPC (measured in nA).
      ADOUBT, BDOUBT R/ : Max. amount which current can be wrong by
                          on sides A and B respectively (nA).
                          (Set to zero if first or last current
                           measurement in run).
              IER   /I  : Non-zero if error occured (in which case
                          TCURA & TCURB set equal to something reasonable
      Calls: ALEPHLIB routine TIMDIF.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TFIMUL                                                                          
        |---- TGTCUR                                                               
                   |----  NAMIND                              External             
                   |----  KEVEHFORMAT                         External             
                   |----  EXIT                                External             
                   |----  NLINK                               External             
                   |----  NDROP                               External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  FLOAT                               External             
                   |----  IBITS                               External             
                   |----  MAX                                 External             
                   |----  MIN                                 External             
                   |----  ABS                                 External             
   
 
3 TIMDIF
         REAL FUNCTION TIMDIF(KDATE1,KTIME1,KDATE2,KTIME2)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    time difference in minutes between two occasions.
   Author    :   i. tomalin  94/06/29
        Mod.   :   I. Tomalin  99/07/29 - fix y2k bug.
   
      Input:  KDATE1 /I : Date of first occasion in format yymmdd
              KTIME1 /I : Time of first occasion in format hhmmss
              KDATE2 /I : Date of second occasion in format yymmdd
              KTIME2 /I : Time of second occasion in format hhmmss
      Output: TIMDIF  /R : Time difference in minutes.
      Calls: CERNLIB routine CALDAT for conversion of date to Julian
             date format.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TIMDIF                                                               
                   |----  MOD                                 External             
                   |----  CALDAT                              External             
                   |----  FORMAT                              External             
                   |----  EXIT                                External             
                   |----  FLOAT                               External             
   
 
3 TLACOC
         SUBROUTINE TLACOC( R,PHI,Z , RP,PHIP,ZP , MODE)
  ------------------------------------------------------------------------------
    CKEY   TPC LASER B-FIELD DISTORTIONS
  ------------------------------------------------------------------------------
   Corrections for b-field distortions (phi independent)
   Author : Michael Schmelling   / Mainz   15-Jan-1990
    : Werner Wiedenmann / 12-Sep-1991
              (rename subroutine and call it from driver TLACOR)
       : real*4    R        : TPC coordinate - radius  [cm]
               real*4    PHI      : TPC coordinate - azimuth [rad]
               real*4    Z        : TPC coordinate - Z       [cm]
               integer*4 MODE     : radial correction mode
                         MODE.EQ.0 => corrections based exclusively
                                      on laser data
                         MODE.NE.0 => for full compensation use radial
                                      corrections based on the field map
               bank TLCP from data base
        real*4  RP,PHIP,ZP : corrected coordinates
    blocks       : BCS
    references : AGETDB,JUNIDB,AOPDBS,TFCINI,TCOREC /ALEPHLIB
   
   ===========
   ACOC corrects individual TPC coordinates for distortions of the
    field, for the two cases of compensating coils power supplies
    or off. The default corrections (MODE=0) were obtained from the
    of YAG laser data. For the case of full compensation
   =1 allows to use alternatively the radial corrections based on
    B-field map from the survey measurements, which are interfaced
    the old routine TCOREC.
    DETAILED INFORMATION
   =========================
     The corrections were obtained from the analyis of YAG-laser data
    with and without magnetic field. Wire by wire the drift time
    between both field configurations were measured and
    for changes in the steering of the laser beams and the
    velocity. Finally the drift time differences were translated
    radial coordinate displacements which were parametrized for
    beam by fourth or fifth order polynomials. Those parametri-
    exhibit a slight phi-dependence which might be introduced
    a small misalignment between electric and magnetic field.
    it is roughly an order of magnitude smaller than the phi-
    part, it has been neglected - i.e. only the zero-order
    component has been retained. (As it turns out, the
    of the correction procedure is the same, independent of
    or not the phi-dependence is taken into account.)
     For phi-symmetric field inhomogenieties the radial displacements
    by the procedure decribed above are exactly omega*tau times
    azimuthal coordinate displacements in the combined electric and
    field, even in the presence of electric field distortions.
   (Gigi came across this interesting fact.) The azimuthal corrections
    are relevant for the momentum resolution of the TPC thus can
    deduced very reliably.
     The radial distortions of the combined E- and B-field can only be
    by the above method, if the the electric field is perfect,
   , if without B-field the laser tracks are straight. For side B
    the TPC this holds much better than for side A, where significant
    in r-z are observed close to the inner field cage. Since
    track distortions are only observed in the absence of the
    field, they are likely to be of electrical origin. Radial
    displacements affect mainly the measurement of dip-angle
    z0 of tracks. Since at full magnetic field electric distortions
    suppressed by a factor omega*tau (9.) only the magnetic field
    survive and have to be corrected for. By construction
    the ALEPH coil the purely magnetic contribution to the radial
    shifts can be expected to be roughly symmetrical for both
    of the TPC. Because it can be measured more reliably on side B
    radial corrections found there are applied in both halves.
    in fact prooves to produce as function of the dip angle a flat
   <z0>-distribution for two track events.
     The correction procedure has been tested with two track events
    with and without compensation of the magnetic field. Results:
   -  momentum resolution and scale become the same for postives and
      negatives and independent of dip angle.
   -  <z0> becomes independent of dip angles
   -  <d0> becomes compatible with 0 for tan(lamda) < 1.2
      for tan(lambda) > 1.2 an anomaly remains <d0> = 0.06 cm which
      is not understood.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TLACOR                                                                          
        |---- TLACOC                                                               
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
                   |----  AGETDB                              External             
                   |----  TFCINI                                                   
                   |----  JUNIDB                              External             
                   |----  ABS                                 External             
                   |----  TCOREC                                                   
   
 
3 TLACOP
         SUBROUTINE TLACOP( R,PHI,Z , RP,PHIP,ZP , MODE)
  ------------------------------------------------------------------------------
    CKEY   TPC LASER B-FIELD DISTORTIONS
  ------------------------------------------------------------------------------
   Corrections for b-field distortions (phi dependent)
   Author : Michael Schmelling   / Mainz   15-Jan-1990
    : Werner Wiedenmann  17.7.1991
            after the model of  TLACOR/TLACOC the subroutine was
            modified to read the phi dependent laser corrections
            from the TLFC bank.
       : real*4    R        : TPC coordinate - radius  [cm]
               real*4    PHI      : TPC coordinate - azimuth [rad]
               real*4    Z        : TPC coordinate - Z       [cm]
               integer*4 MODE     : radial correction mode
                         MODE.EQ.0 => corrections based exclusively
                                      on laser data
                         MODE.NE.0 => for full compensation use radial
                                      corrections based on the field map
               bank TLFC from data base
        real*4  RP,PHIP,ZP : corrected coordinates
    blocks       : BCS
    references : AGETDB,JUNIDB,AOPDBS,TFCINI,TCOREC /ALEPHLIB
   
   ===========
   ACOP corrects individual TPC coordinates for distortions of the
    field, for the two cases of compensating coils power supplies
    or off. The default corrections (MODE=0) were obtained from the
    of YAG laser data. For the case of full compensation
   =1 allows to use alternatively the radial corrections based on
    B-field map from the survey measurements, which are interfaced
    the old routine TCOREC.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TLACOR                                                                          
        |---- TLACOP                                                               
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
                   |----  AGETDB                              External             
                   |----  TFCINI                                                   
                   |----  JUNIDB                              External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  TCOREC                                                   
   
 
3 TLACOR
         SUBROUTINE TLACOR( R,PHI,Z , RP,PHIP,ZP , MODE)
  ------------------------------------------------------------------------------
    CKEY   TPC,LASER,B-FIELD,DISTORTIONS
  ------------------------------------------------------------------------------
   Corrections for b-field distortions
   Author : Michael Schmelling   / Mainz   15-Jan-1990
      : Werner Wiedenmann 10-Sep-91
            use TLACOR as driver for
            1) phi independent laser corrections (done if
               bank TLCP is present)
            2) phi dependent laser corrections (done if
               bank TLFC is present)
       : real*4    R        : TPC coordinate - radius  [cm]
               real*4    PHI      : TPC coordinate - azimuth [rad]
               real*4    Z        : TPC coordinate - Z       [cm]
               integer*4 MODE     : radial correction mode
                         MODE.EQ.0 => corrections based exclusively
                                      on laser data
                         MODE.NE.0 => for full compensation use radial
                                      corrections based on the field map
               bank TLCP/TLFC from data base
        real*4  RP,PHIP,ZP : corrected coordinates
    blocks       : BCS
    references : AGETDB,JUNIDB,AOPDBS,TFCINI,TCOREC /ALEPHLIB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TLACOR                                                               
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
                   |----  AGETDB                              External             
                   |----  TFCINI                                                   
                   |----  JUNIDB                              External             
                   |----  TCOREC                                                   
                   |----  TLACOP                                                   
                   |----  TLACOC                                                   
   
 
3 TNFVRU
         INTEGER FUNCTION TNFVRU (IRUN,IROW)
  ------------------------------------------------------------------------------
    CKEY TPC  GET BANK DA
  ------------------------------------------------------------------------------
   Get a row of a bank
   - F.Ranjard - 900517
   - Modified by D. Casper 06-03-97 from TDFVRU to handle TNFV bank
   - Input:
               IRUN   / INTE  = run number
   - Output:   TNFVRU / INTE  = TNFV BOS index
                                =0 means not enough space
                                <0 means a garbage collection occurded
               IROW   / INTE  = row # for the known IRUN
                                0 means IRUN not found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   GTT0GL                                                                          
   TPDVEL                                                                          
        |---- TNFVRU                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  GTDBAS                              External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
                   |----  BGARB                               External             
                   |----  LOCTAB                              External             
   
 
3 TPDVEL
         SUBROUTINE TPDVEL ( OPTION, DVA, DVB, IER )
  ------------------------------------------------------------------------------
    CKEY TPC DRIFT / INTERNAL
  ------------------------------------------------------------------------------
   Get tpc drift velocity
     Author   :- E. Lancon             20-FEB-1992
     Modified :- I. Tomalin             3-AUG-1995
                 'RAW' option now also looks for V_d from laser.
                 'ONL' option made completely equivalent to 'RAW'.
                  Allow user to offset Vz using TVOF card.
     Modified :- P. Comas               9-AUG-1995
                  For the option RAW/ONL, check TDFV from Daf
                  before TLAS to avoid problems with the data
                  before LEP1.5 when PASS0 is not run.
     Modified :- D. Casper              6-MAR-1997
                  Look for bank TNFV to tune drift velocity for 1997-style
                  alignment.  Correction is v_new = v_old * (1 + delta),
                  only if TDFV bank is used for drift velocity.
                  A TOAL card diasbles the correction.
     Modified :- M. Cattaneo            5-JUN-1998
                  Print TNFV/TDFV correction message once only
     Inputs:
          - OPTION      / CH  = type of input data
                                'ONL' for PASS0
                                'RAW' for RAW data
                                'POT' for POT ot DST data
     Outputs:
          - DVA (3)     / R     Drift velocity side A (cm/musec)
                                (Vx, Vy, Vz)
          - DVB (3)     / R     Drift velocity side B (cm/musec)
                                (Vx, Vy, Vz)
          - IER         / I     Error Code
                                 0 : OK
                                 1 : no drift velocity found
                                 2 : wrong option
     Called by: AUNPCK, JULIA TPC prepare data
     Description
     ===========
          - TPC Drift Velocity values are returned according to OPTION.
          - Routine must be called at each run initialisation with one
            type of OPTION
          - for each subsequent call to this routine within a given run
            tpc drift velocity values loaded at run initialisation are
            returned in that case option is ignored.
          - in case of wrong option or missing drift velocity (IER>0)
            the STATUS is wrong for the full run and no drift velocity
            is return.
          - 'RAW' or 'ONL' options (equivalent):
              Look for TDPV  (V_d from PASS0)
              If that doesn't exist then use TDFV from Daf
              If that doesn't exist then use TLAS (V_d from laser)
                 and transverse drift velocity from TVXY Daf bank.
              If that doesn't exist (very old data) use TDVV from Daf.
          - 'POT' option :
              Look for TDFV on Daf
              If that doesn't exist then use JCON (V_d used by JULIA)
              If that doesn't exist (very old data) use TDVV from Daf.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   FRFTDP                                                                          
   TCRTRN                                                                          
   TCRTOF                                                                          
   TCRTRA                                                                          
   TCRZVD                                                                          
        |---- TPDVEL                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  AGETDB                              External             
                   |----  TDFVRU                                                   
                   |----  ABS                                 External             
                   |----  MAX                                 External             
                   |----  TNFVRU                                                   
                   |----  ALTELL                              External             
                   |----  BDROP                               External             
   
 
3 TPRCOO
         SUBROUTINE TPRCOO
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   - M.MERMIKIDES - 860410                     F.Ranjard - 860418
   Print tpc coodinates from tpco and tpch banks
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TPRCOO                                                               
                   |----  NAMIND                              External             
                   |----  BPRNT                               External             
                   |----  MOD                                 External             
   
 
3 TPRHIT
         SUBROUTINE TPRHIT(NAME)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print out tpc hit bank contents
   - M.Mermikides - 860500       F.Ranjard - 870507
   - input  : NAME  = bank name TPHT or TTHT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TPRHIT                                                               
                   |----  NAMIND                              External             
   
 
3 TWPANA
         SUBROUTINE TWPANA(IT0,NWSMP,IPH,ICHG,TIM,IER)
  ------------------------------------------------------------------------------
    CKEY TPC WIRE REDUCTION
  ------------------------------------------------------------------------------
   Reduce a tpc wire pulse to charge and time, as done in the tpp
    This algorithm has not been used for Aleph production.
    See TWPOLD.
    Author:  R. Johnson    21-1-91
    Input:    IT0       /I        Time of 1st bucket in the pulse
              NWSMP     /I        Number of samples in the pulse
              IPH(n)    /I        Array of sample pulse heights
    Output:   ICHG      /I        Charge estimate
              TIM       /R        Time estimate
              IER       /I        Error code  0= all OK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TWRRED                                                                          
        |---- TWPANA                                                               
                   |----  FLOAT                               External             
                   |----  INT                                 External             
   
 
3 TWPOLD
         SUBROUTINE TWPOLD(IT0,NWSMP,IPH,ICHG,TIM,NSMPO,IER)
  ------------------------------------------------------------------------------
    CKEY TPC WIRE REDUCTION
  ------------------------------------------------------------------------------
   Reduce a tpc wire pulse to charge and time, as was done in the tpp for
    all data taken so far.  This is the default production algorithm.
    Author:  R. Johnson    21-1-91
    Input:    IT0       /I        Time of 1st bucket in the pulse
              NWSMP     /I        Number of samples in the pulse
              IPH(n)    /I        Array of sample pulse heights
    Output:   ICHG      /I        Charge estimate
              TIM       /R        Time estimate
              NSMPO     /I        Number of samples above threshold
              IER       /I        Error code
                                  0= all OK
                                  1= pulse does not appear to be from
                                     a single track
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TWRRED                                                                          
        |---- TWPOLD                                                               
                   |----  FLOAT                               External             
   
 
3 TWRRED
         SUBROUTINE TWRRED(IER)
  ------------------------------------------------------------------------------
    CKEY TPC WIRE REDUCTION
  ------------------------------------------------------------------------------
   Apply the tpp wire reduction algorithm to the data
    This routine is only used in case NO wire reduction has been
    done in the TPP (or in TPCSIM for MC).  JULIA common blocks are
    not used, so this routine can be called from GALEPH as well as from
    JULIA.
    R. Johnson   4-12-90
    modified by : F.Ranjard - 910514 - get the run number from RUNH
                                       or EVEH
                            - 910516 - do not put output banks
                                       on T-list, give a format
    modified by : W.Wiedenmann - 920306 - write new wire banks TSDI,TSIR
                                          in replacement of TRDI, TRIR
    modified by : R.Johnson - 930202 - fix bug in production of TSDI bank
    Output:   IER     /I       Error code
                               1= no run number found
                               2= cannot find bank database banks
                               3= TWDI digitization bank missing
                               4= sector number out of range
                               5= BOS ran out of space
                               6= No pedestal info found
                               7= cannot find bank TSWP on database
    Input banks:      TWIR,TWDI         Raw data
                      TSWP,TWRC         Parameters for algorithm
    Output banks:     TSIR,TSDI         Reduced raw data
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              TWRRED                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
                   |----  NINT                                External             
                   |----  MIN                                 External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  NLINK                               External             
                   |----  ALTELL                              External             
                   |----  NDROP                               External             
                   |----  MOD                                 External             
                   |----  IBITS                               External             
                   |----  TWPANA                                                   
                   |----  TWPOLD                                                   
                   |----  MVBITS                              External             
                   |----  INT                                 External             
   
 
3 TZCRVD
         SUBROUTINE TZCRVD(IEND,R,Z,ZC)
  ------------------------------------------------------------------------------
    CKEY TPC Z-CORRECTION VDET
  ------------------------------------------------------------------------------
   Correct tpc coordinates for whatever causes z residuals in the vdet
   
     Author    :   F. Sefkow  91/09/04
   
   
     Input     :
                   IEND /I  : side of the TPC (1=A, 2=B)
                   R    /R  : radius of TPC coordinate  [cm]
                   Z    /R  : z of TPC coordinate [cm]
   
     Output     :  ZC   /R  : corrected Z coordinate
   
     Description
     ===========
     Studied:  Z hits in 2 VDET layers (Del R, Del Z apart)
     Observed:  Res = alpha * Del Z + beta * Del R
                where Res = Z(hit) - Z(track) and
                Z(track) calculated from other hit
                and track angle lambda as measured by TPC
     Possible Interpretation:  alpha: fractional change in v_z(drift)
                               beta: bow angle of endplate
     Correction:  Z(drift) -> Z(drift) * (1 + alpha)
                  |lambda| -> |lambda| + beta
   
     Note:  The alpha correction induces a z0 shift
            by Del Z0 = - alpha * (+/- ZTPCMX) for tracks in side A/B
     Note:  the TPC geometry must be initialized before calling this
            routine.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TZCRVD                                                               
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
                   |----  AGETDB                              External             
   
 
3 TZCSVD
         SUBROUTINE TZCSVD(ISLOT,R,PHI,Z,ZC)
  ------------------------------------------------------------------------------
    CKEY TPC Z-CORRECTION VDET
  ------------------------------------------------------------------------------
   Correct tpc coordinates for effects from sector missalignment
    effects in Rz. This is an effective correction, because
    only offsets of the sector centre relative to its nominal
    position and tilts of the sector relative to the radial direction
    from the origin to the nominal sector centre around the
    nominal sector centre are considered.
   
     Author    :   W. Wiedenmann  91/10/15
     Modified  :   W. Wiedenmann  97/03/05
                   - in case there is a valid TNLO bank, do no
                     correction in z (already done via alignment in
                     TALINI)
   
   
     Input     :
                   ISLOT /I  : sector number
                   R     /R  : radius of TPC coordinate  [cm]
                   PHI   /R  : angle  of TPC coordinate  [radian]
                   Z     /R  : z of TPC coordinate [cm]
   
     Output     :  ZC   /R  : corrected Z coordinate
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   TUN1NC                                                                          
        |---- TZCSVD                                                               
                   |----  NAMIND                              External             
                   |----  ITPTYP                              External             
                   |----  FLOAT                               External             
                   |----  ALTELL                              External             
                   |----  AGETDB                              External             
                   |----  TAN                                 External             
                   |----  TCTSEC                                                   
                   |----  COS                                 External             
                   |----  TCTGLB                                                   
   

2 TRIG

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     LEVEL 1 and LEVEL 2 trigger package
    
     ! ALEPHLIB 30.6
        X1BOOK,X2TRIG : fix variable type inconsistencies in function calls, 
                        for Linux                            (A.Waananen)
    
     ! ALEPHLIB 21.6
        X1APTN - Add endcaps to SNG_N_EL trigger definition (A.Putzer 04/02/97)
    
     ! ALEPHLIB 21.3
       X1IRUN : In MonteCarlo, use trigger thresholds which are setup dependent
                (B.Bloch) 
    
     ! ALEPHLIB 20.8
       remove all references to XTBP which has been deleted from DDL.
    
     ! ALEPHLIB 20.7
       X1DISN, X1MIXN, X1REDO, X1TRIG - corrections (A.Putzer)
    
     ! ALEPHLIB 20.5
       implement level 1 trigger in a correct way. ALEPH-note will
       follow (A.Putzer)
    
     ! ALEPHLIB 15.7
        X1INI (used to re-apply trigger in ALPHA ) : give the right
        initialisation to SICAL banks namindices.  (B.Bloch)
    
     ! ALEPHLIB 14.6
       SIX2MK - add a LOGICAL BTEST (mandatory on apollo)
     -------------------------------------------------------------
         Level 1 Trigger
    
     The package is used in GALEPH to generate the online trigger
     information contained in the banks X1AD and XTEB.
     It may also be used to reprocess the Level 1 Trigger decision
     in JULIA or ALPHA for different threshold sets, if the banks
     X1AD and XTEB are present on input. In this case the user has
     to supply a new threshold bank X1TH and call two subroutines:
    
    (1) X1INI(IRUNNO) -- Trigger initialization.  This routine must be
        called once at the start of a job to initialize the trigger routines,
        and to read the trigger threshold bank X1TH (which can be supplied as
        a BOS card file). IRUNNO is the run number used to select the correct
        threshold bank.
    
    (2) X1TRG -- Apply level 1 trigger.  This routine reads the trigger
        banks from the input and reapplies the trigger using the
        trigger thresholds found during initialization.
        The resulting trigger bit pattern is stored in the XTEB bank.
    
     Reprocessing of MC data updates the trigger information to the latest
     version of the trigger software without any loss of information.
     For backward compatibility MC data containig the bank XTBP instead
     of XTEB can also be reprocessed. Output will be XTEB and a reordered
     bank X1AD (EC wire information only, see below).
    
     The following routines can be used also.
    
    (1) X1PRNT -- Prints trigger information for a single event.
    (2) X1WSUM -- Print trigger summary at end of run; this routine is
        automatically called at the end of a GALEPH run.
    (3) X1BOOK and X1HIST -- Book and fill histograms of useful
        trigger information.  X1BOOK must be called during initialization
        and X1HIST called once per event.
    
     Modifications 890821 (C.Geweniger):
     - The banks X1TI and XTBP are removed from output.
     - XTBP is still allowed on input for reprocessing of previous MC data.
     - On output the bit pattern bank XTBP is replaced by XTEB.
     - The discriminator bits for trigger segments 65 to 72, missing in XTBP,
       are now present in XTEB (also if old data are reprocessed).
     - The order of EC wire information from the endcaps in XTEB and X1AD has
       changed. It is now in agreement with the notation in the ALEPH hand-
       book: in the trigger the first EC endcap module starts at phi=15 deg.
     - All Bhabha triggers are implemented.
     - A total energy trigger using the .AND. of EC wires in the two endcaps
       has been added.
     - the definition of thresholds sets for the charged electromagnetic
       energy trigger and the neutral hadronic energy trigger have been
       changed.
    
     Modifications 891116 (C.Geweniger):
     - All physics triggers implemented for data taking starting September 89
       are coded. The bit assignment in the level 1 trigger mask (1st word in
       bank XTEB) corresponds to the one valid from physics run #4860
       onwards.
     - At the same time the threshold bank X1TH has been updated
       (use bank no. 2).
     - The threshold bank X1TH provides only one set of thresholds for total
       energies, whereas the actual total energy triggers use two sets for
       ECAL wires. The second set is put into a DATA statement in routine
       X1DISC.
    
     Modifications 921210 (B.Bloch-Devaux):
       Introduce the new Luminosity trigger connected to the SICAL detector
       when corresponding setup is required ( geometry date > = 9209)
     - Galeph produces a bank SIFO containing the Fast OR signals from the
       readout electronics ,SIXA and SIX2 banks are added by the trigger
       code.
     - X1IRUN loads the proper constants from banks SITC and SRCO on the
       Data Base and calls the initialisation code SITRIN
     - X1MIXI calls SIXAMK to build the bank SIXA of ADC counts from the
       16 trigger sectors of the detector ( as from the Data )
     - X1DISC calls SIX2MK to build the bank SIX2 filled with the bit
       pattern discriminated against the 4 thresholds of SICAL triggers.
       A service function SIDISC is called by SIX2MK.
     - X1APTR applies the trigger and will count triggers passing the three
       possible configurations of SICAL triggers.However the trigger bit
       word of the event is not updated as nobody uses it for Monte-Carlo
       events and it has never been updated since 89.... The SIX2 bank
    
       contains the relevant information for Luminosity analysis.
     - X1WSUM is modified to give also the summary for SICAL triggers .
     - X1PRNT is modified to give a debug printout for SICAL triggers by
       calling the subroutine SIXAPR.
    
        Level1 Trigger Summary
    
            This package consists of 11 subroutines :
        _ 5 subroutines of general interest, to be put in the ALEPHLIB.
        _ 6 subroutines to produce the Trigger Run Summary banks during
          the JULIA processing, to be put in JULIA.
    
    
        1. Subroutines for the ALEPHLIB
        -------------------------------
    
        X1PREP:   to create the bank XTDI for trigger analysis (contains
                  all mapped and unmapped trigger signals)
        X1DCEB:   to fill the bank XTDI from the bank XTEB; calls X1ECWM
          X1ECWM: routine for the ECal Wires module-to-segment mapping
        X1TIME:   to decode the time of the event from the bank XTCN
        X1RSUM:   to print the Trigger Run Summary from the banks XSGE,
                  XSHI and XSSC
    
    
        2. Subroutines for JULIA
        ------------------------
    
        XTRSIN:   to be called during initialisation, before the first
                  event is processed; calls X1PREP to create the bank
                  XTDI
        XTRSEV:   to be called for each event; finds the Trigger banks
                  and calls XTUNPK to decode and sum them
        XTUNPK:   calls UTDCBP and UNPACK
        UTDCEB:   decode a bit string into an array
        UNPACK:   decode packed 16-bits words into an array
        XTRSFI:   to be called at termination, after the last event in
                  the run has been processed; drops the XTDI bank,
                  creates and fills the Trigger Run Summary banks XSGE,
                  XSHI and XSSC.
                  IT DOES NOT WRITE THEM!
    
    
        LEVEL 2 Trigger
    
     The trigger LEVEL 2 routines use the TPC TTHT bank to build necessary
     banks for trigger LEVEL 3.
     The subroutines described below have been installed in ALEPHLIB, and
     can therefore be used in either JULIA or ALPHA without modification as
     long as the TTHT bank is there.
    
     The user must call two subroutines to reprocess the trigger.
    
     (1) X2IRUN (IRUN,FHIS,IRET) -- trigger initialization. The routine
         must be called once at beginning of run to initialize the package
         and read the X2RU data card if there.
         input arguments: IRUN / I   current run number
                          FHIS / L   .true. if histograms are required
                          IRET / I   return code (=0 means OK)
     (2) X2TRIG (IRET) -- apply LEVEL 2 trigger. Must be called once per
         event. Reads TTHT bank and produced X2HF, X2MS, X2TB, X2TF.
    
     The following routines can be used also.
    
    (1) X2PRIN (FLAG) -- Prints trigger information at initialization time
                         (FLAG='INIT') and for a single event (FLAG='EVEN').
    (2) X2WSUM -- Print trigger summary at end of run; this routine is
        automatically called at the end of a GALEPH run.
    (3) X2BOOK and X2HIST -- Book and fill histograms of useful
        trigger information.  X2BOOK must be called during initialization
        and X2HIST is called internally once per event.
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     SIDISC     Discriminate the sixa bank for endcap iend odd or iend even.
     SITRIN     Init the trigger constants for sical
     SIX2MK     Build the six2 bank from sixa and sitc
     SIXAMK     Build the sixa bank for sical trigger
     SIXAPR     Print the content of sixa trigger adc's in readable format
     X1APTN     Apply the level1 trigger
     X1APTR     Apply the level1 trigger
     X1BOOK     Book level1 trigger histograms
     X1DCEB     Decode bank xteb and fill bank xtdi
     X1DISC     Discriminate level1 trigger signals
     X1DISN     Discriminate level1 trigger signals
     X1ECWM     Get mapping from modules to segments for ecal wires
     X1HISN     Fill the level1  trigger histograms
     X1HIST     Fill the level1  trigger histograms
     X1INI      Initialize the level1 trigger for run# irun
     X1INP      Read and unpack trigger adc bank (x1ad).
     X1IRUN     Initialize the level1 trigger part of galeph
     X1MIXI     Mix level1 trigger signals
     X1MIXN     Mix level1 trigger signals & fill bank x1ip
     X1OUTP     Fill level 1 trigger adc bank
     X1PREP     Prepare the bank xtdi used for the trigger analysis
     X1PRNT     Print level 1 trigger information
     X1REDO     Redo trigger analysis with different thresholds
     X1RSUM     Print the trigger run summary
     X1TIME     Unpack the event time
     X1TRG      This routine simulates the application of the level 1 trigger.
     X1TRIG     Apply level1 trigger conditions
     X1WSUM     Print level1 trigger summary
     X2BOOK     Book the level 2 histograms
     X2DFCD     Read constants for level 2 trigger emulation.
     X2IRUN     Initial run routine for level2 trigger.
     X2LUTS     Level 2 trigger look up table calculations
     X2NAMI     Assign level2 trigger bos bank name indices.
     X2PRHI     Dump x2df banks: martin's tabular format, agrees with ddl
     X2PRIN     Print various quantities from level 2 trigger
     X2TRIG     Main level 2 trigger routine
     X2WSUM     Print level2 trigger summary

3 SIDISC
         SUBROUTINE SIDISC(IEND,IPTY,IPATT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
     Author   :- Joe Boudreau          30-OCT-1991
   Discriminate the sixa bank for endcap iend odd or iend even.
     PARITY=1  means odd , PARITY=2 means even
     Inputs        : INTEGER IEND   = 1 if endcap A, = 2 if endcap B
                     INTEGER IPTY   = 1 if odd, = 2 if even
     Outputs       : INTEGER IPATT  bit 0-3 pattern after discrimination
                                    against threshholds 1-4
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SIX2MK                                                                          
        |---- SIDISC                                                               
                   |----  BTEST                               External             
                   |----  IBITS                               External             
                   |----  IBSET                               External             
   
 
3 SITRIN
         SUBROUTINE SITRIN
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
     Author   :- B. Bloch-Devaux      30-OCT-1991
   Init the trigger constants for sical
     Inputs        :  SRCO bank,SITC bank
     Output        :  SITRCO common
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1IRUN                                                                          
        |---- SITRIN                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
                   |----  IBITS                               External             
   
 
3 SIX2MK
         SUBROUTINE SIX2MK
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
     Author   :- Joe Boudreau          30-OCT-1991
   Build the six2 bank from sixa and sitc
     Inputs        :  SIXA bank,SITC bank
     Outputs       :  SIX2 bank
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1DISC                                                                          
   X1DISN                                                                          
        |---- SIX2MK                                                               
                   |----  SIDISC                                                   
                   |----  AUBOS                               External             
                   |----  IOR                                 External             
                   |----  BTEST                               External             
                   |----  IBSET                               External             
                   |----  MVBITS                              External             
   
 
3 SIXAMK
         SUBROUTINE SIXAMK
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
     Author   :- Joe Boudreau          30-OCT-1991
   Build the sixa bank for sical trigger
     Inputs        :  SIFO bank
     Outputs       :  SIXA bank
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1MIXI                                                                          
   X1TRIG                                                                          
        |---- SIXAMK                                                               
                   |----  AUBOS                               External             
                   |----  SIDCOD                                                   
                   |----  MOD                                 External             
                   |----  MIN                                 External             
                   |----  MVBITS                              External             
                   |----  BDROP                               External             
   
 
3 SIXAPR
         SUBROUTINE SIXAPR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
     Author   :- B. Bloch-Devaux      30-OCT-1991
   Print the content of sixa trigger adc's in readable format
     Inputs        :  SIXA bank
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1PRNT                                                                          
        |---- SIXAPR                                                               
                   |----  NAMIND                              External             
                   |----  IBITS                               External             
   
 
3 X1APTN
         SUBROUTINE X1APTN
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/10  FOR ALEPHLIB 204
    - Modified                97/04/02  (Trigger : SNG_N_EL)
   
   Apply the level1 trigger
   
    - The different Level1 triggers are simulated using the information
      prepared in X1DISN
   
   
    - Bank      : X1RG is filled (only row TPR
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1TRIG                                                                          
        |---- X1APTN                                                               
                   |----  IAND                                External             
                   |----  NITBIT                              External             
                   |----  NHWBIT                              External             
                   |----  IOR                                 External             
                   |----  IBSET                               External             
                   |----  NEWBIT                              External             
                   |----  BTEST                               External             
                   |----  INTCHA                              External             
   
 
3 X1APTR
         SUBROUTINE X1APTR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 86/08/08  FOR GALEPH 13.0
    - Modified : A. Putzer  - 87/04/04  FOR GALEPH 17.0
    - Modified : C. Geweniger - 88/10/11  for GALEPH 20.1
    - Modified : E. Blucher - 89/15/2 for ALEPHLIB
    - Modified : C.Geweniger - 890900 for ALEPHLIB 9.9
    - Modified : B. Bloch-Devaux - 92/12/10 for Sical in 92
   
   Apply the level1 trigger
   
    - The different level1 triggers are simulated using the information
      prepared in XT1SUM.
   
   
    - Called by      X1TRIG                        from this .HLB
    - Banks     : XTEB is filled
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1TRG                                                                           
        |---- X1APTR                                                               
                   |----  IAND                                External             
                   |----  NITBIT                              External             
                   |----  NHWBIT                              External             
                   |----  NHTBIT                              External             
                   |----  IOR                                 External             
                   |----  IBSET                               External             
                   |----  NEWBIT                              External             
                   |----  NETBIT                              External             
                   |----  NLTBIT                              External             
                   |----  BTEST                               External             
                   |----  MVBITS                              External             
   
 
3 X1BOOK
         SUBROUTINE X1BOOK
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/15  FOR ALEPHLIB 204
   
   Book level1 trigger histograms
   
    - This routine initializes (books) the level1 trigger
      histograms which are of more general interest.
   
   
    - Called by      XTBOOK                        from .GALEPH
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1BOOK                                                               
                   |----  HBOOK1                              External             
   
 
3 X1DCEB
         SUBROUTINE X1DCEB(IXTEB,IXTDI)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Decode bank xteb and fill bank xtdi
   
      Author   :- Rainer Geiges          4-AUG-1989
                  Alois Putzer           4-AUG-1989
                  Martin Wunsch          4-AUG-1989
                  Yves A. Maumary       20-DEC-1989 Adapted for ALEPHLIB
      Modified :- Yves A. Maumary       15-MAR-1990 for '90 run
   
      Inputs:
           - IXTEB : INTEGER : array corresponding to the bank XTEB
   
      Outputs:
           - IXTDI : INTEGER : array corresponding to the bank XTDI
   
      Libraries required: ALEPHLIB, CERNLIB
   
      Calls: BTEST, IBSET, MVBITS, UCOPY, VZERO, X1ECWM
   
      Description
      ===========
      Copies the bit patterns from bank XTEB into XTDI and add a name for
      each row, and decodes the bit patterns from mapped signals and
      special bits (ITC and TPC)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1DCEB                                                               
                   |----  VZERO                               External             
                   |----  UCOPY                               External             
                   |----  INDEX                               External             
                   |----  MOD                                 External             
                   |----  BTEST                               External             
                   |----  IBSET                               External             
                   |----  X1ECWM                                                   
   
 
3 X1DISC
         SUBROUTINE X1DISC
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 86/08/08  FOR GALEPH 13.0
    - Modified : A. Putzer  - 88/02/02  FOR GALEPH 19.6
    - Modified : C. Geweniger - 88/10/11  for GALEPH 20.1
    - Modified : C. Geweniger - 88/11/06  for GALEPH 20.2
    - Modified : E. Blucher - 89/15/2 for ALEPHLIB
    - Modified : C. Geweniger - 89/9/00   for ALEPHLIB 9.9
    - Modified : B. Bloch-Devaux - 92/12/10 for Sical in 92
   
   
   Discriminate level1 trigger signals
   
    - The analog trigger sources for the level1 trigger are discriminated
      using up to 4 sets of thresholds.
   
    - Banks    : XTEB is filled
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1TRG                                                                           
        |---- X1DISC                                                               
                   |----  MOD                                 External             
                   |----  IBSET                               External             
                   |----  IEWSUM                              External             
                   |----  ILTSUM                              External             
                   |----  SIX2MK                                                   
                   |----  BTEST                               External             
                   |----  IITSUM                              External             
                   |----  MVBITS                              External             
                   |----  IHCTTE                              External             
                   |----  IECTTE                              External             
                   |----  IECWTE                              External             
   
 
3 X1DISN
         SUBROUTINE X1DISN
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/10  FOR ALEPHLIB 204
   
   
   Discriminate level1 trigger signals
   
    - The analog trigger sources for the Level1 trigger are discriminated
      using up to 4 sets of thresholds.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1REDO                                                                          
   X1TRIG                                                                          
        |---- X1DISN                                                               
                   |----  INTCHA                              External             
                   |----  IBSET                               External             
                   |----  IEWSUM                              External             
                   |----  ILWSUM                              External             
                   |----  SIX2MK                                                   
                   |----  BTEST                               External             
                   |----  IITSUM                              External             
   
 
3 X1ECWM
         SUBROUTINE X1ECWM(ISEGM,NMODS,KMODS)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Get mapping from modules to segments for ecal wires
   
      Author   :- Alois Putzer           4-AUG-1989
                  Martin Wunsch          4-AUG-1989
                  Yves A. Maumary       20-DEC-1989 Adapted for ALEPHLIB
      Modified :- Yves A. Maumary       28-MAR-1990 Bounds for ISEGM
   
      Inputs:
           - ISEGM : INTEGER : trigger segment number
   
      Outputs:
           - NMODS : INTEGER : number of modules mapped onto the segment
                               number ISEGM
           - KMODS : INTEGER : array of dimension NMODS containing the
                               module number (TRIGGER NUMBERING!!!)
   
      Description
      ===========
      Returns the quantity of ECAL wire modules and their number IN THE
      TRIGGER NUMBERING SCHEME (!) which are mapped together onto
      trigger segment ISEGM given as input
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1DCEB                                                                          
        |---- X1ECWM                                                               
                   |----  MOD                                 External             
   
 
3 X1HISN
         SUBROUTINE X1HISN
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/15  FOR ALEPHLIB 204
   
   
   Fill the level1  trigger histograms
   
   
   
    - CALLED BY      X1TRIG                        FROM THIS .HLB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1TRIG                                                                          
        |---- X1HISN                                                               
                   |----  HF1                                 External             
                   |----  BTEST                               External             
                   |----  FLOAT                               External             
   
 
3 X1HIST
         SUBROUTINE X1HIST
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 86/08/08  FOR GALEPH 13.0
    - Modified : A. Putzer  - 87/04/04  FOR GALEPH 17.0
   
   
   Fill the level1  trigger histograms
   
   
   
    - Called by      X1TRIG                        from this .HLB
    - Calls          HF1                           from HBOOK
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1HIST                                                               
                   |----  HF1                                 External             
                   |----  BTEST                               External             
                   |----  FLOAT                               External             
                   |----  IECTTE                              External             
                   |----  IHCTTE                              External             
   
 
3 X1INI
         SUBROUTINE X1INI(IRUN)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author: E. Blucher - 15-FEB-1989.
    ----Modified version of X1IRUN by A. Putzer, C. Geweniger.
    - Modified : C.Geweniger - 890900 for ALEPHLIB 9.9
    - MODIFIED : B. BLOCH-DEVAUX 940107 TO INCLUDE INIT OF SICAL BANKS
   
   Initialize the level1 trigger for run# irun
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1INI                                                                
                   |----  NAMIND                              External             
                   |----  AGETDB                              External             
   
 
3 X1INP
         SUBROUTINE X1INP(IERR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
     Author   :- E. Blucher     10-FEB-1989
        (Comments from J. Boudreau, C. Geweniger.)
     Modified : C.Geweniger - 890900 for ALEPHLIB 9.9
     Inputs:
          - banks X1AD, XTEB
     Outputs:
          - IHTSUM, IHWSUM, IETSUM, IEWSUM, ILTSUM, IITSUM, IHCTTE,
            IECTTE, IECWTE
          - IERR / I  = error code
                        0 means OK
                        1 means input bank(s) missing
     Description
     ===========
   Read and unpack trigger adc bank (x1ad).
     Function is the reverse
     of GALEPH routine X1OUTP.  In addition, the functions of routine
     X1MIXI (except for filling IHTSUM, IHWSUM, IETSUM, IEWSUM, ILTSUM)
     are duplicated. IITSUM is filled from bank XTEB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1TRG                                                                           
        |---- X1INP                                                                
                   |----  CHAINT                              External             
   
 
3 X1IRUN
         SUBROUTINE X1IRUN(IRUN)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/03/20  FOR ALEPHLIB 205
                 modified B.Bloch may 96 for setup dependent thresholds
   
   Initialize the level1 trigger part of galeph
   
    - Banks    : X1TV (Trigger thresholds taken from data base)
                 Bank formats defined for trigger output banks
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1IRUN                                                               
                   |----  NAMIND                              External             
                   |----  GTSTUP                              External             
                   |----  AGETDB                              External             
                   |----  SITRIN                                                   
                   |----  ALTELL                              External             
                   |----  BKFMT                               External             
   
 
3 X1MIXI
         SUBROUTINE X1MIXI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 86/08/08  FOR GALEPH 13.0
    - Modified : A. Putzer  - 87/04/04  FOR GALEPH 17.0
    - Modified : A. Putzer  - 87/10/26  FOR GALEPH 19.3
    - Modified : A. Putzer  - 87/12/18  FOR GALEPH 19.6
    - Modified : C. Geweniger - 88/10/11  for GALEPH 20.1
    - Modified : E. Blucher - 89/15/2 for ALEPHLIB
    - Modified : C. Geweniger - 89/09/00  for ALEPHLIB 9.9
    - Modified : B. Bloch-Devaux - 92/12/10 for Sical in 92
   
   Mix level1 trigger signals
   
    - The analog trigger signals are mixed to form the trigger sources
      used for the level1 trigger.
    - The total energy values are calculated.
   
    - Banks    : HTTR, HWTR, ETTR, EWTR, LTTR, ITTR are read
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1MIXI                                                               
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  SIXAMK                                                   
   
 
3 X1MIXN
         SUBROUTINE X1MIXN
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
      New version of X1MIXI & X1OUTP combined
   
    - Author   : A. Putzer  - 95/01/10  FOR ALEPHLIB 204
   
   Mix level1 trigger signals & fill bank x1ip
   
    - The analog trigger signals are mixed to form the trigger sources
      used for the Level1 trigger.
    - The total energy values (Ec wires; EC towers) are calculated
   
    - Banks    : HWTR, ETTR, EWTR, LWTR, ITTR are read
      Bank     : X1IP                         is filled
   
   -   Called by          X1TRIG              this .HLB
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1TRIG                                                                          
        |---- X1MIXN                                                               
                   |----  NAMIND                              External             
                   |----  MOD                                 External             
                   |----  INTCHA                              External             
                   |----  MIN                                 External             
   
 
3 X1OUTP
         SUBROUTINE X1OUTP
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 86/08/08  FOR GALEPH 13.0
    - Modified : A. Putzer  - 87/04/04  FOR GALEPH 17.0
    - Modified : A. Putzer  - 87/10/28  FOR GALEPH 19.3
    - Modified : C. Geweniger - 88/10/11  for GALEPH 20.1
    - Modified : E. Blucher - 89/15/2 for ALEPHLIB
    - Modified : C. Geweniger - 89/09/00 for ALEPHLIB 9.9
   
   Fill level 1 trigger adc bank
   
    - The energy values are converted into ADC counts.
    - The trigger output bank 'X1AD' is filled.
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X1TRG                                                                           
        |---- X1OUTP                                                               
                   |----  INTCHA                              External             
                   |----  MIN                                 External             
                   |----  MAX                                 External             
                   |----  IEWSUM                              External             
                   |----  ILTSUM                              External             
   
 
3 X1PREP
         SUBROUTINE X1PREP(IERR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Prepare the bank xtdi used for the trigger analysis
   
      Author   :- Alois Putzer           4-AUG-1989
                  Martin Wunsch          4-AUG-1989
                  Yves A. Maumary       20-DEC-1989 Adapted for ALEPHLIB
      Modified :- Yves A. Maumary       16-MAR-1990 for '90 run
   
      Inputs:
           - none
   
      Outputs:
           - IERR : INTEGER = 0 : creation and preparation of the bank
                                  successful
                            = 1 : creation or preparation of the bank
                                  failed
   
      Libraries required: ALEPHLIB, BOS77, CERNLIB
   
      Calls: ALTELL, AUBOS, BKFMT
   
      Description
      ===========
      Creates the XTDI bank and prepares it (fill in names and set
      'filled' tag = 0)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1PREP                                                               
                   |----  AUBOS                               External             
                   |----  ALTELL                              External             
                   |----  BKFMT                               External             
                   |----  NAMIND                              External             
                   |----  INTCHA                              External             
   
 
3 X1PRNT
         SUBROUTINE X1PRNT
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/10  FOR ALEPHLIB 204
   
   
   
   Print level 1 trigger information
   
   
    - Called by      ASTRIG                        from .GALEPH
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1PRNT                                                               
                   |----  IEWSUM                              External             
                   |----  SIXAPR                                                   
                   |----  PATRNFORMAT                         External             
                   |----  MOD                                 External             
                   |----  BTEST                               External             
                   |----  IITSUM                              External             
   
 
3 X1REDO
         SUBROUTINE X1REDO
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/10  FOR ALEPHLIB 204
   
   Redo trigger analysis with different thresholds
   
   
      Bank     : X1IP                         is read
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1REDO                                                               
                   |----  NAMIND                              External             
                   |----  INTCHA                              External             
                   |----  MOD                                 External             
                   |----  X1DISN                                                   
                   |----  X1APTNCONTINUE                      External             
   
 
3 X1RSUM
         SUBROUTINE X1RSUM(ILUN,IERR)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print the trigger run summary
   
      Author   :- Alois Putzer           4-AUG-1989
                  Martin Wunsch          4-AUG-1989
                  Yves A. Maumary       20-DEC-1989 Adapted for ALEPHLIB
      Modified :- Yves A. Maumary       16-MAR-1990 for '90 run
      Modified :- Yves A. Maumary       15-MAR-1991 New bank XTRB
      Modified :- F.Ranjard             19-MAR-1991 suppress references
                                                    to JULIA common blocks
   
      Inputs:
           - ILUN : INTEGER : logical unit number for the formatted
                              fortran output
   
      Outputs:
           - IERR : INTEGER = 0 : printout of run summary successful
                            = 1 : at least one of the summary banks not
                                  found
   
      Libraries required: ALEPHLIB, BOS77, CERNLIB
   
      Calls: AGETDB, ALTELL, CHAINT, INTCHA, NAMIND, UCOPY
   
      Description
      ===========
      Finds the 3 trigger run summary banks (XSGE,XSHI,XSSC), puts their
      content into local arrays and prints the summary onto unit
      ILUN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1RSUM                                                               
                   |----  NAMIND                              External             
                   |----  ALTELL                              External             
                   |----  INTCHA                              External             
                   |----  UCOPY                               External             
                   |----  AGETDB                              External             
                   |----  FLOAT                               External             
                   |----  CHAINT                              External             
                   |----  FORMAT                              External             
   
 
3 X1TIME
         SUBROUTINE X1TIME(IPTIM,IDTIM)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Unpack the event time
   
      Author   :- Alois Putzer           4-AUG-1989
                  Martin Wunsch          4-AUG-1989
                  Yves A. Maumary       20-DEC-1989 Adapted for ALEPHLIB
   
      Inputs:
           - IPTIM : INTEGER  Array of dimension 2 containing the
                              packed time
   
      Outputs:
           - IDTIM : INTEGER  Array of dimension 7 containing the event
                              time in the following order:
                              day, month, year, hour, minute, second,
                              1/100 second
   
      Libraries required: CERNLIB
   
      Calls: IAND, ISHFT
   
      Description
      ===========
      The time when the event occured is contained in the trigger bank
      XTCN, but in a packed form. This routine decodes the time into
      an array of 7 integers with, in order:
      day, month, year, hour, minute, second, 1/100 second
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1TIME                                                               
                   |----  IAND                                External             
                   |----  ISHFT                               External             
   
 
3 X1TRG
         SUBROUTINE X1TRG
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author : E. Blucher - 89/11/2 for ALPHA, JULIA
    ----Modified version of X1TRIG by A. Putzer, C. Geweniger.
    - Modified : C. Geweniger - 890900   for ALEPHLIB 9.9
   
    - Apply level1 trigger conditions using information from X1AD
      and XTEB banks.
   
   This routine simulates the application of the level 1 trigger.
   
    - The subroutines called correspond to the functions applied
      online
   
    - Banks    : X1TH  return if it does not exist
                 XTEB  book the bank with 1 row
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1TRG                                                                
                   |----  X1INP                                                    
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  X1DISC                                                   
                   |----  X1APTR                                                   
                   |----  X1OUTP                                                   
   
 
3 X1TRIG
         SUBROUTINE X1TRIG
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/10  FOR ALEPHLIB 204
   
   
   Apply level1 trigger conditions
   
   
    - Banks filled in the GALEPH trigger part : X1RG (as for real data)
                                                but only row TPR filled
                                                X1IP (MC only)
   
    - Called  by       ASTRIG                   from GALEPH
    - Calls            X1MIXN                   from this .HLB
                       X1DISN                      "
                       X1APTN                      "
                       X1HISN                      "
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1TRIG                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  GTSTUP                              External             
                   |----  X1MIXN                                                   
                   |----  SIXAMK                                                   
                   |----  X1DISN                                                   
                   |----  X1APTN                                                   
                   |----  X1HISN                                                   
   
 
3 X1WSUM
         SUBROUTINE X1WSUM
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    - Author   : A. Putzer  - 95/01/15  FOR ALEPHLIB 204
   
   
   Print level1 trigger summary
   
   
    - Called by      ASWSUM                        from .GALEPH
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X1WSUM.                                                              
   
 
3 X2BOOK
         SUBROUTINE X2BOOK
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Book the level 2 histograms
   Author : T. Medcalf  10/9/87
    Uses HBOOK calls to book the histograms to show
    track finding statistics.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X2BOOK                                                               
                   |----  HBOOK1                              External             
   
 
3 X2DFCD
         SUBROUTINE X2DFCD
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Read constants for level 2 trigger emulation.
     Author : T. Medcalf   10/9/87
     Modified T.M.         21/10/88
    Read X2RU run data and assign default values.
      X2RU Card values are
      1 : Z-Acceptance in mm.(def. 100.)
      2 : Print level, 0 = most detail.
      3 : Digital noise: -1 = none, 0 = def. (100 hits), else>0 = # of
      4 : Drift velocity, assumed for calculation. ( mm / microsec )
      5 : Drift velocity, physical. ( mm/mcsec )(def. 50. )
      6,7,8 : Numbers of the padrows ignored by the trigger algorithm.(9,
      9 : Number of theta-bins in the inner zone.( def. 29 )
     10 : Number of theta-bins in the outer zone.( def. 58 )
     11 : Clockrate in MegaHerz. ( def. 5. )
     12 : Excess timebins allowed by Z-road algorithm. ( def. 5 )
     13 : Z-road width in timebins. ( def. 1 )
     14 : 8-digit ( decimal ) number, encoding the pairing-off of pads.
          def. : 16372514 = highest priority pair is (1,6), then (3,7)
     15 : 8-digit ( decimal ) number, encoding the pad thresholds.
          def. : 44434556 = thresholds of 4 for innermost 3 rows, then
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X2IRUN                                                                          
        |---- X2DFCD                                                               
                   |----  MOD                                 External             
                   |----  NAMIND                              External             
                   |----  INT                                 External             
   
 
3 X2IRUN
         SUBROUTINE X2IRUN (IRUN,FHIST,IRET)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Initial run routine for level2 trigger.
     Author: T. Medcalf  10/9/87
    Call routines to set up constants, Bos bank names,
    and look-up tables.
   - Input  :  IRUN / I     = current run number
               FHIST / L    = histogram flag
   - Output :  IRET / I     = return flag
                              0 means  OK
                              2 FATAL error in X2LUTS
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X2IRUN                                                               
                   |----  X2DFCD                                                   
                   |----  X2NAMI                                                   
                   |----  X2LUTS                                                   
   
 
3 X2LUTS
         SUBROUTINE X2LUTS (IRET)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Level 2 trigger look up table calculations
     Author : T.Medcalf    10/9/87
    Creates look up tables used by the electronics
    of the level2 trigger, for converting time to
    theta-bin, etc.
   - Output:   IRET / I   = return flag
                          0 means OK
                          2 means FATAL error (due to default bin
                                               values)
    BOS bank X2TB - Theta bin table for use by level 3.
    1  :  words / theta bin ( = 16 )
    2  :  # of theta bins
    WORD(I)    :  # of first time bin in the Ith theta bin, on row 1
    WORD(I+1)  :  # of last time bin in the Ith theta bin, on row 1
    WORD(I+2)  :  # of first time bin in the Ith theta bin, on row 2
    WORD(I+3)  :  # of last time bin in the Ith theta bin, on row 2
    .............
    WORD(I+15) :  # of last time bin in the Ith theta bin, on row 8
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X2IRUN                                                                          
        |---- X2LUTS                                                               
                   |----  TPTROW                              External             
                   |----  VZERO                               External             
                   |----  ITHOVR                              External             
                   |----  INT                                 External             
                   |----  REAL                                External             
                   |----  NTBINS                              External             
                   |----  ATAN                                External             
                   |----  NPEF1IF                             External             
                   |----  MAX                                 External             
                   |----  MOD                                 External             
                   |----  ALTELL                              External             
                   |----  AUBOS                               External             
                   |----  ABS                                 External             
                   |----  IPADPR                              External             
   
 
3 X2NAMI
         SUBROUTINE X2NAMI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Assign level2 trigger bos bank name indices.
      Author : T.Medcalf  10/9/87
      Modified T.M.       21/10/88
    initialses name indices for track,hit,theta bin and mask
    bos banks. Also sets the bank format.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X2IRUN                                                                          
        |---- X2NAMI                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  VZERO                               External             
   
 
3 X2PRHI
         SUBROUTINE X2PRHI
  ------------------------------------------------------------------------------
    CKEY TRIG LEVEL2 PRINT
  ------------------------------------------------------------------------------
   Dump x2df banks: martin's tabular format, agrees with ddl
   - T. Medcalf, 4/10/89
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   X2PRIN                                                                          
        |---- X2PRHI                                                               
                   |----  NAMIND                              External             
   
 
3 X2PRIN
         SUBROUTINE X2PRIN (TFLAG)
  ------------------------------------------------------------------------------
    CKEY TRIGGER PRINT LEVEL2 / USER
  ------------------------------------------------------------------------------
   - F.Ranjard - 890530
   Print various quantities from level 2 trigger
   - Input   : TFLAG / CHAR*4 = 'INIT'  initialization
                                'EVEN'  event printout
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X2PRIN                                                               
                   |----  IX2MSK                              External             
                   |----  X2PRHI                                                   
   
 
3 X2TRIG
         SUBROUTINE X2TRIG (IRET)
  ------------------------------------------------------------------------------
    CKEY TRIGGER LEVEL2 / USER
  ------------------------------------------------------------------------------
   Main level 2 trigger routine
     Author : T.Medcalf   10/9/87
     Modified T.M.        21/10/88
     Modified T.M.        2/10/89
                          New definition of output banks.
    Takes the TTHT bank as its input, and emulates the level2
    track-finding electronics to produce a bos bank of hits
    that passed through the electronics, a bank of tracks
    found, and a bank containing a MSKLN word mask of the tracks
    found in segments of phi and theta.
   - Output  : IRET / I      = return code
                               0 means OK
                               1 not enough space for BOS banks
     the BOS bank X2DF contains the hits and tracks found by LEVEL 2.
      1 :  words / row  ( = 1 )
      2 :  # of rows
     For 24 sectors
     word(1)   : processor number
     word(2)   : number of time-bins with hits in them
     word(3)   : number of tracks
     word(i+3) : hit-pattern for i-th non-empty time-bin
     word(word(2)+3)   : last hit-pattern
     word(word(2)+i+3) : number of i-th non-empty time-bin
     word(2*word(2)+3) : number of last non-empty time-bin
     word(2*word(2)+i+3)       : theta-bin of i-th track
     word(2*word(2)+word(3)+3) : theta-bin of last track
     The next word is the next processor-number, and the above repeats.
     The BOS bank X2MS contains the Trigger mask from level 2.
     1   :   words / mask segment ( = 1 )
     2   :   # of mask segments ( = 60 )
     WORD(I)  : 1 if track found in Ith segment
              : 0 if no track found in Ith segment.
     The 24 work-banks ( 1 for each of 24 logical Phi-sectors ),
    contain 3 words per hit , FORMAT INTEGER.
     Each bank has input to it the hits from TTHT, which lie in its
    sector.
     So bank structure is
     1   :   Words per hit
     2   :   Number of hits in sector
     Word(I)   = Row number of Ith hit
     Word(I+1) = Pad number of Ith hit
     Word(I+2) = Time-bin number of Ith hit
     The work-banks for tracks in each zone, before and after sorting int
    track order, for the counting process, contain 1 word / hit, which is
    track-number from the TPC emulation.
     1  :  Words per hit ( = 1 )
     2  :  Number of hits
     Word(I) = Track-number of Ith hit
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X2TRIG                                                               
                   |----  JX2TRK                              External             
                   |----  JX2SOR                              External             
                   |----  MOD                                 External             
                   |----  NAMIND                              External             
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
                   |----  INT                                 External             
                   |----  ABS                                 External             
                   |----  SORTZV                              External             
                   |----  RNDM                                External             
                   |----  BDROP                               External             
                   |----  ALBOS                               External             
                   |----  BLIST                               External             
                   |----  VZERO                               External             
                   |----  AUBOS                               External             
                   |----  SBIT1                               External             
                   |----  ITHOVR                              External             
                   |----  ITHETA                              External             
                   |----  ITHSUB                              External             
                   |----  ITHOSB                              External             
                   |----  NTBINS                              External             
                   |----  IHTMAX                              External             
                   |----  ITHRSH                              External             
                   |----  IPADPR                              External             
                   |----  IZRDLK                              External             
                   |----  ITVOTE                              External             
                   |----  MASCON                              External             
                   |----  HF1                                 External             
                   |----  REAL                                External             
                   |----  MIN                                 External             
                   |----  AUBPRS                              External             
                   |----  WDROP                               External             
                   |----  ALTELL                              External             
   
 
3 X2WSUM
         SUBROUTINE X2WSUM
  ------------------------------------------------------------------------------
    CKEY TRIG LEVEL2 SUMMARY / INTERNAL
  ------------------------------------------------------------------------------
      Modified : T. Medcalf - 89/10/03
   Print level2 trigger summary
   
    - Called by      XTWSUM                        from this .HLB
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              X2WSUM.                                                              
   

2 VDES

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     VDET geometry package
     ! 981028 ALEPHLIB 310.0
         VGRDAL : Modified to use laser data also                  (G.Sguazzoni)
         VGRDLS : NEW: Add the laser information to the alignment  (G.Sguazzoni)
    
     ! 980902 ALEPHLIB 309.0
        VRECOR : New. Bonding error correction for fault types 301,302
                 Returns displacement of local wafer coordinate (cm) (J.Rothberg)
    
     ! 980715 correction file no.3 for ALEPHLIB 30.8
        VDCHNB : NEW - Given the local coordinate, bank number and view, 
                       returns the chip number.                 (M.Thulasidas)
        VDGTCH : NEW - Given the layer, face, module, view and chip in module, 
                       returns a global chip number             (M. Thulasidas)
    
     ! ALEPHLIB 306
        VCHNST,VGWFVU,VGWFXY : fix variable type inconsistencies in 
                               function calls, for Linux           (A.Waananen)
    
     ! ALEPHLIB 304
        VGRDAL : Modified to use VNGBVNLC if they exist (F.Ranjard)
    
     ! ALEPHLIB 303 corr file 2
        VCORMP : modify for case 8 rphi (J.Rothberg)
    
     ! ALEPHLIB 215
        VCORMP : modify for cases 17 rphi, 10 Z (J.Rothberg)
    
     ! ALEPHLIB 213
       Improve correction of time dependent bending of the faces (D.Rousseau)
        VGRDAL: call VALFCO, suppress forced reaccess of VALC,VAGB
        VALFCO: (new deck) Does the correction
        VALCOR: Obsolete, removed. 
    
     ! ALEPHLIB 212
       Correct time dependent bending of the faces of VDET (D.Rousseau)
        VALCOR: (new deck) Does the correction
        VGRDAL: Force reaccess of VALC,VAGB; call VALCOR
    
     ! ALEPHLIB 210
       many corrections and new features in hadrware error software
    
     ! ALEPHLIB 209
       Add new routines to handle hardware errors.
    
     ! ALEPHLIB 208
       The changes include the addition of two new subroutines for
       packing and unpacking VDET hit addresses.  The four old routines
       that did this kind of thing, VADDPK, VADDUN, VADESA, and VAENSA,
       will henceforth only work for VDET91 because the packing scheme
       will be different for VDET95.
    
       Associated with this change is addition of one column in the
       database bank VRDO.
    
        VRDOJJ: added one hac parameter by hand
        VHLSBT: deleted obsolete stuff about "corruption bit",
                  added parameters pertaining to VDET95
        VRDOCO: added one word for number of bits in wafer number
        VDETGE: added bit shifts and masks (for the things that
                  are not identical in VDET91 and VDET95)
    
        VPKADD: (new deck) the new packing routine
        VUNADD: (new deck) the new unpacking routine
        VFNEAR: (new deck) find faces near a given phi coordinate
        VPHICF: (new deck) returns phi coordinate of face center
        VADDPK: documentation modified--this routine is for VDET91 only!
        VADDUN: same
        VADESA: same
        VAENSA: same
        VDAFRD: initialize new variables and read one more word from VRDO
        VDETGI: fill bit shifts and masks in VDETGE, fill in geometry
                arrays even for empty slots
        VDGDMP: print new variables in VRDOCO and VDETGE
        VRDDAF: print one line when geometry is initialized
    
     ! ALEPHLIB 205
       VJWABR - These are used in Julia for
       VJWABW - the simulation of
       VBRJWA - alignment errors for Monte Carlo events
       VDMJLS -  This is a crude version of VDMJLS that works with the new
                 geometry package, but only for VDET91!  It is designed to
                 reproduce the results of the old version.
    
     ! ALEPHLIB 204
       Introduction of the new package called VDET95 which replaces VDET89
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     VABCFL     Return magnetic field in local (a,b,c) coordinates
     VABCVU     Transform local wafer coords (a,b,c) into wafer coords (v,u,w)
     VABCXY     Transform local wafer coords (a,b,c) into aleph coords (x,y,z)
     VADDPK     Pack a full vhls address (for vdet91 only)
     VADDUN     Unpack a full vhls address (for vdet91 only)
     VADESA     Decode an electronics channel address (for vdet91 only)
     VADEWA     Decode wafer address into bank number
     VAENSA     Encode an electronics channel address (for vdet91 only)
     VAENWA     Encode wafer address into bank number
     VALFCO     Correct time dependent bending of the faces of vdet
     VBNKDP     Dump unpacked bonding error banks
     VBRJWA     Convert global wafer index jwaf to decimal encoded readout module
     VCHNST     Returns data channel corresponding to strip for given wafer, module
     VCORMP     Use bonding error list to correct electronics channels list
     VCSCEC     Convert first strip channel in cluster to first electronics channel
     VDACRS     Calculates the strip, wafer for given data channel and view.
     VDAFRD     Read vdet geometry banks from daf
     VDAMB      Simple subroutine to count the ambiguity bits by track
     VDARGE     Read vdet geography banks from daf
     VDCFLT     Returns strips, fault code
     VDCHNB     Given the layer (jlay), face (ifac), module (imod), view (iview)
     VDCWRS     Calculates the strips and wafers for given data channel and view.
     VDECSC     Calculate strip channel number from electronics channel number
     VDETGI     Fills vdetge common
     VDFIRS     Compute the distribution of charge on the physical strips
     VDGDMP     Dump vdet geometry commons
     VDGTCH     Given the local coordinate, bank number and view, returns the chip
     VDGTOL     Find the intersection points of a line and the wafers in a face
     VDINDX     Builds the 'standard' wafer indexes
     VDLCPS     Local coordinate to physical strip.
     VDLCRS     Local coordinate to readout strip.
     VDPGEO     Print geometry for vdet
     VDPSLC     Physical strip number to local wafer coordinate.
     VDPSRS     Physical strip number to readout strip number.
     VDRMAX     Returns maximum radius of all wafers in vdet
     VDRMIN     Returns minimum radius of all wafers in vdet
     VDRSLC     Readout strip number to local wafer coordinate.
     VDRSPS     Readout strip number to physical strip number.
     VDRSSC     Convert readout strip number to strip channel number
     VDSCEC     Calculate electronics channel number from strip channel number
     VDSCRS     Convert strip channel number to readout strip number
     VDWFXY     Converts wafer point into local and absolute coordinates
     VDYEAR     Return year (= 91 or 95) of vdet setup
     VDZMAX     Returns maximum abs(z) of all wafers in vdet
     VFACSN     Serial number of face located in slot jfac
     VFADIM     Returns dimensions of a face
     VFAORI     Returns orientation of a face
     VFASDP     Dumps serial number of faces and modules, vdet95
     VFASMD     Returns serial number of modules in global face jfac and face name.vdet95
     VFFACW     Calculates global face and wafer-in-face from global wafer
     VFJFAC     First global face index in layer
     VFJMOD     First global module index in face
     VFJWAF     First global wafer index in module
     VFNEAR     Identify faces in a layer near a given phi
     VFWAFF     Calculates local module and local wafer from wafer-in-face
     VFWAFI     Calculates layer, local face, and wafer-in-face from global wafer
     VGCADI     Calculate distances from wafer midplanes to z axis, with alignment
     VGCMTR     Combine two transformation structures
     VGCRMT     Retrieves local wafer alignment covariance matrix from valc
     VGEXRO     Expand transformation structure from daf into a full matrix
     VGGTNO     Get the nominal transformation for a wafer
     VGINTR     Invert a transformation structure
     VGRDAL     Read alignment banks and fill the vgpaal common
     VGRDLS     Add to alignment expanded form texp the laser informations
     VGTBER     Access unpacked bonding error banks, place into commons
     VGTRVE     Transform a vector with a given transformation
     VGWFVU     Transforms absolute coordinates into wafer coordinates
     VGWFXY     Transforms wafer coordinates into absolute coordinates
     VIFACI     Calculates local layer and face indices from global face
     VIMMOD     Calculates the local module index for a given signed global module
     VIMODI     Calculates local layer, face, and module indices from global module
     VIMODM     Calculates the layer and local face for a given mglobal module
     VIMODR     Calculates local module index from readout module and view
     VINDXI     Create look-up tables to be used by index conversion functions
     VINIBM     Initialization of vdet geography and bonding maps
     VINIST     Initialize electronics channel-strip arrays
     VINIVG     Initialize vdet geography package, unconnected channels, face/module
     VINLSW     Find intersection points of line segment and the surface of a wafer
     VINSEN     Checks whether a point (a,b) is within sensitive region of wafer
     VINTER     Find intersection points of line and the surface of a wafer
     VINTLF     Find intersection points of line and wafers in a face
     VINTLW     Find intersection points of line and the surface of a wafer
     VIROMW     Calculates readout module from module, wafer, and view
     VITEXI     Calculates local layer, face, and module indices from text module
     VIWAFI     Local layer, face, module, and wafer indices from global wafer
     VIWFFW     Calculates wafer-in-face from local module and local wafer
     VJFACI     Calculates the global face index from the local layer and face
     VJFACM     Calculates the global face for a given global module, jmod
     VJFACW     Calculates the global face for a given global wafer, jwaf
     VJLAYF     Calculates the global layer index for a given global face, jfac
     VJLAYM     Calculates the global layer for a given global module, jmod
     VJLAYW     Calculates the global layer for a given global wafer, jwaf
     VJMODI     Global module index from the local layer, face, and module indices
     VJMODM     Calculates the global module index for a given mglobal module
     VJMODW     Calculates the global module for a given global wafer
     VJWABR     Convert decimal encoded readout module to global wafer index
     VJWABW     Convert decimal encoded wafer address to global wafer index jwaf
     VJWAFF     Calculates global wafer from global face and wafer-in-face
     VJWAFI     Global wafer index from the local layer, face, module and wafer
     VJWAFM     Global wafer index from the mglobal module and local wafer indices
     VJWFFW     Calculates global wafer from local layer, face, and wafer-in-face
     VLJFAC     Last global face index in layer
     VLJMOD     Last global module index in face
     VLJWAF     Last global wafer index in module
     VMCMOD     Returns mcode of global module number
     VMMFLD     Return magnetic field in local (a,b,c) coordinates
     VMMODJ     Calculates the mglobal module for a given global module
     VMODMC     Returns global module number for mcode
     VMWAFJ     Mglobal module index and local wafer from the global wafer index
     VNELRM     Returns number of electronics channels in readout module
     VNFSLO     Determine number of slots containing a face
     VNIRFS     Returns physical strip number of first readout strip
     VNLAYR     Total number of layers
     VNRDIR     Returns readout direction
     VNRFAC     Number of slots in layer
     VNRMOD     Number of modules in face
     VNROMM     Returns number of readout modules per module in view
     VNRSSC     Number of readout strips per strip channel
     VNRWAF     Number of wafers in module
     VNRWFF     Number of wafers in face
     VNSCRM     Returns number of strip channels in readout module
     VNSTCM     Returns number of strip channels in module
     VNTFAC     Total number of slots
     VNTMOD     Total number of modules
     VNTWAF     Total number of wafers
     VPHICF     Returns phi coordinate of face center
     VPHIFC     Returns phi of face normal (along +c direction)
     VPHIFN     Returns phi of face normal (toward outside of vdet)
     VPHSTM     Returns the number and pitch of the physical strips on a wafer
     VPKADD     Pack a full vhls address including number of electronics channels
     VRDDAF     Initialize vdet geometry commons
     VRECOR     Additional coordinate displacement;given view,layer,face,wafer,strip
     VRMMOD     Calculates the readout module index for a given signed global module
     VROMAX     Returns limit and step size for looping over readout modules
     VROSTM     Returns information about the readout strips on a wafer
     VRSWMD     Calculates the data channel for a given strip,wafer,module,view. vdet95
     VRSWMX     Calculates the mx7 chip number and data channel
     VRVMBE     Read and unpack bonding error banks  vmbe
     VSCHAN     Returns strip number in each wafer corresponding to data channel
     VSCMEC     First and last strip-channel-in-module with readout direction
     VSCMSC     Convert strip-channel-in-module number to strip channel number
     VSENSI     Returns the boundaries of the sensitive region of a wafer and view
     VSETUP     Returns setup code for last successfully read vdet setup
     VSLOTF     Determine whether a given slot contains a face
     VSMJMD     Returns serial number of global module number, vdet95
     VSMMOD     Returns serial number of signed module number, vdet95
     VSMMTX     Returns serial number of module text name, vdet95
     VSTREG     Specify regions relating strip channels to readout strips. vdet95
     VTEXTM     Calculates the text module for a given global module, jmod
     VTEXTW     Calculates the text module for a given global wafer, jwaf
     VUNADD     Unpack a full vhls address including number of electronics channels
     VVUWAB     Transform wafer coords (v,u,w) into local wafer coords (a,b,c)
     VVUWXY     Transform wafer coordinates into aleph coordinates
     VWADIM     Returns the external dimensions of a wafer
     VWDIST     Find distance from a given point to a given wafer
     VWFFND     Find which wafer in a face is nearest to a given point
     VWFIND     Find which wafer in vdet is nearest to a given point
     VWTHCK     Returns the thickness of the wafers
     VXYZAB     Transform aleph coords (x,y,z) into local wafer coords (a,b,c)
     VXYZFC     Returns (x,y,z) of face center
     VXYZVU     Transform aleph coordinates into wafer coordinates
     VXYZWA     Returns (x,y,z) of wafer center
     VZMULT     Is the z readout multiplexed?
     VZRSRS     Find partner of readout strip in multiplexed z strip channel

3 VABCFL
         REAL FUNCTION VABCFL (JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES FIELD / USER
  ------------------------------------------------------------------------------
   Return magnetic field in local (a,b,c) coordinates
   - Joe Rothberg, 15 January 1994
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VABCFL / R  Component of magnetic field in +a direction (kGauss)
                 (returns zero on error)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VABCFL                                                               
                   |----  VJMODW                                                   
                   |----  VMMODJ                                                   
                   |----  VMMFLD                                                   
   
 
3 VABCVU
         INTEGER FUNCTION VABCVU (ABC,JWAF,VUW)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform local wafer coords (a,b,c) into wafer coords (v,u,w)
   - Joe Rothberg, 15 January 1994
   - Input:
     ABC(3) / R  Coordinates of point in local wafer system
     JWAF   / I  Global wafer index
   - Output:
     VABCVU / I  = VDOK if successful
                 = VDERR if error occurred
     VUW(3) / R  Coordinates of point in wafer system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VABCXY                                                                          
        |---- VABCVU                                                               
                   |----  VJLAYW                                                   
                   |----  VJMODW                                                   
                   |----  VMMODJ                                                   
                   |----  ISIGN                               External             
                   |----  VZERO                               External             
   
 
3 VABCXY
         INTEGER FUNCTION VABCXY (ABC,JWAF,XYZ)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform local wafer coords (a,b,c) into aleph coords (x,y,z)
   - Steve Wasserbaech, 14 October 1994
   - Input:
     ABC(3) / R  Coordinates of point in local wafer system
     JWAF   / I  Global wafer index
   - Output:
     VABCXY / I  = VDOK if successful
                 = VDERR if error occurred
     XYZ(3) / R  Coordinates of point in ALEPH system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDMSUP                                                                          
   VTXTRK                                                                          
        |---- VABCXY                                                               
                   |----  VABCVU                                                   
                   |----  VVUWXY                                                   
                   |----  VZERO                               External             
   
 
3 VADDPK
         SUBROUTINE VADDPK (IADDR,NECH,ILAY,IROM,IFAC,IVIEW,IECH)
  ------------------------------------------------------------------------------
    CKEY VDETDES PACK ADDRESS / USER
  ------------------------------------------------------------------------------
   Pack a full vhls address (for vdet91 only)
   - Dave Brown, 26-9-1990
   - Steve Wasserbaech, 2 November 1994: change variable names, doc
     This routine packs a bit-packed address as found in VHLS or VFHL
     banks, including the number of electronics channels or strip
     channels.  VADDUN unpacks these addresses.
     WARNING: this routine works only for VDET91.
     Use VPKADD for general applications.
     Packing scheme:
     Bits 0-9:  IECH        (0-1023)
           10:  IVIEW - 1   (0-1)
        11-14:  IFAC - 1    (0-14)
        15-16:  IROM - 1    (0-3)
           17:  ILAY - 1    (0-1)
        18-31:  NECH        (0-16383)
   - Input:
     NECH  / I  Number of electronics channels (VHLS) or strip channels
                (VFHL) in this cluster
     ILAY  / I  Layer index of this cluster
     IROM  / I  Readout module of this cluster
     IFAC  / I  Local face index of this cluster
     IVIEW / I  View number (=1 for z, =2 for r-phi) of this cluster
     IECH  / I  First electronics channel (VHLS) or strip channel (VFHL)
                number of this cluster.  The numbering of electronics
                channels begins with zero; the numbering of strip
                channels begins with one.
   - Output:
     IADDR / I  Packed address
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VADDPK.                                                              
   
 
3 VADDUN
         SUBROUTINE VADDUN (IADDR,NECH,ILAY,IROM,IFAC,IVIEW,IECH)
  ------------------------------------------------------------------------------
    CKEY VDETDES UNPACK ADDRESS / USER
  ------------------------------------------------------------------------------
   Unpack a full vhls address (for vdet91 only)
   - Dave Brown, 26-9-1990
   - Steve Wasserbaech, 1 November 1994: change variable names, doc
     This routine unpacks a bit-packed address as found in the VHLS and
     VFHL banks into its components.  VADDPK packs these addresses.
     See VADDPK for the packing scheme.
     WARNING: this routine works only for VDET91.
     Use VUNADD for general applications.
   - Input:
     IADDR / I  Packed address
   - Output:
     NECH  / I  Number of electronics channels (VHLS) or strip channels
                (VFHL) in this cluster
     ILAY  / I  Layer index of this cluster
     IROM  / I  Readout module of this cluster
     IFAC  / I  Local face index of this cluster
     IVIEW / I  View number (=1 for z, =2 for r-phi) of this cluster
     IECH  / I  First electronics channel (VHLS) or strip channel (VFHL)
                number of this cluster.  The numbering of electronics
                channels begins with zero; the numbering of strip
                channels begins with one.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VADDUN                                                               
                   |----  IAND                                External             
                   |----  ISHFT                               External             
   
 
3 VADESA
         SUBROUTINE VADESA (IADDR,ILAY,IROM,IFAC,IVIEW,IECH)
  ------------------------------------------------------------------------------
    CKEY VDETDES DECODE ADDRESS / USER
  ------------------------------------------------------------------------------
   Decode an electronics channel address (for vdet91 only)
   - Francesco Forti, 3 August 1986
   - Steve Wasserbaech, 6 February 1995: use parameters in VHLSBT
     Decode an electronics channel or strip channel address.  (This is
     the same as VADDUN except the number of channels is not unpacked.)
     VAENSA packs these addresses.  See VAENSA for the packing scheme.
     WARNING: this routine works only for VDET91.
     Use VUNADD for general applications.
     Note: up to and including ALEPHLIB version 204, VADESA gave an
     error condition if IADDR = 0 was input; in the present version,
     IADDR = 0 is valid.
   - Input:
     IADDR / I  Packed address
   - Output:
     ILAY  / I  Layer index of this channel
     IROM  / I  Readout module of this channel
     IFAC  / I  Local face index of this channel
     IVIEW / I  View number (=1 for z, =2 for r-phi) of this channel
     IECH  / I  Electronics channel or strip channel number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDPRDI                                                                          
        |---- VADESA                                                               
                   |----  IAND                                External             
                   |----  ISHFT                               External             
   
 
3 VADEWA
         SUBROUTINE VADEWA (NBNUM,ILAY,IWFF,IFAC,IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES DECODE WAFER / USER
  ------------------------------------------------------------------------------
   Decode wafer address into bank number
   - Dave Brown, 9-26-1990
   - Steve Wasserbaech, 2 November 1994: change variable names, doc
     This routine unpacks a base-10 encoded address (used as the bank
     number for the VDXY and VDZT banks) into its wafer address
     components.  VAENWA packs these addresses.  See VAENWA for the
     packing scheme.
   - Input:
     NBNUM / I  Bank number
   - Output:
     ILAY  / I  Layer index of this wafer
     IWFF  / I  Local wafer-in-face index
     IFAC  / I  Local face index of this wafer
     IVIEW / I  View number (=1 for z, =2 for r-phi)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTCH                                                                          
   VDWFXY                                                                          
   VGRDAL                                                                          
   VGWFVU                                                                          
   VGWFXY                                                                          
   VJWABR                                                                          
   VJWABW                                                                          
   VDHERR                                                                          
   VDHITS                                                                          
   VDMSRL                                                                          
   VDMSUP                                                                          
   VTRUH                                                                           
   VTXNWT                                                                          
        |---- VADEWA                                                               
                   |----  MOD                                 External             
   
 
3 VAENSA
         SUBROUTINE VAENSA (IADDR,ILAY,IROM,IFAC,IVIEW,IECH)
  ------------------------------------------------------------------------------
    CKEY VDETDES ENCODE ADDRESS / USER
  ------------------------------------------------------------------------------
   Encode an electronics channel address (for vdet91 only)
   - Francesco Forti, 3 August 1986
   - Steve Wasserbaech, 6 February 1995: use parameters in VHLSBT
     Encode an electronics channel or strip channel address.  (This is
     the same as VADDPK except the number of channels is not packed.)
     VADESA unpacks these addresses.
     WARNING: this routine works only for VDET91.
     Use VPKADD for general applications.
     Packing scheme:
     Bits 0-9:  IECH        (0-1023)
           10:  IVIEW - 1   (0-1)
        11-14:  IFAC - 1    (0-14)
        15-16:  IROM - 1    (0-3)
           17:  ILAY - 1    (0-1)
   - Input:
     ILAY  / I  Layer index of this channel
     IROM  / I  Readout module of this channel
     IFAC  / I  Local face index of this channel
     IVIEW / I  View number (=1 for z, =2 for r-phi) of this channel
     IECH  / I  Electronics channel or strip channel number
   - Output:
     IADDR / I  Packed address
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VAENSA.                                                              
   
 
3 VAENWA
         SUBROUTINE VAENWA (NBNUM,ILAY,IWFF,IFAC,IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES ENCODE WAFER / USER
  ------------------------------------------------------------------------------
   Encode wafer address into bank number
   - Dave Brown, 9-26-1990
   - Steve Wasserbaech, 2 November 1994: change variable names, doc
     This routine packs a base-10 encoded address (used as the bank
     number for the VDXY and VDZT banks) from its wafer address
     components.  VADEWA unpacks these addresses.
     Packing scheme:
     Bank number = LWFFV, where
       L = layer number - 1            (= ILAY - 1);
       W = wafer-in-face index - 1     (= IWFF - 1);
      FF = local face index - 1        (= IFAC - 1);
       V = view number - 1             (= IVIEW - 1).
     Thus the lowest possible bank number produced is 0.
   - Input:
     ILAY  / I  Layer index of this wafer
     IWFF  / I  Local wafer-in-face index
     IFAC  / I  Local face index of this wafer
     IVIEW / I  View number (=1 for z, =2 for r-phi)
   - Output:
     NBNUM / I  Bank number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VBRJWA                                                                          
   VDINDX                                                                          
   VJWABR                                                                          
   VTXTRK                                                                          
        |---- VAENWA.                                                              
   
 
3 VALFCO
         SUBROUTINE VALFCO(VLOC,ILAY,IWFF,IFAC,IRUN)
  ------------------------------------------------------------------------------
    CKEY VDETDES GEOMETRY
  ------------------------------------------------------------------------------
   Correct time dependent bending of the faces of vdet
   - David Rousseau, May 1996
    Called by :    VGRDAL
   - Input/output:
     VLOC(*)    / R  local alignment vector from VALC corrected on output
   - Input:
     ILAY      / I  Layer number
     IWFF      / I  Wafer-in-face number
     IFAC      / I  Face number
     IRUN      / I  Run number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGRDAL                                                                          
        |---- VALFCO                                                               
                   |----  VWADIM                                                   
                   |----  VJWAFF                                                   
                   |----  VVUWXY                                                   
                   |----  ATAN                                External             
   
 
3 VBNKDP
         SUBROUTINE VBNKDP(ismod)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Dump unpacked bonding error banks
   - Joe Rothberg, August 1995
   
    ISMOD  /I module serial number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VBNKDP                                                               
                   |----  NLINK                               External             
   
 
3 VBRJWA
         INTEGER FUNCTION VBRJWA (JWAF, IVIEW, NBROM)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Convert global wafer index jwaf to decimal encoded readout module
   - Manoj Thulasidas, 5 November 1994
   - Modified: Steve Wasserbaech, 29 March 1995
     This function converts a global wafer index JWAF and a view number
     to the decimal encoded address of the corresponding readout module
     (encoding scheme as in VAENWA).
   - Input:
     JWAF   / I  Global wafer index
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VBRJWA / I  = VDOK if successful
                 = VDERR if error occurred
     NBROM  / I  Decimal encoded readout module address
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VBRJWA                                                               
                   |----  VIWAFI                                                   
                   |----  VIROMW                                                   
                   |----  VAENWA                                                   
   
 
3 VCHNST
         INTEGER FUNCTION VCHNST(IFLBE,JMOD,IWAF,IVIEW,IROS,IDAT,IFLC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns data channel corresponding to strip for given wafer, module
    -
     Author   :- J. Rothberg                   12-OCT-1995
     Inputs:
     IFLBE   / I       0 = nominal;  1 = Bonding errors used
     JMOD    / I       Global Module number
     IWAF    / I       Local Wafer number
     IVIEW   / I       View
     IROS    / I       Strip number in given wafer (1,2,3...)
     Outputs:
     IDAT    / I       Data Channel (CERN convention: 0,1,...)
     IFLC    / I       Fault code (same as VMBE convention)
     Libraries required:
     Description
     ===========
       Returns data channel corresponding to strip for given wafer, module
             Bonding errors are taken into account.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VCHNST                                                               
                   |----  VNRWAF                                                   
                   |----  VROSTM                                                   
                   |----  VMMODJ                                                   
                   |----  VRSWMD                                                   
                   |----  VINIST                                                   
                   |----  VCORMP                                                   
                   |----  MAX                                 External             
                   |----  MIN                                 External             
   
 
3 VCORMP
          SUBROUTINE VCORMP(IVIEW,JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Use bonding error list to correct electronics channels list
   - Joe Rothberg, August 1995
                               mod 18 July 1996  for case 11 rphi
                               mod 14 August 1996 for case 10 Z
                               mod 11 June 1997   for case 8 rphi
   - Input:
           IVIEW  /I   view
           JMOD   /I   Global module number
   - Output: IELCHP in COMMON     Channel map
           code = 0   No fault , strip is OK. Comment may be meaningful
                  1   Saturated
                  2   Dead
                  3   Noisy/hot
                  4   Pinhole disconnected
                  5   Pinhole alive
                  6   Shorted  (nb stop contains the addresses of other strip)
                  7   Unbonded
                  8   Dislocation +n (in units of 50 microns)
                  9   Dislocation -n
                 10   Dislocation odd +n
                 11   Dislocation odd -n
                 12   Dislocation even +n
                 13   Dislocation even -n
                      Dislocation sign is sign of :
                     (Readout channel to which the strip should be attached)
                     - (readout channel to which the strip is actually attached)
        bond numbers :
         view 1 : bond 1 between capacitance and first kapton
                       2 between first kapton and first Si strip
                       3 between first Si strip and second kapton strip
                       4 between second kapton strip and second Si stripc
   
         view 2 : bond 1 between capacitance and first wafer strip
                       2 between wafer 1 and 2
                       3 between wafer 2 and 3')
    error list
         INTEGER maxerr
         PARAMETER(maxerr=100)
         INTEGER numerr(2), ibnerr(2,maxerr,5)
         COMMON/bonder/numerr,ibnerr
         ibnerr(iv,ie,1) = ivad1
         ibnerr(iv,ie,2) = ivad2
         ibnerr(iv,ie,3) = ivbond
         ibnerr(iv,ie,4) = ivfault
         ibnerr(iv,ie,5) = ivparam
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VCHNST                                                                          
   VSCHAN                                                                          
        |---- VCORMP                                                               
                   |----  NUMERR                              External             
                   |----  IBNERR                              External             
   
 
3 VCSCEC
         INTEGER FUNCTION VCSCEC (IVIEW,ISCH1,NSCH,IECH1)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Convert first strip channel in cluster to first electronics channel
   - Steve Wasserbaech, 4 November 1994
     Convert first strip channel in cluster to first electronics channel.
     This function takes the readout direction into account, i.e., the
     strip channels and electronics channels may be numbered in the same
     or in opposite directions.  The output of this function, IECH1,
     is the lowest electronics channel number in the cluster.  It may
     correspond to the first or the last strip channel in the cluster.
     If ((IVIEW is valid) .and. (NSCH .gt. 0)) then
       If ((ISCH1 is a valid strip channel) .and.
           (ISCH1+NSCH-1 is a valid strip channel)) then
         If (readout sign = +1) then
           convert strip channel ISCH1 to electronics channel
         Else
           convert strip channel ISCH1+NSCH-1 to electronics channel
         Endif
       Endif
     Endif
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     ISCH1  / I  First strip channel number in cluster
     NSCH   / I  Number of channels in cluster; must be greater than zero
   - Output:
     VCSCEC / I  = VDOK if successful
                 = VDERR if error occurred
     IECH1  / I  First electronics channel number in cluster;
                 this corresponds to the *last* strip channel in the
                 cluster if the readout direction is -1.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VCSCEC                                                               
                   |----  VDSCEC                                                   
   
 
3 VDACRS
         INTEGER FUNCTION VDACRS (IDATC,IVIEW,IWAF,IROS)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the strip, wafer for given data channel and view.
         returns one wafer and readout strip even if multiplexed. VDET95
   - Joe Rothberg, August 1995
   - Input:
     IDATC  / I  Data Channel number
     IVIEW  / I  View
   - Output:
     IWAF   / I  Local wafer index
     IROS   / I  Readout Strip number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDCWRS                                                                          
   VDMWRS                                                                          
        |---- VDACRS                                                               
                   |----  VDECSC                                                   
                   |----  VDSCRS                                                   
   
 
3 VDAFRD
         INTEGER FUNCTION VDAFRD (LUNDAF,IGET)
  ------------------------------------------------------------------------------
    CKEY VDETDES READ DBASE / INTERNAL
  ------------------------------------------------------------------------------
   Read vdet geometry banks from daf
   - Steve Wasserbaech, January 1994
     (Based on VRDDAF, G. Triggiani, 17/02/87.)
     Modified 31 July 1995, S. Wasserbaech: add NWFBIT to VRDOCO
    Called by: VRDDAF
    Calls:     ALGTDB
   - Input:
     LUNDAF / I  Logical unit number of DAF file
     IGET   / I  VDET setup code to be read
   - Output:
     VDAFRD / I  = VDOK if successful
                 = VDERR if an error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VRDDAF                                                                          
        |---- VDAFRD                                                               
                   |----  VZERO                               External             
                   |----  ALGTDB                              External             
                   |----  NAMIND                              External             
   
 
3 VDAMB
         SUBROUTINE VDAMB(IAMB,MAXTRK)
  ------------------------------------------------------------------------------
    CKEY VDETDES
  ------------------------------------------------------------------------------
   Simple subroutine to count the ambiguity bits by track
    Input:  MAXTRK       = Dimension of IAMB array, should
                           be large enough to contain the largest event
                           (IE around 200)
            FRFT and VDCO must be in the bank list
    Output: IAMB, an integer array numbered by FRFT track number,
            bits:          meaning
            8             r-phi ambiguity
            9             z ambiguity
    14-9-92 Dave Brown
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDAMB                                                                
                   |----  NAMIND                              External             
                   |----  MIN                                 External             
                   |----  IAND                                External             
                   |----  ISHFT                               External             
                   |----  IOR                                 External             
   
 
3 VDARGE
         INTEGER FUNCTION VDARGE (LUNDAF,IGET)
  ------------------------------------------------------------------------------
    CKEY VDETDES READ DBASE / INTERNAL
  ------------------------------------------------------------------------------
   Read vdet geography banks from daf
       J. Rothberg      24 Oct. 1995
   - based on Steve Wasserbaech, January 1994
     (Based on VRDDAF, G. Triggiani, 17/02/87.)
     Modified 31 July 1995, S. Wasserbaech: add NWFBIT to VRDOCO
    Called by: VINIVG
    Calls:     ALGTDB
   - Input:
     LUNDAF / I  Logical unit number of DAF file
     IGET   / I  VDET setup code to be read
   - Output:
     VDARGE / I  = VDOK if successful
                 = VDERR if an error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINIBM                                                                          
        |---- VDARGE                                                               
                   |----  ALGTDB                              External             
                   |----  NAMIND                              External             
                   |----  MDARD                               External             
   
 
3 VDCFLT
         INTEGER FUNCTION VDCFLT(IDATC,IVIEW,ISTRS,IFLTC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns strips, fault code
   - Joe Rothberg, June 1995
   - Input:
     IDATC   / I  Data Channel
     IVIEW   / I  View
   - Output:
     ISTRS(3) / I  strips
     IFLTC(3) / I  fault code by wafer
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VSCHAN                                                                          
        |---- VDCFLT.                                                              
   
 
3 VDCHNB
         subroutine VDCHNB(JLAY, IFAC, IMOD, IVIEW, ICHIP, JCHIP)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Given the layer (jlay), face (ifac), module (imod), view (iview)
    and chip in module (ICHIP), returns a global chip number (JCHIP)
   
   - Author         Manoj Thulasidas  3-Jul-1998
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTCH                                                                          
        |---- VDCHNB                                                               
                   |----  VJMODI                                                   
   
 
3 VDCWRS
         INTEGER FUNCTION VDCWRS (IDATC,IVIEW,IWFRS,ISTRS)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the strips and wafers for given data channel and view.
     returns ALL wafers and readout strips. (3 for rphi; 2 for z). VDET95
   - Joe Rothberg, August 1995
   - Input:
     IDATC  / I  Data Channel number
     IVIEW  / I  View
   - Output:
     IWFRS(3)   / I  Local wafer index, (2 for z or 3 for rphi)
     ISTRS(3)   / I  Readout Strips (2 for z or 3 for rphi)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VSCHAN                                                                          
        |---- VDCWRS                                                               
                   |----  VDACRS                                                   
                   |----  VZRSRS                                                   
   
 
3 VDECSC
         INTEGER FUNCTION VDECSC (IVIEW,IECH,ISCH)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Calculate strip channel number from electronics channel number
   - Steve Wasserbaech, November 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     IECH   / I  Electronics channel number
   - Output:
     VDECSC / I  = VDOK if successful
                 = VDERR if error occurred
     ISCH   / I  Strip channel number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDACRS                                                                          
        |---- VDECSC.                                                              
   
 
3 VDETGI
         INTEGER FUNCTION VDETGI ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / INTERNAL
  ------------------------------------------------------------------------------
   Fills vdetge common
   - Steve Wasserbaech, January 1994
     (Based on VRDDAF, G. Triggiani, 17/02/87.)
     Modified 2 June 1995, S. Wasserbaech: ISSFLG = face serial number
     Modified 31 July 1995, SW: add variables for address packing
    This function uses information from the commons VSLTCO, VDLACO,
    VZPWCO, VWGECO, VRDOCO, and VGINDX to fill the VDETGE common.
    The five "input" commons are filled in VDAFRD and VINDXI.
    VDETGE common is initialized in VRDDAF.
    Called by: VRDDAF
   - Input:
     (none)
   - Output:
     VDETGI / I  = VDOK if successful
                 = VDERR if an error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VRDDAF                                                                          
        |---- VDETGI                                                               
                   |----  AMAX1                               External             
                   |----  ABS                                 External             
                   |----  TAN                                 External             
                   |----  IJFACE                              External             
                   |----  ISSFLG                              External             
                   |----  AMIN1                               External             
                   |----  SQRT                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  IJWFFR                              External             
                   |----  FLOAT                               External             
   
 
3 VDFIRS
         INTEGER FUNCTION VDFIRS
  ------------------------------------------------------------------------------
    CKEY VDETDES STRIP / USER
  ------------------------------------------------------------------------------
        >     (XCOOR,SIGMA,IVIEW,ISTF,NSF,ESTRI,MXSTR,IER)
   Compute the distribution of charge on the physical strips
   - Alain Bonissent, Joe Rothberg, and Manoj Thulasidas, 1994
     Computes the distribution of charge into the physical strips, given
     the position and sigma of a gaussian charge distribution.  Only
     strips which lie within +/- 3 sigma receive charge.
     It is assumed that strips are numbered starting from the minimum
     end of the local (abc) coordinate system.
   - Input:
     XCOOR  / R  Position of the center of the electron cloud
                 (local coords a or b, cm)
     SIGMA  / R  Sigma of the charge distribution
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     MXSTR  / I  Dimension of ESTRI in the calling routine
   - Output:
     VDFIRS / I  = VDOK if successful
                 = VDERR if an error occurred
     ISTF   / I  Address of the first fired strip
     NSF    / I  Number of fired strips
     ESTRI  / R  Array, for each strip the fraction of charge released
     IER    / I  Return code: 0 = OK
                              1 = no strips
                              2 = more than MXSTR strips
                              3 = IVIEW is out of range
                              4 = SIGMA is too small
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDFIRS                                                               
                   |----  MAX                                 External             
                   |----  IFIX                                External             
                   |----  MIN                                 External             
                   |----  FREQ                                External             
   
 
3 VDGDMP
         INTEGER FUNCTION VDGDMP ()
  ------------------------------------------------------------------------------
    CKEY VDETDES PRINT DUMP / USER
  ------------------------------------------------------------------------------
   Dump vdet geometry commons
   - Steve Wasserbaech, January 1994
   - Input:
     (none)
   - Output:
     VDGDMP / I   = VDOK if successful
                  = VDERR if an error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDGDMP                                                               
                   |----  WAXCEN                              External             
                   |----  WAYCEN                              External             
                   |----  WARHOC                              External             
                   |----  WAPHIC                              External             
   
 
3 VDGTCH
         subroutine VDGTCH(XCOR,NR,IVIEW,JCHIP)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Given the local coordinate, bank number and view, returns the chip
    number
   
   - Author         Manoj Thulasidas  3-Jul-1998
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDGTCH                                                               
                   |----  VADEWA                                                   
                   |----  VFWAFF                                                   
                   |----  VDLCRS                                                   
                   |----  INT                                 External             
                   |----  VRSWMX                                                   
                   |----  VDCHNB                                                   
   
 
3 VDGTOL
         INTEGER FUNCTION VDGTOL (XYZ1,XYZ2,JLAY,IFAC,
  ------------------------------------------------------------------------------
    CKEY VDETDES LINE WAFER / USER
  ------------------------------------------------------------------------------
        >                             NWI,MMOD,IWAF,ABCI,ABCO)
   Find the intersection points of a line and the wafers in a face
   - Steve Wasserbaech, September 1994
     VDGTOL is a special version of VINTLF.  The calling sequences are
     identical, but the dimensions of the output arrays are different.
     VINTLF returns all of the intersections points of a line and the
     surfaces of the wafers in a face.  VDGTOL returns at most two
     entry points and two exit points.  (The first two intersected
     wafers are returned.)
     Furthermore, VDGTOL only returns entry and exit points that lie
     between XYZ1 and XYZ2.  If, for example, XYZ1 lies outside a wafer
     and XYZ2 lies inside, ABCI will correspond to the entry point
     between XYZ1 and XYZ2 (transformed into the ABC system), and ABCO
     will correspond to XYZ2 itself.  If XYZ1 and XYZ2 both lie within
     the same wafer, the entry and exit points returned by VDGTOL will
     correspond to XYZ1 and XYZ2.  These rules are imposed to protect
     against tracks that enter and exit a wafer through the same
     surface.  Such tracks would not be correctly handled by the
     straight-track approximation if we did not limit the entry and
     exit points in this way.
     VDGTOL calls VINLSW to find the wafer entry and exit points.
     Nominal geometry parameters are used in the calculations.
     No wafer intersections are returned if XYZ1 and XYZ2 are less
     than 0.0001 cm apart.
   - Input:
     XYZ1(3)   / R  (x,y,z) (cm) of first point on line; the line
                    is defined by two points in the ALEPH system.
     XYZ2(3)   / R  (x,y,z) (cm) of second point on line
     JLAY      / I  Global layer index
     IFAC      / I  Local face index
   - Output:
     VDGTOL    / I  = VDOK if successful and line intersects a wafer;
                    = VDERR if an error occurs, or line does not
                      intersect a wafer
     NWI       / I  Number of wafers intersected
     MMOD(2)   / I  Signed global module indices of intersected wafers;
                    1 =< index =< NWI
     IWAF(2)   / I  Local wafer indices of intersected wafers
     ABCI(3,2) / R  (a,b,c) coordinates of wafer entry point in IWAF
                    local system; 1 =< second index =< NWI
     ABCO(3,2) / R  (a,b,c) coordinates of wafer exit point in IWAF
                    local system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDGTOL                                                               
                   |----  VZERO                               External             
                   |----  VWFFND                                                   
                   |----  VINLSW                                                   
                   |----  IJWFFR                              External             
                   |----  VMWAFJ                                                   
                   |----  ISIGN                               External             
   
 
3 VDINDX
         SUBROUTINE VDINDX(IINDEX,IINDXY,NWAFER,ILAYND,IPHIND,IWAFND)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Builds the 'standard' wafer indexes
     No inputs
     Outputs;
        IINDEX = Unique consecutive integer for each physical wafer
        NWAFER = Bank number (vaenwa output) given IINDEX
        IINDXY = Bank number for r-phi side, compresses wafers 1+2,3+4
        ILAYND = Layer of this IINDEX
        IPHIND = phi   of this IINDEX
        IWAFND = wafer of this IINDEX
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDINDX                                                               
                   |----  VAENWA                                                   
   
 
3 VDLCPS
         INTEGER FUNCTION VDLCPS (XCOOR,IVIEW,PSTRP)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM STRIP / USER
  ------------------------------------------------------------------------------
   Local coordinate to physical strip.
   - Joe Rothberg, 10 February 1994
        Returns physical strip number,
        given position in local wafer coordinates and view number.
   - Input:
     XCOOR  / R  Position in local wafer coordinates
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VDLCPS / I  = VDOK if successful
                 = VDERR if error occurred
     PSTRP  / R  physical strip number (floating number)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDLCRS                                                                          
        |---- VDLCPS                                                               
                   |----  FLOAT                               External             
   
 
3 VDLCRS
         INTEGER FUNCTION VDLCRS (XCOOR,IVIEW,RSTRP)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM STRIP / USER
  ------------------------------------------------------------------------------
   Local coordinate to readout strip.
   - Joe Rothberg, 11 February 1994
       Returns readout strip number,
       given position in local wafer coordinates, and view number.
   - Input:
     XCOOR  / R  position in local wafer coordinates
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VDLCRS / I  = VDOK if successful
                 = VDERR if error occurred
     RSTRP  / R  readout strip number (floating number)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTCH                                                                          
        |---- VDLCRS                                                               
                   |----  VDLCPS                                                   
                   |----  VDPSRS                                                   
   
 
3 VDPGEO
         SUBROUTINE VDPGEO
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Print geometry for vdet
   
     Author         P.Cattaneo        1/5/90
     Modified by    F.Ranjard         11/2/91
   
     Description
     ===========
    Print /VDGEOS/, /VDSUPP/, /VDJGEO/, /VFTKAL/ variables
    for Minivertex
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDPGEO                                                               
                   |----  IOPZVDFORMAT                        External             
                   |----  NSLOAD                              External             
                   |----  NSLOGM                              External             
                   |----  NSLOME                              External             
                   |----  NSLOWA                              External             
                   |----  NSLOEL                              External             
                   |----  FORMAT                              External             
                   |----  NGEOWA                              External             
                   |----  VDPSDM                              External             
                   |----  NCERVZFORMAT                        External             
                   |----  VDBXTHFORMAT                        External             
                   |----  VDCEZOFORMAT                        External             
                   |----  VDDEPLFORMAT                        External             
                   |----  VDLESPFORMAT                        External             
                   |----  VDLESZFORMAT                        External             
                   |----  VDSTPHFORMAT                        External             
                   |----  VDSTZEFORMAT                        External             
                   |----  NVDPPIFORMAT                        External             
                   |----  NVDZPIFORMAT                        External             
                   |----  IPSIGNFORMAT                        External             
                   |----  IZSIGNFORMAT                        External             
                   |----  VDPPIT                              External             
                   |----  VDZPIT                              External             
                   |----  VDDIPP                              External             
                   |----  VDDIPZ                              External             
                   |----  VDDIZP                              External             
                   |----  VDDIZZ                              External             
                   |----  NSTPVD                              External             
                   |----  NSTZVD                              External             
                   |----  ACTPVD                              External             
                   |----  ACTZVD                              External             
                   |----  VDTHCK                              External             
                   |----  VDCRHO                              External             
                   |----  VDCPHI                              External             
                   |----  VDTILT                              External             
                   |----  VDPOFF                              External             
                   |----  ZWAFVD                              External             
   
 
3 VDPSLC
         INTEGER FUNCTION VDPSLC (PSTRP,IVIEW,XCOOR)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM STRIP / USER
  ------------------------------------------------------------------------------
   Physical strip number to local wafer coordinate.
   - Joe Rothberg, 10 February 1994
        Returns local wafer coordinate,
        given physical strip number
   - Input:
     PSTRP  / R  physical strip number (floating number)
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VDPSLC / I  = VDOK if successful
                 = VDERR if error occurred
     XCOOR  / R  position in local wafer coordinates
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDRSLC                                                                          
        |---- VDPSLC                                                               
                   |----  FLOAT                               External             
   
 
3 VDPSRS
         INTEGER FUNCTION VDPSRS (PSTRP,IVIEW,RSTRP)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Physical strip number to readout strip number.
   - Joe Rothberg, February 1994
        Returns readout strip number,
        given physical strip number, view, and global wafer index
   - Input:
     PSTRP  / R  physical strip (floating number)
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VDPSRS / I  = VDOK if successful
                 = VDERR if error occurred
     RSTRP  / R  readout strip number (floating number)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDLCRS                                                                          
        |---- VDPSRS                                                               
                   |----  FLOAT                               External             
   
 
3 VDRMAX
         REAL FUNCTION VDRMAX ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns maximum radius of all wafers in vdet
   - Steve Wasserbaech, September 1994
   - Input:
     (none)
   - Output:
     VDRMAX / R  Maximum radius (cm) of all wafers in VDET
                 (furthest point within wafers from z axis)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDRMAX.                                                              
   
 
3 VDRMIN
         REAL FUNCTION VDRMIN ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns minimum radius of all wafers in vdet
   - Steve Wasserbaech, September 1994
   - Input:
     (none)
   - Output:
     VDRMIN / R  Minimum radius (cm) of all wafers in VDET
                 (nearest point within wafers to z axis)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDRMIN.                                                              
   
 
3 VDRSLC
         INTEGER FUNCTION VDRSLC (RSTRP,IVIEW,XCOOR)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM STRIP / USER
  ------------------------------------------------------------------------------
   Readout strip number to local wafer coordinate.
   - Joe Rothberg, 11 February 1994
       Returns local wafer coordinate,
       given readout strip number and view
   - Input:
     RSTRP  / R  readout strip number (floating number)
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VDRSLC / I  = VDOK if successful
                 = VDERR if an error occurs
     XCOOR  / R  position in local wafer coordinates
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDRSLC                                                               
                   |----  VDRSPS                                                   
                   |----  VDPSLC                                                   
   
 
3 VDRSPS
         INTEGER FUNCTION VDRSPS (RSTRP,IVIEW,PSTRP)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Readout strip number to physical strip number.
   - Joe Rothberg, 10 February 1994
        Returns physical strip number,
        given readout strip number and view
   - Input:
     RSTRP  / R  readout strip (floating number)
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VDRSPS / I  = VDOK if successful
                 = VDERR if error occurred
     PSTRP  / R  physical strip number (floating number)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDRSLC                                                                          
        |---- VDRSPS                                                               
                   |----  FLOAT                               External             
   
 
3 VDRSSC
         INTEGER FUNCTION VDRSSC (IMOD,IWAF,IVIEW,IROS,IROM,ISCH)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Convert readout strip number to strip channel number
   - Steve Wasserbaech, October 1994
   - Input:
     IMOD   / I  Local module index
     IWAF   / I  Local wafer index
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     IROS   / I  Readout strip number
   - Output:
     VDRSSC / I  = VDOK if successful
                 = VDERR if error occurred
     IROM   / I  Readout module
     ISCH   / I  Strip channel number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VRECOR                                                                          
   VRSWMD                                                                          
   VRSWMX                                                                          
        |---- VDRSSC                                                               
                   |----  VIROMW                                                   
   
 
3 VDSCEC
         INTEGER FUNCTION VDSCEC (IVIEW,ISCH,IECH)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Calculate electronics channel number from strip channel number
   - Steve Wasserbaech, November 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     ISCH   / I  Strip channel number
   - Output:
     VDSCEC / I  = VDOK if successful
                 = VDERR if error occurred
     IECH   / I  Electronics channel number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VCSCEC                                                                          
   VRECOR                                                                          
   VRSWMD                                                                          
   VRSWMX                                                                          
        |---- VDSCEC.                                                              
   
 
3 VDSCRS
         INTEGER FUNCTION VDSCRS (IVIEW,IROM,ISCH,IMOD,IWAF1,IROS1)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Convert strip channel number to readout strip number
   - Steve Wasserbaech, October 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     IROM   / I  Readout module
     ISCH   / I  Strip channel number
   - Output:
     VDSCRS / I  = VDOK if successful
                 = VDERR if error occurred
     IMOD   / I  Local module index
     IWAF1  / I  Local wafer index; if the strip channel is associate
                 with more than one readout strip, the strip with the
                 smallest IWAF is returned
     IROS1  / I  Readout strip number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDACRS                                                                          
        |---- VDSCRS                                                               
                   |----  VIMODR                                                   
                   |----  VFWAFF                                                   
   
 
3 VDWFXY
         SUBROUTINE VDWFXY (NWAF,VUW,XYZ)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / USER
  ------------------------------------------------------------------------------
   Converts wafer point into local and absolute coordinates
   - Dave Brown, 21 February 1991
   - Modified to use new geometry package, S. Wasserbaech, January 1995
     This routine flips the local coordinates u and w according to the
     "readout sign," then calls VGWFXY.  Ugh!
   - Input:
     NWAF   / I  Encoded wafer address (a la VAENWA)
     VUW(3) / R  Coordinates in wafer system (cm), but not really--
                 the "readout sign" is multiplied onto u and w.
   - Output:
     VUW(3) / R  Coordinates in wafer system (cm), really!
     XYZ(3) / R  Coordinates in ALEPH system (cm)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDWFXY                                                               
                   |----  VADEWA                                                   
                   |----  VJWFFW                                                   
                   |----  VVUWAB                                                   
                   |----  FLOAT                               External             
                   |----  VNRDIR                                                   
                   |----  VGWFXY                                                   
   
 
3 VDYEAR
         INTEGER FUNCTION VDYEAR ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Return year (= 91 or 95) of vdet setup
   - Steve Wasserbaech, September 1994
     I don't believe this function should exist!
   - Input:
     (none)
   - Output:
     VDYEAR / I  = 91 if two wafers per module;
                 = 95 if three wafers per module;
                 = VDERR if an error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDHTER                                                                          
   VRMWF                                                                           
   VTCLLD                                                                          
   VTFILL                                                                          
        |---- VDYEAR.                                                              
   
 
3 VDZMAX
         REAL FUNCTION VDZMAX ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns maximum abs(z) of all wafers in vdet
   - Steve Wasserbaech, September 1994
   - Input:
     (none)
   - Output:
     VDZMAX / R  Maximum abs(z) (cm) of all wafers in VDET
                 (furthest point within wafers from xy plane)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDZMAX.                                                              
   
 
3 VFACSN
         INTEGER FUNCTION VFACSN (JFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES FACE / USER
  ------------------------------------------------------------------------------
   Serial number of face located in slot jfac
   - Steve Wasserbaech, 2 June 1995
   - Input:
     JFAC   / I  Global face (slot) index
   - Output:
     VFACSN / I  Serial number of face located in slot JFAC
                  = 0 if slot is empty
                  = VDERR if JFAC is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VFASDP                                                                          
   VFASMD                                                                          
   VSMJMD                                                                          
   VSMMOD                                                                          
   VSMMTX                                                                          
        |---- VFACSN                                                               
                   |----  ISSFLG                              External             
   
 
3 VFADIM
         INTEGER FUNCTION VFADIM (DVUW)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns dimensions of a face
   - Steve Wasserbaech, February 1994
   - Input:
     (none)
   - Output:
     VFADIM  / I  = VDOK if successful;
                  = VDERR if an error occurred
     DVUW(3) / R  Dimensions of face (cm) along local
                  v, u, and w directions
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDEXCY                                                                          
   VTXTRK                                                                          
        |---- VFADIM.                                                              
   
 
3 VFAORI
         INTEGER FUNCTION VFAORI (JFAC,IORI)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns orientation of a face
   - Steve Wasserbaech, February 1994
   - Input:
     JFAC    / I  Global face index
   - Output:
     VFAORI  / I  = VDOK if successful;
                  = VDERR if JFAC is invalid.
     IORI    / I  Face orientation
                  = 1 if the r-phi side faces inward;
                  = 2 if outward.  (Taken from VDLA.)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDMJLS                                                                          
        |---- VFAORI.                                                              
   
 
3 VFASDP
         INTEGER FUNCTION VFASDP ()
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Dumps serial number of faces and modules, vdet95
   - Joe Rothberg, August 1995
   - Input:
   - Output:
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFASDP                                                               
                   |----  VFACSN                                                   
                   |----  MODNEG                              External             
                   |----  MODPOS                              External             
   
 
3 VFASMD
         INTEGER FUNCTION VFASMD (JFAC,TXFA,ISMN,ISMP)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns serial number of modules in global face jfac and face name.vdet95
   - Joe Rothberg, August 1995
   - Input:
     JFAC   / I  Global Face number
   - Output:
     TXFA   / C*4  face name
     ISMN   / I  Serial number of Module on side B (negative z)
     ISMP   / I  Serial number of Module on side A (positive z)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFASMD                                                               
                   |----  VFACSN                                                   
                   |----  FACEC                               External             
                   |----  MODNEG                              External             
                   |----  MODPOS                              External             
   
 
3 VFFACW
         INTEGER FUNCTION VFFACW (JWAF,JFAC,IWFF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates global face and wafer-in-face from global wafer
   - Joe Rothberg, December 1993
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VFFACW / I  = VDOK if successful
                 = VDERR if error occurred
     JFAC   / I  Global face index
     IWFF   / I  Local wafer-in-face index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFFACW                                                               
                   |----  VJFACW                                                   
                   |----  JIWFFW                              External             
   
 
3 VFJFAC
         INTEGER FUNCTION VFJFAC (JLAY)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   First global face index in layer
   - Joe Rothberg, December 1993
   - Input:
     JLAY   / I  Global layer index
   - Output:
     VFJFAC / I  First global face index in layer
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFJFAC.                                                              
   
 
3 VFJMOD
         INTEGER FUNCTION VFJMOD (JFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   First global module index in face
   - Joe Rothberg, December 1993
   - Input:
     JFAC   / I  Global face index
   - Output:
     VFJMOD / I  First global module index in face
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFJMOD.                                                              
   
 
3 VFJWAF
         INTEGER FUNCTION VFJWAF (JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   First global wafer index in module
   - Joe Rothberg, December 1993
   - Input:
     JMOD   / I  Global module index
   - Output:
     VFJWAF / I  First global wafer index in module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFJWAF.                                                              
   
 
3 VFNEAR
         INTEGER FUNCTION VFNEAR (ILAY, PHI0, NFAC, IFACS)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Identify faces in a layer near a given phi
   - Steve Wasserbaech, 4 August 1995
     Given a layer number ILAY and a phi coordinate PHI0, this function
     identifies the nearest slots in phi to the coordinate PHI0, one
     on the +phi side and one on the -phi side.  The phi coordinates
     of the slot centers in the nominal VDET geometry are used.  Empty
     slots are not returned.
   - Input:
     ILAY     / I  Layer number
     PHI0     / R  Phi coordinate (radians).  This may lie outside of
                   [0,2pi]; any value is accepted.
   - Output:
     VFNEAR   / I  = VDOK if successful (even if NFAC = 0)
                   = VDERR if error occurred
     NFAC     / I  Number of faces found (= 0, 1, or 2)
     IFACS(2) / I  Local face indices (IFAC) of selected faces
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFNEAR                                                               
                   |----  VZERO                               External             
                   |----  AINT                                External             
                   |----  IJFACE                              External             
                   |----  AMOD                                External             
                   |----  WAPHIC                              External             
                   |----  ISSFLG                              External             
   
 
3 VFWAFF
         INTEGER FUNCTION VFWAFF (IWFF,IMOD,IWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates local module and local wafer from wafer-in-face
   - Joe Rothberg, December 1993
   - Input:
     IWFF   / I  Local wafer-in-face index
   - Output:
     VFWAFF / I  = VDOK if successful
                 = VDERR if error occurred
     IMOD   / I  Local module index
     IWAF   / I  Local wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTCH                                                                          
   VDSCRS                                                                          
   VJWABW                                                                          
   VRECOR                                                                          
   VDMJLS                                                                          
        |---- VFWAFF.                                                              
   
 
3 VFWAFI
         INTEGER FUNCTION VFWAFI (JWAF,ILAY,IFAC,IWFF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates layer, local face, and wafer-in-face from global wafer
   - Joe Rothberg, December 1993
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VFWAFI / I  = VDOK if successful
                 = VDERR if error occurred
     ILAY   / I  Local layer index
     IFAC   / I  Local face index
     IWFF   / I  Local wafer-in-face index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VFWAFI                                                               
                   |----  VIWAFI                                                   
                   |----  JIWFFW                              External             
   
 
3 VGCADI
         SUBROUTINE VGCADI
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / INTERNAL
  ------------------------------------------------------------------------------
   Calculate distances from wafer midplanes to z axis, with alignment
   - Jochen A. Lauber       8-OCT-1990
   - Modified to use new geometry package, S. Wasserbaech, January 1995
     Initialize the RFDIST array in VGPAAL.  Called by VGRDAL.
   - Input:
     Structures VTEXPD in COMMON VGPAAL
   - Output:
     Array RFDIST in COMMON VGPAAL
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VGCADI                                                               
                   |----  VZERO                               External             
                   |----  VNRWFF                                                   
                   |----  VNTFAC                                                   
                   |----  VSLOTF                                                   
                   |----  VIFACI                                                   
                   |----  SNGL                                External             
   
 
3 VGCMTR
         SUBROUTINE VGCMTR (TE1,TE2,TECM)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / INTERNAL
  ------------------------------------------------------------------------------
   Combine two transformation structures
   - Francesco Forti, 17 August 1990
     Combines two transformation structures to give a single
     transformation.  TE1 is applied FIRST and TE2 is applied
     afterwards.  Calling A the rotation matrix and T the translation
     vector, the first transformation is XP = A*X + T. The second is
     XPP = B*XP + S where TE1=(A,T) and TE2=(B,S).  The complete
     transformation will be XPP = B*(A*X+T) + S = B*A*X + (B*T + S),
     i.e., TECM = (B*A,B*T+S).
   - Input:
     TE1(33)  / R  First transformation structure
     TE2(33)  / R  Second transformation structure
   - Output:
     TECM(33) / R  Output transformation structure
     Libraries required: CERNLIBS
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGRDAL                                                                          
   VGRDLS                                                                          
        |---- VGCMTR                                                               
                   |----  UCOPY                               External             
                   |----  RMMLT                               External             
                   |----  RMMPA                               External             
   
 
3 VGCRMT
          SUBROUTINE VGCRMT (IWAFA,CORMAT,IER)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN JULIA / USER
  ------------------------------------------------------------------------------
   Retrieves local wafer alignment covariance matrix from valc
   - Alain Bonissent, March 1995
     This routine returns the error correlation matrix from the
     VALC bank (local alignment).  By definition, the error on the
     global alignment is zero.
     This operation was previously performed in VDHTER for VDET91.
     The correspondence between the wafers and the VALC row numbers
     was given by the routine VDINDX.  Accordingly, the VALC banks
     for VDET91 contained 108 rows (=96 for the wafers + 12 dummies).
     VGCRMT checks the wafer identifier in each row of VALC, so the
     order of the rows is arbitrary.  The dummy rows are not needed.
     The row and column indices of CORMAT are interchangeable, being
     markers for the alignment quantities in the order:
      V displacement,
      U displacement,
      W displacement,
      V rotation,
      U rotation,
      W rotation.
     The returned quantities are SQUARED errors (in the case of
     diagonal elements).
   - Input:
     IWAFA       / I  Decimal wafer address
   - Output:
     CORMAT(6,6) / R  Covariance matrix
     IER         / I  = 0 if successful
                      = 1 if error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDHTER                                                                          
        |---- VGCRMT                                                               
                   |----  NAMIND                              External             
   
 
3 VGEXRO
         SUBROUTINE VGEXRO(ITFY,TF,TEXP)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / INTERNAL
  ------------------------------------------------------------------------------
   Expand transformation structure from daf into a full matrix
   - Francesco Forti, 18 August 1990.
     The output form is the same as the input but has the rotation
     matrix explicitily calculated.
     Here is the structure of the two types of transformation forms:
      TFORM =   (bank VAGB or VALC)
          (TRanslat(3)  = Length [-1.,1.]   : 'Global transl. vector',
           ROtation(3)  = Angle  [-4.,4.]   : 'Global rotat. angles'
           EcovarM(21)  = REAL   [*,*]      : 'Triangular covariance
                                               matrix')
      TEXPD =    ( COMMON /VGPAAL/ )
          (TRanslat(3)  = Length [-1.,1.]   : 'Total  transl. vector',
           ROtation(9)  = Angle  [-4.,4.]   : 'Total  rotat. matrix'
           EcovarM(21)  = REAL   [*,*]      : 'Triangular covariance
                                               matrix')
   - Input:
     TF(27)   / R  Transformation structure
     ITFY     / I  Flags the transformation TF to be local or global:
                     1 -> global transformation
                     2 -> local tranformation
                   In this way it is possible to have different
                   conventions for global and local transformations.
   - Output:
     TEXP(33) / R  Same transformation in expanded form TEXP
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGRDAL                                                                          
        |---- VGEXRO                                                               
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 VGGTNO
         SUBROUTINE VGGTNO(ILAY,IWFF,IFAC,TENO)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / INTERNAL
  ------------------------------------------------------------------------------
   Get the nominal transformation for a wafer
   - Francesco Forti, 18 August 1990
   - Modified to use new geometry package, S. Wasserbaech, January 1995
     Returns the transformation to the nominal position of a wafer, in
     the sense that if TE=(A,T), where A is the rotation matrix and T is
     the translation, the transformation is defined by:  X = A*U + T.
     X is the vector in the Aleph main frame, while U is the vector in
     the wafer local coordinate system, U=(v,u,w).  For a point in the
     wafer plane, v = 0.
   - Input:
     ILAY     / I  Layer index
     IWFF     / I  Local wafer-in-face index
     IFAC     / I  Local face index
   - Output:
     TENO(33) / R  Nominal transformation for the wafer
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGRDAL                                                                          
        |---- VGGTNO                                                               
                   |----  UCOPY                               External             
                   |----  VSETUP                                                   
                   |----  VJWFFW                                                   
                   |----  VXYZWA                                                   
                   |----  VJFACI                                                   
                   |----  VPHIFN                                                   
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 VGINTR
         SUBROUTINE VGINTR (TE,TEINV,IFAIL)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / INTERNAL
  ------------------------------------------------------------------------------
   Invert a transformation structure
   - Francesco Forti, 17 August 1990
     Inverts a transformation structure. The direct transformation is
     defined as XP = A*X + T.  The inverse will be (B = A**-1)
     X = B*(XP-T) = B*XP - B*T.
     If the matrix A is singular, the IFAIL flag will be negative and
     the TEINV structure will be undefined.
   - Input:
     TE(33)    / R  Transformation structure
   - Output:
     TEINV(33) / R  Output transformation structure
     IFAIL     / I  =0 if OK;
                    =-1 if singular matrix
     Libraries required: CERNLIBS
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGRDAL                                                                          
        |---- VGINTR                                                               
                   |----  UCOPY                               External             
                   |----  REQINV                              External             
   
 
3 VGRDAL
         SUBROUTINE VGRDAL (LUN,IRUN,IFLAG)
  ------------------------------------------------------------------------------
    CKEY VDETDES GEOMETRY
  ------------------------------------------------------------------------------
   Read alignment banks and fill the vgpaal common
   - Francesco Forti, 18 August 1990
   - Modified to use new geometry package, S. Wasserbaech, January 1995
   - Modified to use VNGBVNLC if they exist, F.Ranjard, 4 July 1997
   - Modified to use laser data also, G. Sguazzoni, September 1998
    Check existence of the alignment banks in the BOS common and their
    validity range.
    If they do not exist yet or are no longer valid try to load them
    from the data base file. IFLAG is set to 0 if an error occurs.
    The routine uses the alignment banks to compute the complete
    transformation that goes from the wafer coordinate to the ALEPH
    main coordinates and vice versa and stores it in the common VGPAAL.
    Called by :    VDET initialisation routine
    Calls     :    FUNCTION ALGTDB               from ALEPHLIB
                   VGEXRO, VGCMTR, VGINTR        from ALEPHLIB
                   VGRDLS                        from ALEPHLIB
   - Input:
     LUN   / I  Logical unit number of DAF file
     IRUN  / I  Run number
   - Output:
     IFLAG / I  = 1 if routine ends successfully;
                = 0 if an error occurred
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VGRDAL                                                               
                   |----  NAMIND                              External             
                   |----  GTSTUP                              External             
                   |----  LEN                                 External             
                   |----  NLINK                               External             
                   |----  BDROP                               External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
                   |----  NSWAP                               External             
                   |----  ALGTDB                              External             
                   |----  VZERO                               External             
                   |----  VGEXRO                                                   
                   |----  VGRDLS                                                   
                   |----  VADEWA                                                   
                   |----  VNRFAC                                                   
                   |----  UCOPY                               External             
                   |----  VALFCO                                                   
                   |----  VGGTNO                                                   
                   |----  VGCMTR                                                   
                   |----  VGINTR                                                   
                   |----  VGCADICONTINUE                      External             
   
 
3 VGRDLS
         SUBROUTINE VGRDLS(LUN,IRUN,TEXP)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / INTERNAL
  ------------------------------------------------------------------------------
   Add to alignment expanded form texp the laser informations
   - Giacomo Sguazzoni, 30 September 1998.
     The output form is the same as the input but includes corrections
     from laser data analisys
   - Input:
     LUN      / I  Data base unit
     IRUN     / I  Current run number
   - Input/Output:
     TEXP(33) / R  Transformation expanded form
   
   
   
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGRDAL                                                                          
        |---- VGRDLS                                                               
                   |----  MDARD                               External             
                   |----  REAL                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  VGCMTR                                                   
                   |----  UCOPY                               External             
   
 
3 VGTBER
         SUBROUTINE VGTBER(ISMOD,JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Access unpacked bonding error banks, place into commons
   - Joe Rothberg, August 1995
   - Input:
     ISMOD   / I  Module serial number
     JMOD    / I  Global module number
   - Output:
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINIBM                                                                          
        |---- VGTBER                                                               
                   |----  NLINK                               External             
                   |----  MIN                                 External             
   
 
3 VGTRVE
         SUBROUTINE VGTRVE (TE,X,XP,XE,XEP)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / INTERNAL
  ------------------------------------------------------------------------------
   Transform a vector with a given transformation
   - Francesco Forti, 17 August 1990
     Transforms a vector according with the transformation given in TF
     XP = A * X  +  T
     Where A is the rotation matrix and T is the translation.
     The error matrices are transformed accordingly (not yet
     implemented).
   - Input:
     TE(33) / R  Transformation structure in expanded form
     X(3)   / R  Input vector
     XE(*)  / R  Input vector correlation matrix
   - Output:
     XP(3)  / R  Transformed vector
     XEP(*) / R  Transformed vector correlation matrix (not implemented)
     Libraries required: CERNLIBS
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGWFVU                                                                          
   VGWFXY                                                                          
        |---- VGTRVE                                                               
                   |----  RMMPA                               External             
   
 
3 VGWFVU
         SUBROUTINE VGWFVU (NWAF,XYZ,VUW)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / USER
  ------------------------------------------------------------------------------
   Transforms absolute coordinates into wafer coordinates
   - Francesco Forti, 12 October 1990
   - Modified to use new geometry package, S. Wasserbaech, January 1995
   - Input:
     NWAF   / I  Encoded wafer address (a la VAENWA)
     XYZ(3) / R  Coordinates in ALEPH system (cm)
   - Output:
     VUW(3) / R  Coordinates in wafer system (cm)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDMSUP                                                                          
        |---- VGWFVU                                                               
                   |----  VADEWA                                                   
                   |----  VGTRVE                                                   
                   |----  VTEXPI                              External             
   
 
3 VGWFXY
         SUBROUTINE VGWFXY (NWAF,VUW,XYZ)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN / USER
  ------------------------------------------------------------------------------
   Transforms wafer coordinates into absolute coordinates
   - Francesco Forti, 22 August 1990
   - Modified to use new geometry package, S. Wasserbaech, January 1995
   - Input:
     NWAF   / I  Encoded wafer address (a la VAENWA)
     VUW(3) / R  Coordinates in wafer system (cm)
   - Output:
     XYZ(3) / R  Coordinates in ALEPH system (cm)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDWFXY                                                                          
   VTLINK                                                                          
        |---- VGWFXY                                                               
                   |----  VADEWA                                                   
                   |----  VGTRVE                                                   
   
 
3 VIFACI
         INTEGER FUNCTION VIFACI (JFAC,ILAY,IFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates local layer and face indices from global face
   - Joe Rothberg, December 1993
   - Input:
     JFAC   / I  Global face index
   - Output:
     VIFACI / I  = VDOK if successful
                 = VDERR if error occurred
     IFAC   / I  Local face index
     ILAY   / I  Local layer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGCADI                                                                          
   VJWAFF                                                                          
        |---- VIFACI                                                               
                   |----  JIFACF                              External             
   
 
3 VIMMOD
          INTEGER FUNCTION VIMMOD (MMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the local module index for a given signed global module
   - Joe Rothberg, June 1995
   - Input:
     MMOD   / I  Signed global module index
   - Output:
     VIMMOD / I  Local module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VRMMOD                                                                          
        |---- VIMMOD.                                                              
   
 
3 VIMODI
         INTEGER FUNCTION VIMODI (JMOD,ILAY,IFAC,IMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates local layer, face, and module indices from global module
   - Joe Rothberg, December 1993
   - Input:
     JMOD   / I  Global module index
   - Output:
     VIMODI / I  = VDOK if successful
                 = VDERR if error occurred
     IFAC   / I  Local face index
     ILAY   / I  Local layer index
     IMOD   / I  Local module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VIMODM                                                                          
   VRSWMD                                                                          
   VTEXTM                                                                          
        |---- VIMODI                                                               
                   |----  JIMODM                              External             
                   |----  JJFACM                              External             
                   |----  JIFACF                              External             
   
 
3 VIMODM
         INTEGER FUNCTION VIMODM (MMOD,ILAY,IFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the layer and local face for a given mglobal module
   - Joe Rothberg, January 1994
   - Input:
     MMOD   / I  Signed global module index
   - Output:
     VIMODM / I  = VDOK if successful
                 = VDERR if error occurred
     ILAY   / I  Local layer index
     IFAC   / I  Local face index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VIMODM                                                               
                   |----  VJMODM                                                   
                   |----  VIMODI                                                   
   
 
3 VIMODR
         INTEGER FUNCTION VIMODR (IVIEW,IROM,IMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates local module index from readout module and view
   - Steve Wasserbaech, October 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     IROM   / I  Readout module
   - Output:
     VIMODR / I  = VDOK if successful
                 = VDERR if error occurred
     IMOD   / I  Local module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDSCRS                                                                          
        |---- VIMODR.                                                              
   
 
3 VINDXI
         INTEGER FUNCTION VINDXI ()
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / INTERNAL
  ------------------------------------------------------------------------------
   Create look-up tables to be used by index conversion functions
   - Joe Rothberg and Steve Wasserbaech, January 1994
    Note: VINDXI builds the index conversion tables using information
    taken from the common blocks VSLTCO and VZPWCO.  Before calling
    VINDXI it is necessary to call VDAFRD, which fills these commons
    from the database banks VSLT and VZPW.
   - Input:
     (none)
   - Output:
     VINDXI / I   = VDOK if successful
                  = VDERR if an error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VRDDAF                                                                          
        |---- VINDXI                                                               
                   |----  MOD                                 External             
   
 
3 VINIBM
         SUBROUTINE VINIBM(IRUN,IFLAG)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Initialization of vdet geography and bonding maps
      Author   :- J.Rothberg                   13-OCT-1995
   
      Inputs:
      IRUN   / I run number
   
      Outputs:
      IFLAG  / I = 1 if subroutine ended successfully
                 = 0 if an error occurred
                     in this case the program should STOP
      Libraries required:
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VINIBM                                                               
                   |----  JUNIDB                              External             
                   |----  GTSTUP                              External             
                   |----  VDARGE                                                   
                   |----  VINIVG                                                   
                   |----  VRVMBE                                                   
                   |----  VSMJMD                                                   
                   |----  VGTBER                                                   
   
 
3 VINIST
          SUBROUTINE VINIST
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Initialize electronics channel-strip arrays
       use connected electronics channels, bank VUEC, and VSTREG
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VCHNST                                                                          
   VSCHAN                                                                          
        |---- VINIST                                                               
                   |----  VSTREG                                                   
                   |----  ISRGS                               External             
   
 
3 VINIVG
         INTEGER FUNCTION VINIVG()
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Initialize vdet geography package, unconnected channels, face/module
    VZGEOG.FOR
         extensions to VDET geometry package        21 Sept. 1995
                                                     J. Rothberg
                                 modified  6 Oct. 1995  for VEXCH
   - Joe Rothberg, August 20 1995
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINIBM                                                                          
        |---- VINIVG                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
   
 
3 VINLSW
         INTEGER FUNCTION VINLSW (XYZ1,XYZ2,JLAY,IFAC,IWFF,ABCI,ABCO,LINTC)
  ------------------------------------------------------------------------------
    CKEY VDETDES LINE WAFER / USER
  ------------------------------------------------------------------------------
   Find intersection points of line segment and the surface of a wafer
   - Steve Wasserbaech, April 1994
     VINLSW is a special version of VINTLW.  Given two points, VINTLW
     considers the line that passes through the points and finds any
     intersection of the line and the wafer.  VINLSW considers only the
     segment of the line that lies between the two input points.  If
     that segment intersects the wafer but one (or both) of the
     endpoints lies within the wafer, that point is taken as the entry
     or exit point.
     Nominal geometry parameters are used in the calculations.
     No wafer intersection is returned if XYZ1 and XYZ2 are less
     than 0.0001 cm apart.
   - Input:
     XYZ1(3) / R  (x,y,z) (cm) of first point on line; the line is
                  defined by two points in the Aleph system.
     XYZ2(3) / R  (x,y,z) (cm) of second point on line
     JLAY    / I  Global layer index
     IFAC    / I  Local face index
     IWFF    / I  Local wafer-in-face index
   - Output:
     VINLSW  / I  = VDOK if successful,
                    and the line intersects the wafer.
                  = VDERR if an error occurs or the
                    line does not intersect the wafer.
     ABCI(3) / R  (a,b,c) coordinates (cm) of wafer entry point
                  in wafer local system
     ABCO(3) / R  (a,b,c) coordinates (cm) of wafer exit point
                  in wafer local system
     LINTC   / L  = .TRUE. if the line intersects the wafer on both
                    of the large surfaces, i.e., the surfaces which are
                    perpendicular to the c axis.  (If .TRUE., then the
                    line cannot intersect any other wafers in the face.)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTOL                                                                          
        |---- VINLSW                                                               
                   |----  VZERO                               External             
                   |----  VINTER                                                   
                   |----  AMAX1                               External             
                   |----  AMIN1                               External             
   
 
3 VINSEN
         LOGICAL FUNCTION VINSEN (IVIEW,A,B)
  ------------------------------------------------------------------------------
    CKEY VDETDES WAFER / USER
  ------------------------------------------------------------------------------
   Checks whether a point (a,b) is within sensitive region of wafer
   - Steve Wasserbaech, October 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     A      / R  a coordinate (cm)
     B      / R  b coordinate (cm)
   - Output:
     VINSEN / L  = .TRUE. if (a,b) lies within sensitive region
                   for view IVIEW;
                 = .FALSE. if IVIEW is invalid, or if point lies
                   outside senstive region
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VINSEN.                                                              
   
 
3 VINTER
         INTEGER FUNCTION VINTER (XYZ1,XYZ2,JLAY,IFAC,IWFF,
  ------------------------------------------------------------------------------
    CKEY VDETDES LINE WAFER / INTERNAL
  ------------------------------------------------------------------------------
        >                                  ABC1,D,TMIN,TMAX,LINTC)
   Find intersection points of line and the surface of a wafer
   - Steve Wasserbaech, November 1994
     VINTER is called by VINTLW and VINLSW to find the intersection
     points of a line, defined by the points XYZ1 and XYZ2, and a wafer.
     Points on the line are parametrized as V = ABC1 + T*D, where ABC1
     is the transformed point XYZ1, and D is the vector in (a,b,c) space
     from point 1 to point 2.  The intersection points, if any, are
     expressed in terms of this parametrization.
     Nominal geometry parameters are used in the calculations.
     No wafer intersection is returned if XYZ1 and XYZ2 are less
     than 0.0001 cm apart.
   - Input:
     XYZ1(3) / R  (x,y,z) (cm) of first point on line; the line is
                  defined by two points in the Aleph system.
     XYZ2(3) / R  (x,y,z) (cm) of second point on line
     JLAY    / I  Global layer index
     IFAC    / I  Local face index
     IWFF    / I  Local wafer-in-face index
   - Output:
     VINTER  / I  = VDOK if successful,
                    and the line intersects the wafer.
                  = VDERR if an error occurs or the
                    line does not intersect the wafer.
     ABC1(3) / R  (a,b,c) coordinates (cm) of point XYZ1
     D(3)    / R  Vector from XYZ1 to XYZ2, expressed in (a,b,c) system
     TMIN    / R  If the line intersects the wafer, TMIN is the value of
                  T corresponding to the wafer entry point; points are
                  parametrized as V = ABC1 + T*D.
     TMAX    / R  Value of T corresponding to the exit point
     LINTC   / L  = .TRUE. if the line intersects the wafer on both
                    of the large surfaces, i.e., the surfaces which are
                    perpendicular to the c axis.  (If .TRUE., then the
                    line cannot intersect any other wafers in the face.)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINLSW                                                                          
   VINTLW                                                                          
        |---- VINTER                                                               
                   |----  VZERO                               External             
                   |----  IJWFFR                              External             
                   |----  VXYZAB                                                   
                   |----  ABS                                 External             
                   |----  AMIN1                               External             
                   |----  AMAX1                               External             
   
 
3 VINTLF
         INTEGER FUNCTION VINTLF (XYZ1,XYZ2,JLAY,IFAC,
  ------------------------------------------------------------------------------
    CKEY VDETDES LINE WAFER / USER
  ------------------------------------------------------------------------------
        >                             NWI,MMOD,IWAF,ABCI,ABCO)
   Find intersection points of line and wafers in a face
   - Steve Wasserbaech, April 1994
     VINTLF returns all of the intersections points of a line and the
     surfaces of the wafers in a face.  VINTLF calls VINTLW to find the
     wafer entry and exit points.
     Nominal geometry parameters are used in the calculations.
     No wafer intersections are returned if XYZ1 and XYZ2 are less
     than 0.0001 cm apart.
   - Input:
     XYZ1(3)        / R  (x,y,z) (cm) of first point on line;
                         the line is defined by two points in
                         the ALEPH system.
     XYZ2(3)        / R  (x,y,z) (cm) of second point on line
     JLAY           / I  Global layer index
     IFAC           / I  Local face index
   - Output:
     VINTLF         / I  = VDOK if successful
                           *and* the line intersects a wafer;
                         = VDERR if an error occurs, or if the line
                           intersects no wafer in the specified face
     NWI            / I  Number of wafers intersected
     MMOD(NVWFMX)   / I  Signed global module indices of
                         intersected wafers; 1 =< index =< NWI
     IWAF(NVWFMX)   / I  Local wafer indices of intersected wafers
     ABCI(3,NVWFMX) / R  (a,b,c) coordinates of wafer entry point in
                         IWAF local system; 1 <= second index <= NWI
     ABCO(3,NVWFMX) / R  (a,b,c) coordinates of wafer exit point in
                         IWAF local system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VINTLF                                                               
                   |----  VZERO                               External             
                   |----  VWFFND                                                   
                   |----  VINTLW                                                   
                   |----  IJWFFR                              External             
                   |----  VMWAFJ                                                   
                   |----  ISIGN                               External             
   
 
3 VINTLW
         INTEGER FUNCTION VINTLW (XYZ1,XYZ2,JLAY,IFAC,IWFF,ABCI,ABCO,LINTC)
  ------------------------------------------------------------------------------
    CKEY VDETDES LINE WAFER / USER
  ------------------------------------------------------------------------------
   Find intersection points of line and the surface of a wafer
   - Steve Wasserbaech, April 1994
     Given two points, VINTLW considers the line that passes through
     the points and finds any intersection of the line and the wafer.
     (Use VINLSW to restrict the search for intersection points to
     the segment between XYZ1 and XYZ2.)
     Nominal geometry parameters are used in the calculations.
     No wafer intersection is returned if XYZ1 and XYZ2 are less
     than 0.0001 cm apart.
   - Input:
     XYZ1(3) / R  (x,y,z) (cm) of first point on line; the line is
                  defined by two points in the Aleph system.
     XYZ2(3) / R  (x,y,z) (cm) of second point on line
     JLAY    / I  Global layer index
     IFAC    / I  Local face index
     IWFF    / I  Local wafer-in-face index
   - Output:
     VINTLW  / I  = VDOK if successful,
                    and the line intersects the wafer.
                  = VDERR if an error occurs or the
                    line does not intersect the wafer.
     ABCI(3) / R  (a,b,c) coordinates (cm) of wafer entry point
                  in wafer local system
     ABCO(3) / R  (a,b,c) coordinates (cm) of wafer exit point
                  in wafer local system
     LINTC   / L  = .TRUE. if the line intersects the wafer on both
                    of the large surfaces, i.e., the surfaces which are
                    perpendicular to the c axis.  (If .TRUE., then the
                    line cannot intersect any other wafers in the face.)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINTLF                                                                          
        |---- VINTLW                                                               
                   |----  VZERO                               External             
                   |----  VINTER                                                   
   
 
3 VIROMW
         INTEGER FUNCTION VIROMW (IMOD,IWAF,IVIEW,IROM)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates readout module from module, wafer, and view
   - Steve Wasserbaech, October 1994
   - Input:
     IMOD   / I  Local module index
     IWAF   / I  Local wafer index
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VIROMW / I  = VDOK if successful
                 = VDERR if error occurred
     IROM   / I  Readout module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VBRJWA                                                                          
   VDRSSC                                                                          
        |---- VIROMW                                                               
                   |----  VIWFFW                                                   
   
 
3 VITEXI
         INTEGER FUNCTION VITEXI (TXTM,ILAY,IFAC,IMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates local layer, face, and module indices from text module
   - Joe Rothberg, March 1994
   - Input:
     TXTM   / C*4  Text module name
   - Output:
     VITEXI / I  = VDOK if successful
                 = VDERR if error occurred
     IFAC   / I    Local face index
     ILAY   / I    Local layer index
     IMOD   / I    Local module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VSMMTX                                                                          
        |---- VITEXI.                                                              
   
 
3 VIWAFI
         INTEGER FUNCTION VIWAFI (JWAF,ILAY,IFAC,IMOD,IWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Local layer, face, module, and wafer indices from global wafer
   - Joe Rothberg, December 1993
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VIWAFI / I  = VDOK if successful
                 = VDERR if error occurred
     IFAC   / I  Local face index
     ILAY   / I  Local layer index
     IMOD   / I  Local module index
     IWAF   / I  Local wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VBRJWA                                                                          
   VFWAFI                                                                          
   VTEXTW                                                                          
        |---- VIWAFI                                                               
                   |----  JJMODW                              External             
                   |----  JJFACM                              External             
                   |----  JIFACF                              External             
                   |----  JIMODM                              External             
                   |----  JIWAFW                              External             
   
 
3 VIWFFW
         INTEGER FUNCTION VIWFFW (IMOD,IWAF,IWFF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates wafer-in-face from local module and local wafer
   - Joe Rothberg, December 1993
   - Input:
     IMOD   / I  Local module index
     IWAF   / I  Local wafer index
   - Output:
     VIWFFW / I  = VDOK if successful
                 = VDERR if error occurred
     IWFF   / I  Local wafer-in-face index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VIROMW                                                                          
   VRMMOD                                                                          
        |---- VIWFFW.                                                              
   
 
3 VJFACI
         INTEGER FUNCTION VJFACI (ILAY,IFAC,JFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global face index from the local layer and face
   - Joe Rothberg, December 1993
   - Input:
     IFAC   / I  Local face index
     ILAY   / I  Local layer index
   - Output:
     VJFACI / I  = VDOK if successful
                 = VDERR if error occurred
     JFAC   / I  Global face index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGGTNO                                                                          
   VDEXCY                                                                          
   VDMJLS                                                                          
        |---- VJFACI                                                               
                   |----  IJFACE                              External             
   
 
3 VJFACM
         INTEGER FUNCTION VJFACM (JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global face for a given global module, jmod
   - Joe Rothberg, December 1993
   - Input:
     JMOD   / I  Global module index
   - Output:
     VJFACM / I  Global face index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VSMJMD                                                                          
   VSMMOD                                                                          
   VSMMTX                                                                          
        |---- VJFACM                                                               
                   |----  JJFACM                              External             
   
 
3 VJFACW
         INTEGER FUNCTION VJFACW (JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global face for a given global wafer, jwaf
   - Joe Rothberg, December 1993
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VJFACW / I  Global face index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VFFACW                                                                          
   VVUWXY                                                                          
   VXYZVU                                                                          
        |---- VJFACW                                                               
                   |----  JJMODW                              External             
                   |----  JJFACM                              External             
   
 
3 VJLAYF
         INTEGER FUNCTION VJLAYF (JFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global layer index for a given global face, jfac
   - Joe Rothberg, December 1993
   - Input:
     JFAC   / I  Global face index
   - Output:
     VJLAYF / I  Global layer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VJLAYF.                                                              
   
 
3 VJLAYM
         INTEGER FUNCTION VJLAYM (JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global layer for a given global module, jmod
   - Joe Rothberg, December 1993
   - Input:
     JMOD   / I  Global module index
   - Output:
     VJLAYM / I  Global layer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VJLAYM                                                               
                   |----  JJFACM                              External             
   
 
3 VJLAYW
         INTEGER FUNCTION VJLAYW (JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global layer for a given global wafer, jwaf
   - Joe Rothberg, December 1993
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VJLAYW / I  Global layer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VABCVU                                                                          
   VVUWAB                                                                          
        |---- VJLAYW                                                               
                   |----  JJMODW                              External             
                   |----  JJFACM                              External             
   
 
3 VJMODI
         INTEGER FUNCTION VJMODI (ILAY,IFAC,IMOD,JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Global module index from the local layer, face, and module indices
   - Joe Rothberg, December 1993
   - Input:
     IFAC   / I  Local face index
     ILAY   / I  Local layer index
     IMOD   / I  Local module index
   - Output:
     VJMODI / I  = VDOK if successful
                 = VDERR if error occurred
     JMOD   / I  Global module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDCHNB                                                                          
   VRECOR                                                                          
   VSMMTX                                                                          
        |---- VJMODI                                                               
                   |----  IJMODU                              External             
   
 
3 VJMODM
         INTEGER FUNCTION VJMODM (MMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global module index for a given mglobal module
   - Joe Rothberg, January 1994
   - Input:
     MMOD   / I  Signed global module index
   - Output:
     VJMODM / I  Global module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VIMODM                                                                          
   VJWAFM                                                                          
   VRSWMD                                                                          
   VSMMOD                                                                          
   VDMWRS                                                                          
        |---- VJMODM                                                               
                   |----  IABS                                External             
   
 
3 VJMODW
         INTEGER FUNCTION VJMODW (JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the global module for a given global wafer
   - Joe Rothberg, December 1993
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VJMODW / I  Global module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VABCFL                                                                          
   VABCVU                                                                          
   VVUWAB                                                                          
        |---- VJMODW                                                               
                   |----  JJMODW                              External             
   
 
3 VJWABR
         INTEGER FUNCTION VJWABR (NBROM, Z, JWAF, NBWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Convert decimal encoded readout module to global wafer index
   - Manoj Thulasidas, 5 November 1994
   - Modified: Steve Wasserbaech, 29 March 1995
     This function converts a decimal encoded readout module address
     (as produced by VAENWA) to a global wafer index JWAF and the
     corresponding decimal encoded wafer address.  The layer and
     face are taken from NBROM.  The wafer-in-face index is calculated
     from the Z coordinate of the hit.  It is the user's responsibility
     to ensure that NBROM and Z are consistent.
   - Input:
     NBROM  / I  Decimal encoded readout module address
     Z      / R  z coordinate of hit (cm)
   - Output:
     VJWABR / I  = VDOK if successful
                 = VDERR if error occurred
     JWAF   / I  Global wafer index
     NBWAF  / I  Decimal encoded wafer address
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VJWABR                                                               
                   |----  VADEWA                                                   
                   |----  VWFFND                                                   
                   |----  VJWFFW                                                   
                   |----  VAENWA                                                   
   
 
3 VJWABW
         INTEGER FUNCTION VJWABW (NBWAF, JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Convert decimal encoded wafer address to global wafer index jwaf
   - Manoj Thulasidas, 5 November 1994
     This function converts a decimal encoded wafer address (as produced
     by VAENWA) to the corresponding global wafer index JWAF.
   - Input:
     NBWAF  / I  Decimal encoded wafer address
   - Output:
     VJWABW / I  = VDOK if successful
                 = VDERR if error occurred
     JWAF   / I  Global wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VJWABW                                                               
                   |----  VADEWA                                                   
                   |----  VFWAFF                                                   
                   |----  VJWAFI                                                   
   
 
3 VJWAFF
         INTEGER FUNCTION VJWAFF (JFAC,IWFF,JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates global wafer from global face and wafer-in-face
   - Joe Rothberg, December 1993
   - Input:
     JFAC   / I  Global face index
     IWFF   / I  Local wafer-in-face index
   - Output:
     VJWAFF / I  = VDOK if successful
                 = VDERR if error occurred
     JWAF   / I  Global wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VALFCO                                                                          
   VXYZFC                                                                          
        |---- VJWAFF                                                               
                   |----  VIFACI                                                   
                   |----  IJWFFR                              External             
   
 
3 VJWAFI
         INTEGER FUNCTION VJWAFI (ILAY,IFAC,IMOD,IWAF,JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Global wafer index from the local layer, face, module and wafer
   - Joe Rothberg, December 1993
   - Input:
     IWAF   / I  Local wafer index
     ILAY   / I  Local layer index
     IMOD   / I  Local module index
     IWAF   / I  Local wafer index
   - Output:
     VJWAFI / I  = VDOK if successful
                 = VDERR if error occurred
     JWAF   / I  Global wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VJWABW                                                                          
        |---- VJWAFI                                                               
                   |----  IJWAFR                              External             
   
 
3 VJWAFM
         INTEGER FUNCTION VJWAFM (MMOD,IWAF,JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Global wafer index from the mglobal module and local wafer indices
   - Joe Rothberg, January 1994
   - Input:
     MMOD   / I  Signed global module index
     IWAF   / I  Local wafer index
   - Output:
     VJWAFM / I  = VDOK if successful
                 = VDERR if error occurred
     JWAF   / I  Global wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VJWAFM                                                               
                   |----  VJMODM                                                   
                   |----  IABS                                External             
                   |----  JIFACF                              External             
                   |----  JIMODM                              External             
                   |----  IJWAFR                              External             
   
 
3 VJWFFW
         INTEGER FUNCTION VJWFFW (ILAY,IFAC,IWFF,JWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates global wafer from local layer, face, and wafer-in-face
   - Joe Rothberg, December 1993
   - Input:
     ILAY   / I  Local layer index
     IFAC   / I  Local face index
     IWFF   / I  Local wafer-in-face index
   - Output:
     VJWFFW / I  = VDOK if successful
                 = VDERR if error occurred
     JWAF   / I  Global wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDWFXY                                                                          
   VGGTNO                                                                          
   VJWABR                                                                          
        |---- VJWFFW                                                               
                   |----  IJWFFR                              External             
   
 
3 VLJFAC
         INTEGER FUNCTION VLJFAC (JLAY)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Last global face index in layer
   - Joe Rothberg, December 1993
   - Input:
     JLAY   / I  Global layer index
   - Output:
     VLJFAC / I  Last global face index in layer
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VLJFAC.                                                              
   
 
3 VLJMOD
         INTEGER FUNCTION VLJMOD (JFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Last global module index in face
   - Joe Rothberg, December 1993
   - Input:
     JFAC   / I  Global face index
   - Output:
     VLJMOD / I  Last global module index in face
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VLJMOD.                                                              
   
 
3 VLJWAF
         INTEGER FUNCTION VLJWAF (JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Last global wafer index in module
   - Joe Rothberg, December 1993
   - Input:
     JMOD   / I  Global module index
   - Output:
     VLJWAF / I  Last global wafer index in module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VLJWAF.                                                              
   
 
3 VMCMOD
         INTEGER FUNCTION VMCMOD(JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns mcode of global module number
   - Joe Rothberg, August 1995
   - Input:
     JMOD   / I  global module number
   - Output:
             returns mcode
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VMCMOD.                                                              
   
 
3 VMMFLD
         REAL FUNCTION VMMFLD (MMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES FIELD / USER
  ------------------------------------------------------------------------------
   Return magnetic field in local (a,b,c) coordinates
   - Joe Rothberg, 15 January 1994
   - Input:
     MMOD   / I  Signed global module index
   - Output:
     VMMFLD / R  Component of magnetic field along +a direction (Tesla)
                 = 0 if error
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VABCFL                                                                          
        |---- VMMFLD                                                               
                   |----  ISIGN                               External             
                   |----  ALFIEL                                                   
   
 
3 VMMODJ
         INTEGER FUNCTION VMMODJ (JMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the mglobal module for a given global module
   - Joe Rothberg, January 1994
   - Input:
     JMOD   / I  Global module index
   - Output:
     VMMODJ / I  Signed global module index
                 = 0 if error
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VABCFL                                                                          
   VABCVU                                                                          
   VCHNST                                                                          
   VMWAFJ                                                                          
   VSMJMD                                                                          
   VVUWAB                                                                          
        |---- VMMODJ                                                               
                   |----  JJFACM                              External             
                   |----  JIMODM                              External             
   
 
3 VMODMC
         INTEGER FUNCTION VMODMC(MCODE)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns global module number for mcode
   - Joe Rothberg, August 1995
   - Input:
     MCODE   / I  module mcode
   - Output:
             returns global module number, JMOD
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VMODMC.                                                              
   
 
3 VMWAFJ
         INTEGER FUNCTION VMWAFJ (JWAF,MMOD,IWAF)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Mglobal module index and local wafer from the global wafer index
   - Joe Rothberg, January 1994
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VMWAFJ / I  = VDOK if successful
                 = VDERR if error occurred
     MMOD   / I  Signed global module index
     IWAF   / I  Local wafer index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTOL                                                                          
   VINTLF                                                                          
        |---- VMWAFJ                                                               
                   |----  JJMODW                              External             
                   |----  VMMODJ                                                   
                   |----  JIWAFW                              External             
   
 
3 VNELRM
         INTEGER FUNCTION VNELRM (IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns number of electronics channels in readout module
   - Joe Rothberg, July 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VNELRM / I  Number of electronics channels in readout module
                 = VDERR if IVIEW is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNELRM.                                                              
   
 
3 VNFSLO
         INTEGER FUNCTION VNFSLO ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Determine number of slots containing a face
   - Steve Wasserbaech, February 1994
     Modified 2 June 1995, S. Wasserbaech: ISSFLG = face serial number
   - Input:
     (none)
   - Output:
     VNFSLO / I  Total number of slots in VDET containing a face
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNFSLO                                                               
                   |----  ISSFLG                              External             
   
 
3 VNIRFS
         INTEGER FUNCTION VNIRFS (IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Returns physical strip number of first readout strip
   - Joe Rothberg, July 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VNIRFS / I  Physical strip number of first readout strip
                 = VDERR if IVIEW is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNIRFS.                                                              
   
 
3 VNLAYR
         INTEGER FUNCTION VNLAYR ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Total number of layers
   - Joe Rothberg, December 1993
   - Input:
     (none)
   - Output:
     VNLAYR / I  Number of layers in VDET
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNLAYR.                                                              
   
 
3 VNRDIR
         INTEGER FUNCTION VNRDIR (IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns readout direction
   - Joe Rothberg, July 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VNRDIR / I  Readout direction
                 = +1 if strip channels and electronics channels
                   are numbered in the same direction
                 = -1 if in opposite directions
                 =  0 if IVIEW is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDWFXY                                                                          
   VDMJLS                                                                          
        |---- VNRDIR.                                                              
   
 
3 VNRFAC
         INTEGER FUNCTION VNRFAC (JLAY)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Number of slots in layer
   - Joe Rothberg, December 1993
   - Input:
     JLAY   / I  Global layer index
   - Output:
     VNRFAC / I  Number of slots in layer
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGRDAL                                                                          
   VDEXCY                                                                          
        |---- VNRFAC.                                                              
   
 
3 VNRMOD
         INTEGER FUNCTION VNRMOD ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Number of modules in face
   - Joe Rothberg, December 1993
   - Input:
     (none)
   - Output:
     VNRMOD / I  Number of modules per face
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDMSUP                                                                          
   VTXTRK                                                                          
        |---- VNRMOD.                                                              
   
 
3 VNROMM
         INTEGER FUNCTION VNROMM (IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns number of readout modules per module in view
   - Joe Rothberg, July 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VNROMM / I  Number of readout modules per module in view
                 = VDERR if IVIEW is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNROMM.                                                              
   
 
3 VNRSSC
         INTEGER FUNCTION VNRSSC (IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES STRIP / USER
  ------------------------------------------------------------------------------
   Number of readout strips per strip channel
   - Steve Wasserbaech, March 1995
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VNRSSC / I  Number of readout strips per strip channel
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNRSSC.                                                              
   
 
3 VNRWAF
         INTEGER FUNCTION VNRWAF ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Number of wafers in module
   - Joe Rothberg, December 1993
   - Input:
     (none)
   - Output:
     VNRWAF / I  Number of wafers per module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VCHNST                                                                          
   VDMSUP                                                                          
   VTXTRK                                                                          
        |---- VNRWAF.                                                              
   
 
3 VNRWFF
         INTEGER FUNCTION VNRWFF ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Number of wafers in face
   - Steve Wasserbaech, January 1995
   - Input:
     (none)
   - Output:
     VNRWFF / I  Number of wafers per face
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGCADI                                                                          
        |---- VNRWFF.                                                              
   
 
3 VNSCRM
         INTEGER FUNCTION VNSCRM (IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns number of strip channels in readout module
   - Joe Rothberg, July 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VNSCRM / I  Number of strip channels in readout module
                 = VDERR if IVIEW is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VSTRIP                                                                          
        |---- VNSCRM.                                                              
   
 
3 VNSTCM
         INTEGER FUNCTION VNSTCM (IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns number of strip channels in module
   - Joe Rothberg, July 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VNSTCM / I  Number of strip channels in module
                 = VDERR if IVIEW is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNSTCM.                                                              
   
 
3 VNTFAC
         INTEGER FUNCTION VNTFAC ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Total number of slots
   - Joe Rothberg, December 1993
   - Input:
     (none)
   - Output:
     VNTFAC / I  Number of slots in VDET
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGCADI                                                                          
        |---- VNTFAC.                                                              
   
 
3 VNTMOD
         INTEGER FUNCTION VNTMOD ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Total number of modules
   - Joe Rothberg, December 1993
   - Input:
     (none)
   - Output:
     VNTMOD / I  Total number of modules in VDET
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNTMOD.                                                              
   
 
3 VNTWAF
         INTEGER FUNCTION VNTWAF ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Total number of wafers
   - Joe Rothberg, December 1993
   - Input:
     (none)
   - Output:
     VNTWAF / I  Total number of wafers in VDET
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VNTWAF.                                                              
   
 
3 VPHICF
         INTEGER FUNCTION VPHICF (JFAC,PHI)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns phi coordinate of face center
   - Steve Wasserbaech, 7 August 1995
     Note: no error condition is returned if the slot JFAC is empty.
   - Input:
     JFAC   / I  Global face index
   - Output:
     VPHICF / I  = VDOK if successful;
                 = VDERR if JFAC is invalid.
     PHI    / R  Phi coordinate of face center (radians)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VPHICF                                                               
                   |----  WAPHIC                              External             
   
 
3 VPHIFC
         INTEGER FUNCTION VPHIFC (JFAC,PHI)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns phi of face normal (along +c direction)
   - Steve Wasserbaech, September 1994
     Note: no error condition is returned if the slot JFAC is empty.
   - Input:
     JFAC   / I  Global face index
   - Output:
     VPHIFC / I  = VDOK if successful;
                 = VDERR if JFAC is invalid.
     PHI    / R  Phi of face normal in the +c direction (radians),
                 calculated from VSLT bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VPHIFC.                                                              
   
 
3 VPHIFN
         INTEGER FUNCTION VPHIFN (JFAC,PHI)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns phi of face normal (toward outside of vdet)
   - Steve Wasserbaech, February 1994
     Note: no error condition is returned if the slot JFAC is empty.
   - Input:
     JFAC   / I  Global face index
   - Output:
     VPHIFN / I  = VDOK if successful;
                 = VDERR if JFAC is invalid.
     PHI    / R  Phi (radians) of face normal in the +v direction,
                 taken from VSLT bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGGTNO                                                                          
        |---- VPHIFN.                                                              
   
 
3 VPHSTM
         INTEGER FUNCTION VPHSTM (IVIEW,NPHSTR,PPITCH)
  ------------------------------------------------------------------------------
    CKEY VDETDES STRIP / USER
  ------------------------------------------------------------------------------
   Returns the number and pitch of the physical strips on a wafer
   - Steve Wasserbaech, February 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VPHSTM / I  = VDOK if successful;
                 = VDERR if IVIEW is invalid.
     NPHSTR / I  Number of physical strips
     PPITCH / R  Physical strip pitch (cm)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDHTER                                                                          
        |---- VPHSTM.                                                              
   
 
3 VPKADD
         SUBROUTINE VPKADD (IADDR,NECH,ILAY,IROM,IFAC,IVIEW,IECH)
  ------------------------------------------------------------------------------
    CKEY VDETDES PACK ADDRESS / USER
  ------------------------------------------------------------------------------
   Pack a full vhls address including number of electronics channels
   - Steve Wasserbaech, 28 July 1995
     This routine packs a bit-packed address as found in VHLS or VFHL
     banks, including the number of electronics channels or readout
     strips.  VUNADD unpacks these addresses.
     Packing scheme: depends on VDET version.  See documentation in
     comdeck VHLSBT.
     WARNING: the VDET Geometry Package must be initialized (by means
     of a call to VRDDAF) before VPKADD/VUNADD will work.
   - Input:
     NECH  / I  Number of electronics channels (VHLS) or strip channels
                (VFHL) in this cluster
     ILAY  / I  Layer index of this cluster
     IROM  / I  Readout module of this cluster
     IFAC  / I  Local face index of this cluster
     IVIEW / I  View number (=1 for z, =2 for r-phi) of this cluster
     IECH  / I  First electronics channel (VHLS) or strip channel (VFHL)
                number of this cluster.  The numbering of electronics
                channels begins with zero; the numbering of strip
                channels begins with one.
   - Output:
     IADDR / I  Packed address
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VPKADD.                                                              
   
 
3 VRDDAF
         SUBROUTINE VRDDAF (LUNDAF,IRUN,IFLAG)
  ------------------------------------------------------------------------------
    CKEY VDETDES READ DBASE / USER
  ------------------------------------------------------------------------------
   Initialize vdet geometry commons
   - Steve Wasserbaech, January 1994
     (Based on VRDDAF, G. Triggiani, 17/02/87.)
     Initialize VDET geometry commons.  This subroutine calls VDAFRD to
     read the geometry banks from the database/cards, VINDXI to fill the
     lookup tables for index conversions, and VDETGI to calculate various
     quantities which are derived from the database quantities.
   - Input:
     LUNDAF / I  Logical unit number of DAF file
     IRUN   / I  Run number
   - Output:
     IFLAG  / I  = 1 if routine ended successfully
                 = 0 if an error occurred
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VRDDAF                                                               
                   |----  GTSTUP                              External             
                   |----  VDAFRD                                                   
                   |----  MDARD                               External             
                   |----  JUNIDB                              External             
                   |----  VINDXI                                                   
                   |----  VDETGI                                                   
   
 
3 VRECOR
         INTEGER FUNCTION VRECOR (IVIEW,ILAY,IFAC,IWFF,RSTRP,DSPLC)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM STRIP / USER
  ------------------------------------------------------------------------------
   Additional coordinate displacement;given view,layer,face,wafer,strip
   - Joe Rothberg, 20 July 1998
       Returns displacement of local wafer coordinate (cm)
          fault types 301, 302
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     ILAY   / I  layer number
     IFAC   / I  face number (in layer)
     IWFF   / I  wafer number (wafer in face)
     RSTRP  / R  readout strip number (floating number)
   - Output:
     DSPLC  / R  displacement (cm)  in local wafer coordinates
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VRECOR                                                               
                   |----  VFWAFF                                                   
                   |----  VJMODI                                                   
                   |----  VDRSSC                                                   
                   |----  VDSCEC                                                   
                   |----  NUMERR                              External             
   
 
3 VRMMOD
         INTEGER FUNCTION VRMMOD (MMOD,IWAF,IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the readout module index for a given signed global module
   - Joe Rothberg, June 1995
   - Input:
     MMOD   / I  Signed global module index
     IWAF   / I  Local wafer index
     IVIEW  / I  View
   - Output:
     VRMMOD / I  Readout module index
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VRMMOD                                                               
                   |----  VIMMOD                                                   
                   |----  VIWFFW                                                   
   
 
3 VROMAX
         INTEGER FUNCTION VROMAX (IVIEW,IROMX,INCR)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns limit and step size for looping over readout modules
   - Steve Wasserbaech, January 1995
     To loop over all readout modules in a face/view, loop from 1 to
     IROMX with step size INCR.  This handles the peculiar numbering
     of the readout modules.  (If the view has multiplexing, then each
     face has two readout modules numbered IROM=1 and IROMAX.)
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VROMAX / I  = VDOK if successful;
                 = VDERR if IVIEW is invalid.
     IROMX  / I  Maximum readout module index in face IROM
     INCR   / I  Step size for looping
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VROMAX.                                                              
   
 
3 VROSTM
         INTEGER FUNCTION VROSTM (IVIEW,NROSTR,RPITCH,IRFREQ)
  ------------------------------------------------------------------------------
    CKEY VDETDES STRIP / USER
  ------------------------------------------------------------------------------
   Returns information about the readout strips on a wafer
   - Steve Wasserbaech, February 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VROSTM / I  = VDOK if successful;
                 = VDERR if IVIEW is invalid.
     NROSTR / I  Number of readout strips per wafer
     RPITCH / R  Readout strip pitch (cm)
     IRFREQ / I  Readout strip frequency; e.g., if IRFREQ = 2 then
                 every second physical strip is read out
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VCHNST                                                                          
   VDHTER                                                                          
   VDMJLS                                                                          
        |---- VROSTM                                                               
                   |----  FLOAT                               External             
   
 
3 VRSWMD
         INTEGER FUNCTION VRSWMD (IROS,IWAF,MMOD,IVIEW,IDATC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the data channel for a given strip,wafer,module,view. vdet95
        this will contain bonding error information
   - Joe Rothberg, August 1995
   - Input:
     IROS   / I  Readout strip number
     IWAF   / I  Local wafer index
     MMOD   / I  signed module number
     IVIEW  / I  View
   - Output:
     IDATC / I  Data channel number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VCHNST                                                                          
        |---- VRSWMD                                                               
                   |----  VJMODM                                                   
                   |----  VIMODI                                                   
                   |----  VDRSSC                                                   
                   |----  VDSCEC                                                   
   
 
3 VRSWMX
         INTEGER FUNCTION VRSWMX (IROS,IWAF,IVIEW,IDATC,IMX)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the mx7 chip number and data channel
                       for a given strip, wafer, view. VDET95
   - Joe Rothberg, August 1995
   - Input:
     IROS   / I  Readout strip number
     IWAF   / I  Local wafer index
     IVIEW  / I  View
   - Output:
     IMX   / I  MX7 chip number
     IDATC / I  Data channel number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTCH                                                                          
        |---- VRSWMX                                                               
                   |----  VDRSSC                                                   
                   |----  VDSCEC                                                   
   
 
3 VRVMBE
          SUBROUTINE VRVMBE
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Read and unpack bonding error banks  vmbe
   - Joe Rothberg, August 1995
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINIBM                                                                          
        |---- VRVMBE                                                               
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  MOD                                 External             
   
 
3 VSCHAN
         INTEGER FUNCTION VSCHAN(IFLBE,JMOD,IVIEW,IDATC,ISTRSB,IFLTC)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns strip number in each wafer corresponding to data channel
     Author   :- J. Rothberg                   12-OCT-1995
     Inputs:
     IFLBE   / I     0 = nominal strips;  1 = Bonding errors used
     JMOD    / I     Global Module number
     IVIEW   / I     View
     IDATC   / I     Data Channel (CERN convention: 0,1,...)
     Outputs:
     ISTRSB(3)  /I    Strip numbers in each wafer (1,2,3...)
     IFLTC(3)   /I    Fault code by wafer (same as VMBE convention)
     Libraries required:
     Description
     ===========
       Returns strip number in each wafer corresponding to Data Channel
             Bonding errors are taken into account.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VSCHAN                                                               
                   |----  VINIST                                                   
                   |----  VCORMP                                                   
                   |----  VDCFLT                                                   
                   |----  VDCWRS                                                   
   
 
3 VSCMEC
         INTEGER FUNCTION VSCMEC (IVIEW,ISCM1,NSCH,ISCMF,ISCML,IECOR)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   First and last strip-channel-in-module with readout direction
   - Steve Wasserbaech, 4 November 1994
     Calculate the first and last strip-channel-in-module numbers
     in a cluster, interchanging the numbers if necessary to take
     the readout direction into account.  Thus a loop from ISCMF to
     ISCML (stepping by IECOR) will be a loop in the order of
     increasing *electronics* channel number.
     Warning: this function does not check that ISCM1 and ISCM1+NSCH-1
     fall within the same readout module.  If they do, then ISCMF is
     the strip-channel-in-module number of the strip channel with the
     lowest *electronics* channel number in the cluster and ISCML is
     the strip-channel-in-module number of the strip channel with the
     highest *electronics* channel number in the cluster.
     If ((IVIEW is valid) .and. (NSCH .gt. 0)) then
       If ((ISCM1 is a valid strip-channel-in-module) .and.
           (ISCM1+NSCH-1 is a valid strip-channel-in-module)) then
         IECOR = readout sign
         If (readout sign = +1) then
           ISCMF = ISCM1
           ISCML = ISCM1+NSCH-1
         Else
           ISCMF = ISCM1+NSCH-1
           ISCML = ISCM1
         Endif
       Endif
     Endif
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     ISCM1  / I  First strip-channel-in-module number in cluster
     NSCH   / I  Number of channels in cluster; must be greater than zero
   - Output:
     VSCMEC / I  = VDOK if successful
                 = VDERR if error occurred
     ISCMF  / I  = ISCM1        if readout direction = +1;
                 = ISCM1+NSCH-1 if readout direction = -1
     ISCML  / I  = ISCM1+NSCH-1 if readout direction = +1;
                 = ISCM1        if readout direction = -1
     IECOR  / I  Readout direction for this view
                 = +1 if strip channels and electronics channels are
                   numbered in the same direction;
                 = -1 if in opposite directions.
                 Note: IECOR can be used as the step size to loop from
                 ISCMF to ISCML.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VSCMEC.                                                              
   
 
3 VSCMSC
         INTEGER FUNCTION VSCMSC (MMOD,IVIEW,ISCM,IROM,ISCH)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Convert strip-channel-in-module number to strip channel number
   - Steve Wasserbaech, 4 November 1994
   - Input:
     MMOD   / I  Signed global module index
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
     ISCM   / I  Strip-channel-in-module number
   - Output:
     VSCMSC / I  = VDOK if successful
                 = VDERR if error occurred
     IROM   / I  Readout module
     ISCH   / I  Strip channel number
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VSCMSC                                                               
                   |----  IABS                                External             
                   |----  MOD                                 External             
   
 
3 VSENSI
         INTEGER FUNCTION VSENSI (IVIEW,SAMIN,SAMAX,SBMIN,SBMAX)
  ------------------------------------------------------------------------------
    CKEY VDETDES WAFER / USER
  ------------------------------------------------------------------------------
   Returns the boundaries of the sensitive region of a wafer and view
   - Steve Wasserbaech, February 1994
   - Input:
     IVIEW  / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VSENSI / I  = VDOK if successful;
                 = VDERR if IVIEW is invalid.
     SAMIN  / R  Minimum a coordinate (cm) of sensitive region
     SAMAX  / R  Maximum a coordinate (cm) of sensitive region
     SBMIN  / R  Minimum b coordinate (cm) of sensitive region
     SBMAX  / R  Maximum b coordinate (cm) of sensitive region
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTXTRK                                                                          
        |---- VSENSI.                                                              
   
 
3 VSETUP
         INTEGER FUNCTION VSETUP ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns setup code for last successfully read vdet setup
   - Steve Wasserbaech, November 1994
   - Input:
     (none)
   - Output:
     VSETUP / I  Setup code for last successfully read VDET setup
                 = VDERR if no setup is loaded in commons
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGGTNO                                                                          
        |---- VSETUP.                                                              
   
 
3 VSLOTF
         LOGICAL FUNCTION VSLOTF (JFAC)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Determine whether a given slot contains a face
   - Steve Wasserbaech, February 1994
     Modified 2 June 1995, S. Wasserbaech: ISSFLG = face serial number
   - Input:
     JFAC   / I  Global index of slot
   - Output:
     VSLOTF / L  = .TRUE. if slot contains a face;
                 = .FALSE. if slot is empty, or if JFAC is invalid
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGCADI                                                                          
        |---- VSLOTF                                                               
                   |----  ISSFLG                              External             
   
 
3 VSMJMD
         INTEGER FUNCTION VSMJMD (JMOD,ISMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns serial number of global module number, vdet95
   - Joe Rothberg, August 1995
   - Input:
     JMOD   / I  global module number
   - Output:
     ISMOD   / I  Serial number of Module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINIBM                                                                          
        |---- VSMJMD                                                               
                   |----  VMMODJ                                                   
                   |----  VJFACM                                                   
                   |----  VFACSN                                                   
                   |----  MODPOS                              External             
                   |----  MODNEG                              External             
   
 
3 VSMMOD
         INTEGER FUNCTION VSMMOD (MMOD,ISMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns serial number of signed module number, vdet95
   - Joe Rothberg, August 1995
   - Input:
     MMOD   / I  signed global module number
   - Output:
     ISMOD   / I  Serial number of Module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VSMMOD                                                               
                   |----  VJMODM                                                   
                   |----  VJFACM                                                   
                   |----  VFACSN                                                   
                   |----  MODPOS                              External             
                   |----  MODNEG                              External             
   
 
3 VSMMTX
         INTEGER FUNCTION VSMMTX (TXTM,ISMOD)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Returns serial number of module text name, vdet95
   - Joe Rothberg, August 1995
   - Input:
     TXTM   / I  module text name
   - Output:
     ISMOD   / I  Serial number of Module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VSMMTX                                                               
                   |----  VITEXI                                                   
                   |----  VJMODI                                                   
                   |----  VJFACM                                                   
                   |----  VFACSN                                                   
                   |----  MODPOS                              External             
                   |----  MODNEG                              External             
   
 
3 VSTREG
             SUBROUTINE VSTREG(IVIEW,NREG,NDIM,ISRGS)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Specify regions relating strip channels to readout strips. vdet95
   
   
       IN:    IVIEW   view, 1=z    2=r-phi
       OUT:   NREG    number of regions for this view (3 for z, 1 for r-phi)
                      returns -1 for error
              NDIM    number of wafers (2 for z, 3 for r-phi)
              ISRGS   ISRGS(8,3)  second dimension is number of regions
                      first strip channel, last strip channel,
                      first wafer, first readout strip in wafer,
                      second wafer, first readout strip in wafer
                      thirds wafer, first readout strip in wafer(r phi only)
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINIST                                                                          
        |---- VSTREG.                                                              
   
 
3 VTEXTM
         INTEGER FUNCTION VTEXTM (JMOD,TXTM)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the text module for a given global module, jmod
   - Joe Rothberg, January 1994
   - Input:
     JMOD   / I    Global module index
   - Output:
     VTEXTM / I  = VDOK if successful
                 = VDERR if error occurred
     TXTM   / C*4  Text module name
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VTEXTM                                                               
                   |----  VIMODI                                                   
                   |----  TXMODU                              External             
   
 
3 VTEXTW
         INTEGER FUNCTION VTEXTW (JWAF,TXTM)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the text module for a given global wafer, jwaf
   - Joe Rothberg, January 1994
   - Input:
     JWAF   / I    Global wafer index
   - Output:
     VTEXTW / I  = VDOK if successful
                 = VDERR if error occurred
     TXTM   / C*4  Text module name
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VTEXTW                                                               
                   |----  VIWAFI                                                   
                   |----  TXMODU                              External             
   
 
3 VUNADD
         SUBROUTINE VUNADD (IADDR,NECH,ILAY,IROM,IFAC,IVIEW,IECH)
  ------------------------------------------------------------------------------
    CKEY VDETDES UNPACK ADDRESS / USER
  ------------------------------------------------------------------------------
   Unpack a full vhls address including number of electronics channels
   - Steve Wasserbaech, 28 July 1995
     This routine unpacks a bit-packed address as found in the VHLS and
     VFHL banks into its components.  VPKADD packs these addresses.
     Packing scheme: depends on VDET version.  See documentation in
     comdeck VHLSBT.
     WARNING: the VDET Geometry Package must be initialized (by means
     of a call to VRDDAF) before VPKADD/VUNADD will work.
   - Input:
     IADDR / I  Packed address
   - Output:
     NECH  / I  Number of electronics channels (VHLS) or strip channels
                (VFHL) in this cluster
     ILAY  / I  Layer index of this cluster
     IROM  / I  Readout module of this cluster
     IFAC  / I  Local face index of this cluster
     IVIEW / I  View number (=1 for z, =2 for r-phi) of this cluster
     IECH  / I  First electronics channel (VHLS) or strip channel (VFHL)
                number of this cluster.  The numbering of electronics
                channels begins with zero; the numbering of strip
                channels begins with one.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VUNADD                                                               
                   |----  IAND                                External             
                   |----  ISHFT                               External             
   
 
3 VVUWAB
         INTEGER FUNCTION VVUWAB (VUW,JWAF,ABC)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform wafer coords (v,u,w) into local wafer coords (a,b,c)
   - Joe Rothberg, 15 January 1994
   - Input:
     VUW(3) / R  Coordinates of point in wafer system
     JWAF   / I  Global wafer index
   - Output:
     VVUWAB / I  = VDOK if successful
                 = VDERR if error occurred
     ABC(3) / R  Coordinates of point in local wafer system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDWFXY                                                                          
   VXYZAB                                                                          
        |---- VVUWAB                                                               
                   |----  VJLAYW                                                   
                   |----  VJMODW                                                   
                   |----  VMMODJ                                                   
                   |----  ISIGN                               External             
                   |----  VZERO                               External             
   
 
3 VVUWXY
         INTEGER FUNCTION VVUWXY (VUW,JWAF,XYZ)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform wafer coordinates into aleph coordinates
   - Joe Rothberg and Rainer Wallny, 15 January 1994
   - Input:
     VUW(3) / R  Coordinates of point in wafer system
     JWAF   / I  Global wafer index
   - Output:
     VVUWXY / I  = VDOK if successful
                 = VDERR if error occurred
     XYZ(3) / R  Coordinates of point in ALEPH system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VABCXY                                                                          
   VALFCO                                                                          
        |---- VVUWXY                                                               
                   |----  VJFACW                                                   
                   |----  CPHIOF                              External             
                   |----  SPHIOF                              External             
                   |----  WAXCEN                              External             
                   |----  WAYCEN                              External             
                   |----  WAZCEN                              External             
                   |----  VZERO                               External             
   
 
3 VWADIM
         INTEGER FUNCTION VWADIM (DVUW)
  ------------------------------------------------------------------------------
    CKEY VDETDES WAFER / USER
  ------------------------------------------------------------------------------
   Returns the external dimensions of a wafer
   - Steve Wasserbaech, February 1994
   - Input:
     (none)
   - Output:
     VWADIM  / I  = VDOK if successful;
                  = VDERR if an error occurred.
     DVUW(3) / R  Dimensions of wafer (cm) along v, u, and w directions
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VALFCO                                                                          
        |---- VWADIM.                                                              
   
 
3 VWDIST
         INTEGER FUNCTION VWDIST (XYZ,JWAF,ABC,DABC,DIST)
  ------------------------------------------------------------------------------
    CKEY VDETDES WAFER / USER
  ------------------------------------------------------------------------------
   Find distance from a given point to a given wafer
   - Steve Wasserbaech, January 1994
     Note: this function does not check for empty slots.
   - Input:
     XYZ(3)  / R  Coordinates of point in ALEPH system (cm)
     JWAF    / I  Global index of wafer
   - Output:
     VWDIST  / I  = VDOK if successful
                  = VDERR if an error occurs
     ABC(3)  / R  Coordinates of point in local wafer system
                  in JWAF local system
     DABC(3) / R  DABC(I) = Signed distance from point to limit of wafer
                  along I dimension [I=1,2,3 for a,b,c];
                  DABC(I) = ABS(ABC(I)) - Wafer_Dimension(I)/2;
                          < 0 if coordinate I lies within limits of
                              wafer along I dimension;
                          > 0 if coordinate I lies outside limits of
                              wafer along I dimension.
     DIST    / R  Signed distance between the point and the nearest
                  corner, edge, or surface of the wafer;
                    <0 if inside the wafer,
                    >0 if outside.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VWFIND                                                                          
        |---- VWDIST                                                               
                   |----  VZERO                               External             
                   |----  VXYZAB                                                   
                   |----  ABS                                 External             
                   |----  AMIN1                               External             
                   |----  AMAX1                               External             
                   |----  SQRT                                External             
   
 
3 VWFFND
         INTEGER FUNCTION VWFFND (Z)
  ------------------------------------------------------------------------------
    CKEY VDETDES WAFER / USER
  ------------------------------------------------------------------------------
   Find which wafer in a face is nearest to a given point
   - Steve Wasserbaech, April 1994
     Note: this routine relies on the basic assumptions that the
     wafer centers have the same set of z coordinates in every face,
     and that the wafers in a particular face have the same geometry.
     For a particular point in space (x,y,z) and a particular face JFAC,
     the local wafer-in-face index IWFF of the wafer nearest to the
     point is independent of JFAC, x, and y under these assumptions.
   - Input:
     Z      / R  z coordinate (cm) of point in ALEPH system
   - Output:
     VWFFND / I  Local wafer-in-face index of wafer
                 centered nearest to Z
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDGTOL                                                                          
   VINTLF                                                                          
   VJWABR                                                                          
   VWFIND                                                                          
   VDEXCY                                                                          
   VTXTRK                                                                          
        |---- VWFFND                                                               
                   |----  ABS                                 External             
   
 
3 VWFIND
         INTEGER FUNCTION VWFIND (XYZ,LOOK,JWAF,ABC,DABC,DIST)
  ------------------------------------------------------------------------------
    CKEY VDETDES WAFER / USER
  ------------------------------------------------------------------------------
   Find which wafer in vdet is nearest to a given point
   - Steve Wasserbaech, January 1994
     Modified 2 June 1995, S. Wasserbaech: ISSFLG = face serial number
     Note: this function correctly handles empty slots.
   - Input:
     XYZ(3)  / R  Coordinates of point in ALEPH system (cm)
     LOOK    / I  = 0 to select search over all faces;
                  = global face index JFAC to restrict search to one face
   - Output:
     VWFIND  / I  = VDOK if successful
                  = VDERR if an error occurs
     JWAF    / I  Global wafer index of wafer nearest to point
     ABC(3)  / R  Coordinates of point in local wafer system JWAF
     DABC(3) / R  DABC(I) = Signed distance from point to limit of wafer
                  along I dimension [I=1,2,3 for a,b,c];
                  DABC(I) = ABS(ABC(I)) - Wafer_Dimension(I)/2;
                          < 0 if coordinate I lies within limits of
                              wafer along I dimension;
                          > 0 if coordinate I lies outside limits of
                              wafer along I dimension.
     DIST    / R  Signed distance between the point and the nearest
                  corner, edge, or surface of the wafer;
                    <0 if inside the wafer,
                    >0 if outside.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VWFIND                                                               
                   |----  VZERO                               External             
                   |----  VWFFND                                                   
                   |----  ISSFLG                              External             
                   |----  JIFACF                              External             
                   |----  IJWFFR                              External             
                   |----  VWDIST                                                   
   
 
3 VWTHCK
         REAL FUNCTION VWTHCK ()
  ------------------------------------------------------------------------------
    CKEY VDETDES WAFER / USER
  ------------------------------------------------------------------------------
   Returns the thickness of the wafers
   - Steve Wasserbaech, September 1994
   - Input:
     (none)
   - Output:
     VWTHCK / R  Thickness (cm) of wafer
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VWTHCK.                                                              
   
 
3 VXYZAB
         INTEGER FUNCTION VXYZAB (XYZ,JWAF,ABC)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform aleph coords (x,y,z) into local wafer coords (a,b,c)
   - Steve Wasserbaech, 14 October 1994
   - Input:
     XYZ(3) / R  Coordinates of point in ALEPH system
     JWAF   / I  Global wafer index
   - Output:
     VXYZAB / I  = VDOK if successful
                 = VDERR if error occurred
     ABC(3) / R  Coordinates of point in local wafer system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VINTER                                                                          
   VWDIST                                                                          
        |---- VXYZAB                                                               
                   |----  VXYZVU                                                   
                   |----  VVUWAB                                                   
                   |----  VZERO                               External             
   
 
3 VXYZFC
         INTEGER FUNCTION VXYZFC (JFAC,XYZ)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns (x,y,z) of face center
   - Steve Wasserbaech, February 1994
   - Input:
     JFAC   / I  Global face index
   - Output:
     VXYZFC / I  = VDOK if successful;
                 = VDERR if JFAC is invalid.
     XYZ(3) / R  Coordinates of face center (cm) in ALEPH system;
                 the "face" consists of the NWAFEF wafers
                 and the spaces in between them.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDEXCY                                                                          
        |---- VXYZFC                                                               
                   |----  VZERO                               External             
                   |----  VJWAFF                                                   
                   |----  WAXCEN                              External             
                   |----  WAYCEN                              External             
   
 
3 VXYZVU
         INTEGER FUNCTION VXYZVU (XYZ,JWAF,VUW)
  ------------------------------------------------------------------------------
    CKEY VDETDES TRANSFORM / USER
  ------------------------------------------------------------------------------
   Transform aleph coordinates into wafer coordinates
   - Joe Rothberg and Rainer Wallny, 15 January 1994
   - Input:
     XYZ(3) / R  Coordinates of point in ALEPH system
     JWAF   / I  Global wafer index
   - Output:
     VXYZVU / I  = VDOK if successful
                 = VDERR if error occurred
     VUW(3) / R  Coordinates of point in wafer system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VXYZAB                                                                          
        |---- VXYZVU                                                               
                   |----  VJFACW                                                   
                   |----  CPHIOF                              External             
                   |----  WAXCEN                              External             
                   |----  SPHIOF                              External             
                   |----  WAZCEN                              External             
   
 
3 VXYZWA
         INTEGER FUNCTION VXYZWA (JWAF,XYZ)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Returns (x,y,z) of wafer center
   - Steve Wasserbaech, January 1995
   - Input:
     JWAF   / I  Global wafer index
   - Output:
     VXYZWA / I  = VDOK if successful;
                 = VDERR if JWAF is invalid.
     XYZ(3) / R  Coordinates of wafer center (cm) in ALEPH system
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VGGTNO                                                                          
        |---- VXYZWA                                                               
                   |----  VZERO                               External             
                   |----  WAXCEN                              External             
                   |----  WAYCEN                              External             
                   |----  WAZCEN                              External             
   
 
3 VZMULT
         LOGICAL FUNCTION VZMULT ()
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Is the z readout multiplexed?
   - Joe Rothberg, July 1994
   - Input:
     (none)
   - Output:
     VZMULT / L  = .TRUE. if z readout is multiplexed
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VZMULT.                                                              
   
 
3 VZRSRS
         INTEGER FUNCTION VZRSRS (IWAF1,IROS1,IWAF2,IROS2)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX STRIP / USER
  ------------------------------------------------------------------------------
   Find partner of readout strip in multiplexed z strip channel
   - Steve Wasserbaech, November 1994
   - Input:
     IWAF1  / I  Local wafer index of a z strip
     IROS1  / I  Readout strip number of a z strip
   - Output:
     VZRSRS / I  = VDOK if successful
                 = VDERR if error occurred or if readout not multiplexed
     IWAF2  / I  Local wafer index of partner readout strip
                 in strip channel
     IROS2  / I  Readout strip number of partner readout strip
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDCWRS                                                                          
   VDMWRS                                                                          
        |---- VZRSRS.                                                              
   

2 VDET

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     various VDET routines not included into VDETDES
     ! ALEPHLIB 31.3
        VTDERV,VTXNWT,VTXRAW : Double precision fixes for Linux     (D.Smith)
    
     ! ALEPHLIB 30.5 correction file no. 3
        VTDERV : Improve the protection against rounding errors (A.Bonissent)
    
     ! ALEPHLIB 30.5 correction file no. 2
        VDTTRA,VTRFIT: Remove CALL from function references, for Linux.(A.Waananen)
    
     ! ALEPHLIB 30.4 correction file no. 4
        VDHTER : Fix the bug on WERRA ((3,3) instead of (2,2))        (Manoj T.)
        VHERR1 : Modify the error param. (due to change in S/N in MC) (Manoj T.)
    
     ! ALEPHLIB 30.3 correction file no. 1
       VDTTRA - add UFTR card to flag a track for Kalman filter printout during
                fit.  NR=event number, with entries on the card indicating which
                track(s) of that event should be dumped.  
                Example:  UFTR 10 / 1 2 5 dumps tracks 1, 2, and 5 of event 10. 
                Note there is no selection by run number since the user is presumed
                to be dealing with a small set of events when this feature is 
                enabled.                                                 (D.Casper)
    
     ! ALEPHLIB 30.2 correction file no. 9
        VDHTER - fix incorrect order of track momentum components in call to VHERR1
                                                                         (D.Casper)
    
     ! ALEPHLIB 30.2 correction file no. 1
        VDTTRA - new routine which contains the VDET pattern recognition part
                 of UFTTRA/alephlib_216 (flr).
                 this part has been removed from UFTTRA/alephlib_302.
        VTRFIT   calls VDTTRA instead of UFTTRA (flr).
    
     ! ALEPHLIB 21.6
        VTRKEX - Place VDMS on E-list for cleanup (D.Casper)
    
     ! ALEPHLIB 21.5
        VTRUH  :  New routine, count the number of properly associated VDET
                  hits by layer and view (A.Bonissent).
    
     ! ALEPHLIB 21.4
        VDHTER :  Modified to take the space resolution from MC (Manoj T.)
        VHERR1 :  New routine, compute VDET hit error based on MC (Manoj T.)
    
     ! ALEPHLIB 21.3
        VDMSUP,VTRKEX: fix multiple variable definitions (M.Cattaneo)
    
     ! ALEPHLIB 21.0
      - VTCLLD :  Correct definition of neighbouring wafer for new VDET
      - VTCLAS :  move local work bank indices setting just before they
                  are used
      - VTRFIT :  Access VDET Setup code using ABRUEV and GTSTUP
    
     ! ALEPHLIB 20.9
     - Unmultiplex strips before clustering rather than after;
       handle the relation between "wafer clusters" and
       "global clusters" (at module level); new adress encoding
       scheme.  Affected :
       VTLINK, VRMWF, VTFILL, VTCLLD, VTRFIT
     - Modify VGRDAL so that alignment banks for monte carlo are accessed
       by setup code; for data we keep going with run number
     - VDMSEC
         get multiple scattering constants from setup dependent bank
         VRLD instead of from FKAL bank
     - VRLDGT
         new routine to give access to VRLD bank
     - VRLDCOM
         new common filled by VRLDGT
     - VDMSUP
         bug fix to a bank index and garbage collection protection
     - VDMSRL
         add more flexibility to allow for layer dependent effects
     ! ALEPHLIB 20.6
       VFACSN - returns the serial slot number of a face.
    
     ! ALEPHLIB 20.5
       Introduction of the new versions of the VDET alignment routines,
       of the new packing routines.
       Add some routines in the geometry package.
       VSCMSC - remove a bug.
       VRDDAF - remove reference to old VDET geometry package.
       VTRFIT - remove test on 1993 ==> remove bug for all years.
       VDHTER, VTXNWT - new versions to cope with new VDET geometry package.
       VTXTRK -  These are routines which perform the extrapolation
       VDMSUP -  of a track to Vdet wafers and estimate the amount
       VTCLLD -  of scattering material which was encountered. Use
                 of old VDGEOS common block was replaced by calls
                 to Geom. package routines
       VDMSRL -  get VDRL bank from D.B.
       UFVDMS -  get beampipe setup code.
    
     ! ALEPHLIB 20.2
       VTRFIT - gets DB banks through ALGTDB instead of MDARD.
                (because MDARD was used and the required bank number did
                 not exist, default values were used).
                keep the old code (default values) for '93 MC (setup code=5)
    
     ! ALEPHLIB 15.8
       VTXNWT - add a protection against asin > 1. (W.Manner)
    
     ! ALEPHLIB 15.5
       VDMSUP, VTRFIT - decrease the likelihood of garbage collections
                        to protect against " CALL xxx(IW(...)) "
                        (G.Taylor)
       VTXRAW - rewrite the routine to avoid recurrant problem.
     ! ALEPHLIB 15.2
       VTXTRK : check Z cylinder extrapolation
    
     ! ALEPHLIB 15.1
       VRDDAF : get VDET geometry banks through ALGTDB instead
                of MDARD to avoid to repeat banks with different NR
                but identical contents.
    
     ! ALEPHLIB 14.1
      Changes submitted on 5/10/92 by G.Taylor, D.Brown, C.Gay
    
      UFVDMS - add option of using more detailed treatment of VDET
               material if VDMS 0 bank present, no VDMS bank treat as now.
      VTRKEX - modified to provide VDMS banks ( nr = FRFT track number)
      VTXTRK - based on track extrapolation including alignement effects
      VRDDAF - increase z lenght of face, read in VDRL bank
      VTRFIT - call UFTTRA to get new treatment
               call UFTMSO(cf UMSERR) to treat track without vdet hits
    
      VDMSUP - create VDMS 0 bank and update using measured VDET coords
      VDMSEC - add into VDMS the effect of the VDET supprot rings
      VDMSRL - get the radiation lenght within a face
      UFTTRA - UFTTRK with one modified arguement to call the new code
      UFMS   - get contribution to covariance matrix coming from MS
               between two given radii
      UFTMSO - get contribution to covariance matrix coming from MS
               between innermost coordinaate and origin
      UFTKAL - Change one of the machine precision protections
    
        ------------------------------------------
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     VDEXCY     Extrapolate a given track to all a vdet cylinder
     VDHERR     Compute the vdet hit error given wafer information and track direction
     VDHITS     Count the number of vdet hits by layer and view.
     VDHTER     Compute the vdet hit error given wafer info and track direction
     VDMJLS     Calculates line index for vdet91 (temporary)
     VDMSEC     Add rows to the vdms 10000 bank to account for multiple scattering
     VDMSRL     Get the radiation lenght for a given point on a vdet face
     VDMSUP     Update face extrapolation bank vdms for true vdet hit position
     VDMWRS     Calculates the strips and wafers for given data channel,view,module.
     VDPRDI     Print vdet digitization banks
     VDPRHT     Print out  'vdht' bank in readable format.
     VDTTRA     Steering routine for the vdet pattern recognition
     VHERR1     Compute the vdet hit error, based on monte carlo
     VRLDGT     Fill /vrldcom/ from vrld data base bank
     VRMWF      Transform wafer number to appropriate address for vdxy/vdzt bank
     VSTRIP     Returns the wafer center in strip co-ordinates
     VTCLAS     Do the track vdet cluster association in the u or w plan.
     VTCLLD     Return vdet cluster whitin an given area.
     VTDERV     Compute the derivatives of local position wrt. track parameters
     VTFILL     Fill vdco and vcpl  banks.
     VTLINK     Track link with vertex detector clusters
     VTRFIT     Do track-vdet clusters association and refit tracks with vdet info.
     VTRKEX     Creates vdet track extrapolation and error banks
     VTRLAS     .true. if vdet laser trigger
     VTRUH      Count the number of properly associated
     VTXNWT     Computes the exact intersection point of a track with a wafer
     VTXRAW     Compute a crude vdet track extrapolation point
     VTXTRK     Extrapolate a given track to all intersecting vdet wafers

3 VDEXCY
         INTEGER FUNCTION VDEXCY(ILAY,TPAR,ZBUF,GPOS0,IPHI,IWAFF)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Extrapolate a given track to all a vdet cylinder
   
      Author   :- A. Bonissent March 1995
      Inputs:
   
           ILAY       - layer
           TPAR       - 5 Track parameters, as in FRFT
           ZBUF       - Quantity added to Vdet for X acceptance
   
      Outputs:
           GPOS0(3)   - 3D position of track intersection with Vdet cyl.
           IPHI       - face number of above
           IWAFf      - wafer in face of above
   
           VDEXCY     - return code. 0=OK
                                     1=track does not intersect
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTXTRK                                                                          
        |---- VDEXCY                                                               
                   |----  VNRFAC                                                   
                   |----  VXYZFC                                                   
                   |----  SQRT                                External             
                   |----  VJFACI                                                   
                   |----  VADD                                External             
                   |----  VFADIM                                                   
                   |----  ABS                                 External             
                   |----  VTXRAW                                                   
                   |----  VDOTN                               External             
                   |----  VWFFND                                                   
   
 
3 VDHERR
         SUBROUTINE VDHERR(IWAFA,PV,PU,PW,SIGNU,SIGNW,UERR,WERR)
  ------------------------------------------------------------------------------
    CKEY VDET JULIA
  ------------------------------------------------------------------------------
   Compute the vdet hit error given wafer information and track direction
    This uses a simple theoretical model to compute the hit errors
    given the signal/noise, and other parameters (see VDET ALIGNMENT
    ALEPHNOTE of 1991).  Dave Brown, 7-2-91
    INPUT;  IWAFA =  Decimal wafer address
            PV,PU,PW = track momentum vector at wafer in wafer frame
            SIGNU,SIGNW = Signal/noise on U,W side
   ;  UERR,WERR = hit errors in U,W direction
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDHERR                                                               
                   |----  VADEWA                                                   
                   |----  NSLOGM                              External             
                   |----  VDPPIT                              External             
                   |----  VDZPIT                              External             
                   |----  VDSTPH                              External             
                   |----  VDSTZE                              External             
                   |----  SQRT                                External             
                   |----  MAX                                 External             
   
 
3 VDHITS
         SUBROUTINE VDHITS(IHITPAT,MAXTRK)
  ------------------------------------------------------------------------------
    CKEY VDET HITS
  ------------------------------------------------------------------------------
   Count the number of vdet hits by layer and view.
    Input:  MAXTRK       = Dimension of IHITPAT array, should
                           be large enough to contain the largest event
                           (IE around 200)
            FRFT and VDCO must be in the bank list
    Output: IHITPAT, an integer array numbered by FRFT track number,
            of which only the first 8 bits are used, as described below
            bits:     meaning
            0-1       number of inner layer U hits on track (0,1,or2)
            2-3       number of outer layer U hits on track     "
            4-5       number of inner layer W hits on track     "
            6-7       number of outer layer W hits on track     "
    10-3-92 Dave Brown
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDHITS                                                               
                   |----  NAMIND                              External             
                   |----  MIN                                 External             
                   |----  VADEWA                                                   
                   |----  IAND                                External             
   
 
3 VDHTER
         SUBROUTINE VDHTER (IWAFA,PV,PU,PW,U,W,SIGNU,SIGNW,UERR2,WERR2)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN JULIA / USER
  ------------------------------------------------------------------------------
   Compute the vdet hit error given wafer info and track direction
   - Dave Brown - 910430
   - Modified to use new geometry package, S. Wasserbaech, March 1995
   - Modified to call VGCRMT for VALC info, A. Bonissent, March 1995
   - Fix incorrect order of PVEC components, D. Casper, April 1997
   - Fix the bug on WERRA ((3,3) instead of (2,2)) Manoj, July 16, 1997
     This uses a simple theoretical model to compute the hit errors
     given the signal/noise, and other parameters (see VDET ALIGNMENT
     ALEPHNOTE of 1991).  Dave Brown, 7-2-91
   - Input:
     IWAFA        / I  Decimal wafer address
     PV,PU,PW     / R  Track momentum vector at wafer in wafer frame
     U,W          / R  Hit coordinates in wafer system
     SIGNU,SIGNW  / R  Signal/noise on U,W side
   - Output:
     UERR2,WERR2  / R  SQUARED hit errors in U,W direction
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTCLAS                                                                          
   VTLINK                                                                          
        |---- VDHTER                                                               
                   |----  VROSTM                                                   
                   |----  VPHSTM                                                   
                   |----  SQRT                                External             
                   |----  MAX                                 External             
                   |----  VDYEAR                                                   
                   |----  VHERR1                                                   
                   |----  VGCRMT                                                   
   
 
3 VDMJLS
         INTEGER FUNCTION VDMJLS (CLOC, ILAY, IWFF, IFAC, IVIEW)
  ------------------------------------------------------------------------------
    CKEY VDETDES / USER
  ------------------------------------------------------------------------------
   Calculates line index for vdet91 (temporary)
   - John Drinkard, 16 Sep 1991 (original version)
   - Steve Wasserbaech, 20 March 1995
     This is a crude version of VDMJLS that works with the new
     VDET geometry package, but only for VDET91!  It is designed to
     reproduce the results of the old version.
     Note: the input coordinate CLOC is a floating number and the
     output VDMJLS is an integer.  VDMJLS steps by one when CLOC
     crosses each readout strip.  If CLOC lies between two readout
     strips, it is not obvious which of the two nearest strips will
     correspond to VDMJLS.
   - Input:
     CLOC    / R  Local coordinate (w or u) in cm
     ILAY    / I  Layer index
     IWFF    / I  Wafer-in-face index
     IFAC    / I  Local face index
     IVIEW   / I  View number (=1 for z, =2 for r-phi)
   - Output:
     VDMJLS  / I  What is this?  Today we call this the electronics
                    channel number + 1.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDMJLS                                                               
                   |----  VROSTM                                                   
                   |----  FLOAT                               External             
                   |----  VFWAFF                                                   
                   |----  VJFACI                                                   
                   |----  VFAORI                                                   
                   |----  VNRDIR                                                   
   
 
3 VDMSEC
         SUBROUTINE VDMSEC(ITRAC)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Add rows to the vdms 10000 bank to account for multiple scattering
    in the VDET support rings
   
       AUTHOR: G. Taylor   23.9.1992
   
       INPUT: Track number of FRFT 0 track
       OUTPUT: VDMS 10000 bank with corresponding rows
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDMSUP                                                                          
        |---- VDMSEC                                                               
                   |----  NAMIND                              External             
                   |----  VRLDGT                                                   
                   |----  NLINK                               External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
   
 
3 VDMSRL
         FUNCTION VDMSRL(U,W,IWAFID)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Get the radiation lenght for a given point on a vdet face
   
     Author         G.Taylor    29/9/92
   
     Input : U       VDET local coordinaate in FACE reference frame
             W       VDET local coordinaate in FACE reference frame
             IWAFID  wafer identifier of the VDET module ( as VDCO)
   
     Output : VDMSRL fraction of radiation lenght at that point
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDMSRL                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  ALTELL                              External             
                   |----  VADEWA                                                   
   
 
3 VDMSUP
         SUBROUTINE VDMSUP(ITRK,KVTMA)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Update face extrapolation bank vdms for true vdet hit position
   
      Author   :David Brown 25-9-92
         Modified A. Bonissent March 1995 :
                   Use geometry package, so that Vdet 91 or 95 can be use
      Inputs:
        ITRK - FRFT track number
        KVTMA - Row number in VTMA; if 0, the VDCO  information is used
      Outputs: VDMS bank for the requested track is copied
               to bank# 0, and updated
               for VDET hit information, coming either from VTMA or VDCO
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFTTRA                                                                          
   VDTTRA                                                                          
   VTRFIT                                                                          
        |---- VDMSUP                                                               
                   |----  NAMIND                              External             
                   |----  VNRWAF                                                   
                   |----  VNRMOD                                                   
                   |----  VABCXY                                                   
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  ALTELL                              External             
                   |----  UCOPY                               External             
                   |----  VADEWA                                                   
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  VGWFVU                                                   
                   |----  VDMSEC                                                   
                   |----  SORTZV                              External             
   
 
3 VDMWRS
         INTEGER FUNCTION VDMWRS (IDATC,IVIEW,MMOD,IWFRS,ISTRS)
  ------------------------------------------------------------------------------
    CKEY VDETDES INDEX / USER
  ------------------------------------------------------------------------------
   Calculates the strips and wafers for given data channel,view,module.
     returns ALL wafers and readout strips. (3 for rphi; 2 for z). VDET95
     This will contain bonding error information.
   - Joe Rothberg, August 1995
   - Input:
     IDATC  / I  Data Channel number
     IVIEW  / I  View
     MMOD   / I  signed module number
   - Output:
     IWFRS(3)   / I  Local wafer index (2 or 3 )
     ISTRS(3)   / I  Readout Strips (2 or 3 )
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDMWRS                                                               
                   |----  VJMODM                                                   
                   |----  VDACRS                                                   
                   |----  VZRSRS                                                   
   
 
3 VDPRDI
         SUBROUTINE VDPRDI
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
                              F.Forti             3/8/86
   Print vdet digitization banks
     Purpose: print contents of Minivertex digitization banks in a
               readable format
     Called by: VDDIGI                            from this .HLB
        Calls : BPRNT                             from BOS77
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDPRDI                                                               
                   |----  NAMIND                              External             
                   |----  WBANK                               External             
                   |----  MVBITS                              External             
                   |----  REAL                                External             
                   |----  MOD                                 External             
                   |----  VADESA                                                   
                   |----  WDROP                               External             
   
 
3 VDPRHT
         SUBROUTINE VDPRHT
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
    VDPRHT  1.00   860611                       F. Forti
   Print out  'vdht' bank in readable format.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VDPRHT                                                               
                   |----  NLINK                               External             
   
 
3 VDTTRA
         SUBROUTINE VDTTRA(ITRAC,FIELD,
  ------------------------------------------------------------------------------
    CKEY COMPUTE FIT
  ------------------------------------------------------------------------------
        +                  VV0IN,CHI2IN,NCOTPC,NCOITC,
        +                  LISTPC,LISITC,VV0,CC0,CHI2,NDEG)
   Steering routine for the vdet pattern recognition
                 ===>  based on extended kalman filtering
                 ===>  calls UFTKAL
   
    This is to be used for the pattern recognition in VDET,
    using TPC, ITC.
    This routine takes into account correlations
    between all measuring planes which result from multiple
    scattering.
    This routine is a copy of the VDET pattern recognition part
    of UFTTRA/alephlib_285 where references to VDET coordinates have
    all been removed.
   
   
       AUTHOR: F.Ranjard  - 970312
       from UFTTRA (T.Lohse, B.Mours, G.Taylor)
   
       Modified: D.Casper 27-05-97  Support for Kalman Filter tracing:
                                    Give UFTR card NR=event, with a list
                                    of track numbers to dump the state
                                    for during the final fit.
   
       INPUT:  ITRAC  = FRFT track number of track being fitted
               FIELD  = Magnetic field strength in kG
               VV0IN  = 5 INPUT TRACK PARAMETERS FROM
                        A PRELIMINARY FIT
                 1 : 1/R         [1/CM]   NEG. IF CLOCKWISE
                 2 : TAN(LAMBDA)  =DZ/DS} TAN(ANGLE TO X,Y PLANE)
                 3 : PHI0        [0,2PI]} ANGLE TO X-AXIS
                 4 : D0*SIGN      [CM]    MINIMAL DIST. TO Z-AXIS,
                                          sign OF ANGULAR MOM. LZ
                 5 : Z0           [CM]    Z POS AT R=D0
               CHI2IN = CHI**2 OF PRELIMINARY FIT
   
               NCOTPC = NUMBER OF TPC COORDINATES
               NCOITC = NUMBER OF ITC COORDINATES
               LISTPC = COORDINATE NUMBERS IN TPCO
               LISITC = COORDINATE NUMBERS IN ICCO
   
     OUTPUT: - VV0 = 6 FINAL TRACK PARAMETERS
                 1 : 1/R          [1/CM]  NEG. IF CLOCKWISE
                 2 : TAN(LAMBDA)  =DZ/DS} TAN(ANGLE TO X,Y PLANE)
                 3 : PHI0        [0,2PI]} ANGLE TO X-AXIS
                 4 : D0*SIGN      [CM]    MINIMAL DIST. TO Z-AXIS,
                                          sign OF ANGULAR MOM. LZ
                 5 : Z0           [CM]    Z POS AT R=D0
                 6 : ALPHA      [-PI,PI]: SCATTERING ANGLE
                                          AT ITC WALL (IN X-Y)
             - CC0 = COVARIANCE MATRIX IN LOWER TRIANG. FORM
                        1
                        2  3
                        4  5  6
                        7  8  9 10
                       11 12 13 14 15
                       16 17 18 19 20 21
             - CHI2= CHI SQUARED FROM LAST KALMAN FILTER STEP
             - NDEG= NUMBER OF DEGREES OF FREEDOM
             - VTMA bank
   
     NOTE:     FIT DONE FOR THE 5 HELIX PARAMETERS ONLY.
               THE ANGLE ALPHA IS COMPUTED BUT ELEMENTS
               16,...,21 OF CC0 ARE DUMMY.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTRFIT                                                                          
        |---- VDTTRA                                                               
                   |----  UFTFIL                                                   
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  NLINK                               External             
                   |----  IABS                                External             
                   |----  VDMSUP                                                   
                   |----  UFVDIN                                                   
                   |----  UFVDOU                                                   
                   |----  MIN                                 External             
                   |----  UFTRAC                                                   
                   |----  VTFILL                                                   
                   |----  UCOPY                               External             
   
 
3 VHERR1
         SUBROUTINE VHERR1(IVIEW,PVEC,PH,VERR)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Compute the vdet hit error, based on monte carlo
    returns the intrinsic VDET space resolution
     Based on VHERR by D.Brown - 8-9-94 but with different
     error parametrisation
        Manoj Thulasidas 10-June-1996
     Modify the error parameterization (due to change in S/N in MC)
        Manoj Thulasidas 16-July-1997
    INPUT;  IVIEW   = View flag; 1 = W, 2 = U
            PVEC(3) = track momentum vector at wafer in wafer frame
            PH      = Pulseheight in normalized units
   ;  VERR    = hit error
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDHTER                                                                          
        |---- VHERR1                                                               
                   |----  ABS                                 External             
                   |----  SQRT                                External             
   
 
3 VRLDGT
         SUBROUTINE VRLDGT( IER)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Fill /vrldcom/ from vrld data base bank
    Extract the parameters dealing with the effects of multiple
    scattering from the data base bank VRLD
   
       AUTHOR: G. Taylor   22/6/95
   
       OUTPUT: See description of VRLD bank for details
               IER= 0  ok
               IER=-1 database bank not found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   UFMS                                                                            
   UFTKAL                                                                          
   UFMKAL                                                                          
   UFTRAC                                                                          
   UFTOME                                                                          
   UFTTAL                                                                          
   UFTMOM                                                                          
   UFTRAD                                                                          
   DALINF                                                                          
   UFDALI                                                                          
   UFSWIM                                                                          
   UFCLIM                                                                          
   UFVDIN                                                                          
   UFVDOU                                                                          
   UF2RES                                                                          
   UF2TRM                                                                          
   UF2TPO                                                                          
   UF2PNT                                                                          
   UF2XYZ                                                                          
   UFVDMS                                                                          
   UFVDMM                                                                          
   VDMSEC                                                                          
        |---- VRLDGT                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  ALTELL                              External             
   
 
3 VRMWF
         SUBROUTINE VRMWF(IWAF,IV,IROM)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Transform wafer number to appropriate address for vdxy/vdzt bank
     Get relevant readout module for a given wafer/view
     For old Vdet Wafer/view -> R/O module
     For new Vdet Wafer -> Wafer
   
      Author   :- A. Bonissent March 1995
      Inputs:
   
           IWAF       - encoded wafer number (see sbank VDZT/VDXY)
           IV         - view
   
      Outputs:
   
           IROM       - encoded readout moduule number
   
      What it does :
   
       (IWAF has)       (IROM contains)
                   -------------------------
         WAF#        VDET91           VDET95
                   IV=1   IV=2        ANY IV
           1        1      1            1
           2        2      1            2
           3        3      4            3
           4        4      4            4
           5        -      -            5
           6        -      -            6
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTCLLD                                                                          
   VTLINK                                                                          
        |---- VRMWF                                                                
                   |----  VDYEAR                                                   
                   |----  MOD                                 External             
   
 
3 VSTRIP
         SUBROUTINE VSTRIP(SCENT,IFLAG)
  ------------------------------------------------------------------------------
    CKEY VDET JULIA
  ------------------------------------------------------------------------------
   Returns the wafer center in strip co-ordinates
    Outputs; SCENT(ILAY,IWAF,IPHI,IVIEW)
             = array of wafer centers in strip co-ordinates, where
             1.0 is the center of the first strip, and 1.0 = 100 microns.
             IFLAG(ILAY,IWAF,IPHI,IVIEW)
             = Bonding flag for wafer; a single bit for 100 or 200
             micron bonding
             SCENT and IFLAG must be dimensioned by the calling routine :
                  INTEGER IFLAG(LVDL,NWAFN,NSLOM,2)
                  REAL SCENT(LVDL,NWAFN,NSLOM,2)
    David Brown, 4-2-91.  Modified 13-2 Wolfgang Manner
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VSTRIP                                                               
                   |----  VNSCRM                                                   
   
 
3 VTCLAS
         SUBROUTINE  VTCLAS(ITK,IUORW,NCOMB)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Do the track vdet cluster association in the u or w plan.
    Author      : B. Mours   901001
    modified by : B. Mours   910918
      add hit error to the extrapolation error matrix
      use new matrix invertor
      cut on residual difference for overlap
    modified by : B. Mours   911023
      recompute error matrix when we have missing cluster
    This routine may return several possible combinaisons
    including those with missing clusters.
    ITK  (in)  Track number
    IUORW(in)  = 0 if in xy plan; 1 if in z
    NCOMB(out) number of returned combinaisons
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTLINK                                                                          
        |---- VTCLAS                                                               
                   |----  NLINK                               External             
                   |----  VDHTER                                                   
                   |----  SQRT                                External             
                   |----  TRUPCK                              External             
                   |----  VTCLLD                                                   
                   |----  ABS                                 External             
                   |----  DINV                                External             
   
 
3 VTCLLD
         SUBROUTINE  VTCLLD(ITK,IL,SCUT,IUORW,NCL)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Return vdet cluster whitin an given area.
    Author     :  B. Mours - 901001
    modified by : B. Mours - 910918
      look for cluster in adjacent wafers
                  H.G. Moser - 910918
      normelise pulseheight before cut, select good clusters
                  A. Bonissent March 1995
            use Vdet year sensitive routime VRMWF
            to go from wafer to readout module
            New logic for multitrack assignment and new Vdet
            (old Vdet unchanged)
    We neglect the error comming from the cluster.
    This routine give at less a dummy cluster (residual=0, sigma=0)
      ITK   (in)  Track number
      IL    (in)  Layer number
      SCUT  (in)  Size of the search area
      IUORW (in)  = 0 if in xy plan; 1 if in z
      NCL   (out) Number of found clusters + 1 (dummy cluster)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTCLAS                                                                          
        |---- VTCLLD                                                               
                   |----  NAMIND                              External             
                   |----  NLINK                               External             
                   |----  VRMWF                                                    
                   |----  ABS                                 External             
                   |----  IAND                                External             
                   |----  VDYEAR                                                   
                   |----  FLOAT                               External             
                   |----  MOD                                 External             
                   |----  VTXNWT                                                   
                   |----  MAX                                 External             
   
 
3 VTDERV
         SUBROUTINE VTDERV(TPAR,RCW,VHAT,RERRP)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Compute the derivatives of local position wrt. track parameters
   
      Author   :- Jochen A. Lauber      23-MAY-1990
      Modified :  David Brown  16-10-90
      Modified :  G. Redlinger 26-10-90
                    Fixed some derivative calculations and declared
                     RSXY to be REAL*8 rather than REAL*4.
      Modified :  G. Redlinger 30-01-91
                    Re-fixed some derivatives according to the
                     correct calculations of T. Lohse.  This time
                     it's really correct!
      Modified :  A. Bonissent 14-Oct. 1997 :
                     Improve the protection against rounding errors,
                     replace 1. by 0.99999 so that cos is never 0.
      Modified :  D.Smith  991025  Double precision fixes for Linux
   
      Inputs: TPAR(5)  = track parameters as in FRFT bank
              RCW(2)   = ALEPH coordinate of wafer center in XY plane
                         PASSED IN DOUBLE PRECISION.
              VHAT(2)  = X and Y coordinates of the vector
                           perpendicular to the intersected wafer.
                           PASSED IN DOUBLE PRECISION
   
      Outputs: RERRP = derivatives of U,W wrt track parameters
   
      Libraries required: None
   
      Description
      ===========
      This routine computes the derivatives of the track extrapolation
      point (in local coordinates) with respect to the track parameters.
      For simplicity, it is assumed that the phi strips are parallel to
      the z-axis (i.e. w = z).
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTXNWT                                                                          
        |---- VTDERV                                                               
                   |----  SIGN                                External             
                   |----  DATAN2                              External             
                   |----  SQRT                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  ABS                                 External             
                   |----  ASIN                                External             
   
 
3 VTFILL
         SUBROUTINE VTFILL (ITK,ICOMB)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Fill vdco and vcpl  banks.
    Author      : B. Mours   901001
    modified by : TSM        910918
       track ambiguity
    modified by : B. Mours   911023
       dont store in VCPL rejected hit (large error)
    modified by : A. Bonissent 950714
       new logic for multitrack assignment for new Vdet only
       Old Vdet unchanged
    input : ITK   = track number
            ICOMB = combinaison number in VTMA bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDTTRA                                                                          
        |---- VTFILL                                                               
                   |----  NAMIND                              External             
                   |----  NLINK                               External             
                   |----  IOR                                 External             
                   |----  VDYEAR                                                   
                   |----  ABS                                 External             
                   |----  IABS                                External             
   
 
3 VTLINK
         SUBROUTINE  VTLINK(ITK)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Track link with vertex detector clusters
    Author      : B. Mours     901001
    modified by : B, Mours     910918
       adjust error for large pulses or double pulses
    modified by : B, Mours     911023
       do not associate half VDET hit to track without ITC hit
    modified by : B, Mours     920213
       change the definition of large pulses for increased errors
    modified by : D Brown,   920927
       Small change in logic for large pulseheight error assignment
    input is the track number . (in FRFT bank)
     Use extrapolated TPC+ITC tracks to the VDET. Do Track cluster
     association and fill the VTMA bank.
    modified by : A. Bonissent  950714
       Use (year sensitive) subroutine to check that hits
       in the two views are in the same wafer/module
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTRFIT                                                                          
        |---- VTLINK                                                               
                   |----  NAMIND                              External             
                   |----  NLINK                               External             
                   |----  VZERO                               External             
                   |----  VTCLAS                                                   
                   |----  VDHTER                                                   
                   |----  ABS                                 External             
                   |----  VRMWF                                                    
                   |----  MAX                                 External             
                   |----  VGWFXY                                                   
                   |----  SQRT                                External             
                   |----  ATAN2                               External             
                   |----  IAND                                External             
   
 
3 VTRFIT
         SUBROUTINE VTRFIT(ISWIM,FIELD,IER,IGARB,NMATC)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Do track-vdet clusters association and refit tracks with vdet info.
    Author      : B. Mours     901001
    modified by : B. Mours     910918
       adjust error for large pulses or double pulses
       order track using extrap. error instead of momentum
    modified by : I. Tomalin   940728
       Replace calls to MDARD by calls to ALGTDB.
       (Except for 1993 data/MC for backwards compatibility).
    modified by : F.Ranjard    950314
       remove test on 1993 ==> remove the bug for all years.
    modified by : A. Bonissent 950714
       reset NASS to a positive value (no effect for old Vdet)
    modified by : F.Ranjard 970312
       call VDTTRA in place of UFTTRA
       VDTTRA is the UFTTRA part which was doing the VDET pattern
       recognition.
       it fills the VTMA bank.
    input:  ISWIM = 1 Means you want the error matrix to be valid
                      in the region of the interaction point
                  = 0 Means you want the errors at the first measurement
            FIELD = field value used by the Kalman fitter
    return: IER   =  error flag
                     = 0  OK
                       4  not enough space for work bank  (VTRFIT)
                       5  not enough space for named bank (VTRFIT)
                       6  missing some named banks        (VTRFIT)
                      11  not enough space for named bank (VTFILL)
                      12                                  (VTFILL)
                      14                                  (VTFILL)
            IGARB = max( IGARB ) Tell the worse case for garbage
                    collection (usefull for ALPHA job)
            NMATC = Number of matched W,U (respectively)
    Banks needed:  Track bank (PRFT or FRFT), coordinate banks TPCO,
                   ITCO (and ICCO) are needed.
                   The unpacking routines should be called if needed.
    Banks created: VDCO,FVCL,  one more FRFT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VTRFIT                                                               
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  ALGTDB                              External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  MAX                                 External             
                   |----  UCOPY                               External             
                   |----  UFSWIM                                                   
                   |----  SORTZV                              External             
                   |----  VTLINK                                                   
                   |----  NLINK                               External             
                   |----  VDTTRA                                                   
                   |----  VDMSUP                                                   
                   |----  UFTMSO                                                   
                   |----  AUBPRS                              External             
                   |----  IABS                                External             
                   |----  WDROP                               External             
   
 
3 VTRKEX
         SUBROUTINE VTRKEX(BFLD,IER)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Creates vdet track extrapolation and error banks
     -
   
      Author   :- Jochen A. Lauber       4-OCT-1990
                modified David Brown 14-10-90
                modified 23-9-92 to include face extrapolation
                modified 27-2-97 (D. Casper) place VDMS on E-list for cleanup
   
      Inputs:  BFLD- Z magnetic field in KG
   
      Outputs:
           -    VTXT banks
           -    VTER banks
           -    VDMS banks
           -    IER 0=o.k. otherwise error
   
      Libraries required:
   
      Description
      ===========
       called once per event, loops over tracks
       Track extrapolation to the Mini-Vertex-Detektor Wafers
       Framework for calling VTXTRK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VTRKEX                                                               
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  BDROP                               External             
                   |----  UMSERR                                                   
                   |----  ALTELL                              External             
                   |----  VTXTRK                                                   
                   |----  IOR                                 External             
                   |----  AUBOS                               External             
                   |----  NLINK                               External             
                   |----  UZERO                               External             
                   |----  UCOPY                               External             
                   |----  SQRT                                External             
                   |----  SORTZV                              External             
                   |----  BLIST                               External             
   
 
3 VTRLAS
         LOGICAL FUNCTION VTRLAS (DUM)
  ------------------------------------------------------------------------------
    CKEY VDET LASER TRIGGER / USER
  ------------------------------------------------------------------------------
   .true. if vdet laser trigger
      Author   :- E. Lancon             30-JUN-1993
      modified : A.Wagner and F.Ranjard 12-APR-1995
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   SELEVT                                                                          
        |---- VTRLAS                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  ALFIND                              External             
                   |----  AGETDB                              External             
                   |----  CHAINT                              External             
                   |----  ALTRIG                                                   
                   |----  BTEST                               External             
   
 
3 VTRUH
         SUBROUTINE VTRUH(IHITPAT,IFK,MAXTRK)
  ------------------------------------------------------------------------------
    CKEY VDET HITS
  ------------------------------------------------------------------------------
   Count the number of properly associated
     VDET hits by layer and view.
    Input:  MAXTRK       = Dimension of IHITPAT array, should
                           be large enough to contain the largest event
                           (IE around 200)
             IFK          = best match monte carlo track for each FRFT tr
            FRFT and VDCO must be in the bank list
    Output: IHITPAT, an integer array numbered by FRFT track number,
            of which only the first 8 bits are used, as described below
            bits:     meaning
            10-11 number of inner layer good U hits on track (0,1,or2)
            12-13 number of outer layer good U hits on track     "
            14-15 number of inner layer good W hits on track     "
            16-17 number of outer layer good W hits on track     "
    19-06-96 Alain Bonissent
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              VTRUH                                                                
                   |----  NAMIND                              External             
                   |----  IOR                                 External             
                   |----  VADEWA                                                   
                   |----  IAND                                External             
   
 
3 VTXNWT
         SUBROUTINE VTXNWT (IDWAF,PAR,XYZ0,VUW,XYZ,VEC,RERRP,IERR)
  ------------------------------------------------------------------------------
    CKEY VDETDES ALIGN TRACK / USER
  ------------------------------------------------------------------------------
   Computes the exact intersection point of a track with a wafer
   - Jochen A. Lauber, 6-JUN-1990
   - Modified: G. Redlinger, 15-Oct-1990; simplified the function of
       this subroutine as part of a general reorganization of the track
       extrapolation code for the VDET.
   - Modified: G. Redlinger, 30-Jan-1991; changed arguments passed to
       VTDERV.
   - Modified to use new geometry package, S. Wasserbaech, March 1995
   - Modified: A. Bonissent, March 1995; protect against sqrt(negative)
     Modified :  D.Smith  991025  Double precision fixes for Linux
     This routine computes the intersection point of a track with
     a VDET wafer.  It starts with an approximation to the
     intersection point and performs a Newton iteration to find
     a more precise value.  The final answer includes all knowledge
     of the alignment.  IT IS UP TO THE USER TO ENSURE THAT THE
     ORIGINAL CHOICE OF WAFER AND STARTING INTERSECTION POINT
     VALUES ARE REASONABLE.
   - Input:
     IDWAF     / I  Base-10 encoded wafer identifier (a la VAENWA)
     PAR(5)    / R  Track parameters, in the order IR,TL,PH,D0,Z0
     XYZ0(3)   / R  Array containing approximate coordinates (in the
                      Aleph system) of the intersection point
   - Output:
     VUW(2)    / R  Coordinates of the intersection point in wafer
                      system: VUW(1) = U coord, VUW(2) = W coord
     XYZ(3)    / R  Coords of the intersection point in Aleph system
     VEC(3)    / R  Unit vector giving the direction of the track at the
                      intersection point in (v,u,w) system
     RERRP(10) / R  Derivatives of the position of the intersection
                      point with respect to the track parameters:
                      RERRP(1) = dU/d(rho)    RERRP(6) = dW/d(rho)
                      RERRP(2) = dU/d(tl)     RERRP(7) = dW/d(tl)
                      RERRP(3) = dU/d(phi0)   RERRP(8) = dW/d(phi0)
                      RERRP(4) = dU/d(d0)     RERRP(9) = dW/d(d0)
                      RERRP(5) = dU/d(z0)     RERRP(10) = dW/d(z0)
     IERR      / I  Error flag
                      =0 if routine ends successfully;
                      >0 if intersection point not found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTCLLD                                                                          
   VTXTRK                                                                          
        |---- VTXNWT                                                               
                   |----  VADEWA                                                   
                   |----  SQRT                                External             
                   |----  ASIN                                External             
                   |----  SIGN                                External             
                   |----  MIN                                 External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  RFDIST                              External             
                   |----  VTDERV                                                   
   
 
3 VTXRAW
         SUBROUTINE VTXRAW(TPAR,RADI,GPOS0,PTRK,IERR)
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
   Compute a crude vdet track extrapolation point
   
     - Calculate Z and phi for a given R.
   
      AUTHORS  :- S. MENARY   JAN.  8 1990
                  J. LAUBER   MAY  16 1990
                  D. BROWN    OCT  14 1990
                  D. Brown  13-10-93  Rewritten to avoid recurrent problems
      Modified :  D.Smith  991025  Double precision fixes for Linux
   
      Inputs:
              TPAR  = FRFT- track parameters
              RADI  = Radius at which to calculate the co-ordinates
   
      Outputs:
              GPOS0   = XYZ position of track at radius radi
              PTRK    = phi of track at radius radi
              IERR    = 0     o.k.
                      = 1     problem
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VDEXCY                                                                          
        |---- VTXRAW                                                               
                   |----  ABS                                 External             
                   |----  SIGN                                External             
                   |----  SQRT                                External             
                   |----  DATAN2                              External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  ATAN2                               External             
   
 
3 VTXTRK
         SUBROUTINE VTXTRK(TPAR,TERR,RSIGU,RSIGW,
  ------------------------------------------------------------------------------
    CKEY VDET TRACK
  ------------------------------------------------------------------------------
        &  NHIWA,IWAFI,LCPOS,LCMOM,LCERR,LCDER,GBPOS,IFLAG,IER,
        &  NFACE,IFACE,FPOS,FMOM,FRAD,JFLAG)
   Extrapolate a given track to all intersecting vdet wafers
   
      Author   :- Jochen A. Lauber       4-OCT-1990
                modified David Brown 14-10-90
                modified 23-9-92 to include face extrapolation
                (IE including non-active areas).  David Brown
                modified 24-5-93 Check Z cylinder extrapolation.G.Taylor
         Modified A. Bonissent March 1995 :
                   Use geometry package, so that Vdet 91 or 95 can be used
      Inputs:
           TPAR       - 5 Track parameters, as in FRFT
           TERR       - 15 parameter error matrix on these parameters
           RSIGU,RSIGW- # of sigma beyond edge of active region to keep
                        a track- also flag the track if within this # of
                        on either side.
   
      Outputs: All sized for the maximum possible number of hit wafers
           NHIWA      - number of hit wafers, ranges from 0 to 4
           IWAFI(4)   - wafer identifier as in VDENWA
           LCPOS(2,4) - UW co-ordinate of extrapolation point,
                         EACH HIT WAFER HAS IT'S OWN VUW CO-ORDINATE SYST
           GBPOS(3,4) - XYZ co-ordinate of extrapolation point
           LCMOM(3,4) - VUW momentum direction unit vector at the ex. poi
                            EACH HIT WAFER HAS IT'S OWN VUW CO-ORDINATE S
           LCERR(36)  - Triangular error matrix of local position
           LCDER(10,4)- derivatives of local coordinates U+W
                            to the 5 track parms
           IFLAG(4)   - flag to warn for tracks near wafer edges
           IER        - status of processing , 0 : everything o.k.
   
           NFACE      - Number of hit faces
           IFACE      - Module address of hit face; WAFER ID should be ig
           FPOS       - U,W hit position in FACE coordinate system (only
                        is different from wafer coordinate system)
           FRAD       - Radius of track extrapolation point in ALEPH syst
           FMOM       - Momentum direction unit vector in local system
           JFLAG(4)   - flag for tracks beyond face borders
   
      Libraries required:
   
      Description
      ===========
      called once per track
      Decides which 4 wafers to try extrapolating the track to (2 per lay
      Decides whether to keep the extrapolated points
      Calls VTXNWT to do the actual extrapolation
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   VTRKEX                                                                          
        |---- VTXTRK                                                               
                   |----  VFADIM                                                   
                   |----  VNRWAF                                                   
                   |----  VNRMOD                                                   
                   |----  VABCXY                                                   
                   |----  VSENSI                                                   
                   |----  MAX                                 External             
                   |----  VDEXCY                                                   
                   |----  VAENWA                                                   
                   |----  VTXNWT                                                   
                   |----  VWFFND                                                   
                   |----  SQRT                                External             
                   |----  TRSA                                External             
   

2 XLUM

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     XLUMOK package
     ! 981803 correction file no.3 for ALEPHLIB 31.0
         XHVFIX : Fixes to varaiable declarations (A.Waananen)
    
     ! 981703 correction file no.2 for ALEPHLIB 31.0
         XHVFIX : Bug fix, database was initialised with period number
                  instead of run number                                (M.Cattaneo)
    
     ! 981103 correction file no.1 for ALEPHLIB 31.0
         XHVBIT.H : New. Contains HV bit definitions                   (M.Cattaneo)
         XHVFIX : New. Repairs HV bits when they are known to be wrong (B.Bloch)
         XHVSTA : Add call to XHVFIX.                                  (B.Bloch)
                  Take HV bit definitions from XHVBIT.H                (M.Cattaneo)
         XLSLUM : Take HV bit definitions from XHVBIT.H                (M.Cattaneo)
    
     ! 980715 correction file no.2 for ALEPHLIB 30.8
        XLSLUM : keep trying to get Trigger Enable mask if not present 
                 for first event of run                         (B.Bloch)
    
     ! 980605 correction file no.1 for ALEPHLIB 30.8
        XTGENB : Bug fix, NAXTBN,NAXTOP were incorrectly initialised
                                                               (B.Bloch,G.Taylor)
    
     ! ALEPHLIB 308
       XLSLUM : For real data: after run 45000 (1998) require VDET ok  (B.Bloch)
    
     ! ALEPHLIB 307
       New package which brings together various XLUMOK related routines from Julia
       and Alpha. Includes also XVDEOK routines
    
       XLUMOK adaptations by Brigitte Bloch, XVDEOK by Henry Seywerd
       Code reviewed and optimised by Marco Cattaneo
       
       LLUMOK : Checks HV status, enabled triggers, and t0 synch. for LCAL
       SLUMOK : Checks HV status, enabled triggers, and t0 synch. for SICAL
       VBITGD : Checks readout status of VDET
       XHVBIT : Returns raw HV status bits, without run/detector specific repairs
       XHVSTA : Check HV status bits (from QHVSTA in ALPHA)
       XLSLUM : Checks HV status, enabled triggers, and t0 synchronization
       XLUMOK : Checks HV status, enabled triggers, and t0 synchronization, both
                for SICAL and LCAL with year dependent setup
       XRE133 : Flags laser events taken during LEP 1.5 data (from QRE133 in ALPHA)
       XRE94  : Flags laser events hidden in runs 25520 to 25530 taken in 1994
                (from QRE94 in ALPHA)
       XT0SYN : Get t0 synchronization information
       XTGENB : Check which triggers are enabled
       XVDEOK : Determines HV state of VDET
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     LLUMOK     Checks hv status, enabled triggers, and t0 synchronization for lcal
     SLUMOK     Checks hv status, enabled triggers, and t0 synchronization for sical
     VBITGD     Check readout state of vdet.
     XHVBIT     Returns raw hv status bits, without run/detector specific repairs.
     XHVFIX     Fix hv status bits
     XHVSTA     Check hv status bits
     XLSLUM     Checks hv status, enabled triggers, and t0 synchronization
     XLUMOK     Checks hv status, enabled triggers, and t0 synchronization, both
     XRE133     Flags laser events taken during lep 1.5 data
     XRE94      Flag laser events hidden in runs 25520 to 25530 taken in 1994
     XT0SYN     Get t0 synchronization information
     XTGENB     Check which triggers are enabled.
     XVDEOK     Determine hv state of vdet.

3 LLUMOK
         LOGICAL FUNCTION llumok(dum)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG /USER
  ------------------------------------------------------------------------------
   Checks hv status, enabled triggers, and t0 synchronization for lcal
    Called from user
       Author:     H. Meinhard/B.Bloch       26-Apr-1993
   
       Output:     - LLUMOK  /L      LCAL okay
   
       Description
       ===========
       see routine xlslum
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              LLUMOK                                                               
                   |----  XLSLUM                                                   
   
 
3 SLUMOK
         LOGICAL FUNCTION slumok(dum)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG /USER
  ------------------------------------------------------------------------------
   Checks hv status, enabled triggers, and t0 synchronization for sical
    Called from user
       Author:     H. Meinhard/B.Bloch       26-Apr-1993
   
       Output:     - SLUMOK  /L      SICAL okay, or SICAL not existing
   
   
       Description
       ===========
       see routine xlslum
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              SLUMOK                                                               
                   |----  XLSLUM                                                   
   
 
3 VBITGD
         INTEGER FUNCTION vbitgd()
  ------------------------------------------------------------------------------
    CKEY VDET / USER
  ------------------------------------------------------------------------------
   Check readout state of vdet.
   
      Author   : HCJ Seywerd           13-Nov-1997
                 New routine for handling periods when
                 VDET HV bit was unreliable. Gets this information
                 from the database. Replaces different routines
                 previously in ALPHA and JULIA
      Modified : M.Cattaneo             2-Dec-1997
                 Optimise access to banks, remove local arrays
   
      Returns:  0 if in a period when readout was GOOD; otherwise
               +1 if HV appears to be ON; or
               -1 if HV appears to be OFF.
   
               If the readout status is GOOD, Vdet information is read
               from ALEPH when the HV is ON and is not read out when OFF.
               If the readout status is BAD, the Vdet information may be
               read. If the Vdet is ON, this is fine; however if it is
               OFF, spurious noise hits will be produced.
               For MC always in GOOD state.
   
               Periods when the status is BAD and the Vdet is OFF have
               been identified from the Vdet noise (number of hits in
               VFHL bank).
               In these cases, VBITGD is -1 and FRFT/2 tracks are dubious
               - this means the tracks stored on the Mini are dubious.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XVDEOK                                                                          
        |---- VBITGD                                                               
                   |----  ABRUEV                              External             
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  NAMIND                              External             
                   |----  LROWS                               External             
   
 
3 XHVBIT
         INTEGER FUNCTION XHVBIT(jhvst)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG /INTERNAL
  ------------------------------------------------------------------------------
   Returns raw hv status bits, without run/detector specific repairs.
      Not to be used for MonteCarlo
   
      Called from XHVSTA, VDHVOK
   
      Author   :   M.Cattaneo         2-Dec-1997
      (Code extracted from B.Bloch adaptation of QHVSTA from Alpha)
   
      Inputs:           None
      Outputs:          Integer JHVST = HV status bits word
   
      Return value:     Flags which bank was used to get HV bit:
                        0 - No bank found
                        1 - XTCN
                        2 - X1RG
                        3 - REVH
                        4 - LUPA
                        5 - SILH
   
      Description:
        To be used within any ALEPH program
        Returns the High Voltage status of ALEPH according to
        the bit mapping of X1RG or XTCN ( when reading Raw Data),
        REVH, word 1 (POT).
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   ALTRHV                                                                          
   TCHKHV                                                                          
   XHVSTA                                                                          
   XVDEOK                                                                          
        |---- XHVBIT                                                               
                   |----  NAMIND                              External             
   
 
3 XHVFIX
         SUBROUTINE XHVFIX(XHV)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG HV /INTERNAL
  ------------------------------------------------------------------------------
   Fix hv status bits
      Called from XHVSTA
      Author   :-       B. Bloch October 98   general fix routine
   
      Inputs:           Data Base bank XHVB
   
      Outputs:          logical array XHV(24)
   
      Libraries required: Alephlib
   
      Description:
        Load year dependent XHVB bank from database.
        Returns the High Voltage status of ALEPH according to
        the bit mapping. Special care is taken to repair
        some run-specific cases where the normal HV bits do not reflect
        the actual detector status.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XHVSTA                                                                          
        |---- XHVFIX                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  ADBRUN                              External             
                   |----  AGETDB                              External             
                   |----  IW                                  External             
                   |----  LROWS                               External             
                   |----  ITABL                               External             
   
 
3 XHVSTA
         SUBROUTINE XHVSTA(XHV)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG /INTERNAL
  ------------------------------------------------------------------------------
   Check hv status bits
      Called from XLSLUM
      Author   :-       J.Wear            8-FEB-1990
       Modified:   H. Meinhard       27-Apr-1993  (1) - Add Sical
       Modified:   B. Bloch          November 97  adapted from QHVSTA in ALPHA
                                     to go to Alephlib
       Modified:   B. Bloch       October 98   call general fix routine XHVFIX
   
      Inputs:           None
   
      Outputs:          logical array XHV(24)
   
      Libraries required:
   
      Description:
        To be used within any ALEPH program
        Returns the High Voltage status of ALEPH according
        the bit mapping of X1RG or XTCN ( when reading Raw Data),
        REVH, word 1 (POT). Special care is taken to repair
        some run-specific cases where the REVH bits do not reflect the
        actual detector status.
       For DST-compatibility
         0) Conventional triggers  -- use REVH and LOLE
         1) Luminosity-only events -- use REVH and LUPA's copy of LOLE
           (for Lcal events )  or  SILH's copy of LOLE (for Sical events)
         2) Single Neutral EM-only -- XLUMOK is FALSE. (no LOLE bank)
        Monte Carlo runs are returned with .TRUE. (on) status.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XLSLUM                                                                          
        |---- XHVSTA                                                               
                   |----  NAMIND                              External             
                   |----  ABRUEV                              External             
                   |----  NHVBITXHV                           External             
                   |----  XHVBIT                                                   
                   |----  BTEST                               External             
                   |----  XHVFIX                                                   
   
 
3 XLSLUM
         SUBROUTINE XLSLUM(XLUM, SLUM, LLUM)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG /INTERNAL
  ------------------------------------------------------------------------------
   Checks hv status, enabled triggers, and t0 synchronization
    Called from LLUMOK,SLUMOK,XLUMOK
       Author:     H. Meinhard   26-Apr-1993
       Modified    B. Bloch      November 1997, back to Lcal Lumi> oct 95
       Modified    B. Bloch      April    1998, require VDET ok  > apr 98
       Modified    B. Bloch      July     1998, keep trying to get Trigger
                   Enable mask if not present for first event of run
   
       Input:      - trigger banks, REVH bank, LOLE bank
       Output:     - XLUM    /L      both LCAL and SICAL okay
                   - SLUM    /L      SICAL okay
                   - LLUM    /L      LCAL okay
   
       Description
       ===========
       Merges former XLUMOK (based on LCAL) and SLUMOK flags. Based on
       programs by John Harton, Jim Wear, Brigitte Bloch.
       Purpose: Checks whether this event is viable on the basis of the
       minimal criteria set by general analyses. It checks to see if the
       ECAL, LCAL/SICAL, TPC (tracking), ITC, HCAL HV bits are set and
       whether the Hadronic Z, LCAL/SICAL luminosity, and single charged
       EM triggers are enabled.
       For MC data:   XLUM always .TRUE.
                      SLUM .TRUE. if Sical simulated
                      LLUM always .TRUE.
       For real data: before run 16'500:
                      LLUM .TRUE. if all required HV except SiCAL on, all
                           required triggers except SICAL enabled
                      SLUM .FALSE.
                      XLUM = LLUM
       For real data: after run 16'500:
                      LLUM .TRUE. if all required HV except SiCAL on, all
                           required triggers except SICAL enabled, t0
                           synchronization okay
                      SLUM .TRUE. if all required HV except LCAL on, all
                           required triggers except LCAL enabled, t0
                           synchronization okay
                      XLUM = SLUM .AND. LLUM
       For real data: after run 40000 ( 1995 Lep 1.5 and Lep 2 back to LCAL
                      for Lumi, Sical used as calorimeter)
                      LLUM .TRUE. if all required HV including SiCAL on, all
                           required triggers except SICAL enabled, t0
                           synchronization okay
                      SLUM .TRUE. if all required HV except LCAL on, all
                           required triggers except LCAL enabled, t0
                           synchronization okay
                      XLUM = SLUM .AND. LLUM
       For real data: after run 45000 ( 1998 Lep 2 , require VDET ok)
                      XLUM = SLUM .AND. LLUM .AND. XVDEOK
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   LLUMOK                                                                          
   SLUMOK                                                                          
   XLUMOK                                                                          
        |---- XLSLUM                                                               
                   |----  ABRUEV                              External             
                   |----  GTSTUP                              External             
                   |----  XTGENB                                                   
                   |----  XHVSTA                                                   
                   |----  XT0SYN                                                   
                   |----  XRE133                                                   
                   |----  XRE94                                                    
                   |----  XVDEOK                                                   
   
 
3 XLUMOK
         LOGICAL FUNCTION XLUMOK(DUMMY)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG /USER
  ------------------------------------------------------------------------------
   Checks hv status, enabled triggers, and t0 synchronization, both
    for SICAL and LCAL with year dependent setup
    Called from user
       Author:     H. Meinhard/B.Bloch       26-Apr-1993
   
       Output:     - XLUMOK  /L      both LCAL and SICAL okay, or SICAL
                                     not existing
   
       Description
       ===========
       see routine XLSLUM
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              XLUMOK                                                               
                   |----  XLSLUM                                                   
   
 
3 XRE133
         LOGICAL FUNCTION XRE133(KRUN,KEVT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    Author : J. Boucrot, March 06 1997
    Modified : B Bloch from QRE133(ALPHA)for alephlib,Nov 1997
   Flags laser events taken during lep 1.5 data
       XRE133 = .True.  if NOT laser TPC event
       XRE133 = .False. if unrecognisable TPC laser event
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XLSLUM                                                                          
        |---- XRE133.                                                              
   
 
3 XRE94
         LOGICAL FUNCTION XRE94(KRUN,KEVT)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   
    Author : J. Boucrot, October 29 1997
    Modified : B Bloch from QRE94(ALPHA)for alephlib,Nov 1997
   Flag laser events hidden in runs 25520 to 25530 taken in 1994
    in these runs the X1RG bank is unusable to flag these events
       XGOOD = .True.  if NOT laser TPC event
       XGOOD = .False. if TPC laser event
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XLSLUM                                                                          
        |---- XRE94                                                                
                   |----  NAMIND                              External             
                   |----  BTEST                               External             
   
 
3 XT0SYN
         LOGICAL FUNCTION XT0SYN(KRUN)
  ------------------------------------------------------------------------------
    CKEY  XLUMOK TRIG/INTERNAL
  ------------------------------------------------------------------------------
   Get t0 synchronization information
    Called from XLSLUM
       Author:     H. Meinhard       27-Apr-1993
   
       Input:      - banks XTBN, XTRB
       Output:     - XT0SYN  /L      trigger synchronized with beam-X
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XLSLUM                                                                          
        |---- XT0SYN                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
                   |----  CLTOU                               External             
                   |----  IBSET                               External             
                   |----  ALTRIG                                                   
                   |----  IAND                                External             
   
 
3 XTGENB
         SUBROUTINE XTGENB(IRUN,XTGQOK,XTGLOK,XTGSOK)
  ------------------------------------------------------------------------------
    CKEY XLUMOK TRIG /INTERNAL
  ------------------------------------------------------------------------------
   Check which triggers are enabled.
       Called from XLSLUM
       Author   :- J.Wear                  22-MAR-1990
       Modified:   H. Meinhard       27-Apr-1993  (1) - Add Sical, return
                   different flags for LCAL and SICAL
       Modified:   H. Meinhard       24-May-1993  (2) - Introduce changes
                   due to 1993 trigger setup
       Modified:   B.Bloch           11-May-1994  (1) - Use X1RG instead
                   of XTOP dropped in the trigger upgrade of 1994
       Modified:   B.Bloch           15-Jan-1997  (1) - Use LUPA or SILH
                   if X1RG missing in Luminosity only triggers
                   Update LCAL trigger name for High energy running>oct95
       Modified:   B.Bloch,G.Taylor   5-Jun-1998
                   Bug fix, NAXTBN,NAXTOP were incorrectly initialised
   
      Inputs:  IRUN -- Run number
           -
      Outputs: XTGQOK  /L    all essential large-angle triggers enabled
               XTGLOK  /L    all essential LCAL triggers enabled
               XTGSOK  /L    all essential SICAL triggers enabled
           -
      Libraries required:
   
      Description
      ===========  If principal physics triggers and bhabha
      triggers are enabled XTGENB returns true.  For use in determining
      whether to count runs/events in the "ideal case" luminosity
      determination.  Each running period has distinct trigger names for
      these required triggers, so each period must have its own list.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XLSLUM                                                                          
        |---- XTGENB                                                               
                   |----  NAMIND                              External             
                   |----  CHAINT                              External             
                   |----  CLTOU                               External             
                   |----  MHDRQ                               External             
                   |----  MHDRL                               External             
                   |----  MHDRS                               External             
                   |----  IAND                                External             
   
 
3 XVDEOK
         LOGICAL FUNCTION XVDEOK(dummy)
  ------------------------------------------------------------------------------
    CKEY VDET /USER
  ------------------------------------------------------------------------------
   Determine hv state of vdet.
      This is a routine to replace xvdeok and vdetok
      as they are now used in alpha and julia respectively
      and is intended for alephlib.
      Check if VDET HV is on or not
      Make additional checks on periods when HV bit had problems.
   
      Author   : HCJ Seywerd            13-NOV-1997
      Modified : M.Cattaneo              2-Dec-1997
                 Optimise access to banks, remove local arrays
   
      Inputs:
              LUDBAS -- unit for dbase
      Outputs: .TRUE. if the HV state of the VDET is ON.
               For MC always .TRUE.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   XLSLUM                                                                          
        |---- XVDEOK                                                               
                   |----  ABRUEV                              External             
                   |----  VBITGD                                                   
                   |----  JUNIDB                              External             
                   |----  MDARD                               External             
                   |----  NAMIND                              External             
                   |----  LROWS                               External             
                   |----  XHVBIT                                                   
                   |----  BTEST                               External             
   

2 YSV

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     * Correction file 2 to Alephlib 30.7
        YSKLLD : Protect against too many tracks                       (D.Casper)
        YSVTRK : Check object quality flag to protect against too many 
                 tracks and other catastrophes                         (D.Casper)
    
      ! ALEPHLIB 30.6
        YSPAIR : Do not put in YSVX/-2 track pairs failing cuts        (D.Casper)
        YSVRTX : Remove cut on max number of FRFT tracks               (D.Casper)
                 Fix variable type inconsistencies in function calls, 
                 for Linux                                           (A.Waananen)
        YSVTBK : Use hit bitmasks to verify track direction            (D.Casper)
        YSVTRK : Put only JYSVQU=0 objs. in mask of objs. already used (D.Casper)
           
      ! ALEPHLIB 30.5
        YSKLLD : Do not check for V0s or ITC tracks in the kink veto (D.Casper)
        YSVFIT : Include only charged tracks in the kink veto        (D.Casper)
                 Clear vertex quality flag (bug fix, 090997)         (D.Casper)
        YSCLLD,YSGETS,YSPCUT,YSTLLD,YSVBLD,YSVRTX,YSVTBK,YSVTRK :
          Changes to interface nuclear interactions and kinks to
          energy flow package (ENFLW 300)                            (D.Casper)
    
      ! ALEPHLIB 30.2
        new package to find secondary vertices (D.Casper).
    
        YSVRTX - main routine of the new /ysv package which finds secondary vertices.
                 the routine is DUMMY for the moment.
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     YS0ADD     Add a v0 to the work bank to be fitted
     YS0CLR     Drop v0 work banks
     YS0LLD     Create ys0l bank and store information about v0s
     YS0SET     Create workbank to hold v0's to be fit
     YSCADD     Add an itc track to the work bank to be fitted
     YSCCLR     Drop circle work banks
     YSCLLD     Create yscl bank and store information about itc tracks
     YSCSET     Create workbank to hold itc tracks to be fit
     YSFCLR     Drop work banks for secondary vertex fit
     YSFSET     Create work banks for secondary vertex fit
     YSFTLD     Load the tracks in mask into the list to be fitted
     YSGETS     Calculate the position of ysvx vertex along track itk in cm (+ or -)
     YSKLLD     Flag pairs of tracks identified as a kink
     YSPAIR     Fit pairs of helices and v0s to a common vertex
     YSPCUT     Apply cuts to pair vertices and set vertex quality flag
     YSPVFT     Fit tracks and v0s to primary vertex
     YSTADD     Add a track to the work bank to be fitted
     YSTCLR     Drop track work banks
     YSTLLD     Create ystl bank and store information about tracks
     YSTSET     Create workbank to hold tracks to be fit
     YSVADD     Add a vertex to the work bank to be fitted
     YSVBLD     Find secondary charged and neutral vertices
     YSVCLR     Drop vertex work banks
     YSVFIT     Perform fit using vertex, track, and v0 indices in work banks.
     YSVMAT     Tag as bad any vertices which are not in a layer of material
     YSVMRG     Combine pair vertices sharing tracks
     YSVRTX     Steering for secondary vertex search
     YSVSET     Create workbank to hold vertices to be fit
     YSVSRT     Clean up ysvx banks, sorting by chi^2, flagging overlaps, and trim
     YSVTBK     Create vsvt vertex->track relation bank
     YSVTRK     Try to add helices, circles, and v0's to existing vertices
     YSVX0L     Create ysvx/0 and load primary vertex

3 YS0ADD
         SUBROUTINE YS0ADD(IROW,IV0,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Add a v0 to the work bank to be fitted
         Author:  D.Casper 04/07/96
     Input:  IROW = row of work bank to load
             ITK  = V0 number (row) in VS0L
     Output:
             IER = -1 Bank missing
             IER = 1  Illegal row
             IER = 0  Normal
     Procedure:  Load the V0 into the requested row of the work bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFTLD                                                                          
   YSPAIR                                                                          
   YSPVFT                                                                          
        |---- YS0ADD                                                               
                   |----  NAMIND                              External             
                   |----  MIN                                 External             
                   |----  IBSET                               External             
                   |----  MOD                                 External             
   
 
3 YS0CLR
           SUBROUTINE YS0CLR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Drop v0 work banks
         Author:  D.Casper   04/07/96
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFCLR                                                                          
        |---- YS0CLR                                                               
                   |----  WDROP                               External             
   
 
3 YS0LLD
         SUBROUTINE YS0LLD(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create ys0l bank and store information about v0s
         Author: D. Casper  1-jul-1996
         Returns:  IER = 0 if V0'S loaded
                   IER =-1 if missing bank
                   IER = 1 if no room in BOS
         Input banks:    YLV0 (if present)   List of high-purity V0's
         Output bank:    YSV0                Internal V0 list
         Modifies:       YSTL                Internal track list; tracks
                                             on a V0 are flagged.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YS0LLD                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  IOR                                 External             
                   |----  YFMVTR                                                   
                   |----  YTPAR                                                    
                   |----  AUBPRS                              External             
   
 
3 YS0SET
         SUBROUTINE YS0SET(NV0,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create workbank to hold v0's to be fit
         Author:  D.Casper 04/07/96
             IER = 1 Unable to create workbank
             IER = 0 Normal
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFSET                                                                          
        |---- YS0SET                                                               
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
   
 
3 YSCADD
           SUBROUTINE YSCADD(IROW,ITK,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Add an itc track to the work bank to be fitted
         Author:  D.Casper 04/07/96
     Input:  IROW = row of work bank to load
             ITK  = track number (row) in VSCL
     Output:
             IER = -1 Bank missing
             IER = 1  Illegal row
             IER = 0  Normal
     Procedure:  Load the track into the requested row of the work bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFTLD                                                                          
   YSPVFT                                                                          
        |---- YSCADD                                                               
                   |----  NAMIND                              External             
                   |----  MIN                                 External             
                   |----  VZERO                               External             
                   |----  IBSET                               External             
                   |----  MOD                                 External             
                   |----  UCOPY                               External             
   
 
3 YSCCLR
           SUBROUTINE YSCCLR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Drop circle work banks
         Author:  D.Casper   04/07/96
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFCLR                                                                          
        |---- YSCCLR                                                               
                   |----  WDROP                               External             
   
 
3 YSCLLD
         SUBROUTINE YSCLLD(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create yscl bank and store information about itc tracks
         Author: D. Casper  10-jul-1996
         Returns:  IER = 0 if tracks loaded
                   IER = -1 if input bank(s) missing
                   IER = 1 if no room in BOS
         Input banks:    FRFT    Track list
                         FRTL    Coordinate information used to identify
                                 ITC-only tracks ("circles")
                         FICL    ITC coordinate list
                         ICCO    ITC coordinates
                         FTCL    TPC coordinate list
                         TPCO    TPC coordinates
         Output bank:    YSCL    Internal list of ITC-only tracks
         Modifies:       YSFT    Lookup from FRFT row to YSCL row;
                                 ITC-only tracks are negative numbers.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSCLLD                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  IOR                                 External             
                   |----  IABS                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  UCOPY                               External             
                   |----  YHELIX                                                   
                   |----  ABS                                 External             
                   |----  AUBPRS                              External             
   
 
3 YSCSET
         SUBROUTINE YSCSET(NCIR,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create workbank to hold itc tracks to be fit
         Author:  D.Casper 04/07/96
             IER = 1 Unable to create workbank
             IER = 0 Normal
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFSET                                                                          
        |---- YSCSET                                                               
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
   
 
3 YSFCLR
           SUBROUTINE YSFCLR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Drop work banks for secondary vertex fit
         Author:  D.Casper 04/07/96
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFSET                                                                          
   YSPAIR                                                                          
   YSPVFT                                                                          
   YSVMRG                                                                          
   YSVTRK                                                                          
        |---- YSFCLR                                                               
                   |----  YS0CLR                                                   
                   |----  YSTCLR                                                   
                   |----  YSVCLR                                                   
                   |----  YSCCLR                                                   
   
 
3 YSFSET
           SUBROUTINE YSFSET(NVX,NTK,NV0,NCIR,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create work banks for secondary vertex fit
         Author:  D.Casper 04/07/96
         NVX, NTK, NV0, NCIR:  Number of vertices, tracks, V0s and circles
         IER:    Return code from individual set-up routines
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFTLD                                                                          
   YSPAIR                                                                          
   YSPVFT                                                                          
        |---- YSFSET                                                               
                   |----  YSFCLR                                                   
                   |----  YSVSET                                                   
                   |----  YSTSET                                                   
                   |----  YS0SET                                                   
                   |----  YSCSET                                                   
   
 
3 YSFTLD
           SUBROUTINE YSFTLD(MASK, IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Load the tracks in mask into the list to be fitted
         Author:  D.Casper   17/07/96
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVMRG                                                                          
   YSVTRK                                                                          
        |---- YSFTLD                                                               
                   |----  IBSET                               External             
                   |----  NUMBIT                              External             
                   |----  YSFSET                                                   
                   |----  IAND                                External             
                   |----  YSTADD                                                   
                   |----  YSCADD                                                   
                   |----  YS0ADD                                                   
   
 
3 YSGETS
           REAL FUNCTION YSGETS(IYSVX,ITKIN,IOBJ)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Calculate the position of ysvx vertex along track itk in cm (+ or -)
     Input:  IYSVX   BOS index of vertex in YSVX bank
             ITKIN   row number in YSTL, YSCL, or YS0l
             IOBJ    = 1, 2, 3 for helices, circles, and V0's, respectively
         Author:  D.Casper  08-07-96
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSPCUT                                                                          
        |---- YSGETS                                                               
                   |----  NAMIND                              External             
                   |----  IABS                                External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  YHELIX                                                   
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 YSKLLD
           SUBROUTINE YSKLLD(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Flag pairs of tracks identified as a kink
     Returns IER = 0 if successful
         Author - D. Casper      15/07/96
         Modified                08/08/97  Include only charged tracks in
                                           the kink veto.
                                 03/02/98  Protect against too many tracks
         Input bank:     YKNK    (if present)
                         YSFT    Translation from FRFT row to YSTL row
                         YSTL    Track list
         Output bank:    INDYSKL Mask of tracks identified with a kink
                                 (work bank)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSKLLD                                                               
                   |----  NAMIND                              External             
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
                   |----  MOD                                 External             
                   |----  IBSET                               External             
   
 
3 YSPAIR
         SUBROUTINE YSPAIR(NGOOD,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Fit pairs of helices and v0s to a common vertex
         Author:  D.Casper 04/07/96
       Modified:  D.Casper 30/09/97
                  Do not put in YSVX/-2 track pairs failing cuts
         Returns:
         NGOOD = Number of vertices passing the cuts
         IER = -1 if input banks not found
         IER = 1  if output banks could not be created
         IER = 0  if normal return
         Input banks:    YSTL    Helix list
                         YS0L    V0 list
         Output bank:    YSVX/-2 List of all pair vertices
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSPAIR                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  YSFSET                                                   
                   |----  YSTADD                                                   
                   |----  YSVFIT                                                   
                   |----  NLINK                               External             
                   |----  YSPCUT                                                   
                   |----  YS0ADD                                                   
                   |----  YSFCLR                                                   
   
 
3 YSPCUT
           SUBROUTINE YSPCUT(KYSVX,IT1,IT2)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Apply cuts to pair vertices and set vertex quality flag
         Author:  D.Casper 08/07/1996
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSPAIR                                                                          
        |---- YSPCUT                                                               
                   |----  NAMIND                              External             
                   |----  IOR                                 External             
                   |----  MIN                                 External             
                   |----  MAX                                 External             
                   |----  YSGETS                                                   
                   |----  SQRT                                External             
                   |----  ALFIEL                                                   
                   |----  ABS                                 External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 YSPVFT
         SUBROUTINE YSPVFT(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Fit tracks and v0s to primary vertex
         Author:  D.Casper 04/07/96
         IER = -1 if input banks not found
         IER = 1  if output banks could not be created
         IER = 0  if normal return
         Input banks:    YSTL        Internal list of helices
                         YSCL        Internal list of circles
                         YSVX/0      Primary vertex
         Output bank:    YSVX/1      Fit of each track, circle and V0
                                     with primary vertex
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSPVFT                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  YSFSET                                                   
                   |----  YSVADD                                                   
                   |----  YSTADD                                                   
                   |----  YSVFIT                                                   
                   |----  NLINK                               External             
                   |----  YSCADD                                                   
                   |----  YS0ADD                                                   
                   |----  YSFCLR                                                   
   
 
3 YSTADD
         SUBROUTINE YSTADD(IROW,ITK,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Add a track to the work bank to be fitted
         Author:  D.Casper 04/07/96
     Input:  IROW = row of work bank to load
             ITK  = track number (row) in VSTL
     Output:
             IER = -1 Bank missing
             IER = 1  Illegal row
             IER = 0  Normal
     Procedure:  Load the track into the requested row of the work bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFTLD                                                                          
   YSPAIR                                                                          
   YSPVFT                                                                          
        |---- YSTADD                                                               
                   |----  NAMIND                              External             
                   |----  MIN                                 External             
                   |----  VZERO                               External             
                   |----  IBSET                               External             
                   |----  MOD                                 External             
                   |----  UCOPY                               External             
   
 
3 YSTCLR
           SUBROUTINE YSTCLR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Drop track work banks
         Author:  D.Casper   04/07/96
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFCLR                                                                          
        |---- YSTCLR                                                               
                   |----  WDROP                               External             
   
 
3 YSTLLD
         SUBROUTINE YSTLLD(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create ystl bank and store information about tracks
         Author: D. Casper  1-jul-1996
         Returns:  IER = 0 if tracks loaded
                   IER = -1 if input bank(s) missing
                   IER = 1 if no room in BOS
         Input banks:    FRFT    Track fits in ITC/VDET
                         FRTL    Coordinate information used to identify
                                 ITC-only tracks
                         TGFT    Track parameters in TPC
                         FTCL    Coordinate lists in TPC
                         TPCO    Coordinates in TPC
                         FICL    Coordinate lists in ITC
                         ICCO    Coordinates in ITC
                         FVCL    Coordinate lists in VDET
                         VDCO    Coordinates in VDET
         Output banks:   YSTL    TPC track list in internal format
                         YSFT    Pointer from FRFT->YSTL (if positive)
                                 and YSCL (if negative).
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSTLLD                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  IOR                                 External             
                   |----  IABS                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
                   |----  UCOPY                               External             
                   |----  YHELIX                                                   
                   |----  ABS                                 External             
                   |----  AUBPRS                              External             
   
 
3 YSTSET
         SUBROUTINE YSTSET(NTK,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create workbank to hold tracks to be fit
         Author:  D.Casper 04/07/96
             IER = 1 Unable to create workbank
             IER = 0 Normal
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFSET                                                                          
        |---- YSTSET                                                               
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
   
 
3 YSVADD
         SUBROUTINE YSVADD(IROW,NR,IVX,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Add a vertex to the work bank to be fitted
         Author:  D.Casper 04/07/96
     Input:  IROW = row of work bank to load
             NR   = number of YSVX bank with vertex to be added
             IVX  = vertex number (row) in this bank
     Output:
             IER = -1 Bank missing
             IER = 1  Illegal row
             IER = 0  Normal
     Procedure:  Load the vertex into the requested row of the work bank
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSPVFT                                                                          
        |---- YSVADD                                                               
                   |----  NLINK                               External             
                   |----  UCOPY                               External             
   
 
3 YSVBLD
         SUBROUTINE YSVBLD(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Find secondary charged and neutral vertices
    IER = 0 if successful
     Input banks:    FRFT    Track fits
                     YLV0    High-purity long V0s (if any)
                     PYER    Primary vertex
     Output banks:   YSVX    Reconstructed vertex candidates;
                             NR = 0 contains the primary vertex
                             NR = 1 contains a fit of each track and
                                    V0 to the primary
                             NR < 0 contains all vertices with a number
                                    of constituents = ABS(NR); hence NR=-2
                                    contains all two-track vertices, NR=-3
                                    contains all three-track vertices, etc
                                    (negative number is done so that a loop
                                    starting with IW(NAMIND('YSVX')) begins
                                    with the highest multiplicity vertices
                                    (which are built from lower multiplicity
                                    vertices).
     Author   :- D. Casper   30-jun-1996
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVRTX                                                                          
        |---- YSVBLD                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  ALFIEL                                                   
                   |----  YSVX0L                                                   
                   |----  YSTLLD                                                   
                   |----  YSKLLD                                                   
                   |----  YS0LLD                                                   
                   |----  YSCLLD                                                   
                   |----  YSPVFT                                                   
                   |----  YSPAIR                                                   
                   |----  YSVMRG                                                   
                   |----  YSVTRK                                                   
                   |----  BLIST                               External             
                   |----  AUBPRS                              External             
                   |----  WDROP                               External             
   
 
3 YSVCLR
           SUBROUTINE YSVCLR
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Drop vertex work banks
         Author:  D.Casper   04/07/96
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFCLR                                                                          
        |---- YSVCLR                                                               
                   |----  WDROP                               External             
   
 
3 YSVFIT
           SUBROUTINE YSVFIT(FULL_FIT,NR,IER,IGARB)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Perform fit using vertex, track, and v0 indices in work banks.
         Author: D.Casper    04/07/96
         Modified:           08/08/97  Do not check for V0s or ITC tracks
                                       in the kink veto
         FULL_FIT = sets YTOP mode
         NR  = number of YSVX bank to put fit in
         IER = -1 out of space in BOS
             = 0 fit succeeded
             = 1 fit failed, or vertex/track overlap
         IGARB = 1 if garbage collection occurred (quelle horreur...)
         Input banks:    YSVX, YSTL, YSCL, YS0L, /ysvwrk/
         Ouput banks:    YSVX    Extends YSVX if no more rows, writes a
                                 new row into the appropriate YSVX/NR if
                                 fit is successful:
                                 NR = - (vertex multiplicity)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSPAIR                                                                          
   YSPVFT                                                                          
   YSVMRG                                                                          
   YSVTRK                                                                          
        |---- YSVFIT                                                               
                   |----  NAMIND                              External             
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  BGARB                               External             
                   |----  YFTVTC                                                   
                   |----  YFMVTR                                                   
                   |----  VZERO                               External             
   
 
3 YSVMAT
           SUBROUTINE YSVMAT
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Tag as bad any vertices which are not in a layer of material
         Author - D.Casper   17/07/96
         Modifies:   YSVX/NR(<0)     Sets quality flag for vertices
                                     not in material
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVRTX                                                                          
        |---- YSVMAT                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  YSVSRT                                                   
   
 
3 YSVMRG
           SUBROUTINE YSVMRG(NPAIR,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Combine pair vertices sharing tracks
       Looks for pair vertices which are linked together by shared tracks
       and are close together.  E.g. if vertex A contains tracks 1 and 2,
       vertex B contains tracks 2 and 3, and vertex C contains tracks 3 and
       4, and all vertices are close together, tracks 1, 2, 3, and 4 are
       considered to form a "cluster".
       Once all clusters are found, each cluster is fit to a single
       vertex.  The fit is also done leaving out each track and fitting
       the remaining N-1.  Tracks are removed until the chi^2 stops
       improving significantly.
         Author:  D.Casper  10/7/96
         Input:  NPAIR  Number of good pairs at start of YSVX/2 bank
         Returns: IER   0 if no error
         Input banks:    YSVX/-2     Pair vertices
         Output bank:    YSVX/NR(<0) Each YSVX bank has a negative NR, with
                                     ABS(NR) = vertex multiplicity.  Hence
                                     all three-track vertices are in NR=-3.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSVMRG                                                               
                   |----  NAMIND                              External             
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
                   |----  IAND                                External             
                   |----  IBSET                               External             
                   |----  UCOPY                               External             
                   |----  IOR                                 External             
                   |----  UBITS                               External             
                   |----  SORTI                               External             
                   |----  VZERO                               External             
                   |----  YSFTLD                                                   
                   |----  YSVFIT                                                   
                   |----  NLINK                               External             
                   |----  MOD                                 External             
                   |----  IBCLR                               External             
                   |----  YSVSRT                                                   
                   |----  YSFCLR                                                   
                   |----  WDROP                               External             
   
 
3 YSVRTX
         SUBROUTINE YSVRTX(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Steering for secondary vertex search
     Builds vertices, applies cuts on material regions,
     creates an association list vertex->track, and
     fills banks YNVH and YNLI with results.
     Temporary fix: YSIN card disables the flagging of
                    incoming tracks, to avoid crashing Dali.
     IER = 0 if successful
     Author   :- D. Casper 30-jun-1996
     Modified :- D. Casper 30-sep-1997
                 Remove cut on max number of FRFT tracks
     Input banks:  FRFT  Track fits
                   YSCT  Vertex fitting parameters from Dbase
                   PYER  Primary vertex (needed by routines called)
     Output banks: YNLI  List of vertices found
                   YNVH  Tracks identified with a vertex
                   YSMO  Momentum and other information about secondaries
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YSVRTX                                                               
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  ABRUEV                              External             
                   |----  ALGTDB                              External             
                   |----  JUNIDB                              External             
                   |----  YSVBLD                                                   
                   |----  YSVMAT                                                   
                   |----  YSVTBK                                                   
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  UCOPY                               External             
                   |----  IABS                                External             
                   |----  NLINK                               External             
                   |----  ABS                                 External             
                   |----  MOD                                 External             
                   |----  AUBPRS                              External             
   
 
3 YSVSET
         SUBROUTINE YSVSET(NVX,IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create workbank to hold vertices to be fit
         Author:  D.Casper 04/07/96
             IER = 1 Unable to create workbank
             IER = 0 Normal
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSFSET                                                                          
        |---- YSVSET                                                               
                   |----  WBANK                               External             
                   |----  INTCHA                              External             
   
 
3 YSVSRT
           SUBROUTINE YSVSRT
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Clean up ysvx banks, sorting by chi^2, flagging overlaps, and trim
         Author:  D.Casper  18/7/96
         Modifies:   YSVX/NR(<0)     Vertices which have a track included
                                     in a higher multiplicity vertex have
                                     a quality flag set.  Each NR is
                                     sorted first by chi^2, and then
                                     by quality flag (preserving chi^2
                                     ordering for a given quality flag).
                                     All good vertices (no overlaps, quality
                                     flag=0) end up at the beginning of the
                                     bank, in ascending order of chi^2.
                                     Vertices with impossible chi^2 are
                                     removed.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVMAT                                                                          
   YSVMRG                                                                          
   YSVTRK                                                                          
        |---- YSVSRT                                                               
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  SORTRQ                              External             
                   |----  SORTI                               External             
                   |----  AUBPRS                              External             
   
 
3 YSVTBK
           SUBROUTINE YSVTBK(NVX, NTK)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create vsvt vertex->track relation bank
      Returns:  NVX  number of output vertices
                NTK  number of tracks in output vertices
         Author:  D.Casper  06/07/96
         Modified:          21/09/97  use hit bitmasks to verify track direction
         Input banks:    YSVX/NR(<0) Reconstructed vertices
                         YSTL        Internal track list (to find FRFT
                                     number of each TPC track)
                         YSCL        Internal circle list (to find FRFT
                                     number of each ITC-only track)
         Output bank:    YSVT/NR     ABS(NR)=multiplicity, parallel to
                                     YSVX/NR. Each YSVT bank has a number
                                     of columns = ABS(NR).  Contains a
                                     list of the FRFT tracks (positive #'s)
                                     and YLV0 V0's (negative #'s) associated
                                     with the corresponding row of of YSVX.
                                     A track with a number > 10000 is
                                     identified as the incoming track to
                                     the vertex.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVRTX                                                                          
        |---- YSVTBK                                                               
                   |----  NAMIND                              External             
                   |----  IBSET                               External             
                   |----  BDROP                               External             
                   |----  NLINK                               External             
                   |----  UCOPY                               External             
                   |----  IABS                                External             
                   |----  AUBOS                               External             
                   |----  BLIST                               External             
                   |----  NUMBIT                              External             
                   |----  SQRT                                External             
                   |----  IAND                                External             
                   |----  YHELIX                                                   
                   |----  SIGN                                External             
                   |----  MAX                                 External             
                   |----  ABS                                 External             
                   |----  SIN                                 External             
                   |----  YSENSE                                                   
                   |----  UBITS                               External             
                   |----  YPRVER                                                   
                   |----  FLOAT                               External             
                   |----  AUBPRS                              External             
   
 
3 YSVTRK
           SUBROUTINE YSVTRK(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Try to add helices, circles, and v0's to existing vertices
     Returns:    IER     0 if no error
     This routine loops over objects not yet associated with a vertex
     and tries to add them to existing vertices.
         Author:  D. Casper  18/07/96
       Modified:  D. Casper  30/09/97
            Put only JYSVQU=0 objects in mask of objects already used
                  D. Casper   3/03/98
            Check track quality flag before using
         Input banks:   YSVX/NR(<0)  Vertices found thus far; ABS(NR) is
                                     the multiplicity of the vertex
                        YSTL         Helices
                        YSCL         Circles
                        YS0L         V0's
         Output bank:   YSVX/NR(<0)  Any new vertices formed are added to
                                     the appropriate YSVX bank, depending
                                     on the new multiplicity.
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSVTRK                                                               
                   |----  NAMIND                              External             
                   |----  VZERO                               External             
                   |----  UCOPY                               External             
                   |----  MOD                                 External             
                   |----  IAND                                External             
                   |----  IBSET                               External             
                   |----  IOR                                 External             
                   |----  NUMBIT                              External             
                   |----  YSFTLD                                                   
                   |----  YSVFIT                                                   
                   |----  NLINK                               External             
                   |----  YSVSRT                                                   
                   |----  YSFCLR                                                   
   
 
3 YSVX0L
         SUBROUTINE YSVX0L(IER)
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Create ysvx/0 and load primary vertex
         Author: D. Casper  1-jul-1996
         Returns:  IER = 0 if vertex found
                   IER = -1 if no vertex found
                   IER = 1 if no room in BOS
         Input bank: PYER    Primary vertex
         Output bank:YSVX/0  Copy of primary in internal format
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVBLD                                                                          
        |---- YSVX0L                                                               
                   |----  NAMIND                              External             
                   |----  AUBOS                               External             
                   |----  UCOPY                               External             
   

2 YTOP

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    CKEY 
     1st entry into YTOP set
     ! ALEPHLIB 31.3
        YCIRCR,YFMVTC,YFMVTR,YFTVTC,YFTVTR,YFVMAP,YFVMC,YFVMC1,YMS3IN,YTPAR:
         Double precision fixes for Linux                           (D.Smith)
    
     ! ALEPHLIB 31.1
        YFMVTR : Bug fix - Avoid division by zero when cmas=0 (E.Rohne)
    
     ! ALEPHLIB 30.8 correction file 2
        YFTVTC : Bug fix - test on vertex location always failed due
                 to uninitialised variable                      (P.Hansen)
        The above bug was introduced in Alephlib 30.7 correction file 2. Data
        processed through Julia with Alephlibs 307.2->308.1 have no secondary
        vertices or kinks!
    
     ! ALEPHLIB 30.7 correction file 2
        YFTVTC : Restrict vertices to reasonable volume
                 to avoid numerical problems             (D.Casper)
    
     ! ALEPHLIB 30.5
        YTCONV : Bug fix - declare WTX, VARWX arrays (W.Manner)
        YCIRCR,YVPOSS : fix variable type inconsistencies in function calls, 
                        for Linux                            (A.Waananen)
    
     ! ALEPHLIB 30.4 correction file 2
        YFMVTR : Protect against astronomical chi^2 (D.Casper)
    
     ! ALEPHLIB 21.3
        YTOPNW: Replace call to TIMAL by call to TIMEL (M.Cattaneo)
        YVPOSS: Fix multiline strings (M.Cattaneo)
    
     ! ALEPHLIB 20.9
      YDIMTO - increase MAXHLX the maximum number of charged tracks
                        MAXNTR the maximum number of neutral tracks
                        MAXTRK = MAXHLX + MAXNTR
                        MKDIMM = (MAXTRK+NMSIZZ-1)/NMSIZZ
    
     ! ALEPHLIB 15.7
      YFMVTR, YFTVTR, YFVMAP, YFVMC, YFVMC1 -
               protection against division by zero (G.Lutz).
      YFMVTR, YFVMC, YFVMC1 - correction of two sign errors (G.Lutz).
      YTPAR  - correction of a sign error (G.Lutz).
      YFMVTC - new routine with lagrange multiplier mass constraint in
               vertex fit (G.Taylor).
    
     ! ALEPHLIB 15.6
      YFTVTR AND YFVMAP : correct a minor mathemathical bug
      YMKIDT: correct a logical error
      YVPOSS: prohibit overwriting of input track indices
    
     ! ALEPHLIB 15.3
      YTPVTX : add a protection
    
     ! ALEPHLIB 15.2
    
    1) Changes in YTRV0S to reject V0,s with hits before the vertex
    2) New routines YBIPAT YPRVER YSTVTX YCIRCR for this purpose
    3) YDEFRF changed to cope with new ALPHA
    4) Minor changes in YTSTRK to allow running on MINI
    5) 3 words added in bank YNTR
    6) New routine YFVMC1. It allows the enforcement of one
       or several submass constraints (e.g. psi mass in the
       decay Bs->psi K+ K-) in the vertex fit.
    7) Minor changes in routines YTCON, YTIJOB, YTPVTX, YTSTRK, YVDCOF
    
    
     ! ALEPHLIB 14.5
    YTOIJO - this obsolete routine is purged.
    
     ! ALEPHLIB 14.4
    
    1) introduction of mass constraint vertex fit routine yfvmc
    2) improvement of summary printout
    3) minor changes in yfmvtr, ytijob, ytconv, ytrv0s
    
     ! ALEPHLIB 14.1
    
    1) removal of obsolete routines
    the following obsolete routines have been permanently removed
    from the ytop package in alephlib. a list of these routines and the
    proposed replacements follows below.
    the calling parameters of the replacement routines are different
    a description can be found in the headers of the routines.
    
    OBSOLETE ROUTINE             PROPOSED REPLACEMENT
    _____________________________________________________________
    YADHVX ADD HELIX TO VERTEX   YFTVTR VERTEX FIT FROM TRACKS AND VERTICES
    YBLDVX BUILD VERTEX          YVXBLD BUILD VERTEX
    YFTHVX FIT VTX FROM HELICES  YFTVTR FIT VERTEX FROM TRACKS AND VERTICES
    YFUMSC MULTIPLE SCATT. FUDGE
    YTOCON DUMMY                 YTCONV PHOTON CONVERSION SEARCH
    YTOPAN OBSOLETE STEERING     YTOPNW STEERING ROUTINE
    YTOPID DUMMY                 YPIDAS PARTICLE IDENTITY ASSIGNEMENT
    YTOPVT PRIM.VTX              YTPVTX PRIMARY VERTEX
    YPRIMV                       YPRIVX
    YTORV0 DUMMY                 YTRV0S V0 RECONSTRUCTION
    YTOSTR CHARGED TRACK SEL.    YTSTRK CHARGED TRACK SELECTION
    YVXPOS GENERAL VTX SEARCH    YVPOSS GENERAL VERTEX SEARCH ALL TRACKS
          CHARGED TRACKS ONLY
    
    
    2) addition of a new fast but approximate vertex fitting and mass
    routine.
    the new routine yfvmap may be used instead of the routine yfmvtr.
    it provides vertex, momentum sum and invariant mass without
    performing a refit of the track parameters to the vertex.
    it takes the track direction at the closest approach to the
    vertex for momentum sum and mass calculation.
    values for vertex, mass and momentum sum agree very precisely
    with results from the elaborate fit. the evaluation of errors
    is somewhat approximate.
    
    3) minor modifications in YFMVTR,YTCONV,YTRV0S,YTIJOB
    
     ! ALEPHLIB 13.8
    
    hange of default version from "old" to "new". The old version
    IS SUPPOSED TO BE SCRATCHED SOON.
    
    increase in the number of of allowed charged reconstructed tracks
    from 62 to 93.
    
    moving all selection parameters for gamma conversion, vzero
    and primary vertex reconstruction to data banks YTGP,YTPP,YTCP,YTVP.
    as before default values are provided if any of these banks do
    not exist.
    
          JYTGDM ..... limit of distance from/between helix for vtx fit
                       used in YFMVTR,YFTVTR
          JYTGMM ..... minimum required charged track momentum
                       for vertex search used YTSTRK
          JYTGPP ..... particle identification probability cut used in YPIDAS
    
          JYTPMT ... YTPVTX minimum tpc hits required
          JYTPNF ....YTPVTX max # of tracks used for first step of primary
                            vertex finding (highest momenta are selected)
          JYTPMM ... YTPVTX MIN. MOM. FOR FIRST STEP OF PRIM.VTX. SEARCH
          JYTPMA ....YTPVTX MIN.MOM. FOR ATTACHING TRKS IN SECOND STEP
    
          JYTCVC ... YTCONV MAX.VERTEX CHISQ.
          JYTCPC ... YTCONV MAX.POINTING CHISQ.
          JYTCRD ... YTCONV MIN.RADIUS
          JYTCMM ... YTCONV MAX.INVARIANT MASS
          JYTCZD ... YTCONV MAX.Z-DISTANCE OF TRACK FROM BEAM CROSSING
          JYTCNA ... YTCONV MAX.# OF ADD. TRKS THROUGH VERTEX
          JYTCLI ... YTCONV MIN. EL.PROB. FOR BOTH TRACKS
          JYTCHI ... YTCONV MIN. EL.PROB. AT LEAST ONE TRACK
    
          JYTVVC ... YTRV0S MAX.VERTEX CHISQ.
          JYTVPC ... YTRV0S MAX.POINTING CHISQ.
          JYTVDC ... YTRV0S MIN.CHISQ VTX DIST.
          JYTVMD ... YTRV0S MAX.INVARIANT MASS CHISQ. DEV.
          JYTVZD ... YTRV0S MAX.Z-DISTANCE OF TRACK FROM BEAM CROSSING
          JYTVNA ... YTRV0S MAX.# OF ADD. TRKS THROUGH VERTEX
          JYTVPI ... YTRV0S MIN. PION PROB. OF K0 DECAY TRACKS
          JYTVPR ... YTRV0S MIN. PROTON PROB. IN LAMBDA DECAY
          JYTVPJ ... YTRV0S MIN. PION PROB. IN LAMBDA DECAY
    
    slight change in the primary vertex procedure in case that
    the beam spot is used but no vertex with tracks is found
    in the first step of primary vetex search. then the beam spot
    with possible added low momentum tracks will be returned.
    
    slight extension of the conversion and vzero selection procedure.
    additional requirements on the particle identification may be
    made.
    
    booking of banks for charged mother tracks, to be filled from
    user programs.
    
      ----------------------------------------------------------------
          YTOP package
    
          software package developed for
          a fixed target charm experiment na32
          and adapted to aleph by gerhard lutz
          M.FERNANDEZ-BOSMAN, J.LAUBER, AND W.MANNER
    
       the new version of YTOP is released in ALEPHLIB version 131
       modified in ALEPHLIB version 137
    
       the tasks performed by the ytopol software are
    
          -> to profide tools to fit vertices to charged tracks
          neutral tracks
          other vertices
          in addition to finding a new common vertex,
          one may calculate the refitted decay track parameters
          the invariant mass
          the momentum sum of the mother track
          the various correlations
          and from there the parameters of the incoming mother track
    
          -> to perform some tasks on request like
          reconstruction of the primary vertex
          reconstruction of gamma conversions
          reconstruction of v0'S
    
       YTOPOL software :    - routines are in ALEPHLIB
          - can be run from ALPHA or JULIA
          To select the topology software in JULIA,
          use the on 'YTOP' in the PROC card.
          In ALPHA, call directly the steering routine YTOPOL
          and the JOB and RUN initialization routines
    
          see alephnote ALEPH 91-132, SOFTWR 91-005 (27.9.91)
          for a more detailed descripion of the package
          and subroutine headers for a description of
          the input and output paramaters
    
          The various otpions are controlled by the YOPT card :
    
          - YOLD : select the old version of YTOP
    
          - FRF2 : use FRFT bank nr 2
          with VDET refitted tracks
    
          - PVTX : reconstruct the primary vertex
    
          - BCRO : fit the primary vertex with the
          constraint of the beam profile
    
          - RCON : reconstruct gamma conversions
    
          - RV0S : reconstruct V0'S
    
          - RLEP : do not use leptons in the primary
          vertex search
    
          - VHIT : use in the  first step of primary
          vertex reconstruction only the
          tracks that have a hit in the
          vertex detector
    
          - SVTX : reconstruct all secondary vertices
          (not yet implemented)
    
          - USER : call a user routine yruser
    
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     YBDTOP     Ytop block data
     YBIPAT     Find bit pattern of hits in vdet itc and tpc
     YCIRCR     Find circle crossings for v0 reconstruction
     YDEFRF     Define bank indices for frft and frtl banks
     YFMVTC     Constrained fit of vertices,charged and neutral tracks
     YFMVTR     Constrained fit of vertices,charged and neutral tracks
     YFTVTC     Fit a vertex to vertices,charged and neutral tracks, and circles
     YFTVTR     Fit a vertex to vertices,charged and neutral tracks
     YFVMAP     Calculate momentum sum and mass from track direction
     YFVMC      Constrained fit of vertices,charged and neutral tracks
     YFVMC1     Constrained fit of vertices,charged and neutral tracks
     YHISTO     Book debugging histograms for ytop
     YHUSER     Book histos for user routine
     YINVMX     Invert upper triangle of symmetric matrix stored row wise
     YITCOF     Find itc coordinates on a track
     YMKAND     Logical and of markers
     YMKCLE     Clear bit ibit in marker m
     YMKCNT     Count number of set bits in marker m
     YMKCOP     Copies marker m to mcop
     YMKEXP     Expand marker m up to bit maxbt
     YMKIDC     Count number of identical set bits in marker ma and mb
     YMKIDT     Test if markers ma and mb are identical
     YMKMIS     Compares marker mset and marker mtest
     YMKORR     Logical or of markers
     YMKSET     Set bit i in marker m
     YMKSHR     Shrinks marker m
     YMKTST     Test if bit ibit in marker m is set
     YMKZER     Zeroes marker m
     YMS3IN     Inverse a 3x3 symmetric matrix in double precision
     YPIDAS     Assign particle identity from data or monte carlo generation
     YPRIVX     Reconstructs the primary vertex
     YPRVER     Project vertex into vdet/itc/tpc bit pattern
     YRUSER     User routine called at the end of the package
     YSTVTX     Find correct circle crossing to start v0 vertex fit
     YSVVTX     Fill pyer bank
     YTCONV     Reconstruct gamma conversions
     YTIJOB     Initialize the job for topology reconstruction
     YTOIRU     Initialize the run for topology reconstruction
     YTOPNW     Steering routine for topology reconstruction
     YTOPOL     Steering routine for topology reconstruction
     YTOPRT     Printout of reconstructed vertices
     YTOSUM     Summary printout for the topology reconstruction
     YTOSVT     Reconstruct vertices from geometrical criteria only  s
     YTPAR      Calculation of track parameters from vertex and momentum
     YTPVTX     Reconstructs the primary vertex
     YTRV0S     Reconstruct v0 decays
     YTSTRK     Selects tracks to be considered for vertex search
     YVDCOF     Find vdet coordinates on a track
     YVPOSS     Finds all combinations of tracks that form a vertex
     YVXBLD     Build up vertex by adding sequentially tracks

3 YBDTOP
         BLOCK DATA YBDTOP
   ------------------------------------------------------------------------------
     CKEY
   ------------------------------------------------------------------------------
   Ytop block data
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YBDTOP.                                                              
   
 
3 YBIPAT
         SUBROUTINE YBIPAT(ITR,IBVDET,IBITPC,IBMVD,IBMIT,IBMTP,IFLAG,LDMP)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Find bit pattern of hits in vdet itc and tpc
       Author :     W. Manner 25/01/93
   
       Description
       ===========
        For track ITR the bit pattern is found and stored in
        INTEGER arrays IBMVD, IBMIT, IBMTP 1 word/bit and packed
        in words IBVDET IBITPC
        If bank DTRA exists (MINI) it is used and unpacked.
        Otherwise the banks VDCO ITCO TPCO are used
        IBVDET gives a somewhat more detailed VDET bit pattern
        than DTRA. It is:
        bit 1:  1st r-phi hit in layer 1
        bit 2:  1st   z   hit in layer 1
        bit 3:  2nd r-phi hit in layer 1 (overlap)
        bit 4:  2nd   z   hit in layer 1 (overlap)
        bit 5:  1st r-phi hit in layer 2
        bit 6:  1st   z   hit in layer 2
        bit 7:  2nd r-phi hit in layer 2 (overlap)
        bit 8:  2nd   z   hit in layer 2 (overlap)
        If this pattern is filled from DTRA
        it is fudged.
        IBITPC is identical to DTRA.JDTRHO
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSTVTX                                                                          
        |---- YBIPAT                                                               
                   |----  UZERO                               External             
                   |----  NAMIND                              External             
                   |----  IAND                                External             
                   |----  YDEFRF                                                   
                   |----  YVDCOF                                                   
                   |----  ABS                                 External             
   
 
3 YCIRCR
         SUBROUTINE YCIRCR(PARIN1,PARIN2,NCRO,NPHYS,CORA,ZCO2)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Find circle crossings for v0 reconstruction
       Author :     W. Manner 25/01/93
       Modified:    D. Smith  26/10/99 Double precision fixes for Linux
   
       Description
       ===========
        Given two tracks with parameters PARIN1 PARIN2 calculate
        NCRO = 0,1,2  circle crossings, for NCRO = 0 the closest
        point is calculated.
        NCRO is the total number of crossings found ie 0,1,2
        NPHYS indicates the physical crossings ie with the v0
        behind the beamcrossing
        the meaning is
        nphys = 0 no physical crossing
        NPHYS = 1 CORA(*,1) is physical
        NPHYS = 2 CORA(*,2) is physical
        NPHYS = 3 both crossings are physical
        CORA(3,I) are the coordinates of track 1 at crossing I
        ZCO2(I)  is the z coordinate of track 2 at crossing I
   
        Parameter order is 1/R TL PHI D Z
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSTVTX                                                                          
        |---- YCIRCR                                                               
                   |----  ALFIEL                                                   
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
                   |----  MAX                                 External             
                   |----  DATAN2                              External             
                   |----  ABS                                 External             
   
 
3 YDEFRF
         SUBROUTINE YDEFRF(KFRFT0,KFRFT,KFRTL,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Define bank indices for frft and frtl banks
       Author :     W. Maenner,M.Bosman   09/07/91
       Rewritten:   W. Manner             04/03/93
   
       Description
       ===========
       Define bank indices for banks FRFT and FRTL
   
       In order to cope with recent developments of ALPHA
       the logic was changed in the following way:
       FRFT nr. 2 exists:  KFRFT = index(nr. 2)
       ELSE                KFRFT = 0
   
       FRFT nr. 0 exists:  KFRFT0 = index(nr. 0)
       ELSE IF
       FRFT nr. 3 exists:  KFRFT0 = index(nr. 3)
       ELSE                KFRFT0  = KFRFT
       force KFRFT to be equal to KFRFT0 if ITC-TPC
           tracks requested, i.e. FRF2 option not called
       return with error in case VDET tracks are requested
           via the option FRF2 and FRFT bank nr 2 does
           not exists
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YBIPAT                                                                          
   YITCOF                                                                          
   YPIDAS                                                                          
   YPRIVX                                                                          
   YTCONV                                                                          
   YTOPNW                                                                          
   YTPVTX                                                                          
   YTRV0S                                                                          
   YTSTRK                                                                          
   YVDCOF                                                                          
        |---- YDEFRF                                                               
                   |----  NAMIND                              External             
                   |----  NLINK                               External             
   
 
3 YFMVTC
         SUBROUTINE YFMVTC(LMASSC,USE,CONMAS,
  ------------------------------------------------------------------------------
    CKEY YTOP FIT
  ------------------------------------------------------------------------------
        &      NVX,NHX,NEU,LVAPC,LPSUM,LMCALC,LVFIX,
        &      VXIN,VVXIN,IXHX,NSHX,NSVHX,HXIN,VHXIN,
        &      IXNU,NSNU,NSVNU,TNUI,VTNUI,
        &      NPIDC,AMPC,
        &      VXOUT,VVXOU,HXOU,VHXOU,TNUO,VTNUO,
        &      PSUM,VPSUM,VPSVX,
        &      AMASS,DMASS,VMVX,VMPS,
        &      CHISQ,IFAIL)
   Constrained fit of vertices,charged and neutral tracks
       Author :     G. Lutz     /04/89
       Modified  :  G. Lutz   30/03/92
       Adapted from yfmvtr  :  G. Taylor   15/12/93
       Modified:    D. Smith  26/10/99 Double precision fixes for Linux
   
       Description
       ===========
       This routine provides a constraint fit of NVX vertices,
       NHX helices and NEU neutral tracks to a new common
       vertex using a lagrange multiplier mass constraint
   
   
    INPUT
       LMASSC........ LOGICAL: APPLY A MASS CONSTRAINT IF TRUE
       USE(NHX+NEU).. LOGICAL: USE THIS TRACK IN MASS CONSTRAINT
       CONMAS........ MASS TO CONSTRAIN TRACKS TO
       NVX .......... # OF VERTICES TO BE USED IN FIT
       NHX .......... # OF HELICES TO BE USED IN FIT
       NEU .......... # OF NEUTRAL TRACKS TO BE USED IN FIT
       LVAPC ....... LOGICAL: CALCULATE STARTING VALUES OF VERTEX
       LPSUM ....... LOGICAL: CALCULATE MOMENTUM SUM AND ERRORS
       LMCALC....... LOGICAL: CALCULATE INVARIANT MASS AND ERRORS
       LVFIX ....... LOGICAL: FIX VERTEX TO INPUT VALUE in first
                              few iterations
       VXIN(3,I) .... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) ... VARIANCE OF INPUT VERTEX I
       IXHX(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSHX ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVHX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       HXIN ......... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VHXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXNU(K) ...... INDEX OF NEUTRAL K IN BUFFER TNUIN
       NSNU ......... SPACING BETWEEN VECTORS IN BUFFER TNUI
       NSVNU ........ SPACING BETWEEN ERROR MATRICES IN BUFFER VTNUI
       TNUI .......... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VTNUI(I) ...... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       NPIDC ........ # OF PARTICLE ASSIGNEMENTS
       AMPC(I) ...... MASS ASSGNEMENT TO TRACKS.
                      NPIDC WORDS PER COMBIATION
   
    OUTPUT
       VXOUT .........VERTEX X,Y,Z
       VVXOU ........CORRESPONDING VARIANCES X, XY, Y, XZ, YZ, Z
       HXOU(I,K) .... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VHXOU(I,K) ... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       TNUO(I,K) ..... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VTNUO(I,K) .... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       PSUM(I) ......  MOMENTUM SUM VECTOR AND MASS PX,PY,PZ
       VPSUM ........  CORRESPONDING VARIANCES ORDERED AS
                      PX;
                      PX.PY; PY
                      PX.PZ; PY.PZ; PZ
       VPSVX ........ CORRELATION BETWEEN MOMENTUM SUM AND VERTEX
                      VX.PX; VY.PX; VZ.PX;
                      VX.PY; VY.PY; VZ.PY;
                      VX.PZ; VY.PZ; VZ.PZ;
       AMASS(IPA) ... MASS FOR PARTICLE ASSIGNEMENT IPA
       DMASS(IPA) ... MASS ERROR FOR PARTICLE ASSIGNEMENT IPA
       VMVX(IPA) .... CORRELATION BETWEEN MASS AND VERTEX
                      VX.M ; VY.M ; VZ.MZ
       VMPS(IPA) .... CORRELATION BETWEEN MASS AND MOMENTUM SUM
                      PX.M;  PY.M;  PZ.M
       CHISQ ........ VERTEX CHISQ
       IFAIL ........ =1,2,3, PAIR OF TRACKS MISSING BY LARGE AMOUNT IN
                       VTX STARTING VALUE SEARCH
                      =9,  NO APPROXIMATIVE VERTEX FOUND
                      =10, # OF INPUT VERTICES ABOVE ALLOWED MAXIMUM
                      =11, # OF TRACKS ABOVE ALLOWED MAXIMUM
                      =21, ERROR IN INPUT VTX ERROR MATRIX
                      =22, ERROR IN INPUT helix ERROR MATRIX
                      =23, ERROR IN INPUT neutral tr. ERROR MATRIX
                      =30, ERROR IN GG MATRIX INVERSION
                      =99, chisq above max. allowed value
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YFMVTC                                                               
                   |----  MAX                                 External             
                   |----  YMS3IN                                                   
                   |----  SIGN                                External             
                   |----  DSINV                               External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SNGL                                External             
                   |----  ATAN2                               External             
                   |----  DBLE                                External             
                   |----  DATAN2                              External             
                   |----  XO                                  External             
   
 
3 YFMVTR
         SUBROUTINE YFMVTR(NVX,NHX,NEU,LVAPC,LPSUM,LMCALC,LVFIX,
  ------------------------------------------------------------------------------
    CKEY YTOP FIT
  ------------------------------------------------------------------------------
        &      VXIN,VVXIN,IXHX,NSHX,NSVHX,HXIN,VHXIN,
        &      IXNU,NSNU,NSVNU,TNUI,VTNUI,
        &      NPIDC,AMPC,
        &      VXOUT,VVXOU,HXOU,VHXOU,TNUO,VTNUO,
        &      PSUM,VPSUM,VPSVX,
        &      AMASS,DMASS,VMVX,VMPS,
        &      CHISQ,IFAIL)
   Constrained fit of vertices,charged and neutral tracks
       Author :     G. Lutz     /04/89
       Modified  :  G. Lutz   30/03/92
                    D. Casper 10/07/97  Protect against astronomical chi^2
                    E. Rohne  09/03/99  Avoid division by zero when cmas=0
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
       Description
       ===========
       This routine provides a constraint fit of NVX vertices,
       NHX helices and NEU neutral tracks to a new common
       vertex
   
   
    INPUT
       NVX .......... # OF VERTICES TO BE USED IN FIT
       NHX .......... # OF HELICES TO BE USED IN FIT
       NEU .......... # OF NEUTRAL TRACKS TO BE USED IN FIT
       LVAPC ....... LOGICAL: CALCULATE STARTING VALUES OF VERTEX
       LPSUM ....... LOGICAL: CALCULATE MOMENTUM SUM AND ERRORS
       LMCALC....... LOGICAL: CALCULATE INVARIANT MASS AND ERRORS
       LVFIX ....... LOGICAL: FIX VERTEX TO INPUT VALUE in first
                              few iterations
       VXIN(3,I) .... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) ... VARIANCE OF INPUT VERTEX I
       IXHX(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSHX ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVHX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       HXIN ......... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VHXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXNU(K) ...... INDEX OF NEUTRAL K IN BUFFER TNUIN
       NSNU ......... SPACING BETWEEN VECTORS IN BUFFER TNUI
       NSVNU ........ SPACING BETWEEN ERROR MATRICES IN BUFFER VTNUI
       TNUI .......... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VTNUI(I) ...... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       NPIDC ........ # OF PARTICLE ASSIGNEMENTS
       AMPC(I) ...... MASS ASSGNEMENT TO TRACKS.
                      NPIDC WORDS PER COMBIATION
   
    OUTPUT
       VXOUT .........VERTEX X,Y,Z
       VVXOU ........CORRESPONDING VARIANCES X, XY, Y, XZ, YZ, Z
       HXOU(I,K) .... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VHXOU(I,K) ... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       TNUO(I,K) ..... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VTNUO(I,K) .... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       PSUM(I) ......  MOMENTUM SUM VECTOR AND MASS PX,PY,PZ
       VPSUM ........  CORRESPONDING VARIANCES ORDERED AS
                      PX;
                      PX.PY; PY
                      PX.PZ; PY.PZ; PZ
       VPSVX ........ CORRELATION BETWEEN MOMENTUM SUM AND VERTEX
                      VX.PX; VY.PX; VZ.PX;
                      VX.PY; VY.PY; VZ.PY;
                      VX.PZ; VY.PZ; VZ.PZ;
       AMASS(IPA) ... MASS FOR PARTICLE ASSIGNEMENT IPA
       DMASS(IPA) ... MASS ERROR FOR PARTICLE ASSIGNEMENT IPA
       VMVX(IPA) .... CORRELATION BETWEEN MASS AND VERTEX
                      VX.M ; VY.M ; VZ.MZ
       VMPS(IPA) .... CORRELATION BETWEEN MASS AND MOMENTUM SUM
                      PX.M;  PY.M;  PZ.M
       CHISQ ........ VERTEX CHISQ
       IFAIL ........ =1,2,3, PAIR OF TRACKS MISSING BY LARGE AMOUNT IN
                       VTX STARTING VALUE SEARCH
                      =9,  NO APPROXIMATIVE VERTEX FOUND
                      =10, # OF INPUT VERTICES ABOVE ALLOWED MAXIMUM
                      =11, # OF TRACKS ABOVE ALLOWED MAXIMUM
                      =21, ERROR IN INPUT VTX ERROR MATRIX
                      =22, ERROR IN INPUT helix ERROR MATRIX
                      =23, ERROR IN INPUT neutral tr. ERROR MATRIX
                      =30, ERROR IN GG MATRIX INVERSION
                      =99, chisq above max. allowed value
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YS0LLD                                                                          
   YSVFIT                                                                          
   YTCONV                                                                          
   YTRV0S                                                                          
        |---- YFMVTR                                                               
                   |----  MAX                                 External             
                   |----  YMS3IN                                                   
                   |----  SIGN                                External             
                   |----  DSINV                               External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SNGL                                External             
                   |----  DATAN2                              External             
                   |----  DBLE                                External             
                   |----  XO                                  External             
                   |----  MIN                                 External             
   
 
3 YFTVTC
         SUBROUTINE YFTVTC(NVX,NHX,NEU,NCX,LVAPC,
  ------------------------------------------------------------------------------
    CKEY YTOP VERTEX FIT
  ------------------------------------------------------------------------------
        &      VXIN,VVXIN,
        &      IXHX,NSHX,NSVHX,HXIN,VHXIN,
        &      IXNU,NSNU,NSVNU,TNU,VTNU,
        &      IXCX,NSCX,NSVCX,CXIN,VCXIN,
        &      VXOUT,VVXOU,CHISQ,IFAIL)
   Fit a vertex to vertices,charged and neutral tracks, and circles
       Author :     G. Lutz     /11/88
       Modified  :  G. Lutz   30/03/92
                    D. Casper 09/07/96
                    D. Casper 12/02/98  Restrict vertices to reasonable volume
                                        to avoid numerical problems
       Modified:    P. Hansen 08/06/98  Bug fix - test on vertex location always
                                        failed due to uninitialised variable.
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
       Description
       ===========
       This routine provides a fit of NVX vertices,
       NHX helices, NCX circles, and NEU neutral tracks to a
       new common vertex.  If NHX is less than two, an input
       vertex must be given.
   
    INPUT
       NVX .......... # OF VERTICES TO BE USED IN FIT
       NHX .......... # OF HELICES TO BE USED IN FIT
       NCX .......... # OF CIRCLES TO BE USED IN FIT
       NEU .......... # OF NEUTRAL TRACKS TO BE USED IN FIT
       LVAPC ........ LOGICAL: CALCULATE STARTING VERTEX
       VXIN(3,I) .... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) ... VARIANCE OF INPUT VERTEX I
       IXHX(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSHX ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVHX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       HXIN ......... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VHXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXNU(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSNU ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVNU ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       TNU .......... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VTNU(I) ...... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXHC(J) ...... INDEX OF CIRCLE K IN BUFFER HXIN
       NSCX ......... SPACING BETWEEN VECTORS IN BUFFER CXIN
       NSVCX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER VCXIN
       CXIN ......... CIRCL PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); BLANK; PHI0; D0(SIGNED); BLANK
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXCX-1)*NSCX+1
       VCXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      BLANK; BLANK
                      RHO.PHI0;   BLANK     PHI0
                      RHO.D0;    BLANK     PHI.D0     D0
                      BLANK      BLANK    BLANK      BLANK    BLANK
                      FIRST ELEMENT IS AT I=(IXCX-1)*NSVCX+1
   
    OUTPUT
       VXOUT .........VERTEX X,Y,Z
       VVXOU ........CORRESPONDING VARIANCES X, XY, Y, XZ, YZ, Z
       CHISQ ........ VERTEX CHISQ
       IFAIL ........ =1,2,3, PAIR OF TRACKS MISSING BY LARGE AMOUNT IN
                       VTX STARTING VALUE SEARCH
                      =8,  HELICES WITH IDENTICAL PARAMETERS
                      =9,  NO APPROXIMATIVE VERTEX FOUND
                      =10, # OF INPUT VERTICES ABOVE ALLOWED MAXIMUM
                      =11, # OF CHARGED TRACKS ABOVE ALLOWED MAXIMUM
                      =12, # OF NEUTRAL TRACKS ABOVE ALLOWED MAXIMUM
                      =21, ERROR IN INPUT VTX ERROR MATRIX
                      =22, ERROR IN INPUT HELIX ERROR MATRIX
                      =30, ERROR IN GG MATRIX INVERSION
                      =40, CIRCLE LOOPING WRONG WAY
                      =50, VERTEX LEAVES PAY DE GEX
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVFIT                                                                          
        |---- YFTVTC                                                               
                   |----  YMS3IN                                                   
                   |----  SIGN                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SNGL                                External             
                   |----  DATAN2                              External             
                   |----  MAX                                 External             
                   |----  DBLE                                External             
                   |----  XO                                  External             
   
 
3 YFTVTR
         SUBROUTINE YFTVTR(NVX,NHX,NEU,LVAPC,
  ------------------------------------------------------------------------------
    CKEY YTOP VERTEX FIT
  ------------------------------------------------------------------------------
        &      VXIN,VVXIN,IXHX,NSHX,NSVHX,HXIN,VHXIN,
        &      IXNU,NSNU,NSVNU,TNU,VTNU,
        &      VXOUT,VVXOU,CHISQ,IFAIL)
   Fit a vertex to vertices,charged and neutral tracks
       Author :     G. Lutz     /11/88
       Modified  :  G. Lutz   30/03/92
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
       Description
       ===========
       This routine provides a fit of NVX vertices,
       NHX helices and NEU neutral tracks to a new common
       vertex
   
    INPUT
       NVX .......... # OF VERTICES TO BE USED IN FIT
       NHX .......... # OF HELICES TO BE USED IN FIT
       NEU .......... # OF NEUTRAL TRACKS TO BE USED IN FIT
       LVAPC ....... LOGICAL: CALCULATE STARTING VALUES OF VERTEX
       VXIN(3,I) .... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) ... VARIANCE OF INPUT VERTEX I
       IXHX(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSHX ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVHX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       HXIN ......... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VHXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXNU(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSNU ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVNU ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       TNU .......... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VTNU(I) ...... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
   
    OUTPUT
       VXOUT .........VERTEX X,Y,Z
       VVXOU ........CORRESPONDING VARIANCES X, XY, Y, XZ, YZ, Z
       CHISQ ........ VERTEX CHISQ
       IFAIL ........ =1,2,3, PAIR OF TRACKS MISSING BY LARGE AMOUNT IN
                       VTX STARTING VALUE SEARCH
                      =9,  NO APPROXIMATIVE VERTEX FOUND
                      =10, # OF INPUT VERTICES ABOVE ALLOWED MAXIMUM
                      =11, # OF CHARGED TRACKS ABOVE ALLOWED MAXIMUM
                      =12, # OF NEUTRAL TRACKS ABOVE ALLOWED MAXIMUM
                      =21, ERROR IN INPUT VTX ERROR MATRIX
                      =22, ERROR IN INPUT HELIX ERROR MATRIX
                      =30, ERROR IN GG MATRIX INVERSION
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPRIVX                                                                          
   YTCONV                                                                          
   YTRV0S                                                                          
   YVPOSS                                                                          
   YVXBLD                                                                          
        |---- YFTVTR                                                               
                   |----  YMS3IN                                                   
                   |----  SIGN                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SNGL                                External             
                   |----  DATAN2                              External             
                   |----  MAX                                 External             
                   |----  DBLE                                External             
                   |----  XO                                  External             
   
 
3 YFVMAP
         SUBROUTINE YFVMAP(NVX,NHX,NEU,LVAPC,LMCALC,
  ------------------------------------------------------------------------------
    CKEY YTOP MOMENTUM
  ------------------------------------------------------------------------------
        &      VXIN,VVXIN,IXHX,NSHX,NSVHX,HXIN,VHXIN,
        &      IXNU,NSNU,NSVNU,TNU,VTNU,NPIDC,AMPC,
        &      VXOUT,VVXOU,PSUM,VPSUM,AMASS,DMASS,VMPS,
        &      CHISQ,IFAIL)
   Calculate momentum sum and mass from track direction
    at closest approach to fitted track.
    Fit a vertex to vertices,charged and neutral tracks
    Get approximative momentum sum and invariant mass
    from direction of track at closest distance to vertex
   
       Author :     G. Lutz     /11/88
       Modified  :  G. Lutz   30/03/92
       Modified  :  G. Lutz   25/06/92
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
       Description
       ===========
       This routine provides a fit of NVX vertices,
       NHX helices and NEU neutral tracks to a new common
       vertex
   
    INPUT
       NVX .......... # OF VERTICES TO BE USED IN FIT
       NHX .......... # OF HELICES TO BE USED IN FIT
       NEU .......... # OF NEUTRAL TRACKS TO BE USED IN FIT
       LVAPC ....... LOGICAL: CALCULATE STARTING VALUES OF VERTEX
       LMCALC....... LOGICAL: CALCULATE MOMENTUM SUM AND MASS
       VXIN(3,I) .... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) ... VARIANCE OF INPUT VERTEX I
       IXHX(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSHX ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVHX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       HXIN ......... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VHXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXNU(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSNU ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVNU ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       TNU .......... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VTNU(I) ...... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       NPIDC ........ # OF PARTICLE ASSIGNEMENTS
                      1=ELECTRON,2 MUON, 3 PION, 4 KAON, 5 PROTON
                      NPIDC WORDS PER COMBIATION
       AMPC(I) ...... MASS ASSGNEMENT TO TRACKS.
                      NPIDC WORDS PER COMBIATION
   
    OUTPUT
       VXOUT .........VERTEX X,Y,Z
       VVXOU ........CORRESPONDING VARIANCES X, XY, Y, XZ, YZ, Z
       PSUM(I) ......  MOMENTUM SUM VECTOR  PX,PY,PZ
       VPSUM ........  CORRESPONDING VARIANCES ORDERED AS
                      PX;
                      PX.PY; PY
                      PX.PZ; PY.PZ; PZ
       AMASS(IPA) ... MASS FOR PARTICLE ASSIGNEMENT IPA
       DMASS(IPA) ... MASS ERROR FOR PARTICLE ASSIGNEMENT IPA
       VMPS(IPA) .... CORRELATION BETWEEN MASS AND MOMENTUM SUM
                      PX.M;  PY.M;  PZ.M
       CHISQ ........ VERTEX CHISQ
       IFAIL ........ =1,2,3, PAIR OF TRACKS MISSING BY LARGE AMOUNT IN
                       VTX STARTING VALUE SEARCH
                      =9,  NO APPROXIMATIVE VERTEX FOUND
                      =10, # OF INPUT VERTICES ABOVE ALLOWED MAXIMUM
                      =11, # OF CHARGED TRACKS ABOVE ALLOWED MAXIMUM
                      =12, # OF NEUTRAL TRACKS ABOVE ALLOWED MAXIMUM
                      =21, ERROR IN INPUT VTX ERROR MATRIX
                      =22, ERROR IN INPUT HELIX ERROR MATRIX
                      =30, ERROR IN GG MATRIX INVERSION
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YFVMAP                                                               
                   |----  MAX                                 External             
                   |----  YMS3IN                                                   
                   |----  SIGN                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SNGL                                External             
                   |----  DATAN2                              External             
                   |----  DBLE                                External             
                   |----  XO                                  External             
                   |----  MIN                                 External             
   
 
3 YFVMC
         SUBROUTINE YFVMC(NVX,NHX,NEU,LVAPC,
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
        &      VXIN,VVXIN,IXHX,NSHX,NSVHX,HXIN,VHXIN,
        &      IXNU,NSNU,NSVNU,TNUI,VTNUI,
        &      AMPC,AMCON,DMQCON,
        &      VXOUT,VVXOU,HXOU,VHXOU,TNUO,VTNUO,
        &      PSUM,VPSUM,VPSVX,
        &      AMASS,DMASS,
        &      CHISQ,IFAIL)
   Constrained fit of vertices,charged and neutral tracks
       AUTHOR :     G. LUTZ   14/11/92
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
       Description
       ===========
       This routine provides a mass constraint fit of NVX vertices,
       NHX helices and NEU neutral tracks to a new common
       vertex. The mass constraint is taken on the invariant
       mass of all charged and neutral tracks
   
    INPUT
       NVX .......... # OF VERTICES TO BE USED IN FIT
       NHX .......... # OF HELICES TO BE USED IN FIT
       NEU .......... # OF NEUTRAL TRACKS TO BE USED IN FIT
       LVAPC ....... LOGICAL: CALCULATE STARTING VALUES OF VERTEX
       VXIN(3,I) .... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) ... VARIANCE OF INPUT VERTEX I
       IXHX(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSHX ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVHX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       HXIN ......... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VHXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXNU(K) ...... INDEX OF NEUTRAL K IN BUFFER TNUIN
       NSNU ......... SPACING BETWEEN VECTORS IN BUFFER TNUI
       NSVNU ........ SPACING BETWEEN ERROR MATRICES IN BUFFER VTNUI
       TNUI .......... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VTNUI(I) ...... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       AMPC(I) ...... MASS ASSGNEMENT TO TRACKS.
       AMCON ........MASS CONSTRAINT
       DMQCON ........MASS SQUARE CONSTRAINT ERROR
   
    OUTPUT
       VXOUT .........VERTEX X,Y,Z
       VVXOU ........CORRESPONDING VARIANCES X, XY, Y, XZ, YZ, Z
       HXOU(I,K) .... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VHXOU(I,K) ... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       TNUO(I,K) ..... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VTNUO(I,K) .... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       PSUM(I) ......  MOMENTUM SUM VECTOR AND MASS PX,PY,PZ
       VPSUM ........  CORRESPONDING VARIANCES ORDERED AS
                      PX;
                      PX.PY; PY
                      PX.PZ; PY.PZ; PZ
       VPSVX ........ CORRELATION BETWEEN MOMENTUM SUM AND VERTEX
                      VX.PX; VY.PX; VZ.PX;
                      VX.PY; VY.PY; VZ.PY;
                      VX.PZ; VY.PZ; VZ.PZ;
       AMASS ........ MASS
       DMASS ........ MASS ERROR
                      VX.M ; VY.M ; VZ.MZ
                      PX.M;  PY.M;  PZ.M
       CHISQ ........ VERTEX CHISQ
       IFAIL ........ =1,2,3, PAIR OF TRACKS MISSING BY LARGE AMOUNT IN
                       VTX STARTING VALUE SEARCH
                      =9,  NO APPROXIMATIVE VERTEX FOUND
                      =10, # OF INPUT VERTICES ABOVE ALLOWED MAXIMUM
                      =11, # OF TRACKS ABOVE ALLOWED MAXIMUM
                      =21, ERROR IN INPUT VTX ERROR MATRIX
                      =22, ERROR IN INPUT helix ERROR MATRIX
                      =23, ERROR IN INPUT neutral tr. ERROR MATRIX
                      =30, ERROR IN GG MATRIX INVERSION
                      =33, failure in mass constraint (too high chisq)
                      =99, chisq above max. allowed value
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTCONV                                                                          
   YTRV0S                                                                          
        |---- YFVMC                                                                
                   |----  YMS3IN                                                   
                   |----  SIGN                                External             
                   |----  DSINV                               External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SNGL                                External             
                   |----  DATAN2                              External             
                   |----  MAX                                 External             
                   |----  DBLE                                External             
                   |----  XO                                  External             
   
 
3 YFVMC1
         SUBROUTINE YFVMC1(NVX,NHX,NEU,LVAPC,
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
        &      VXIN,VVXIN,IXHX,NSHX,NSVHX,HXIN,VHXIN,
        &      IXNU,NSNU,NSVNU,TNUI,VTNUI,
        &      AMPC,NSMC,MSMC,ISMC,AMCON,DMQCON,
        &      VXOUT,VVXOU,HXOU,VHXOU,TNUO,VTNUO,
        &      PSUM,VPSUM,VPSVX,
        &      AMASS,DMASS,
        &      CHISQ,IFAIL)
   Constrained fit of vertices,charged and neutral tracks
       AUTHOR :     G. LUTZ   14/11/92
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
       Description
       ===========
       This routine provides a mass constraint fit of NVX vertices,
       NHX helices and NEU neutral tracks to a new common
       vertex. The mass constraint is taken on the invariant
       mass of all charged and neutral tracks
   
    INPUT
       NVX .......... # OF VERTICES TO BE USED IN FIT
       NHX .......... # OF HELICES TO BE USED IN FIT
       NEU .......... # OF NEUTRAL TRACKS TO BE USED IN FIT
       LVAPC ....... LOGICAL: CALCULATE STARTING VALUES OF VERTEX
       VXIN(3,I) .... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) ... VARIANCE OF INPUT VERTEX I
       IXHX(K) ...... INDEX OF HELIX K IN BUFFER HXIN
       NSHX ......... SPACING BETWEEN VECTORS IN BUFFER HXIN
       NSVHX ........ SPACING BETWEEN ERROR MATRICES IN BUFFER NSVHX
       HXIN ......... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VHXIN(I) ..... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       IXNU(K) ...... INDEX OF NEUTRAL K IN BUFFER TNUIN
       NSNU ......... SPACING BETWEEN VECTORS IN BUFFER TNUI
       NSVNU ........ SPACING BETWEEN ERROR MATRICES IN BUFFER VTNUI
       TNUI .......... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
                      FIRST ELEMENT STARTS AT I=(IXHX-1)*NSHX+1
       VTNUI(I) ...... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      FIRST ELEMENT IS AT I=(IXHX-1)*NSVHX+1
       AMPC(I) ...... MASS ASSGNEMENT TO TRACKS.
       NSMC ......... # OF SUBMASS CONSTRAINTS
       MSMC(I) ...... # OF TRACKS IN SUBMASS
       ISMC(J) ...... # TRACK #S IN SUBMASSES STORED GAPLESS
       AMCON(I) ..... MASS CONSTRAINTIN SUBMASS I
       DMQCON(I) .... MASS SQUARE CONSTRAINT ERROR OF SUBMASS I
   
    OUTPUT
       VXOUT .........VERTEX X,Y,Z
       VVXOU ........CORRESPONDING VARIANCES X, XY, Y, XZ, YZ, Z
       HXOU(I,K) .... HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VHXOU(I,K) ... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       TNUO(I,K) ..... NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
       VTNUO(I,K) .... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
       PSUM(I) ......  MOMENTUM SUM VECTOR AND MASS PX,PY,PZ
       VPSUM ........  CORRESPONDING VARIANCES ORDERED AS
                      PX;
                      PX.PY; PY
                      PX.PZ; PY.PZ; PZ
       VPSVX ........ CORRELATION BETWEEN MOMENTUM SUM AND VERTEX
                      VX.PX; VY.PX; VZ.PX;
                      VX.PY; VY.PY; VZ.PY;
                      VX.PZ; VY.PZ; VZ.PZ;
       AMASS ........ MASS
       DMASS ........ MASS ERROR
                      VX.M ; VY.M ; VZ.MZ
                      PX.M;  PY.M;  PZ.M
       CHISQ ........ VERTEX CHISQ
       IFAIL ........ =1,2,3, PAIR OF TRACKS MISSING BY LARGE AMOUNT IN
                       VTX STARTING VALUE SEARCH
                      =9,  NO APPROXIMATIVE VERTEX FOUND
                      =10, # OF INPUT VERTICES ABOVE ALLOWED MAXIMUM
                      =11, # OF TRACKS ABOVE ALLOWED MAXIMUM
                      =21, ERROR IN INPUT VTX ERROR MATRIX
                      =22, ERROR IN INPUT helix ERROR MATRIX
                      =23, ERROR IN INPUT neutral tr. ERROR MATRIX
                      =30, ERROR IN GG MATRIX INVERSION
                      =33, failure in mass constraint (too high chisq)
                      =99, chisq above max. allowed value
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YFVMC1                                                               
                   |----  YMS3IN                                                   
                   |----  SIGN                                External             
                   |----  DSINV                               External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  MOD                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  SNGL                                External             
                   |----  DATAN2                              External             
                   |----  MAX                                 External             
                   |----  DBLE                                External             
                   |----  XO                                  External             
   
 
3 YHISTO
         SUBROUTINE YHISTO
  ------------------------------------------------------------------------------
    CKEY YTOP HISTOGRAMS
  ------------------------------------------------------------------------------
   Book debugging histograms for ytop
       Author :     G. Lutz       /06/91
       Modified :   M. Bosman   24/07/91
   
       Description
       ===========
    find vd coordinates for track ITR
    NCOM is no. of complete hits (ie rphi and z coordinates)
    YTOP particle masses
         PARAMETER(    JPAFEP=1,JPAFEM=2,JPAFMP=3,JPAFMM=4,
        &              JPAFPP=5,JPAFPM=6,JPAFKP=7,JPAFKM=8,
        &              JPAFPR=9,JPAFPB=10,JPAFPH=11,JPAFPZ=12,
        &              JPAFKZ=13,JPAFLA=14,JPAFLB=15   )
         COMMON/YPMASS/ YPMASS(20)
   
     EP  1... POSITRONS    EM  2.... ELECTRONS
     MP  3... MU+          MM  4.... MU-
     PP  5... PION+        PM  6.... PION-
     KP  7... KAON+        KM  8.... KAON-
     PR  9... PROTON       PB 10.... ANTIPROTON
     PH 11... PHOTONS      PZ 12.... PIZERO
     KZ 13... KZERO        LA 14....LAMBDA
     LB 15... LAMBDA_BAR      16....
        17...                 18....
        19...                 20....
   
    YTOP parameters
         COMMON/YPARTO/DHXLIM,CHISEL,PMINSE,PIDACP,BFIELD,
        &       MNTHPV,MXTSPV, PMINRQ,PMINRA,
        &       CHVXCO,CHPTCO,RVACCO,AMCTCO,DZMXCO,NAMXCO,EPLOCO,EPHICO,
        &       CHVXV0,CHPTV0,CHVSV0,CHMLV0,DZMXV0,NAMXV0,
        &       PIPKV0,PRPLV0,PIPLV0,
        &       LBCRFD,LRYOLD,LRFRF2,
        &       LRPVTX,LRSVTX,LVBCR0,LRMVPV,LRLPVX,LCONVS,LVZERS,LRUSER
         LOGICAL LBCRFD,LRYOLD,LRFRF2
         LOGICAL LRPVTX,LRSVTX,LVBCR0,LRMVPV,LRLPVX,LCONVS,LVZERS,LRUSER
   
    GENERAL PARAMETERS
       DHXLIM ..... limit of distance from/between helix for vtx fit
              defined in YTOIJO, used in YFMVTR,YFTVTR
       CHISEL ..... chi**2 cut to define if a track belongs to a vtx
              obsolete
       PMINSE ..... minimum required charged track momentum
              ..... for vertex search
              defined in YTOIJO, used YTSTRK
       PIDACP ..... particle identification probability cut
              defined in YTOIJO, used in YPIDAS
       BFIELD ..... magnetic field value
              defined in YTOIRU, used in YFMVTR,YFTVTR,YTOSTR,YTPAR,
                            YTSTRK
    PARAMETERS FOR PRIMARY VERTEX
       MNTHPV ..... minimum TPC hits required
       MXTSPV ..... maximum # of tracks used for first step of primary
              ..... vertex finding (highest momenta are selected)
       PMINRQ ..... minimum required momentum for first step
              ..... of primary vertex search
       PMINRA ..... minimum required momentum for attaching
              ..... tracks to primary vertex in the second step
    PARAMETERS FOR YTCONV
       CHVXCO ... YTCONV MAX.VERTEX CHISQ.
       CHPTCO ... YTCONV MAX.POINTING CHISQ.
       RVACCO ... YTCONV MIN.RADIUS
       AMCTCO ... YTCONV MAX.INVARIANT MASS
       DZMXCO ... YTCONV MAX.Z-DISTANCE OF TRACK FROM BEAM CROSSING
       NAMXCO ... YTCONV MAX.# OF ADD. TRKS THROUGH VERTEX
    PARAMETERS FOR YTRV0S
       CHVXV0 ... YTRV0S MAX.VERTEX CHISQ.
       CHPTV0 ... YTRV0S MAX.POINTING CHISQ.
       CHVSV0 ... YTRV0S MIN.CHISQ VTX DIST.
       CHMLV0 ... YTRV0S MAX.INVARIANT MASS/SIGMA DEV.
       DZMXV0 ... YTRV0S MAX.Z-DISTANCE OF TRACK FROM BEAM CROSSING
       NAMXV0 ... YTRV0S MAX.# OF ADD. TRKS THROUGH VERTEX
       PIPKV0 ... YTRV0S MIN. PION PROB. OF K0 DECAY TRACKS
       PRPLV0 ... YTRV0S MIN. PROTON PROB. IN LAMBDA DECAY
       PIPLV0 ... YTRV0S MIN. PION PROB. IN LAMBDA DECAY
    LOGICAL FLAGS
       LRYOLD ..... use the old version of YTOP
              defined in YTOIJO, used YTOPOL
       LRFRF2 ..... use FRFT bank nr 2 with VDET refitted tracks
              defined in YTOIJO, used YDEFRF
       LRPVTX ..... reconstruct the primary vertex
              defined in YTOIJO, used YTOPNW
       LRSVTX ..... reconstruct secondary vertices
              defined in YTOIJO, used YTOPNW
       LVBCR0 ..... include beam crossing into prim vtx fit
              defined in YTOIJO, used YTOIRU,YTPVTX,YPRIVX
       LRLPVX ..... reject leptons from primary vertex
              defined in YTOIJO, used YTOPNW,YTPVTX
       LRMVPV ..... require mv coord in primary vertex search
              defined in YTOIJO, used YTOPNW,YTPVTX
       LCONVS ..... find gamma conversions ahead of pr. vtx search
              defined in YTOIJO, used YTOPNW,YTPVTX,YHISTO
       LVZERS ..... find v0's ahead of pr. vtx search
              defined in YTOIJO, used YTOPNW,YTPVTX,YHISTO
       LRUSER ..... call the user routine YRUSER at the end
              defined in YTOIJO, used YTOPNW
       LBCRFD ..... beam crossing information found
              defined in YTOIRU, used in YTPVTX
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YHISTO                                                               
                   |----  HBOOK2                              External             
                   |----  HBOOK1                              External             
   
 
3 YHUSER
         SUBROUTINE YHUSER
  ------------------------------------------------------------------------------
    CKEY YTOP BOOK HISTOGRAMS
  ------------------------------------------------------------------------------
   Book histos for user routine
       AUTHOR :     G. LUTZ  AUGUST 1991
   
   
       Description
       ===========
       THIS ROUTINE BOOKS HISTOGRAMS FOR THE USER ROUTINES
       IT IS CALLED FROM ROUTINE YTIJOB
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTIJOB                                                                          
        |---- YHUSER.                                                              
   
 
3 YINVMX
         SUBROUTINE YINVMX(A,O,L,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Invert upper triangle of symmetric matrix stored row wise
       Author :     G. Lutz     /11/90
   
   
       Description
       ===========
       invert upper triangle of symmetric matrix stored row wise
   
       A ...... matrix input
       O ...... inverted matrix output
       L ...... matrix dimension
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YINVMX                                                               
                   |----  RSINV                               External             
   
 
3 YITCOF
         SUBROUTINE YITCOF (ITR,NUIT,XYZ,RITC,FITC,ZITC,LDMP)
  ------------------------------------------------------------------------------
    CKEY YTOP ITC
  ------------------------------------------------------------------------------
   Find itc coordinates on a track
       Author :     W. Maenner    /06/91
       Modified :   M. Bosman   23/07/91
   
       Description
       ===========
    find IT coordinates for track ITR
    NCOM is no. of complete hits (ie rphi and z coordinates)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YITCOF                                                               
                   |----  YDEFRF                                                   
                   |----  NAMIND                              External             
                   |----  IABS                                External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 YMKAND
         SUBROUTINE YMKAND(MWD,MSIZ,MA,MB,M,LZERO)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Logical and of markers
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       logical AND of markers MA and MB
       input : MWD   nb of marker words
               MSIZ  size of marker word
               MA,MB markers
       output : result is stored in marker M
                LZERO true if no common bits are found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTCONV                                                                          
   YTPVTX                                                                          
   YTRV0S                                                                          
   YVPOSS                                                                          
        |---- YMKAND                                                               
                   |----  IAND                                External             
   
 
3 YMKCLE
         SUBROUTINE YMKCLE(MWD,MSIZ,M,IBIT)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Clear bit ibit in marker m
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               M     marker word
               IBIT  bit nb to be cleared in marker M
       output : modified marker M
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YVPOSS                                                                          
        |---- YMKCLE                                                               
                   |----  MOD                                 External             
                   |----  IBCLR                               External             
   
 
3 YMKCNT
         SUBROUTINE YMKCNT(MWD,MSIZ,MAXBT,M,N)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Count number of set bits in marker m
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               M     marker word
               MAXBT maximum nb of bits to consider
       output : number of set bits in marker M up to bit MAXBT
                result in N
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YVPOSS                                                                          
        |---- YMKCNT                                                               
                   |----  BTEST                               External             
   
 
3 YMKCOP
         SUBROUTINE YMKCOP(MWD,M,MCOP)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Copies marker m to mcop
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               M     marker word
       output : MCOP copy of M
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPRIVX                                                                          
   YVPOSS                                                                          
   YVXBLD                                                                          
        |---- YMKCOP.                                                              
   
 
3 YMKEXP
         SUBROUTINE YMKEXP(MWD,MSIZ,M,MAXBT,N,JBIT)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Expand marker m up to bit maxbt
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               M     marker word
               MAXBT maximum nb of bits to consider
       output : nb of set bits in M up to MAXBT in N
                set bit indices in JBIT(1 to N)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPRIVX                                                                          
        |---- YMKEXP                                                               
                   |----  BTEST                               External             
   
 
3 YMKIDC
         SUBROUTINE YMKIDC(MWD,MSIZ,MAXBT,MA,MB,N)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Count number of identical set bits in marker ma and mb
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               M     marker word
               MAXBT maximum nb of bits to consider
       count number of identical set bits in marker MA and MB
       up tp bit MAXBT. returns result in N
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YVPOSS                                                                          
        |---- YMKIDC                                                               
                   |----  IAND                                External             
                   |----  BTEST                               External             
   
 
3 YMKIDT
         SUBROUTINE YMKIDT(MWD,MSIZ,MA,MB,LID)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Test if markers ma and mb are identical
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               MA,MB marker word
       output : LID=TRUE if markers MA and MB are identical
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YVPOSS                                                                          
        |---- YMKIDT.                                                              
   
 
3 YMKMIS
         SUBROUTINE YMKMIS(MWD,MSIZ,MTEST,MSET,LMISS)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Compares marker mset and marker mtest
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of makrker word
               MTEST reference marker word
               MSET  marker word to be tested
       output : LMISS=TRUE if bits do not compare
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YVPOSS                                                                          
        |---- YMKMIS                                                               
                   |----  IAND                                External             
   
 
3 YMKORR
         SUBROUTINE YMKORR(MWD,MSIZ,MA,MB,M)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Logical or of markers
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               MA,MB markers
       output: logical OR of markers MA and MB
                result is stored in M
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTCONV                                                                          
   YTRV0S                                                                          
        |---- YMKORR                                                               
                   |----  IOR                                 External             
   
 
3 YMKSET
         SUBROUTINE YMKSET(MWD,MSIZ,M,IBIT)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Set bit i in marker m
       Author :     G. Lutz   30/11/87
   
   
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               M     marker word
               IBIT  bit nb to be set in marker M
       output : modified marker M
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPRIVX                                                                          
   YTCONV                                                                          
   YTPVTX                                                                          
   YTRV0S                                                                          
   YVPOSS                                                                          
   YVXBLD                                                                          
        |---- YMKSET                                                               
                   |----  MOD                                 External             
                   |----  IBSET                               External             
   
 
3 YMKSHR
         SUBROUTINE YMKSHR(MWD,MSIZ,M,IBIT)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Shrinks marker m
       Author :     G. Lutz   30/11/87
       REVISED:     G.LUTZ    FEBRUARY 1991
   
   
       Description
       ===========
       shrinks marker M (take out bit IBIT)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YVPOSS                                                                          
        |---- YMKSHR                                                               
                   |----  IBSET                               External             
                   |----  NOT                                 External             
                   |----  MOD                                 External             
                   |----  IAND                                External             
                   |----  ISHFT                               External             
                   |----  BTEST                               External             
   
 
3 YMKTST
         SUBROUTINE YMKTST(MWD,MSIZ,M,IBIT,LSET)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Test if bit ibit in marker m is set
       Author :     G. Lutz   30/11/87
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               M     marker word
               IBIT  bit nb to be checked in marker M
       output : LSET=TRUE if bit is set
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YVPOSS                                                                          
   YVXBLD                                                                          
        |---- YMKTST                                                               
                   |----  MOD                                 External             
                   |----  BTEST                               External             
   
 
3 YMKZER
         SUBROUTINE YMKZER(MWD,MSIZ,M)
  ------------------------------------------------------------------------------
    CKEY YTOP MARKER / USER
  ------------------------------------------------------------------------------
   Zeroes marker m
       Author :     G. Lutz   30/11/87
       Description
       ===========
       input : MWD   nb of marker words
               MSIZ  size of marker word
               M     marker word
       output : marker M cleared
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPIDAS                                                                          
   YPRIVX                                                                          
   YTCONV                                                                          
   YTPVTX                                                                          
   YTRV0S                                                                          
   YVPOSS                                                                          
        |---- YMKZER.                                                              
   
 
3 YMS3IN
         SUBROUTINE YMS3IN(A,B,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YTOP MATRIX / USER
  ------------------------------------------------------------------------------
   Inverse a 3x3 symmetric matrix in double precision
       Author :     G. Lutz   30/03/88
       Modified :   M. Bosman 01/12/88
       Modified :   G.Lutz,M. Bosman 07/07/91
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
   
       Description
       ===========
       This routine inverses a 3X3 symmetric matrix
       input double precision, internal calculations
       in double precision
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YFMVTC                                                                          
   YFMVTR                                                                          
   YFTVTC                                                                          
   YFTVTR                                                                          
   YFVMAP                                                                          
   YFVMC                                                                           
   YFVMC1                                                                          
        |---- YMS3IN.                                                              
   
 
3 YPIDAS
         SUBROUTINE YPIDAS(IER)
  ------------------------------------------------------------------------------
    CKEY YTOP PARTICLE
  ------------------------------------------------------------------------------
   Assign particle identity from data or monte carlo generation
       Author :     G. Lutz   jan 5 1989
       modified:    J.Lauber  May 2 1991
       modified:    M.Bosman  jul 15 1991
   
   
       Description
       ===========
       This routine assigns particle identification possibilities of
       charged tracks either from data or from Monte Carlo generation.
       Results are stored in markers KPIDF0
       Assignment for real data introduced by J.Lauber
   
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPNW                                                                          
        |---- YPIDAS                                                               
                   |----  NAMIND                              External             
                   |----  YDEFRF                                                   
                   |----  YMKZER                                                   
                   |----  ISHFT                               External             
   
 
3 YPRIVX
         SUBROUTINE YPRIVX(NHXTOT,BCR,VBCR,NHX,IXHX,NEU,IXNU,
  ------------------------------------------------------------------------------
    CKEY YTOP PRIMARY VERTEX
  ------------------------------------------------------------------------------
        &  NSHX,NSVHX,HXIN,VHXIN, NSNU,NSVNU,TNU,VTNU,
        &  PRVX,VPRVX,NTPVX,IXTVP,CHISQ,ITRPVX,IFL)
   Reconstructs the primary vertex
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
       Modified :   S. Wasserbaech 09/01/90  Added NPRTR=2 procedure.
       Rewritten:   G. Lutz   10/01/91
       Modified :   M. Bosman 12/07/91
       Modified  :  G. Lutz   30/03/92
   
       replaces routine yprimv. main difference: common fit of beam
       crossing and tracks
       exclusion of tracks with large distance from beam crossing
       exclusion of itc only tracks
   
   
       Description
       ===========
       This routine finds the primary vertex
       from beam crossing and set of track candidates
   
       NHXTOT ..... TOTAL # OF TRACKS (HELICES)
       BCR(I) ..... X,Y,Z OF AVERAGE BEAM CROSSING POINT
       VBCR(I) .... CORRESPONDING VARIANCE
       NHX ........ NUMBER OF TRACKS (HELICES)
       IXHX(I) ..... TRACK INDICES
       NEU ........ NUMBER OF NEUTRAL TRACKS (HELICES)
       IXNU(I) ..... TRACK INDICES
       NSHX ....... SPACING BETWEEN CONSECUTIVE HELIX PARAMETERS
       NSVHX ...... SPACING BETWEEN CONSECUTIVE HELIX VARIANCES
       HXIN(I) .... BUFFER FOR HELIX PARAMETERS
       VHXIN(I) ... BUFFER FOR HELIX VARIANCES
       NSNU ....... SPACING BETWEEN CONSECUTIVE NEUTR.TR. PARAMETERS
       NSVHX ...... SPACING BETWEEN CONSECUTIVE NEUTR. TR. VARIANCES
       TNU(I)  .... BUFFER FOR NEUTRAL TRACK PARAMETERS
       VTNU(I)  ... BUFFER FOR NEUTRAL TRACK VARIANCES
       PRVX(I) .... X,Y,Z OF PRIMARY VERTEX
       VPRVX(I).... CORRESPONDING VARIANCES
       NTPVX ...... # OF TRACKS IN PRIM. VTX
       IXTVP ..... MARKER WORD FOR TRACKS IN VERTEX
       CHISQ ...... VERTEX CHISQ
       ITRPVX(I) .. INDICES OF TRACKS IN PRIM. VTX
       IFL ........ PROBLEM FLAG
                       0 -> successful completion
                      10 -> successful completion for two-track vertex
                    else -> failure
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTPVTX                                                                          
        |---- YPRIVX                                                               
                   |----  YMKZER                                                   
                   |----  YDEFRF                                                   
                   |----  JHXFORMAT                           External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  YFTVTR                                                   
                   |----  YMKSET                                                   
                   |----  YVPOSS                                                   
                   |----  CHIVMS                              External             
                   |----  VTXMS0                              External             
                   |----  VARVMS                              External             
                   |----  YMKCOP                                                   
                   |----  ITRV00                              External             
                   |----  YMKEXP                                                   
   
 
3 YPRVER
         SUBROUTINE YPRVER(XVER,KBIT,LDMP)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Project vertex into vdet/itc/tpc bit pattern
       Author :     W. Manner 25/01/93
   
       Description
       ===========
        Given a vertex with coordinates XVER(3) define a bit in
        INTEGER array KBIT(31) depending on the vertex position
        bit 1: before VDET layer 1
        bit 2: between VDET layer 1 and 2
        bit 3: between VDET layer 2 and ITC or closest to ITC  layer 1
        bit 2+I, I=2,8: closest to ITC layer I
        bit 10+I, I=1,21: closest to TPC layer I
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YSVTBK                                                                          
   YSTVTX                                                                          
        |---- YPRVER                                                               
                   |----  UZERO                               External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
   
 
3 YRUSER
         SUBROUTINE YRUSER(IFAIL)
  ------------------------------------------------------------------------------
    CKEY YTOP USER
  ------------------------------------------------------------------------------
   User routine called at the end of the package
       Author :     M. Bosman      16/07/91
   
       Description
       ===========
   
       user personnal  code
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPNW                                                                          
        |---- YRUSER.                                                              
   
 
3 YSTVTX
         SUBROUTINE YSTVTX(IXHX,PAR1,PAR2,IFLAG,ISTO,VTX,IBVD,LDMP)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Find correct circle crossing to start v0 vertex fit
       Author :     W. Manner 25/01/93
   
       Description
       ===========
        For tracks IXHX(1) IXHX(2) track parameters PAR1(5) PAR2(5)
        look if tracks have hits in front of vertex. Check that vertex
        is behind beam crossing
        IFLAG = 0   OK
        IFLAG = 1   no vertex found
        ISTO   no of vertices found and stored in VTX(3,I),I=1,ISTO
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTRV0S                                                                          
        |---- YSTVTX                                                               
                   |----  YBIPAT                                                   
                   |----  YCIRCR                                                   
                   |----  IAND                                External             
                   |----  ABS                                 External             
                   |----  YPRVER                                                   
   
 
3 YSVVTX
         SUBROUTINE YSVVTX(IBNK,IVTYP,VXOUT,VVXOU,CHISQ,IVDOF,IXHX,IVTRN,
  ------------------------------------------------------------------------------
    CKEY YTOP PYER
  ------------------------------------------------------------------------------
        $  IER,LGARB)
   Fill pyer bank
      Author   :- Jochen Lauber         24-OCT-1991
   
      Inputs:
           -  ibnk     :    bank number of PYER,PYFR
                            for ordinary users = 0
           -  ivtyp    :    vertex type  0..255 1 = main
                                                2 = V0
                                                3 = main for 2-prongs
                                                4 = conversion
                                                5,6 = secondary
           -  vxout(3) :    vertex coordinates
           -  vvxout(6) :   packed covariance matrix
           -  chisq
           -  ivdof     :   degreees of freedom usually: 2*ivtrn - 3
           -  ixhx(ivtrn) : track numbers of tracks belonging to vertex
           -  ivtrn    :    count of tracks belonging to the vertex
   
      Outputs:
           -  ier      :  0 means o.k.
           -  lgarb (logical) true means garbage collection has taken place
   
      Libraries required:
   
      Description
      ===========
      saves the vertex in the bank PYER, the covariance matrix and the chisqare
      and the degrees of freedoms and the vertextype
      save the track indices belonging to the secondary vertex in the bank PYFR
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YSVVTX                                                               
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  UCOPY                               External             
   
 
3 YTCONV
         SUBROUTINE YTCONV(IER)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Reconstruct gamma conversions
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
       Rewritten:   G. Lutz    9/02/91
       Modified :   G. Lutz   30/03/92
       MODIFIED :   G. LUTZ    3/12/92
       Modified  :  W.Manner  10/02/97
       Modified  :  W.Manner   1/11/97 Declare WTX,VARWX arrays
   
   
       Description
       ===========
       This routine looks for gamma conversions
       within charged tracks identified as being electrons
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPNW                                                                          
        |---- YTCONV                                                               
                   |----  YMKZER                                                   
                   |----  YMKSET                                                   
                   |----  YDEFRF                                                   
                   |----  NAMIND                              External             
                   |----  HXIN                                External             
                   |----  UMSERR                                                   
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  YMKAND                                                   
                   |----  KPIDF0                              External             
                   |----  PRECTO                              External             
                   |----  YFTVTR                                                   
                   |----  YVDCOF                                                   
                   |----  YFMVTR                                                   
                   |----  MIN                                 External             
                   |----  AMAX1                               External             
                   |----  YFVMC                                                    
                   |----  YTPAR                                                    
                   |----  KPORF0                              External             
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  UCOPY                               External             
                   |----  YMKORR                                                   
                   |----  W                                   External             
                   |----  PSUM                                External             
   
 
3 YTIJOB
         SUBROUTINE YTIJOB
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Initialize the job for topology reconstruction
       from JULIA
       Author :     M. Bosman    30/11/88
       Modified:    G. Lutz        /01/91
       Modified:    M. Bosman    12/07/91
       Modified  :  G. Lutz   30/03/92
       Modified  :  G. Lutz    1/10/92
   
       Description
       ===========
       This routine is called once at the JOB beginning to
       initialize the TOPOLOGY part of the reconstruction
       program.
       It modifies default options according to YOPT cards
       It reads the bank YTPA that contains cuts for the
       TOPOLOGY reconstruction program to overwrite
       default options
       Call YTOIJO that initializes the output banks and
       the summary variables
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YTIJOB                                                               
                   |----  NLINK                               External             
                   |----  CHAINT                              External             
                   |----  NAMIND                              External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  YHUSER                                                   
   
 
3 YTOIRU
         SUBROUTINE YTOIRU(IRUNRC,FIELD)
  ------------------------------------------------------------------------------
    CKEY YTOP RUN
  ------------------------------------------------------------------------------
   Initialize the run for topology reconstruction
       Author :     M. Bosman      30/11/88
       Modified:  G.Lutz,M.Bosman  15/07/91
       Modified  :  G. Lutz   30/03/92
   
       Description
       ===========
       This routine is called once at each RUN beginning to
       initialize the TOPOLOGY part of the reconstruction
       program.
       If the beam crossing constraint is required, it does not
       use anymore the PBCR bank to initialize the beam position
       but rather calls the routine GETLEP for real data
       or the bank KHVF for monte carlo data.
       Default values are used if no beam constraint is required
       or with a warning message if no proper values where found
       by GETLEP or in KHVF
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YTOIRU                                                               
                   |----  JUNIDB                              External             
                   |----  GETLEP                                                   
                   |----  FLOAT                               External             
                   |----  AMAX1                               External             
                   |----  NAMIND                              External             
   
 
3 YTOPNW
         SUBROUTINE YTOPNW
  ------------------------------------------------------------------------------
    CKEY YTOP STEERING
  ------------------------------------------------------------------------------
   Steering routine for topology reconstruction
       Author :     M. Bosman , G. Lutz   30/11/88
       Modified:    G.Lutz                  /02/91
       Modified  :  G. Lutz   30/03/92
   
       Input: Comdeck YPARTO
   
       Description
       ===========
       This routine steers the topology reconstruction
       according to the options selected with the YOPT cards
       By default, it reconstruct the primary vertex without
       beam crossing constraint.
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPOL                                                                          
        |---- YTOPNW                                                               
                   |----  ABRUEV                              External             
                   |----  NDROP                               External             
                   |----  YDEFRF                                                   
                   |----  NAMIND                              External             
                   |----  FLOAT                               External             
                   |----  YTSTRK                                                   
                   |----  YPIDAS                                                   
                   |----  TIMEL                               External             
                   |----  YTCONV                                                   
                   |----  YTRV0S                                                   
                   |----  YTPVTX                                                   
                   |----  YTOSVT                                                   
                   |----  YRUSER                                                   
   
 
3 YTOPOL
         SUBROUTINE YTOPOL
  ------------------------------------------------------------------------------
    CKEY YTOP MAIN
  ------------------------------------------------------------------------------
   Steering routine for topology reconstruction
       Author :     M. Bosman     20/09/91
       Modified  :  G. Lutz   30/03/92
       Modified  :  G. Lutz    1/10/92
   
       Description
       ===========
       This routine calls the new version of
       the steering routine of the YTOP package
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YTOPOL                                                               
                   |----  YTOPNW                                                   
   
 
3 YTOPRT
         SUBROUTINE YTOPRT(IPRL)
  ------------------------------------------------------------------------------
    CKEY YTOP PRINT
  ------------------------------------------------------------------------------
   Printout of reconstructed vertices
       To be called once per event after YTOPOL
       Author :     M. Bosman   jan 30 1989
       Modified:    S. Wasserbaech 9 jan 1990
   
   
       Description
       ===========
       This routine prints the reconstructed primary vertex
       and lists the tracks that are used in the vertex
       IPRLV = 1 : prints only the position of the vertex
               2 : lists the tracks used in the vertex
                   and the CHI2
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YTOPRT                                                               
                   |----  NAMIND                              External             
   
 
3 YTOSUM
         SUBROUTINE YTOSUM
  ------------------------------------------------------------------------------
    CKEY YTOP SUMMARY
  ------------------------------------------------------------------------------
   Summary printout for the topology reconstruction
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
       Modified :   G. Lutz   12/04/92
   
   
       Description
       ===========
       This routine prints the summary
       for the TOPOLOGY reconstruction program
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YTOSUM                                                               
                   |----  FLOAT                               External             
                   |----  KYFLAG                              External             
   
 
3 YTOSVT
         SUBROUTINE YTOSVT(IER)
  ------------------------------------------------------------------------------
    CKEY YTOP VERTEX
  ------------------------------------------------------------------------------
   Reconstruct vertices from geometrical criteria only  s
       Author :     G. Lutz     /04/89
   
       Description
       ===========
       This routine is dummy
       No official version released yet
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPNW                                                                          
        |---- YTOSVT.                                                              
   
 
3 YTPAR
         SUBROUTINE YTPAR(IQ,VTX,VVTX,
  ------------------------------------------------------------------------------
    CKEY YTOP TRACK
  ------------------------------------------------------------------------------
        &      PSUM,VPSUM,VPSVX,
        &      TRACK,VTRACK,
        &      IFAIL)
   Calculation of track parameters from vertex and momentum
       Author :     G. Lutz      /04/91
       Modified:    D. Smith  26/10/99  Double precision fixes for Linux
   
       Description
       ===========
   
    INPUT
       IQ  .......... CHARGE OF TRACK IN UNITS OF ELEMENTARY CHARGE
       VTX .......... X,Y,Z OF INPUT VERTEX
       VVTX ......... VARIANCE OF INPUT VERTEX
                      VX;
                      VX.VY;VY;
                      VX.VZ;VY.VZ;VZ
       PSUM ......... MOMENTUM VECTOR
       VPSUM ........ ERROR COVARIANCE MATRIX OF MOMENTUM VECTOR
                      PX;
                      PX.PY;PY;
                      PX.PZ;PY.PZ;PZ
       VPSVX ........ ERROR CORRELATION MOMENTUM-VERTEX
                      VX.PX; VY.PX; VZ.PX;
                      VX.PY; VY.PY; VZ.PY;
                      VX.PZ; VY.PZ; VZ.PZ;
   
    OUTPUT
       TRACK ........ TRACK PARAMETERS AS DEFINED DIFFERENTLY FOR
                      CHARGED AND NEUTRAL TRACKS:
                      HELIX PARAMETERS ORDERED IN SEQUENCE
                      RHO=1/R(SIGNED); T; PHI0; D0(SIGNED); Z0
                      RHO>0 FOR COUNTERCLOCKWISE BENDING
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
   
                      NEUTRAL TRACK PARAMETERS ORDERED IN SEQUENCE
                      P; T; PHI0; D0(SIGNED); Z0
                      D0.GT.0 IF MOMENTUM AROUND ORIGIN IS POSITIVE
   
       VTRACK ....... CORRESPONDING VARIANCES ORDERED AS
                      RHO;
                      RHO.T; T
                      RHO.PHI0;   T.PHI0    PHI0
                      RHO.D0;    T.D0      PHIZERO     D0
                      RHO.Z0     T.Z0     PHI0.Z0    D0.Z0    Z0
                      RESPECTIVELY RHO REPLACED BY P FOR NEUTRALS
                      1=ELECTRON,2 MUON, 3 PION, 4 KAON, 5 PROTON
                      NPIDC WORDS PER COMBIATION
   
       IFAIL ........ =0 FOR REGULAR RETURN
   
   
       SIGN CONVENTION:
       RADIUS: POSITIVE FOR COUNTER CLOCKWISE TURN
       DO:     POSITIVE IF PARTICLE HAS POSITIVE ANGULAR MOMENTUM
               AROUND ORIGIN
   
       VARIABLE SEQUENCE: 1/R,T,PHI0,D0,Z0
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YS0LLD                                                                          
   YTCONV                                                                          
   YTRV0S                                                                          
        |---- YTPAR                                                                
                   |----  SQRT                                External             
                   |----  DATAN2                              External             
                   |----  SIGN                                External             
   
 
3 YTPVTX
         SUBROUTINE YTPVTX(IER)
  ------------------------------------------------------------------------------
    CKEY YTOP VERTEX
  ------------------------------------------------------------------------------
   Reconstructs the primary vertex
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
       Modified :   S. Wasserbaech 09/01/90
       Rewritten:   G. Lutz     /02/91
       Modified :   M. Bosman 11/07/91
       Modified  :  G. Lutz   30/03/92
   
   
       Description
       ===========
       This routine reconstructs the primary vertex.
       It has been adapted by G.Lutz from the routine YTOPVT
       to use the FRFT bank with VDET information
       when available and "reconstructed neutral tracks"
       like V0 or gamma-conversion.
       If only the ITC-TPC track bank exists and the reconstruction
       of V0 and gamma conversions is not requested, it performs
       an identical task to YTOPVT.
   
       Return codes
       ============
       IER= 0 .... primary vertex found
          = 1 .... no primary vertex found
          =11 .... no space to create PYFR
          =12 .... no space to create PYER
          =13 .... no FRFT bank found
          =14 .... error return from mult.scatt. rout. UMSERR
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPNW                                                                          
        |---- YTPVTX                                                               
                   |----  YMKZER                                                   
                   |----  YMKSET                                                   
                   |----  YDEFRF                                                   
                   |----  YMKAND                                                   
                   |----  KPIDF0                              External             
                   |----  KPORF0                              External             
                   |----  ABS                                 External             
                   |----  PRECTO                              External             
                   |----  SORTZV                              External             
                   |----  NAMIND                              External             
                   |----  HXIN                                External             
                   |----  UMSERR                                                   
                   |----  YPRIVX                                                   
                   |----  YVXBLD                                                   
                   |----  AUBOS                               External             
                   |----  UCOPY                               External             
                   |----  VXTOP0                              External             
                   |----  VVXTOP                              External             
                   |----  CHVTOP                              External             
                   |----  FLOAT                               External             
                   |----  VADD                                External             
                   |----  KYFLAG                              External             
   
 
3 YTRV0S
         SUBROUTINE YTRV0S(IER)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Reconstruct v0 decays
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
       Rewritten :  G. Lutz     /02/91
       Modified :   M. Bosman 11/07/91
       Corrected:   W.Manner  28/02/92
       Modified  :  G. Lutz   30/03/92
       Modified  :  G. Lutz    1/10/92
       Modified  :  W.Manner   2/03/93
       Modified  :  W.Manner  10/02/97
   
   
       Description
       ===========
       This routine looks for V0 candidates
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPNW                                                                          
        |---- YTRV0S                                                               
                   |----  YMKZER                                                   
                   |----  YMKSET                                                   
                   |----  YDEFRF                                                   
                   |----  HXIN                                External             
                   |----  YMKAND                                                   
                   |----  KPORF0                              External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  PRECTO                              External             
                   |----  KPIDF0                              External             
                   |----  YFTVTR                                                   
                   |----  YMKORR                                                   
                   |----  NAMIND                              External             
                   |----  YSTVTX                                                   
                   |----  UCOPY                               External             
                   |----  YVDCOF                                                   
                   |----  YFMVTR                                                   
                   |----  YTPAR                                                    
                   |----  DMASS                               External             
                   |----  AMASS                               External             
                   |----  AMAX1                               External             
                   |----  YFVMC                                                    
                   |----  NLINK                               External             
                   |----  AUBOS                               External             
                   |----  VXOUT                               External             
                   |----  VVXOU                               External             
                   |----  W                                   External             
                   |----  PSUM                                External             
   
 
3 YTSTRK
         SUBROUTINE YTSTRK(IER)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Selects tracks to be considered for vertex search
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
       Modified :   G. Lutz      02/91
   
   
       Description
       ===========
       This routine calculates the momentum of the
       reconstructed tracks and selects the tracks
       to be considered in the first step of vertex
       reconstruction
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTOPNW                                                                          
        |---- YTSTRK                                                               
                   |----  YDEFRF                                                   
                   |----  ABRUEV                              External             
                   |----  SQRT                                External             
                   |----  MOD                                 External             
                   |----  DSINV                               External             
                   |----  ABS                                 External             
   
 
3 YVDCOF
         SUBROUTINE YVDCOF (ITR,NUVD,XYZ,RVDC,FVDC,ZVDC,NCOM,LDMP)
  ------------------------------------------------------------------------------
    CKEY YTOP
  ------------------------------------------------------------------------------
   Find vdet coordinates on a track
       Author :     W. Maenner    /06/91
       Modified :   M. Bosman   23/07/91
   
       Description
       ===========
    find vd coordinates for track ITR
    NCOM is no. of complete hits (ie rphi and z coordinates)
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YBIPAT                                                                          
   YTCONV                                                                          
   YTRV0S                                                                          
        |---- YVDCOF                                                               
                   |----  YDEFRF                                                   
                   |----  NAMIND                              External             
                   |----  COS                                 External             
                   |----  SIN                                 External             
   
 
3 YVPOSS
         SUBROUTINE YVPOSS(IENT,NVX,NHX,NEU,
  ------------------------------------------------------------------------------
    CKEY YTOP VERTEX
  ------------------------------------------------------------------------------
        &  VXIN,VVXIN,
        &  IXHX,NSHX,NSVHX,HXI,VHXI,
        &  IXNU,NSNU,NSVNU,TNU,VTNU,
        &  JTREQ,MULIN,MNMUL,MXMUL,NEXCL,NSNGL,KSNGL)
   Finds all combinations of tracks that form a vertex
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
       MODIFIED :   G.LUTZ  FEBRUARY 1991
   
   
       Description
       ===========
       finds all combinations of tracks that form a vertex
   
     INPUT:
       IENT .........=1 .... GENERATE TRACK CROSSING TABLE ONLY
                     =2 .... FIND VERTICES WITHOUT CALC. OF CROSS TABLE
                     =3 .... GENERATE CROSS TABLE + VERTICES
       NVX ......... NUMBER INPUT VERTICES (USUALLY 1 OR ZERO)
       NHX ......... NUMBER OF HELIX INDICES
       NEU ......... NUMBER OF NEUTRAL TRACKS
       VXIN(3,I) ... X,Y,Z OF INPUT VERTEX I
       VVXIN(6,I) .. VARIANCE OF INPUT VERTEX I
       IXHX ........ HELIX INDICES FOR VERTEX FIT
                     ALSO ALLOWED TO BE ZERO; THEN IT IS IGNORED
       NSHX ........ SPACING BETWEEN CONSECUTIVE HELIX PAR.
       NSVHX ....... SPACING BETWEEN CONSECUTIVE HELIX VAR.
       HXI(I) ...... HELIX PARAMETERS
       VHXI(I) ..... HELIX VARIANCES
       IXNU ........ NUMBER OF NEUTRAL TR. INDICES FOR VERTEX FIT
       NSNU ........ SPACING BETWEEN CONSECUTIVE NEUTRAL TR. PAR.
       NSVNU ....... SPACING BETWEEN CONSECUTIVE NEUTRAL TR. VAR.
       TNU(I) ...... NEUTRAL TRACK PARAMETERS
       VTNU(I) ..... NEUTRAL TRACK VARIANCES
         JTREQ(1) ... # OF SETS OF TRACKS
               (2) ... NEGATIVE OF # OF TRACKS REQUIRED FROM FIRST SET
               (3,..)  TRACK INDICES IN FIRST SET; ZERO INDICES ARE SKIPP
               (...)   REPEAT FROM (2) FOR OTHER SETS
            MULIN ... STOP SEARCHING VERTICES IF MULTIPL.
                       IS HIGHEST FOUND - MULIN
         MNMUL ....  MINIMUM MULTIPLICITY OF VERTICES (DEFAULT=2)
         MXMUL ....  MAXIMUM MULTIPLICITY OF VERTICES (DEFAULT NPTR)
        NEXCL ....     NUMBER OF EXCLUDED TRACK COMBINATIONS
     OUTPUT:
        NSNGL ........ # OF TRKS FOUND WITHOUT CROSSING ANY (REQUIRED)
                       OTHER TRACKS
        KSNGL ........ INDICES OF TRACKS WITHOUT CROSSING
   
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPRIVX                                                                          
        |---- YVPOSS                                                               
                   |----  MAX0                                External             
                   |----  YMKZER                                                   
                   |----  ITRV00                              External             
                   |----  YMKSET                                                   
                   |----  YFTVTR                                                   
                   |----  YMKCNT                                                   
                   |----  JCOMB                               External             
                   |----  YMKTST                                                   
                   |----  YMKAND                                                   
                   |----  YMKCOP                                                   
                   |----  YMKSHR                                                   
                   |----  MMSET                               External             
                   |----  YMKIDC                                                   
                   |----  YMKCLE                                                   
                   |----  COMBI                               External             
                   |----  MCOMB                               External             
                   |----  YMKIDT                                                   
                   |----  MRKEXC                              External             
                   |----  YMKMIS                                                   
                   |----  CHIVMS                              External             
   
 
3 YVXBLD
         SUBROUTINE YVXBLD(NHX,NEU,IXHX,IXNU,
  ------------------------------------------------------------------------------
    CKEY YTOP VERTEX
  ------------------------------------------------------------------------------
        &  HXI,NSHX,VHXI,NSVHX,
        &  TNU,NSNU,VTNU,NSVNU,
        &  VTX1,VVTX1,CHIV1,NDFV1,
        &  MKTV1,VTX2,VVTX2,CHVX2,NDFV2,MKTV2,ICONL,
        &  NADTR,IXTRI,CHVXI)
   Build up vertex by adding sequentially tracks
       Author :     G. Lutz   30/11/87
       Modified :   M. Bosman 01/12/88
      G. LUTZ   JULY 91
       corrected 6.2.92 G.Lutz
   
       Description
       ===========
       builds up a vertex by adding sequentially
       the most compatible track
   
       NHX ......... NUMBER OF CHARGED TRACKS TO BE INVESTIGATED
       NEU ......... NUMBER OF NEUTRAL TRACKS TO BE INVESTIGATED
       IXHX(I) ..... INDICES OF HELICES
       IXNU(I) ..... INDICES OF NEUTRAL TRACKS
       HXI(I) ...... HELIX PARAMETERS
       NSHX ....... SPACING BETWEEN CONSECUTIVE HELICES
       VHXI(I) ..... HELIX VARIANCES
       NSVHX ...... SPACING BETWEEN CONSECUTIVE HELICES
       TNU(I) ...... NEUTRAL TRACK PARAMETERS
       NSNU ....... SPACING BETWEEN CONSECUTIVE HELICES
       VTNU(I) ..... HELIX VARIANCES
       NSVNU ...... SPACING BETWEEN CONSECUTIVE HELICES
       VTX1 ........ COORD. OF INITIAL VERTEX
       VVTX1 ....... VARIANCES  "
       CHIV1 ...... CHISQ OF   "
       NDFV1 ...... # OF DEGREES OF FREEDOM OF INITIAL VERTEX
       MKTV1 ...... TRACK MARKER HAS BIT I SET IF TRACK I IS
                     INCLUDED IN INITAL VERTEX
       VTX2..MKTV2  SAME FOR FINAL VERTEX
       ICONL ...... =1 99% CONFIDENCE LIMIT
                     =2 99% CONFIDENCE LIMIT FOR VERTEX
       NADTR ...... # OF ADDED TRACKS
       IXTRI ....... INDICES OF ADDED TRACKS
       CHVXI ...... CHISQ OF INTERMEDIATE VERTICES
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YTPVTX                                                                          
        |---- YVXBLD                                                               
                   |----  YMKCOP                                                   
                   |----  YMKTST                                                   
                   |----  YFTVTR                                                   
                   |----  YMKSET                                                   
   

2 YV0

  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
     ! ALEPHLIB 31.3
        YD0NFN,YFQERQ,YNV0NF,YNV0VE,YV0MAS,YV0ONG,YV0ONF :
         Double precision fixes for Linux                           (D.Smith)
    
     ! ALEPHLIB 31.2
        YNV0NF : Protect against divide by zero (M.Cattaneo)
    
     ! ALEPHLIB 308
        YFQERQ : Use double precision internally, keep ERQ2 non-zero (M.Cattaneo)
    
     ! correction file no.1 for ALEPHLIB 30.7
        YFMV0V : Protect against precision problem (M.Cattaneo)
    
     ! ALEPHLIB 30.6
        YMFMIN,YMFV0V : fix variable type inconsistencies in function calls, 
                        for Linux                            (A.Waananen)
     ! ALEPHLIB 21.6
        YTCONV - Use correct HAC parameter JYNMVS instead of obsolete JYNMSC
        YTRV0S - Use correct HAC parameter JYNMVS instead of obsolete JYNMSC
                 (W.Manner 10/02/97)
     ! ALEPHLIB 21.3
        YV1INI - Fix multiline strings (M.Cattaneo)
     ! ALEPHLIB 21.2
       YPSIVE, YV0ONH, YMFMIN, YFPSIN - Speed up by calling NAMIND only on
               first call and remembering for subsequent calls (O. Callot)
     ! ALEPHLIB 20.8
       YDISMC - Fix calculation of symmetry point when one center
                lies inside the other circle. This happens for
                like-signed tracks (P.Rensing).
     ! ALEPHLIB 15.7
       YV1INI - replace WRITE(6) with IF (IW(6).GT.0) WRITE(IW(6))
     ! ALEPHLIB 15.5
       YNV0NF - replace the protection of 15.4 with a weaker one
     ! ALEPHLIB 15.4
       YNV0NF - add  a protection against huge values in XMT matrix or
                VT vector which make DEQINV CERNLIB routine crash
     ! ALEPHLIB 15.2
       set keywords on CKEY cards
    
     ! ALEPHLIB 14.6
       YDISMC - add a protection against  negative sqrt
      -------------------------------------------------------
       =====================================
        Documentation on the YMFV0V package
       =====================================
       Author:M.A.Ciocci,L.Rolandi (tel.6412)
       Long writeup : will be avalaible
       *******************
       *News from 28/1/93*
       *******************
       ************************
       * VERY IMPORTANT CHANGE*
       ************************
       From now the NR of the yv0v bank is related  to the NR of the
       YV1C bank. See later for the different meaning of the NR values
       From now the package will use the FRFT bank with the lowest NR.
       So everywhere  it will use the  refitted tracks including minivertex
       information.
       Implemented subroutine:
       ychiv2,yv1ini
       New subroutine ychi00
    
          FUNCTION YCHIV2 (KPOI,VPRIM,SIVPR,IFAIL)
    ----------------------------------------------------------------------
     Calculate the chi2 of a track,whith the constraint of primary vertex
    
        AUTHOR: M.A.CIOCCI,L.ROLANDI 24/3/88
        MODIFIED:M.A.CIOCCI 20/2/90
        Modified: J.Sedgbeer 19/6/91. Bug fix in ELIP1(4) = ........
        MODIFIED:M.A.CIOCCI 28/1/93. Now the chi2 that a track comes
                                     from the primary includes the
                                     covariance of the primary.
    
              DESCRIPTION
              ===========
      COMPUTES THE CHI2 OF A TRACK WITH THE CONSTRAINT
       OF THE PRIMARY VERTEX, ASSUMED CLOSE TO THE ORIGIN
    
        INPUT:
                   KPOI/I  NUMBER OF THE TRACK IN THE
                           FRFT  BANK
                   VPRIM(3)/R COORDINATES OF THE PRIMARY
                          VERTEX
                   SIVPR(3,3)/R COVARIANCE MATRIX OF THE PRIMARY
                           vertex
        OUTPUT:
                   IFAIL/I IF 0 ALL IS OK
                           IF 1 BANK FRFT MISSING OR PROBLEM WITH COV MAT
    
          FUNCTION YCHI00 (VSEC,SVSEC,VPRIM,SIVPR,IFAIL)
    ----------------------------------------------------------------------
     Calculate the c2 variation constraining a vertex to the primary vertex
    
    KEY Chi2 variation constraining  a vertex to the primary / YV0
        AUTHOR: M.A.CIOCCI 28/1/93
    
              DESCRIPTION
              ===========
      Computes the chi2 variation constraining a vertex to the primary
      vertex
    
        INPUT:
                   VSEC/R    COORDINATES OF A VERTEX
                   SVSEC/R   COVARIANCE OF VSEC VERTEX COORDINATES
    
                   VPRIM/R   COORDINATES OF THE PRIMARY
                             VERTEX
                   SIVPR/R   COVARIANCE MATRIX OF THE PRIMARY
    
        OUTPUT:
                   IFAIL/I IF 0 ALL IS OK
                           IF 1 PROBLEM WITH COV MAT
    
          SUBROUTINE YV1INI(LCONS,IER,NR)
    -----------------------------------------------------------------------
     Read the cuts for the V0 reconstruction, YV1C (DBASE)
    KEY Read the cuts for V0 recon. from yv1c bank / YV0
       Author:  M.A.Ciocci 20/2/90
       Modified: J.Sedgbeer 09/04/91. YV1C bank and common/YV0CUT/ extended
       Modified: M.A.Ciocci 28/1/93. YV1C bank have now several values of NR
         The  different cuts used in  different periods
         of Aleph data tacking (89-90 91-92 93...) are sumarized
         by the different NR (1, 2, 3) of the yv1c bank. So on the data base
         the yv1c is present with 3 different value for NR.
         If the user decide to change cuts will be sufficient to give
         by cards a bank called yv1c with NR greater than 3 and change
         the cuts value
    
       Since an Aleph Note on the subject is  available, here we will
       describe just the usage of the package. The idea is to
       give for any event some quantities relied to the V0.
       There is a single routine (ymfv0v) interfacing the package to
       the user program.
       This package drop the yv0v bank and rewrite the same bank.
       (look at yv0v bank -> sbank yv0v)
       (it can  use the mean value for run of beam beam crossing point).
       It give (if you want) the histograms for v0 candidate after
       any sequential cut (yv1c).
       And give as argument output
    
           IERCO/INTEGER         code for error:
                                 if 0 all is ok
                                 if 1, problems with covariance matrix
                                 of charged tracks in ychiv2
                                 if 2, problems with covariance matrix
                                 of charged tracks in ynv0ve
                                 if 3, problems with covariance matrix
                                 of charged tracks in ynvonf
                                 if 4, problems in yvcame with frft
                                 if 5, problems inverting covariance
                                 matrix of reconstructed V0 vertex
                                 candidate
                                 if 6, the number of V0 candidates is
                                 greater than 20
                                 if 7, no booked enlarged space for yv0v
                                 if 8, problems with working banks
                                 if 9 no space for yv0v bank
                                 if 10 no yv1c on dbase or cards
    
           NUMV0/INTEGER         Number of V0 candidates (at
                                 maximum 50)
    
           CHIOR(2,50)/REAL      chi2 increasing constraining
                                 the track coming from V0 candidate
                                 to the origin
          QGA(50)/REAL          Q value in the gamma hypothesis
          CHQGA(50)/REAL        chi2 of Q value in the gamma hypothesis
          QLA(50)/REAL          Q value in the lambda hypothesis
          CHQLA(50)/REAL        chi2 of Q value in the lambda hypothesis
          QAL(50)/REAL          Q value in the antilambda hypothesis
          CHQAL(50)/REAL        chi2 of Q value in the antilambda
                                hypothesis
          QK0(50)/REAL          Q value in the k0 hypothesis
          CHQK0(50)/REAL        chi2 of Q value in the k0 hypothesis
          XMGA(50)/REAL         invariant mass in the gamma hypothesis
          CXMGA(50)/REAL        chi2 of invariant mass in the gamma
                                hypothesis
          XMLA(50)/REAL         invariant mass in the lambda hypothesis
          CXMLA(50)/REAL        chi2 of the invariant mass in the \
                                lambda hypothesis
          XMAL(50)/REAL         invariant mass in the antilambda
                                hypothesis
          CXMAL(50)/REAL        chi2 of invariant mass  in the
                                antilambda hypothesis
          XMK0(50)/REAL         invariant mass in the k0 hypothesis
          CXMK0(50)/REAL        chi2 of the invariant mass in the
                                k0 hypothesis
         NCOR(2,50)/INTE        number of coordinates before the
                                reconstructed vertex for tracks
                                coming from v0
         DISCO(2,50)/REAL       radial distance for the furthest
                                coordinate from vertex
    -------------------------------------------------------------
    
    With the output quantity, histograms and bank you can study
    the capability of package and it can help to make  a fine v0
    identification (that can be  different for any kind of physic)
    
    To use this package:
       a) data base must be opened
       b) frft,frtl,pyer must be present ( make unpacking
          tp,it,fi )
       c) yv1c bank (that contains cuts for v0 selection)
          must be present on data base or given by data cards
          if you want change cut for v0 analysis.
       d) fvcl,ficl,ftcl,vdco,itco,tpco must be present
          only if you check the number of coordinates
          before the reconstructed vertex
          ( make unpacking tp,it,fi)
          To understand cuts look the ddl of yv1c bank
          (-> sbank yv1c)
          Beware that the different cuts used in different period
          of Aleph data taking (89-90 91-92 93...) are sumarized
          by the different NR of the yv1c bank. So on the data base
          the yv1c is present with 3 different value for NR
    YV1C 1/ 25  1  1  1  99999999
    *1989-1990
    *      IV     O1     O2     CT     PS         RV    ZV    DI
            1      0.0    0.    2.     0.         180. 220. 0.06
    *      CF     CS     CO     MA     PM    NT   CB    NC    MD
           13.    0.92    0.    50.    0.     4    0    0      0.
    *      D0     Z0     WK        WL         WG
           999.   999.   0.1E+05  0.1E+05     0.1E+05
    YV1C 2/ 25  1  1  1  99999999
    *1991-1992
    *      IV     O1     O2     CT     PS         RV    ZV    DI
           1      0.0    0.     3.    0.0        180.  220. 0.06
    *      CF     CS     CO     MA     PM    NT   CB    NC    MD
           25.    0.5    0.0    9999.  0.1   4     2    10    1.5
    *      D0     Z0     WK     WL     WG
           999.   999.   9999. 9999.   9999.
    YV1C 3/ 25  1  1  1  99999999
    *1993 and later i hope...
    *      IV     O1     O2     CT     PS         RV    ZV    DI
           1      0.0    0.     2.    0.0        180.  180. 0.06
    *      CF     CS     CO     MA     PM    NT   CB    NC    MD
           13.    0.92   0.0    9999.  0.    5     0    33    0.
    *      D0     Z0     WK     WL     WG
           999.   999.   0.5    0.50  0.50
    
    If you run the package without extra cards the dafault value
    of NR for the yv1c is NR=3.
    In the same time the nr of the yv0v bank produced will be 3
    ******************************************************************
    *     To  change cut change values of cut on the following cards *
    *      and add these cards
    ******************************************************************
    YV1C 4/ 25  1  1  1  99999999
    *user private cards
    *      IV     O1     O2     CT     PS         RV    ZV    DI
           1      0.0    0.     2.    0.0        180.  180. 0.06
    *      CF     CS     CO     MA     PM    NT   CB    NC    MD
           13.    0.92   0.0    9999.  0.    5     0    33    0.
    *      D0     Z0     WK     WL     WG
           999.   999.   0.5    0.50  0.50
    ************************************************
    *                    iflag=0, primary vertex is assumed to
    *                    be (0,0,0)
    *   IV/I            iflag=1  primary vertex defined by pyer
    *                    bank
    *                    iflag=2 primary defined using the jsum bank
    *                    (mean value of primary run per run)
    ************************************************************
       For the calling sequence and arguments
       please look at the routine header. If you want to use it
       naively look at the following example that accesses for any
       event all the information about v0.
    Example for cards :
    **************************************
    *   ALPHA cards for V0 NEW           *
    **************************************
    *
    * the alpha default will use the tracks fitted with minivertex.
    * if you want the tracks fitted using only TPC and ITC information
    * you must add the FRF0 card
    * Galeph xx.x  + Julia xx.x
    FILI 'AL1$SCRATCH0:[ALEPH.WEEK.CIOCCIW]QCD21_1000EVTS.POT | NATIVE'
    NOV0
    * Aleph Data Base
    FDBA 'DBASE:ADBSCONS.DAF'
    *
    * Histos output file
    HIST 'V0S.HIS'
    *
    * time limit
    TIME 120
    YV1C 4/ 25  1  1  1  99999999
    *user private cards
    *      IV     O1     O2     CT     PS         RV    ZV    DI
           1      0.0    0.     2.    0.0        180.  180. 0.06
    *      CF     CS     CO     MA     PM    NT   CB    NC    MD
           13.    0.92   0.0    9999.  0.    5     0    33    0.
    *      D0     Z0     WK     WL     WG
           999.   999.   0.5    0.50  0.50
    
    ENDQ
                                *** EXAMPLE ***
          SUBROUITNE anav0
          ......................
          ......................
    
    +   output of package:dimension
    
          REAL CHIOR(2,50),QGA(50),CHQGA(50),QK0(50),CHQK0(50),QLA(50),
         $CHQLA(50),QAL(50),CHQAL(50),XMGA(50),CXMGA(50),XMK0(50),CXMK0(50),
         $     XMLA(50),CXMLA(50),XMAL(50),CXMAL(50),NCOR(2,50),DISCO(2,50)
    
    +  END OUTPUT DIMENSION
    
    
    +       logical for v0 histograms, if true you will have all histogram
    +       for v0
    
             LOGICAL IBOOK
    
    +       If ibook=.true. Histograms will stat from iv0bk+200
    
             INTEGER IV0BK
    
    +      ask histograms
    
                IBOOK=.TRUE.
    
    +          HISTOGRAM WILL START FROM 1000+200
    
                IV0BK=1000
    ...................................
    ..................................
    ...............................
    
    +     CALL PACKAGE
    
          CALL  YMFV0V(IBOOK,IV0BK,IERCO,NUMV0,CHIOR,QGA,CHQGA,QK0,
         $                  CHQK0,QLA,CHQLA,QAL,CHQAL,XMGA,CXMGA,XMK0,
         $                  CXMK0,XMLA,CXMLA,XMAL,CXMAL,NCOR,DISCO)
    
    +   TEST IERCO
    
             IF(IERCO.NE.0)THEN
    
    + FIRST CALL M.A.CIOCCI...
    
                GO TO 999
              ENDIF
    
    +        THER'ARE V0 CANDIDATES ?
    
              IF(NUMV0.EQ.0)GO TO 998
                 DO 10 I =1,NUMV0
    
             MAKE YOUR ANALYSIS, FOR EXAMPLE
             USING THE MONTECARLO TRUTH
             STUDY HOW CHANGE YOUR PURITY AND THE EFFICIENCY
             FOR K0 MAKING A CUT ON CHI2 OF
             INVARIANT MASS (CXMK0)
    
    
    
    
       10        CONTINUE
     998
    ............................
    ............................
    
     999         CONTINUE
                 RETURN
                 END
    
                                *** END EXAMPLE ***
  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
     YCHI00     Calculate the c2 variation constraining a vertex to the primary vertex
     YCHIV2     Calculate the chi2 of a track,whith the constraint of primary vertex
     YD0NFI     Minimize the dist. in x-y  between track and vpr point
     YD0NFN     Minimize the dist. in x-y  between track and vprr point
     YDISMC     Finds the points at minimum distance on the two tracks
     YFIXIS     Fix matrix convention in frft
     YFIXYN     Finds the psi angle at the point (x,y) def mod twopi
     YFIXYP     Finds the psi angle at the point (x,y) def mod twopi
     YFPSIN     Find the psi angles of two track at the point of closest approach
     YFQERQ     Finds the q value and the relative error square for any typ of v0
     YMFMIN     V0 quantities for mini
     YMFV0V     Main v0 vertex
     YNV0NF     V0 vertex without curvature (without fit)
     YNV0VE     V0 vertex fit first performance
     YPSIVE     Find the psi angle respect to the pr point
     YPSIVN     Find the psi angle respect to the pr point
     YV0BOK     Histogram for v0
     YV0MAS     Finds the invariant mass and the chisquare for any type of v0
     YV0ONG     Find the point of helix close to the vertex and the inverse e.m.
     YV0ONH     Find the point of helix close to the vertex and the inverse e.m.
     YV1INI     Read the cuts for the v0 reconstruction, yv1c (dbase)
     YVCAME     Algorithm to find if a track have some coordinates before vertex
     YVPRIM     Finds the mean value and the cov mat. of the primary
     YZPHA1     Find psi angle respect to the point pr,minimizing the z distance
     YZPHAN     Find psi angle respect to the point pr,minimizing the z distance
     YZPHAS     Select the correct phase minimizing the z distance

3 YCHI00
         FUNCTION YCHI00 (VSEC,SVSEC,VPRIM,SIVPR,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YV0 CHI2
  ------------------------------------------------------------------------------
   Calculate the c2 variation constraining a vertex to the primary vertex
      AUTHOR: M.A.CIOCCI 28/1/93
            DESCRIPTION
            ===========
    Computes the chi2 variation constraining a vertex to the primary
    vertex
      INPUT:
                 VSEC/R    COORDINATES OF A VERTEX
                 SVSEC/R   COVARIANCE OF VSEC VERTEX COORDINATES
                 VPRIM/R   COORDINATES OF THE PRIMARY
                           VERTEX
                 SIVPR/R   COVARIANCE MATRIX OF THE PRIMARY
      OUTPUT:
                 IFAIL/I IF 0 ALL IS OK
                         IF 1 PROBLEM WITH COV MAT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YCHI00                                                               
                   |----  DBLE                                External             
                   |----  DINV                                External             
   
 
3 YCHIV2
         FUNCTION YCHIV2 (KPOI,VPRIM,SIVPR,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YV0 CHI2 TRACK /INTERNAL
  ------------------------------------------------------------------------------
   Calculate the chi2 of a track,whith the constraint of primary vertex
      AUTHOR: M.A.CIOCCI,L.ROLANDI 24/3/88
      MODIFIED:M.A.CIOCCI 20/2/90
      Modified: J.Sedgbeer 19/6/91. Bug fix in ELIP1(4) = ........
      MODIFIED:M.A.CIOCCI 20/1/93. Now the chi2 that a track comes
                                   from the primary includes the
                                   covariance of the primary.
            DESCRIPTION
            ===========
    COMPUTES THE CHI2 OF A TRACK WITH THE CONSTRAINT
     OF THE PRIMARY VERTEX, ASSUMED CLOSE TO THE ORIGIN
      INPUT:
                 KPOI/I  NUMBER OF THE TRACK IN THE
                         FRFT  BANK
                 VPRIM/R COORDINATES OF THE PRIMARY
                        VERTEX
                 SIVPR/R COVARIANCE MATRIX OF THE PRIMARY
                         vertex
      OUTPUT:
                 IFAIL/I IF 0 ALL IS OK
                         IF 1 BANK FRFT MISSING OR PROBLEM WITH COV MAT
     BANKS:
            FRFT
     CALL: YFIXIS  (CHANGE CONVENCTION ABOUT COVARIANCE MATRIX
                    IN FRFT)
           YPSIVN  (PSI ANGLE WITH RESPECT TO THE PRIMARY +
                    COORDINATES OF THE POINT MINIMIZING THE
                    DISTANCE BETWEEN PRIMARY VERTEX AND HELIX )
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YCHIV2                                                               
                   |----  NAMIND                              External             
                   |----  YPSIVN                                                   
                   |----  YV0ONG                                                   
                   |----  DBLE                                External             
                   |----  DINV                                External             
   
 
3 YD0NFI
         SUBROUTINE YD0NFI(VPR,RAD,D0,FI0,CF,XDN)
  ------------------------------------------------------------------------------
    CKEY YV0 MIN DISTANCE / USER
  ------------------------------------------------------------------------------
   Minimize the dist. in x-y  between track and vpr point
     AUTHOR: M.A.CIOCCI 20/1/90
       INPUT
              VPR/R  POINT ASSUMED AS BEAM BEAM CROSSING
              RAD/R   RADIUS CURVATURE
              D0/R    -CHARGE*D0 (BANK-FRFT)
              FI0/R   FI0 (BANK FRFT)
              CF/R    CHARGE
       OUTPUT
              XDN(2)/R  COORDINATES OF POINT
       CALLED:
               YPSIVE
       CALLS :
               NONE
               DESCRIPTION
               ===========
    the point coordinates minimizing the distance
    helix and vpr point
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPSIVE                                                                          
        |---- YD0NFI                                                               
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
   
 
3 YD0NFN
         SUBROUTINE YD0NFN(VPRR,RADD,D00,FI00,CFF,XDNN,SIGND)
  ------------------------------------------------------------------------------
    CKEY YV0 MIN DISTANCE /USER
  ------------------------------------------------------------------------------
   Minimize the dist. in x-y  between track and vprr point
     AUTHOR:   M.A.CIOCCI 2/04/90
     Modified: D.Smith   26/10/99  Double precision fixes for Linux
       INPUT
              VPRR/R  POINT ASSUMED AS BEAM BEAM CROSSING
              RADD/R   RADIUS CURVATURE
              D00/R    -CHARGE*D0 (BANK-FRFT)
              FI00/R   FI0 (BANK FRFT)
              CFF/R    CHARGE
       OUTPUT
              SIGND /R  SIGN OF NEW D0
              XDNN(3)/R  COORDINATES OF POINT
       CALLED:
               UPSIVE
       CALLS :
               NONE
               DESCRIPTION
               ===========
    the point coordinates minimizing the distance
    helix and vpr point
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPSIVN                                                                          
        |---- YD0NFN                                                               
                   |----  DSIN                                External             
                   |----  DCOS                                External             
                   |----  DSQRT                               External             
   
 
3 YDISMC
          SUBROUTINE YDISMC(XK1,D01,FI01,Z01,XLAM1,C1,
  ------------------------------------------------------------------------------
    CKEY YV0 DISTANCE TRACK
  ------------------------------------------------------------------------------
        $                   XK2,D02,FI02,Z02,XLAM2,C2,
        $                   XM1,YM1,XM2,YM2,XM3,YM3,XM4,YM4,IND)
   Finds the points at minimum distance on the two tracks
        AUTHOR     : M.A.CIOCCI, L.ROLANDI 25/2/87
        MODIFIED   : M.A. CIOCCI 2/2/90
        Modified : P. Rensing 14/2/95
              Fix calculation of symmetry point when one center
              lies inside the other circle. This happens for
              like-signed tracks.
         CONVENCTION ON RADIUS OF CURVATURE : IS NOT SIGNED
         CONVENCTION ON D0:  D0=-CHARGE*(D0-BANK-FRTF)
        INPUT:
              XK1/R     -CHARGE/(RADIUS OF CURVATURE-D0)        F
                                                                O
                        WHERE D0 IS DEFINED AS THE              R
                        CLOSEST DISTANCE OF APPROACH
                        TO LINE X=Y=0 IN THE X-Y PLANE          T
                        SIGNED + IF POINT X=Y=0 IS INSIDE       H
                        TRACK CIRCLE, SIGNED - IF POINT         E
                        X=Y=0   IS OUTSIDE TRACK CIRCLE.
                                                                F
                                                                I
               D01/R    D0                                      R
               FI01/R   PHI AT CLOSEST POINT OF APPROACH        S
                        TO LINE X=Y=0                           T
               Z01/R    ZETA COORDINATE AT D0
                                                                T
               XLAM1/R   TANGENT OF DIP ANGLE                   R
                                                                A
               C1/R     CHARGE
                                                                K
              XK2/R     -CHARGE/(RADIUS OF CURVATURE-D0)        F
                                                                O
                        WHERE D0 IS DEFINED AS THE              R
                        CLOSEST DISTANCE OF APPROACH
                        TO LINE X=Y=0 IN THE X-Y PLANE          T
                        SIGNED + IF POINT X=Y=0 IS INSIDE       H
                        TRACK CIRCLE, SIGNED - IF POINT         E
                        X=Y=0   IS OUTSIDE TRACK CIRCLE.
                                                                S
               D02/R    D0                                      E
               FI02/R   PHI AT CLOSEST POINT OF APPROACH        O
                        TO LINE X=Y=0                           N
                                                                D
               Z02/R    ZETA COORDINATE AT D0
                                                                T
                                                                R
               XLAM2/R  TANGENT OF DIP ANGLE                    A
               C2/R     CHARGE                                  K
        OUTPUT:
                 XM1/REAL       L
                                O
                 YM1/REAL       O
                                K
                 XM2/REAL
                                D
                 YM2/REAL       E
                 XM3/REAL       S
                 YM3/REAL       R
                                I
                 XM4/REAL       P
                                T
                 YM4/REAL       I
                                O
                                N
                 IND/REAL    IND=1 THE TWO CIRCLES DO INTERSECT
                             AT TWO POINT
                             IND=0 THE TWO CIRCLES DO INTERSECT
                             AT ONE POINT
                             IND LESS THAN 0 THE TWO CIRCLES
                             DO NOT INTERSECT
        CALLED:  YFPSIN
                      DESCRIPTION
                     ============
          Following the method of UA1-TN 84/31 by V.Karimaki
          searchs the points at minimum distance on the two
          circles in the X-Y plane.
          If the two circles do intersect, IND=1 and (XM1,YM1)
          (XM2,YM2) are the coordinates of the two intersection
          points, on the X-Y plane,
          but in this case the real solution can be also
          (XM3,XM4), (XM5,XM6) intersection between a straigth line
          and the two circles joining the two centers
          If IND=0 the two circle are intersecting at one point
         that is stored in both the adresses (XM1,YM1),(XM2,YM2)
          If IND=-1 the two circles do not intersect
          and are one outside the other  and (XM1,YM1)
          is the coordinate of the first track and (XM2,YM2) is
          the coordinate of the second track at point of minimum
          distance on the X-Y plane.
          If IND=-2 the two circles do not intersect
          and are one inside the other  and (XM1,YM1)
          is the coordinate of the first track and (XM2,YM2) is
          the coordinate of the second track at point of minimum
          distance on the X-Y plane.
          If Ind=6 the two circles  are one inside the other
          with the same center (the number of solution will be
          infinite)
          See also ALEPH NOTE .....
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YFPSIN                                                                          
        |---- YDISMC                                                               
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  SQRT                                External             
                   |----  ABS                                 External             
                   |----  MAX                                 External             
   
 
3 YFIXIS
         SUBROUTINE YFIXIS(C,RIN,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YV0 FRFT / USER
  ------------------------------------------------------------------------------
   Fix matrix convention in frft
      Created by Juergen Knobloch       1-JUL-1988
     M.A. CIOCCI CHANGE THE NAME (IT WAS VFIX...)
                 AND THE NUMBER OF ARGUMENTS
     Inputs    : C(5,5) double precision cov matrix old convention
                 RIN    radius new sign convention
     Outputs   : C(5,5) error matrix new convention
     BANKS: NONE
     Calls     : DINV
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YV0ONH                                                                          
        |---- YFIXIS                                                               
                   |----  SIGN                                External             
                   |----  SC                                  External             
                   |----  DINV                                External             
   
 
3 YFIXYN
          FUNCTION YFIXYN(CHARG,X,Y,RO,FI,D0)
  ------------------------------------------------------------------------------
    CKEY YV0 /USER
  ------------------------------------------------------------------------------
   Finds the psi angle at the point (x,y) def mod twopi
     AUTHOR :M.A. CIOCCI,L.ROLANDI  7-4-88
     MODIFIED:
         INPUT:
                CHARG/REAL    TRACK CHARGE
                X,Y/REAL      POINT COORDINATES ON HELIX
                RO/REAL       RADIUS OF CURVATURE NOT SIGNED
                FI/REAL       FI0 (SEE FRFT BANK)
                D0/REAL       D0  (D0=-CHARGE*D0BANK FRFT)
      CALLED BY User
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPSIVN                                                                          
        |---- YFIXYN                                                               
                   |----  SIN                                 External             
   
 
3 YFIXYP
          FUNCTION YFIXYP(CHARG,X,Y,RO,FI,D0)
  ------------------------------------------------------------------------------
    CKEY YV0 ANGLE /USER
  ------------------------------------------------------------------------------
   Finds the psi angle at the point (x,y) def mod twopi
     AUTHOR :M.A. CIOCCI,L.ROLANDI  7-4-88
     MODIFIED:
     YFIXYP=psi angle defined mod twopi in the x,y point
         INPUT:
                CHARG/REAL    TRACK CHARGE
                X,Y/REAL      POINT COORDINATES ON HELIX
                RO/REAL       RADIUS OF CURVATURE NOT SIGNED
                FI/REAL       FI0 (SEE FRFT BANK)
                D0/REAL       D0  (D0=-CHARGE*D0BANK FRFT)
      CALLED BY User
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YFPSIN                                                                          
   YPSIVE                                                                          
        |---- YFIXYP                                                               
                   |----  SIN                                 External             
   
 
3 YFPSIN
           SUBROUTINE YFPSIN(KAPOI,KBPOI,VERT,
  ------------------------------------------------------------------------------
    CKEY YV0 ANGLE DISTANCE / INTERNAL
  ------------------------------------------------------------------------------
        $  PSIA,PSIB,COOR1,COOR2,IND,CHIT1)
   Find the psi angles of two track at the point of closest approach
        AUTHOR  : M.A.CIOCCI,L.ROLANDI 23/2/88
        MODIFIED: M.A.CIOCCI 23/3/89
        INPUT:
             KAPOI/I   :Number of the first current track
                        in the frft bank.
             KBPOI/I   :Number of the second current track
                        in the frft bank.
             VERT/R    : beam-beam crossing point
        OUTPUT:
             PSIA/R    :Angle psi for the first current track
                        where the two helices have intersection
                        on the X-Y plane.
             PSIB/R    :Angle psi for the second current track
                        where the two helices have intersection
                        on the X-Y plane.
             COOR1/R   :The point coordinates on the first helix,
                        when the distance on the X-Y plane is
                        minimum.
             COOR2/R   :the point coordinate on the second helix,
                        when the distance on the X-Y plane is
                        minimum.
             IND/I     :type of intersection
                        if ind=6 the two circles are one inside the
                        other with the same center (problem without
                        solution)
                        if ind=7 no solution with psi>0
             CHIT1/R   :Minimum of distance on space between helices
        BANKS:
              FRFT
                    DESCRIPTION
                    ===========
          Finds the coordinate minimizing the distance
          on x-y plane between helices (YDISMC), define the respective
          psi angles (mod twopi) calling Yfixyp, define psi phases (and so psi)
          minimizing also the z distance (see also the aleph note about v0)
          When the projected helices have two points of intersection
          there are  three solutions -> six psi angles (see aleph notes).
          In this case: calculates the psi phases for any possible solution
          respect to the beam beam crossing (vert) calling ypsive.
          The solution will be (if ther'is..) that one with both psi>0
          and minimum distance on the space
         CALLED: YMFV0V
         CALLS:  YDISMC,YZPHAS,YFIXYP,YPSIVE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFMIN                                                                          
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YFPSIN                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  YDISMC                                                   
                   |----  YFIXYP                                                   
                   |----  YZPHAS                                                   
                   |----  VDIST                               External             
                   |----  YPSIVE                                                   
                   |----  SQRT                                External             
                   |----  LVMINA                              External             
   
 
3 YFQERQ
         SUBROUTINE YFQERQ(V0,PV,PMAT,PV0,QVAL,ERQ2)
  ------------------------------------------------------------------------------
    CKEY YV0 ERROR /USER
  ------------------------------------------------------------------------------
   Finds the q value and the relative error square for any typ of v0
       AUTHOR:   M.A. Ciocci, L. Rolandi  19/4/88
       MODIFIED: M.A.CIOCCI 20/2/90
       Modified: M.Cattaneo 29/04/98
                 Use double precision internally, keep ERQ2 non-zero
       Modified: D.Smith    26/10/99  Double precision fixes for Linux
       INPUT:  V0/CHARACTER*2          V0='K0'    K0
                                       V0='LA'    Lambda
                                       V0='AL'    Anti-Lambda
                                       V0='GA'    Gamma
               PV/REAL ARRAY    Mass constraints
                                (see aleph note...)
               PV0/REAL ARRAY   V0 momentum
               PMAT/REAL ARRAY  Covariance of mass constraints
       OUTPUT: QVAL/REAL        Q value (see aleph note...)
               ERQ2/REAL        Square of error on Q value
                     Description
                     ===========
          Find the Q value and the square of error on Q for
          a fixed V0 hypothesis (see also Aleph-note...)
          Called: YMFV0V
          Calls:  None
          Libraries:CERN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YFQERQ                                                               
                   |----  DBLE                                External             
                   |----  VDOT                                External             
   
 
3 YMFMIN
         SUBROUTINE YMFMIN(NFRPI,NFRNJ,IV0NU,VERT,VERM,PV0,PV1,PV2,
  ------------------------------------------------------------------------------
    CKEY YV0 MINI
  ------------------------------------------------------------------------------
        &                  PVMAT,CPV,PX,PXMS,CHI2,NDF,CHIT,PSII,PSIJ,
        &                  IERCO)
   V0 quantities for mini
     AUTHOR: M.A.CIOCCI 28/1/93
     NEED : FRFT , FRTL, PYER (OR JSUM),YV1C (DATA BASE OR
             CARDS)
       CALLED: MINYV0
              DESCRIPTION
              ===========
     Given two tracks (the julia numbers in the FRFT bank)
     performing a V0 candidate fill all the quantities
     needs to reconstruct V0 bank.
         INPUT:
                  NFRPI/integer         positive julia frft number
                  NFRNJ/integer         negative julia frft number
                  IV0NU/integer         number of current v0 candidate
         OUTPUT:
                  VERT/R         Coordinates of the V0 vertex
                  VERM/R         Covariance matrix of the vertex
                  PV0 /R         V0 momentum
                  PV1/R          Refitted momenta of positive charged
                                 particle
                  PV2/R          Refitted momenta of negative charged
                  PVMAT/D        Covariance matrix of V0 momentum
                                 particle
                  CPV/D          Covariance matrix of pv1 pv2
                  PX/R           Mass constaints (r,b of aleph note...)
                  PXMS/R         Covariance matrix of the mass constraint
                  CHI2/R         Chi square of the v0 vertex fit
                  NDF/R          (FIT HYPOTHESIS*10+ABS(IND))*SIGN
                                 IND IN RANGE -2 TO 2 (SEE YV0
                                 PACKAGE WRITE-UP). IND=-2 OR -1
                                 IF TRACKS DO NOT INTERSECT IN XY.
                                 IND=0 - INTERSECT AT ONE POINT.
                                 IND=1 OR 2 - INTERSECT TWICE.
                                 SIGN IS POSITIVE IF IND IS
                                 POSITIVE. FIT HYP.=1 IF TRACKS
                                 NOT PARALLEL AT VERTEX (IE. IND=1
                                 OR DIFF. IN TAN(DIP) NOT SMALL).
                                 FIT HYP=2 IF TRACKS APPROX
                                 PARALLEL AT VERTEX (IE. IND.NE.1
                                 AND DIFF.IN TAN(DIP) IS SMALL).
                  CHIT/R         Minimum of distance on space
                                 between helices
                  PSII/R         Psi angle for the positive charged
                                 particle coming from V0
                                 between helices
                  PSIJ/R         Psi angle for the negative charged
                                 particle coming from V0
                  IERCO/INTEGER         code for error:
                                        if 0 all is ok
                                        if 1 no yv1c on dbase or cards
                                        if 2, problems with covariance
                                        matrix of charged tracks in ynv0ve
                                        if 3, problems with coovariance
                                        matrix of charged tracks in ynvonf
                                        if 4, the number of V0 candidates
                                        is greater than 50
                                        IF 5 THE FRFT BANK IS MISSING
                                        IF 6 LESS THAN TWO TRACKS IN FRFT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YMFMIN                                                               
                   |----  ALFIEL                                                   
                   |----  ABS                                 External             
                   |----  NAMIND                              External             
                   |----  JUNIDB                              External             
                   |----  YV1INI                                                   
                   |----  NLINK                               External             
                   |----  YVPRIM                                                   
                   |----  YFPSIN                                                   
                   |----  YNV0VE                                                   
                   |----  SIGN                                External             
                   |----  YNV0NF                                                   
   
 
3 YMFV0V
         SUBROUTINE YMFV0V(IBOOK,IV0BK,IERCO,NUMV0,CHIOR,QGA,CHQGA,QK0,
  ------------------------------------------------------------------------------
    CKEY YV0 MAIN /INTERNAL
  ------------------------------------------------------------------------------
        $                  CHQK0,QLA,CHQLA,QAL,CHQAL,XMGA,CXMGA,XMK0,
        $                  CXMK0,XMLA,CXMLA,XMAL,CXMAL,NCOR,DISCO)
   Main v0 vertex
     AUTHOR: M.A.CIOCCI   L.ROLANDI  20/9/87
     MODIFIED: M.A.Ciocci 20/1/90
     MODIFIED: M.A.Ciocci 10/6/90
               change on dimension of output from 20 to 50,
               remove cut on chi square of invariant mass
     Modified: J.Sedgbeer 09/04/91 Common/YV0CUT/ extended, more cuts.
               More Histos. Entry point YMFV00 to set max allowed no. V0.
     Modified: M.A.Ciocci 20/01/93.Introduction of the covariance matrix
               of the primary vertex (sivpr(3,3)), used now from YCHIV2
     Modified: M.Cattaneo 28/01/98 Protect against precision problem
     NEEED : FRFT , FRTL, PYER (OR JSUM),ITCO,TPCO,YV1C (DATA BASE OR
             CARDS)
     INSIDE ALPHA MAKE UNPACKING OF TP IT (TPC COORDINATES
     ITC COORDINATES)
     OUTPUT BANKS : 'YV0V'
       CALLED: USER
       CALLS:  YFPSIN,YV0VER,YFQERQ,YCHIV2
              DESCRIPTION
              ===========
     V0 RECONSTRUCTION STEERING ROUTINE
     OUTPUT: YV0V BANK
     LOOPS ON ALL TRACKS TO RECONSTRUCT V0'S
     DESCRIPTION OF THE METHOD IS IN THE ALEPH NOTE ....
     V0 RECONSTRUCTION ALGORITHM
         INPUT:
                  IBOOK/LOGICAL FLAG    if true histograms for V0
                                        will be filled
                  IV0BK/INTEGER         Histograms for V0 will start
                                        from IV0BK+200
         OUTPUT:
                  IERCO/INTEGER         code for error:
                                        if 0 all is ok
                                        if 1, problems with covariance matrix
                                        of charged tracks in ychiv2
                                        if 2, problems with covariance matrix
                                        of charged tracks in ynv0ve
                                        if 3, problems with covariance matrix
                                        of charged tracks in ynvonf
                                        if 4, problems in yvcame with frft
                                        if 5, problems inverting covariance
                                        matrix of reconstructed V0 vertex
                                        candidate
                                        if 6, the number of V0 candidates is
                                        greater than MAXV
                                        if 7, no booked enlarged space for yv0v
                                        if 8, problems with working banks
                                        if 9 no space for yv0v bank
                                        if 10 no yv1c on dbase or cards
                  NUMV0/INTEGER         Number of V0 candidates (at
                                        maximum MAXV)
                  CHIOR(2,*)/REAL       chi2 increasing constraining
                                        the track coming from V0 candidate
                                        to the origin
                  QGA(*)/REAL           Q value in the gamma hypothesis
                  CHQGA(*)/REAL         chi2 of Q value in the gamma hypothesis
                  QLA(*)/REAL           Q value in the lambda hypothesis
                  CHQLA(*)/REAL         chi2 of Q value in the lambda hypothesis
                  QAL(*)/REAL           Q value in the antilambda hypothesis
                  CHQAL(*)/REAL         chi2 of Q value in the antilambda
                                        hypothesis
                  QK0(*)/REAL           Q value in the k0 hypothesis
                  CHQK0(*)/REAL         chi2 of Q value in the k0 hypothesis
                  XMGA(*)/REAL          invariant mass in the gamma hypothesis
                  CXMGA(*)/REAL         chi2 of invariant mass in the gamma
                                        hypothesis
                  XMLA(*)/REAL          invariant mass in the lambda hypothesis
                  CXMLA(*)/REAL         chi2 of the invariant mass in the \
                                        lambda hypothesis
                  XMAL(*)/REAL          invariant mass in the antilambda
                                        hypothesis
                  CXMAL(*)/REAL         chi2 of invariant mass  in the
                                        antilambda hypothesis
                  XMK0(*)/REAL          invariant mass in the k0 hypothesis
                  CXMK0(*)/REAL         chi2 of the invariant mass in the
                                        k0 hypothesis
                  NCOR(2,*)/I           number of coordinates before the
                                        reconstructed vertex
                  DISCO(2,*)/R          distance (cm) in radius that the
                                        furthest in coordinate is inside
                                        of the radius of the vertex
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
              YMFV0V                                                               
                   |----  YV0BOK                                                   
                   |----  JUNIDB                              External             
                   |----  YV1INI                                                   
                   |----  NAMIND                              External             
                   |----  BDROP                               External             
                   |----  BKFMT                               External             
                   |----  BLIST                               External             
                   |----  AUBOS                               External             
                   |----  ALFIEL                                                   
                   |----  ABS                                 External             
                   |----  NLINK                               External             
                   |----  YVPRIM                                                   
                   |----  WBANK                               External             
                   |----  SQRT                                External             
                   |----  YCHIV2                                                   
                   |----  HF1                                 External             
                   |----  YFPSIN                                                   
                   |----  YPSIVE                                                   
                   |----  VLINE                               External             
                   |----  VMOD                                External             
                   |----  YNV0VE                                                   
                   |----  SIGN                                External             
                   |----  YNV0NF                                                   
                   |----  YVCAME                                                   
                   |----  FLOAT                               External             
                   |----  VSUB                                External             
                   |----  VDOTN                               External             
                   |----  VDOT                                External             
                   |----  VSCALE                              External             
                   |----  VADD                                External             
                   |----  VD0                                 External             
                   |----  VPRIM                               External             
                   |----  SNGL                                External             
                   |----  CPV                                 External             
                   |----  DBLE                                External             
                   |----  DINV                                External             
                   |----  YFQERQ                                                   
                   |----  YV0MAS                                                   
                   |----  HF2                                 External             
   
 
3 YNV0NF
         SUBROUTINE YNV0NF(KP1,KP2,PS1,PS2,PV0,PVMAT,
  ------------------------------------------------------------------------------
    CKEY YV0 VERTEX /INTERNAL
  ------------------------------------------------------------------------------
        $   PV1,PV2,CPV,VERT,VVMAT,PX,PXM,CHI2,IFAIL)
   V0 vertex without curvature (without fit)
       AUTHOR: M.A.CIOCCI,L.ROLANDI 23/2/88
       MODIFIED:M.A.CIOCCI 2/2/90
                M.SCMITT  21/7/93  add a protection against XMT huge
                                   values or VT huge values
                A.Giassi  26/7/93  replace the protection with a
                                   less hard one
                M.Cattaneo 990903  Protect against divide by zero
     Modified:  D.Smith    991026  Double precision fixes for Linux
         INPUT : KP1/I,KP2/I    Numbers of the two tracks in the
                                FRFT bank
               : PS1/R,PS2/R    Psi angles of the two tracks at the
                                approximate vertex position
        OUTPUT : PV0 /R         V0 momentum
               : PVMAT/D        Covariance matrix of V0 momentum
               : PV1/R          momenta of positive charged particle
               : PV2/R          momenta of negative charged particle
               : CPV/D          Covariance matrix of PV1 PV2
               : VERT/R         Coordinates of the vertex
               : VVMAT/D        Covariance matrix of the vertex
               : PX/R           Mass constaints
               : PXM/D          Covariance matrix of the mass constraint
               : CHI2/R         Chi square of the vertex fit
               : IFAIL/I        If not equal to 0 troubles in
                                inverting matrices.
         CALLED:
           YMFV0V
         CALLS:
           YV0ONG  Calculates the point close at vertex for one
                   of two helix and the inverse of covariance
                   matrix for this point
           LIBRARY REQUIRED: CERN
                   DESCRIPTION
                   ===========
     Call the subroutine YV0ONG to calculate the matrix of
     the derivatives of the trajectory parameters respect to
     coordinates and momenta, computed at the point defined
     by the angles PS1 and PS2. Then the v0 vertex is assumed to be the
     mean value between the starting points of fit the V0 momenta is assu
     to be the sum of the two track momenta calculated at the starting po
     of fit for each helix,  chi2 and covariance matrices are evaluated.
     For a complete description see aleph note ...
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFMIN                                                                          
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YNV0NF                                                               
                   |----  LOG10                               External             
                   |----  ABS                                 External             
                   |----  ALFIEL                                                   
                   |----  YV0ONG                                                   
                   |----  MAX                                 External             
                   |----  DEQINV                              External             
                   |----  DINV                                External             
                   |----  SNGL                                External             
                   |----  DBLE                                External             
                   |----  SQRT                                External             
                   |----  DMMLT                               External             
   
 
3 YNV0VE
         SUBROUTINE YNV0VE(KP1,KP2,PS1,PS2,PV0,PVMAT,PV1,PV2,CPV,
  ------------------------------------------------------------------------------
    CKEY YV0 VERTEX FIT /INTERNAL
  ------------------------------------------------------------------------------
        $   VERT,VVMAT,PX,PXM,CHI2,IFAIL)
   V0 vertex fit first performance
       AUTHOR:   M.A.CIOCCI,L.ROLANDI 23/2/88
       MODIFIED: M.A.CIOCCI 23/2/90
       Modified: D.Smith    26/10/99  Double precision fixes for Linux
         INPUT : KP1/I,KP2/I    Numbers of the two tracks in the
                                FRFT bank
               : PS1/R,PS2/R    Psi angles of the two tracks at the
                                approximate vertex position
        OUTPUT : PV0 /R         V0 momentum
               : PVMAT/D        Covariance matrix of V0 momentum
               : PV1/R          Refitted momenta of positive charged
                                particle
               : PV2/R          Refitted momenta of negative charged
                                particle
               : CPV/R          Covariance matrix of pv1 pv2
               : VERT/R         Coordinates of the vertex
               : VVMAT/D        Covariance matrix of the vertex
               : PX/R           Mass constaints (r,b of aleph note...)
               : PXM/D          Covariance matrix of the mass constraint
               : CHI2/R         Chi square of the vertex fit
               : IFAIL/I        If not equal to 0 troubles in
                                inverting matrices.
         CALLED:
           YMFV0V
         CALLS:
           YV0ONH  Calculates the point close at vertex for one
                   of two helix and the inverse of covariance
                   matrix for this point
           LIBRARY REQUIRED: CERN
                   DESCRIPTION
                   ===========
     Call the subroutine YV0ONH to calculate the matrix of
     the derivatives of the trajectory parameters respect to
     the coordinates and momenta, computed at the point defined
     by the angles PS1 and PS2. Then fits the vertex in 3d.
     The procedure is iterated defining new starting points
     for the fit. For a complete description see aleph note on v0
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFMIN                                                                          
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YNV0VE                                                               
                   |----  ALFIEL                                                   
                   |----  ABS                                 External             
                   |----  YV0ONH                                                   
                   |----  DEQINV                              External             
                   |----  SNGL                                External             
                   |----  FLOAT                               External             
                   |----  DBLE                                External             
                   |----  SQRT                                External             
                   |----  DMMLT                               External             
   
 
3 YPSIVE
           SUBROUTINE YPSIVE(PR,KAPOI,PSIN)
  ------------------------------------------------------------------------------
    CKEY YV0 ANGLE /USER
  ------------------------------------------------------------------------------
   Find the psi angle respect to the pr point
        AUTHOR  : M.A.CIOCCI 21/1/90
        INPUT:
             PR(3)/R   :Generally the mean value of primary vertex
             KAPOI/I   :Number of track in the frft bank.
        OUTPUT:
             PSIN/R    :Angle psi for track at minum distance from pr
                        on the X-Y plane.
                    DESCRIPTION
                    ===========
         Finds the psi angle of a charged track minimizing the distance
         between helix and point pr.
         Searchs the points coordinate at minimum distance from pr(3)
         in the x-y plane (yd0nfi), calculates psi angle mod twopi
         (yfixyp),  minimizing also the distance in z calculate
         psi angle defining phase(yzpha1)
         CALLED: user
         CALLS:  YD0NFI,YZPHA1,YFIXYP
         BANKS: FRFT
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YFPSIN                                                                          
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YPSIVE                                                               
                   |----  NAMIND                              External             
                   |----  ABS                                 External             
                   |----  YD0NFI                                                   
                   |----  YFIXYP                                                   
                   |----  YZPHA1                                                   
   
 
3 YPSIVN
           SUBROUTINE YPSIVN(PR,ELIP1,PSIN,XD0)
  ------------------------------------------------------------------------------
    CKEY YV0 ANGLE /USER
  ------------------------------------------------------------------------------
   Find the psi angle respect to the pr point
        AUTHOR  : M.A.CIOCCI 3/4/91
        INPUT:
             PR(3)/R   :Generally the mean value of primary vertex
             ELIP1(5)/R: FIVE PARAMETERS OF THE TRACK AS IN FRFT
        OUTPUT:
             PSIN/R    :Angle psi for track at minum distance from pr
                        on the space
             xd0(3)/r  :coordinates of point at minimum distance from
                        from pr
                    DESCRIPTION
                    ===========
         Finds the psi angle of a charged track minimizing the distance
         between helix and point pr.
         Searchs the points coordinate at minimum distance from pr(3)
         in the x-y plane (yd0nfn), calculates psi angle mod twopi
         (yfixyn),  minimizing also the distance in z calculate
         psi angle defining phase(yzphan)
         CALLED: user
         CALLS:  YD0NFN,YZPHAN,YFIXYN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YCHIV2                                                                          
        |---- YPSIVN                                                               
                   |----  ABS                                 External             
                   |----  YD0NFN                                                   
                   |----  YFIXYN                                                   
                   |----  YZPHAN                                                   
   
 
3 YV0BOK
         SUBROUTINE YV0BOK(JOFF)
  ------------------------------------------------------------------------------
    CKEY YV0 HIST /INTERNAL
  ------------------------------------------------------------------------------
   Histogram for v0
   AUTHOR:
           M.A.Ciocci 20/2/90
     J.Sedgbeer 91/04/09  Add histos for new cuts.
          INPUT:
                 JOFF/INTEGER    histograms for V0 will start from joff+200
          OUTPUT:
                  NONE
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YV0BOK                                                               
                   |----  HBOOK1                              External             
                   |----  HBOOK2                              External             
   
 
3 YV0MAS
             SUBROUTINE YV0MAS(V0,PV,PVMAT,P1,P2,EP,XM,CXM)
  ------------------------------------------------------------------------------
    CKEY YV0 MASS CHI2 / USER
  ------------------------------------------------------------------------------
   Finds the invariant mass and the chisquare for any type of v0
        AUTHOR:   M.A. Ciocci 29/6/89
        Modified: D.Smith    26/10/99  Double precision fixes for Linux
        INPUT:  V0/CHARACTER*2          V0='K0'    K0
                                        V0='LA'    Lambda
                                        V0='AL'    Anti-Lambda
                                        V0='GA'    Gamma
                PV/REAL ARRAY    Mass constraints
                                 (see aleph note...)
                PVMAT/REAL ARRAY  Covariance matrix of mass constraints
                P1/REAL ARRAY    Momentum of positive charged particle
                                 (see aleph note...)
                P2/REAL ARRAY    Momentum of negative charged particle
                                 (see aleph note...)
                EP/REAL ARRAY    Covariance matrix of momenta
        OUTPUT: XM/REAL          Invariant mass (see aleph note...)
                CXM/REAL         Chisquare of mass hypothesis
                      Description
                      ===========
          Calculates the invariant mass and the chisquare for
          a fixed hypothesis on V0 mass (see also Aleph-note...)
           Libraries:CERN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YV0MAS                                                               
                   |----  DSQRT                               External             
                   |----  SNGL                                External             
   
 
3 YV0ONG
         SUBROUTINE YV0ONG(KPOI,PSIB,XX,PP,BV,XI,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YV0 HELIX VERTEX /INTERNAL
  ------------------------------------------------------------------------------
   Find the point of helix close to the vertex and the inverse e.m.
        AUTHOR   : M.A. Ciocci 24/03/90
        Modified : D.Smith     26/10/99  Double precision fixes for Linux
         INPUT : KPOI/I    The track number in the FRFT bank
               : PSIB/R    Angle psi for the helix point close
                           to the vertex
         OUTPUT: XX/D      covariance matrix of coordinates  at psi
                 PP/D      covariance matrix of the momenta  at psi
                 BV/D      BV(6) contains B(1.2.3) the coordinate
                           B(4.5.6) the momenta computed at the
                           angle PSIB
                 XI/D      inverse of covariance matrix of the
                            coordinates  at psi
               : IFAIL/I   If not 0 error in matrix inversion
                BANK:
                      FRFT
           called by YNV0NF
                     DESCRIPTION
                     ===========
       1- Get track parameters from BOS BANK FRFT
       2- Computes coordinates B(3) at angle PSIB
       3- Computes momenta P(3) at angle PSIB (Momenta are
          measured in cm !!!)
       4- Computes the derivatives Z(3,5) of the track
          coordinates  respect to a variation of the parameters
       5- Computes the derivatives Z1(3,5) of the track
          momenta  respect to a variation of the parameters
          REQUIRED LIBRARIES:  BOS,CERN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YCHIV2                                                                          
   YNV0NF                                                                          
        |---- YV0ONG                                                               
                   |----  NAMIND                              External             
                   |----  SIGN                                External             
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  DBLE                                External             
                   |----  DMMLT                               External             
                   |----  DINV                                External             
   
 
3 YV0ONH
         SUBROUTINE YV0ONH(KPOI,PSIB,XM,Z,BV,IFAIL)
  ------------------------------------------------------------------------------
    CKEY YV0 HELIX VERTEX /INTERNAL
  ------------------------------------------------------------------------------
   Find the point of helix close to the vertex and the inverse e.m.
        AUTHOR    : M.A. Ciocci, L. Rolandi 24/2/88
        MODIFIED  : M.A. CIOCCI 2/02/90
        Modified  : D.Smith    26/10/99  Double precision fixes for Linux
         INPUT : KPOI/I    The track number in the FRFT bank
               : PSIB/R    Angle psi for the helix point close
                           to the vertex
         OUTPUT: XM/D      The inverse of covariance matrix for a
                           variation of coordinates/momenta around
                           the values BV(6)
               : Z/D       Derivatives of parameters respect
                           to the coordinates and momenta
               : BV/D      BV(6) contains B(1.2.3) the coordinate
                           B(4.5.6) the momenta computed at the
                           angle PSIB
               : IFAIL/I   If not 0 error in matrix inversion
                BANK:
                      FRFT
           CALLED BY YNV0VE
                     DESCRIPTION
                     ===========
       1- Get track parameters from BOS BANK FRFT
       2- Computes coordinates B(3) at angle PSIB
       3- Computes momenta P(3) at angle PSIB (Momenta are
          measured in cm !!!)
       4- Computes the derivatives Z(5,6) of the track
          parameters (5) respect to a variation of coordinates/
          momenta (6)
       5- Computes the Chi**2 matrix XM(6,6) for a variation
          of coordinates/momenta as
                            t
                     XM =  Z C Z
          REQUIRED LIBRARIES:  BOS,CERN
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YNV0VE                                                                          
        |---- YV0ONH                                                               
                   |----  NAMIND                              External             
                   |----  SIGN                                External             
                   |----  YFIXIS                                                   
                   |----  SIN                                 External             
                   |----  COS                                 External             
                   |----  DBLE                                External             
                   |----  DMMLT                               External             
   
 
3 YV1INI
         SUBROUTINE YV1INI(LCONS,IER,NRYV1)
  ------------------------------------------------------------------------------
    CKEY YV0 INIT CUTS /INTERNAL
  ------------------------------------------------------------------------------
   Read the cuts for the v0 reconstruction, yv1c (dbase)
     Author:  M.A.Ciocci 20/2/90
     Modified: J.Sedgbeer 09/04/91. YV1C bank and common/YV0CUT/ extended
     Modified: M.A.Ciocci 20/1/93. YV1C bank have now several values of NR
       The  different cuts used in  different periods
       of Aleph data tacking (89-90 91-92 93...) are sumarized
       by the different NR (1, 2, 3) of the yv1c bank. So on the data base
       the yv1c is present with 3 different value for NR.
       If the user decide to change cuts will be sufficient to give
       by cards a bank called yv1c with NR greater than 3 and change
       the cuts value
    Standard YV1C on dbase
    ----------------------
   1C 1/ 25  1  1  1  99999999
   1989-1990
         IV     O1     O2     CT     PS         RV    ZV    DI
          1      0.0    0.    2.     0.         180. 220. 0.06
         CF     CS     CO     MA     PM    NT   CB    NC    MD
        13.    0.92    0.    50.    0.     4    0    0      0.
        D0     Z0     WK        WL         WG
        999.   999.   0.1E+05  0.1E+05     0.1E+05
   1C 2/ 25  1  1  1  99999999
   1991-1992
         IV     O1     O2     CT     PS         RV    ZV    DI
         1      0.0    0.     3.    0.0        180.  220. 0.06
         CF     CS     CO     MA     PM    NT   CB    NC    MD
         25.    0.5    0.0    9999.  0.1   4     2    10    1.5
         D0     Z0     WK     WL     WG
         999.   999.   9999. 9999.   9999.
   1C 3/ 25  1  1  1  99999999
   1993 and later i hope...
         IV     O1     O2     CT     PS         RV    ZV    DI
         1      0.0    0.     2.    0.0        180.  180. 0.06
         CF     CS     CO     MA     PM    NT   CB    NC    MD
         13.    0.92   0.0    9999.  0.    5     0    33    0.
         D0     Z0     WK     WL     WG
         999.   999.   0.5    0.50  0.50
   1C 4/ 25  1  1  1  99999999
    private
         IV     O1     O2     CT     PS         RV    ZV    DI
          0      0.0    0.    5.     0.         180. 220. 0.06
         CF     CS     CO     MA     PM    NT   CB    NC    MD
        20.    0.5     0.    50.    0.     4    0    0      0.
        D0     Z0     WK        WL         WG
        999.   999.   0.1E+05  0.1E+05     0.1E+05
     Input:  LCONS     /I      Logical unit for the data base
     Output: IER       /I      Error return
                                   0: successful initialization
                                   1: yv1c bank not found
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFMIN                                                                          
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YV1INI                                                               
                   |----  NAMIND                              External             
                   |----  NDANR                               External             
                   |----  MDARD                               External             
   
 
3 YVCAME
         SUBROUTINE YVCAME(IPOIN,VRAD,NCO,DISV,IER)
  ------------------------------------------------------------------------------
    CKEY YV0 COORDINATE VERTEX /USER
  ------------------------------------------------------------------------------
   Author: M.A.CIOCCI
    20/2/90
     J.Sedgbeer 24/03/91 Make NCO = all coords inside in VXD+
              ITC+TPC. Used to give coords in just 1st detector that
              had hits (in order vxd,itc,tpc)
   Algorithm to find if a track have some coordinates before vertex
     Ipoin The index of one FRFT track
           Vrad = the radius of the materialization point
     = Number of coordinates with radius inside vrad for
                  track ipoin.  0 if no coordinate information available or
                  if there are no such coordinates.
           DISV = Distance(cm) in radius that the furthest in coordinate
                  is inside of vrad for track ipoin.  0. if no coordinate
                  information is available or there are no such coordinates
           IER = 0 if all OK
                 1 if error in calculation
   Banks Used:FRFT,FRTL,FVCL,FICL,FTCL,TPCO,ITCO,VDCO
    algorithm is based on Cinabro's routine for find if
   'are coordinates before a vertex candidate.
   A coordinate is "inside" if it  has Z or Radius from the Z-Axis
    than the materialization point.  Also
    Radius from the Z-Axis the furthest out of the points "inside" the
    point from the materialization point is returned for each
     If there are no coordinates inside the materialization point for
    track then these last two values are zero.  An error results if
    track numbers passed in are outside of the FRFT bank .
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YVCAME                                                               
                   |----  NAMIND                              External             
                   |----  IABS                                External             
   
 
3 YVPRIM
         SUBROUTINE YVPRIM(KPOI,PRIV,SIPRI)
  ------------------------------------------------------------------------------
    CKEY YV0 PRIMARY VERTEX / USER
  ------------------------------------------------------------------------------
   Finds the mean value and the cov mat. of the primary
     author:    M.A.Ciocci 21/2/90
     modified:  M.A.Ciocci 20/1/93 Included the out diagonal
                                   terms in the covariance
    of the primary vertex
              input:
                     kpoi/i     pointer to the jsum bank
              output:
                     priv(3)/r  coordinates of the primary vertex
                     sipri(3,3)/r covariance matrix of the primary
                                  vertex.
       Banks:
               jsum
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YMFMIN                                                                          
   YMFV0V                                                                          
   YMFV00                                                                          
        |---- YVPRIM.                                                              
   
 
3 YZPHA1
         SUBROUTINE YZPHA1(PR,RL1,Z0,PSIN)
  ------------------------------------------------------------------------------
    CKEY YV0 ANGLE DISTANCE /INTERNAL
  ------------------------------------------------------------------------------
   Find psi angle respect to the point pr,minimizing the z distance
   AUTHOR : M.A.CIOCCI 20/1/90
   
      INPUT
            PR(3)/R  Generally the beam-beam crossing point coordinates
            RL1/R    (Radius of curvature)*(Tangent of dip)
            Z0/R     Z0 (see frft bank)
            PSIN/R   psi angle mod twopi
      OUTPUT
            PSIN/R   psi angle
       CALLED:
               YPSIVE
       CALLS:
               NONE
                        DESCRIPTION
                        ============
       Select the correct phase for the psi angle minimizing also
       the z distance and recalculates psi
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPSIVE                                                                          
        |---- YZPHA1                                                               
                   |----  FLOAT                               External             
   
 
3 YZPHAN
         SUBROUTINE YZPHAN(PR,RL1,Z0,PSIN,XDN)
  ------------------------------------------------------------------------------
    CKEY YV0 ANGLE DISTANCE /INTERNAL
  ------------------------------------------------------------------------------
   Find psi angle respect to the point pr,minimizing the z distance
   AUTHOR : M.A.CIOCCI 20/1/90
   
      INPUT
            PR(3)/R  Generally the beam-beam crossing point coordinates
            RL1/R    (Radius of curvature)*(Tangent of dip)
            Z0/R     Z0 (see frft bank)
            PSIN/R   psi angle mod twopi
      OUTPUT
            PSIN/R   psi angle
       CALLED:
               YPSIVN
       CALLS:
               NONE
                        DESCRIPTION
                        ============
       Select the correct phase for the psi angle minimizing also
       the z distance and recalculates psi
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YPSIVN                                                                          
        |---- YZPHAN.                                                              
   
 
3 YZPHAS
         SUBROUTINE YZPHAS(Z1,Z2,PSI1,PSI2,RL1,RL2,DISM)
  ------------------------------------------------------------------------------
    CKEY YV0 PHASE DISTANCE /INTERNAL
  ------------------------------------------------------------------------------
   Select the correct phase minimizing the z distance
   AUTHOR : M.A.CIOCCI,L.ROLANDI   7-4-88
   
      INPUT Z1/R  Z COORDINATE ALONG FIRST HELIX
                  DEFINED MOD TWOPI
            Z2/R  Z COORDINATE ALONG SECOND HELIX
                  DEFINED MOD TWOPI
          PSI1/R  PSI ANGLE ALONG FIRST HELIX
                  DEFINED MOD TWOPI
          PSI2/R  PSI ANGLE ALONG SECOND HELIX
                  DEFINED MOD TWOPI
           RL1/R  (RADIUS OF CURVATURE)*(TANGENT OF DIP)
                   FOR FIRST HELIX
           RL2/R  (RADIUS OF CURVATURE)*(TANGENT OF DIP)
                  FOR SECOND HELIX
      OUTPUT PSI1/R PSI ANGLE ALONG FIRST HELIX
             PSI2/R PSI ANGLE ALONG SECOND HELIX
             DISM/R MINIMUM Z DISTANCE WHEN DISTANCE ON X-Y IS MINIMIZED
              DESCRIPTION
             ============
    the correct phase minimizing the Z distance
    aleph note about V0 reconstruction
       CALLED BY yfpsin
   
   ------------------------------------------------------------------------------
   Caller(s)  Node        Calls                               Description
   -------------------------------------------------------------------------------
   YFPSIN                                                                          
        |---- YZPHAS                                                               
                   |----  FLOAT                               External             
   
