C******************************************************************     JNUCLE 2
C purpose : for a decay B --> D + X where only the D is fully           JNUCLE 3
C reconstructed, the nucleated jet method allows, by adding to          JNUCLE 4
C the the D nearby particles (charged and neutrals),                    JNUCLE 5
C to reconstruct the B 4-momentum                                       JNUCLE 6
C (most useful quantities : boost P/M and B direction)                  JNUCLE 7
C This algorithm has been used for "B lifetime with the J/Psi tag"      JNUCLE 8
C Its potentiality for Bs --> Ds + X                                    JNUCLE 9
C- are described in minutes of heavy flavour meeting 28.10.92           JNUCLE10
C ALEPH 92-161   PHYSIC 92-147                                          JNUCLE11
C                                                                       JNUCLE12
CThe essential parameters of the algorithm are ECUT                     JNUCLE13
C  (minimum energy of a particle to be accepted in the jet)             JNUCLE14
C and MCUT (Maximum mass of the jet)                                    JNUCLE15
C The current value used are roughly tuned for Bs-->Ds X                JNUCLE16
C It should give a resolution on (P/M) of about                         JNUCLE17
C 13 % if no neutrino in X, 16 % if X is anything                       JNUCLE18
Cthe resolution on the B direction is about 20 mrad                     JNUCLE19
C                                                                       JNUCLE20
C(one could cut events with an identified lepton in the hemisphere,     JNUCLE21
Cor big missing energy)                                                 JNUCLE22
C                                                                       JNUCLE23
C- The algorithm is designed to run within ALPHA, but to minimize       JNUCLE24
C interference with other routine and                                   JNUCLE25
C to avoid problem if multiple calls to this routine in the same event, JNUCLE26
C the main part of the routine is independent of ALPHA: no tracks are   JNUCLE27
C locked neither unlocked, no mass of tracks is changed.                JNUCLE28
CNo QJOPTR is done.                                                     JNUCLE29
C                                                                       JNUCLE30
C     To avoid including in the jet tracks which already belong         JNUCLE31
C to the D, it is up to the user to give the corresponding energy       JNUCLE32
C flow track number or CHT track number for charged track.              JNUCLE33
C                                                                       JNUCLE34
C                                                                       JNUCLE35
C If EFLW or EFLJ card is present Janot Energy Flow is used, PCPA otherwJNUCLE36
C                                                                       JNUCLE37
C                                                                       JNUCLE38
C IF DP(4).le.0 the 4 momentum of the D is calculated from the          JNUCLE39
C tracks given. If not, the value of DP is used. (This allows the user  JNUCLE40
C to do more complicated calculation of the 4-momentum (Mass constraint,JNUCLE41
C at vertex, etc...))                                                   JNUCLE42
C                                                                       JNUCLE43
c  INPUT      NTK   INTEGER number of tracks from the D                 JNUCLE44
C             TK    INTEGER(10) array of alpha tracks number (CHT sectioJNUCLE45
C                               or energy flow) of input                JNUCLE46
C                               tracks from D. This array is used to    JNUCLE47
C                               avoid including in the jet tracks which JNUCLE48
C                               are already included in the D. It is    JNUCLE49
C                               NOT used to calculate D 4 momentum.     JNUCLE50
C             DP   REAL(4)  4-momentum of the D (if DP(4)<=0            JNUCLE51
C                           this is  calculated form the 4 momenta of   JNUCLE52
C                           tracks in TK)                               JNUCLE53
C OUTPUT     JNP   REAL(4)  4-momentum of the nucleated jet             JNUCLE54
C                           If somethng went wrong: set to 0.           JNUCLE55
C                                                                       JNUCLE56
C call : sets of kinematics calculation functions : JNxxxx              JNUCLE57
C                                                                       JNUCLE58
C all warning messages should be taken seriously                        JNUCLE59
C                                                                       JNUCLE60
C AUTHOR: DAVID ROUSSEAU (MARSEILLE)              9 MAY 1993            JNUCLE61
C    MINOR BUG CORRECTED (THANKS ANDY GREEN)     10 DEC 1993            JNUCLE62
C (COULD HAVE AFFECTED THE RARE CASE WHERE ALL THE TRACKS ARE IN        JNUCLE63
C  THE NUCLEATED JET)                                                   JNUCLE64
C***********************************************************************JNUCLE65
      SUBROUTINE JNUCLE (NTK,TK,DP,JNP)                                 JNUCLE66
      IMPLICIT NONE                                                     JNUCLE67
C ALPHA Version 120 - Implicit declaration file created 21 Oct 1994     JB941114
      REAL ATG                                                          QDECL  3
      REAL QQPI,QQE,QQ2PI,QQPIH,QQRADP,QQC,QQH,QQHC,QQIRP,QELEP,QMFLD   QDECL  4
      REAL QMFLDC,QTIME,QTIMEI,QTIMEL,QTIMES,QTIMET,QDHEEC,QDHEEL       QDECL  5
      REAL QDHEPF,QDHETH,QDHEPH,QDHEEF,QDHEET,QDHET1,QDHEP1,QDHET2      QDECL  6
      REAL QDHEP2,QDHEE1,QDHEE2,QDHEE3,QKEVRN,QKEVWT,QVXNOM,QVYNOM      QDECL  7
      REAL QVZNOM,QVXNSG,QVYNSG,QVZNSG,QINLUM,QRINLN,QRINLU,QDBOFS      QDECL  8
      REAL QEECWI,QVXBOM,QVYBOM,QSILUM,QRSLLU,QRSLBK,QRSLEW,QVTXBP      QDECL  9
      REAL QVTEBP,QVTSBP,RTABL,QSQT,QF,QP,QX,QY,QZ,QE,QM,QCH,QCT,QDB    QDECL 10
      REAL QZB,QDBS2,QZBS2,QBC2,QSIG,QSMAT,QSIGX,QSIGY,QSIGZ,QSIGEE     QDECL 11
      REAL QSIGE,QSIGPP,QSIGP,QSIGMM,QSIGM,QMCHIF,QPH,QPT,QRDFL,QVX,QVY QDECL 12
      REAL QVZ,QVEM,QVCHIF,QVDIF2,QVDIF3,QMSQ2,QMSQ3,QMSQ4,QM2,QM3,QM4  QDECL 13
      REAL QDMSQ,QBETA,QGAMMA,QDOT3,QDOT4,QCOSA,QPPAR,QPPER,QCMASS      QDECL 14
      REAL QCCHAR,QCLIFE,QCWIDT,QFRFIR,QFRFTL,QFRFP0,QFRFD0,QFRFZ0      QDECL 15
      REAL QFRFAL,QFRFEM,QFRFC2,QFRIPE,QFRIPM,QFRIPI,QFRIPK,QFRIPP      QDECL 16
      REAL QFRINK,QTEXTM,QTEXTL,QTEXAD,QEIDRI,QEIDEC,QEIDEI,QHMAED      QDECL 17
      REAL QHMACS,QMCADH,QMCADC,QMCAAM,QMCAAC,QMUISR,QMUIDM,QPECER      QDECL 18
      REAL QPECE1,QPECE2,QPECTH,QPECPH,QPECEC,QPEPT1,QPEPP1,QPEPT3      QDECL 19
      REAL QPEPP3,QPHCER,QPHCTH,QPHCPH,QPHCEC,QEFOWE,QEGPR1,QEGPR2      QDECL 20
      REAL QEGPF4,QEGPDM,QPGPR1,QPGPR2,QPGPF4,QPGPDM,QPGPST,QPGPQ1      QDECL 21
      REAL QPGPQ2,QPGPM1,QPGPM2,QPGPMA,QPGPER,QPGPTR,QPGPPR,QYV0VX      QDECL 22
      REAL QYV0VY,QYV0VZ,QYV0X1,QYV0X2,QYV0C2,QYV0DM,QYV0S1,QYV0S2      QDECL 23
      REAL QDECA2,QDECAN,QMASV0,QMCHI2,QMDIFF,QPCHAR,QPLIFE,QPMASS      QDECL 24
      REAL QPWIDT,QKBLOK,QPGAEF,QPGAGC,QPGAZS,QPGAPL,QPGAPH             JB941115
      REAL QLEPPI,QLEPPE                                                JB941116
      INTEGER KCQDET,KCQFPA,KCQPAR,KCQVEC,KCQVRT,KHE,KHMU,KHPI,KHK,KHP  QDECL 26
      INTEGER KHPHOT,KHNHAD,KMONTE,KRECO,KLOCKM,KSOVT,KSCHT,KSIST,KSAST QDECL 27
      INTEGER KSEHT,KSV0T,KSDCT,KSEFT,KSNET,KSGAT,KSJET,KSMCT,KSREV     QDECL 28
      INTEGER KSMCV,KUNDEF,KFOVT,KLOVT,KNOVT,KFCHT,KLCHT,KNCHT,KFIST    QDECL 29
      INTEGER KLIST,KNIST,KFAST,KLAST,KNAST,KFEHT,KLEHT,KNEHT,KFV0T     QDECL 30
      INTEGER KLV0T,KNV0T,KFDCT,KLDCT,KNDCT,KFEFT,KLEFT,KNEFT,KFNET     QDECL 31
      INTEGER KLNET,KNNET,KFGAT,KLGAT,KNGAT,KFJET,KLJET,KNJET,KFMCT     QDECL 32
      INTEGER KLMCT,KNMCT,KFREV,KLREV,KNREV,KFMCV,KLMCV,KNMCV,KLUST     QDECL 33
      INTEGER KLUSV,KFFRT,KLFRT,KFFRV,KLFRV,KNRET,KNCOT,KFFRD,KBIT      QDECL 34
      INTEGER KCLACO,KCLAFR,KCLARM,KDEBUG,KEVT,KEXP,KFFILL,KFEOUT       QDECL 35
      INTEGER KJOPTN,KLEOUT,KLROUT,KLOCK0,KLOCK1,KLOCK2,KMATIX,KMQFPA   QDECL 36
      INTEGER KNEFIL,KNEOUT,KNEVT,KNPAST,KNQDET,KNQFPA,KNQLIN,KNQMTX    QDECL 37
      INTEGER KNQPAR,KNQPST,KNREIN,KNREOU,KOQDET,KOQFPA,KOQLIN,KOQMTL   QDECL 38
      INTEGER KOQMTS,KOQPAR,KOQPBT,KOQPLI,KOQTRA,KOQVEC,KOQVRT,KQPAR    QDECL 39
      INTEGER KQVEC,KQVRT,KQWRK,KQZER,KRUN,KSTATU,KTDROP,KUCARD,KUCONS  QDECL 40
      INTEGER KUHIST,KUINPU,KUOUTP,KUPRNT,KUPTER,KDEBU1,KDEBU2,KNWRLM   QDECL 41
      INTEGER KEFOPT,KUEDIN,KUEDOU,KURTOX,KUCAR2,KNHDRN,KNBHAB,KSBHAB   QDECL 42
      INTEGER KRSLLQ,KRSLNB,INDATA,KRINNE,KRINNF,KRINDC,KRINDQ,KRINNZ   QDECL 43
      INTEGER KRINNB,KRINBM,KRINFR,KRINLR,KRINLF,KEVERT,KEVEDA,KEVETI   QDECL 44
      INTEGER KEVEMI,KEVETY,KEVEES,KDHEFP,KDHENP,KDHENM,KKEVNT,KKEVNV   QDECL 45
      INTEGER KKEVID,KDHENX,KDHENV,KDHENJ,KREVDS,KXTET1,KXTET2,KXTEL2   QDECL 46
      INTEGER KXTCGC,KXTCLL,KXTCBN,KXTCCL,KXTCHV,KXTCEN,KCLASW,KERBOM   QDECL 47
      INTEGER KBPSTA,KLOCUS,KFRET,KLRET,KFCOT,KLCOT,NAAFID,NAAJOB       QDECL 48
      INTEGER NAASEV,NABCNT,NABHIT,NABOMB,NABOME,NABOMP,NABOMR,NABPTR   QDECL 49
      INTEGER NADCAL,NADCRL,NADECO,NADEID,NADENF,NADEVT,NADEWI,NADFMC   QDECL 50
      INTEGER NADFOT,NADGAM,NADHCO,NADHEA,NADHRL,NADJET,NADMID,NADMJT   QDECL 51
      INTEGER NADMUO,NADNEU,NADPOB,NADRES,NADTBP,NADTMC,NADTRA,NADVER   QDECL 52
      INTEGER NADVMC,NAECRQ,NAECTE,NAEGID,NAEGPC,NAEIDT,NAEJET,NAERRF   QDECL 53
      INTEGER NAETDI,NAETKC,NAEVEH,NAEWHE,NAFICL,NAFKIN,NAFPOI,NAFPOL   QDECL 54
      INTEGER NAFRFT,NAFRID,NAFRTL,NAFSTR,NAFTCL,NAFTCM,NAFTOC,NAFTTM   QDECL 55
      INTEGER NAFVCL,NAFVER,NAFZFR,NAHCCV,NAHCTE,NAHINF,NAHMAD,NAHPDI   QDECL 56
      INTEGER NAHROA,NAHSDA,NAHTUB,NAIASL,NAIPJT,NAIRJT,NAITCO,NAITMA   QDECL 57
      INTEGER NAIXTR,NAIZBD,NAJBER,NAJEST,NAJSUM,NAKEVH,NAKINE,NAKJOB   QDECL 58
      INTEGER NAKLIN,NAKPOL,NAKRUN,NALIDT,NALOLE,NALUPA,NAMCAD,NAMHIT   QDECL 59
      INTEGER NAMTHR,NAMUDG,NAMUEX,NAOSTS,NAPART,NAPASL,NAPCHY,NAPCOB   QDECL 60
      INTEGER NAPCOI,NAPCPA,NAPCQA,NAPCRL,NAPECO,NAPEHY,NAPEID,NAPEMH   QDECL 61
      INTEGER NAPEPT,NAPEST,NAPEWI,NAPFER,NAPFHR,NAPFRF,NAPFRT,NAPHCO   QDECL 62
      INTEGER NAPHER,NAPHHY,NAPHMH,NAPHST,NAPIDI,NAPITM,NAPLID,NAPLPD   QDECL 63
      INTEGER NAPLSD,NAPMSK,NAPNEU,NAPPDS,NAPPOB,NAPPRL,NAPRTM,NAPSCO   QDECL 64
      INTEGER NAPSPO,NAPSTR,NAPT2X,NAPTBC,NAPTCO,NAPTEX,NAPTMA,NAPTML   QDECL 65
      INTEGER NAPTNC,NAPTST,NAPVCO,NAPYER,NAPYFR,NAPYNE,NAQDET,NAQFPA   QDECL 66
      INTEGER NAQLIN,NAQMTL,NAQMTS,NAQPAR,NAQPBT,NAQPLI,NAQTRA,NAQVEC   QDECL 67
      INTEGER NAQVRT,NAQWRK,NAQZER,NAREVH,NARHAH,NARTLO,NARTLS,NARUNH   QDECL 68
      INTEGER NARUNR,NASFTR,NATEXS,NATGMA,NATMTL,NATPCO,NAVCOM,NAVCPL   QDECL 69
      INTEGER NAVDCO,NAVDHT,NAVDXY,NAVDZT,NAVERT,NAVFHL,NAVFLG,NAVFPH   QDECL 70
      INTEGER NAVHLS,NAVPLH,NAX1AD,NAX1SC,NAX1TI,NAX2DF,NAX3EC,NAX3EW   QDECL 71
      INTEGER NAX3HC,NAX3IT,NAX3L2,NAX3LU,NAX3TM,NAX3TO,NAX3TP,NAX3X3   QDECL 72
      INTEGER NAXTBN,NAXTBP,NAXTCN,NAXTEB,NAXTOP,NAXTRB,NAYV0V,NAZPFR   QDECL 73
      INTEGER NANBIP,NAPGAC,NAPMSC,NAPTHR,NAPDLT,NAPMLT,NAPLJT          JB941117
      INTEGER NAEFOL,NAMUID,NAPGID,NAPGPC,JQVEQX,JQVEQY,JQVEQZ,JQVEQE   QDECL 74
      INTEGER JQVEQM,JQVEQP,JQVECH,JQVETN,JQVESC,JQVEKS,JQVECL,JQVEPA   QDECL 75
      INTEGER JQVEQD,JQVENP,JQVESP,JQVEOV,JQVEEV,JQVEND,JQVEDL,JQVENO   QDECL 76
      INTEGER JQVEOL,JQVENM,JQVEML,JQVEBM,JQVELK,JQVEDB,JQVEZB,JQVESD   QDECL 77
      INTEGER JQVESZ,JQVECB,JQVEEM,JQVECF,JQVEEW,JQVEUS,JQVRVX,JQVRVY   QDECL 78
      INTEGER JQVRVZ,JQVRVN,JQVRTY,JQVRIP,JQVRND,JQVRDL,JQVRAY,JQVRAF   QDECL 79
      INTEGER JQVREM,JQVRCF,JQVRET,JQDEAF,JQDEAL,JQDENT,JQDEAT,JQDELT   QDECL 80
      INTEGER JQDEAE,JQDEAH,JQDEAM,JQDECF,JQDEEC,JQDEHC,JQDEET,JQDEFI   QDECL 81
      INTEGER JQDENF,JQDEFL,JQDENE,JQDEEL,JQDENH,JQDEHL,JQDELH,JQDEEF   QDECL 82
      INTEGER JQDEPC,JQDEEG,JQDEMU,JQDEDX,JQDEPG,JQPAGN,JQPANA,JQPACO   QDECL 83
      INTEGER JQPAMA,JQPACH,JQPALT,JQPAWI,JQPAAN,JEFOPX,JEFOPY,JEFOPZ   QDECL 84
      INTEGER JEFOEW,JEFOWE,JEFOTY,JEFOLE,JEFOLT,JEFOLH,JEFOLC,JEFOLJ   QDECL 85
      INTEGER LEFOLA,JEGPPX,JEGPPY,JEGPPZ,JEGPR1,JEGPR2,JEGPF4,JEGPDM   QDECL 86
      INTEGER JEGPST,JEGPQU,JEGPPE,LEGPCA,JEIDIF,JEIDR1,JEIDR2,JEIDR3   QDECL 87
      INTEGER JEIDR4,JEIDR5,JEIDR6,JEIDR7,JEIDEC,JEIDIP,JEIDE1,JEIDE2   QDECL 88
      INTEGER JEIDE3,JEIDFR,JEIDPE,LEIDTA,JFRFIR,JFRFTL,JFRFP0,JFRFD0   QDECL 89
      INTEGER JFRFZ0,JFRFAL,JFRFEM,JFRFC2,JFRFDF,JFRFNO,LFRFTA,JFRIBP   QDECL 90
      INTEGER JFRIDZ,JFRIBC,JFRIDC,JFRIPE,JFRIPM,JFRIPI,JFRIPK,JFRIPP   QDECL 91
      INTEGER JFRINK,JFRIQF,LFRIDA,JFRTIV,JFRTNV,JFRTII,JFRTNI,JFRTNE   QDECL 92
      INTEGER JFRTIT,JFRTNT,JFRTNR,LFRTLA,JHMANF,JHMANE,JHMANL,JHMAMH   QDECL 93
      INTEGER JHMAIG,JHMAED,JHMACS,JHMAND,JHMAIE,JHMAIT,JHMAIF,JHMATN   QDECL 94
      INTEGER LHMADA,JMCANH,JMCADH,JMCADC,JMCAAM,JMCAAC,JMCATN,LMCADA   QDECL 95
      INTEGER JMUIIF,JMUISR,JMUIDM,JMUIST,JMUITN,LMUIDA,JPCQNA,JPCQPX   QDECL 96
      INTEGER JPCQPY,JPCQPZ,JPCQEN,LPCQAA,JPECER,JPECE1,JPECE2,JPECTH   QDECL 97
      INTEGER JPECPH,JPECEC,JPECKD,JPECCC,JPECRB,JPECPC,LPECOA,JPEPT1   QDECL 98
      INTEGER JPEPP1,JPEPT3,JPEPP3,LPEPTA,JPGPEC,JPGPTC,JPGPPC,JPGPR1   QDECL 99
      INTEGER JPGPR2,JPGPF4,JPGPDM,JPGPST,JPGPQU,JPGPQ1,JPGPQ2,JPGPM1   QDECL100
      INTEGER JPGPM2,JPGPMA,JPGPER,JPGPTR,JPGPPR,JPGPPE,LPGPCA,JPHCER   QDECL101
      INTEGER JPHCTH,JPHCPH,JPHCEC,JPHCKD,JPHCCC,JPHCRB,JPHCNF,JPHCPC   QDECL102
      INTEGER LPHCOA,JTEXSI,JTEXTM,JTEXTL,JTEXNS,JTEXAD,JTEXTN,LTEXSA   QDECL103
      INTEGER JYV0K1,JYV0K2,JYV0VX,JYV0VY,JYV0VZ,JYV0VM,JYV0PX,JYV0PY   QDECL104
      INTEGER JYV0PZ,JYV0PM,JYV0X1,JYV0X2,JYV0XM,JYV0C2,JYV0IC,JYV0P1   QDECL105
      INTEGER JYV0P2,JYV0EP,JYV0DM,JYV0S1,JYV0S2,LYV0VA,LCOLS,KI,LROWS  QDECL106
      INTEGER KNEXT,KROW,KI1,LFRWRD,LFRROW,ITABL,KI2,KJQDET,KCH,KTN,KMC QDECL107
      INTEGER KBMASK,KCALFL,KCHGD,KCLASS,KDAU,KECAL,KENDV,KFOLLO,KHCAL  QDECL108
      INTEGER KLUNDS,KNCHGD,KNECAL,KNHCAL,KNMOTH,KMOTH,KMTCH,KNDAU      QDECL109
      INTEGER KNMTCH,KORIV,KSAME,KSMTCH,KSTABC,KTPCOD,KRDFL,KVN,KVTYPE  QDECL110
      INTEGER KVINCP,KVNDAU,KVYV0V,KVFVER,KVDAU,KI3,KI4,KFRFDF,KFRFNO   QDECL111
      INTEGER KFRTNV,KFRTNI,KFRTNE,KFRTNT,KFRTNR,KFRIBP,KFRIDZ,KFRIBC   QDECL112
      INTEGER KFRIDC,KFRIQF,KNTEX,KTEXSI,KTEXNS,KEIDIF,KEIDIP,KHMANF    QDECL113
      INTEGER KHMANE,KHMANL,KHMAMH,KHMAIG,KHMAND,KHMAIE,KHMAIT,KHMAIF   QDECL114
      INTEGER KMCANH,KMUIIF,KMUIST,KMUITN,KPECKD,KPECCC,KPECRB,KPECPC   QDECL115
      INTEGER KPHCKD,KPHCCC,KPHCRB,KPHCPC,KEFOTY,KEFOLE,KEFOLT,KEFOLH   QDECL116
      INTEGER KEFOLC,KEFOLJ,KPCQNA,KEGPST,KEGPQU,KEGPPE,KPGPQU,KPGPPE   QDECL117
      INTEGER KYV0K1,KYV0K2,KYV0IC,KSCNEW,KSCOLD,KFPADR,KGLUND,KMCCOD   QDECL118
      INTEGER KCANTI,KCDIR,KCDIRA,KCHT,KIDSAV,KPANTI,KPART,KPDIR,KPDIRA QDECL119
      INTEGER KTLOR,KTLOR1,KVFITA,KVFITC,KVFITM,KVFITN,KVFITV,KVFTMC    QDECL120
      INTEGER KTLORX,KVGOOD,KVNEW,KVSAVA,KVSAVC,KVSAVE,KPARTX,KPCCOMP   QDECL121
      INTEGER KPGAPN,KPGAFA,KPGAPE,KLEPPA,KLEPJT,KLEPFL,KLEPPO,KLEPCH   JB941118
      INTEGER KPGAST,KLEPVP,KLEPSP,KLEPLE,KLEPME,KLEPKT,JQDEPD,JQDEPM   JB941119
      INTEGER JPGAEC,JPGATC,JPGAPC,JPGAR1,JPGAR2,JPGAF4,JPGADM,JPGAST   JB941110
      INTEGER JPGAQU,JPGAQ1,JPGAQ2,JPGAM1,JPGAM2,JPGAMA,JPGAER,JPGATR   JB941111
      INTEGER JPGAPR,JPGAEF,JPGAGC,JPGAZS,JPGAPL,JPGAPH,JPGAPN,JPGAFA   JB941112
      INTEGER JPGAPE,LPGACA,KLFJET,KLLJET,KLNJET,KLJTNO                 JB941113
      INTEGER JPDLPA,JPDLJT,JPDLPI,JPDLPE,JPDLVP,JPDLFR,LPDLTA,LPMLTA   JB941114
      INTEGER JPMLFL,JPMLPO,JPMLCH,JPMLSP,JPMLLE,JPMLME,JPMLKT,JPMLFR   JB941115
C-------------------- /QCDE/ --- COMMONs, DIMENSIONs, etc. ------------ QCDE   2
C Start of QCDESH ----------------------- Description in QDATA ---------QCDESH 2
      PARAMETER (KCQDET=34, KCQFPA=8, KCQPAR=10, KCQVEC=73, KCQVRT=30,  QCDESH 3
     & KHE=1, KHMU=2, KHPI=3, KHK=4, KHP=5, KHPHOT=1, KHNHAD=2,         QCDESH 4
     & KMONTE=-2, KRECO=-1, KLOCKM=14, KSOVT=1, KSCHT=2, KSIST=3,       QCDESH 5
     & KSAST=4, KSEHT=5, KSV0T=6, KSDCT=7, KSEFT=8, KSNET=9, KSGAT=10,  QCDESH 6
     & KSJET=11, KSMCT=12, KSREV=13,                                    QCDESH 7
     & KSMCV=14, KUNDEF=-12344321, QQPI=3.141593, QQE=2.718282,         QCDESH 8
     & QQ2PI=QQPI*2., QQPIH=QQPI/2., QQRADP=180./QQPI, QQC=2.997925E10, QCDESH 9
     & QQH=6.582173E-25, QQHC=QQH*QQC, QQIRP=.00029979)                 QCDESH10
      CHARACTER CQDATE*8, CQDWRK*80, CQFHIS*80, CQFOUT*80, CQFWRK*80,   QCDESH11
     & CQHTIT*80, CQSEC*3, CQTIME*8, CQUNPK*30, CQVERS*6, CQRLST*800,   JB941525
     & CQELST*800                                                       QCDESH13
      COMMON /QCDEC/ CQDATE, CQDWRK, CQFHIS, CQFOUT, CQFWRK, CQHTIT,    QCDESH14
     & CQSEC(14), CQTIME, CQUNPK, CQVERS, CQRLST, CQELST                QCDESH15
      COMMON /QCDE/ QELEP, QMFLD ,QMFLDC, QTIME, QTIMEI, QTIMEL,        QCDESH16
     & QTIMES, QTIMET, QDHEEC, QDHEEL, QDHEPF, QDHETH, QDHEPH, QDHEEF,  QCDESH17
     & QDHEET, QDHET1, QDHEP1, QDHET2, QDHEP2, QDHEE1, QDHEE2, QDHEE3,  QCDESH18
     & QKEVRN, QKEVWT, QVXNOM, QVYNOM, QVZNOM, QVXNSG, QVYNSG, QVZNSG,  QCDESH19
     & QINLUM, QRINLN, QRINLU, QDBOFS, QEECWI(36), QVXBOM, QVYBOM,      QCDESH20
     & QSILUM, QRSLLU, QRSLBK, QRSLEW , QVTXBP(3), QVTEBP(3), QVTSBP(3) QCDESH21
      COMMON /QCDE/  KFOVT, KLOVT, KNOVT, KFCHT, KLCHT, KNCHT, KFIST,   QCDESH22
     & KLIST, KNIST, KFAST, KLAST, KNAST, KFEHT, KLEHT, KNEHT, KFV0T,   QCDESH23
     & KLV0T, KNV0T, KFDCT, KLDCT, KNDCT, KFEFT, KLEFT, KNEFT, KFNET,   QCDESH24
     & KLNET, KNNET, KFGAT, KLGAT, KNGAT, KFJET, KLJET, KNJET, KFMCT,   QCDESH25
     & KLMCT, KNMCT, KFREV, KLREV, KNREV, KFMCV, KLMCV, KNMCV, KLUST,   QCDESH26
     & KLUSV, KFFRT, KLFRT, KFFRV, KLFRV, KNRET, KNCOT, KFFRD,          JB941526
     & KLFJET,KLLJET,KLNJET                                             JB941527
      COMMON /QCDE/ KBIT(32), KCLACO(KCQFPA), KCLAFR(KCQFPA), KCLARM    QCDESH28
     & (KCQFPA), KDEBUG, KEVT, KEXP, KFFILL, KFEOUT, KJOPTN(2,2),       QCDESH29
     & KLEOUT, KLROUT, KLOCK0(KLOCKM,2), KLOCK1(KLOCKM,2), KLOCK2(      QCDESH30
     & KLOCKM,2), KMATIX(6,6), KMQFPA, KNEFIL, KNEOUT, KNEVT, KNPAST,   QCDESH31
     & KNQDET, KNQFPA, KNQLIN, KNQMTX, KNQPAR, KNQPST, KNREIN, KNREOU,  QCDESH32
     & KOQDET, KOQFPA, KOQLIN, KOQMTL, KOQMTS, KOQPAR, KOQPBT, KOQPLI,  QCDESH33
     & KOQTRA, KOQVEC, KOQVRT, KQPAR, KQVEC, KQVRT, KQWRK, KQZER, KRUN, QCDESH34
     & KSTATU, KTDROP, KUCARD, KUCONS, KUHIST, KUINPU, KUOUTP, KUPRNT,  QCDESH35
     & KUPTER, KDEBU1, KDEBU2, KNWRLM, KEFOPT, KUEDIN, KUEDOU, KURTOX,  QCDESH36
     & KUCAR2, KNHDRN, KNBHAB, KSBHAB, KRSLLQ, KRSLNB                   QCDESH37
      COMMON /QCDE/ INDATA                                              QCDESH38
      COMMON /QCDE/ KRINNE, KRINNF, KRINDC, KRINDQ, KRINNZ, KRINNB,     QCDESH39
     & KRINBM, KRINFR, KRINLR, KRINLF                                   QCDESH40
      COMMON /QCDE/ KEVERT, KEVEDA, KEVETI, KEVEMI(4), KEVETY, KEVEES,  QCDESH41
     & KDHEFP, KDHENP, KDHENM, KKEVNT, KKEVNV, KKEVID, KDHENX, KDHENV,  QCDESH42
     & KDHENJ, KREVDS, KXTET1, KXTET2, KXTEL2, KXTCGC, KXTCLL, KXTCBN,  QCDESH43
     & KXTCCL, KXTCHV, KXTCEN, KCLASW, KERBOM, KBPSTA                   QCDESH44
      DIMENSION KLOCUS(3,14)                                            QCDESH45
      EQUIVALENCE (KLOCUS(1,1),KFOVT), (KFOVT,KFRET), (KLIST,KLRET),    QCDESH46
     & (KFIST,KFCOT), (KLAST,KLCOT)                                     QCDESH47
      COMMON /QCDE/ XCOPYJ, XFLIAC, XHISTO, XLREV(2), XLREV2(2), XMCEV, QCDESH48
     & XMINI, XSYNTX, XWREVT, XWRRUN, XFILMC, XFILCH, XFILV0, XFILCO,   QCDESH49
     & XFILEF, XFILPC, XFILGA, XFILJE,                                  QCDESH50
     & XPRHIS, XFILL, XVITC, XVTPC, XVECAL, XVLCAL, XVTPCD,             QCDESH51
     & XVSATR, XVHCAL, XHVTRG, XSREC, XWMINI, XIOKLU, XIOKSI, XFRF2,    QCDESH52
     & XNSEQ, XVDOK, XFRF0, XFMUID, XFILEM, XWNANO, XROKSI, XGETBP,     JB941528
     & XJTHRU                                                           JB941529
      LOGICAL XCOPYJ, XFLIAC, XHISTO, XLREV, XLREV2, XMCEV, XMINI,      QCDESH54
     & XSYNTX, XWREVT, XWRRUN, XFILMC, XFILCH, XFILV0, XFILCO, XFILEF,  QCDESH55
     & XFILPC, XPRHIS, XFILL, XVITC, XVTPC, XVECAL, XVLCAL, XVTPCD,     QCDESH56
     & XVSATR, XVHCAL, XHVTRG, XSREC, XWMINI, XIOKLU, XFRF2, XFILJE,    QCDESH57
     & XNSEQ, XFILGA, XVDOK, XFRF0, XFMUID, XFILEM, XWNANO, XIOKSI,     QCDESH58
     & XROKSI, XGETBP, XJTHRU                                           JB941530
C-------------------- /NANCOM/ --- NanoDst steering ------------------- NANCOM 2
C! XNANO   .TRUE. if input is a NanoDst (in NANO or EPIO format, dependiNANCOM 3
C!                   XNANOR)                                            NANCOM 4
C!                                                                      NANCOM 5
      LOGICAL XNANO                                                     NANCOM 6
      COMMON /NANCOM/XNANO                                              NANCOM 7
C--------------------- end of NANCOM ---------------------------------- NANCOM 8
      INTEGER LMHLEN, LMHCOL, LMHROW                                    BCS    2
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)                          BCS    3
      INTEGER IW                                                        BCS    4
      REAL RW(10000)                                                    BCS    5
      COMMON /BCS/ IW(10000)                                            BCS    6
      EQUIVALENCE (RW(1),IW(1))                                         BCS    7
C------------------ /QCNAMI/ --- name indices ------------------------- QCNAMI 2
      COMMON /QCNAMI/ NAAFID,NAAJOB,NAASEV,NABCNT,NABHIT,NABOMB,        QCNAMI 3
     1 NABOME,NABOMP,NABOMR,NABPTR,NADCAL,NADCRL,NADECO,NADEID,NADENF,  QCNAMI 4
     2 NADEVT,NADEWI,NADFMC,NADFOT,NADGAM,NADHCO,NADHEA,NADHRL,NADJET,  QCNAMI 5
     3 NADMID,NADMJT,NADMUO,NADNEU,NADPOB,NADRES,NADTBP,NADTMC,NADTRA,  QCNAMI 6
     4 NADVER,NADVMC,NAECRQ,NAECTE,NAEGID,NAEGPC,NAEIDT,NAEJET,NAERRF,  QCNAMI 7
     5 NAETDI,NAETKC,NAEVEH,NAEWHE,NAFICL,NAFKIN,NAFPOI,NAFPOL,NAFRFT,  QCNAMI 8
     6 NAFRID,NAFRTL,NAFSTR,NAFTCL,NAFTCM,NAFTOC,NAFTTM,NAFVCL,NAFVER,  QCNAMI 9
     7 NAFZFR,NAHCCV,NAHCTE,NAHINF,NAHMAD,NAHPDI,NAHROA,NAHSDA,NAHTUB,  QCNAMI10
     8 NAIASL,NAIPJT,NAIRJT,NAITCO,NAITMA,NAIXTR,NAIZBD,NAJBER,NAJEST,  QCNAMI11
     9 NAJSUM,NAKEVH,NAKINE,NAKJOB,NAKLIN,NAKPOL,NAKRUN,NALIDT,NALOLE,  QCNAMI12
     A NALUPA,NAMCAD,NAMHIT,NAMTHR,NAMUDG,NAMUEX,NAOSTS,NAPART,NAPASL,  QCNAMI13
     B NAPCHY,NAPCOB,NAPCOI,NAPCPA,NAPCQA,NAPCRL,NAPECO,NAPEHY,NAPEID,  QCNAMI14
     C NAPEMH,NAPEPT,NAPEST,NAPEWI,NAPFER,NAPFHR,NAPFRF,NAPFRT,NAPHCO,  QCNAMI15
     D NAPHER,NAPHHY,NAPHMH,NAPHST,NAPIDI,NAPITM,NAPLID,NAPLPD,NAPLSD,  QCNAMI16
     E NAPMSK,NAPNEU,NAPPDS,NAPPOB,NAPPRL,NAPRTM,NAPSCO,NAPSPO,NAPSTR,  QCNAMI17
     F NAPT2X,NAPTBC,NAPTCO,NAPTEX,NAPTMA,NAPTML,NAPTNC,NAPTST,NAPVCO,  QCNAMI18
     G NAPYER,NAPYFR,NAPYNE,NAQDET,NAQFPA,NAQLIN,NAQMTL,NAQMTS,NAQPAR,  QCNAMI19
     H NAQPBT,NAQPLI,NAQTRA,NAQVEC,NAQVRT,NAQWRK,NAQZER,NAREVH,NARHAH,  QCNAMI20
     I NARTLO,NARTLS,NARUNH,NARUNR,NASFTR,NATEXS,NATGMA,NATMTL,NATPCO,  QCNAMI21
     J NAVCOM,NAVCPL,NAVDCO,NAVDHT,NAVDXY,NAVDZT,NAVERT,NAVFHL,NAVFLG,  QCNAMI22
     K NAVFPH,NAVHLS,NAVPLH,NAX1AD,NAX1SC,NAX1TI,NAX2DF,NAX3EC,NAX3EW,  QCNAMI23
     L NAX3HC,NAX3IT,NAX3L2,NAX3LU,NAX3TM,NAX3TO,NAX3TP,NAX3X3,NAXTBN,  QCNAMI24
     M NAXTBP,NAXTCN,NAXTEB,NAXTOP,NAXTRB,NAYV0V,NAZPFR,NAEFOL,NAMUID,  QCNAMI25
     N NAPGID,NAPGPC,NAPGAC,NAPMSC,NAPTHR,NANBIP,NAPDLT,NAPMLT,NAPLJT   JB941113
C--------------------- end of QCNAMI ---------------------------------- QCNAMI27
C------------------ /QQQQJJ/ --- HAC parameters for ALPHA banks ------- QQQQJJ 2
      PARAMETER (JQVEQX= 1,JQVEQY= 2,JQVEQZ= 3,JQVEQE= 4,JQVEQM= 5,     QQQQJJ 3
     & JQVEQP= 6,JQVECH= 7,JQVETN= 8,JQVESC= 9,JQVEKS=10,JQVECL=11,     QQQQJJ 4
     & JQVEPA=12,JQVEQD=13,JQVENP=14,JQVESP=15,JQVEOV=16,JQVEEV=17,     QQQQJJ 5
     & JQVEND=18,JQVEDL=19,JQVENO=20,JQVEOL=21,JQVENM=22,JQVEML=23,     QQQQJJ 6
     & JQVEBM=24,JQVELK=38,JQVEDB=39,JQVEZB=40,JQVESD=41,JQVESZ=42,     QQQQJJ 7
     & JQVECB=43,JQVEEM=44,JQVECF=54,JQVEEW=55,JQVEUS=56)               QQQQJJ 8
      PARAMETER ( JQVRVX=1,JQVRVY=2,JQVRVZ=3,JQVRVN=4,JQVRTY=5,         QQQQJJ 9
     1   JQVRIP=6,JQVRND=7,JQVRDL=8,JQVRAY=9,JQVRAF=10,JQVREM=11,       QQQQJJ10
     2   JQVRCF=17,JQVRET=18)                                           QQQQJJ11
      PARAMETER ( JQDEAF= 1,JQDEAL= 2,JQDENT= 3,JQDEAT= 4,JQDELT= 8,    QQQQJJ12
     &  JQDEAE= 9,JQDEAH=10,JQDEAM=11,JQDECF=12,JQDEEC=13,JQDEHC=14,    QQQQJJ13
     &  JQDEET=15,JQDEFI=16,JQDENF=17,JQDEFL=18,JQDENE=19,JQDEEL=20,    QQQQJJ14
     &  JQDENH=21,JQDEHL=22,JQDELH=23,JQDEEF=24,JQDEPC=25,JQDEEG=26,    QQQQJJ15
     &  JQDEMU=27,JQDEDX=28,JQDEPG=29,JQDEPD=30,JQDEPM=31)              JB941532
      PARAMETER ( JQPAGN=1, JQPANA=2, JQPACO=5, JQPAMA=6, JQPACH=7,     QQQQJJ17
     & JQPALT=8,JQPAWI=9,JQPAAN=10)                                     QQQQJJ18
C--------------------- end of QCDESH ---------------------------------- QCDESH63
      EXTERNAL CQPART, CQTPN, XCEQAN, XLUMOK, XPEQAN, XPEQOR, XPEQU,    QCDE   4
     & XVDEOK, LLUMOK, SLUMOK                                           QCDE   5
      CHARACTER * 12 CQPART, CQTPN                                      QCDE   6
      LOGICAL XCAL, XCEQAN, XCEQOR, XCEQU, XECAL, XEID, XFRF, XHCAL,    QCDE   7
     & XHMA, XLOCK, XLOCKN, XMC, XLUMOK, XMCA, XPEO, XPHO, XPEQAN,      QCDE   8
     & XPEQOR, XPEQU, XSAME, XSIG, XTEX, XPEC, XPEP, XPHC, XYV0,        QCDE   9
     & XFRIQF, XEFO, XPCQ, XEGP, XMUI, XVDEOK, XPGP, LLUMOK, SLUMOK,    JB941111
     & XPGAC, XLEPTG, XLEPTH                                            JB941112
      REAL PI, TWOPI, PIBY2, PIBY3, PIBY4, PIBY6, PIBY8, PIBY12         ALCONS 2
      REAL RADEG, DEGRA                                                 ALCONS 3
      REAL CLGHT, ALDEDX                                                ALCONS 4
      INTEGER NBITW, NBYTW, LCHAR                                       ALCONS 5
      PARAMETER (PI=3.141592653589)                                     ALCONS 6
      PARAMETER (RADEG=180./PI, DEGRA=PI/180.)                          ALCONS 7
      PARAMETER (TWOPI = 2.*PI , PIBY2 = PI/2., PIBY4 = PI/4.)          ALCONS 8
      PARAMETER (PIBY6 = PI/6. , PIBY8 = PI/8.)                         ALCONS 9
      PARAMETER (PIBY12= PI/12., PIBY3 = PI/3.)                         ALCONS10
      PARAMETER (CLGHT = 29.9792458, ALDEDX = 0.000307)                 ALCONS11
      PARAMETER (NBITW = 32 , NBYTW = NBITW/8 , LCHAR = 4)              ALCONS12
      PARAMETER(JEFOPX=1,JEFOPY=2,JEFOPZ=3,JEFOEW=4,JEFOWE=5,JEFOTY=6,  EFOLJJ 2
     +          JEFOLE=7,JEFOLT=8,JEFOLH=9,JEFOLC=10,JEFOLJ=11,         EFOLJJ 3
     +          LEFOLA=11)                                              EFOLJJ 4
      PARAMETER(JEGPPX=1,JEGPPY=2,JEGPPZ=3,JEGPR1=4,JEGPR2=5,JEGPF4=6,  EGPCJJ 2
     +          JEGPDM=7,JEGPST=8,JEGPQU=9,JEGPPE=10,LEGPCA=10)         EGPCJJ 3
      PARAMETER(JEIDIF=1,JEIDR1=2,JEIDR2=3,JEIDR3=4,JEIDR4=5,JEIDR5=6,  EIDTJJ 2
     +          JEIDR6=7,JEIDR7=8,JEIDEC=9,JEIDIP=10,JEIDE1=11,         EIDTJJ 3
     +          JEIDE2=12,JEIDE3=13,JEIDFR=14,JEIDPE=15,LEIDTA=15)      EIDTJJ 4
      PARAMETER(JFRFIR=1,JFRFTL=2,JFRFP0=3,JFRFD0=4,JFRFZ0=5,JFRFAL=6,  FRFTJJ 2
     +          JFRFEM=7,JFRFC2=28,JFRFDF=29,JFRFNO=30,LFRFTA=30)       FRFTJJ 3
      PARAMETER(JFRIBP=1,JFRIDZ=2,JFRIBC=3,JFRIDC=4,JFRIPE=5,JFRIPM=6,  FRIDJJ 2
     +          JFRIPI=7,JFRIPK=8,JFRIPP=9,JFRINK=10,JFRIQF=11,         FRIDJJ 3
     +          LFRIDA=11)                                              FRIDJJ 4
      PARAMETER(JFRTIV=1,JFRTNV=2,JFRTII=3,JFRTNI=4,JFRTNE=5,JFRTIT=6,  FRTLJJ 2
     +          JFRTNT=7,JFRTNR=8,LFRTLA=8)                             FRTLJJ 3
      PARAMETER(JHMANF=1,JHMANE=2,JHMANL=3,JHMAMH=4,JHMAIG=5,JHMAED=6,  HMADJJ 2
     +          JHMACS=7,JHMAND=8,JHMAIE=9,JHMAIT=10,JHMAIF=11,         HMADJJ 3
     +          JHMATN=12,LHMADA=12)                                    HMADJJ 4
      PARAMETER(JMCANH=1,JMCADH=3,JMCADC=5,JMCAAM=7,JMCAAC=8,JMCATN=9,  MCADJJ 2
     +          LMCADA=9)                                               MCADJJ 3
      PARAMETER(JMUIIF=1,JMUISR=2,JMUIDM=3,JMUIST=4,JMUITN=5,LMUIDA=5)  MUIDJJ 2
      PARAMETER(JPCQNA=1,JPCQPX=2,JPCQPY=3,JPCQPZ=4,JPCQEN=5,LPCQAA=5)  PCQAJJ 2
      PARAMETER (JPDLPA=1,JPDLJT=2,JPDLPI=3,JPDLPE=4,JPDLVP=5,          PDLTJJ 2
     &           JPDLFR=6,LPDLTA=6)                                     PDLTJJ 3
      PARAMETER(JPECER=1,JPECE1=2,JPECE2=3,JPECTH=4,JPECPH=5,JPECEC=6,  PECOJJ 2
     +          JPECKD=7,JPECCC=8,JPECRB=9,JPECPC=10,LPECOA=10)         PECOJJ 3
      PARAMETER(JPEPT1=1,JPEPP1=2,JPEPT3=3,JPEPP3=4,LPEPTA=4)           PEPTJJ 2
      PARAMETER(JPGAEC=1,JPGATC=2,JPGAPC=3,JPGAR1=4,JPGAR2=5,JPGAF4=6,  PGACJJ 2
     +          JPGADM=7,JPGAST=8,JPGAQU=9,JPGAQ1=10,JPGAQ2=11,         PGACJJ 3
     +          JPGAM1=12,JPGAM2=13,JPGAMA=14,JPGAER=15,JPGATR=16,      PGACJJ 4
     +          JPGAPR=17,JPGAEF=18,JPGAGC=19,JPGAZS=20,JPGAPL=21,      PGACJJ 5
     +          JPGAPH=22,JPGAPN=23,JPGAFA=24,JPGAPE=25,LPGACA=25)      PGACJJ 6
      PARAMETER(JPGPEC=1,JPGPTC=2,JPGPPC=3,JPGPR1=4,JPGPR2=5,JPGPF4=6,  PGPCJJ 2
     +          JPGPDM=7,JPGPST=8,JPGPQU=9,JPGPQ1=10,JPGPQ2=11,         PGPCJJ 3
     +          JPGPM1=12,JPGPM2=13,JPGPMA=14,JPGPER=15,JPGPTR=16,      PGPCJJ 4
     +          JPGPPR=17,JPGPPE=18,LPGPCA=18)                          PGPCJJ 5
      PARAMETER(JPHCER=1,JPHCTH=2,JPHCPH=3,JPHCEC=4,JPHCKD=5,JPHCCC=6,  PHCOJJ 2
     +          JPHCRB=7,JPHCNF=8,JPHCPC=9,LPHCOA=9)                    PHCOJJ 3
      PARAMETER (JPMLFL=1,JPMLPO=2,JPMLCH=3,JPMLSP=4,JPMLLE=5,          PMLTJJ 2
     &           JPMLME=6,JPMLKT=7,JPMLFR=8,LPMLTA=8)                   PMLTJJ 3
      PARAMETER(JTEXSI=1,JTEXTM=2,JTEXTL=3,JTEXNS=4,JTEXAD=5,JTEXTN=6,  TEXSJJ 2
     +          LTEXSA=6)                                               TEXSJJ 3
      PARAMETER(JYV0K1=1,JYV0K2=2,JYV0VX=3,JYV0VY=4,JYV0VZ=5,JYV0VM=6,  YV0VJJ 2
     +          JYV0PX=12,JYV0PY=13,JYV0PZ=14,JYV0PM=15,JYV0X1=21,      YV0VJJ 3
     +          JYV0X2=22,JYV0XM=23,JYV0C2=26,JYV0IC=27,JYV0P1=28,      YV0VJJ 4
     +          JYV0P2=31,JYV0EP=34,JYV0DM=55,JYV0S1=56,JYV0S2=57,      YV0VJJ 5
     +          LYV0VA=57)                                              YV0VJJ 6
C--------------------- end of QCDE ------------------------------------ QCDE  28
      INTEGER MAXNTK                                                    JNUCLE70
      PARAMETER (MAXNTK=10)                                             JNUCLE71
      INTEGER NTK,TK(MAXNTK)                                            JNUCLE72
      REAL JNP(4),DP(4)                                                 JNUCLE73
      REAL MOM_OBJ,ETRACK                                               JNUCLE74
      REAL JNDIST,JNINVM,JNMOM,JNMASS                                   JNUCLE75
      EXTERNAL JNDIST,JNINVM,JNMOM,JNMASS                               JNUCLE76
                                                                        JNUCLE77
      INTEGER ITRK,MAXTRK,ICH,ICHT,IQUL,IJUL,IALP,INAT,NTRK             JNUCLE78
      INTEGER NLOOP,NLOOPMAX,NSAY                                       JNUCLE79
                                                                        JNUCLE80
C common                                                                JNUCLE81
      PARAMETER (MAXTRK=100)                                            JNUCLE82
      PARAMETER (NLOOPMAX=MAXTRK*2)                                     JNUCLE83
      REAL TRACK(MAXTRK+1,4)                                            JNUCLE84
      COMMON/TRACK/TRACK                                                JNUCLE85
      INTEGER FLAG(MAXTRK)                                              JNUCLE86
                                                                        JNUCLE87
      LOGICAL STOP,FIRST                                                JNUCLE88
      INTEGER NFOUND                                                    JNUCLE89
      INTEGER IOBJ,I,J,ITRKMIN                                          JNUCLE90
      REAL DIST,DISTMIN,DMOM(4),ECUT,MASSCUT,MASS                       JNUCLE91
      REAL MPI2                                                         JNUCLE92
                                                                        JNUCLE93
      INTEGER   ENFLOW                                                  JNUCLE94
      INTEGER KCHT,NAMIND                                               JNUCLE95
      REAL QPMASS                                                       JNUCLE96
                                                                        JNUCLE97
      SAVE FIRST,ENFLOW                                                 JNUCLE98
                                                                        JNUCLE99
C-------------------- /QMACRO/ --- statement functions ---------------- QMACRO 2
C - # of words/row in bank with index KI                                BMACRO 2
      LCOLS(KI) = IW(KI+LMHCOL)                                         BMACRO 3
C - # of rows in bank with index KI                                     BMACRO 4
      LROWS(KI) = IW(KI+LMHROW)                                         BMACRO 5
C - index of next row in the bank with index KI                         BMACRO 6
      KNEXT(KI) = KI + LMHLEN + IW(KI+1)*IW(KI+2)                       BMACRO 7
C - index of row # KI1 in the bank with index KI                        BMACRO 8
      KROW(KI,KI1) = KI + LMHLEN + IW(KI+1)*(KI1-1)                     BMACRO 9
C - # of free words in the bank with index KI                           BMACRO10
      LFRWRD(KI) = KI + IW(KI) - KNEXT(KI)                              BMACRO11
C - # of free rows in the bank with index KI                            BMACRO12
      LFRROW(KI) = LFRWRD(KI) / LCOLS(KI)                               BMACRO13
C - KI2th integer element of the KI1th row of the bank with index KI    BMACRO14
      ITABL(KI,KI1,KI2) = IW(KI+LMHLEN+(KI1-1)*IW(KI+1)+KI2)            BMACRO15
C - KI2th real element of the KI1th row of the bank with index KI       BMACRO16
      RTABL(KI,KI1,KI2) = RW(KI+LMHLEN+(KI1-1)*IW(KI+1)+KI2)            BMACRO17
C-------------------- /QCFUNC/ --- statement functions for ALPHA banks  QMACRO 4
      KJQDET(KI)=IW(KOQVEC+KI*KCQVEC+JQVEQD)                            QMACRO 5
      QSQT(QF)=SIGN(SQRT(ABS(QF)),QF)                                   QMACRO 6
      QP(KI)=RW(KOQVEC+KI*KCQVEC+JQVEQP)                                QMACRO 7
      QX(KI)=RW(KOQVEC+KI*KCQVEC+JQVEQX)                                QMACRO 8
      QY(KI)=RW(KOQVEC+KI*KCQVEC+JQVEQY)                                QMACRO 9
      QZ(KI)=RW(KOQVEC+KI*KCQVEC+JQVEQZ)                                QMACRO10
      QE(KI)=RW(KOQVEC+KI*KCQVEC+JQVEQE)                                QMACRO11
      QM(KI)=RW(KOQVEC+KI*KCQVEC+JQVEQM)                                QMACRO12
      QCH(KI)=RW(KOQVEC+KI*KCQVEC+JQVECH)                               QMACRO13
      KCH(KI)=NINT (QCH(KI))                                            QMACRO14
      QCT(KI)=QZ(KI)/QP(KI)                                             QMACRO15
      QDB(KI)=RW(KOQVEC+KI*KCQVEC+JQVEDB)                               QMACRO16
      QZB(KI)=RW(KOQVEC+KI*KCQVEC+JQVEZB)                               QMACRO17
      QDBS2(KI)=RW(KOQVEC+KI*KCQVEC+JQVESD)                             QMACRO18
      QZBS2(KI)=RW(KOQVEC+KI*KCQVEC+JQVESZ)                             QMACRO19
      QBC2(KI)=RW(KOQVEC+KI*KCQVEC+JQVECB)                              QMACRO20
      QSIG(KI,KI1,KI2)=RW(KOQVEC+KI*KCQVEC+KMATIX(KI1,KI2)+JQVEEM)      QMACRO21
      XSIG(KI)=RW(KOQVEC+KI*KCQVEC+JQVEEM).GE.0.                        QMACRO22
      QSMAT(KI,KI1)=RW(KOQVEC+KI*KCQVEC+KI1+JQVEEM)                     QMACRO23
      QSIGX(KI)=QSQT(QSMAT(KI,0))                                       QMACRO24
      QSIGY(KI)=QSQT(QSMAT(KI,2))                                       QMACRO25
      QSIGZ(KI)=QSQT(QSMAT(KI,5))                                       QMACRO26
      QSIGEE(KI)=RW(KOQVEC+KI*KCQVEC+JQVEEM+9)                          QMACRO27
      QSIGE(KI)=QSQT(QSIGEE(KI))                                        QMACRO28
      QSIGPP(KI)=(QX(KI)**2*QSMAT(KI,0)+QY(KI)**2*QSMAT(KI,2)+          QMACRO29
     & QZ(KI)**2*QSMAT(KI,5)+2.*(QX(KI)*(QY(KI)*QSMAT(KI,1)+            QMACRO30
     & QZ(KI)*QSMAT(KI,3))+QY(KI)*QZ(KI)*QSMAT(KI,4)))/QP(KI)**2        QMACRO31
      QSIGP(KI)=QSQT(QSIGPP(KI))                                        QMACRO32
      QSIGMM(KI)=QM(KI)*(QE(KI)**2*QSMAT(KI,9)+QX(KI)**2*QSMAT(KI,0)+   QMACRO33
     & QY(KI)**2*QSMAT(KI,2)+QZ(KI)**2*QSMAT(KI,5)+2.*(QX(KI)*(QY(KI)*  QMACRO34
     & QSMAT(KI,1)+QZ(KI)*QSMAT(KI,3))+QY(KI)*QZ(KI)*QSMAT(KI,4)-       QMACRO35
     & QE(KI)*(QX(KI)*QSMAT(KI,6)+QY(KI)*QSMAT(KI,7)+                   QMACRO36
     & QZ(KI)*QSMAT(KI,8))))/AMAX1(QM(KI)**3,1.E-16)                    QMACRO37
      QSIGM(KI)=QSQT(QSIGMM(KI))                                        QMACRO38
      QMCHIF(KI)=RW(KOQVEC+KI*KCQVEC+JQVECF)                            QMACRO39
      QPH(KI)=ATG(QY(KI),QX(KI))                                        QMACRO40
      QPT(KI)=SQRT(QX(KI)**2+QY(KI)**2)                                 QMACRO41
      KTN(KI)=IW(KOQVEC+KI*KCQVEC+JQVETN)                               QMACRO42
      KMC(KI)=KCLARM(IW(KOQVEC+KI*KCQVEC+JQVECL))                       QMACRO43
      KBMASK(KI,KI1)=IW(KOQVEC+KI*KCQVEC+KI1+JQVEBM-1)                  QMACRO44
      KCALFL(KI)=IW(KJQDET(KI)+JQDECF)                                  QMACRO45
      KCHGD(KI,KI1)=IW(KOQLIN+KI1+IW(KJQDET(KI)+JQDEFL))                QMACRO46
      KCLASS(KI)=KCLACO(IW(KOQVEC+KI*KCQVEC+JQVECL))                    QMACRO47
      KDAU(KI,KI1)=IW(KOQLIN+KI1+IW(KOQVEC+KI*KCQVEC+JQVEDL))           QMACRO48
      KECAL(KI,KI1)=IW(KOQLIN+KI1+IW(KJQDET(KI)+JQDEEL))                QMACRO49
      KENDV(KI)=IW(KOQVEC+KI*KCQVEC+JQVEEV)                             QMACRO50
      KFOLLO(KI)=IW(KOQVEC+KI*KCQVEC+JQVENP)                            QMACRO51
C                                                                       QMACRO52
      KHCAL(KI,KI1)=IW(KOQLIN+KI1+IW(KJQDET(KI)+JQDEHL))                QMACRO53
      KLUNDS(KI)=IW(KOQVEC+KI*KCQVEC+JQVEKS)                            QMACRO54
      KNCHGD(KI)=IW(KJQDET(KI)+JQDENF)                                  QMACRO55
      KNECAL(KI)=IW(KJQDET(KI)+JQDENE)                                  QMACRO56
      KNHCAL(KI)=IW(KJQDET(KI)+JQDENH)                                  QMACRO57
      KNMOTH(KI)=IW(KOQVEC+KI*KCQVEC+JQVENO)                            QMACRO58
      KMOTH(KI,KI1)=IW(KOQLIN+KI1+IW(KOQVEC+KI*KCQVEC+JQVEOL))          QMACRO59
      KMTCH(KI,KI1)=IW(KOQMTL+KI1+IW(KOQVEC+KI*KCQVEC+JQVEML))          QMACRO60
      KNDAU(KI)=IW(KOQVEC+KI*KCQVEC+JQVEND)                             QMACRO61
      KNMTCH(KI)=IW(KOQVEC+KI*KCQVEC+JQVENM)                            QMACRO62
      KORIV(KI)=IW(KOQVEC+KI*KCQVEC+JQVEOV)                             QMACRO63
      KSAME(KI)=IW(KOQVEC+KI*KCQVEC+JQVESP)                             QMACRO64
      KSMTCH(KI,KI1)=IW(KOQMTS+KI1+IW(KOQVEC+KI*KCQVEC+JQVEML))         QMACRO65
      KSTABC(KI)=IW(KOQVEC+KI*KCQVEC+JQVESC)                            QMACRO66
      KTPCOD(KI)=IW(KOQVEC+KI*KCQVEC+JQVEPA)                            QMACRO67
      XLOCKN(KI,KI1)=IAND(KBMASK(KI,KI1),KLOCK0(KI1,KMC(KI))).NE.0      QMACRO68
      XLOCK(KI)=IW(KOQVEC+KI*KCQVEC+JQVELK).NE.0.OR.XLOCKN(KI,1).OR.    QMACRO69
     & XLOCKN(KI,2).OR.XLOCKN(KI,3).OR.XLOCKN(KI,4).OR.                 QMACRO70
     & XLOCKN(KI,5).OR.XLOCKN(KI,6).OR.XLOCKN(KI,7).OR.                 QMACRO71
     & XLOCKN(KI,8).OR.XLOCKN(KI,9).OR.XLOCKN(KI,10).OR.                QMACRO72
     & XLOCKN(KI,11).OR.XLOCKN(KI,12).OR.XLOCKN(KI,13).OR.              QMACRO73
     & XLOCKN(KI,14)                                                    QMACRO74
      XMC(KI)=KCLARM(IW(KOQVEC+KI*KCQVEC+JQVECL)).NE.1                  QMACRO75
      QRDFL(KI,KI1)=RW(KOQVEC+KI*KCQVEC+JQVEUS+KI1-1)                   QMACRO76
      KRDFL(KI,KI1)=IW(KOQVEC+KI*KCQVEC+JQVEUS+KI1-1)                   QMACRO77
      XCAL(KI)=IW(KJQDET(KI)+JQDECF).NE.0                               QMACRO78
      XECAL(KI)=IABS(IW(KJQDET(KI)+JQDECF)).EQ.1                        QMACRO79
      XHCAL(KI)=IABS(IW(KJQDET(KI)+JQDECF)).EQ.2                        QMACRO80
C                                                                       QMACRO81
      QVX(KI)=RW(KOQVRT+KI*KCQVRT+JQVRVX)                               QMACRO82
      QVY(KI)=RW(KOQVRT+KI*KCQVRT+JQVRVY)                               QMACRO83
      QVZ(KI)=RW(KOQVRT+KI*KCQVRT+JQVRVZ)                               QMACRO84
      KVN(KI)=IW(KOQVRT+KI*KCQVRT+JQVRVN)                               QMACRO85
      KVTYPE(KI)=IW(KOQVRT+KI*KCQVRT+JQVRTY)                            QMACRO86
      KVINCP(KI)=IW(KOQVRT+KI*KCQVRT+JQVRIP)                            QMACRO87
      KVNDAU(KI)=IW(KOQVRT+KI*KCQVRT+JQVRND)                            QMACRO88
      KVYV0V(KI)=IW(KOQVRT+KI*KCQVRT+JQVRAY)                            QMACRO89
      KVFVER(KI)=IW(KOQVRT+KI*KCQVRT+JQVRAF)                            QMACRO90
      KVDAU(KI,KI1)=IW(KOQLIN+KI1+IW(KOQVRT+KI*KCQVRT+JQVRDL))          QMACRO91
      QVEM(KI,KI1,KI2)=RW(KOQVRT+KI*KCQVRT+KMATIX(KI1,KI2)+JQVREM)      QMACRO92
      QVCHIF(KI)=RW(KOQVRT+KI*KCQVRT+JQVRCF)                            QMACRO93
      QVDIF2(KI1,KI2)=SQRT((QVX(KI1)-QVX(KI2))**2+(QVY(KI1)-            QMACRO94
     &QVY(KI2))**2)                                                     QMACRO95
      QVDIF3(KI1,KI2)=SQRT((QVX(KI1)-QVX(KI2))**2+(QVY(KI1)-            QMACRO96
     &QVY(KI2))**2+ (QVZ(KI1)-QVZ(KI2))**2)                             QMACRO97
C                                                                       QMACRO98
      QMSQ2(KI1,KI2)=(QE(KI1)+QE(KI2))**2-(QX(KI1)+QX(KI2))**2-         QMACRO99
     & (QY(KI1)+QY(KI2))**2-(QZ(KI1)+QZ(KI2))**2                        QMACR100
      QMSQ3(KI1,KI2,KI3)=(QE(KI1)+QE(KI2)+QE(KI3))**2-                  QMACR101
     & (QX(KI1)+QX(KI2)+QX(KI3))**2-(QY(KI1)+QY(KI2)+QY(KI3))**2-       QMACR102
     & (QZ(KI1)+QZ(KI2)+QZ(KI3))**2                                     QMACR103
      QMSQ4(KI1,KI2,KI3,KI4)=(QE(KI1)+QE(KI2)+QE(KI3)+QE(KI4))**2-      QMACR104
     & (QX(KI1)+QX(KI2)+QX(KI3)+QX(KI4))**2-(QY(KI1)+QY(KI2)+           QMACR105
     & QY(KI3)+QY(KI4))**2-(QZ(KI1)+QZ(KI2)+QZ(KI3)+QZ(KI4))**2         QMACR106
      QM2(KI1,KI2)=QSQT(QMSQ2(KI1,KI2))                                 QMACR107
      QM3(KI1,KI2,KI3)=QSQT(QMSQ3(KI1,KI2,KI3))                         QMACR108
      QM4(KI1,KI2,KI3,KI4)=QSQT(QMSQ4(KI1,KI2,KI3,KI4))                 QMACR109
      QDMSQ(KI1,KI2)=(QE(KI1)-QE(KI2))**2-(QX(KI1)-QX(KI2))**2-         QMACR110
     & (QY(KI1)-QY(KI2))**2-(QZ(KI1)-QZ(KI2))**2                        QMACR111
      QBETA(KI)=QP(KI)/QE(KI)                                           QMACR112
      QGAMMA(KI)=1./SQRT((1.-QBETA(KI))*(1.+QBETA(KI)))                 QMACR113
      QDOT3(KI1,KI2)=QX(KI1)*QX(KI2)+QY(KI1)*QY(KI2)+QZ(KI1)*QZ(KI2)    QMACR114
      QDOT4(KI1,KI2)=QE(KI1)*QE(KI2)-QDOT3(KI1,KI2)                     QMACR115
      QCOSA(KI1,KI2)=QDOT3(KI1,KI2)/(QP(KI1)*QP(KI2))                   QMACR116
      QPPAR(KI1,KI2)=QDOT3(KI1,KI2)/QP(KI2)                             QMACR117
      QPPER(KI1,KI2)=SQRT((QY(KI1)*QZ(KI2)-QZ(KI1)*QY(KI2))**2+         QMACR118
     & (QZ(KI1)*QX(KI2)-QX(KI1)*QZ(KI2))**2+                            QMACR119
     & (QX(KI1)*QY(KI2)-QY(KI1)*QX(KI2))**2)/QP(KI2)                    QMACR120
      XSAME(KI1,KI2)=IAND(KBMASK(KI1,1),KBMASK(KI2,1)).NE.0.OR.         QMACR121
     & IAND(KBMASK(KI1,2),KBMASK(KI2,2)).NE.0.OR.                       QMACR122
     & IAND(KBMASK(KI1,3),KBMASK(KI2,3)).NE.0.OR.                       QMACR123
     & IAND(KBMASK(KI1,4),KBMASK(KI2,4)).NE.0.OR.                       QMACR124
     & IAND(KBMASK(KI1,5),KBMASK(KI2,5)).NE.0.OR.                       QMACR125
     & IAND(KBMASK(KI1,6),KBMASK(KI2,6)).NE.0.OR.                       QMACR126
     & IAND(KBMASK(KI1,7),KBMASK(KI2,7)).NE.0.OR.                       QMACR127
     & IAND(KBMASK(KI1,8),KBMASK(KI2,8)).NE.0.OR.                       QMACR128
     & IAND(KBMASK(KI1,9),KBMASK(KI2,9)).NE.0.OR.                       QMACR129
     & IAND(KBMASK(KI1,10),KBMASK(KI2,10)).NE.0                         QMACR130
C                                                                       QMACR131
      QCMASS(KI)=RW(KOQPAR+KI*KCQPAR+JQPAMA)                            QMACR132
      QCCHAR(KI)=RW(KOQPAR+KI*KCQPAR+JQPACH)                            QMACR133
      QCLIFE(KI)=RW(KOQPAR+KI*KCQPAR+JQPALT)                            QMACR134
      QCWIDT(KI)=RW(KOQPAR+KI*KCQPAR+JQPAWI)                            QMACR135
      XCEQOR(KI,KI1)=KTPCOD(KI).EQ.KI1.OR.                              QMACR136
     & KTPCOD(KI).EQ.IW(KOQPAR+KI1*KCQPAR+JQPAAN)                       QMACR137
      XCEQU(KI,KI1)=KTPCOD(KI).EQ.KI1                                   QMACR138
C    QCFDET                                                             QMACR139
      XFRF(KI)=IW(KJQDET(KI)+JQDEAF).NE.KQZER                           QMACR140
      QFRFIR(KI)=RW(IW(KJQDET(KI)+JQDEAF)+JFRFIR)                       QMACR141
      QFRFTL(KI)=RW(IW(KJQDET(KI)+JQDEAF)+JFRFTL)                       QMACR142
      QFRFP0(KI)=RW(IW(KJQDET(KI)+JQDEAF)+JFRFP0)                       QMACR143
      QFRFD0(KI)=RW(IW(KJQDET(KI)+JQDEAF)+JFRFD0)                       QMACR144
      QFRFZ0(KI)=RW(IW(KJQDET(KI)+JQDEAF)+JFRFZ0)                       QMACR145
      QFRFAL(KI)=RW(IW(KJQDET(KI)+JQDEAF)+JFRFAL)                       QMACR146
      QFRFEM(KI,KI1,KI2)=RW(IW(KJQDET(KI)+JQDEAF)+                      QMACR147
     & KMATIX(KI1,KI2)+JFRFEM)                                          QMACR148
      QFRFC2(KI)=RW(IW(KJQDET(KI)+JQDEAF)+JFRFC2)                       QMACR149
      KFRFDF(KI)=IW(IW(KJQDET(KI)+JQDEAF)+JFRFDF)                       QMACR150
      KFRFNO(KI)=IW(IW(KJQDET(KI)+JQDEAF)+JFRFNO)                       QMACR151
C                                                                       QMACR152
      KFRTNV(KI)=IW(IW(KJQDET(KI)+JQDEAL)+JFRTNV)                       QMACR153
      KFRTNI(KI)=IW(IW(KJQDET(KI)+JQDEAL)+JFRTNI)                       QMACR154
      KFRTNE(KI)=IW(IW(KJQDET(KI)+JQDEAL)+JFRTNE)                       QMACR155
      KFRTNT(KI)=IW(IW(KJQDET(KI)+JQDEAL)+JFRTNT)                       QMACR156
      KFRTNR(KI)=IW(IW(KJQDET(KI)+JQDEAL)+JFRTNR)                       QMACR157
C                                                                       QMACR158
      KFRIBP(KI)=IW(IW(KJQDET(KI)+JQDEFI)+JFRIBP)                       QMACR159
      KFRIDZ(KI)=IW(IW(KJQDET(KI)+JQDEFI)+JFRIDZ)                       QMACR160
      KFRIBC(KI)=IW(IW(KJQDET(KI)+JQDEFI)+JFRIBC)                       QMACR161
      KFRIDC(KI)=IW(IW(KJQDET(KI)+JQDEFI)+JFRIDC)                       QMACR162
      QFRIPE(KI)=RW(IW(KJQDET(KI)+JQDEFI)+JFRIPE)                       QMACR163
      QFRIPM(KI)=RW(IW(KJQDET(KI)+JQDEFI)+JFRIPM)                       QMACR164
      QFRIPI(KI)=RW(IW(KJQDET(KI)+JQDEFI)+JFRIPI)                       QMACR165
      QFRIPK(KI)=RW(IW(KJQDET(KI)+JQDEFI)+JFRIPK)                       QMACR166
      QFRIPP(KI)=RW(IW(KJQDET(KI)+JQDEFI)+JFRIPP)                       QMACR167
      QFRINK(KI)=RW(IW(KJQDET(KI)+JQDEFI)+JFRINK)                       QMACR168
      KFRIQF(KI)=IW(IW(KJQDET(KI)+JQDEFI)+JFRIQF)                       QMACR169
      XFRIQF(KI)=KFRIQF(KI).EQ.1.OR.KFRIQF(KI).EQ.3                     QMACR170
C                                                                       QMACR171
      KNTEX(KI)=IW(KJQDET(KI)+JQDENT)                                   QMACR172
      XTEX(KI)=IW(KJQDET(KI)+JQDENT).NE.0                               QMACR173
      KTEXSI(KI,KI1)=IW(IW(KJQDET(KI)+KI1+JQDENT)+JTEXSI)               QMACR174
      QTEXTM(KI,KI1)=RW(IW(KJQDET(KI)+KI1+JQDENT)+JTEXTM)               QMACR175
      QTEXTL(KI,KI1)=RW(IW(KJQDET(KI)+KI1+JQDENT)+JTEXTL)               QMACR176
      KTEXNS(KI,KI1)=IW(IW(KJQDET(KI)+KI1+JQDENT)+JTEXNS)               QMACR177
      QTEXAD(KI,KI1)=RW(IW(KJQDET(KI)+KI1+JQDENT)+JTEXAD)               QMACR178
C                                                                       QMACR179
      XEID(KI)=IW(KJQDET(KI)+JQDEAE).NE.KQZER                           QMACR180
      KEIDIF(KI)=IW(IW(KJQDET(KI)+JQDEAE)+JEIDIF)                       QMACR181
      QEIDRI(KI,KI1)=RW(IW(KJQDET(KI)+JQDEAE)+KI1+JEIDR1-1)             QMACR182
      QEIDEC(KI)=RW(IW(KJQDET(KI)+JQDEAE)+JEIDEC)                       QMACR183
      KEIDIP(KI)=IW(IW(KJQDET(KI)+JQDEAE)+JEIDIP)                       QMACR184
      QEIDEI(KI,KI1)=RW(IW(KJQDET(KI)+JQDEAE)+KI1+JEIDE1-1)             QMACR185
C                                                                       QMACR186
      XHMA(KI)=IW(KJQDET(KI)+JQDEAH).NE.KQZER                           QMACR187
      KHMANF(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMANF)                       QMACR188
      KHMANE(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMANE)                       QMACR189
      KHMANL(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMANL)                       QMACR190
      KHMAMH(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMAMH)                       QMACR191
      KHMAIG(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMAIG)                       QMACR192
      QHMAED(KI)=RW(IW(KJQDET(KI)+JQDEAH)+JHMAED)                       QMACR193
      QHMACS(KI)=RW(IW(KJQDET(KI)+JQDEAH)+JHMACS)                       QMACR194
      KHMAND(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMAND)                       QMACR195
      KHMAIE(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMAIE)                       QMACR196
      KHMAIT(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMAIT)                       QMACR197
      KHMAIF(KI)=IW(IW(KJQDET(KI)+JQDEAH)+JHMAIF)                       QMACR198
C                                                                       QMACR199
      XMCA(KI)=IW(KJQDET(KI)+JQDEAM).NE.KQZER                           QMACR200
      KMCANH(KI,KI1)=IW(IW(KJQDET(KI)+JQDEAM)+KI1+JMCANH-1)             QMACR201
      QMCADH(KI,KI1)=RW(IW(KJQDET(KI)+JQDEAM)+KI1+JMCADH-1)             QMACR202
      QMCADC(KI,KI1)=RW(IW(KJQDET(KI)+JQDEAM)+KI1+JMCADC-1)             QMACR203
      QMCAAM(KI)=RW(IW(KJQDET(KI)+JQDEAM)+JMCAAM)                       QMACR204
      QMCAAC(KI)=RW(IW(KJQDET(KI)+JQDEAM)+JMCAAC)                       QMACR205
C                                                                       QMACR206
      XMUI(KI)=IW(KJQDET(KI)+JQDEMU).NE.KQZER                           QMACR207
      KMUIIF(KI)=IW(IW(KJQDET(KI)+JQDEMU)+JMUIIF)                       QMACR208
      QMUISR(KI)=RW(IW(KJQDET(KI)+JQDEMU)+JMUISR)                       QMACR209
      QMUIDM(KI)=RW(IW(KJQDET(KI)+JQDEMU)+JMUIDM)                       QMACR210
      KMUIST(KI)=IW(IW(KJQDET(KI)+JQDEMU)+JMUIST)                       QMACR211
      KMUITN(KI)=IW(IW(KJQDET(KI)+JQDEMU)+JMUITN)                       QMACR212
C                                                                       QMACR213
      XPEC(KI)=IW(KJQDET(KI)+JQDEEC).NE.KQZER                           QMACR214
      QPECER(KI)=RW(IW(KJQDET(KI)+JQDEEC)+JPECER)                       QMACR215
      QPECE1(KI)=RW(IW(KJQDET(KI)+JQDEEC)+JPECE1)                       QMACR216
      QPECE2(KI)=RW(IW(KJQDET(KI)+JQDEEC)+JPECE2)                       QMACR217
      QPECTH(KI)=RW(IW(KJQDET(KI)+JQDEEC)+JPECTH)                       QMACR218
      QPECPH(KI)=RW(IW(KJQDET(KI)+JQDEEC)+JPECPH)                       QMACR219
      QPECEC(KI)=RW(IW(KJQDET(KI)+JQDEEC)+JPECEC)                       QMACR220
      KPECKD(KI)=IW(IW(KJQDET(KI)+JQDEEC)+JPECKD)                       QMACR221
      KPECCC(KI)=IW(IW(KJQDET(KI)+JQDEEC)+JPECCC)                       QMACR222
      KPECRB(KI)=IW(IW(KJQDET(KI)+JQDEEC)+JPECRB)                       QMACR223
      KPECPC(KI)=IW(IW(KJQDET(KI)+JQDEEC)+JPECPC)                       QMACR224
C                                                                       QMACR225
      XPEP(KI)=IW(KJQDET(KI)+JQDEET).NE.KQZER                           QMACR226
      QPEPT1(KI)=RW(IW(KJQDET(KI)+JQDEET)+JPEPT1)                       QMACR227
      QPEPP1(KI)=RW(IW(KJQDET(KI)+JQDEET)+JPEPP1)                       QMACR228
      QPEPT3(KI)=RW(IW(KJQDET(KI)+JQDEET)+JPEPT3)                       QMACR229
      QPEPP3(KI)=RW(IW(KJQDET(KI)+JQDEET)+JPEPP3)                       QMACR230
C                                                                       QMACR231
      XPHC(KI)=IW(KJQDET(KI)+JQDEHC).NE.KQZER                           QMACR232
      QPHCER(KI)=RW(IW(KJQDET(KI)+JQDEHC)+JPHCER)                       QMACR233
      QPHCTH(KI)=RW(IW(KJQDET(KI)+JQDEHC)+JPHCTH)                       QMACR234
      QPHCPH(KI)=RW(IW(KJQDET(KI)+JQDEHC)+JPHCPH)                       QMACR235
      QPHCEC(KI)=RW(IW(KJQDET(KI)+JQDEHC)+JPHCEC)                       QMACR236
      KPHCKD(KI)=IW(IW(KJQDET(KI)+JQDEHC)+JPHCKD)                       QMACR237
      KPHCCC(KI)=IW(IW(KJQDET(KI)+JQDEHC)+JPHCCC)                       QMACR238
      KPHCRB(KI)=IW(IW(KJQDET(KI)+JQDEHC)+JPHCRB)                       QMACR239
      KPHCPC(KI)=IW(IW(KJQDET(KI)+JQDEHC)+JPHCPC)                       QMACR240
C                                                                       QMACR241
      XEFO(KI)=IW(KJQDET(KI)+JQDEEF).NE.KQZER                           QMACR242
      QEFOWE(KI)=RW(IW(KJQDET(KI)+JQDEEF)+JEFOWE)                       QMACR243
      KEFOTY(KI)=IW(IW(KJQDET(KI)+JQDEEF)+JEFOTY)                       QMACR244
      KEFOLE(KI)=IW(IW(KJQDET(KI)+JQDEEF)+JEFOLE)                       QMACR245
      KEFOLT(KI)=IW(IW(KJQDET(KI)+JQDEEF)+JEFOLT)                       QMACR246
      KEFOLH(KI)=IW(IW(KJQDET(KI)+JQDEEF)+JEFOLH)                       QMACR247
      KEFOLC(KI)=IW(IW(KJQDET(KI)+JQDEEF)+JEFOLC)                       QMACR248
      KEFOLJ(KI)=IW(IW(KJQDET(KI)+JQDEEF)+JEFOLJ)                       QMACR249
C                                                                       QMACR250
      XPCQ(KI)=IW(KJQDET(KI)+JQDEPC).NE.KQZER                           QMACR251
      KPCQNA(KI)=IW(IW(KJQDET(KI)+JQDEPC)+JPCQNA)                       QMACR252
C                                                                       QMACR253
      XEGP(KI)=IW(KJQDET(KI)+JQDEEG).NE.KQZER                           QMACR254
      QEGPR1(KI)=RW(IW(KJQDET(KI)+JQDEEG)+JEGPR1)                       QMACR255
      QEGPR2(KI)=RW(IW(KJQDET(KI)+JQDEEG)+JEGPR2)                       QMACR256
      QEGPF4(KI)=RW(IW(KJQDET(KI)+JQDEEG)+JEGPF4)                       QMACR257
      QEGPDM(KI)=RW(IW(KJQDET(KI)+JQDEEG)+JEGPDM)                       QMACR258
      KEGPST(KI)=IW(IW(KJQDET(KI)+JQDEEG)+JEGPST)                       QMACR259
      KEGPQU(KI)=IW(IW(KJQDET(KI)+JQDEEG)+JEGPQU)                       QMACR260
      KEGPPE(KI)=IW(IW(KJQDET(KI)+JQDEEG)+JEGPPE)                       QMACR261
C                                                                       QMACR262
      XPGP(KI)=IW(KJQDET(KI)+JQDEPG).NE.KQZER.AND.IW(NAPGPC).GT.0       JB941120
      QPGPR1(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPR1)                       QMACR264
      QPGPR2(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPR2)                       QMACR265
      QPGPF4(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPF4)                       QMACR266
      QPGPDM(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPDM)                       QMACR267
      QPGPST(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPST)                       QMACR268
      QPGPQ1(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPQ1)                       QMACR269
      QPGPQ2(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPQ2)                       QMACR270
      QPGPM1(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPM1)                       QMACR271
      QPGPM2(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPM2)                       QMACR272
      QPGPMA(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPMA)                       QMACR273
      QPGPER(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPER)                       QMACR274
      QPGPTR(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPTR)                       QMACR275
      QPGPPR(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGPPR)                       QMACR276
      KPGPQU(KI)=IW(IW(KJQDET(KI)+JQDEPG)+JPGPQU)                       QMACR277
      KPGPPE(KI)=IW(IW(KJQDET(KI)+JQDEPG)+JPGPPE)                       QMACR278
      XPGAC(KI)=IW(KJQDET(KI)+JQDEPG).NE.KQZER.AND.IW(NAPGAC).GT.0      JB941121
      KPGAST(KI)=IW(IW(KJQDET(KI)+JQDEPG)+JPGAST)                       JB941122
      QPGAEF(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGAEF)                       JB941123
      QPGAGC(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGAGC)                       JB941124
      QPGAZS(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGAZS)                       JB941125
      QPGAPL(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGAPL)                       JB941126
      QPGAPH(KI)=RW(IW(KJQDET(KI)+JQDEPG)+JPGAPH)                       JB941127
      KPGAPN(KI)=IW(IW(KJQDET(KI)+JQDEPG)+JPGAPN)                       JB941128
      KPGAFA(KI)=IW(IW(KJQDET(KI)+JQDEPG)+JPGAFA)                       JB941129
      KPGAPE(KI)=IW(IW(KJQDET(KI)+JQDEPG)+JPGAPE)                       JB941130
C                                                                       JB941131
C                                                                       QMACR279
      XYV0(KI)=KVYV0V(KENDV(KI)).NE.0                                   QMACR280
      KYV0K1(KI)=IW(KVYV0V(KENDV(KI))+JYV0K1)                           QMACR281
      KYV0K2(KI)=IW(KVYV0V(KENDV(KI))+JYV0K2)                           QMACR282
      QYV0VX(KI)=RW(KVYV0V(KENDV(KI))+JYV0VX)                           QMACR283
      QYV0VY(KI)=RW(KVYV0V(KENDV(KI))+JYV0VY)                           QMACR284
      QYV0VZ(KI)=RW(KVYV0V(KENDV(KI))+JYV0VZ)                           QMACR285
      QYV0X1(KI)=RW(KVYV0V(KENDV(KI))+JYV0X1)                           QMACR286
      QYV0X2(KI)=RW(KVYV0V(KENDV(KI))+JYV0X2)                           QMACR287
      QYV0C2(KI)=RW(KVYV0V(KENDV(KI))+JYV0C2)                           QMACR288
      KYV0IC(KI)=IW(KVYV0V(KENDV(KI))+JYV0IC)                           QMACR289
      QYV0DM(KI)=RW(KVYV0V(KENDV(KI))+JYV0DM)                           QMACR290
      QYV0S1(KI)=RW(KVYV0V(KENDV(KI))+JYV0S1)                           QMACR291
      QYV0S2(KI)=RW(KVYV0V(KENDV(KI))+JYV0S2)                           QMACR292
C                                                                       JB941132
      XLEPTG(KI)=IW(KJQDET(KI)+JQDEPD).NE.KQZER                         JB941133
      KLEPPA(KI)=IW(IW(KJQDET(KI)+JQDEPD)+JPDLPA)                       JB941134
      KLEPJT(KI)=IW(IW(KJQDET(KI)+JQDEPD)+JPDLJT)+KLFJET-1              JB941135
      QLEPPI(KI)=RW(IW(KJQDET(KI)+JQDEPD)+JPDLPI)                       JB941136
      QLEPPE(KI)=RW(IW(KJQDET(KI)+JQDEPD)+JPDLPE)                       JB941137
      KLEPVP(KI)=IW(IW(KJQDET(KI)+JQDEPD)+JPDLVP)                       JB941138
C                                                                       JB941139
      XLEPTH(KI)=IW(KJQDET(KI)+JQDEPM).NE.KQZER                         JB941140
      KLEPFL(KI)=IW(IW(KJQDET(KI)+JQDEPM)+JPMLFL)                       JB941141
      KLEPPO(KI)=IW(IW(KJQDET(KI)+JQDEPM)+JPMLPO)                       JB941142
      KLEPCH(KI)=IW(IW(KJQDET(KI)+JQDEPM)+JPMLCH)                       JB941143
      KLEPSP(KI)=IW(IW(KJQDET(KI)+JQDEPM)+JPMLSP)                       JB941144
      KLEPLE(KI)=IW(IW(KJQDET(KI)+JQDEPM)+JPMLLE)                       JB941145
      KLEPME(KI)=IW(IW(KJQDET(KI)+JQDEPM)+JPMLME)                       JB941146
      KLEPKT(KI)=IW(IW(KJQDET(KI)+JQDEPM)+JPMLKT)                       JB941147
C---------------------  end of QMACRO --------------------------------- QMACR293
                                                                        JNUCL101
Cthese essential parameters are roughly tuned for Bs-->Ds X             JNUCL102
      DATA MASSCUT/7./                                                  JNUCL103
      DATA ECUT/1./                                                     JNUCL104
                                                                        JNUCL105
C for Psi the tuning is the following                                   JNUCL106
C      DATA MASSCUT/6./                                                 JNUCL107
C      DATA ECUT/0.5/                                                   JNUCL108
                                                                        JNUCL109
      DATA NSAY/0/                                                      JNUCL110
      DATA FIRST/.TRUE./                                                JNUCL111
                                                                        JNUCL112
                                                                        JNUCL113
C find out if PCPA or Janor ENFLW to be used                            JNUCL114
      IF (FIRST) THEN                                                   JNUCL115
                  FIRST=.FALSE.                                         JNUCL116
                  MPI2=QPMASS('Pi+')**2                                 JNUCL117
                                                                        JNUCL118
                  IF (IW(NAMIND('EFLJ')).NE.0                           JNUCL119
     &            .OR.IW(NAMIND('EFLW')).NE.0) THEN                     JNUCL120
            WRITE(*,*)'JNUCLE : EFLOW WANTED'                           JNUCL121
            ENFLOW=1                                                    JNUCL122
                                               ELSE                     JNUCL123
            WRITE(*,*)'JNUCLE : PCPA WANTED'                            JNUCL124
            ENFLOW=0                                                    JNUCL125
                                               ENDIF                    JNUCL126
                                                                        JNUCL127
            IF (ENFLOW.EQ.1.AND.KNEFT.EQ.0) THEN                        JNUCL128
               WRITE(*,*)'WARNING JNUCLE : EFLOW NOT AVAILABLE'         JNUCL129
               ENFLOW=0                                                 JNUCL130
                            ENDIF                                       JNUCL131
                                                                        JNUCL132
            IF (ENFLOW.EQ.0.AND.KNNET.EQ.0) THEN                        JNUCL133
               WRITE(*,*)'WARNING JNUCLE : PCPA NOT AVAILABLE'          JNUCL134
               ENFLOW=1                                                 JNUCL135
                            ENDIF                                       JNUCL136
                                                                        JNUCL137
            IF (ENFLOW.EQ.1.AND.KNEFT.EQ.0) THEN                        JNUCL138
               WRITE(*,*)'WARNING JNUCLE : ONLY',                       JNUCL139
     &                             ' CHARGED TRACKS WILL BE USED'       JNUCL140
               ENFLOW=0                                                 JNUCL141
                            ENDIF                                       JNUCL142
                                                                        JNUCL143
                                                                        JNUCL144
               ENDIF   !FIRST                                           JNUCL145
                                                                        JNUCL146
      IF (NTK.GT.MAXNTK) THEN                                           JNUCL147
         CALL QWMESE('WARNING JNUCLE:too many charged track from D')    JNUCL148
         GOTO 999                                                       JNUCL149
                         ENDIF                                          JNUCL150
                                                                        JNUCL151
cinitialize jet momentum to default values                              JNUCL152
         DO I=1,4                                                       JNUCL153
           JNP(I)=0.                                                    JNUCL154
         ENDDO                                                          JNUCL155
                                                                        JNUCL156
Calculate the D 4-momentum                                              JNUCL157
      IF (DP(4).LE.0.) THEN                                             JNUCL158
         DO I=1,4                                                       JNUCL159
           DP(I)=0.                                                     JNUCL160
         ENDDO                                                          JNUCL161
         DO I=1,NTK                                                     JNUCL162
           DP(1)=DP(1)+QX(TK(I))                                        JNUCL163
           DP(2)=DP(2)+QY(TK(I))                                        JNUCL164
           DP(3)=DP(3)+QZ(TK(I))                                        JNUCL165
           DP(4)=DP(4)+QE(TK(I))                                        JNUCL166
         ENDDO                                                          JNUCL167
                       ENDIF                                            JNUCL168
                                                                        JNUCL169
                                                                        JNUCL170
C build an array of usable tracks with the proper mass,                 JNUCL171
Ci.e all charged track good for energy flow                             JNUCL172
Cexcept the one from the D + all neutrals                               JNUCL173
      ITRK=0                                                            JNUCL174
      NFOUND=0                                                          JNUCL175
                                                                        JNUCL176
                                                                        JNUCL177
cif  PCPA energy flow wanted                                            JNUCL178
      IF (ENFLOW.EQ.0) THEN                                             JNUCL179
        DO 111 ICH=KFCHT,KLCHT                                          JNUCL180
C check that it is a good track                                         JNUCL181
          IQUL=KFRIQF(ICH)                                              JNUCL182
          IF (IQUL.NE.1.AND.IQUL.NE.3) GOTO 111                         JNUCL183
C check it is not from the D                                            JNUCL184
          DO J=1,NTK                                                    JNUCL185
             IF (KCHT(TK(J)).EQ.KCHT(ICH)) THEN                         JNUCL186
                NFOUND=NFOUND+1                                         JNUCL187
                GOTO 111                                                JNUCL188
                             ENDIF                                      JNUCL189
          ENDDO                                                         JNUCL190
          ETRACK=SQRT(QP(ICH)**2+MPI2)                                  JNUCL191
          IF (ETRACK.LT.ECUT) GOTO 111                                  JNUCL192
                                                                        JNUCL193
Cit is a good track to save with mass pion                              JNUCL194
          IF (ITRK.LT.MAXTRK) THEN                                      JNUCL195
                              ITRK=ITRK+1                               JNUCL196
                              TRACK(ITRK,1)=QX(ich)                     JNUCL197
                              TRACK(ITRK,2)=QY(ich)                     JNUCL198
                              TRACK(ITRK,3)=QZ(ich)                     JNUCL199
                              TRACK(ITRK,4)=ETRACK                      JNUCL200
                            ELSE                                        JNUCL201
      CALL QWMESE('WARNING:JNUCLE MAX # OF TRACKS REACHED')             JNUCL202
      GOTO 999                                                          JNUCL203
                            ENDIF                                       JNUCL204
 111    CONTINUE                                                        JNUCL205
                                                                        JNUCL206
                                                                        JNUCL207
                                                                        JNUCL208
                                                                        JNUCL209
                                                                        JNUCL210
C fill all neutrals                                                     JNUCL211
        DO 112 ICH=KFNET,KLNET                                          JNUCL212
C check it is not from the D                                            JNUCL213
          DO J=1,NTK                                                    JNUCL214
             IF (TK(J).EQ.ICH) THEN                                     JNUCL215
                NFOUND=NFOUND+1                                         JNUCL216
                GOTO 112                                                JNUCL217
                               ENDIF                                    JNUCL218
          ENDDO                                                         JNUCL219
                                                                        JNUCL220
          INAT=KPCQNA(ICH)                                              JNUCL221
C keep Ecal object  with mass 0                                         JNUCL222
          IF (INAT.GT.0.AND.INAT.LE.14)   THEN                          JNUCL223
                                                                        JNUCL224
            ETRACK=QP(ICH)                                              JNUCL225
            IF (ETRACK.LT.ECUT) GOTO 112                                JNUCL226
            IF (ITRK.LT.MAXTRK) THEN                                    JNUCL227
                              ITRK=ITRK+1                               JNUCL228
                              TRACK(ITRK,1)=QX(ICH)                     JNUCL229
                              TRACK(ITRK,2)=QY(ICH)                     JNUCL230
                              TRACK(ITRK,3)=QZ(ICH)                     JNUCL231
                              TRACK(ITRK,4)=ETRACK                      JNUCL232
                                ELSE                                    JNUCL233
          CALL QWMESE('WARNING:JNUCLE MAX # OF TRACKS REACHED')         JNUCL234
          GOTO 999                                                      JNUCL235
                               ENDIF                                    JNUCL236
                                          ELSE                          JNUCL237
            ETRACK=SQRT(QP(ICH)**2+MPI2)                                JNUCL238
            IF (ETRACK.LT.ECUT) GOTO 112                                JNUCL239
                                                                        JNUCL240
C keep the rest with mass pion                                          JNUCL241
            IF (ITRK.LT.MAXTRK) THEN                                    JNUCL242
                              ITRK=ITRK+1                               JNUCL243
                              TRACK(ITRK,1)=QX(ICH)                     JNUCL244
                              TRACK(ITRK,2)=QY(ICH)                     JNUCL245
                              TRACK(ITRK,3)=QZ(ICH)                     JNUCL246
                              TRACK(ITRK,4)=ETRACK                      JNUCL247
                                ELSE                                    JNUCL248
          CALL QWMESE('WARNING:JNUCLE MAX # OF TRACKS REACHED')         JNUCL249
          GOTO 999                                                      JNUCL250
                                ENDIF                                   JNUCL251
                                          ENDIF                         JNUCL252
 112   CONTINUE                                                         JNUCL253
                                                                        JNUCL254
C if Janot energy flow wanted                                           JNUCL255
            ELSE                                                        JNUCL256
        DO 113 ICH=KFEFT,KLEFT                                          JNUCL257
Cif a charged track check it is not from the D                          JNUCL258
          INAT=KEFOTY(ICH)                                              JNUCL259
          IF (INAT.LT.4) THEN                                           JNUCL260
            ICHT=50+KEFOLT(ICH)                                         JNUCL261
            DO J=1,NTK                                                  JNUCL262
              IF (KCHT(TK(J)).EQ.ICHT) THEN                             JNUCL263
                NFOUND=NFOUND+1                                         JNUCL264
                GOTO 113                                                JNUCL265
                               ENDIF                                    JNUCL266
            ENDDO                                                       JNUCL267
                         ELSE                                           JNUCL268
            DO J=1,NTK                                                  JNUCL269
              IF (TK(J).EQ.ICH) THEN                                    JNUCL270
                NFOUND=NFOUND+1                                         JNUCL271
                GOTO 113                                                JNUCL272
                               ENDIF                                    JNUCL273
            ENDDO                                                       JNUCL274
                                                                        JNUCL275
                                 ENDIF                                  JNUCL276
C keep Ecal object  with mass 0                                         JNUCL277
          IF (INAT.EQ.4)   THEN                                         JNUCL278
            ETRACK=QP(ICH)                                              JNUCL279
            IF (ETRACK.LT.ECUT) GOTO 113                                JNUCL280
            IF (ITRK.LT.MAXTRK) THEN                                    JNUCL281
                              ITRK=ITRK+1                               JNUCL282
                              TRACK(ITRK,1)=QX(ICH)                     JNUCL283
                              TRACK(ITRK,2)=QY(ICH)                     JNUCL284
                              TRACK(ITRK,3)=QZ(ICH)                     JNUCL285
                              TRACK(ITRK,4)=QP(ICH)                     JNUCL286
                                ELSE                                    JNUCL287
          CALL QWMESE('WARNING:JNUCLE MAX # OF TRACKS REACHED')         JNUCL288
          GOTO 999                                                      JNUCL289
                                ENDIF                                   JNUCL290
                                          ELSE                          JNUCL291
C keep the rest with mass pion                                          JNUCL292
            ETRACK=SQRT(QP(ICH)**2+MPI2)                                JNUCL293
            IF (ETRACK.LT.ECUT) GOTO 113                                JNUCL294
            IF (ITRK.LT.MAXTRK) THEN                                    JNUCL295
                              ITRK=ITRK+1                               JNUCL296
                              TRACK(ITRK,1)=QX(ICH)                     JNUCL297
                              TRACK(ITRK,2)=QY(ICH)                     JNUCL298
                              TRACK(ITRK,3)=QZ(ICH)                     JNUCL299
                              TRACK(ITRK,4)=ETRACK                      JNUCL300
                                ELSE                                    JNUCL301
          CALL QWMESE('WARNING:JNUCLE MAX # OF TRACKS REACHED')         JNUCL302
          GOTO 999                                                      JNUCL303
                                ENDIF                                   JNUCL304
                                          ENDIF                         JNUCL305
 113   CONTINUE                                                         JNUCL306
                                                                        JNUCL307
            ENDIF                                                       JNUCL308
                                                                        JNUCL309
CArray TRACK has been filled                                            JNUCL310
                                                                        JNUCL311
                                                                        JNUCL312
Check that all the tracks from the D have been found                    JNUCL313
      IF (NTK.NE.NFOUND) THEN                                           JNUCL314
         NSAY=NSAY+1                                                    JNUCL315
         IF (NSAY.LE.10)                                                JNUCL316
     &    CALL QWMESE('WARNING JNUCLE all tracks from D not found')     JNUCL317
          GOTO 999                                                      JNUCL318
                         ENDIF                                          JNUCL319
                                                                        JNUCL320
                                                                        JNUCL321
                                                                        JNUCL322
      NTRK=MIN(ITRK,MAXTRK)                                             JNUCL323
                                                                        JNUCL324
Cinitialize object to the D                                             JNUCL325
      IOBJ=MAXTRK+1                                                     JNUCL326
      DISTMIN=0.                                                        JNUCL327
                                                                        JNUCL328
      DO I=1,4                                                          JNUCL329
        TRACK(IOBJ,I)=DP(I)                                             JNUCL330
      ENDDO                                                             JNUCL331
                                                                        JNUCL332
                                                                        JNUCL333
                                                                        JNUCL334
                                                                        JNUCL335
Cinitialize flag array                                                  JNUCL336
C (FLAG(ITRK)=0 -->  unusable because already used                      JNUCL337
C (FLAG(ITRK)=1 -->  usable                                             JNUCL338
        DO ITRK=1,NTRK                                                  JNUCL339
          FLAG(ITRK)=1                                                  JNUCL340
        ENDDO                                                           JNUCL341
                                                                        JNUCL342
C initialize mass of the object, check it's not already above the cut   JNUCL343
                                                                        JNUCL344
        MASS=JNMASS(IOBJ)                                               JNUCL345
                                                                        JNUCL346
        STOP=.FALSE.                                                    JNUCL347
        IF (MASS.GT.MASSCUT) STOP=.TRUE.                                JNUCL348
        NLOOP=0                                                         JNUCL349
        DO WHILE (.NOT.STOP.AND.NLOOP.LT.NLOOPMAX)                      JNUCL350
        NLOOP=NLOOP+1                                                   JNUCL351
                                                                        JNUCL352
C loop on all tracks save the "closest" to the current object           JNUCL353
        DISTMIN=1.E30                                                   JNUCL354
        ITRKMIN=0                                                       JNUCL355
        DO ITRK=1,NTRK                                                  JNUCL356
                                                                        JNUCL357
C calculate distance if not flagged out                                 JNUCL358
         IF (FLAG(ITRK).EQ.1) THEN                                      JNUCL359
            DIST=JNDIST(IOBJ,ITRK)                                      JNUCL360
            IF (DIST.LT.DISTMIN) THEN                                   JNUCL361
                                  DISTMIN=DIST                          JNUCL362
                                  ITRKMIN=ITRK                          JNUCL363
                                 ENDIF                                  JNUCL364
                              ENDIF !IF FLAG                            JNUCL365
        ENDDO !ITRK=1,NTRK                                              JNUCL366
c case there are no particles left                                      JNUCL367
        IF (ITRKMIN.EQ.0) THEN                                          JNUCL368
           STOP=.TRUE.                                                  JNUCL369
                       ENDIF                                            JNUCL370
                                                                        JNUCL371
                                                                        JNUCL372
        IF (.NOT.STOP) THEN                                             JNUCL373
C calculate invariant mass of object plus closest particle              JNUCL374
          MASS=JNINVM(IOBJ,ITRKMIN)                                     JNUCL375
Cif mass of new object below MASSCUT merge the old object and the track JNUCL376
C to form the new object, otherwise stop                                JNUCL377
          IF (MASS.LT.MASSCUT) THEN                                     JNUCL378
                               CALL JNMERGE(IOBJ,ITRKMIN)               JNUCL379
c    flag the track so we do not use it again                           JNUCL380
                               FLAG(ITRKMIN)=0                          JNUCL381
                             ELSE                                       JNUCL382
                               STOP=.TRUE.                              JNUCL383
                             ENDIF                                      JNUCL384
                     ENDIF !IF .NOT.STOP                                JNUCL385
                                                                        JNUCL386
       ENDDO !WHILE .not.STOP                                           JNUCL387
                                                                        JNUCL388
Ccheck no infinite loop                                                 JNUCL389
      IF (NLOOP.GE.NLOOPMAX) THEN                                       JNUCL390
          CALL QWMESE('WARNING JNUCLE infinite loop')                   JNUCL391
          GOTO 999                                                      JNUCL392
                             ENDIF                                      JNUCL393
Cthe object is the one we want ; fill the output array                  JNUCL394
      DO I=1,4                                                          JNUCL395
       JNP(I)=TRACK(IOBJ,I)                                             JNUCL396
      ENDDO                                                             JNUCL397
                                                                        JNUCL398
                                                                        JNUCL399
      RETURN                                                            JNUCL400
                                                                        JNUCL401
 999  CONTINUE                                                          JNUCL402
                                                                        JNUCL403
                                                                        JNUCL404
      END                                                               JNUCL405
                                                                        JNUCL406
C*************************************************************          JNUCL407
C sets of function to manipulate 4-vectors in array TRACK               JNUCL408
C*************************************************************          JNUCL409
Ccalculate invariant mass of two tracks                                 JNUCL410
      REAL FUNCTION JNINVM(I,J)                                         JNUCL411
      IMPLICIT NONE                                                     JNUCL412
      INTEGER I,J                                                       JNUCL413
      REAL JNINVM2                                                      JNUCL414
                                                                        JNUCL415
Carray of tracks                                                        JNUCL416
      INTEGER MAXTRK                                                    JNUCL417
      PARAMETER (MAXTRK=100)                                            JNUCL418
      REAL TRACK(MAXTRK+1,4)                                            JNUCL419
      COMMON /TRACK/TRACK                                               JNUCL420
                                                                        JNUCL421
      JNINVM2=(TRACK(I,4)+TRACK(J,4))**2-                               JNUCL422
     &          (TRACK(I,1)+TRACK(J,1))**2-                             JNUCL423
     &          (TRACK(I,2)+TRACK(J,2))**2-                             JNUCL424
     &          (TRACK(I,3)+TRACK(J,3))**2                              JNUCL425
      JNINVM=SIGN(SQRT(ABS(JNINVM2)),JNINVM2)                           JNUCL426
      RETURN                                                            JNUCL427
      END                                                               JNUCL428
                                                                        JNUCL429
                                                                        JNUCL430
Cmerge tracks ITK and JTK in track JTK                                  JNUCL431
      SUBROUTINE JNMERGE(ITK,JTK)                                       JNUCL432
      IMPLICIT NONE                                                     JNUCL433
                                                                        JNUCL434
      INTEGER ITK,JTK,I                                                 JNUCL435
Carray of tracks                                                        JNUCL436
      INTEGER MAXTRK                                                    JNUCL437
      PARAMETER (MAXTRK=100)                                            JNUCL438
      REAL TRACK(MAXTRK+1,4)                                            JNUCL439
      COMMON /TRACK/TRACK                                               JNUCL440
                                                                        JNUCL441
      DO I=1,4                                                          JNUCL442
      TRACK(ITK,I)=TRACK(ITK,I)+TRACK(JTK,I)                            JNUCL443
      ENDDO                                                             JNUCL444
      RETURN                                                            JNUCL445
      END                                                               JNUCL446
                                                                        JNUCL447
                                                                        JNUCL448
                                                                        JNUCL449
Ccalculate distance (JADE definition : 2 E1 E2 ( 1 - COS Theta12 )      JNUCL450
C between   2 tracks                                                    JNUCL451
      REAL FUNCTION JNDIST (ITK,JTK)                                    JNUCL452
      IMPLICIT NONE                                                     JNUCL453
      INTEGER ITK,JTK                                                   JNUCL454
      real JNMOM,JNINVM                                                 JNUCL455
      external  JNMOM,JNINVM                                            JNUCL456
Carray of tracks                                                        JNUCL457
      INTEGER MAXTRK                                                    JNUCL458
      PARAMETER (MAXTRK=100)                                            JNUCL459
      REAL TRACK(MAXTRK+1,4),DIST2,MOMI,MOMJ                            JNUCL460
      COMMON /TRACK/TRACK                                               JNUCL461
                                                                        JNUCL462
                                                                        JNUCL463
      MOMI=JNMOM(ITK)                                                   JNUCL464
      IF (MOMI.EQ.0.) THEN                                              JNUCL465
         CALL QWMESE('WARNING JNUCLE:DISTANCE WITH 0 MOMENTUM')         JNUCL466
         RETURN                                                         JNUCL467
                      ENDIF                                             JNUCL468
                                                                        JNUCL469
      MOMJ=JNMOM(JTK)                                                   JNUCL470
      IF (MOMJ.EQ.0.) THEN                                              JNUCL471
         CALL QWMESE('WARNING JNUCLE:DISTANCE WITH 0 MOMENTUM')         JNUCL472
         RETURN                                                         JNUCL473
                     ENDIF                                              JNUCL474
                                                                        JNUCL475
Cstandard JADE algoritHme  DIST2=2 E1 E2*(1-COS12)                      JNUCL476
       DIST2=2*              TRACK(ITK,4)*TRACK(JTK,4)*                 JNUCL477
     &           (1.          -(TRACK(ITK,1)*TRACK(JTK,1)               JNUCL478
     &                         +TRACK(ITK,2)*TRACK(JTK,2)               JNUCL479
     &                         +TRACK(ITK,3)*TRACK(JTK,3))              JNUCL480
     &                         /MOMI/MOMJ)                              JNUCL481
                                                                        JNUCL482
                                                                        JNUCL483
      JNDIST=SIGN(SQRT(ABS(DIST2)),DIST2)                               JNUCL484
                                                                        JNUCL485
      RETURN                                                            JNUCL486
                                                                        JNUCL487
      END                                                               JNUCL488
                                                                        JNUCL489
                                                                        JNUCL490
Cmomentum                                                               JNUCL491
      REAL  FUNCTION   JNMOM(ITK)                                       JNUCL492
      IMPLICIT NONE                                                     JNUCL493
      INTEGER ITK                                                       JNUCL494
                                                                        JNUCL495
Carray of tracks                                                        JNUCL496
      INTEGER MAXTRK                                                    JNUCL497
      PARAMETER (MAXTRK=100)                                            JNUCL498
      REAL TRACK(MAXTRK+1,4)                                            JNUCL499
      COMMON /TRACK/TRACK                                               JNUCL500
                                                                        JNUCL501
      REAL JNMOM2                                                       JNUCL502
      JNMOM2=TRACK(ITK,1)**2+TRACK(ITK,2)**2+TRACK(ITK,3)**2            JNUCL503
      JNMOM=SIGN(SQRT(ABS(JNMOM2)),JNMOM2)                              JNUCL504
      RETURN                                                            JNUCL505
      END                                                               JNUCL506
                                                                        JNUCL507
Cmass                                                                   JNUCL508
      REAL  FUNCTION   JNMASS(ITK)                                      JNUCL509
      IMPLICIT NONE                                                     JNUCL510
      INTEGER ITK                                                       JNUCL511
                                                                        JNUCL512
Carray of tracks                                                        JNUCL513
      INTEGER MAXTRK                                                    JNUCL514
      PARAMETER (MAXTRK=100)                                            JNUCL515
      REAL TRACK(MAXTRK+1,4)                                            JNUCL516
      COMMON /TRACK/TRACK                                               JNUCL517
                                                                        JNUCL518
      REAL JNMASS2                                                      JNUCL519
      JNMASS2=TRACK(ITK,4)**2-TRACK(ITK,1)**2-TRACK(ITK,2)**2           JNUCL520
     &                                        -TRACK(ITK,3)**2          JNUCL521
      JNMASS=SIGN(SQRT(ABS(JNMASS2)),JNMASS2)                           JNUCL522
      RETURN                                                            JNUCL523
      END                                                               JNUCL524
                                                                        JNUCL525
