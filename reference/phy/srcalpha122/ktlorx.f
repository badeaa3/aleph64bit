      FUNCTION KTLORX (ITK,ICL,IFL,ITKRST)
CKEY KINEMATICS /INTERNAL
C----------------------------------------------------------------------
C! Boost ITK into the rest frame of ITKRST.
C                                                    H.Albrecht  2.1.89
C----------------------------------------------------------------------
      SAVE IERR
C Start of QCDESH ----------------------- Description in QDATA ---------
      PARAMETER (KCQDET=34, KCQFPA=8, KCQPAR=10, KCQVEC=73, KCQVRT=30,
     & KHE=1, KHMU=2, KHPI=3, KHK=4, KHP=5, KHPHOT=1, KHNHAD=2,
     & KMONTE=-2, KRECO=-1, KLOCKM=14, KSOVT=1, KSCHT=2, KSIST=3,
     & KSAST=4, KSEHT=5, KSV0T=6, KSDCT=7, KSEFT=8, KSNET=9, KSGAT=10,
     & KSJET=11, KSMCT=12, KSREV=13,
     & KSMCV=14, KUNDEF=-12344321, QQPI=3.141593, QQE=2.718282,
     & QQ2PI=QQPI*2., QQPIH=QQPI/2., QQRADP=180./QQPI, QQC=2.997925E10,
     & QQH=6.582173E-25, QQHC=QQH*QQC, QQIRP=.00029979)
      CHARACTER CQDATE*8, CQDWRK*80, CQFHIS*80, CQFOUT*80, CQFWRK*80,
     & CQHTIT*80, CQSEC*3, CQTIME*8, CQUNPK*30, CQVERS*6, CQRLST*800,
     & CQELST*800
      COMMON /QCDEC/ CQDATE, CQDWRK, CQFHIS, CQFOUT, CQFWRK, CQHTIT,
     & CQSEC(14), CQTIME, CQUNPK, CQVERS, CQRLST, CQELST
      COMMON /QCDE/ QELEP, QMFLD ,QMFLDC, QTIME, QTIMEI, QTIMEL,
     & QTIMES, QTIMET, QDHEEC, QDHEEL, QDHEPF, QDHETH, QDHEPH, QDHEEF,
     & QDHEET, QDHET1, QDHEP1, QDHET2, QDHEP2, QDHEE1, QDHEE2, QDHEE3,
     & QKEVRN, QKEVWT, QVXNOM, QVYNOM, QVZNOM, QVXNSG, QVYNSG, QVZNSG,
     & QINLUM, QRINLN, QRINLU, QDBOFS, QEECWI(36), QVXBOM, QVYBOM,
     & QSILUM, QRSLLU, QRSLBK, QRSLEW , QVTXBP(3), QVTEBP(3), QVTSBP(3)
      COMMON /QCDE/  KFOVT, KLOVT, KNOVT, KFCHT, KLCHT, KNCHT, KFIST,
     & KLIST, KNIST, KFAST, KLAST, KNAST, KFEHT, KLEHT, KNEHT, KFV0T,
     & KLV0T, KNV0T, KFDCT, KLDCT, KNDCT, KFEFT, KLEFT, KNEFT, KFNET,
     & KLNET, KNNET, KFGAT, KLGAT, KNGAT, KFJET, KLJET, KNJET, KFMCT,
     & KLMCT, KNMCT, KFREV, KLREV, KNREV, KFMCV, KLMCV, KNMCV, KLUST,
     & KLUSV, KFFRT, KLFRT, KFFRV, KLFRV, KNRET, KNCOT, KFFRD,
     & KLFJET,KLLJET,KLNJET
      COMMON /QCDE/ KBIT(32), KCLACO(KCQFPA), KCLAFR(KCQFPA), KCLARM
     & (KCQFPA), KDEBUG, KEVT, KEXP, KFFILL, KFEOUT, KJOPTN(2,2),
     & KLEOUT, KLROUT, KLOCK0(KLOCKM,2), KLOCK1(KLOCKM,2), KLOCK2(
     & KLOCKM,2), KMATIX(6,6), KMQFPA, KNEFIL, KNEOUT, KNEVT, KNPAST,
     & KNQDET, KNQFPA, KNQLIN, KNQMTX, KNQPAR, KNQPST, KNREIN, KNREOU,
     & KOQDET, KOQFPA, KOQLIN, KOQMTL, KOQMTS, KOQPAR, KOQPBT, KOQPLI,
     & KOQTRA, KOQVEC, KOQVRT, KQPAR, KQVEC, KQVRT, KQWRK, KQZER, KRUN,
     & KSTATU, KTDROP, KUCARD, KUCONS, KUHIST, KUINPU, KUOUTP, KUPRNT,
     & KUPTER, KDEBU1, KDEBU2, KNWRLM, KEFOPT, KUEDIN, KUEDOU, KURTOX,
     & KUCAR2, KNHDRN, KNBHAB, KSBHAB, KRSLLQ, KRSLNB
      COMMON /QCDE/ INDATA
      COMMON /QCDE/ KRINNE, KRINNF, KRINDC, KRINDQ, KRINNZ, KRINNB,
     & KRINBM, KRINFR, KRINLR, KRINLF
      COMMON /QCDE/ KEVERT, KEVEDA, KEVETI, KEVEMI(4), KEVETY, KEVEES,
     & KDHEFP, KDHENP, KDHENM, KKEVNT, KKEVNV, KKEVID, KDHENX, KDHENV,
     & KDHENJ, KREVDS, KXTET1, KXTET2, KXTEL2, KXTCGC, KXTCLL, KXTCBN,
     & KXTCCL, KXTCHV, KXTCEN, KCLASW, KERBOM, KBPSTA
      DIMENSION KLOCUS(3,14)
      EQUIVALENCE (KLOCUS(1,1),KFOVT), (KFOVT,KFRET), (KLIST,KLRET),
     & (KFIST,KFCOT), (KLAST,KLCOT)
      COMMON /QCDE/ XCOPYJ, XFLIAC, XHISTO, XLREV(2), XLREV2(2), XMCEV,
     & XMINI, XSYNTX, XWREVT, XWRRUN, XFILMC, XFILCH, XFILV0, XFILCO,
     & XFILEF, XFILPC, XFILGA, XFILJE,
     & XPRHIS, XFILL, XVITC, XVTPC, XVECAL, XVLCAL, XVTPCD,
     & XVSATR, XVHCAL, XHVTRG, XSREC, XWMINI, XIOKLU, XIOKSI, XFRF2,
     & XNSEQ, XVDOK, XFRF0, XFMUID, XFILEM, XWNANO, XROKSI, XGETBP,
     & XJTHRU
      LOGICAL XCOPYJ, XFLIAC, XHISTO, XLREV, XLREV2, XMCEV, XMINI,
     & XSYNTX, XWREVT, XWRRUN, XFILMC, XFILCH, XFILV0, XFILCO, XFILEF,
     & XFILPC, XPRHIS, XFILL, XVITC, XVTPC, XVECAL, XVLCAL, XVTPCD,
     & XVSATR, XVHCAL, XHVTRG, XSREC, XWMINI, XIOKLU, XFRF2, XFILJE,
     & XNSEQ, XFILGA, XVDOK, XFRF0, XFMUID, XFILEM, XWNANO, XIOKSI,
     & XROKSI, XGETBP, XJTHRU
C-------------------- /NANCOM/ --- NanoDst steering -------------------
C! XNANO   .TRUE. if input is a NanoDst (in NANO or EPIO format, dependi
C!                   XNANOR)
C!
      LOGICAL XNANO
      COMMON /NANCOM/XNANO
C--------------------- end of NANCOM ----------------------------------
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
      INTEGER IW
      REAL RW(10000)
      COMMON /BCS/ IW(10000)
      EQUIVALENCE (RW(1),IW(1))
C------------------ /QCNAMI/ --- name indices -------------------------
      COMMON /QCNAMI/ NAAFID,NAAJOB,NAASEV,NABCNT,NABHIT,NABOMB,
     1 NABOME,NABOMP,NABOMR,NABPTR,NADCAL,NADCRL,NADECO,NADEID,NADENF,
     2 NADEVT,NADEWI,NADFMC,NADFOT,NADGAM,NADHCO,NADHEA,NADHRL,NADJET,
     3 NADMID,NADMJT,NADMUO,NADNEU,NADPOB,NADRES,NADTBP,NADTMC,NADTRA,
     4 NADVER,NADVMC,NAECRQ,NAECTE,NAEGID,NAEGPC,NAEIDT,NAEJET,NAERRF,
     5 NAETDI,NAETKC,NAEVEH,NAEWHE,NAFICL,NAFKIN,NAFPOI,NAFPOL,NAFRFT,
     6 NAFRID,NAFRTL,NAFSTR,NAFTCL,NAFTCM,NAFTOC,NAFTTM,NAFVCL,NAFVER,
     7 NAFZFR,NAHCCV,NAHCTE,NAHINF,NAHMAD,NAHPDI,NAHROA,NAHSDA,NAHTUB,
     8 NAIASL,NAIPJT,NAIRJT,NAITCO,NAITMA,NAIXTR,NAIZBD,NAJBER,NAJEST,
     9 NAJSUM,NAKEVH,NAKINE,NAKJOB,NAKLIN,NAKPOL,NAKRUN,NALIDT,NALOLE,
     A NALUPA,NAMCAD,NAMHIT,NAMTHR,NAMUDG,NAMUEX,NAOSTS,NAPART,NAPASL,
     B NAPCHY,NAPCOB,NAPCOI,NAPCPA,NAPCQA,NAPCRL,NAPECO,NAPEHY,NAPEID,
     C NAPEMH,NAPEPT,NAPEST,NAPEWI,NAPFER,NAPFHR,NAPFRF,NAPFRT,NAPHCO,
     D NAPHER,NAPHHY,NAPHMH,NAPHST,NAPIDI,NAPITM,NAPLID,NAPLPD,NAPLSD,
     E NAPMSK,NAPNEU,NAPPDS,NAPPOB,NAPPRL,NAPRTM,NAPSCO,NAPSPO,NAPSTR,
     F NAPT2X,NAPTBC,NAPTCO,NAPTEX,NAPTMA,NAPTML,NAPTNC,NAPTST,NAPVCO,
     G NAPYER,NAPYFR,NAPYNE,NAQDET,NAQFPA,NAQLIN,NAQMTL,NAQMTS,NAQPAR,
     H NAQPBT,NAQPLI,NAQTRA,NAQVEC,NAQVRT,NAQWRK,NAQZER,NAREVH,NARHAH,
     I NARTLO,NARTLS,NARUNH,NARUNR,NASFTR,NATEXS,NATGMA,NATMTL,NATPCO,
     J NAVCOM,NAVCPL,NAVDCO,NAVDHT,NAVDXY,NAVDZT,NAVERT,NAVFHL,NAVFLG,
     K NAVFPH,NAVHLS,NAVPLH,NAX1AD,NAX1SC,NAX1TI,NAX2DF,NAX3EC,NAX3EW,
     L NAX3HC,NAX3IT,NAX3L2,NAX3LU,NAX3TM,NAX3TO,NAX3TP,NAX3X3,NAXTBN,
     M NAXTBP,NAXTCN,NAXTEB,NAXTOP,NAXTRB,NAYV0V,NAZPFR,NAEFOL,NAMUID,
     N NAPGID,NAPGPC,NAPGAC,NAPMSC,NAPTHR,NANBIP,NAPDLT,NAPMLT,NAPLJT
C--------------------- end of QCNAMI ----------------------------------
C------------------ /QQQQJJ/ --- HAC parameters for ALPHA banks -------
      PARAMETER (JQVEQX= 1,JQVEQY= 2,JQVEQZ= 3,JQVEQE= 4,JQVEQM= 5,
     & JQVEQP= 6,JQVECH= 7,JQVETN= 8,JQVESC= 9,JQVEKS=10,JQVECL=11,
     & JQVEPA=12,JQVEQD=13,JQVENP=14,JQVESP=15,JQVEOV=16,JQVEEV=17,
     & JQVEND=18,JQVEDL=19,JQVENO=20,JQVEOL=21,JQVENM=22,JQVEML=23,
     & JQVEBM=24,JQVELK=38,JQVEDB=39,JQVEZB=40,JQVESD=41,JQVESZ=42,
     & JQVECB=43,JQVEEM=44,JQVECF=54,JQVEEW=55,JQVEUS=56)
      PARAMETER ( JQVRVX=1,JQVRVY=2,JQVRVZ=3,JQVRVN=4,JQVRTY=5,
     1   JQVRIP=6,JQVRND=7,JQVRDL=8,JQVRAY=9,JQVRAF=10,JQVREM=11,
     2   JQVRCF=17,JQVRET=18)
      PARAMETER ( JQDEAF= 1,JQDEAL= 2,JQDENT= 3,JQDEAT= 4,JQDELT= 8,
     &  JQDEAE= 9,JQDEAH=10,JQDEAM=11,JQDECF=12,JQDEEC=13,JQDEHC=14,
     &  JQDEET=15,JQDEFI=16,JQDENF=17,JQDEFL=18,JQDENE=19,JQDEEL=20,
     &  JQDENH=21,JQDEHL=22,JQDELH=23,JQDEEF=24,JQDEPC=25,JQDEEG=26,
     &  JQDEMU=27,JQDEDX=28,JQDEPG=29,JQDEPD=30,JQDEPM=31)
      PARAMETER ( JQPAGN=1, JQPANA=2, JQPACO=5, JQPAMA=6, JQPACH=7,
     & JQPALT=8,JQPAWI=9,JQPAAN=10)
C--------------------- end of QCDESH ----------------------------------
      DATA IERR /0/
      JR(J) = KOQVEC + KTLORX  * KCQVEC + J
      J1(J) = KOQVEC + ITKRST * KCQVEC + J
      J2(J) = KOQVEC + ITK    * KCQVEC + J
C
      IF (ITK .LE. KLUST)  GO TO 30
      IPC = IW(J2(JQVEPA))
      IFR = IW(J2(JQVECL))
C
C       Same particle already boosted ?
C
      KTLORX = ITK
   20 KTLORX = IW(JR(JQVESP))
      IF (KTLORX .EQ. ITK)  GO TO 30
      IF (IW(JR(JQVECL)) .NE. ICL .OR. IW(JR(JQVEPA)) .NE. IPC .OR.
     &    RW(JR(JQVEQM)) .NE. RW(J2(JQVEQM)))  GO TO 20
      IFL = 1
      GO TO 90
C
C       new track :
C
   30 IFL = 0
      IF (KTDROP .NE. 0)  THEN
        KTLORX = KTDROP
        KTDROP = IW(JR(JQVENP))
      ELSE
        KTLORX = KFFRT
        KFFRT = KFFRT + 1
        IF (KFFRT .GE. KLFRT)  CALL QSBANK ('QVEC', KFFRT+200)
      ENDIF
C
C       mass > 0 ?
C
      IF (RW(J1(JQVEQM)) .LT. 1.E-9)  GO TO 60
C
C       basic attributes :
C
      RW(JR(JQVEQM)) = RW(J2(JQVEQM))
      RW(JR(JQVECH)) = RW(J2(JQVECH))
      P1P2 = RW(J1(JQVEQX)) * RW(J2(JQVEQX)) +
     &       RW(J1(JQVEQY)) * RW(J2(JQVEQY)) +
     &       RW(J1(JQVEQZ)) * RW(J2(JQVEQZ))
      IF (ABS (RW(J1(JQVEQP))**2 - P1P2) .GT. 0.0001 * P1P2)  THEN
        RW(JR(JQVEQE)) = (RW(J1(JQVEQE)) * RW(J2(JQVEQE)) - P1P2) /
     &    RW(J1(JQVEQM))
        FAC = - (RW(JR(JQVEQE)) + RW(J2(JQVEQE))) /
     &          (RW(J1(JQVEQE)) + RW(J1(JQVEQM)))
        RW(JR(JQVEQX)) = RW(J2(JQVEQX)) + FAC * RW(J1(JQVEQX))
        RW(JR(JQVEQY)) = RW(J2(JQVEQY)) + FAC * RW(J1(JQVEQY))
        RW(JR(JQVEQZ)) = RW(J2(JQVEQZ)) + FAC * RW(J1(JQVEQZ))
        RW(JR(JQVEQP)) = SQRT (RW(JR(JQVEQX))**2 + RW(JR(JQVEQY))**2 +
     &    RW(JR(JQVEQZ))**2)
      ELSE
        RW(JR(JQVEQX)) = RW(J2(JQVEQX)) * 1.E-9
        RW(JR(JQVEQY)) = RW(J2(JQVEQY)) * 1.E-9
        RW(JR(JQVEQZ)) = RW(J2(JQVEQZ)) * 1.E-9
        RW(JR(JQVEQP)) = RW(J2(JQVEQP)) * 1.E-9
        RW(JR(JQVEQE)) = RW(J2(JQVEQM))
      ENDIF
C
      IF (ITK .LE. KLUST)  GO TO 90
C
C       all boosted tracks from the same class ?
C
      IF (IFR .EQ. 0)  GO TO 70
      IF (KCLAFR(ICL) .EQ. 0)  THEN
        KCLAFR(ICL) = IFR
        KCLARM(ICL) = KCLARM(IFR)
      ELSE
        IF (IFR .NE. KCLAFR(ICL))  CALL QMTERM
     &      ('_KTLORX_ Particles from different classes mixed up')
      ENDIF
C
C       particle code, class :
C
      IW(JR(JQVECL)) = ICL
      IW(JR(JQVEPA)) = IPC
      IF (IPC .NE. 0)  THEN
        IFP = IW(KOQPLI+IPC)
        IF (IFP .EQ. 0)  IFP = KFPADR (IPC)
        IW(JR(JQVENP)) =
     &      IW(KOQFPA+IFP*KCQFPA+ICL)
        IW(KOQFPA+IFP*KCQFPA+ICL) = KTLORX
      ELSE
        IW(JR(JQVENP)) = 0
      ENDIF
C
C       KSAME pointer :
C
      IW(JR(JQVESP)) = IW(J2(JQVESP))
      IW(J2(JQVESP)) = KTLORX
C
C       daughter - mother - daughter relation; match :
C
      IW(JR(JQVEND)) = 0
      IW(JR(JQVENO)) = 0
      IW(JR(JQVENM)) = IW(J2(JQVENM))
      IW(JR(JQVEML)) = IW(J2(JQVEML))
C
C        bit masks :
C
      DO 9 IB=1,KLOCKM
        IW(JR(JQVEBM+IB-1)) = IW(J2(JQVEBM+IB-1))
9     CONTINUE
      IW(JR(JQVELK)) = IW(J2(JQVELK))
C
C       vertices :
C
      IW(JR(JQVESC)) = IW(J2(JQVESC))
      IW(JR(JQVEOV)) = IW(J2(JQVEOV))
      IW(JR(JQVEEV)) = IW(J2(JQVEEV))
      RW(JR(JQVEDB)) = RW(J2(JQVEDB))
      RW(JR(JQVEZB)) = RW(J2(JQVEZB))
      RW(JR(JQVESD)) = RW(J2(JQVESD))
      RW(JR(JQVESZ)) = RW(J2(JQVESZ))
      RW(JR(JQVECB)) = RW(J2(JQVECB))
C
C       other pointers etc. :
C
      IW(JR(JQVEKS)) = IW(J2(JQVEKS))
      IW(JR(JQVETN)) = IW(J2(JQVETN))
      IW(JR(JQVEQD)) = IW(J2(JQVEQD))
C
C       error matrix : not yet implemented.
C
      RW(JR(JQVEEM)) = -1.
      RW(JR(JQVECF)) = RW(J2(JQVECF))
      GO TO 90
C
C       Mass = 0 :
C
   60 IERR = IERR + 1
      IF (IERR .LE. 10)  CALL QWMESE
     &  ('_QVLORX_ Lorentz boost : beta close to 1')
      GO TO 80
C
C       track ITK has zero attributes :
C
   70 IERR = IERR + 1
      IF (IERR .LE. 10)  CALL QWMESE
     &  ('_QVLORX_ Particle to be boosted has zero attributes')
C
   80 CALL QVZERO (KTLORX)
      KTLORX = 0
C
   90 CONTINUE
      END
