       PROGRAM ALBOOK
C-----------------------------------------------------------------------
CKEY STEER
C! Main program for all BOOKKEEPING programs :
C!  ALBOOK , ALUPDATE , LISTFILES , RESCUETMS, SCANBOOK , SPLIDBAS
C J. Boucrot  20-04-1988    modified 18-Oct-1996
C Calls BKSTEE                                      from   BOOKLIB
C-----------------------------------------------------------------------
C
C Call the steering routine of all BOOKKEEPING processings :
C
       CALL BKSTEE
C
       STOP
       END
      SUBROUTINE BKAADS(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK RAW
C! Build datasets from 'AA' tapes or 'AR' DLT's
C  J. Boucrot  17-Oct-1989
C  Completely rewritten 18-Apr-1995 for new RAW DLT's
C  Called from BKONLG
C  Calls BKFPER,BKMODI,BKPOIN,BKSSTR,BKFILB,BKTIMN         from BOOKLIB
C  Calls ALINST,ALSTIN,BKINCA,BKCARI                       from ALEPHLIB
C Output argument : IER = 1 if NO ROOM to book banks , =0 if all OK
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      PARAMETER (  MAXRU = 100 )
      CHARACTER*80 VARCH(MAXCH),COMS
      CHARACTER VSN1*8,FORM*4,RUNF*5,RUNL*5,COMB*60
      CHARACTER DSNAM*20,FNN*6,DAYSC*11,CHAINT*4
      INTEGER ITAB(MAXIN),BKINCA,LISRU(MAXRU)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Loop on all 'AR' DLT's in BCAR,NR=1000 bank :
      JBCAR=NLINK('BCAR',1000)
      IF (JBCAR.EQ.0) GO TO 999
C
      DO 500 IBCAR=1,LROWS(JBCAR)
         KBCAR=KROW(JBCAR,IBCAR)
         IF (IW(KBCAR+JBCARF).LE.1) GO TO 500
         CALL ALSTIN(IW(KBCAR+JBCACM),JBCADN-JBCACM,COMB)
         IF (INDEX(COMB,'COPY OF').GT.0) GO TO 500
C get tape VSN , check if it is already in the database :
         CALL ALSTIN(IW(KBCAR+JBCAVS),2,VSN1)
         IF (VSN1(1:2).NE.'AR') GO TO 500
         NRUNS=0
         NROFS=0
         CALL VZERO(LISRU,MAXRU)
         CALL BKSSTR('BDFS',1,VSN1,2,JBDFTC,NRT1)
         IF (NRT1.EQ.0) GO TO 100
C VSN1 was already in BDFS : one has first to scratch it , then
C scratch all its copies , then fill LISRU with list of runs
         JBDFS=NLINK('BDFS',1)
         IF (JBDFS.EQ.0) GO TO 500
         MINFS=MAX0(1,NRT1-1000)
         MAXFS=MIN0(NRT1+1000,LROWS(JBDFS))
         DO 60 KKDR=MINFS,MAXFS
            KBDFS=KROW(JBDFS,KKDR)
            IF (IW(KBDFS+JBDFTC).NE.IW(KBCAR+JBCAVS))     GO TO 60
            IF (IW(KBDFS+JBDFTC+1).NE.IW(KBCAR+JBCAVS+1)) GO TO 60
C tag the DLT as to be scratched in 'BDFS' :
         IW(KBDFS+JBDFDF)=1
         NBKSCR=NBKSCR+1
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
C tag the copy as to be scratched in 'BDFS' :
         DO 50 KKDF=MINFS,MAXFS
            KKDFS=KROW(JBDFS,KKDF)
            IF (IW(KKDFS+JBDFNP).NE.NPER) GO TO 50
            IF (IW(KKDFS+JBDFNR).NE.NROW) GO TO 50
            IW(KKDFS+JBDFDF)=1
            NBKSCR=NBKSCR+1
 50      CONTINUE
 60      CONTINUE
C Now get the list of runs from bank 'BRLI' for this dataset :
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.EQ.0) GO TO 500
         KBSET=KROW(JBSET,NROW)
         IBRL1=IW(KBSET+JBSEBA)
         IBRL2=IW(KBSET+JBSEBR)
         JBRLI=NLINK('BRLI',NPER)
         IF (JBRLI.EQ.0) GO TO 500
         DO 90 IBRLI=IBRL1,IBRL2
            KBRLI=KROW(JBRLI,IBRLI)
            NRUNS=NRUNS+1
            LISRU(NRUNS)=IW(KBRLI+JBRLRN)
  90     CONTINUE
C
C Now for the current DLT , get the list of runs from bank 'BDLT' ,
C which was filled in BKONLG :
C
 100     NNR=BKINCA(VSN1(3:6))
         JBDLT=NLINK('BDLT',NNR)
         IF (JBDLT.EQ.0) GO TO 500
         DO 110 IBDLT=1,LROWS(JBDLT)
            KBDLT=KROW(JBDLT,IBDLT)
            IRRU=IW(KBDLT+1)
            IF (IRRU.LE.0) GO TO 110
            IF (IUCOMP(IRRU,LISRU,NRUNS).GT.0) GO TO 110
            NRUNS=NRUNS+1
            IF (NRUNS.GT.MAXRU) THEN
               WRITE ( LWRDBG,1102 ) VSN1
               GO TO 110
            ENDIF
            LISRU(NRUNS)=IRRU
 110     CONTINUE
         CALL INTSOR(LISRU,NRUNS)
         IRUNF=LISRU(1)
         IRUNL=LISRU(NRUNS)
C
C Get quantities from 'BRUC' :
C
         IF (IRUNF.LT.NRUMIN) GO TO 500
         CALL BKFPER(IRUNF,0,NPER)
         IF (NPER.LE.0) GO TO 500
         CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
         IF (JBRUC.LE.0) GO TO 500
         NROWS=0
         NRUC=LROWS(JBRUC)
         DO 115 IRU=1,NRUC
            IF (ITABL(JBRUC,IRU,JBRURN).NE.IRUNF) GO TO 115
            NROWS=1
            LROWF=IRU
            GO TO 116
 115     CONTINUE
 116     IF (NROWS.EQ.0) GO TO 500
C get event # , date , time , Lep energy :
         IFSEV=1
         IDAT=ITABL(JBRUC,LROWF,JBRUWD)
         IHOU=ITABL(JBRUC,LROWF,JBRUWH)
         ILEP=ITABL(JBRUC,LROWF,JBRUTE)
         IF (IRUNF.EQ.IRUNL) THEN
            ILSEV=ITABL(JBRUC,LROWF,JBRUEV)
            GO TO 120
         ENDIF
C NRUNF may belong to another NPER:
         call bkfper(irunl,0,nperl)
         if (nperl.le.0) go to 500
         jbruc=nlink('BRUC',NPERL)
         if (jbruc.le.0) go to 500
         NROWS=0
         NRUC=LROWS(JBRUC)
         DO 118 IRU=1,NRUC
            IF (ITABL(JBRUC,IRU,JBRURN).NE.IRUNL) GO TO 118
            NROWS=1
            LROWL=IRU
            GO TO 119
 118     CONTINUE
 119     IF (NROWS.EQ.0) GO TO 500
         ILSEV=ITABL(JBRUC,LROWL,JBRUEV)
C Build the new dataset name :
 120     DSNAM=' '
         FORM='NATV'
         FNN='DRAWNO'
         IYEAR=IDAT/10000
         IMONT=MOD(IDAT/100,100)
         IDAY=MOD(IDAT,100)
         IHOUR=IHOU/10000
         IMINU=MOD(IHOU/100,100)
         ISEC=MOD(IHOU,100)
         CALL BKTIMN(IYEAR,IMONT,IDAY,IHOUR,IMINU,ISEC,DAYSC)
         DSNAM(1:6)=FNN
         DSNAM(7:17)=DAYSC
         CALL ALINST(DSNAM,IW(KBCAR+JBCADN),NBID)
C
C Build 'BSPF' bank :
C
         CALL VZERO(ITAB,MAXIN)
         DO 210 IS=JBSPCO,JBSPKC-1
 210     ITAB(IS)=INTCHA('    ')
         COMS='RAW DATA FROM RUN        TO RUN '
         CALL BKCARI(IRUNF,5,RUNF)
         CALL BKCARI(IRUNL,5,RUNL)
         COMS(20:24)=RUNF
         COMS(34:38)=RUNL
         CALL ALINST(COMS,ITAB(JBSPCO),NN)
         CALL BKFILB('BSPF',NPER,ITAB,LBSPFA,IBSPF,IER)
         CALL BKMODI('BSPF',NPER,0,LBSPFA,IER)
         IF (IER.NE.0) GO TO 900
C
C Build 'BRLI' bank :
C
         CALL BKAARL(VSN1,COMS,NPER,NRUNS,LISRU,IBRL1,IBRL2,NBYTS,IERRL)
         IF (IERRL.EQ.2) GO TO 900
C
C Build 'BTPN' bank :
C
         CALL VZERO(ITAB,MAXIN)
         DO 220 IS=JBTPVS,JBTPRN-1
 220     ITAB(IS)=INTCHA('    ')
         CALL ALINST(VSN1,ITAB(JBTPVS),NN)
         CALL ALINST(FORM,ITAB(JBTPFO),NN)
         ITAB(JBTPRN)=1000*NBYTS/JALREC(DUMMY)
         CALL BKFILB('BTPN',NPER,ITAB,LBTPNA,IBTAP,IER)
         CALL BKMODI('BTPN',NPER,0,LBTPNA,IER)
         IF (IER.NE.0) GO TO 900
C
C Build 'BPRO' bank :
C
         CALL VZERO(ITAB,MAXIN)
         DO 230 IS=JBPRPN,JBPRVN-1
 230     ITAB(IS)=INTCHA('    ')
         NADAT=2
         ITAB(JBPRPN)=INTCHA('ONL ')
         CALL ALINST('OPEN VMS',ITAB(JBPROP),NN)
         CALL ALINST('AXAONL  ',ITAB(JBPRNN),NN)
         ITAB(JBPRNI)=NADAT
         CALL BKFILB('BPRO',NPER,ITAB,LBPROA,IBPRO,IER)
         CALL BKMODI('BPRO',NPER,0,LBPROA,IER)
         IF (IER.NE.0) GO TO 900
C
C Build 'BSET' bank :
C
         CALL VZERO(ITAB,MAXIN)
         DO 240 IS=JBSEAD,JBSEFR-1
 240     ITAB(IS)=INTCHA('    ')
         CALL ALINST(DSNAM,ITAB(JBSEAD),NN)
         CALL ALINST('AXAONL  ',ITAB(JBSEAU),NN)
         ITAB(JBSEFR)=IRUNF
         ITAB(JBSEFE)=IFSEV
         ITAB(JBSELR)=IRUNL
         ITAB(JBSELE)=ILSEV
         ITAB(JBSEWD)=IDAT
         ITAB(JBSEWH)=IHOU
         ITAB(JBSEND)=NADAT
         ITAB(JBSEBN)=ILEP
         ITAB(JBSEBP)=IBPRO
         ITAB(JBSEBS)=IBSPF
         ITAB(JBSEBT)=IBTAP
         IF (IERRL.EQ.0) THEN
            IF (IBRL1.LT.99999) ITAB(JBSEBA)=IBRL1
            IF (IBRL2.GT.0)     ITAB(JBSEBR)=IBRL2
         ENDIF
         CALL BKFILB('BSET',NPER,ITAB,LBSETA,IBSET,IER)
         IF (IER.NE.0) GO TO 900
         CALL BKMODI('BSET',NPER,0,LBSETA,IER)
         WRITE ( LWRDBG,1101) VSN1,IRUNF,IRUNL
         IF (IER.NE.0) GO TO 900
C
C Add a row into 'BDFS' for this DLT VSN1 :
C
         CALL VZERO(ITAB,MAXIN)
         DO 260 IS=JBDFTC,JBDFCO-1
 260     ITAB(IS)=INTCHA('    ')
         CALL ALINST(VSN1,ITAB(JBDFTC),NW)
         ITAB(JBDFNP)=NPER
         ITAB(JBDFNR)=IBSET
         CALL BKFILB('BDFS',1,ITAB,LBDFSA,IBDOU,IER)
         CALL BKMODI('BDFS',1,0,LBDFSA,IER)
         IF (IER.NE.0) GO TO 900
C
C Add a row into 'BDFS' for the DLT copy VSNCO :
C
         CALL VZERO(ITAB,MAXIN)
         DO 360 IS=JBDFTC,JBDFCO-1
 360     ITAB(IS)=INTCHA('    ')
         ITAB(JBDFTC)=IW(KBCAR+JBCAVI)
         ITAB(JBDFTC+1)=IW(KBCAR+JBCAVI+1)
         ITAB(JBDFNP)=NPER
         ITAB(JBDFNR)=IBSET
         ITAB(JBDFCO)=1
         CALL BKFILB('BDFS',1,ITAB,LBDFSA,IBDO2,IER)
         CALL BKMODI('BDFS',1,0,LBDFSA,IER)
         IF (IER.NE.0) GO TO 900
C
 500  CONTINUE
C
      IER=0
      GO TO 999
C No room to book banks :
 900  IER=1
C
 999  RETURN
 1101 FORMAT (7X,'+++ BKAADS New RAW DLT OK, Runs :',2X,A8,2I8)
 1102 FORMAT (15X,'=== BKAADS error for DLT :',2X,A8,' : Too many Runs')
      END
      SUBROUTINE BKAALO(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Verifies and updates the TMS locations of Online Tapes/DLT's
C   Author   J. Boucrot   11-Sep-1991 .  Modif 05-May-1992
C   Modified 18-Apr-1995 for DLT's
C Called from BKUPDF                                  from  BOOKLIB
C Calls ALSTIN,BKCARI                                 from  ALEPHLIB
C Calls CALDAT                                        from  GENLIB
C Calls BKGTMS,BKPTMS,BKPOIN,BKELEP                   from  BOOKLIB
C Output argument :
C    IER = 0 if all OK , = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      SAVE
      CHARACTER*4  AALOC,AAVAU,CHAINT,TMSLO
      CHARACTER OUTXT*12,SEPLO*1,VSN*8,CHREP*119,DAY*2,YMD*6,LASAR*8
      INTEGER ISSEL(8)
      DATA SEPLO,AAVAU / '_' , 'VAUL' /
      DATA MINH , MIND / 4 , 60 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IONLIN.EQ.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1100
      WRITE ( LWRDBG,1100 )
      INOWR=IW(NAMIND('NOWR'))
      ICHLO=0
      ITMLO=0
      CALL BKPOIN(LECDAF,'BDFS',1,JBDFS)
      IF (JBDFS.LT.0) GO TO 900
      NBDFS=LROWS(JBDFS)
      CALL DATIME(IDATN,ITIMN)
      IHOUN=ITIMN/100
C Do not run this routine on week-ends ( no shuttle from the Aleph pit )
      CALL VZERO(ISSEL,8)
      CALL BKCARI(IDATN,6,YMD)
      CHREP=' '
      CHREP(75:80)=YMD
      CALL CALDAT(9,CHREP,ISSEL,IRETC)
      IF (IRETC.NE.0) GO TO 999
      DAY=CHREP(118:119)
C     IF (DAY.EQ.'SA'.OR.DAY.EQ.'SU') THEN
      IF (DAY.NE.'XY') THEN
         IF (IBAUTO.EQ.0) PRINT 1101
         WRITE ( LWRDBG , 1101)
         GO TO 999
      ENDIF
 5    CONTINUE
      IYEAN=IDATN/10000
      IMOUN=(IDATN-10000*IYEAN)/100
C get from bank 'BLAS' the last run number from ONLINE  :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 900
      KBLAS=KROW(JBLAS,1)
      NRULA=IW(KBLAS+JBLALO)
C and from 'BRUC' the name of the corresponding DLT :
      CALL BKELEP(NRULA,EL,IFIL,BM,IDT,NEV,KBRUC)
      CALL ALSTIN(IW(KBRUC+JBRUVS),2,LASAR)
C
C Loop on all 'AR' DLT's ; update MASTER DLT location , not that of COPI
C
      DO 500 ITAP=1,NBDFS
         KBDFS=KROW(JBDFS,ITAP)
         CALL ALSTIN(IW(KBDFS+JBDFTC),JBDFLO-JBDFTC,VSN)
         IF (INDEX(VSN,'AR').EQ.0)  GO TO 500
         IF (IW(KBDFS+JBDFCO).NE.0) GO TO 500
C If the present tape contains the last Online run , it is still at the
         IF (INDEX(VSN,LASAR(1:6)).GT.0) GO TO 500
C Do not check too old tapes :
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
         IF (JBSET.LE.0) GO TO 900
         KBSET=KROW(JBSET,NROW)
         ITIMR=IW(KBSET+JBSEWH)
         IDATR=IW(KBSET+JBSEWD)
         IYEAT=IDATR/10000
         IMOUT=(IDATR-10000*IYEAT)/100
         IF (IMOUT.EQ.IMOUN) THEN
            IDIFD=IDATN-IDATR
         ELSE
            IDIFD=IDATN-IDATR-70*(IMOUN-IMOUT)
         ENDIF
         IF (IDIFD.GT.MIND) GO TO 500
C
         AALOC=CHAINT(IW(KBDFS+JBDFLO))
         CALL CLTOU(AALOC)
         ISPIT=0
         ITPIT=0
         IVAUL=0
         IF (INDEX(AALOC,'PIT').GT.0) ISPIT=1
         CALL BKGTMS(VSN(1:6),6,IFOUN,OUTXT)
         IF (IFOUN.NE.1) GO TO 200
         INOLO=INDEX(OUTXT,SEPLO)
         IF (INOLO.EQ.0) GO TO 200
         TMSLO=OUTXT(INOLO+1:INOLO+4)
         IF (INDEX(TMSLO,'PIT').GT.0) ITPIT=1
C Check date/time of writing :
 200     IF (ITPIT.EQ.0) GO TO 220
         IHOUR=ITIMR/10000
         IF (IDATN.GT.IDATR+1) IVAUL=1
         IF (IDATN.EQ.IDATR+1) THEN
            IHOUN=IHOUN+24
            IF (IHOUN.GT.IHOUR+MINH) IVAUL=1
         ENDIF
C Location has to be changed in the TMS database :
 220     CONTINUE
         IF (INOWR.EQ.0.AND.IVAUL.EQ.1.AND.ITPIT.EQ.1)   THEN
            CALL BKPTMS(VSN,10,' ',IRZ)
            ITMLO=ITMLO+1
            ITPIT=0
         ENDIF
C Location has to be changed in the SCANBOOK database :
         IF (ISPIT.EQ.1.AND.ITPIT.EQ.0) THEN
            IW(KBDFS+JBDFLO)=INTCHA(AAVAU)
            ICHLO=ICHLO+1
         ENDIF
C
 500  CONTINUE
      IF (ICHLO+ITMLO.LE.0) GO TO 999
      WRITE ( LWRDBG,1102) ICHLO,ITMLO
      PRINT 1102,ICHLO,ITMLO
      GO TO 999
C No room for banks :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/22X,'=== Subroutine BKAALO === : start updating',
     +        ' location of AR DLTs')
 1101 FORMAT (28X,' ***  BKAALO not executed on week-ends ***')
 1102 FORMAT (20X,I6,' locations of AR DLTs changed in BDFS',
     +       /20X,I6,' locations of AR DLTs changed in TMS ')
      END
      SUBROUTINE BKAARL(TTAP,COMEN,NPER,NRUNS,LISRU,IBRL1,IBRL2,NBYTO,
     +                  IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK RAW
C! Builds BRLI banks for RAW data with multiple runs
C  Author  J.Boucrot  04-Nov-1991
C  Completely rewritten 18-April-1995 for new RAW DLT's
C Called from BKAALO                       from BOOKLIB
C Calls BKELEP,BKFILB                      from BOOKLIB
C  Input arguments :
C  TTAP  = tape name
C  COMEN = Comment of the RAW dataset
C  NPER  = Internal period number ( = BRLI bank number )
C  NRUNS,LISRU = Total number and list of runs ( max 100 )
C  OUTPUT arguments :
C  IBRL1,2  = Row numbers in BRLI for this new dataset
C    NBYTO  = Total Number of KILOBYTES on DLT
C    IER    = 2 if pb with BOS Banks ;  = 0 if all OK
C    IER    = 1 if inconsistencies detected , or 0 good runs found
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      PARAMETER ( MAXRU = 100 )
      CHARACTER*(*) TTAP,COMEN
      CHARACTER COMRU*80
      INTEGER LISRU(MAXRU),ITAB(3*MAXRU),ITBL(3)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      NBYTO=0
      IBRL1=1000000
      IBRL2=0
      IF (NRUNS.LE.0.OR.NRUNS.GT.MAXRU) GO TO 910
      CALL CLTOU(COMEN)
      IF (INDEX(COMEN,'RAW DATA').EQ.0) GO TO 910
C Loop on all runs :
      CALL VZERO(ITAB,3*MAXRU)
      ISTAR=0
      NRUOK=0
      DO 100 IRR=1,NRUNS
         NRUN=LISRU(IRR)
         NBYT=0
         NEVT=0
         CALL BKELEP(NRUN,ELEP,IFILL,BM,IP,NE,JBRU)
         IF (ELEP.LT.0..OR.JBRU.LE.0) GO TO 80
         NBYT=IW(JBRU+JBRULD)
         IF (NBYT.LT.0) NBYT=0
         NEVT=IW(JBRU+JBRUEV)
 80      ITAB(ISTAR+JBRLRN)=NRUN
         ITAB(ISTAR+JBRLNE)=NEVT
         ITAB(ISTAR+JBRLNB)=1000*NBYT
         NBYTO=NBYTO+NBYT
         NRUOK=NRUOK+1
         ISTAR=ISTAR+LBRLIA
 100  CONTINUE
C Check at least 1 good run found :
      IF (NRUOK.EQ.0) GO TO 910
C Fill new rows in 'BRLI' :
      ISSK=0
      DO 200 IKK=1,NRUOK
         CALL UCOPY(ITAB(ISSK+1),ITBL(1),LBRLIA)
         WRITE ( LWRDBG,1001) ITBL
         CALL BKFILB('BRLI',NPER,ITBL,LBRLIA,IBOU,IER)
         IF (IER.EQ.2) GO TO 920
         IBRL1=MIN0(IBRL1,IBOU)
         IBRL2=MAX0(IBRL2,IBOU)
         ISSK=ISSK+LBRLIA
         NMODIF=NMODIF+1
         CALL BKMODI('BRLI',NPER,0,LBRLIA,IERM)
 200  CONTINUE
      GO TO 999
C----------------------------------------------------------------------
C errors :
C Inconsistencies :
 910  IER=1
      GO TO 999
C No room for banks :
 920  IER=2
 999  RETURN
 1001 FORMAT (10X,' ***** BKAARL : call BKFILB with ITBL =',3I10)
      END
      SUBROUTINE BKAARU(TAPAA,NPER,NROW,LIRU,NRRU,IEROR)
C ----------------------------------------------------------------------
CKEY TOOL/USER
C! Find the list of runs written on a given AA Raw tape
C  J. Boucrot  22 - Sep - 1997
C Called from several routines
C Calls  BKFPER,BKAAPAT                  from BOOKLIB
C Calls  ALINST                          from ALEPHLIB
C  Input :
C  TAPAA = AA tape name
C   NPER = Period # , may be 0 if unknown
C   NROW = Row number in BRUC bank, NR=NPER; may be 0 if unknown
C Output arguments :
C  LIRU  = list of run numbers, in the order of occurence
C  NRRU  = total number of runs on tape
C  IEROR = 0 if all OK, = 1 if tape not found in database
C Used banks :  'BRUC' , in which the ONLINE Logbook content is stored
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( NRAA = 20 )
      CHARACTER TAPAA*8
      INTEGER LIRU(NRAA),INTAA(2)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IEROR=1
      NRRU=0
      CALL VZERO(LIRU,NRAA)
      IF (TAPAA(1:2).NE.'AA') GO TO 999
      CALL ALINST(TAPAA,INTAA(1),IBID)
C
C If NPER and NROW not given as input, find them through an
C implicit loop on all 'BRUC' banks:
C
      IF (NPER.GT.0.AND.NROW.GT.0) GO TO 300
      JBRUC=NAMIND('BRUC')+1
 100  JBRUC=IW(JBRUC-1)
      IF (JBRUC.LE.0) GO TO 700
      DO 200 IBRUC=1,LROWS(JBRUC)
         KBRUC=KROW(JBRUC,IBRUC)
         IF (IW(KBRUC+JBRUVS).NE.INTAA(1))   GO TO 200
         IF (IW(KBRUC+JBRUVS+1).NE.INTAA(2)) GO TO 200
         NRRU=NRRU+1
         IF (NRRU.GT.NRAA) GO TO 999
         LIRU(NRRU)=IW(KBRUC+JBRURN)
 200  CONTINUE
      GO TO 100
C
C NPER and NROW were given: define NRUMI,NRUMX
C
 300  JBRUC=NLINK('BRUC',NPER)
      IF (JBRUC.LE.0) GO TO 999
      NRUMI=MAX0(1,NROW-NRAA)
      NRUMX=MIN0(LROWS(JBRUC),NROW+NRAA)
C
C Find the runs:
C
 500  IF (JBRUC.LE.0) GO TO 999
      DO 600 IBR=NRUMI,NRUMX
         KBRUC=KROW(JBRUC,IBR)
         IF (IW(KBRUC+JBRUVS).NE.INTAA(1))   GO TO 600
         IF (IW(KBRUC+JBRUVS+1).NE.INTAA(2)) GO TO 600
         NRRU=NRRU+1
         IF (NRRU.GT.NRAA) GO TO 999
         LIRU(NRRU)=IW(KBRUC+JBRURN)
 600  CONTINUE
 700  CALL BKAARUPA(TAPAA,LIRU,NRRU)
      IEROR=0
C
 999  RETURN
      END
      SUBROUTINE BKAARUPA(TAPE,LIRU,NRRU)
C-----------------------------------------------------------------------
C! Auxiliary to BKAARU
C  Adds supplementary runs written twice by mistake on AA tapes
C  J.Boucrot  30-Sep-1997
C  Called from BKAARU                    from BOOKLIB
C  Input arguments :
C   TAPE = AA tape name
C  Input and output arguments:
C   LIRU = list of runs found from database
C   NRRU = number of runs
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( NRAA = 20 , NPAT = 5 )
      CHARACTER TAPE*8
      INTEGER BKINCA,LIRU(NRAA),LTEMP(NRAA),LIFIL(NPAT),LIAA(NPAT)
      INTEGER IRUAD(NPAT)
C Characteristics of AA tapes to be patched:
      DATA LIAA  /  1978 , 1987  , 2252  ,  2365  , 2551   /
C add  on file:
      DATA LIFIL /    6  ,   1   ,  1    ,   1    ,  1     /
C the run number :
      DATA IRUAD / 13191 , 13199 , 14923 ,  15240 , 16643  /
C-----------------------------------------------------------------------
      IF (TAPE(1:2).NE.'AA') GO TO 999
      IAATA=BKINCA(TAPE(3:6))
      INDAA=IUCOMP(IAATA,LIAA,NPAT)
      IF (INDAA.LE.0) GO TO 999
C This AA tape is one to be patched:
      CALL VZERO(LTEMP,NRAA)
      CALL UCOPY(LIRU(1),LTEMP(1),LIFIL(INDAA))
C for this tape add a new file with run in IRUAD:
      LTEMP(LIFIL(INDAA)+1)=IRUAD(INDAA)
      IF (LIFIL(INDAA).EQ.NRRU) GO TO 500
C then add remaining files at the end:
      DO 100 IRR=LIFIL(INDAA)+1,NRRU
         LTEMP(IRR+1)=LIRU(IRR)
 100  CONTINUE
C Redefine LIRU and NRRU
 500  CONTINUE
      NRRU=NRRU+1
      CALL UCOPY(LTEMP(1),LIRU(1),NRRU)
C
 999  RETURN
      END

      SUBROUTINE BKAATC(IYEA,IPFMB)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Check if all raw tapes from BRUC are in BDFS for last year of data
C  J. Boucrot 01-Dec-1993
C Called from BKUPDF                         from BOOKLIB
C Calls  BKFPER      /dk bkadri              from BOOKLIB
C Input argument :
C   IYEA  : if = 0 , the current year is considered ;
C           otherwise : year #    ( e.g. 1991 )
C   IPFMB : if = 0 : all runs considered ;
C           if = 1 : only PERFMAYB runs
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
      SAVE
       CHARACTER CHAINT*4,TAPE*8
       CHARACTER*8 BLAY(2)
       LOGICAL BTEST
       DATA BLAY / 'All Runs' , 'PERFMAYB' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Initialisations : find runs and periods limits for current year :
       IYEAR=IYEA
       IF (IYEA.EQ.0) IYEAR=LISYEA(NTOYEA-2)
       IF (IBAUTO.EQ.0) PRINT 1100,IYEAR,BLAY(IPFMB+1)
       WRITE ( LWRDBG,1100)  IYEAR,BLAY(IPFMB+1)
       JBDFS=NLINK('BDFS',1)
       JBOFS=NLINK('BOFS',1)
       JBLAS=NLINK('BLAS',1)
       IF (JBLAS*JBDFS*JBOFS.EQ.0) GO TO 999
       IF (IYEA.EQ.0) THEN
          ISRUNF=LISFRU(NTOYEA-2)
          ISRUNL=IW(JBLAS+LMHLEN+JBLALO)
       ELSE
          INDY=0
          DO 2 II=1,NTOYEA-2
             IF (LISYEA(II).NE.IYEA)  GO TO 2
             INDY=II
             GO TO 3
 2        CONTINUE
 3        IF (INDY.EQ.0) GO TO 999
          ISRUNF=LISFRU(INDY)
          ISRUNL=LISFRU(INDY+1)
       ENDIF
       CALL BKFPER(ISRUNF,0,NPERF)
       IF (NPERF.LE.0) GO TO 999
       CALL BKFPER(ISRUNL,0,NPERL)
       IF (NPERL.LE.0) GO TO 999
C Find the first and last datasets to be scanned in 'BDFS' :
       NFSET=0
       NLSET=0
       DO 10 IBOFS=1,LROWS(JBOFS)
          KBOFS=KROW(JBOFS,IBOFS)
          IF (IW(KBOFS+JBOFNP).NE.NPERF) GO TO 8
          NFSET=IW(KBOFS+JBOFOF)
 8        IF (IW(KBOFS+JBOFNP).NE.NPERL) GO TO 10
          NLSET=IW(KBOFS+JBOFOF)+IW(KBOFS+JBOFLP)
          GO TO 11
 10    CONTINUE
 11    IF (NFSET*NLSET.EQ.0) GO TO 999
C-----------------------------------------------------------------------
C Now loop on all 'BRUC' banks for the current  year :
C
       DO 200 NPER=NPERF,NPERL
          JBRUC=NLINK('BRUC',NPER)
          IF (JBRUC.EQ.0) GO TO 200
          DO 100 IBR=1,LROWS(JBRUC)
             KBRUC=KROW(JBRUC,IBR)
             IBIPA=IW(KBRUC+JBRUBR)
             IF (BTEST(IBIPA,1).OR.BTEST(IBIPA,2)) GO TO 50
             GO TO 100
 50          ITP1=IW(KBRUC+JBRUVS)
             ITP2=IW(KBRUC+JBRUVS+1)
             IGOOD=0
             DO 60 ISET=NFSET,NLSET
                KBDFS=KROW(JBDFS,ISET)
                IF (IW(KBDFS+JBDFTC).NE.ITP1) GO TO 60
                IF (IW(KBDFS+JBDFTC+1).NE.ITP2) GO TO 60
                IGOOD=1
                GO TO 70
 60          CONTINUE
 70          CONTINUE
             IF (IGOOD.EQ.0) THEN
                IRUN=IW(KBRUC+JBRURN)
                TAPE(1:4)=CHAINT(ITP1)
                TAPE(5:8)=CHAINT(ITP2)
                WRITE ( LWRDBG,1112) IRUN,TAPE
             ENDIF
 100      CONTINUE
 200   CONTINUE
 999   RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/22X,'=== Subroutine BKAATC === : start checking',
     +        ' banks BRUC and existing AR DLTs'/,
     +         29X,' --> Year is : ',I9,' ** Iperfmayb =',2x,A8)
1112  FORMAT (5x,'++++ BKAATC :  RUN,TAPE =',I8,2X,A8,' NOT in BDFS !')
       END
      SUBROUTINE BKADMI(IERB)
C-----------------------------------------------------------------------
CKEY STEER
C! Steering to read some reference files
C  J. Boucrot              19-Mar-1996
C Called from BKINAL                                       from BOOKLIB
C Calls BKADRI,BKADPY,BKADSD,BKADON                        from BOOKLIB
C  Output argument :
C   IERB  = 0 if all OK
C         = 1 if no room for banks
C         = 2 if error in reading one of the special files
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-----------------------------------------------------------------------
      IERB=0
C
C Read TINSTIT LISTE file ( ONLY for UPDABOOK and RESCUETMS jobs ):
C
      IF (IBUPDA.GT.0.OR.ITMSRC.GT.0) THEN
         CALL BKADRI(IERI)
         IF (IERI.EQ.1) GO TO 900
         IF (IERI.EQ.2) GO TO 901
      ENDIF
C
C Read PHYGROUP LISTE file ( ONLY for UPDABOOK job ):
C
      IF (IBUPDA.GT.0) THEN
         CALL BKADPY(IERP)
         IF (IERP.EQ.1) GO TO 900
         IF (IERP.EQ.2) GO TO 901
      ENDIF
C
C Read DESCDBAS  LISTE file ( ONLY for UPDABOOK and SPLIDBAS jobs ):
C
      IF (IBUPDA.GT.0.OR.IBSPLI.GT.0) THEN
         CALL BKADSD(IERP)
         IF (IERP.EQ.1) GO TO 900
         IF (IERP.EQ.2) GO TO 901
      ENDIF
C
C Read ONLINE LISTE file ( ONLY for UPDABOOK job ):
C
      IF (IBUPDA.GT.0) THEN
         CALL BKADON(IERL)
         IF (IERL.NE.0) GO TO 901
      ENDIF
      GO TO 999
C No room for banks :
 900  IERB=1
      GO TO 999
C Problem in reading a file :
 901  IERB=2
C
 999  RETURN
      END
      SUBROUTINE BKADON(IERL)
C-----------------------------------------------------------------------
CKEY STEER
C! Check ONLINE LISTE reference file
C  J. Boucrot      26-May-1996
C Called from BKADMI                                       from BOOKLIB
C  Output argument :
C   IERL  = 0 if all OK
C         = 1 if error in reading the file
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      LOGICAL LEX
      CHARACTER A*80
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-----------------------------------------------------------------------
      IERL=0
C
C Check ONLINE.LISTE file containing the order to process Online infos :
C
      A=' '
      A=ALS_REFR(1:ILREFR)//'online.liste'
      A=A(1:LNBLNK(A))
      INQUIRE ( FILE = A , EXIST = LEX )
      IF ( LEX )    IONLIN=1
C
 999  RETURN
      END
      SUBROUTINE BKADPY(IERB)
C-----------------------------------------------------------------------
CKEY STEER
C! Reads PHYGROUP LISTE reference file
C  J. Boucrot      06-Apr-1989  modified 12-Sep-1997
C Called from BKADMI                                       from BOOKLIB
C Calls AUBOS,ALINST,AUBPRS                                from ALEPHLIB
C Calls BKFMT                                              from BOSLIB
C  Output argument :
C   IERB  = 0 if all OK
C         = 1 if no room for bank 'RPHY'
C         = 2 if error in reading the file
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER A*60,KKWOR*4,KEYWW*100,INFO*160
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IERB=0
C
C Open PHYGROUP LISTE file containing the description of Physics Groups
C definitions and selections :
C
      A=' '
      A=ALS_REFR(1:ILREFR)//'phygroup.liste'
      A=A(1:LNBLNK(A))
      OPEN ( LECPHY , FILE = A , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C
C Read the file and fill variables in common / BKFILU / :
C
      IP=0
      IK=0
 5    IP=IP+1
      READ (LECPHY , '(A160)' , END=6, ERR=901) INFO
      IF (IP.LE.2) GO TO 5
      if (lnblnk(info).eq.0) go to 5
      IK=IK+1
      READ (INFO,1001)
     &      KEYWPH(IK),GROUPH(IK),MANAPH(IK),CHOIPH(IK),KEYWW
      LNWW=LNBLNK(KEYWW)
      IF (LNWW.GT.0) KEYGL2(IK)(1:LNWW)=KEYWW(1:LNWW)
      CALL CLTOU(KEYWPH(IK))
      CALL CLTOU(GROUPH(IK))
      CALL CLTOU(MANAPH(IK))
      CALL CLTOU(CHOIPH(IK))
      CALL CLTOU(KEYGL2(IK))
      GO TO 5
 6    NGROUF=IP-3
      REWIND(UNIT=LECPHY)
C
C Now build a temporary 'RPHY' bank from these values :
C ( it will replace 'BPHY' in BKUPDF , after reading the database ) :
C
      CALL BKFMT('RPHY','2I,(38A)')
      LPHYW=LMHLEN+NGROUF*LBPHYA
      CALL AUBOS('RPHY',1,LPHYW,JRPHY,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JRPHY+LMHROW)=NGROUF
      IW(JRPHY+LMHCOL)=LBPHYA
      DO 7 IK=1,NGROUF
         KRPHY=KROW(JRPHY,IK)
         DO 50 IPYK=1,LBPHYA
 50      IW (KRPHY+IPYK)=INTCHA('    ')
         KKWOR=KEYWPH(IK)//'  '
         CALL ALINST(KKWOR,IW(KRPHY+JBPHKE),IB1)
         CALL ALINST(GROUPH(IK),IW(KRPHY+JBPHNA),IB2)
         CALL ALINST(MANAPH(IK),IW(KRPHY+JBPHMA),IB3)
         CALL ALINST(KEYGL2(IK),IW(KRPHY+JBPHDF),IB4)
 7    CONTINUE
      CLOSE ( LECPHY )
      CALL AUBPRS('RPHY')
      GO TO 999
C No room for bank 'RPHY' :
 900  IERB=1
      GO TO 999
C Problem in reading a file :
 901  IERB=2
C
 999  RETURN
 1001 FORMAT (1X,A2,2X,A20,3X,A8,6X,A2,7x,A100)
      END
      SUBROUTINE BKADRI(IERB)
C-----------------------------------------------------------------------
CKEY STEER
C! Reads TINSTIT LISTE reference file
C  J. Boucrot   modified 18-Mar-1996
C Called from BKADMI                                       from BOOKLIB
C Calls AUBOS,ALINST,AUBPRS                                from ALEPHLIB
C Calls BKFMT                                              from BOSLIB
C  Output argument :
C   IERB  = 0 if all OK
C         = 1 if no room for bank 'RTHO'
C         = 2 if error in reading the file
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( NINST = 150 )
      CHARACTER*8 ZINST(NINST)
      CHARACTER*2 TAPLA(NINST)
      CHARACTER*1 LABTA(NINST),NATTA(NINST)
      CHARACTER WORR*4
      INTEGER IFITA(NINST),ILATA(NINST),IHOTA(NINST)
      CHARACTER A*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IERB=0
      NINRD=0
      DO 10 I=1,NINST
         ZINST(I)=' '
         TAPLA(I)=' '
         LABTA(I)=' '
         NATTA(I)=' '
         IFITA(I)=0
         ILATA(I)=0
         IHOTA(I)=0
 10   CONTINUE
C
C Open TINSTIT  LISTE file :
C
      A=' '
      A=ALS_REFR(1:ILREFR)//'tinstit.liste'
      A=A(1:LNBLNK(A))
      OPEN ( LWRINS , FILE = A , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C
C Read the file and fill LOCAL variables :
C
      IPP=0
 15   IPP=IPP+1
      IF (IPP.GT.NINST) GO TO 901
      READ ( LWRINS , 1000 , END=100 , ERR=901 )
     &     ZINST(IPP),NATTA(IPP),LABTA(IPP),TAPLA(IPP),IFITA(IPP),
     &     ILATA(IPP),IHOTA(IPP)
      CALL CLTOU(ZINST(IPP))
      GO TO 15
C Reading finished normally :
 100  CONTINUE
      CLOSE ( LWRINS )
C
C Now build a temporary 'RTHO' bank from these values :
C ( it will replace 'BTHO' in BKUPDF , after reading the database ) :
C
      NPT=IPP-1
      CALL BKFMT('RTHO','2I,(3A,3I)')
      LRTHO=LMHLEN+NPT*LBTHOA
      CALL AUBOS('RTHO',1,LRTHO,JRTHO,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JRTHO+LMHROW)=NPT
      IW(JRTHO+LMHCOL)=LBTHOA
      DO 170 IKK=1,NPT
         KRTHO=KROW(JRTHO,IKK)
         IW(KRTHO+JBTHNL)=INTCHA('    ')
         IW(KRTHO+JBTHNL+1)=INTCHA('    ')
         CALL ALINST(ZINST(IKK),IW(KRTHO+JBTHNL),IB1)
         WORR=' '
         WORR(1:2)=TAPLA(IKK)
         WORR(3:3)=NATTA(IKK)
         WORR(4:4)=LABTA(IKK)
         IW(KRTHO+JBTHTA)=INTCHA(WORR)
         IW(KRTHO+JBTHFI)=IFITA(IKK)
         IW(KRTHO+JBTHLA)=ILATA(IKK)
         IW(KRTHO+JBTHHO)=IHOTA(IKK)
 170  CONTINUE
      CALL AUBPRS('RTHO')
      GO TO 999
C No room for bank 'RTHO' :
 900  IERB=1
      GO TO 999
C Problem in reading a file :
 901  IERB=2
C
 999  RETURN
 1000 FORMAT (A8,13X,A1,1X,A1,3X,A2,3X,I4,3X,I4,9X,I3)
      END
      SUBROUTINE BKADSD(IERB)
C-----------------------------------------------------------------------
CKEY STEER
C! Reads DESCDBAS LISTE reference file
C  J. Boucrot    06-Apr-1989  , modified 18-Mar-1996
C Called from BKADMI                                       from BOOKLIB
C Calls AUBOS,ALINST,AUBPRS                                from ALEPHLIB
C Calls BKFMT                                              from BOSLIB
C  Output argument :
C   IERB  = 0 if all OK
C         = 1 if no room for bank 'RDAD'
C         = 2 if error in reading the file
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER A*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IERB=0
C
C Open DESCDBAS  LISTE file containing the description of databases
C definitions and properties :
C
      A=' '
      A=ALS_REFR(1:ILREFR)//'descdbas.liste'
      A=A(1:LNBLNK(A))
      OPEN ( LECPHY , FILE = A , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C
C Read the file and fill variables in common / BKFILU / :
C
      IPP=0
 15   IPP=IPP+1
      READ (LECPHY,1002,END=16,ERR=901)
     &     LISNRB(IPP),NPERMI(IPP),NPERMX(IPP),PERDBS(IPP),BANDBS(IPP)
      CALL CLTOU(PERDBS(IPP))
      CALL CLTOU(BANDBS(IPP))
      GO TO 15
 16   NDBTOT=IPP-1
      REWIND(UNIT=LECPHY)
C
C Now build a temporary 'RDAD' bank from these values :
C ( it will replace 'BDAD' in BKUPDF , after reading the database ) :
C
      CALL BKFMT('RDAD','2I,(3I,27A)')
      LRDAD=LMHLEN+NDBTOT*LBDADA
      CALL AUBOS('RDAD',1,LRDAD,JRDAD,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JRDAD+LMHROW)=NDBTOT
      IW(JRDAD+LMHCOL)=LBDADA
      DO 17 IKK=1,NDBTOT
         KRDAD=KROW(JRDAD,IKK)
         IW(KRDAD+JBDANR)=LISNRB(IKK)
         IW(KRDAD+JBDAPM)=NPERMI(IKK)
         IW(KRDAD+JBDAPX)=NPERMX(IKK)
         DO 50 IVV=JBDANB,LBDADA
 50      IW (KRDAD+IVV)=INTCHA('    ')
         CALL ALINST(PERDBS(IKK),IW(KRDAD+JBDANB),IB4)
         CALL ALINST(BANDBS(IKK),IW(KRDAD+JBDALB),IB5)
 17   CONTINUE
      CLOSE ( LECPHY )
      CALL AUBPRS('RDAD')
      GO TO 999
C No room for bank 'RDAD' :
 900  IERB=1
      GO TO 999
C Problem in reading a file :
 901  IERB=2
C
 999  RETURN
C-----------------------------------------------------------------------
 1002 FORMAT (3I6,2X,A8,2X,A100)
      END
      SUBROUTINE BKBBUF(LUN,IOK,NRECS,IBLKS,QMBYT)
C ----------------------------------------------------------------------
C! Gets file parameters from BOS internal bank '+BUF'
CKEY  BOOK +BUF / INTERNAL
C  J. Boucrot         3-Nov-1988
C  Called from BKBTAP , but also callable by USER
C  Input argument :  LUN  = Output Fortran logical unit number
C  Output arguments :
C     IOK  =  1 if  LUN  found in +BUF bank and LUN in write mode  ;
C     IOK  =  0 if  LUN  not found
C     IOK  = -1 if  LUN found but not in write mode
C The following arguments are meaningful only if IOK = 1  :
C    NRECS =  number of records written on unit LUN
C    IBLKS =  size of record , in 32 bit words
C    QMBYT =  number of Megabytes of information written on LUN
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C ----------------------------------------------------------------------
      IOK=0
      NRECS=0
      IBLKS=0
      QMBYT=0.
C
      IBUF=NAMIND('+BUF')+1
C Implicit loop on all banks '+BUF' :
 1    JBUF=IW(IBUF-1)
      IF (JBUF.EQ.0) GO TO 999
      LULO=IW(JBUF-2)
      IF (LULO.NE.LUN) GO TO 100
C LUN is on bank '+BUF' : get values for output arguments :
      IOK=-1
C
C Number of Mbytes , Block size , Number of record written :
C
      QMBYT=RW(JBUF+8)
      IBLKS=IW(JBUF+2)
      NRECS=IW(JBUF+6)
      IF (QMBYT.GT.0.) IOK=1
      GO TO 999
C
C Go to next bank :
C
 100  IBUF=JBUF
      GO TO 1
C
 999  RETURN
      END
      SUBROUTINE BKBBUP(IERB)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Updates /BKFILU/ from reference banks
C  J. Boucrot   19-Mar-1996
C  Modified for LEP2 Physics Tools/Groups 11-Sep-1997
C Called from BKSEAR                                   from BOOKLIB
C Calls BKPOIN                                         from BOOKLIB
C Calls ALSTIN,BKINCA                                  from ALEPHLIB
C  Output argument :
C   IERB  = 0 if all OK
C         = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER KKWOR*4,KY*2,GR*20,TST*8
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IERB=0
C
C Read the bank 'BYEA' containing the definition of Years / Runs   :
C
      CALL BKPOIN(LECDAF,'BYEA',1,JBYEA)
      IF (JBYEA.LE.0) GO TO 905
      NTOYEA=LROWS(JBYEA)
      DO 3 IYY=1,NTOYEA
         KBYEA=KROW(JBYEA,IYY)
         LISYEA(IYY)=IW(KBYEA+JBYEYR)
         LISFRU(IYY)=IW(KBYEA+JBYEFR)
         LISLFI(IYY)=IW(KBYEA+JBYELR)
 3    CONTINUE
C-----------------------------------------------------------------------
C Read bank 'BPER' and fill table LISTFF of fill numbers :
C
      JBPER=IW(NAMIND('BPER'))
      IF (JBPER.LE.0) GO TO 905
      NBPER=LROWS(JBPER)
      maxfi=-1
      maxra=-1
      DO 10 IPER=1,NBPER
         KBPER=KROW(JBPER,IPER)
         IFILL=IW(KBPER+JBPEFE)
         CALL BKY2K(IW(KBPER+JBPEFD),10000,IYEA)
         IRANK=IUCOMP(IYEA,LISYEA,NTOYEA)
         IF (IRANK.LE.0) GO TO 10
         IF (LISTFF(IRANK).EQ.0)      LISTFF(IRANK)=IFILL
         IF (LISTFF(IRANK).GT.IFILL)  LISTFF(IRANK)=IFILL
      maxra=max0(maxra,irank)
      maxfi=max0(maxfi,ifill)
 10   CONTINUE
      KLAS=KROW(JBPER,NBPER)
      LISTFF(MAXRA+1)=MAXFI+1
      IF (MAXRA.NE.NTOYEA) LISTFF(NTOYEA)=9999
      IF (IDSEAR.EQ.0) GO TO 999
C-----------------------------------------------------------------------
C Read the bank 'BDAD' containing the definition of Year Databases :
C
      CALL BKPOIN(LECDAF,'BDAD',1,JBDAD)
      IF (JBDAD.LE.0) GO TO 905
      NDBTOT=LROWS(JBDAD)
      DO 20 IGD=1,NDBTOT
         KBDAD=KROW(JBDAD,IGD)
         LISNRB(IGD)=IW(KBDAD+JBDANR)
         NPERMI(IGD)=IW(KBDAD+JBDAPM)
         NPERMX(IGD)=IW(KBDAD+JBDAPX)
         CALL ALSTIN(IW(KBDAD+JBDANB),JBDALB-JBDANB,PERDBS(IGD))
         CALL ALSTIN(IW(KBDAD+JBDALB),LBDADA-JBDALB+1,BANDBS(IGD))
 20   CONTINUE
C-----------------------------------------------------------------------
C Read the bank 'BPHY' containing the definition of Physics Groups :
C
      CALL BKPOIN(LECDAF,'BPHY',1,JBPHY)
      IF (JBPHY.LE.0) GO TO 905
      NGROUF=LROWS(JBPHY)
      DO 120 IGR=1,NGROUF
         KBPHY=KROW(JBPHY,IGR)
         CALL ALSTIN(IW(KBPHY+JBPHKE),JBPHNA-JBPHKE,KKWOR)
         KEYWPH(IGR)=KKWOR(1:2)
         CALL CLTOU(KEYWPH(IGR))
         CALL ALSTIN(IW(KBPHY+JBPHNA),JBPHMA-JBPHNA,GROUPH(IGR))
         CALL CLTOU(GROUPH(IGR))
         CALL ALSTIN(IW(KBPHY+JBPHMA),JBPHDF-JBPHMA,MANAPH(IGR))
         CALL CLTOU(MANAPH(IGR))
         CALL ALSTIN(IW(KBPHY+JBPHDF),LBPHYA-JBPHDF+1,KEYGL2(IGR))
         CALL CLTOU(KEYGL2(IGR))
 120  CONTINUE
C
C For LEP2 Physics Groups, validate the lists LEPSGR:
C
      DO 400 ILG=4,NGROUF
         TST=MANAPH(ILG)
         IL1=BKINCA(TST(1:1))
         IF (IL1.GT.0) LEPSGR(1,ILG)=1
         IL2=BKINCA(TST(5:5))
         IF (IL2.GT.0) LEPSGR(2,ILG)=1
         IL3=BKINCA(TST(8:8))
         IF (IL3.GT.0) THEN
            LEPSGR(3,ILG)=1
            IF (KEYGL2(ILG).NE.' ') NL2GRO=NL2GRO+1
         ENDIF
         IL4=BKINCA(TST(3:3))
         IF (IL4.GT.0) LEPSGR(4,ILG)=1
 400  CONTINUE
C
      GO TO 999
C No room for banks :
 905  IERB=1
C
 999  RETURN
      END
      SUBROUTINE BKBDAT(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK INIT
C! Stores the ALSOFT 231 disk access time in 'BDAT'
C J. Boucrot  01-06-1989
C Called from BKUPDF                                from BOOKLIB
C Calls BKPOIN,BKMODI,BKFILL                        from BOOKLIB
C Calls AUBOS,AUBPRS,PRTABL                         from ALEPHLIB
C  Output argument :
C   IER = 1 NO room for bank 'BDAT' ,  = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER (NLMX = 50 )
      CHARACTER*8 VARCH(MAXCH)
      INTEGER ITAB(MAXIN)
      INTEGER ITEMP (NLMX*LBDATA)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Store the DISK access  timing in the 'BDAT' bank :
      IER=0
      DO 50 I=1,MAXCH
 50   VARCH(I)='        '
      DO 51 K=1,MAXIN
 51   ITAB(K)=INTCHA('    ')
      IOLR=0
      CALL BKPOIN(LECDAF,'BDAT',1,JBDAT)
      IF (JBDAT.LE.0) THEN
         LEND=LBDATA*NBROW+LMHLEN
      ELSE
         IF (LFRROW(JBDAT).GT.1) GO TO 60
         LEND=IW(JBDAT)+LBDATA*NBROW
         IOLR=LROWS(JBDAT)
      ENDIF
C Book or enlarge 'BDAT' :
      CALL AUBOS('BDAT',1,LEND,JBDAT,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBDAT+LMHCOL)=LBDATA
      IW(JBDAT+LMHROW)=IOLR
C Fill a new row in 'BDAT' :
 60   VARCH(1)=ACCTIM(10:17)
      VARCH(2)=ACCTIM(20:27)
      CALL BKFILL('BDAT',1,VARCH,ITAB)
      CALL BKMODI('BDAT',1,0,LBDATA,IER)
C
C Compress 'BDAT' when more than NLMX lines
C
      NRDA=LROWS(JBDAT)
      IF (NRDA.LE.NLMX) GO TO 800
      NINIT=NRDA-NLMX+1
      KPINI=KROW(JBDAT,NINIT)
      CALL UCOPY(IW(KPINI+1),ITEMP(1),NLMX*LBDATA)
      CALL UCOPY(ITEMP(1),IW(JBDAT+LMHLEN+1),NLMX*LBDATA)
      IW(JBDAT+LMHROW)=NLMX
 800  CALL AUBPRS('BDAT')
      IF (IDEBUG.EQ.1) THEN
         ISAVE=IW(6)
         IW(6)=LWRDBG
         CALL PRTABL('BDAT',1)
         IW(6)=ISAVE
      ENDIF
        IER=0
      GO TO 999
C No room for 'BDAT' :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKBDFS(IOPT,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Builds the summary banks BDFS,BOFS for the BOOK DAF
C   Author   J. Boucrot   11-Jun-1989     modified 31-Aug-1989
C   Completely rewritten 01-July-1991 ( speeded up by factor 5 )
C   Modified 28-Aug-1991 for new TMS location management
C   Modified 16-Jun-1992 for Master datasets on AM tapes ( MCarlo )
C   Modified 01-Oct-1998 : simplifications and new use of 'BLOT'
C Called from BKUPDF or BKAADS                        from  BOOKLIB
C Calls AUBOS,AUBPRS                                  from  ALEPHLIB
C Calls BKPOIN,BKMODI,BKFILB,BKGTMS                   from  BOOKLIB
C Calls BDROP,BGARB                                   from  BOSLIB
C  Input argument :
C   IOPT  = 1 for REAL DATA
C   IOPT  = 2 for SIMULATED DATA
C Output argument :
C    IER = 0 if all OK , = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      SAVE
      PARAMETER ( NPDMX = 200 , NPMMX = 100 )
      COMMON / DAMCOU / NPERDA,LISPED(NPDMX),NPERMC,LISPEM(NPMMX)
      INTEGER BKINCA,ITAB(MAXIN)
      CHARACTER TLOCA*4,OUTXT*12,SEPLO*1
      CHARACTER*8 TAPN,TAPO,TAPLO,TAPOL
      DATA SEPLO / '_' /
      DATA NPMX / 999 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IOPT.LE.0.OR.IOPT.GT.2) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1100,IOPT
      WRITE ( LWRDBG,1100 ) IOPT
C-----------------------------------------------------------------------
C Compute the length of 'BDFS' ; book the new banks 'BDFN' and 'BOFN' :
C
      CALL BKPOIN(LECDAF,'BDFS',IOPT,JBDFS)
      IF (JBDFS.LT.0) GO TO 900
      LENOL=LBDFSA*LROWS(JBDFS)+LMHLEN
      CALL AUBOS('BDFN',IOPT,LENOL,JBDFN,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBDFN+LMHCOL)=LBDFSA
      IW(JBDFN+LMHROW)=0
      CALL BKPOIN(LECDAF,'BOFS',IOPT,JBOFS)
      IF (JBOFS.LT.0) GO TO 900
      LENOF=LBOFSA*(10+LROWS(JBOFS))+LMHLEN
      CALL AUBOS('BOFN',IOPT,LENOF,JBOFN,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBOFN+LMHCOL)=LBOFSA
      IW(JBOFN+LMHROW)=0
      JBKWI=IW(NAMIND('BKWI'))
C-----------------------------------------------------------------------
C Now loop on all datasets of all periods for IOPT = nature of data :
C
      NBMIN=1
      NBMAX=NPMX
      IF ( IOPT.EQ.2) THEN
         NBMIN=NPMX+1
         NBMAX=999999
      ENDIF
      IBOFS=1
      IBOLD=0
      IBOLP=0
      NPROK=0
      NPROL=0
      JBLOT=NLINK('BLOT',IOPT)
      IF (JBLOT.LE.0) GO TO 999
      NRLOT=LROWS(JBLOT)
      JBSET=NAMIND('BSET')+1
C
 100  JBSET=IW(JBSET-1)
      IF (JBSET.EQ.0) GO TO 800
      NPER=IW(JBSET-2)
      IF (IOPT.EQ.1.AND.(NPER.LT.NBMIN.OR.NPER.GT.NBMAX)) GO TO 800
      IF (IOPT.EQ.2.AND.NPER.LT.NBMIN) GO TO 100
      IF (IOPT.EQ.2.AND.NPER.GT.NBMAX) GO TO 800
      NPROK=NPROK+1
      IBSOK=0
      IBSCO=0
      JBSRW=NLINK('BSRW',NPER)
      NBSRW=0
      IF (JBSRW.GT.0) NBSRW=IW(JBSRW)
C Store numbers from previous period in BOFN :
      IF (NPROK.GT.1) THEN
         IW(JBOFN+LMHROW)=IW(JBOFN+LMHROW)+1
         KBOFN=KROW(JBOFN,LROWS(JBOFN))
         IW(KBOFN+JBOFNP)=NPROL
         IW(KBOFN+JBOFOF)=IBOFS
         IW(KBOFN+JBOFLP)=IBOLP
         IBOFS=IBOLD
         IBOLP=0
      ENDIF
      NPROL=NPER
C
C If no update found for this period , make just a straight copy in 'BDF
C and update the pointers in 'BOFN' :
C
      IF (IOPT.EQ.1) THEN
         IDD=IUCOMP(NPER,LISPED,NPERDA)
      ELSE
         IDD=IUCOMP(NPER,LISPEM,NPERMC)
      ENDIF
      IF (JBKWI.EQ.0) GO TO 140
      IF (IDD.GT.0) GO TO 140
C Old pointers :
      KBDOF=KROW(JBOFS,NPROK)
      IF (IW(KBDOF+JBOFNP).NE.NPER) GO TO 140
      KBDON=KROW(JBOFN,LROWS(JBOFN))
      KBDFN=KNEXT(JBDFN)
      IODFS=IW(KBDOF+JBOFOF)
      LPDFS=IW(KBDOF+JBOFLP)
      KBDFS=KROW(JBDFS,IODFS)
C Copy BDFS into BDFN and update pointers :
      CALL UCOPY(IW(KBDFS+1),IW(KBDFN+1),LPDFS*LBDFSA)
      IW(JBDFN+LMHROW)=IW(JBDFN+LMHROW)+LPDFS
      IBOLD=LROWS(JBDFN)
      IBOLP=LPDFS
      IF (IBAUTO.EQ.0) PRINT 1201,NPER,LPDFS
      WRITE ( LWRDBG , 1201 ) NPER,LPDFS
      GO TO 100
C
C Modifications detected : one has to rebuild the whole period from scra
C
 140  CONTINUE
      NSETS=LROWS(JBSET)
      IF (NSETS.EQ.0) GO TO 100
C
C Loop on MASTER datasets :
C
      DO 600 ISET=1,NSETS
         KBSET=KROW(JBSET,ISET)
         IF (IW(KBSET+JBSEDF).EQ.1) GO TO 600
         IBTPN=IW(KBSET+JBSEBT)
         IF (IBTPN.EQ.0) GO TO 600
         CALL BKPOIN(LECDAF,'BTPN',NPER,JBTPN)
         IF (JBTPN.LE.0) GO TO 900
         KBTPN=KROW(JBTPN,IBTPN)
         NBSOL=ISET
         IF (NBSRW.GT.0) NBSOL=IUCOMP(ISET,IW(JBSRW+1),NBSRW)
         IF (NBSOL.EQ.0) GO TO 600
         CALL VZERO(ITAB,MAXIN)
         CALL ALSTIN(IW(KBTPN+JBTPVS),2,TAPN)
         JA=IW(KBTPN+JBTPVS)
         JB=IW(KBTPN+JBTPVS+1)
         DO 150 ISK=JBDFTC,JBDFCO-1
 150     ITAB(ISK)=INTCHA('    ')
         CALL UCOPY(IW(KBTPN+JBTPVS),ITAB(JBDFTC),2)
         ITAB(JBDFNP)=NPER
         ITAB(JBDFNR)=ISET
C Get file # from bank 'BPRO' and put in in JBDFFN:
C If still i n old format, take the file # from the BTPN name:
         JBPRO=NLINK('BPRO',NPER)
         IF (JBPRO.EQ.0) GO TO 900
         IBPRO=IW(KBSET+JBSEBP)
C Check if IBPRO exists and find the default file #
         IF (TAPN(7:8).EQ.'  ') THEN
            IFILP=1
         ELSE
            IFILP=BKINCA(TAPN(7:8))
         ENDIF
         IF (IBPRO.LE.0) GO TO 155
C file # from BPRO :
         KBPRO=KROW(JBPRO,IBPRO)
         IFILP=IW(KBPRO+JBPRDD)
         IF (IFILP.GT.NPMX) IFILP=BKINCA(TAPN(7:8))
 155     ITAB(JBDFFN)=IFILP
C take the TMS tape location from the bank 'BLOT' written by BKSTLO :
         TAPLO=TAPN(1:6)//'  '
         J1=INTCHA(TAPLO(1:4))
         J2=INTCHA(TAPLO(5:8))
         NBLOT=0
         ILOCA=INTCHA('    ')
         DO 160 KKR=1,NRLOT
            KBLOT=KROW(JBLOT,KKR)
            IF (IW(KBLOT+JBDFTC).NE.J1) GO TO 160
            IF (IW(KBLOT+JBDFTC+1).NE.J2) GO TO 160
            ILOCA=IW(KBLOT+JBDFLO)
            NBLOT=1
            GO TO 170
 160     CONTINUE
         IF (NBLOT.EQ.0) THEN
            CALL BKGTMS(TAPN(1:6),6,IFOUN,OUTXT)
            WRITE ( LWRDBG,1112) TAPN,OUTXT(1:12)
            IF (IFOUN.NE.1) GO TO 200
            INOLO=INDEX(OUTXT,SEPLO)
            TLOCA=OUTXT(INOLO+1:INOLO+4)
             IF (INDEX(OUTXT,'STK').GT.0) TLOCA='STK '
            ILOCA=INTCHA(TLOCA)
         ENDIF
 170     ITAB(JBDFLO)=ILOCA
C dataset OK : put it in a new row of 'BDFN' :
 200     CALL BKFILB('BDFN',IOPT,ITAB,LBDFSA,NOU,IEOU)
         IF (IEOU.EQ.2) GO TO 900
         IF (IEOU.EQ.1) THEN
            JBDFS=NLINK('BDFS',IOPT)
            JBSET=NLINK('BSET',NPER)
         ENDIF
         IBSOK=IBSOK+1
C now search for all possible copies of this master dataset in 'BDFS' :
         IBOLD=NOU
         IBOLP=IBOLP+1
         CALL BKPOIN(LECDAF,'BDFS',IOPT,JBDFS)
         IF (JBDFS.LE.0) GO TO 900
         NDF=LROWS(JBDFS)
         DO 500 IDF=1,NDF
            KBDFS=KROW(JBDFS,IDF)
            IF (IW(KBDFS+JBDFDF).NE.0) GO TO 500
            IF (IW(KBDFS+JBDFNP).NE.NPER) GO TO 500
            IF (IW(KBDFS+JBDFNR).NE.NBSOL) GO TO 500
C This tape must be different from the master !
            IF (IW(KBDFS+JBDFTC).EQ.JA.AND.IW(KBDFS+JBDFTC+1).EQ.JB)
     +          GO TO 500
            IF (IW(KBDFS+JBDFCO).NE.1) GO TO 500
C copy found : put it in a new row of 'BDFN' :
            CALL VZERO(ITAB,MAXIN)
            DO 250 ISK=JBDFTC,JBDFCO-1
 250        ITAB(ISK)=INTCHA('    ')
            CALL UCOPY(IW(KBDFS+JBDFTC),ITAB(JBDFTC),2)
            ITAB(JBDFNP)=NPER
            ITAB(JBDFNR)=ISET
            ITAB(JBDFCO)=1
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPO)
            IFILC=IW(KBDFS+JBDFFN)
            IF (IFILC.EQ.0) THEN
               IF (TAPO(7:8).EQ.'  ') THEN
                  IFILC=1
               ELSE
                  IFILC=BKINCA(TAPO(7:8))
               ENDIF
            ENDIF
            ITAB(JBDFFN)=IFILC
C take the TMS tape location from the bank 'BLOT' written by BKSTLO :
            TAPOL=TAPO(1:6)//'  '
            J1=INTCHA(TAPOL(1:4))
            J2=INTCHA(TAPOL(5:8))
            NBLOT=0
            ILOCA=INTCHA('    ')
            DO 260 KKN=1,NRLOT
               KBLOT=KROW(JBLOT,KKN)
               IF (IW(KBLOT+JBDFTC).NE.J1) GO TO 260
               IF (IW(KBLOT+JBDFTC+1).NE.J2) GO TO 260
               ILOCA=IW(KBLOT+JBDFLO)
               NBLOT=1
               GO TO 270
 260        CONTINUE
            IF (NBLOT.EQ.0) THEN
               CALL BKGTMS(TAPO(1:6),6,IFOUN,OUTXT)
               WRITE ( LWRDBG,1112) TAPO,OUTXT(1:12)
               IF (IFOUN.NE.1) GO TO 400
               INOLO=INDEX(OUTXT,SEPLO)
               TLOCA=OUTXT(INOLO+1:INOLO+4)
               IF (INDEX(TLOCA,'1').GT.0) TLOCA='1   '
 265           ILOCA=INTCHA(TLOCA)
            ENDIF
 270        ITAB(JBDFLO)=ILOCA
 400        CALL BKFILB('BDFN',IOPT,ITAB,LBDFSA,NOUC,IEOUC)
            IF (IEOUC.EQ.2) GO TO 900
            IF (IEOUC.EQ.1) THEN
               JBDFS=NLINK('BDFS',IOPT)
               JBSET=NLINK('BSET',NPER)
            ENDIF
            IBSCO=IBSCO+1
            IBOLD=NOUC
            IBOLP=IBOLP+1
 500     CONTINUE
 600  CONTINUE
      IF (IBAUTO.EQ.0) PRINT 1101,NPER,IBSOK,IBSCO
      WRITE ( LWRDBG,1101) NPER,IBSOK,IBSCO
C go to next 'BSET' period :
      GO TO 100
C-----------------------------------------------------------------------
C Store last period in 'BOFN' :
 800  CONTINUE
      IW(JBOFN+LMHROW)=IW(JBOFN+LMHROW)+1
      KBOFN=KROW(JBOFN,LROWS(JBOFN))
      IW(KBOFN+JBOFNP)=NPROL
      IW(KBOFN+JBOFOF)=IBOFS
      IW(KBOFN+JBOFLP)=IBOLP
C Drop old banks 'BDFS' and 'BOFS' ; book and fill the new ones :
      IND=NDROP('BDFS',IOPT)
      IND=NDROP('BOFS',IOPT)
      CALL BGARB(IW)
      CALL BKPOIN(LECDAF,'BDFN',IOPT,JBDFN)
      IF (JBDFN.LE.0) GO TO 900
      LENBD=LMHLEN+LBDFSA*LROWS(JBDFN)
      CALL AUBOS('BDFS',IOPT,LENBD,JBNEW,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      CALL UCOPY(IW(JBDFN+1),IW(JBNEW+1),LENBD)
      CALL BKPOIN(LECDAF,'BOFN',IOPT,JBOFN)
      IF (JBOFN.LE.0) GO TO 900
      LBOFN=LMHLEN+LBOFSA*LROWS(JBOFN)
      CALL AUBOS('BOFS',IOPT,LBOFN,JBONW,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      CALL UCOPY(IW(JBOFN+1),IW(JBONW+1),LBOFN)
      IND=NDROP('BDFN',IOPT)
      IND=NDROP('BOFN',IOPT)
      CALL BKMODI('BDFS',IOPT,0,LENBD,IERMO)
      IF (JBKWI.GT.0) THEN
         CALL BKBOFS(IOPT,IER)
         IF (IER.NE.0) GO TO 900
      ENDIF
      IER=0
      GO TO 999
C
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/12X,'=== Subroutine BKBDFS === : Start updating',
     +        ' BDFS bank number',I5)
 1101 FORMAT (18X,' Period',I5,' updated : Master Datasets = ',I5 ,
     +        '  Copies = ', I5)
 1112 FORMAT (22X,' == New location for TAPE ',2X,A8,2X,A12)
 1115 FORMAT (25X,' ++ Location for TAPE ',2X,A8,2X,A4)
 1201 FORMAT (18X,' Period',I5,' copied with ',I5,'  datasets')
      END
      SUBROUTINE BKBFVX(IRUN,NADAT,TAPE)
C----------------------------------------------------------------------
CKEY LISTSCAN / VAX
C! Fills internal bank 'BFVX' ( ALWS only )
C  Author  J. Boucrot 20-Sep-1993
C  Called from BKLISF
C  Input arguments :
C     IRUN = Run Number
C    NADAT = Nature of data ( POT or DST )
C     TAPE = Name of tape or P00xxxxx file
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( JBFVRN=1,JBFVPO=2,JBFVDS=4,LBFVXA=5)
      CHARACTER TAPE*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
 999  RETURN
      END
      SUBROUTINE BKBLAN(NAME,VARCH,ITAB)
C ----------------------------------------------------------------------
C! Initializes Bookkeeping bank with name 'NAME'
CKEY ALBOOK INIT BANK / INTERNAL
C  J. Boucrot       25-Aug -1989
C Calls BKCHIN                                     from ALEPHLIB
C Input arguments :
C  NAME = 4-character name of the bank
C VARCH = Input character elements of the bank
C  ITAB = Input integer elements of the bank ( must be put at the locati
C         defined by the HAC common / NAMEJJ / by the calling routine )
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
       COMMON / BKWORK / JCBDES
       CHARACTER* (*) VARCH(*)
       CHARACTER*4 NAME
       INTEGER ITAB(*),ITBLO(NBROW)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
       DO 1 IL=1,MAXCH
 1     ITBLO(IL)=0
       DO 2 IK=1,MAXIN
 2     ITAB(IK)=0
       IF (JCBDES.EQ.0) GO TO 999
       INAM=INTCHA(NAME)
C For banks which contain integer representation of character variables
C Find the row # of the description of bank NAME in work bank JCBDES
       ILOC=1
       NRRDS=LROWS(JCBDES)
       DO 10 IR=1,NRRDS
          IF (ITABL(JCBDES,IR,JBDEBN).EQ.INAM) GO TO 20
          ILOC=ILOC+1
 10    CONTINUE
 20    CONTINUE
       IF (ILOC.GT.NRRDS) GO TO 999
C
C Initialize the character variables to BLANK :
C each with the appropriate length
C
       NUMCH=ITABL(JCBDES,ILOC,JBDENC)
       IF (NUMCH.LE.1)  GO TO 999
       ITLCH=KROW(JCBDES,ILOC)+JBDELS
       CALL UCOPY(IW(ITLCH),ITBLO(1),NUMCH)
       DO 51 IC=2,NUMCH
          NWDS=ITBLO(IC)-ITBLO(IC-1)
          IFI=1
          DO 50 IK=1,NWDS
             VARCH(IC-1)(IFI:IFI+3)='    '
             IFI=IFI+4
 50       CONTINUE
 51    CONTINUE
C
 999     RETURN
         END
      SUBROUTINE BKBMCL(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Builds the bank 'BMCL' at the end of UPDABOOK
C  J. Boucrot 02-Apr-1991  - Modified 01-12-1991 for real data
C  Completely rewritten 19-Dec-1992 for MC year of geometry
C  Called from BKUPDF                               from BOOKLIB
C  Calls BKPOIN,BKFILB,BKCHKT,BKCHHO,BKLVPR         from BOOKLIB
C  Calls ALSTIN,AUBOS,BKINCA                        from ALEPHLIB
C   Output argument :
C  IER = 1  if no room to book bank 'BMCL'
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
      PARAMETER ( NKINS = 80 , NBM = 14 )
      CHARACTER TAPN*8
      INTEGER BKINCA,LIBM(NBM)
      PARAMETER (NYTOT = 20)
      COMMON / RAWSTAT / IFDYEA,NYEAOK,NRDYEA(NYTOT),IMBYEA(NYTOT)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IBUPDA.EQ.0) GO TO 999
      NPMX=999
      IF (IBAUTO.EQ.0) PRINT 1100
      WRITE ( LWRDBG,1100 )
C Define the different banks 'BMCL' :
      CALL VZERO(LIBM,NBM)
      LIBM(1)=1
      LIBM(2)=2
      CALL UCOPY(LISYEA(2),LIBM(3),NTOYEA-2)
      NBMX=NTOYEA
C Drop the previous banks 'BMCL' , book the new ones :
      CALL BDROP(IW,'BMCL')
      DO 5 IN=1,NBMX
         IMM=LIBM(IN)
         LENBM=LMHLEN+NLABOK*LBMCLA*NKINS
         CALL AUBOS('BMCL',IMM,LENBM,JBMCL,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JBMCL+LMHLEN)=0
         IW(JBMCL+LMHCOL)=LBMCLA
 5    CONTINUE
C Now Book the data banks for stats on reprocessings :
C  'BMCL' , NR = 100000 + 10*IYEAR + Processing Level
C              Processing level :  1 = TEST  2 = Final
C                                  3 = Previous  4 = Old
      DO 9 IYE=1,NTOYEA-1
         NRY=100000+10*LISYEA(IYE)
         DO 7 IPLV=1,4
            NRB=NRY+IPLV
            LENBB=LMHLEN+NLABOK*LBMCLA
            CALL AUBOS('BMCL',NRB,LENBB,JBMCD,IGARB)
            IF (IGARB.EQ.2) GO TO 900
            IW(JBMCD+LMHROW)=NLABOK
            IW(JBMCD+LMHCOL)=LBMCLA
            DO 6 IPK=1,NLABOK
               KBMCD=KROW(JBMCD,IPK)
               IW(KBMCD+JBMCLA)=IPK
 6          CONTINUE
 7       CONTINUE
 9    CONTINUE
      JBPER=IW(NAMIND('BPER'))
      NBPER=LROWS(JBPER)
      JBLPR=IW(NAMIND('BLPR'))
      NBLPR=LROWS(JBLPR)
C----------------------------------------------------------------------
C
C Loop on all 'BSET' banks  :
C
      JBSET=NAMIND('BSET')+1
 10   JBSET=IW(JBSET-1)
      IF (JBSET.EQ.0) GO TO 180
      NPER=IW(JBSET-2)
      IMCD=1
      IF (NPER.GT.NPMX) IMCD=2
C Fill the two words of 'BMCL' for Period and Homelab :
      NMMI=1
      NMMX=1
      IF (IMCD.EQ.2) THEN
         NMMI=2
         NMMX=NBMX
      ENDIF
      DO 150 INN=NMMI,NMMX
         IMBL=1
         IF (IMCD.EQ.2) IMBL=LIBM(INN)
         JBMCL=NLINK('BMCL',IMBL)
         DO 100 IK=1,NLABOK
            IW(JBMCL+LMHLEN)=IW(JBMCL+LMHLEN)+1
            KK=LROWS(JBMCL)
            KBMCL=KROW(JBMCL,KK)
            IW(KBMCL+JBMCKG)=NPER
            IW(KBMCL+JBMCLA)=IK
 100     CONTINUE
 150  CONTINUE
C  go to next 'BSET' bank :
      GO TO 10
 180  CONTINUE
C----------------------------------------------------------------------
C Build the statistics on RAW data (put in common /RAWSTAT/ ):
      CALL BKRAWSTA(IER)
      IF (IER.NE.0) GO TO 900
C Now loop on all datasets to fill the BMCL banks :
      DO 600 IMCDAT=1,2
         CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
         IF (JBDFS.LE.0) GO TO 600
         NBDFS=LROWS(JBDFS)
         DO 500 ISET=1,NBDFS
            KBDFS=KROW(JBDFS,ISET)
            NPER=IW(KBDFS+JBDFNP)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPN)
            CALL BKCHKT(TAPN,ICERN,IMULT,IDLT,IERB)
            IF (IERB.NE.0) GO TO 500
            NSTS=1
            IF (ICERN.NE.0) THEN
               IF (IMCDAT.EQ.1.AND.IW(KBDFS+JBDFCO).NE.0) GO TO 500
               ILABO=1
               GO TO 210
            ENDIF
            ILABO=0
            CALL BKCHHO(TAPN,ICRN,IHOML,IMULT,IXAB,IDLT,I34,IEROR)
            IF (IEROR.EQ.0) ILABO=IHOML
 210        IF (ILABO.EQ.0) GO TO 500
C Get the nature of data :
            NROSE=IW(KBDFS+JBDFNR)
            CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
            IF (JBSET.LE.0) GO TO 500
            KBSET=KROW(JBSET,NROSE)
            IDAT=NNDAT
            IDS=MOD(IW(KBSET+JBSEND),10)
            IF (IDS.GT.0.AND.IDS.LT.NNDAT) IDAT=IDS
C Special count of dataset number for AR Raw DLT's :
            IF (ICERN.EQ.1.AND.IDS.EQ.2.AND.TAPN(1:2).EQ.'AR') THEN
               IBS1=IW(KBSET+JBSEBA)
               IBS2=IW(KBSET+JBSEBR)
               NSTS=IBS2-IBS1+1
            ENDIF
C Get the right BMCL bank number :
            IF (IMCDAT.EQ.1) THEN
               IBMCB=1
            ELSE
               IBSPF=IW(KBSET+JBSEBS)
               CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
               IF (JBSPF.LE.0) GO TO 500
               KBSPF=KROW(JBSPF,IBSPF)
               CALL BKY2K(IW(KBSPF+JBSPRG),100,IBMCB)
            ENDIF
            JBMCL=NLINK('BMCL',IBMCB)
            IF (JBMCL.EQ.0) GO TO 500
C Find the right row in 'BMCL' :
            IRB=0
            NBMCL=LROWS(JBMCL)
            DO 300 II=1,NBMCL
               KBMCL=KROW(JBMCL,II)
               IF (IW(KBMCL+JBMCKG).NE.NPER)  GO TO 300
               IF (IW(KBMCL+JBMCLA).NE.ILABO) GO TO 300
               IRB=II
               GO TO 310
 300        CONTINUE
 310        IF (IRB.EQ.0) GO TO 500
C Increment the # of counts in bank 'BMCL' , NR = IBMCB
            KKMCL=KROW(JBMCL,IRB)
            IW(KKMCL+JBMCTO)=IW(KKMCL+JBMCTO)+NSTS
            IW(KKMCL+JBMCTO+IDAT)=IW(KKMCL+JBMCTO+IDAT)+NSTS
C Do the same for the general MC bank , if needed :
            IF (IMCDAT.EQ.1) GO TO 312
            JBMC2=NLINK('BMCL',IMCDAT)
            IF (JBMC2.EQ.0) GO TO 500
            KBMC2=KROW(JBMC2,IRB)
            IW(KBMC2+JBMCTO)=IW(KBMC2+JBMCTO)+NSTS
            IW(KBMC2+JBMCTO+IDAT)=IW(KBMC2+JBMCTO+IDAT)+NSTS
C For real data , get the year of processing :
 312        IYED=0
            DO 320 IRP=1,NBPER
               KBPER=KROW(JBPER,IRP)
               IF (IW(KBPER+JBPEPN).NE.NPER) GO TO 320
               CALL BKY2K(IW(KBPER+JBPEFD),10000,IYEA)
               DO 315 IYY=1,NTOYEA-1
                  IF (LISYEA(IYY).NE.IYEA) GO TO 315
                  IYED=IYY
                  GO TO 330
 315           CONTINUE
 320        CONTINUE
 330        IF (IYED.EQ.0) GO TO 500
C Now find the processing level IPRCV :
C  1 = TEST   2 = Final ( Last )   3 = Previous  4 = Old
            CALL BKLVPR(KBSET,JBLPR,IPRCV,IBID)
            IF (IPRCV.EQ.0) GO TO 500
C Increment the right value :
            INRB=100000+10*LISYEA(IYED)+IPRCV
            JBMCD=NLINK('BMCL',INRB)
            IF (JBMCD.EQ.0) GO TO 500
            KKMCD=KROW(JBMCD,ILABO)
            IW(KKMCD+JBMCTO+IDAT)=IW(KKMCD+JBMCTO+IDAT)+NSTS
            IW(KKMCD+JBMCTO)=IW(KKMCD+JBMCTO)+NSTS
            GO TO 500
 500     CONTINUE
 600  CONTINUE
C
C Put now the statistics on RAW data:
C
      IF (NYEAOK.LE.0) GO TO 800
      DO 700 IYY=1,NYEAOK
         IYEAA=IYY+IFDYEA-1
         NBMC=100000+10*IYEAA+2
         JBMCL=NLINK('BMCL',NBMC)
         IF (JBMCL.LE.0) GO TO 700
         KBMCL=KROW(JBMCL,1)
         IW(KBMCL+JBMCTO)=IW(KBMCL+JBMCTO)+NRDYEA(IYY)
         IW(KBMCL+JBMCRA)=NRDYEA(IYY)
 700  CONTINUE
C
C Processing finished :
C
 800  CONTINUE
      CALL AUBPRS('BMCL')
      GO TO 999
C No room to book bank 'BMCL' :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/22X,'=== Subroutine BKBMCL === : start building',
     +        ' banks BMCL for datasets statistics')
      END
      SUBROUTINE BKBOFS(IOPT,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Rebuilds bank BOFS at the end of BKBDFS
C   Author   J. Boucrot   11-Jun-1995
C Called from BKBDFS                                  from  BOOKLIB
C Calls AUBOS,AUBPRS                                  from  ALEPHLIB
C Calls BKPOIN,BKMODI,BKFILB,BKGTMS                   from  BOOKLIB
C Calls BDROP,BGARB                                   from  BOSLIB
C  Input argument :
C   IOPT  = 1 for REAL DATA
C   IOPT  = 2 for SIMULATED DATA
C Output argument :
C    IER = 0 if all OK , = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IOPT.LE.0.OR.IOPT.GT.2) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1100,IOPT
      WRITE ( LWRDBG,1100 ) IOPT
C Compute the length of 'BOFS' ; book the new bank 'BOFN' :
C
      CALL BKPOIN(LECDAF,'BOFS',IOPT,JBOFS)
      IF (JBOFS.LT.0) GO TO 900
      CALL BKPOIN(LECDAF,'BDFS',IOPT,JBDFS)
      IF (JBDFS.LT.0) GO TO 900
      LENOF=LBOFSA*LROWS(JBOFS)+LMHLEN
      CALL AUBOS('BOFN',IOPT,LENOF,JBOFN,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBOFN+LMHCOL)=LBOFSA
      IW(JBOFN+LMHROW)=0
C
C Now loop on all datasets of all periods for IOPT = nature of data :
C
      IBOO=1
      LBOO=0
      IOLP=-1
      DO 500 IBDFS=1,LROWS(JBDFS)
         KBDFS=KROW(JBDFS,IBDFS)
         NPER=IW(KBDFS+JBDFNP)
         IF (IBDFS.EQ.1) IOLP=NPER
C Store numbers from previous period in BOFN :
         IF (NPER.NE.IOLP) THEN
            IW(JBOFN+LMHROW)=IW(JBOFN+LMHROW)+1
            KBOFN=KROW(JBOFN,LROWS(JBOFN))
            IW(KBOFN+JBOFNP)=IOLP
            IW(KBOFN+JBOFOF)=IBOO
            IW(KBOFN+JBOFLP)=LBOO
            IOLP=NPER
            IBOO=IBDFS-1
            LBOO=0
         ENDIF
         LBOO=LBOO+1
 500  CONTINUE
C Store last period in 'BOFN' :
 800  CONTINUE
      IW(JBOFN+LMHROW)=IW(JBOFN+LMHROW)+1
      KBOFN=KROW(JBOFN,LROWS(JBOFN))
      IW(KBOFN+JBOFNP)=NPER
      IW(KBOFN+JBOFOF)=IBOO
      IW(KBOFN+JBOFLP)=LBOO
C Drop old bank 'BOFS' ; book and fill the new one :
      IND=NDROP('BOFS',IOPT)
      CALL BGARB(IW)
      CALL BKPOIN(LECDAF,'BOFN',IOPT,JBOFN)
      IF (JBOFN.LE.0) GO TO 900
      LBOFN=LMHLEN+LBOFSA*LROWS(JBOFN)
      CALL AUBOS('BOFS',IOPT,LBOFN,JBONW,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      CALL UCOPY(IW(JBOFN+1),IW(JBONW+1),LBOFN)
      IND=NDROP('BOFN',IOPT)
      CALL BKMODI('BDFS',IOPT,0,LENBD,IERMO)
      IER=0
      GO TO 999
C
 900  IER=1
 999  RETURN
 1100 FORMAT (/12X,'=== Subroutine BKBOFS === : Start updating',
     +        ' BOFS bank number',I5)
      END
      SUBROUTINE BKBOKD(IFAIL)
C ----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Updates ALEBOOK Database from a job Bookkeeping output file
C J.Boucrot  05-Dec-1988    -  Modified  30-01-1991 for TMS / 'BTPN'
C Additional protections for anomalies  24-Apr-1991  ; 22-Aug-1991
C Modified for MC datasets  with special particle code 29-Sep-1992
C   Called from BKUPDA                                     from BOOKLIB
C   Calls ALSTIN,BKTIMN,ALINST,BKCTIM                      from ALEPHLIB
C   Calls BKFPER,BKFILB,BKSSTR,BKMESG,BKMODI,BKPOIN        from BOOKLIB
C   Calls BKDAIC,BKCLVR,BKCHKT,BKBOKM,BKEXCT,BKBOKX        from BOOKLIB
C This routine has to be called 1 time for every Bookkeeping output file
C coming from a production job ( or from ALBOOK )
C Input banks correspond to new datasets from production run and have
C   NR=NPERPR
C The Database banks are updated according to the period number of the
C datasets ; tapes/cartridges successfully written are marked in bank
C 'BCAR' , their comment and datset name are updated accordingly.
C    Output argument :
C     IFAIL = 0  if all OK
C           = 1  if there was no room to update the database banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
        EXTERNAL NLINK
      PARAMETER ( IEMC = 1001  , IRUMC = 10000 , NEVTM = 5 )
      PARAMETER ( IYEMI= 1989 , IYEMX = 2001 )
        PARAMETER ( NEVMI = 500 , NWCOM = 15  , IRMA = 100000 )
        INTEGER ITAB(MAXIN),ITBCA(MAXIN),ICOMT(NWCOM),IRLIM(2)
        CHARACTER*4 VARCH(MAXCH),DDN
        CHARACTER*8 VSNTA,CTIM,CDAY,VSWR
        CHARACTER*20 NEWST,BLA
        CHARACTER VSNTP*8,FINA*2
        CHARACTER MESG*80,COMEN*60,COME1*60,COME2*60,PARNA*12
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
        IFAIL=1
        ICAWR=1
        MESG=' '
        JBSRE=NLINK('BSET',NPERPR)
        IF (JBSRE.EQ.0) GO TO 900
        NSETS=LROWS(JBSRE)
        IF (NSETS.LE.0) GO TO 900
        WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
        IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C
C Loop on all Data sets coming from the production run :
C
        DO 100 ISET=1,NSETS
C Find  Run # and Run Type #  :
           NRUN=ITABL(JBSRE,ISET,JBSEFR)
           KINGT=0
           NPER=-1
           LBRSP=ITABL(JBSRE,ISET,JBSEBS)
           JBSPF=NLINK('BSPF',NPERPR)
           IF (JBSPF.EQ.0.AND.LBRSP.EQ.0) GO TO  10
C
C Build the date for the dataset from the file name :
C
           KBSRE=KROW(JBSRE,ISET)
           CALL ALSTIN(IW(KBSRE+JBSEAD),JBSEAU-JBSEAD,NEWST)
           IF (NEWST.EQ.' ') GO TO 900
           IF (NEWST(6:6).EQ.'I') NEWST(6:6)='M'
           CALL BKCTIM(NEWST(7:17),IYEA,IMON,IDAY,IHOU,IMIN,ISEC)
           IDATE=IDAY+100*IMON+10000*IYEA
           ITIME=ISEC+100*IMIN+10000*IHOU
           KINGT=ITABL(JBSPF,LBRSP,JBSPKC)
           KINGT=MOD(KINGT,IRUMC)
C Find the Period number of this data set
           CALL BKFPER(NRUN,KINGT,NPER)
 10        CONTINUE
           IF (NPER.LE.0) THEN
              IF (IBAUTO.EQ.0) PRINT 1115,KINGT,NPER
              WRITE ( LWRDBG,1115) KINGT,NPER
              IFAIL=0
              GO TO 999
           ENDIF
           WRITE (LWRDBG,1101) ISET,NRUN,NPER
           IF (NPER.LE.0) GO TO 100
C
C Test if this dataset is really new ; if not , something is wrong !
C
           CALL BKSSTR('BSET',NPER,NEWST,JBSEAU-JBSEAD,JBSEAD,NROW)
           IF (NROW.NE.0) GO TO 97
C
C Test if this dataset is long enough to be a production ( test off if
C a data card BTST is present )
C
          IF (IW(NAMIND('BTST')).NE.0) GO TO 15
          NFRU=ITABL(JBSRE,ISET,JBSEFR)
          NLRU=ITABL(JBSRE,ISET,JBSELR)
          IF (NFRU.NE.NLRU) GO TO 15
          NEVT=ITABL(JBSRE,ISET,JBSELE)-ITABL(JBSRE,ISET,JBSEFE)
          IF (NEVT.LT.NEVTM) GO TO 99
 15       CONTINUE
C
C If the corresponding 'BPRO' bank exists, add information into it ;
C if it doesn't exist yet , create and fill it :
C
           IBPRO=0
           JBPRO=NLINK('BPRO',NPERPR)
           IF (JBPRO.EQ.0) GO TO 20
           KBPRO=KROW(JBPRO,1)
           IFILB=IW(KBPRO+JBPRDD)
           CALL BKFILB('BPRO',NPER,IW(KBPRO+1),LBPROA,IBPRO,IER)
           IF (IER.EQ.2) GO TO 910
           CALL BKMODI('BPRO',NPER,0,LBPROA,IER)
           IF (IER.NE.0) GO TO 920
C
C Same for bank 'BRLI' , only for those datasets which have
C more than one NON-EMPTY run
C
 20        IBRLF=0
           IBRLI=0
           IBRLL=0
           JBRLI=NLINK('BRLI',NPERPR)
           IF (JBRLI.EQ.0) GO TO 40
           NBRLI=LROWS(JBRLI)
           NRULI=NBRLI/NSETS
           CALL BKPOIN(LECDAF,'BRLI',NPER,JLIOL)
           IF (JLIOL.EQ.0) IBRLF=1
           IF (JLIOL.GT.0) IBRLF=LROWS(JLIOL)+1
           IBRLL=IBRLF
C
C Loop on different runs in BRLI ; they come in the following order
C with respect to the rows
C   rows 1,2,3...NSETS for 1st run and datasets 1 to NSETS
C   rows 1+NSETS , .... 2*NSETS for the 2nd dataset ,  etc ...
C
           DO 35 IRLI=1,NRULI
              KROLI=ISET+NSETS*(IRLI-1)
              KBRLN=KROW(JBRLI,KROLI)
              IF (IW(KBRLN+JBRLNE).LE.0) GO TO 35
              CALL BKFILB('BRLI',NPER,IW(KBRLN+1),LBRLIA,IBRLL,IER)
              IF (IER.EQ.2) GO TO 910
              CALL BKMODI('BRLI',NPER,0,LBRLIA,IER)
              IF (IER.NE.0) GO TO 920
 35        CONTINUE
C
C Same for bank 'BSPF'
C
 40        IBSPF=0
           IF (IER.EQ.1) JBSRE=NLINK('BSET',NPERPR)
           DO 48 IS=1,NWCOM
 48        ICOMT(IS)=INTCHA('    ')
C Is there a pointer to BSPF IN BSET ?
           IPSPF=ITABL(JBSRE,ISET,JBSEBS)
           IF (IPSPF.EQ.0) GO TO 51
           JBSPF=NLINK('BSPF',NPERPR)
           IF (JBSPF.EQ.0) GO TO 51
           IPSPF=ITABL(JBSRE,ISET,JBSEBS)
           IF (IPSPF.EQ.0) GO TO 51
           KBSPF=KROW(JBSPF,IPSPF)
C Verify if the comment is OK ; rebuild it if necessary
           CALL BKCLVR(NPERPR,NCMOD)
           IF (NCMOD.EQ.-1)  ICAWR=0
           CALL UCOPY(IW(KBSPF+JBSPCO),ICOMT(1),NWCOM)
C For MCARLO datasets , verify Year of Geometry :
           IF (NPER.LE.IEMC) GO TO 51
           INDAT=ITABL(JBSRE,ISET,JBSEND)
           CALL BKY2K(IW(KBSPF+JBSPRG),100,IGEOG)
           IF (INDAT.GE.2.AND.(IGEOG.LT.IYEMI.OR.IGEOG.GT.IYEMX)) THEN
              WRITE ( LWRDBG , 1119 ) IGEOG
              IF (IBAUTO.EQ.0) PRINT 1119,IGEOG
              GO TO 100
           ENDIF
           IKOD=IW(KBSPF+JBSPKC)
           IW(KBSPF+JBSPKC)=MOD(IKOD,IRUMC)
C For MCarlo datasets , check if special particle code given :
           IRM2=IW(KBSPF+JBSPSR)
           IF (IRM2.LT.IRMA) GO TO 51
           IPAKO=IRM2/IRMA
           JBPLI=NLINK('BPLI',1)
           IF (JBPLI.LE.0) GO TO 51
           IOKPA=0
           DO 49 IPA=1,LROWS(JBPLI)
              KBPLI=KROW(JBPLI,IPA)
              IF (IPAKO.EQ.IW(KBPLI+JBPLPC)) THEN
                 IOKPA=IPA
                 GO TO 50
              ENDIF
              IF (IPAKO.EQ.IW(KBPLI+JBPLAC)) THEN
C If antiparticle code found , replace it by the corr. particle code:
                 IOKPA=IW(KBPLI+JBPLPC)
                 IRMAR=IRM2-IPAKO*IRMA
                 IW(KBSPF+JBSPSR)=IRMAR+IRMA*IOKPA
                 GO TO 50
              ENDIF
 49        CONTINUE
 50        IF (IOKPA.EQ.0) THEN
              WRITE ( LWRDBG,1120) IPAKO
              IF (IBAUTO.EQ.0) PRINT 1120,IPAKO
              GO TO 100
           ELSE
              PARNA=' '
              CALL ALSTIN(IW(KBPLI+JBPLPN),JBPLPC-JBPLPN,PARNA)
              WRITE ( LWRDBG,1121 ) IPAKO,IOKPA,PARNA
           ENDIF
C Checks are OK : write the new bank :
 51        CALL BKFILB('BSPF',NPER,IW(KBSPF+1),LBSPFA,IBSPF,IER)
           IF (IER.EQ.2) GO TO 910
           CALL BKMODI('BSPF',NPER,0,LBSPFA,IER)
           IF (IER.NE.0) GO TO 920
C
C Same for bank 'BTAP'  : This is much more tricky , since one has
C to merge the new information from the prod. job with the old one
C stored in the 'BCAR' bank ...
C
 52        IBTPN=0
           NFTAP=0
           IF (IER.EQ.1) JBSRE=NLINK('BSET',NPERPR)
           JBTAP=NLINK('BTAP',NPERPR)
           IPTAP=ITABL(JBSRE,ISET,JBSEBT)
           IF (JBTAP.EQ.0.OR.IPTAP.EQ.0) GO TO 900
           NNTAP=LROWS(JBTAP)
C protection against pbs from Cray files :
           IF (IPTAP.EQ.0.AND.NNTAP.GT.0) IPTAP=NNTAP
           IF (IPTAP.GT.NNTAP) IPTAP=NNTAP
           IF (IPTAP.EQ.0) GO TO 90
C
           KBTAP=KROW(JBTAP,IPTAP)
           CALL ALSTIN(IW(KBTAP+JBTAVS),JBTAFO-JBTAVS,VSNTA)
C Check if this tape is an ALEPH one :
           CALL BKCHKT(VSNTA,ICERN,IMU,IDL,IERTA)
           IF (IERTA.NE.0) THEN
              WRITE ( LWRDBG , 1117 )  VSNTA
              IF (IBAUTO.EQ.0) PRINT 1117,VSNTA
              GO TO 100
           ENDIF
           IF (ICAWR.EQ.0) GO TO 100
           NFTAP=IW(KBTAP+JBTANF)
           VSNTP=VSNTA
C If file from Exabyte or DLT , keep the full tape name with file # :
           IF (IMU.NE.0.AND.VSNTP(7:8).EQ.'  '.AND.IFILB.LE.MAXBD)
     +         VSNTP(7:8)='01'
           VSWR=VSNTP
           WRITE ( LWRDBG,1102) VSWR,IFILB
C Build the small file for the Edir of this tape, if any:
           CALL BKBOKED(VSWR,IFILB)
           DO 56 IL=1,MAXIN
 56        ITAB(IL)=0
C Copy the new information from the production job :
           CALL UCOPY(IW(KBTAP+JBTPVS),ITAB(JBTPVS),LBTPNA)
           CALL ALINST(VSNTP,ITAB(JBTPVS),NNW)
C Store all these informations on the 'BTPN' bank of the Master DAF :
           CALL BKFILB('BTPN',NPER,ITAB(JBTPVS),LBTPNA,IBTPN,IER)
           IF (IER.EQ.2) GO TO 910
           CALL BKMODI('BTPN',NPER,0,LBTPNA,IER)
           IF (IER.NE.0) GO TO 920
C
C This tape/cartridge is now considered as successfully written ;
C  Store the informations in intermediate bank BCAR , NR = 1000
C  for further update of the TMS database in routine BKUTMS
C
 70        CALL VZERO(ITAB,MAXIN)
           CALL VZERO(ITBCA,MAXIN)
           DO 75 IKS=JBCAVS,JBCAWN-1
 75        ITAB(IKS)=INTCHA('    ')
           CALL ALINST(VSNTA,ITAB(JBCAVS),NBDS)
           ITAB(JBCARF)=2
C New dataset name :
           CALL UCOPY(IW(KBSRE+JBSEAD),ITAB(JBCADN),JBSEAU-JBSEAD)
C New owner :
           CALL UCOPY(IW(KBSRE+JBSEAU),ITAB(JBCAON),JBSEFR-JBSEAU)
C New comment :
           CALL UCOPY(ICOMT(1),ITAB(JBCACM),NWCOM)
C Date/time of writing :
           CALL BKDAIC(1,IDATE,ITIME,CDAY,CTIM)
           CALL ALINST(CDAY,ITAB(JBCARD),NBD)
           CALL ALINST(CTIM,ITAB(JBCART),NBT)
           CALL UCOPY(ITAB(1),ITBCA(1),LBCARA)
C
C Now one has to update the 'BSET' bank . The information from the
C production job is stored , but the pointers to banks are updated :
C
 90        CONTINUE
           IF (IER.EQ.1) THEN
              JBSRE=NLINK('BSET',NPERPR)
              KBSRE=KROW(JBSRE,ISET)
           ENDIF
           DO 91 IS=1,MAXIN
 91        ITAB(IS)=0
           CALL UCOPY(IW(KBSRE+JBSEAD),ITAB(JBSEAD),JBSEBN)
           ITAB(JBSEDF)=0
           ITAB(JBSEWD)=IDATE
           ITAB(JBSEWH)=ITIME
           ITAB(JBSEBP)=IBPRO
           ITAB(JBSEBT)=IBTPN
           ITAB(JBSEBA)=IBRLF
           ITAB(JBSEBR)=IBRLL
           ITAB(JBSEBS)=IBSPF
C For real data , the time for writing is given in 0.01 secs ....
           IF (NEWST(1:1).EQ.'D') ITAB(JBSEWH)=ITAB(JBSEWH)/100
C Add the new row in 'BSET' , NR=NPER :
           CALL BKFILB('BSET',NPER,ITAB,LBSETA,IBSET,IER)
           IF (IER.EQ.2) GO TO 910
           CALL BKMODI('BSET',NPER,0,LBSETA,IER)
           IF (IER.NE.0) GO TO 920
C
C Now one has to update the 'BDFS' bank : first determine if there was
C already a dataset on tape VSNTA ; if yes discard old dataset .
C
           IMCD=1
           IF (NRUN.LT.LRUNMC) IMCD=2
C Check if a dataset existed already on VSNTP :
           CALL BKBOKST(IMCD,VSNTP,IFILB,IERCH)
           IF (IERCH.NE.0) GO TO 910
C Now add the new row in 'BDFS' :
           CALL VZERO(ITAB,MAXIN)
           DO 96 IS=JBDFTC,JBDFCO-1
 96        ITAB(IS)=INTCHA('    ')
           CALL ALINST(VSNTP,ITAB(JBDFTC),NW)
           ITAB(JBDFNP)=NPER
           ITAB(JBDFNR)=IBSET
           ITAB(JBDFFN)=IFILB
           CALL BKFILB('BDFS',IMCD,ITAB,LBDFSA,LROU,IER)
           IF (IER.EQ.2) GO TO 910
           WRITE ( LWRDBG,1118 ) LROU,NPER,IBSET
C
C For CERN MC master datasets , check if there were not previous
C Homelabs datasets which have to become copies of it :
C
           IF (IMCD.EQ.2.AND.IBSET.GT.0.AND.ICERN.NE.0) THEN
              CALL BKBOKM(IBSET,JBSRE,JBPRO,JBSPF,JBRLI,JBTAP,IERM)
              IF (IERM.NE.0) GO TO 910
           ENDIF
C Don't write on BCAR several times the same tape for TMS update :
           CALL BKPOIN(LECDAF,'BCAR',1000,JBCAR)
           IF (JBCAR.LE.0) GO TO 104
           DO 101 IBCAR=1,LROWS(JBCAR)
              KBCAR=KROW(JBCAR,IBCAR)
              CALL ALSTIN(IW(KBCAR+JBCAVS),2,VSWR)
              IF (VSWR(1:6).EQ.VSNTA(1:6))  GO TO 100
 101       CONTINUE
 104       CONTINUE
C Now store the infos on VSNTA in the temporary bank BCAR,NR=1000 :
           CALL BKFILB('BCAR',1000,ITBCA,LBCARA,NOU,IEOU)
           IF (IEOU.EQ.2) GO TO 910
           CALL BKMODI('BCAR',1000,0,LBCARA,IER)
           GO TO 100
C Error messages ( for information only ) :
C The current "new" dataset was already on the database !
C
 97    BLA=NEWST
       IVAL=NROW
       MESG=' ++ Error in BKBOKD : dataset already existing'
       CALL BKMESG(BLA,IVAL,MESG)
       IF (IBAUTO.EQ.0) PRINT 1103,MESG(1:LNBLNK(MESG))
       WRITE ( LWRDBG , 1103) MESG(1:LNBLNK(MESG))
       GO TO 100
C
C The dataset contains too few data and comes certainly from a test run
C
 99   BLA=NEWST
      IVAL=NEVT
      MESG= ' ++ Error in BKBOKD : DATASET too small - NOT stored'
      CALL BKMESG(BLA,IVAL,MESG)
      IF (IBAUTO.EQ.0) PRINT 1103,MESG(1:LNBLNK(MESG))
      WRITE ( LWRDBG , 1103) MESG(1:LNBLNK(MESG))
C-----------------------------------------------------------------------
C End of loop on all input datasets of the current file :
C
 100    CONTINUE
C
C DROP all banks with NR=NPERPR
C
        IN=NDROP('BSET',NPERPR)
        IN=NDROP('BPRO',NPERPR)
        IN=NDROP('BRUN',NPERPR)
        IN=NDROP('BRLI',NPERPR)
        IN=NDROP('BSPF',NPERPR)
        IN=NDROP('BTAP',NPERPR)
        CALL BGARB(IW)
C
        IFAIL=0
        NBDFDO=NBDFDO+1
        GO TO 999
C-----------------------------------------------------------------------
C Error messages :
C No BSET bank on input : give information but do not stop the UPDATE
 900   BLA=' '
       IVAL=0
       MESG=' ++ Error in BKBOKD : Anomalies in Request File'
       LM=LNBLNK(MESG)
       CALL BKMESG(BLA,IVAL,MESG(1:LM))
       IFAIL=0
       GO TO 999
C
C No space to book/enlarge banks : fatal error , job will stop
 910   IFAIL=1
       GO TO 999
C No more room in /BKFILU/ to store the modified banks
C ( should never happen ... )
 920   BLA=' '
       IVAL=0
       MESG=' ++ Error in BKBOKD : NMODIF too big !'
       LM=LNBLNK(MESG)
       CALL BKMESG(BLA,IVAL,MESG(1:LM))
       IFAIL=1
 999   RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/2X,'=== Subroutine BKBOKD ===   : Start processing',
     +        ' Request File',I5,2X,A25/)
 1101 FORMAT (7X,'+++ BKBOKD ISET,RUN,PER=',3I10)
 1102 FORMAT (7X,'+++ BKBOKD NEW Cartridge OK Tape, File = ',2X,A8,I6)
 1103 FORMAT (/5X,100(1H*),/12X,A60,/5X,100(1H*))
 1115 FORMAT (/' ** BKBOKD Anomalous dataset KINGT,NPER=',2I9)
 1118 FORMAT (15X,'+++ New dataset stored in BDFS ,NP,NROW =',3I9)
 1117 FORMAT (/5X,100(1H*),/5X,' **** BKBOKD WARNING !! ****  Tape ',
     +        2X,A8,' is NOT an ALEPH tape -- Dataset ignored !',
     +        /5X,100(1H*))
 1119 FORMAT (/5X,100(1H*),/5X,' **** BKBOKD WARNING !! **** MCarlo ',
     +        ' dataset has anomalous year of Geometry =',I8,
     +        /30X,' -- Dataset ignored !',/5X,100(1H*))
 1120 FORMAT (/5X,100(1H*),/5X,' **** BKBOKD WARNING !! **** MCarlo ',
     +        ' dataset has anomalous particle code =',I8,
     +        /30X,' -- Dataset ignored !',/5X,100(1H*))
 1121 FORMAT (20X,' ***** Dataset with special particle code =',I3,
     +        2X,'Code stored =',I3,5X,'Name of particle =',2X,A12)
 1122 FORMAT (20X,' ***** Dataset with NPER , IDATE , IGEOK =',3I9,/
     +        20X,' *****>> Stored as HVFL03 with NPER =',I9,'  *****')
      END
      SUBROUTINE BKBOKED(TAPE,IFILE)
C----------------------------------------------------------------------
C CKEY UPDABOOK FILPROC
C! Writes the small listfile for Edir of the present tape/file
C  Author  J.Boucrot  11-Nov-1999
C Called from BKBOKD                           from  BOOKLIB
C Calls BKEXFI                                 from  BOOKLIB
C  INPUT arguments:
C    TAPE = tape name
C   IFILE = file number on this tape
C----------------------------------------------------------------------
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      CHARACTER*(*)  TAPE
      CHARACTER TAP*6,FILEDW*100,TAPFI*10,FILED*80
      LOGICAL LEX
C-----------------------------------------------------------------------
C Build the tape_file.edir name:
      TAPFI=' '
      TAP=TAPE(1:6)
      CALL BKEXFI(3,TAP,IFILE,IER)
      IF (IER.NE.0) GO TO 999
      LFI=LNBLNK(AXEDNW)
      TAPFI=AXEDNW(1:LFI)
      call cutol(tapfi)
C Build the name of the .edirlist file:
      filedw=' '
      filedw=als_filel(1:ilfilel)//tapfi(1:lfi)//'.edirlist'
      lldw=lnblnk(filedw)
C Build the name of the .edir to be searched for:
      filed=' '
      filed=ALEDIR(1:ILEDIR)//'/'//tapfi(1:lfi)//'.edir'
      ld=lnblnk(filed)
      INQUIRE ( FILE = filed , EXIST = LEX )
      IF (.NOT.LEX) GO TO 999
C Now perform the ls:
      call system('ls -L -o '//filed(1:ld)//' > '//filedw(1:lldw))
C
 999  RETURN
      END
      SUBROUTINE BKBOKM(NROWI,LBSET,LBPRO,LBSPF,LBRLI,LBTAP,IERM)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Tries to link CERN MC datasets to previous Homelab ones
C  J. Boucrot   14-Nov-1995
C  Called from BKBOKD
C  Calls BKFILB,BKPOIN,BKCHKT,BKMODI               from BOOKLIB
C  Calls ALSTIN                                    from ALEPHLIB
C  Input arguments :
C     NROWI = Row in 'BSET' of the new Dataset
C     LBSET = pointer to 'BSET' bank of current Request file
C     LBPRO = pointer to 'BPRO' bank of current Request file
C     LBSPF = pointer to 'BSPF' bank of current Request file
C     LBRLI = pointer to 'BRLI' bank of current Request file
C     LBTAP = pointer to 'BTAP' bank of current Request file
C  Output argument :
C    IERM =  1 if no room to book banks
C    IERM =  0 if all OK
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      PARAMETER ( NPSKC = 100000 , IFAGA = 1000 )
      INTEGER ITAB(MAXIN)
      CHARACTER*8 TAPNW,TAPOL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IERM=0
      IRKIN=0
C Set reference quantities from input 'BSET' bank of new dataset :
      IF (LBSET.LE.0) GO TO 999
      IRFRU=ITABL(LBSET,1,JBSEFR)
      IRLRU=ITABL(LBSET,1,JBSELR)
      IRFEV=ITABL(LBSET,1,JBSEFE)
      IRLEV=ITABL(LBSET,1,JBSELE)
      IRENG=ITABL(LBSET,1,JBSEBN)
      IRDAT=ITABL(LBSET,1,JBSEND)
C Set reference quantities from input 'BPRO' bank of new dataset :
      IF (LBPRO.LE.0) GO TO 999
      IRPRO=ITABL(LBPRO,1,JBPRVN)
      IRCOR=ITABL(LBPRO,1,JBPRCV)
      IGAGV=IRCOR
      IF (IRCOR.GT.IFAGA) THEN
         IPRGV=IRCOR/IFAGA
         IGAGV=IRCOR-IFAGA*IPRGV
      ENDIF
      IRALE=ITABL(LBPRO,1,JBPRAV)
      IRDBS=ITABL(LBPRO,1,JBPRDN)
      IRDBD=ITABL(LBPRO,1,JBPRDD)
C Set reference quantities from input 'BSPF' bank of new dataset :
      IF (LBSPF.LE.0) GO TO 999
      IRKIN=ITABL(LBSPF,1,JBSPKC)
      IF (IRKIN.LE.1000) GO TO 999
      IRRA1=ITABL(LBSPF,1,JBSPFR)
      IRRA2=MOD(ITABL(LBSPF,1,JBSPSR),NPSKC)
      IRGEO=ITABL(LBSPF,1,JBSPRG)
C Set reference quantities from input 'BTAP' bank of new dataset :
      IF (LBTAP.LE.0) GO TO 999
      IRTRN=ITABL(LBTAP,1,JBTPRN)
      KBTAP=KROW(LBTAP,1)
      CALL ALSTIN(IW(KBTAP+JBTAVS),2,TAPNW)
C Set reference quantities from input 'BRLI' bank of new dataset :
      IF (LBRLI.LE.0) GO TO 999
      IRNRL=LROWS(LBRLI)
      IRRNE=ITABL(LBRLI,1,JBRLNE)
      IRNBY=ITABL(LBRLI,1,JBRLNB)
C----------------------------------------------------------------------
C Now loop on all rows of BDFS , NR = 2 and try to find the same
C keywords from a Homelab tape :
C
      CALL BKPOIN(LECDAF,'BDFS',2,JBDFS)
      IF (JBDFS.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BSET',IRKIN,JBSET)
      IF (JBSET.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BPRO',IRKIN,JBPRO)
      IF (JBPRO.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BSPF',IRKIN,JBSPF)
      IF (JBSPF.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BRLI',IRKIN,JBRLI)
      IF (JBRLI.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BTPN',IRKIN,JBTPN)
      IF (JBTPN.LE.0) GO TO 999
C Loop on all 'BDFS' rows :
      DO 500 IBDFS=1,LROWS(JBDFS)
         KBDFS=KROW(JBDFS,IBDFS)
         IF (IW(KBDFS+JBDFNP).NE.IRKIN) GO TO 500
C Checks in 'BSET':
         NROW=IW(KBDFS+JBDFNR)
         KBSET=KROW(JBSET,NROW)
         IF (IW(KBSET+JBSEFR).NE.IRFRU) GO TO 500
         IF (IW(KBSET+JBSELR).NE.IRLRU) GO TO 500
         IF (IW(KBSET+JBSEFE).NE.IRFEV) GO TO 500
         IF (IW(KBSET+JBSELE).NE.IRLEV) GO TO 500
         IF (IW(KBSET+JBSEND).NE.IRDAT) GO TO 500
C Checks in 'BPRO':
         IBPRO=IW(KBSET+JBSEBP)
         KBPRO=KROW(JBPRO,IBPRO)
         IF (IW(KBPRO+JBPRVN).NE.IRPRO) GO TO 500
         IPJGA=IW(KBPRO+JBPRCV)
         IPOGA=IPJGA
         IF (IPJGA.GT.IFAGA) THEN
            IPOGV=IPJGA/IFAGA
            IPOGA=IPJGA-IFAGA*IPOGV
         ENDIF
         IF (IPOGA.NE.IGAGV) GO TO 500
         IF (IW(KBPRO+JBPRAV).NE.IRALE) GO TO 500
         IF (IW(KBPRO+JBPRDN).NE.IRDBS) GO TO 500
         IF (IW(KBPRO+JBPRDD).NE.IRDBD) GO TO 500
C Checks in 'BSPF':
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         IF (IW(KBSPF+JBSPKC).NE.IRKIN) GO TO 500
         IF (IW(KBSPF+JBSPFR).NE.IRRA1) GO TO 500
         IF (MOD(IW(KBSPF+JBSPSR),NPSKC).NE.IRRA2) GO TO 500
         IF (IW(KBSPF+JBSPRG).NE.IRGEO) GO TO 500
C Checks in 'BTPN' ( OLD dataset must be from a Homelab ) :
         IBTPN=IW(KBSET+JBSEBT)
         KBTPN=KROW(JBTPN,IBTPN)
         IF (IW(KBTPN+JBTPRN).NE.IRTRN) GO TO 500
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPOL)
         CALL BKCHKT(TAPOL,ICERN,IMU,IDL,IERTA)
         IF (ICERN.NE.0) GO TO 500
C Checks in 'BRLI':
         IBRL1=IW(KBSET+JBSEBA)
         IBRL2=IW(KBSET+JBSEBR)
         NBRLA=IBRL2-IBRL1+1
         IF (NBRLA.NE.IRNRL) GO TO 500
         KBRLI=KROW(JBRLI,IBRL1)
         IF (IW(KBRLI+JBRLRN).NE.IRFRU) GO TO 500
         IF (IW(KBRLI+JBRLNE).NE.IRRNE) GO TO 500
         NBYT=IW(KBRLI+JBRLNB)
         IF (NBYT.GT.IRNBY+1000) GO TO 500
         IF (NBYT.LT.IRNBY-1000) GO TO 500
C
C The present dataset is the same as the "new" one from the Req. File :
C it has to be discarded first :
C
         IW(KBDFS+JBDFDF)=1
         IW(KBSET+JBSEDF)=1
         NBKSCR=NBKSCR+1
         WRITE ( LWRDBG,1001) IRKIN,TAPNW,TAPOL,IBDFS
         IF (IBAUTO.EQ.0) PRINT 1001,IRKIN,TAPNW,TAPOL,IBDFS
C
C The old dataset must now be put as copy of the new one in 'BDFS' :
C
 320     CALL VZERO(ITAB,MAXIN)
         DO 350 IS=JBDFTC,JBDFCO-1
 350     ITAB(IS)=INTCHA('    ')
         ITAB(JBDFTC)=IW(KBDFS+JBDFTC)
         ITAB(JBDFTC+1)=IW(KBDFS+JBDFTC+1)
         ITAB(JBDFLO)=IW(KBDFS+JBDFLO)
         ITAB(JBDFNP)=IRKIN
         ITAB(JBDFNR)=NROWI
         ITAB(JBDFCO)=1
         CALL BKFILB('BDFS',2,ITAB,LBDFSA,LBOU,IEOU)
         IF (IEOU.EQ.2) GO TO 900
         CALL BKMODI('BDFS',2,0,LBDFSA,IERO)
         IF (IERO.NE.0) GO TO 900
         WRITE ( LWRDBG,1002) TAPOL,LBOU
 500  CONTINUE
      GO TO 999
C No room for banks :
 900  IERM=1
 999  RETURN
 1001 FORMAT (5X,'+++ BKBOKM +++ For KINGAL =',I7,' New Master ',
     +        'Dataset =',2X,A8,' ** OLD was ',2X,A8,I6)
 1002 FORMAT (8X,'>>> BKBOKM <<< Tape ',2x,a8,' is now COPY at BDFS',
     +        ' row =',I8)
      END
      SUBROUTINE BKBOKST(IMC,VSN,IFILE,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Check if a BKBOKD dataset is already known in the database :
C  Author  J. Boucrot 27-Mar-1998
C Called from BKBOKD                              from BOOKLIB
C Calls ALINST                                    from ALEPHLIB
C Input arguments :
C   IMC = 1 for DATA , = 2 for MCARLO
C   VSN = tape name
C IFILE = file number on VSN
C Output argument :
C   IER = 1 if no room for BOS banks, = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER VSN*8
      INTEGER ITAP(2)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      IF (IMC.LT.1.OR.IMC.GT.2) GO TO 999
      JBDFS=NLINK('BDFS',IMC)
      IF (JBDFS.LE.0) GO TO 900
      NBDFS=LROWS(JBDFS)
      CALL ALINST(VSN,ITAP,IBIDE)
C Loop on all datasets of BDFS :
      DO 500 IBDFS=1,NBDFS
         KBDFS=KROW(JBDFS,IBDFS)
         IF (IW(KBDFS+JBDFTC).NE.ITAP(1))   GO TO 500
         IF (IW(KBDFS+JBDFTC+1).NE.ITAP(2)) GO TO 500
         IF (IW(KBDFS+JBDFFN).NE.IFILE)     GO TO 500
C This was a dataset on the same tape,file : mark it as to be discarded
         IW(KBDFS+JBDFDF)=1
         NBKSCR=NBKSCR+1
         NPOL=IW(KBDFS+JBDFNP)
         NROL=IW(KBDFS+JBDFNR)
         WRITE ( LWRDBG,1116 ) VSN,IFILE,IMC,IBDFS,NPOL,NROL
C Old dataset was not a copy : set discard flag in 'BSET' :
         IF (IW(KBDFS+JBDFCO).EQ.0) THEN
            NPOL=IW(KBDFS+JBDFNP)
            NROL=IW(KBDFS+JBDFNR)
            JBSOL=NLINK('BSET',NPOL)
            IF (JBSOL.LE.0) GO TO 900
            KBSOL=KROW(JBSOL,NROL)
            IW(KBSOL+JBSEDF)=1
         ENDIF
         GO TO 999
 500  CONTINUE
C
      GO TO 999
C No room for BOS banks :
 900  IER=1
 999  RETURN
 1116 FORMAT (/5X,110(1H*),/5X,'**** BKBOKST WARNING !! ****  ',
     +        'Tape/File ',
     +        2X,A8,I5,' had already a dataset on IMCDAT,IBDFS =',
     +        2I6,/30X,' Old NPER , NROW =',2I8,/5X,110(1H*))
      END
      SUBROUTINE BKBPLI(IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads the PARTICLE LISTE file updating the MC Particle List
C  J. Boucrot       30-Sep-1992
C UNIX Version 06-Oct-1995
C Called from BKUPDF                            from BOOKLIB
C Calls ALINST,AUBPRS,AUBOS                     from ALEPHLIB
C Calls BKMESG,BKCARI,BKFILB                    from BOOKLIB
C Calls BDROP                                   from BOS77
C     Fill  the 'BPLI' bank describing the MC Particle codes
C  Output argument IER = 1 if no room to book banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      INTEGER ITAB(MAXIN)
      CHARACTER INFO*80,LTXT*2,MESG*80,PARNA*12,MVM*80
      CHARACTER NAMPR*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C ----------------------------------------------------------------------
      IER=0
      IREC=0
      IPAR=0
      IF (IBUPDA.GE.2) GO TO 999
C
C Open the PARTICLE LISTE file on Fortran unit LECPLI :
C
      NAMPR=' '
      NAMPR=ALS_REFR(1:ILREFR)//'particle.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      OPEN ( LECPLI , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C Read the records :
 1    READ (LECPLI , '(A80)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
      IF (IREC.LE.1) GO TO 1
      IF (LNBLNK(INFO).EQ.0) GO TO 1
      CALL VZERO(ITAB,MAXIN)
         DO 50 IPLK=JBPLPN,JBPLPC-1
 50      ITAB(IPLK)=INTCHA('    ')
      IPAR=IPAR+1
      READ ( INFO , 1001 )  PARNA,IANTI
      IF (PARNA.EQ.' ') GO TO 900
C fill table ITAB :
      CALL ALINST(PARNA,ITAB(JBPLPN),IB3)
      ITAB(JBPLPC)=IPAR
      ITAB(JBPLAC)=IANTI
      IF (IPAR.EQ.1) CALL BDROP(IW,'BPLI')
      CALL BKFILB('BPLI',1,ITAB,LBPLIA,NOUT,IER)
      IF (IER.GE.2) GO TO 910
      GO TO 1
C
 800  CALL AUBPRS('BPLI')
      GO TO 999
C ----------------------------------------------------------------------
C Process error :
 900  MESG=' +++ Error in BKBPLI : syntax error in file'
      CALL BKMESG(INFO,IREC,MESG)
      GO TO 999
 910  IER=1
C
 999  RETURN
 1001 FORMAT (7X,A12,48X,I3)
      END
      SUBROUTINE BKBPOS (AA,NTRAK,XBEAM,YBEAM,ERROX,ERROY,OFSET,IMET)
C---------------------------------------------------------------------
C! Compute X,Y beam position from information in JSUM
C     (the Toby Burnett Method).
C Author S. Wasserbaech 21-Feb-1991
C Modified S.Wassebaech 10-Oct-1991 to use the VDET words
C   Input argument :
C      AA(20)              Array of beam constants for 1 run or fill
C   Output arguments :
C       NTRAK          (I) Number of tracks used in the measurement
C       XBEAM, YBEAM   (F) Mean x and y coordinates of beam crossing
C       ERROX, ERROY   (F) Uncertainties on XBEAM and YBEAM.
C                          (These are equal; the luminous region
C                          is assumed to be much smaller than the
C                          d0 resolution.)
C       OFSET          (F) Average d0
C       IMET   = -1 if no beam position computed ( Not enough data)
C       IMET   =  0 if beam position  computed without using the VDET
C       IMET   =  1 if beam position  computed using the VDET
C---------------------------------------------------------------------
      REAL AA(20),A(10)
      DATA SIGX / 0.0149 /
      DATA SIGY / 0.0019 /
C---------------------------------------------------------------------
      IMET=-1
      NTRAK = 0
      XBEAM = 0.
      YBEAM = 0.
      OFSET = 0.
      ERROX = 0.
      ERROY = 0.
C
      ISIDE=0
      IF (AA(1) .LT. 20) ISIDE = 10
      IF (AA(ISIDE+1) . LT. 20. ) GO TO 999
      IMET=1
      IF (ISIDE.EQ.10) IMET=0
      DO 30 I=1,10
 30   A(I)=AA(ISIDE+I)
C
      NTRAK = A(1)
      XBEAM = (A(7)*A(6)-A(8)*A(4))/A(6)/A(5) - A(9)*A(3)/A(1)/A(5)
      YBEAM = (A(7)*A(4)-A(8)*A(5))/A(6)/A(5) + A(9)*A(2)/A(1)/A(6)
      OFSET = (A(9) - A(7)*A(3)/A(5) - A(8)*A(2)/A(6))/A(1)
      CHISQ = A(10) - OFSET*A(9) - XBEAM*A(7) + YBEAM*A(8)
      DELTA = (SIGX**2 - SIGY**2)/4.
      ERROX = SQRT(AMAX1(0.,2.*(CHISQ/A(1) + DELTA)/A(1)))
      ERROY = SQRT(AMAX1(0.,2.*(CHISQ/A(1) - DELTA)/A(1)))
C
 999  RETURN
      END
      SUBROUTINE BKBPRO(IER)
C ----------------------------------------------------------------------
C! Fills Bookkeeping bank 'BPRO' once per production job
CKEY  BOOK BPRO FILL / INTERNAL
C J. Boucrot  20-Nov-1988
C Modified 15-May-1992 for GALEPH and JULIA versions
C Called from BKENRU                            from ALEPHLIB
C Calls  AUBOS,BKFILL,BKBLAN                    from ALEPHLIB
C  Output parameter :
C    IER  = 0 if all OK  , = 1 if no room to book bank 'BPRO'
C  Input bank :  RHAH ( on POTs , DSTs or MINIs )
C                 AJOB  or KJOB (in GALEPH or KINGAL )
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- RHAHJJ ----
      PARAMETER(JRHAPN=1,JRHAPD=3,JRHAPH=4,JRHAPV=5,JRHAAV=6,JRHADV=7,
     +          JRHADD=8,JRHANI=9,JRHANO=10,JRHACV=11,JRHANU=12,
     +          LRHAHA=12)
C-- AJOBJJ ----
      PARAMETER(JAJOBM=1,JAJORM=2,JAJOGI=3,JAJOSO=4,JAJOSD=5,JAJOGC=6,
     +          JAJOJD=7,JAJOJT=8,JAJOGV=9,JAJOAV=10,JAJOFT=11,
     +          JAJOFS=12,JAJOFC=13,JAJODV=14,JAJODD=15,JAJOTV=16,
     +          JAJOCV=17,LAJOBA=17)
C-- KJOBJJ ----
      PARAMETER(JKJOJD=1,JKJOJT=2,JKJOAV=3,JKJODV=4,JKJODC=5,LKJOBA=5)
C-- KRUNJJ ----
      PARAMETER(JKRUGI=1,JKRUNO=2,JKRURT=3,JKRUFS=15,JKRUSS=16,
     +          LKRUNA=16)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- NDSTJJ ----
      PARAMETER(JNDSMT=1,JNDSLP=2,JNDSUP=3,JNDSCT=4,JNDSIH=5,JNDSTH=6,
     +          JNDSD0=7,JNDSZ0=8,JNDSJL=9,JNDSJU=10,JNDSJC=11,
     +          JNDSJI=12,JNDSJT=13,JNDSJD=14,JNDSJZ=15,JNDSJY=16,
     +          JNDSVE=17,JNDSRO=18,JNDSLE=19,JNDSPH=20,JNDSNP=95,
     +          JNDSPB=96,JNDSNR=106,JNDSRB=107,JNDSNN=117,JNDSNB=118,
     +          JNDSPR=138,JNDSAV=139,JNDSDA=141,JNDSMC=143,JNDSMM=144,
     +          JNDSAL=145,JNDSCE=146,LNDSTA=146)
      COMMON / TAPEFIL / IFILTA
       PARAMETER ( IFAJU = 1000 )
       INTEGER BKINCA,ITAB(MAXIN)
       CHARACTER PRN3*3,CHAINT*4,PRGN*4
       CHARACTER*80 VARCH(MAXCH)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C Initializations :
C
      JBPRO=NLINK('BPRO',NPERPR)
      IF (JBPRO.NE.0) GO TO 999
      IER=0
      CALL BKBLAN('BPRO',VARCH,ITAB)
      VARCH(1)=PRNAME(1:4)
      VARCH(2)=OPSYST
      VARCH(3)=PRONOD
      PRN3=PRNAME(1:3)
      JRHAH=0
      IJULV=0
      IGALV=0
C-----------------------------------------------------------------------
C Find elements of bank 'BPRO'  from RHAH bank when it exists :
      JAJOB=IW(NAMIND('AJOB'))
      JNANO=IW(NAMIND('NDST'))
      JRHAH=IW(NAMIND('RHAH'))
      IF (JRHAH.EQ.0) GO TO 50
      KRHAH=KROW(JRHAH,LROWS(JRHAH))
      ITAB(JBPRVN)=IW(KRHAH+JRHAPV)
      DO 1 IFLR = 0,3
 1    ITAB(JBPRAV+IFLR) = IW(KRHAH+JRHAAV+IFLR)
C Get JULIA version in all cases :
      DO 10 IRH=1,LROWS(JRHAH)
         KRHAH=KROW(JRHAH,IRH)
         PRGN=CHAINT(IW(KRHAH+JRHAPN))
         IF (PRGN.NE.'JULI') GO TO 10
         IJULV=IW(KRHAH+JRHAPV)
10    CONTINUE
C If one is running JULIA or REDPOT or MINI on simulated data , store
C GALEPH version number obtained from bank AJOB :
      IF (JAJOB.GT.0)   IGALV=ITABL(JAJOB,1,JAJOGV)
      GO TO 100
C-----------------------------------------------------------------------
C Find elements of bank 'BPRO'  when RHAH bank doesn't exist  :
C First possibility : one is running  GALEPH :
C find the elements of BPRO in the bank AJOB :
 50   IF (JRHAH.EQ.0.OR.PRN3.EQ.'GAL') THEN
         IF (JAJOB.EQ.0) GO TO 60
         KAJOB=KROW(JAJOB,1)
         ITAB(JBPRVN)=IW(KAJOB+JAJOGV)
         ITAB(JBPRAV)=IW(KAJOB+JAJOAV)
         ITAB(JBPRDN)=IW(KAJOB+JAJODV)
         ITAB(JBPRNI)=IW(KAJOB+JAJOGI)
         ICVER=0
         LRJO=LCOLS(JAJOB)
         IF (LRJO.LT.JAJOCV) GO TO 57
         ICVER=IW(KAJOB+JAJOCV)
 57      ITAB(JBPRCV)=ICVER
         GO TO 100
      ENDIF
C Second possibility : one is running  KINGAL :
C find the elements of BPRO in the bank KJOB :
 60   IF (JAJOB.EQ.0.OR.PRN3.EQ.'KIN') THEN
         JKAJO=NLINK('KJOB',0)
         IF (JKAJO.EQ.0) GO TO 999
         KKAJO=KROW(JKAJO,1)
         ITAB(JBPRAV)=IW(KKAJO+JKJOAV)
         ITAB(JBPRDN)=IW(KKAJO+JKJODV)
         GO TO 100
      ENDIF
C Last possibility :
C If one is running 'NDSTPROD' , or reading a NANODST with no 'RHAH' :
      IF (JNANO.GT.0) THEN
         ITAB(JBPRAV)=NINT(10.*RTABL(JNANO,1,JNDSAL))
         ITAB(JBPRVN)=BKINCA(CHAINT(ITABL(JNANO,1,JNDSPR)))
         GO TO 100
      ENDIF
      GO TO 999
C
C Book and fill 'BPRO' , NR=NPERPR
C ( only 1 row , since BPRO is defined once per production job)
C
 100  CALL AUBOS('BPRO',NPERPR,LMHLEN+LBPROA,JBPRO,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBPRO+LMHCOL)=LBPROA
      IW(JBPRO+LMHROW)=0
      ITAB(JBPRCV)=IGALV+IFAJU*IJULV
      ITAB(JBPRDD)=IFILTA
C
      CALL BKFILL('BPRO',NPERPR,VARCH,ITAB)
      GO TO 999
C
C No room to book 'BPRO'
C
 900   IER=1
C
 999   RETURN
       END
      SUBROUTINE BKBRK7(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Writes the 'BRK7' bank on file BRK7FILE UPDATE
C  Author  J.Boucrot  21-Jun-1991
C  UNIX Version 06-Oct-1995 modified 03-Feb-1998 for > 99 files
C Called from BKUPDF or BKMAKJ                      from BOOKLIB
C Calls BKFILB,BKLVPR,BKELEP,BKPOIN,BKBRUNC         from BOOKLIB
C Calls AUBPRS,BKINCA                               from ALEPHLIB
C Calls BKFMT,BWRSB                                 from BOSLIB
C Calls VMCMS                                       from GENLIB
C Output argument :
C    IER  = 0 if all OK ;
C         = 1 if no room to book banks
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BRK7JJ ----
      PARAMETER(JBRKRU=1,JBRKRA=2,JBRKPO=4,JBRKDS=6,JBRKMI=8,
     +          JBRKCR=10,JBRKNA=12,LBRK7A=13)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      SAVE
      PARAMETER ( MAXRU = 500 , IFACT = 15000 , LBRU7A = 6 )
      CHARACTER SELDA*4,MESG*80,MSG*80,TAPE*4,CHAINT*4
      CHARACTER  FNPR*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      INTEGER LISRU(MAXRU),ITAPI(2),ITAB(MAXIN),BKINCA
      LOGICAL BTEST
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      JBLPR=IW(NAMIND('BLPR'))
      IF (JBLPR.LE.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1000
C----------------------------------------------------------------------
C Prepare the 'BRK7' bank :
      CALL BKFMT('BRK7','2I,(1I,12A)')
      CALL BKFMT('BRU7','2I,(I)')
      LUWR=LWRCAR
      LENB7=LMHLEN+IFACT*LBRK7A
      CALL AUBOS('BRK7',1,LENB7,JBRK7,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBRK7+LMHCOL)=LBRK7A
C
C Build 'BRK7' with run, raw tape # from a loop on 'BRUC' banks
C
      JBRUC=NAMIND('BRUC')+1
 10   JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 100
      NRUC=LROWS(JBRUC)
C loop on all runs for this period , keep only PERF or MAYB :
      DO 60 IRR=1,NRUC
         KBRUC=KROW(JBRUC,IRR)
         IBITP=IW(KBRUC+JBRUBR)
         IF (BTEST(IBITP,1).OR.BTEST(IBITP,2)) GO TO 20
         GO TO 60
 20      CALL VZERO(ITAB,MAXIN)
         DO 30 ISS=JBRKPO,LBRK7A
 30      ITAB(ISS)=INTCHA('    ')
         JRUN=IW(KBRUC+JBRURN)
         IF (JRUN.LT.LISLFI(1)) GO TO 60
         ITAB(JBRKRU)=JRUN
         ITAB(JBRKRA)=IW(KBRUC+JBRUVS)
         ITAB(JBRKRA+1)=IW(KBRUC+JBRUVS+1)
         CALL BKFILB('BRK7',1,ITAB,LBRK7A,LOU,IERB)
         IF (IERB.EQ.2) GO TO 900
 60   CONTINUE
      GO TO 10
C----------------------------------------------------------------------
C Now loop on all primary datasets in 'BSET' to find POTs,DSTs,MINIS :
 100  CALL AUBPRS('BRK7')
      JBRK7=NLINK('BRK7',1)
      IF (JBRK7.EQ.0) GO TO 900
      NBRK7=LROWS(JBRK7)
      IF (NBRK7.LE.0) GO TO 999
      NRLAS=0
      JBLAS=NLINK('BLAS',1)
      IF (JBLAS.GT.0) NRLAS=ITABL(JBLAS,1,JBLALU)
C Book temporary bank 'BRU7' to store the file numbers for each dataset
      LENU7=LMHLEN+NBRK7*LBRU7A
      CALL AUBOS('BRU7',1,LENU7,JBRU7,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBRU7+LMHCOL)=LBRU7A
      IW(JBRU7+LMHROW)=NBRK7
C Book bank temporary 'BCHK' ( intended to check for last processing whe
C datasets mix up different data taking periods ) :
      LCHK=LMHLEN+2*NBRK7
      CALL AUBOS('BCHK',1,LCHK,JBCHK,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBCHK+LMHCOL)=2
      IW(JBCHK+LMHROW)=NBRK7
      DO 105 KR=1,NBRK7
         KCHK=KROW(JBCHK,KR)
         IW(KCHK+1)=ITABL(JBRK7,KR,JBRKRU)
 105  CONTINUE
C Loop on 'BSET' banks ( real data only ) :
      JBSET=NAMIND('BSET')+1
 110  JBSET=IW(JBSET-1)
      IF (JBSET.EQ.0) GO TO 500
      NPER=IW(JBSET-2)
      IF (NPER.GT.999) GO TO 500
      NBSET=LROWS(JBSET)
C
C Loop on all datasets in period NPER :
C
      DO 400 ISET=1,NBSET
         KBSET=KROW(JBSET,ISET)
         NADAT=IW(KBSET+JBSEND)
         IF (NADAT.GT.10) GO TO 400
C only POT or DST or MINI :
         IF (NADAT.LE.2.OR.NADAT.GT.7) GO TO 400
         IF (IW(KBSET+JBSEDF).NE.0) GO TO 400
         NRUF=IW(KBSET+JBSEFR)
         NRUL=IW(KBSET+JBSELR)
C Check the processing level :
         CALL BKLVPR(KBSET,JBLPR,IPROUT,ICOMP)
C         IF (IPROUT.NE.2) GO TO 400
C ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C  Ugly patch to have test processing datasets in 2000
         if (nruf.lt.54500) then
            IF (IPROUT.NE.2) GO TO 400
         else
            if (iprout.ne.1) go to 400
         endif
C ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C Get the tape name :
 120     IBTAP=IW(KBSET+JBSEBT)
         IF (IBTAP.LE.0) GO TO 400
         CALL BKPOIN(LECDAF,'BTPN',NPER,JBTAP)
         IF (JBTAP.LE.0) GO TO 900
         KBTAP=KROW(JBTAP,IBTAP)
         TAPE=CHAINT(IW(KBTAP+JBTPVS))
         IF (TAPE(1:2).NE.'AB'.AND.TAPE(1:2).NE.'AS'.
     +       AND.TAPE(1:2).NE.'Y1'.AND.TAPE(1:2).NE.'R0') GO TO 400
         CALL UCOPY(IW(KBTAP+JBTPVS),ITAPI(1),2)
C Get the file number of the dataset on multifile volumes:
         IBPRO=IW(KBSET+JBSEBP)
         IF (IBPRO.LE.0) GO TO 400
         CALL BKPOIN(LECDAF,'BPRO',NPER,JBPRO)
         IF (JBPRO.LE.0) GO TO 900
         KBPRO=KROW(JBPRO,IBPRO)
         IFIL=IW(KBPRO+JBPRDD)
         IFKO=NADAT-1
         IF (NADAT.EQ.7) IFKO=5
C Define pointer in bank :
 145     ISHF=JBRKPO
         IF (NADAT.EQ.4) ISHF=JBRKDS
         IF (NADAT.EQ.5) ISHF=JBRKMI
         IF (NADAT.EQ.6) ISHF=JBRKCR
         IF (NADAT.EQ.7) ISHF=JBRKNA
C fill the list of runs for this dataset :
         NRUNS=0
         CALL VZERO(LISRU,MAXRU)
         IF (NRUF.EQ.NRUL) THEN
            NRUNS=1
            LISRU(1)=NRUF
            GO TO 200
         ENDIF
         IBRL1=IW(KBSET+JBSEBA)
         IBRL2=IW(KBSET+JBSEBR)
         IF (IBRL1*IBRL2.EQ.0) GO TO 400
         CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
         IF (JBRLI.LE.0) GO TO 900
         DO 150 IBR=IBRL1,IBRL2
            NRUNS=NRUNS+1
            IF (NRUNS.GT.MAXRU) GO TO 920
 150     LISRU(NRUNS)=ITABL(JBRLI,IBR,JBRLRN)
C
C Now loop on all runs and fill the corresponding tape names in 'BRK7' :
C
 200     IF (NRUNS.LE.0) GO TO 400
         CALL INTSOR(LISRU,NRUNS)
         IOLD=1
         DO 250 IRU=1,NRUNS
            IRUN=LISRU(IRU)
            DO 220 IRO=IOLD,NBRK7
               KBRK7=KROW(JBRK7,IRO)
               IF (IRUN.NE.IW(KBRK7+JBRKRU)) GO TO 220
               KCHK=KROW(JBCHK,IRO)
               IF (IW(KCHK+1).EQ.IW(KBRK7+JBRKRU)) THEN
                  IF (IW(KCHK+2).EQ.0.AND.IPROL.NE.0) IW(KCHK+2)=IPROL
                  IF (IW(KCHK+2).NE.0.AND.IPROL.EQ.1) IW(KCHK+2)=IPROL
                  IF (IW(KCHK+2).NE.0) THEN
                     IF (IPROL.EQ.2.AND.IW(KCHK+2).EQ.1) GO TO 220
                  ENDIF
               ENDIF
               IOLD=IRO+1
               CALL UCOPY(ITAPI(1),IW(KBRK7+ISHF),2)
C Fill file # of dataset in bank 'BRU7':
               KBRU7=KROW(JBRU7,IRO)
               IW(KBRU7+JBRKRU)=IRUN
               IW(KBRU7+JBRKRU+IFKO)=IFIL
C
 220        CONTINUE
 250     CONTINUE
 400  CONTINUE
C
      GO TO 110
C-----------------------------------------------------------------------
C Now write 'BRK7' on output file :
 500  IF (IBUPDA.EQ.0.OR.IBMAKJ.GT.0) GO TO 999
      FNPR=' '
      FNPR=ALS_TEMP(1:ILTEMP)//'brk7file.update'
      FNPR=FNPR(1:LNBLNK(FNPR))
      CALL SYSTEM(' rm -f '//FNPR)
      OPEN ( LWBRK7 , FILE = FNPR , STATUS = 'NEW' , ERR = 999 )
      IF (IERO.NE.0) GO TO 999
      CALL BUNIT(LWBRK7,'TEXT',80)
C write bank BRK7 , NR=1 :
      CALL BWRSB(IW,LWBRK7,'BRK7',1)
 800  CLOSE ( LWBRK7 )
C----------------------------------------------------------------------
C Now check the results and build the runcarts.list file :
      CALL BKBRUNC(IERC)
      IF (IERC.NE.0) GO TO 900
C Drop useless temporary banks:
      IND=NDROP('BCHK',1)
      IND=NDROP('BRK7',1)
      IND=NDROP('BRU7',1)
      CLOSE ( LUWR )
      GO TO 999
C----------------------------------------------------------------------
C errors :
C No room for banks :
 900  IER=1
      MESG=' +++ Error in BKBRK7 : no room for banks'
      GO TO 950
C Problem with MAXRU :
 920  IER=3
      MESG=' +++ Error in BKBRK7 : too many runs on dataset'
 950  IVAL=0
      CALL BKMESG(' ',IVAL,MESG)
 999  RETURN
C
 1000 FORMAT (/22X,'=== Subroutine BKBRK7 starts === ')
      END
      SUBROUTINE BKBRUNC(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Writes the runcarts.list file
C  Author  J.Boucrot  03-Feb-1998
C Called from BKBRK7                                from BOOKLIB
C Calls BKEXFI,BKPRLV,BKELEP,BKPOIN,BKCHKT          from BOOKLIB
C Calls ALSTIN                                      from ALEPHLIB
C Calls NLINK                                       from BOSLIB
C Output argument :
C    IER  = 0 if all OK ;
C         = 1 if problem with banks
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BRK7JJ ----
      PARAMETER(JBRKRU=1,JBRKRA=2,JBRKPO=4,JBRKDS=6,JBRKMI=8,
     +          JBRKCR=10,JBRKNA=12,LBRK7A=13)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      SAVE
       PARAMETER ( MINER = 100000 )
      CHARACTER*8  RAW,POT,DST,MINI,NANO
      CHARACTER*10 RRAW,RPOT,RDST,RMINI,RNANO
      CHARACTER  FNPR*60
      CHARACTER*1  RUNQ,RUQ(3)
      LOGICAL BTEST
      DATA RUQ / 'D' , 'M' , 'P' /
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
C Open the RUNCARTS LIST file :
      FNPR=' '
      FNPR=ALS_TEMP(1:ILTEMP)//'runcarts.list'
      FNPR=FNPR(1:LNBLNK(FNPR))
      CALL SYSTEM(' rm -f '//FNPR)
      OPEN ( LWRCAR , FILE = FNPR , STATUS = 'NEW' , ERR = 999 )
      REWIND ( LWRCAR)
C Write the Header of the RUNCARTS LIST file :
      WRITE ( LWRCAR , 2011 )
C----------------------------------------------------------------------
C Now check the result of BKBRK7 and make a debug print if required:
 810  JBRK7=NLINK('BRK7',1)
      IF (JBRK7.EQ.0) GO TO 999
      NBRK7=LROWS(JBRK7)
      IF (NBRK7.LE.0) GO TO 999
      JBRU7=NLINK('BRU7',1)
      IF (JBRU7.EQ.0) GO TO 999
      NBRU7=LROWS(JBRU7)
      IF (NBRU7.LE.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1001,NBRK7
      WRITE ( LWRDBG,1001) NBRK7
      IF (IDEBUG.EQ.2) WRITE ( LWRDBG,1002) NBRK7
      CALL BKPOIN(LECDAF,'BDFS',1,JBDFS)
      NBDF=LROWS(JBDFS)
      IFOUN=1
C
      DO 850 IR=1,NBRK7
         KBRK7=KROW(JBRK7,IR)
         KBRU7=KROW(JBRU7,IR)
         NRUN=IW(KBRK7+JBRKRU)
         CALL ALSTIN(IW(KBRK7+JBRKRA),2,RAW)
         IF (INDEX(RAW,'NO TAP').GT.0) RAW=' '
         CALL ALSTIN(IW(KBRK7+JBRKPO),2,POT)
         CALL ALSTIN(IW(KBRK7+JBRKDS),2,DST)
         CALL ALSTIN(IW(KBRK7+JBRKMI),2,MINI)
         CALL ALSTIN(IW(KBRK7+JBRKNA),2,NANO)
         CALL BKELEP(NRUN,ELEP,IFIL,BM,IDT,NEV,JBRUC)
         IF (JBRUC.EQ.0) GO TO 841
C NO Warnings for LEP II Z0 runs:
         IELEP=IW(JBRUC+JBRUTE)
         IF (NRUN.GT.MXLRU1.AND.IELEP.LT.MINER) GO TO 820
C Debug prints or warnings :
         IF (NRLAS.GT.0.AND.NRUN.GT.NRLAS) GO TO 820
         IF (RAW.NE.' '.AND.(DST.EQ.' '.OR.POT.EQ.' '))
     +       WRITE ( LWRDBG,1004) NRUN,RAW,POT,DST,MINI
         IF (DST.NE.' '.AND.(RAW.EQ.' '.OR.POT.EQ.' '))
     +       WRITE ( LWRDBG,1004) NRUN,RAW,POT,DST,MINI
         IF (DST.EQ.' '.AND.(RAW.NE.' '.AND.POT.NE.' '))
     +       WRITE ( LWRDBG,1004) NRUN,RAW,POT,DST,MINI
         IF (IDEBUG.EQ.2) WRITE ( LWRDBG,1003) NRUN,RAW,POT,DST,MINI
C Add a line on file RUNCARTS LIST :
 820     RUNQ=' '
         ELEP=0.
         NZS=0
C Get LEP energy , run_qual etc ..
      ELEP=0.001*FLOAT(IW(JBRUC+JBRUTE))
         NZS=IW(JBRUC+JBRUNZ)
         IBIP=IW(JBRUC+JBRUBR)
         DO 840 KL=1,3
            IF (BTEST(IBIP,KL-1)) THEN
               RUNQ=RUQ(KL)
               GO TO 841
            ENDIF
 840     CONTINUE
 841     CONTINUE
C New printout for CERN with multifile tapes :
 848     RRAW=RAW//' '
         RNANO=NANO//' '
C
         CALL BKCHKT(POT,ICERP,IMULP,IDLP,IERP)
         IF (IMULP.EQ.0) THEN
            RPOT=POT(1:6)//' '
         ELSE
            IFIL=IW(KBRU7+JBRKRU+2)
            CALL BKEXFI(3,POT(1:6),IFIL,IERXP)
            RPOT=AXEDNW(1:LNBLNK(AXEDNW))
         ENDIF
C
         CALL BKCHKT(DST,ICERD,IMULD,IDLD,IERD)
         IF (IMULD.EQ.0) THEN
            RDST=DST(1:6)//' '
         ELSE
            IFIL=IW(KBRU7+JBRKRU+3)
            CALL BKEXFI(3,DST(1:6),IFIL,IERXD)
            RDST=AXEDNW(1:LNBLNK(AXEDNW))
         ENDIF
C
         CALL BKCHKT(MINI,ICERM,IMULM,IDLM,IERM)
         IF (IMULM.EQ.0) THEN
            RMINI=MINI(1:6)//' '
         ELSE
            IFIL=IW(KBRU7+JBRKRU+4)
            CALL BKEXFI(3,MINI(1:6),IFIL,IERXM)
            RMINI=AXEDNW(1:LNBLNK(AXEDNW))
         ENDIF
C
C         WRITE ( LWRCAR,2012) NRUN,RRAW,RPOT,RDST,RMINI,RNANO,
C     +                      RUNQ,ELEP,NZS
         WRITE (LWRCAR,2013) NRUN,RRAW(1:9),RPOT(1:9),RDST(1:9),
     +           RMINI(1:9),RNANO(1:9),RUNQ,ELEP,NZS
 850  CONTINUE
      CLOSE ( LWRCAR )
      GO TO 999
C----------------------------------------------------------------------
C errors :
C No room for banks :
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKBRUNC === :',
     +            '  Number of runs processed =',I8)
 1002 FORMAT (/' +++  Debug of bank BRK7 :'/,
     +        2X,' RUN #',5X,'RAW',6X,'POT',6X,'DST',6X,'MINI')
 1003 FORMAT (1X,I6,4(3X,A8))
 1004 FORMAT (9X,'--- Warning !! Run ',I8,' : tapes RAW,POT,DST,MIN =',
     +        4(2X,A8))
 2011 FORMAT (1X,79(1H=)/,T3,'RUN',T9,'RAW',T19,'POT',T29,'DST',T39,
     +        'MINI',T49,'NANO',T59,'|',T61,'RQ',T64,'Energy',T74,
     +        'Z0s',/1X,79(1H=))
 2012 FORMAT (1X,I6,5(A10),t59,'|',T61,A1,T64,F6.2,T72,I4)
 2013 FORMAT (1X,I6,5(1X,A9),T59,'|',T61,A1,T64,F6.2,T72,I4)
      END
      SUBROUTINE BKBSCL(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK UPDADBS
C! Builds the bank 'BSCL' for IDSEAR = 8 , CERN tapes
C  J. Boucrot 06-Sep-1995
C  Called from BKUPDF                               from BOOKLIB
C  Calls BKPOIN                                     from BOOKLIB
C  Calls ALSTIN,AUBOS,BKINCA                        from ALEPHLIB
C   Output argument :
C  IER = 1  if no room to book bank 'BSCL'
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
      PARAMETER ( NKINS = 80 , NBM = 14 , NPMX = 1000 )
      CHARACTER TAPN*8
      INTEGER BKINCA,LIBM(NBM)
      PARAMETER (NYTOT = 20)
      COMMON / RAWSTAT / IFDYEA,NYEAOK,NRDYEA(NYTOT),IMBYEA(NYTOT)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      LRECO=JALREC(DUMMY)
      IF (IBAUTO.EQ.0) PRINT 1100
      WRITE ( LWRDBG,1100 )
C Define the different banks 'BSCL' :
      CALL VZERO(LIBM,NBM)
      LIBM(1)=1
      LIBM(2)=2
      CALL UCOPY(LISYEA(2),LIBM(3),NTOYEA-2)
      NBMX=NTOYEA
C Drop the previous banks 'BSCL' , book the new ones :
      CALL BDROP(IW,'BSCL')
      DO 5 IN=1,NBMX
         IMM=LIBM(IN)
         LENBM=LMHLEN+LBMCLA*NKINS
         CALL AUBOS('BSCL',IMM,LENBM,JSMCL,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JSMCL+LMHLEN)=0
         IW(JSMCL+LMHCOL)=LBMCLA
 5    CONTINUE
C Now Book the data banks for stats on reprocessings :
C  'BSCL' , NR = 100000 + 10*IYEAR + Processing Level
C              Processing level :  1 = TEST  2 = Final
C                                  3 = Previous  4 = Old
      DO 9 IYE=1,NTOYEA-1
         NRY=100000+10*LISYEA(IYE)
         DO 7 IPLV=1,4
            NRB=NRY+IPLV
            LENBB=LMHLEN+LBMCLA
            CALL AUBOS('BSCL',NRB,LENBB,JBMCD,IGARB)
            IF (IGARB.EQ.2) GO TO 900
            IW(JBMCD+LMHROW)=1
            IW(JBMCD+LMHCOL)=LBMCLA
            KBMCD=KROW(JBMCD,1)
            IW(KBMCD+JBMCLA)=1
 7       CONTINUE
 9    CONTINUE
      JBPER=IW(NAMIND('BPER'))
      NBPER=LROWS(JBPER)
      JBLPR=IW(NAMIND('BLPR'))
      NBLPR=LROWS(JBLPR)
C----------------------------------------------------------------------
C
C Loop on all 'BSET' banks  :
C
      JBSET=NAMIND('BSET')+1
 10   JBSET=IW(JBSET-1)
      IF (JBSET.EQ.0) GO TO 180
      NPER=IW(JBSET-2)
      IMCD=1
      IF (NPER.GT.NPMX) IMCD=2
C Fill the two words of 'BSCL' for Period and Homelab :
      NMMI=1
      NMMX=1
      IF (IMCD.EQ.2) THEN
         NMMI=2
         NMMX=NBMX
      ENDIF
      DO 150 INN=NMMI,NMMX
         IMBL=1
         IF (IMCD.EQ.2) IMBL=LIBM(INN)
         JSMCL=NLINK('BSCL',IMBL)
         IW(JSMCL+LMHLEN)=IW(JSMCL+LMHLEN)+1
         KK=LROWS(JSMCL)
         KSMCL=KROW(JSMCL,KK)
         IW(KSMCL+JBMCKG)=NPER
         IW(KSMCL+JBMCLA)=1
 150  CONTINUE
C  go to next 'BSET' bank :
      GO TO 10
 180  CONTINUE
C----------------------------------------------------------------------
C Loop on Real Data and MCarlo datasets :
C
      DO 600 IMC=1,2
         CALL BKPOIN(LECDAF,'BDFS',IMC,JBDFS)
         IF (JBDFS.LE.0) GO TO 600
         NBDFS=LROWS(JBDFS)
C Now loop on all datasets of this BDFS bank :
         DO 500 ISET=1,NBDFS
            KBDFS=KROW(JBDFS,ISET)
            NPER=IW(KBDFS+JBDFNP)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPN)
            CALL BKCHKT(TAPN,ICERN,IMULT,IDLT,IERB)
            IF (ICERN.EQ.0.OR.IERB.NE.0) GO TO 500
            IF (IW(KBDFS+JBDFCO).NE.0) GO TO 500
C Get the nature of data :
            NROSE=IW(KBDFS+JBDFNR)
            CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
            IF (JBSET.LE.0) GO TO 500
            KBSET=KROW(JBSET,NROSE)
            IDAT=NNDAT
            IDS=MOD(IW(KBSET+JBSEND),10)
            IF (IDS.GT.0.AND.IDS.LT.NNDAT) IDAT=IDS
C Get the dataset size :
            IBRL1=IW(KBSET+JBSEBA)
            IBRL2=IW(KBSET+JBSEBR)
            GBYT=0.
            IF (IBRL1.EQ.0.OR.IBRL2.EQ.0)    GO TO 350
            IF (IDLT.EQ.0.AND.IBRL1.EQ.IBRL2.AND.IMC.EQ.1) GO TO 350
C Multi-run datasets
            CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
            IF (JBRLI.LE.0) GO TO 900
            DO 333 IBR=IBRL1,IBRL2
               SBYTO=1.E-09*FLOAT(ITABL(JBRLI,IBR,JBRLNB))
               GBYT=GBYT+SBYTO
 333        CONTINUE
            GO TO 480
C Single run datasets :
 350        CALL BKPOIN(LECDAF,'BTPN',NPER,JBTPN)
            IF (JBTPN.LE.0) GO TO 900
            IBTPN=IW(KBSET+JBSEBT)
            SBYT0=1.E-09*FLOAT(LRECO)*FLOAT(ITABL(JBTPN,IBTPN,JBTPRN))
            GBYT=GBYT+SBYTO
C Number of MBytes :
 480        IF (IDLT.EQ.0.AND.GBYT.GE.0.2) GBYT=0.2
            IF (TAPN(1:2).EQ.'AA')  GBYT=0.18
            IF (GBYT.LT.0.) GBYT=0.2
C Get the right SMCL bank number :
            IF (IMC.EQ.1) THEN
               IBMCB=1
            ELSE
               IBSPF=IW(KBSET+JBSEBS)
               CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
               IF (JBSPF.LE.0) GO TO 500
               KBSPF=KROW(JBSPF,IBSPF)
               CALL BKY2K(IW(KBSPF+JBSPRG),100,IBMCB)
            ENDIF
            JSMCL=NLINK('BSCL',IBMCB)
            IF (JSMCL.EQ.0) GO TO 500
C Find the right row in 'BSCL' :
            IRB=0
            NSMCL=LROWS(JSMCL)
            DO 300 II=1,NSMCL
               KSMCL=KROW(JSMCL,II)
               IF (IW(KSMCL+JBMCKG).NE.NPER)  GO TO 300
               IF (IW(KSMCL+JBMCLA).NE.1) GO TO 300
               IRB=II
               GO TO 310
 300        CONTINUE
 310        IF (IRB.EQ.0) GO TO 500
C Increment the total dataset size in bank 'BSCL' , NR = IBMCB
            KKMCL=KROW(JSMCL,IRB)
            IMBYT=IFIX(1000.*GBYT)
            IW(KKMCL+JBMCTO)=IW(KKMCL+JBMCTO)+IMBYT
            IW(KKMCL+JBMCTO+IDAT)=IW(KKMCL+JBMCTO+IDAT)+IMBYT
C Do the same for the general MC bank , if needed :
            IF (IMC.EQ.1) GO TO 312
            JBMC2=NLINK('BSCL',IMC)
            IF (JBMC2.EQ.0) GO TO 500
            KBMC2=KROW(JBMC2,IRB)
            IW(KBMC2+JBMCTO)=IW(KBMC2+JBMCTO)+IMBYT
            IW(KBMC2+JBMCTO+IDAT)=IW(KBMC2+JBMCTO+IDAT)+IMBYT
            GO TO 500
C For real data , get the year of processing :
 312        IYED=0
            DO 320 IRP=1,NBPER
               KBPER=KROW(JBPER,IRP)
               IF (IW(KBPER+JBPEPN).NE.NPER) GO TO 320
               CALL BKY2K(IW(KBPER+JBPEFD),10000,IYEA)
               DO 315 IYY=1,NTOYEA-1
                  IF (LISYEA(IYY).NE.IYEA) GO TO 315
                  IYED=IYY
                  GO TO 330
 315           CONTINUE
 320        CONTINUE
 330        IF (IYED.EQ.0) GO TO 500
C Now find the processing level IPRCV :
C  1 = TEST   2 = Final ( Last )   3 = Previous  4 = Old
            IPRCV=0
            IF (IDAT.EQ.2) THEN
               IPRCV=2
               GO TO 380
            ENDIF
            NRUMI=IW(KBSET+JBSEFR)
            NRUMX=IW(KBSET+JBSELR)
            IDAPR=IW(KBSET+JBSEWD)
C Loop on all processing levels in bank 'BLPR' :
            DO 370 IPR = 1,NBLPR
               KBLPR=KROW(JBLPR,IPR)
               IF (IW(KBLPR+JBLPNT).NE.IDAT) GO TO 370
               NRUP1=IW(KBLPR+JBLPFR)
               NRUP2=IW(KBLPR+JBLPLR)
               IF (NRUMI.LT.NRUP1.OR.NRUMI.GT.NRUP2) GO TO 370
               IDAFD=IW(KBLPR+JBLPFD)
               IDALD=IW(KBLPR+JBLPLD)
               IF (IDAPR.LT.IDAFD.OR.IDAPR.GT.IDALD) GO TO 370
               ILEVP=IW(KBLPR+JBLPRL)
C Test processing :
               IF (ILEVP.GE.100) THEN
                  IPRCV=1
                  GO TO 380
               ENDIF
C Last processing :
               IPRCV=2
               IF (IPR.EQ.NBLPR) GO TO 380
               KK1=KROW(JBLPR,IPR+1)
               IPLN1=IW(KK1+JBLPRL)
               IF (IPLN1.EQ.1.OR.IPLN1.GE.100) GO TO 380
               IF (IPLN1.NE.ILEVP+1) GO TO 370
C Previous processing :
               IPRCV=3
               IF (IPR.EQ.NBLPR-1) GO TO 380
               KK2=KROW(JBLPR,IPR+2)
               IPLN2=IW(KK2+JBLPRL)
               IF (IPLN2.EQ.1.OR.IPLN2.GE.100) GO TO 380
C Old processing :
               IPRCV=4
               IF (IPLN2.NE.ILEVP+2) GO TO 370
               GO TO 380
 370        CONTINUE
 380        CONTINUE
            IF (IPRCV.EQ.0) GO TO 500
C Increment the right value :
            INRB=100000+10*LISYEA(IYED)+IPRCV
            JBMCD=NLINK('BSCL',INRB)
            IF (JBMCD.EQ.0) GO TO 500
            KKMCD=KROW(JBMCD,1)
            IW(KKMCD+JBMCTO+IDAT)=IW(KKMCD+JBMCTO+IDAT)+IMBYT
            IW(KKMCD+JBMCTO)=IW(KKMCD+JBMCTO)+IMBYT
            GO TO 500
 500     CONTINUE
 600  CONTINUE
C
C Put now the statistics on RAW data:
C
      IF (NYEAOK.LE.0) GO TO 800
      DO 700 IYY=1,NYEAOK
         IYEAA=IYY+IFDYEA-1
         NBSC=100000+10*IYEAA+2
         JBSCL=NLINK('BSCL',NBSC)
         IF (JBSCL.LE.0) GO TO 700
         KBSCL=KROW(JBSCL,1)
         IW(KBSCL+JBMCTO)=IW(KBSCL+JBMCTO)+IMBYEA(IYY)
         IW(KBSCL+JBMCRA)=IMBYEA(IYY)
 700  CONTINUE
C
C Processing finished :
C
 800  CONTINUE
      CALL AUBPRS('BSCL')
      GO TO 999
C No room to book bank 'BSCL' :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/22X,'=== Subroutine BKBSCL === : start building',
     +        ' banks BSCL for datasets size statistics')
      END
      SUBROUTINE BKBSCR(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads SCRATCH files sent by TAPES or by SYSTEM MANAGERS
C  J. Boucrot  12-Jun-1990
C  Completeley rewritten to split BKLOCM 15-Jun-1996
C  Called from BKMODD                                     from BOOKLIB
C  Calls BKPOIN,BKMESG,BKMODI,BKISDL,BKEXCT,BKFILB,BKCHKT from BOOKLIB
C  Calls ALSTIN,ALINST                                    from ALEPHLIB
C Output argument :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      SAVE
      PARAMETER ( NMAN = 4 , NDSET = 1000)
      CHARACTER*6 SYSMA(NMAN)
      CHARACTER*20 DSETN,DSNAM,DSCOP,CPTST,TMBIN
      CHARACTER TAPN*8,FREE*10,VSN*8,VSN2*8,TAPCO*8,SEPLO*1
      CHARACTER*80 BLA,MESG,INFO
      CHARACTER AXTAP*8,AXN*4,AXIND*2
      INTEGER INTAX(2),BKINCA
      INTEGER IBG(NDSET),LIROW(NDSET),ITG(NDSET),ITAB(MAXIN)
      DATA SYSMA / 'BOUCRO' , 'ALPROD' , 'EDGECO' , 'ALSOFT' /
      DATA SEPLO / '_' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ISCOK=0
      IBLAN=INTCHA('    ')
      CALL VZERO(IBG,NDSET)
      CALL VZERO(LIROW,NDSET)
      CALL VZERO(ITG,NDSET)
      MESG=' '
      JBEXA=IW(NAMIND('BEXA'))
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
      REWIND LECTXT
      IREC=0
C
 5    READ ( LECTXT, '(A)' , END=800 , ERR=900 ) INFO
      CALL CLTOU(INFO)
      IREC=IREC+1
      BLA=' '
      BLA=INFO(1:LNBLNK(INFO))
      WRITE ( LWRDBG , 1099) BLA
C Verify that the sender of the file is authorized for this Scratch task
C ( this test is switched off for files sent by TAPES )
      IF (IREC.GT.1) GO TO 11
      IF (NAMRQF(ICURFI)(1:1).EQ.'T') GO TO 11
      DO 10 ISYS=1,NMAN
         IF (INDEX(INFO,SYSMA(ISYS)).NE.0) GO TO 11
 10   CONTINUE
      GO TO 940
 11   IF (IREC.EQ.1) GO TO 5
      TAPN=' '
      TAPN(1:6)=INFO(2:7)
C-----------------------------------------------------------------------
C Files B  or TSCRATCH XXXXX contain names of datasets to be scratched :
C Search these datasets in the database ; mark them when found
C They will be really scratched from the database in subroutine BKCLEA
C ( The modifications for the tapes in TMS are done in BKUTMS )
C
 18   DSETN=INFO(13:32)
      IFILE=BKINCA(INFO(9:11))
      LL=LNBLNK(DSETN)
      IF (LL.LT.17) THEN
         DSETN=' '
      ELSE
         INB=ICFNBL(DSETN,1,20)
         DSETN=DSETN(INB:LL)
      ENDIF
      FREE=' '
      FREE(1:5)=INFO(34:38)
      ITAG=1
      IF (NAMRQF(ICURFI)(1:1).EQ.'T') GO TO 20
      IF (INDEX(FREE,'F').GT.0) ITAG=100
      IF (INDEX(FREE,'S').GT.0) ITAG=10000
 20   IMCD1=1
      IMCD2=2
      IF (DSETN(1:1).EQ.'M'.OR.DSETN(6:6).EQ.'G')   IMCD1=2
      IF (DSETN(2:4).EQ.'KIN'.OR.DSETN(6:6).EQ.'K') IMCD1=2
      IFOUN=0
C
C Expand datasets of multifile tapes , if needed:
C
      CALL BKCHKT(TAPN,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0) GO TO 5
      IF (IMULT.EQ.0) GO TO 35
C One file of a multifile tape only :
      IF (IFILE.NE.0) THEN
         ITAG=1
         GO TO 35
      ENDIF
C
C Multifile tape given by its generic name : all files have to be delete
C one has to loop on all files to mark them in BDFS afterwards
C
 23   CALL BKISDL(TAPN,2,IDLT)
      IF (NFIDLT.EQ.0) GO TO 5
      DO 25 IDF=1,NFIDLT
         ISCOK=ISCOK+1
         IF (ISCOK.GT.NDSET) THEN
            WRITE ( LWRDBG,1120) ISCOK
               IF (IBAUTO.EQ.0) PRINT 1120,ISCOK
            GO TO 800
         ENDIF
         LIROW(ISCOK)=-LISBDF(IDF)
         IBG(ISCOK)=IMCDLT
         ITG(ISCOK)=ITAG
         IF (IDF.NE.1.AND.ITAG.GT.1) ITG(ISCOK)=1
 25   CONTINUE
      WRITE (LWRDBG,1101) TAPN,DSETN,FREE,ITAG
      WRITE (LWRDBG,1121) NFIDLT
      GO TO 5
C
C Only one file of a multifile volume, or standard 3480 cartridge:
C
 35   CONTINUE
      CALL ALINST(TAPN,INTAX,NBID)
      DO 600 IK=IMCD1,IMCD2
         CALL BKPOIN(LECDAF,'BDFS',IK,JBDFS)
         IF (JBDFS.LT.0) GO TO 910
         IF (JBDFS.EQ.0) GO TO 5
         NSET=LROWS(JBDFS)
C Loop on  datasets :
C
         DO 500 ILIS=1,NSET
            KBDFS=KROW(JBDFS,ILIS)
            IF (IW(KBDFS+JBDFDF).GT.0) GO TO 500
            NPER=IW(KBDFS+JBDFNP)
            NROW=IW(KBDFS+JBDFNR)
            IF (NPER.LE.0.OR.NROW.LE.0) GO TO 500
            CALL ALSTIN(IW(KBDFS+JBDFTC),JBDFLO-JBDFTC,VSN)
            IF (VSN(1:6).NE.TAPN(1:6)) GO TO 500
            IF (IW(KBDFS+JBDFFN).NE.IFILE) GO TO 500
            IFOUN=IFOUN+1
C An ambiguity is found on any of the datasets : one has to stop
C the processing of the SCRATCH file here , to avoid catastrophes !
            IF (IFOUN.GE.2.AND.VSN(1:2).NE.'AX') THEN
               IF (IBAUTO.EQ.0) PRINT 1105,TAPN
               WRITE ( LWRDBG,1105) TAPN
               GO TO 999
            ENDIF
            IF (IW(KBDFS+JBDFCO).EQ.1) GO TO 100
C This is a master dataset . Check its DSN , if given in the input file
            IF (DSETN.EQ.' ') GO TO 40
            CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
            IF (JBSET.LT.0) GO TO 910
            IF (JBSET.EQ.0) GO TO 500
            KBSET=KROW(JBSET,NROW)
            CALL ALSTIN(IW(KBSET+JBSEAD),JBSEAU-JBSEAD,DSNAM)
            IF (DSETN.NE.' '.AND.DSNAM.NE.DSETN) GO TO 500
 40         IF (INDEX(TAPN,'AA').GT.0)  GO TO 100
C Now if this dataset is a master copy , one has to mark all its copies
C  ( with the exception of raw tapes 'AA' )
 50         NSTLO=LROWS(JBDFS)
            DO 80 IHI=ILIS+1,NSTLO
               KBDFF=KROW(JBDFS,IHI)
               IF (IW(KBDFF+JBDFCO).NE.1) GO TO 80
               IF (IW(KBDFF+JBDFNP).NE.NPER) GO TO 80
               IF (IW(KBDFF+JBDFNR).NE.NROW) GO TO 80
               ISCOK=ISCOK+1
               IF (ISCOK.GT.NDSET) THEN
                  WRITE ( LWRDBG,1120) ISCOK
                  IF (IBAUTO.EQ.0) PRINT 1120,ISCOK
                  GO TO 800
               ENDIF
               IBG(ISCOK)=IK
               ITG(ISCOK)=ITAG
               LIROW(ISCOK)=IHI
               CALL ALSTIN(IW(KBDFF+JBDFTC),2,TAPCO)
               WRITE ( LWRDBG , 1107) TAPCO,TAPN,FREE
 80         CONTINUE
 100        CONTINUE
            ISCOK=ISCOK+1
            IF (ISCOK.GT.NDSET) THEN
               WRITE ( LWRDBG,1120) ISCOK
               IF (IBAUTO.EQ.0) PRINT 1120,ISCOK
               GO TO 800
            ENDIF
            WRITE ( LWRDBG , 1101) TAPN,DSETN,FREE,ITAG
            IBG(ISCOK)=IK
            ITG(ISCOK)=ITAG
            LIROW(ISCOK)=ILIS
 500     CONTINUE
 600  CONTINUE
 700  IF (IFOUN.EQ.0) WRITE (LWRDBG,1108) TAPN
C
      GO TO 5
C-----------------------------------------------------------------------
C Processing terminated , no double count : mark effectively the dataset
 800  IF (ISCOK.EQ.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1103,ISCOK
      WRITE (LWRDBG,1103) ISCOK
       DO 850 ISS=1,ISCOK
          IF (LIROW(ISS).EQ.-1) GO TO 815
          CALL BKPOIN(LECDAF,'BDFS',IBG(ISS),JBDFN)
          KBDFN=KROW(JBDFN,IABS(LIROW(ISS)))
C Mark all scratched datasets in 'BDFS' :
          IW(KBDFN+JBDFDF)=ITG(ISS)
          IF (IW(KBDFN+JBDFCO).EQ.1) GO TO 815
          NBSET=IW(KBDFN+JBDFNP)
          NIROW=IW(KBDFN+JBDFNR)
          CALL BKPOIN(LECDAF,'BSET',NBSET,JBSEN)
          IF (JBSEN.LE.0) GO TO 850
          KBSEN=KROW(JBSEN,NIROW)
C Mark all scratched datasets in 'BSET' :
          IW(KBSEN+JBSEDF)=ITG(ISS)
C Build a line in intermediate bank BCAR,NR=1000 , for freed/scratched
 815      IF (ITG(ISS).LT.100) GO TO 850
          CALL VZERO(ITAB,MAXIN)
          DO 820 IKS=JBCAVS,JBCAWN-1
 820      ITAB(IKS)=INTCHA('    ')
          IF (LIROW(ISS).GT.0) THEN
             CALL UCOPY(IW(KBDFN+JBDFTC),ITAB(JBCAVS),2)
          ELSE
            AXTAP=TAPN(1:6)//'  '
            CALL ALINST(AXTAP,ITAB(JBCAVS),IBIDE)
          ENDIF
          ITAB(JBCARF)=ITG(ISS)
          CALL BKFILB('BCAR',1000,ITAB,LBCARA,NROU,IEOU)
          IF (IEOU.EQ.2) GO TO 910
          CALL BKMODI('BCAR',1000,0,LBCARA,IER)
 850  CONTINUE
      NBDFDO=NBDFDO+1
      NBKSCR=NBKSCR+1
      GO TO 999
C-----------------------------------------------------------------------
C Process   errors :
C Syntax error in BSCRA cards file :
C
 900  IVAL=1
      MESG=(' +++ Error in BKBSCR : syntax error in file')
      GO TO 920
C No room for banks
 910  IVAL=2
      MESG=(' +++ Error in BKBSCR : NO ROOM for banks')
C
 920  IER=1
      BLA=INFO(1:80)
      CALL BKMESG(BLA,IVAL,MESG)
      GO TO 999
C User not authorized to scratch datasets :
 940  IF (IBAUTO.EQ.0) PRINT 1102,INFO
      WRITE ( LWRDBG,1102) INFO
 999  RETURN
C-----------------------------------------------------------------------
 1099 FORMAT (/1X,A80)
 1100 FORMAT (/2X,'=== Subroutine BKBSCR ===   : Start processing',
     +        ' Request File',I5,2X,A25/)
 1101 FORMAT (7X,'+++ BKBSCR : TAPE,Dset scratched',2X,A8,2X,A18,
     +        ' Flag for FREE =',2X,A10,' ITAG =', I8)
 1102 FORMAT (7X,'+++ BKBSCR : User not authorized to scratch',
     +        ' datasets : '/15X,A80)
 1103 FORMAT (7X,'+++ Number of datasets marked as scratched =',I9)
 1105 FORMAT (7X,'+++ At least two datasets found for tape',2X,A8,
     +        /7X,' ======   BKBSCR STOPPED FOR THIS FILE =====')
 1107 FORMAT (7X,'+++ BKBSCR : TAPE ',2X,A8,' Scratched : was copy of',
     +        2X,A8,' Flag for FREE =',2X,A10)
 1108 FORMAT (7X,'+++ BKBSCR : TAPE NOT FOUND =',2X,A8)
 1120 FORMAT (/1X,100(1H*)/7X,'+++ BKBSCR : Too Many Datasets !! ',
     +        /7X,'+++ Cleanup stopped at dataset # ',I8/1X,100(1H*)/)
 1121 FORMAT (7X,'+++ BKBSCR : Multifile volume with',I5,' files to ',
     +        'be scratched')
      END
      SUBROUTINE BKBSET(ILU,IER)
C ----------------------------------------------------------------------
C! Fills Bookkeeping bank 'BSET' once per RUN
C  for each dataset written on output by production jobs
CKEY  BOOK BSET FILL / INTERNAL
C J. Boucrot  20-Nov-1988
C  Modified   26-Jun-1992 for new structure of 'BSET' bank
C Called from BKENRU                                from ALEPHLIB
C Calls  AUBOS,ALSTIN,ALELEP                        from ALEPHLIB
C Calls  BKFILL,BKBTAP                              from BOOKLIB
C  Input parameter :
C    ILU  = Output stream # corresponding to the dataset
C           written by the production job
C  Output parameter :
C    IER  = 0 if all OK  , = 1 if no room to book banks
C  Input banks :  RUNH ,EVEH
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- RUNHJJ ----
      PARAMETER(JRUNEN=1,JRUNRN=2,JRUNRT=3,JRUNSD=4,JRUNST=5,LRUNHA=5)
C-- EVEHJJ ----
      PARAMETER(JEVEEN=1,JEVERN=2,JEVERT=3,JEVEDA=4,JEVETI=5,JEVEEV=6,
     +          JEVEM1=7,JEVEM2=8,JEVEM3=9,JEVEM4=10,JEVETY=11,
     +          JEVEES=12,JEVETE=13,LEVEHA=13)
C-- KJOBJJ ----
      PARAMETER(JKJOJD=1,JKJOJT=2,JKJOAV=3,JKJODV=4,JKJODC=5,LKJOBA=5)
C-- KRUNJJ ----
      PARAMETER(JKRUGI=1,JKRUNO=2,JKRURT=3,JKRUFS=15,JKRUSS=16,
     +          LKRUNA=16)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- RLEPJJ ----
      PARAMETER(JRLELE=1,JRLELB=2,JRLELD=3,JRLELF=4,JRLELP=5,LRLEPA=5)
       INTEGER ITAB(MAXIN)
       CHARACTER*80 VARCH(MAXCH)
       CHARACTER*3 PRN3
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C Initializations :
C
      IER=0
      NRUN=0
      CALL BKBLAN('BSET',VARCH,ITAB)
      JRUNR=IW(NAMIND('RUNR'))
      IF (JRUNR.GT.0) THEN
         NRUN=IW(JRUNR+JRUNRN)
      ELSE
         JRUNH=IW(NAMIND('RUNH'))
         IF (JRUNH.GT.0) NRUN=IW(JRUNH+JRUNRN)
      ENDIF
      IF (NRUN.EQ.0) GO TO 999
      NCALLS(ILU)=NCALLS(ILU)+1
C-----------------------------------------------------------------------
C Build bank 'BTAP' for datasets written on tape/cartridge :
      CALL BKBTAP(ILU,NRUN,IER)
      IF (IER.NE.0) GO TO 999
C
C On first pass for this ILU , get the data for 'BSET' which do not
C vary from run to run :
C
      IF (NCALLS(ILU).EQ.1) THEN
         JRUNH=IW(NAMIND('RUNH'))
         ITAB(JBSEFR)=NRUN
C First event # in dataset :
         ITRG1=1
         JSEVT=NLINK('SEVT',0)
         IF (JSEVT.NE.0) ITRG1=IW(JSEVT+2)
         IF (NPAROU.EQ.1) ITRG1=LPAROU(2)
         ITAB(JBSEFE)=ITRG1
C Date/time of data taking or processing :
         IDAT=0
         ITIM=0
         IF (JRUNH.GT.0) THEN
            IDAT=IW(JRUNH+JRUNSD)
            ITIM=IW(JRUNH+JRUNST)
         ENDIF
         IF (NPAROU.EQ.1) THEN
            IDAT=LPAROU(5)
            ITIM=LPAROU(6)
         ENDIF
         ITAB(JBSEWD)=IDAT
         ITAB(JBSEWH)=ITIM
C Nature of data
         ITAB(JBSEND)=NADTOU(ILU)
C Get the LEP energy :
      ILEP=NINT(1000.*ALELEP(NRUN))
         ITAB(JBSEBN)=ILEP
C Pointers to related banks :
         ITAB(JBSEBP)=1
         ITAB(JBSEBS)=1
         ITAB(JBSEBT)=ITAPOU(ILU)
C Dataset name , operator name :
         VARCH(1)=DSETNA(ILU)
         IBKOP=IW(NAMIND('BUSR'))
         IF (IBKOP.NE.0) THEN
            CALL ALSTIN(IW(IBKOP+1),IW(IBKOP),VARCH(2))
         ENDIF
C
C Book/fill bank BSET :
C
         JBSET=NLINK('BSET',NPER)
         IOLR=0
         IF (JBSET.EQ.0) THEN
            LENB=LBSETA*NBROW+LMHLEN
         ELSE
            IF (LFRROW(JBSET).GT.1) GO TO 50
            LENB=IW(JBSET)+LBSETA*NBROW
            IOLR=LROWS(JBSET)
         ENDIF
C Book or enlarge 'BSET' if needed :
         CALL AUBOS('BSET',NPERPR,LENB,JBSET,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JBSET+LMHCOL)=LBSETA
         IW(JBSET+LMHROW)=IOLR
C
 50      CALL BKFILL('BSET',NPERPR,VARCH,ITAB)
      ENDIF
C
C For all calls , update relevant quantities :
C
      JBSET=NLINK('BSET',NPERPR)
      KBSET=KROW(JBSET,ILU)
C last run , last event :
      IW(KBSET+JBSELR)=NRUN
      ITRLS=NEVRUN(ILU)
      IF (NPAROU.EQ.1.AND.LPAROU(4).GT.0) ITRLS=LPAROU(4)
      IW(KBSET+JBSELE)=ITRLS
C update pointers to 'BRLI' , if any :
      IF (NCALLS(ILU).GT.1) THEN
         IW(KBSET+JBSEBA)=ILU
         IW(KBSET+JBSEBR)=NCALLS(ILU)
      ENDIF
C
      GO TO 999
C
C No room to book or enlarge  'BSET' :
C
 900   IER=1
C
 999   RETURN
       END
      SUBROUTINE BKBSPF(IER)
C ----------------------------------------------------------------------
C! Builds the 'BSPF' bank for Bookkeeping
CKEY ALBOOK PROD FILL/INTERNAL
C  J. Boucrot         3-May-1989  , modified several times
C  Called from BKENRU                           from BOOKLIB
C  Calls AUBOS,ALSTIN                           from ALEPHLIB
C  Calls BKBLAN,BKFILL,BKGPCO,BKKDYM            from BOOKLIB
C  Output argument  :
C    IER  = 0 if all OK
C         = 1 if no room to book bank 'BSPF'
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- KJOBJJ ----
      PARAMETER(JKJOJD=1,JKJOJT=2,JKJOAV=3,JKJODV=4,JKJODC=5,LKJOBA=5)
C-- KRUNJJ ----
      PARAMETER(JKRUGI=1,JKRUNO=2,JKRURT=3,JKRUFS=15,JKRUSS=16,
     +          LKRUNA=16)
C-- ASIMJJ ----
      PARAMETER (JASIYM=1,LASIMA=1)
      PARAMETER ( IRMA = 100000 , IKRCO = 10000 )
      PARAMETER ( IHVL1 = 45030 , IHVNW = 5300 )
      INTEGER BKINCA,ITAB(MAXIN)
      CHARACTER*10000 CARKC
      CHARACTER*80 VARCH(MAXCH)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
C Book bank 'BSPF' ( only 1 row )
      LENB=LBSPFA+LMHLEN
      CALL AUBOS('BSPF',NPERPR,LENB,JBSPF,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBSPF+LMHCOL)=LBSPFA
      IW(JBSPF+LMHROW)=0
      CALL BKBLAN('BSPF',VARCH,ITAB)
      VARCH(1)=' '
C Decode comment from data card 'BCOM' , if any
      IBCOM=IW(NAMIND('BCOM'))
      IF (IBCOM.NE.0) THEN
         CALL ALSTIN(IW(IBCOM+1),IW(IBCOM),VARCH(1))
      ENDIF
      IKOPA=0
C Decode special particle code from 'BSPA' if  any
      IKOPA=0
      IBSPA=IW(NAMIND('BSPA'))
      IF (IBSPA.NE.0) IKOPA=IW(IBSPA+1)
C If no 'BSPA' bank , try to guess if there should have been one :
      IF (IKOPA.EQ.0) THEN
         ICBBA=0
         IKCAR=IW(NAMIND('KCAR'))
         IF (IKCAR.GT.0) THEN
            INUC=IKRCO/4
            CALL ALSTIN(IW(IKCAR+1),INUC,CARKC)
            INGLU=INDEX(CARKC,'GLUN')
            IF (INGLU.GT.0) ICBBA=BKINCA(CARKC(INGLU+5:INGLU+12))
         ENDIF
         IF (ICBBA.GT.0) IKOPA=100+ICBBA
         IF (ICBBA.EQ.0) THEN
            CALL BKGPCO(VARCH(1),IPAF,IAMB)
            IF (IAMB.EQ.0.AND.IPAF.GT.0) IKOPA=IPAF
         ENDIF
      ENDIF
C No special particle found : try BKKDYM if 'KDYM' bank exists:
      IF (IKOPA.EQ.0) THEN
         CALL BKKDYM(IKOP,IERK)
         IF (IERK.EQ.0) IKOPA=IKOP
      ENDIF
C Get the KINGAL generator code and the RANMAR generator seeds :
 100  IKRU=IW(NAMIND('KRUN'))
      IF (IKRU.NE.0) THEN
         IKOD=ITABL(IKRU,1,JKRUGI)
         IF (IKOD.EQ.IHVL1) IKOD=IHVNW
         ITAB(JBSPKC)=MOD(IKOD,IKRCO)
         ITAB(JBSPFR)=ITABL(IKRU,1,JKRUFS)
         ITAB(JBSPSR)=ITABL(IKRU,1,JKRUSS)+IRMA*IKOPA
      ENDIF
C Get the Year of Geometry for GALEPH :
      IKAP=IW(NAMIND('ASIM'))
      IF (IKAP.NE.0) THEN
C Year/version of GALEPH Geometry in ASIM :
C was previously yyvv, may become yyyyvv
         IDASI=ITABL(IKAP,1,JASIYM)
         IDABA=IDASI
         IF (IDASI.GT.IRMA) THEN
            IDD=IDASI/IKRCO
            IDABA=IDASI-IDD*IKRCO
         ENDIF
         ITAB(JBSPRG)=IDABA
      ENDIF
C  Fill 'BSPF' :
      CALL BKFILL('BSPF',NPERPR,VARCH,ITAB)
C
      GO TO 999
C No room to book 'BSPF' :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKBTAP(ILU,NRUN,IERB)
C-----------------------------------------------------------------------
C! Books/fills Bookkeeping bank BTAP
C  for datasets written on Tape or Cartridge
CKEY  BOOK BTAP BTFI FILL / INTERNAL
C  J. Boucrot        23-Nov-1988
C Called from BKBSET                                       from ALEPHLIB
C Calls IUCOMP                                              from  GENLIB
C Calls AUBOS,ALGTYP,ALDTYP                                from ALEPHLIB
C Calls BKFILL,BKBBUF,BKBLAN                               from BOOKLIB

C  Input bank needed : '+BUF'
C  Input arguments :
C     ILU = Output stream # corresponding to the current dataset
C    NRUN = Run number
C  Output argument :
C   IERBK = 0 if all OK
C         = 1 if no room to book/enlarge banks
C-----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- RLEPJJ ----
      PARAMETER(JRLELE=1,JRLELB=2,JRLELD=3,JRLELF=4,JRLELP=5,LRLEPA=5)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      COMMON / TAPEFIL / IFILTA
      EXTERNAL INTCHA,IUCOMP
      PARAMETER (  RBYTE = 1000000. )
      INTEGER ALGTYP,ITAB(MAXIN),ITTAP(NBROW)
      CHARACTER*80 VARCH(MAXCH)
      DATA ITAP,IONC  /2*0/
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C  Initializations :
      IERB=0
      IF (ITAPOU(ILU).EQ.0) GO TO 999
      IF (IONC.EQ.0) THEN
         IONC=1
         DO 5 IK=1,NBROW
 5       ITTAP(IK)=0
      ENDIF
      JEXFI=IW(NAMIND('EXFI'))
C
      NOLBY=NBYTOT(ILU)
C
      CALL BKBLAN('BTAP',VARCH,ITAB)
C
C Get buffer counts and formats from bank '+BUF' :
C
      LUN=LISLOU(ILU)
      CALL BKBBUF(LUN,IOK,NRECS,IBLKS,QMBYT)
      IF (IOK.EQ.0) GO TO 999
      NNBYT=NINT(RBYTE*QMBYT)
      NBYTOT(ILU)=NNBYT
C
C-----------------------------------------------------------------------
C Store informations on banks 'BTAP' and 'BTFI'
C
      JBTAP=NLINK('BTAP',NPERPR)
      IOLR=0
      IF (JBTAP.EQ.0) THEN
         LENB=LBTAPA*NBROW+LMHLEN
      ELSE
         IF (LFRROW(JBTAP).GT.1) GO TO 110
         LENB=IW(JBTAP)+LBTAPA*NBROW
         IOLR=LROWS(JBTAP)
      ENDIF
C Book or enlarge 'BTAP' if needed :
      CALL AUBOS('BTAP',NPERPR,LENB,JBTAP,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBTAP+LMHCOL)=LBTAPA
      IW(JBTAP+LMHROW)=IOLR
C
 110  CONTINUE
C
C On first call for this LUN , fill 'BTAP' with relevant data :
C
      IF (NCALLS(ILU).EQ.1) THEN
         ITAP=ITAP+1
         ITTAP(ITAP)=LUN
         VARCH(1)=VSNTAP(ILU)
         IF (VARCH(1)(1:2).EQ.'AR'.OR.VARCH(1)(1:2).EQ.'AS') GO TO 120
         IF (VARCH(1)(7:8).EQ.'01')  VARCH(1)(7:8)='  '
         IF (IFILTA.GT.MAXBD)  VARCH(1)(7:8)='  '
 120     VARCH(2)=FORMFI(ILU)
         ITAB(JBTARN)=NRECS
         LRECL=4*IBLKS
         IF (FORMFI(ILU).EQ.'EPIO') LRECL=2*IBLKS
         ITAB(JBTALR)=LRECL
         ITAB(JBTABL)=IBLKS
         ITAB(JBTANF)=1
C If data card 'EXFI' was present , indicates the Exabyte file number
C to be stored in JBTANF :
         IF (JEXFI.GT.0) ITAB(JBTANF)=IW(JEXFI+1)
         CALL BKFILL('BTAP',NPERPR,VARCH,ITAB)
         NRR=ITAP
         KBTAP=KROW(JBTAP,NRR)
C On further calls , update the number of records and files :
      ELSE
         NRR=IUCOMP(LUN,ITTAP,NBROW)
         IF (NRR.EQ.0.OR.NRR.GT.LROWS(JBTAP)) GO TO 999
         KBTAP=KROW(JBTAP,NRR)
         IW(KBTAP+JBTARN)=NRECS
         IW(KBTAP+JBTANF)=IW(KBTAP+JBTANF)+1
         IF (JEXFI.GT.0) IW(KBTAP+JBTANF)=IW(JEXFI+1)
      ENDIF
C
C Store information in bank 'BRLI' :
C
      JBRLI=NLINK('BRLI',NPERPR)
      IOLR=0
      IF (JBRLI.EQ.0) THEN
         LENB=LBRLIA*NBROW+LMHLEN
      ELSE
         IF (LFRROW(JBRLI).GT.1) GO TO 130
         LENB=IW(JBRLI)+LBRLIA*NBROW
         IOLR=LROWS(JBRLI)
      ENDIF
C Book or enlarge 'BRLI' if needed :
      CALL AUBOS('BRLI',NPERPR,LENB,JBRLI,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBRLI+LMHCOL)=LBRLIA
      IW(JBRLI+LMHROW)=IOLR
C
 130  VARCH(1)=' '
      INRUN=NRUN
      IGEA=ALGTYP(I1,I2,I3,I4)
      CALL ALDTYP(NADAT)
      IF (IGEA.EQ.1.OR.NADAT.EQ.1) THEN
         IRLEP=IW(NAMIND('RLEP'))
         IF (IRLEP.GT.0) INRUN=100000*NRUN+ITABL(IRLEP,1,JRLELE)/10
      ENDIF
      ITAB(JBRLRN)=INRUN
      ITAB(JBRLNE)=NEVRUN(ILU)
      ITAB(JBRLNB)=NBYTOT(ILU)-NOLBY
      CALL BKFILL('BRLI',NPERPR,VARCH,ITAB)
C
      GO TO 999
C
C Problems with banks :
C
 900  IERB=1
C
 999  RETURN
      END
      SUBROUTINE BKBYEA(IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads the RUNYEAR  LISTE file updating the Year/Runs List
C  J. Boucrot       30-Sep-1992
C UNIX Version 06-Oct-1995
C Called from BKUPDF                            from  BOOKLIB
C Calls AUBOS,AUBPRS                            from ALEPHLIB
C Calls BKMESG,BKCARI,BKFILB                    from BOOKLIB
C Calls BDROP                                   from BOS77
C     Fill  the 'BYEA' bank describing the Year/runs
C  Output argument IER = 1 if no room to book banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( NMXYE = 13 )
      INTEGER ITAB(MAXIN),IYEAR(NMXYE),IFRUN(NMXYE),ISLFI(NMXYE)
      CHARACTER INFO*120,MESG*80
      CHARACTER NAMPR*80
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C ----------------------------------------------------------------------
      IER=0
      IREC=0
      IPAR=0
      IF (IBUPDA.GE.2) GO TO 999
C
C Open the RUNYEAR  LISTE file on Fortran unit LECYEA :
C
      NAMPR=' '
      NAMPR=ALS_REFR(1:ILREFR)//'runyear.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      OPEN ( LECYEA , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
      CALL VZERO(IYEAR,NMXYE)
      CALL VZERO(IFRUN,NMXYE)
      CALL VZERO(ISLFI,NMXYE)
C Read one record and check for keywords :
 1    READ (LECYEA , '(A120)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
      IF (IREC.LE.4) GO TO 1
      IF (LNBLNK(INFO).EQ.0) GO TO 1
      IPAR=IPAR+1
      IF (IPAR.EQ.1) READ ( INFO , 1001 )  IYEAR
      IF (IPAR.EQ.2) READ ( INFO , 1001 )  IFRUN
      IF (IPAR.EQ.3) READ ( INFO , 1001 )  ISLFI
      GO TO 1
C Fill the bank 'BYEA' and the tables LISYEA , etc .. :
 800  CALL BDROP(IW,'BYEA')
      IKOK=0
      DO 820 IK=1,NMXYE
         IF (IYEAR(IK).LE.0) GO TO 850
         CALL VZERO(ITAB,MAXIN)
         ITAB(JBYEYR)=IYEAR(IK)
         ITAB(JBYEFR)=IFRUN(IK)
         ITAB(JBYELR)=ISLFI(IK)
         CALL BKFILB('BYEA',1,ITAB,LBYEAA,NOUT,IER)
         IF (IER.GE.2) GO TO 910
         LISYEA(IK)=IYEAR(IK)
         LISFRU(IK)=IFRUN(IK)
         LISLFI(IK)=ISLFI(IK)
         IKOK=IK
 820  CONTINUE
 850  NTOYEA=IKOK
      CALL AUBPRS('BYEA')
      GO TO 999
C ----------------------------------------------------------------------
C Process error :
 900  MESG=' +++ Error in BKBYEA : syntax error in file'
      CALL BKMESG(INFO,IREC,MESG)
      GO TO 999
 910  IER=1
C
 999  RETURN
 1001 FORMAT (13(1X,I6))
      END
      SUBROUTINE BKCASI(IERCA)
C ----------------------------------------------------------------------
CKEY SCANBOOK STEER
C! Fills keys for datasets selection in SCANBOOK
C  J. Boucrot   25-June-1990  Modified 27-Nov-1990 for Opt 6
C  Modif 10-Oct-1992 all checks SRUN/IYEAR are now in BKRUCA
C  Calls ACARD1,BKINCA                              from ALEPHLIB
C  Calls CLTOU                                      from KERNLIB
C  Calls BKKYIN                                     from BOOKLIB
C  Called from BKSKEY                               from BOOKLIB
C Input : BOS data cards SCOU , SCIN , MCAR defining the SCANBOOK search
C         conditions ( user-provided , or generated by the execs )
C Output argument : IERCA = 0 if all OK
C                         = 1 if severe syntax error in data cards
C The selections are stored in variables of the common / BKKEYS /
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
      PARAMETER ( LNTAP = 6 )
      INTEGER ACARD1,BKINCA
      CHARACTER PARAM*60,KEY*60,BLAB*2
C ----------------------------------------------------------------------
      IERCA=0
      IF (IDSEAR.EQ.100.OR.IDSEAR.EQ.9) GO TO 999
      IF (IDSEAR.EQ.0.OR.IDSEAR.GT.9) GO TO 980
      IF (CARDSF.NE.' ') IBKINT=1
C ----------------------------------------------------------------------
C Decode the 'SCIN' data card to decode the input selection parameters :
C
C Example of syntax :
C  SCIN  'Nature_of_Data = DST | Year = 1990 | Homelab = UK'
C        ' LEP_Energy = 91250  | Run_Qual = PERF | Mag_Dev = CART'
C        ' Format = NATV '
 5    IF (IDSEAR.EQ.100.OR.IDSEAR.GE.9) GO TO 999
      IF (ACARD1('SCIN').EQ.0) GO TO 980
      NPAR=0
 10   NPAR=NPAR+1
      CALL BKKYIN(NPAR,IOK,KEY,PARAM)
      IF (IOK.EQ.0) GO TO 100
C Run_Quality selection :
      IF (KEY(1:1).EQ.'R') THEN
         IF (INDEX(PARAM,'P').NE.0) ISPERF=1
         IF (INDEX(PARAM,'MAY').NE.0) ISPERF=0
         IF (INDEX(PARAM,'ALL').EQ.1) ISELPH=0
         IF (INDEX(PARAM,'.').NE.0) THEN
            PHYKEY=PARAM(1:LNBLNK(PARAM))
            GO TO 10
         ENDIF
         SELPHY=PARAM(1:2)
         if (lnblnk(param).eq.2) phykey(1:2)=selphy
C Nature of data to be selected  :
      ELSEIF (KEY(1:1).EQ.'N') THEN
         SELDAT=PARAM(1:1)
C LEP Energy to be selected :
      ELSEIF (KEY(1:1).EQ.'L') THEN
         IF (PARAM(1:1).NE.'A') ENGLEP=0.001*FLOAT(BKINCA(PARAM))
C YEAR of data taking to be selected :
      ELSEIF (KEY(1:1).EQ.'Y') THEN
         ISYEAR=BKINCA(PARAM)
C Magnetic device on which data are stored :
      ELSEIF (KEY(1:1).EQ.'M') THEN
         SELMAG=PARAM(1:1)
         IF (SELMAG.EQ.'D'.OR.SELMAG.EQ.'F') IDSEAR=2
C Format of data ( EPIO / NATIVE ) :
      ELSEIF (KEY(1:1).EQ.'F') THEN
         IF (INDEX(PARAM,'N').NE.0) SELFOR='NATV'
         IF (INDEX(PARAM,'E').NE.0) SELFOR='EPIO'
C HOMELAB to be selected  :
      ELSEIF (KEY(1:1).EQ.'H') THEN
      IF (IDSEAR.NE.1.AND.IDSEAR.NE.4.AND.IDSEAR.NE.7.AND.IDSEAR.NE.8)
     +    GO TO 50
         IF (PARAM(1:2).EQ.'AL') THEN
            ILABCH=-1
            GO TO 50
         ENDIF
         DO 30 KK=1,NLABOK
            BLAB=CLISTL(KK)(1:2)
            CALL CLTOU(BLAB)
            IF (PARAM(1:2).EQ.BLAB) THEN
               ILABCH=KK
               GO TO 40
            ENDIF
 30      CONTINUE
 40      CONTINUE
C Define POT/DST  to be searched
         SELMAG='TC'
         SELPOT=CTAPSL(ILABCH)
         SELCAT=SELPOT
 50      CONTINUE
      ENDIF
C go to next parameter on data card :
      GO TO 10
C
C ----------------------------------------------------------------------
C Decode the 'PROC' data card to decode the conditions on processing :
C
C Example of syntax :
C  PROC  'Julia_processing = LAST | Before = 900101 | After = 890930'
C
 100  IF (ACARD1('PROC').EQ.0) GO TO 230
      NPAR=0
      IDAAF=0
      IDABE=0
 110  NPAR=NPAR+1
      CALL BKKYIN(NPAR,IOK,KEY,PARAM)
      IF (IOK.EQ.0) GO TO 220
C Processing level :
      IF (KEY(1:1).EQ.'J') THEN
         IF (PARAM(1:1).EQ.'O')  LASTPR=3
         IF (PARAM(1:1).EQ.'P') LASTPR=2
         IF (PARAM(1:1).EQ.'A')  LASTPR=0
         IF (PARAM(1:1).EQ.'L')  LASTPR=1
         IF (PARAM(1:1).EQ.'T')  LASTPR=100
         IF (PARAM(1:1).EQ.'C')  LASTPR=1000
         IF (PARAM(1:1).EQ.'J')  THEN
            LASTPR=0
            IPRGVR=BKINCA(PARAM(2:4))
         ENDIF
C AFTER date :
      ELSEIF (KEY(1:1).EQ.'A') THEN
         IDAAF=BKINCA(PARAM)
C BEFORE date :
      ELSEIF (KEY(1:1).EQ.'B') THEN
         IDABE=BKINCA(PARAM)
      ENDIF
      GO TO 110
C fill variables ISDATE and ISDATF :
 220  IF (IDAAF+IDABE.EQ.0) GO TO 230
      IF (IDABE.EQ.0) THEN
         ISDATE=IDAAF
      ELSEIF ( IDAAF.EQ.0) THEN
         ISDATE=-IDABE
      ELSE
         ISDATE=IDAAF
         ISDATL=IDABE
      ENDIF
      IF (ISDATL.GT.0.AND.ISDATE.GT.ISDATL) GO TO 980
C Decode the 'MNAN' data card to decode the MINI / NANO version number :
C
C Example of syntax :
C  MNAN  'MINI_Version = 8 | NANO_Version = 111'
C
 230  IF (ACARD1('MNAN').EQ.0) GO TO 240
      NPAR=0
 231  NPAR=NPAR+1
      CALL BKKYIN(NPAR,IOK,KEY,PARAM)
      IF (IOK.EQ.0) GO TO 240
C Program name / version munber :
      IF (KEY(1:1).EQ.'M') IMINPR=BKINCA(PARAM(1:3))
      IF (KEY(1:1).EQ.'N') INANPR=BKINCA(PARAM(1:3))
C Decode the 'TRKQ' data card to decode the Tracking_Quality selection :
C
C Example of syntax :
C  TRKQ  'TPC_Shorts = -2'
C
 240  IF (ACARD1('TRKQ').EQ.0) GO TO 250
      NPAR=0
 241  NPAR=NPAR+1
      CALL BKKYIN(NPAR,IOK,KEY,PARAM)
      IF (IOK.EQ.0) GO TO 250
C Tracking Quality selection level :
      IF (KEY(1:1).EQ.'T') IBTQSE=BKINCA(PARAM(1:2))
C ----------------------------------------------------------------------
C Decode the 'MCAR' data card to decode the conditions on MCARLO data:
C Example of syntax :
C  MCAR  'Kingal_code = 5007 | Ranm1 = 31  | Ranm2 = 2 '
C        'Galeph_Version = 237'
C
 250  IF (IDSEAR.EQ.2.AND.LASTPR.NE.100) LASTPR=0
      IF (ACARD1('MCAR').EQ.0) GO TO 300
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.3.OR.IDSEAR.EQ.5) GO TO 980
      NPAR=0
 260  NPAR=NPAR+1
      CALL BKKYIN(NPAR,IOK,KEY,PARAM)
      IF (IOK.EQ.0) GO TO 300
      IMCDAT=2
C KINGAL code , RANMAR Seeds :
      IF (KEY(1:1).EQ.'K') THEN
         KINCOD=BKINCA(PARAM)
      ELSEIF ( KEY(1:5).EQ.'RANM1')  THEN
         ISEED1=BKINCA(PARAM)
      ELSEIF ( KEY(1:5).EQ.'RANM2')  THEN
         ISEED2=BKINCA(PARAM)
C Program version :
      ELSEIF (INDEX(KEY,'JULIA_V').NE.0) THEN
         IPRGVR=BKINCA(PARAM)
C GALEPH version :
      ELSEIF ( INDEX(KEY,'GALEPH_V').NE.0) THEN
         IGALPR=BKINCA(PARAM)
C GALEPH  year of geometry :
      ELSEIF ( INDEX(KEY,'GALEPH_G').NE.0) THEN
         IGEOYR=BKINCA(PARAM)
C Special PARTICLE code :
      ELSEIF ( INDEX(KEY,'PART').NE.0) THEN
         ISELPA=BKINCA(PARAM)
      ENDIF
      GO TO 260
C
C Z0SL data card : number of Z0s to be selected for the user :
C
 300  IZ0SL=IW(NAMIND('Z0SL'))
      IF (IZ0SL.GT.0) IZASKD=IW(IZ0SL+1)
C Special 1997 MCarlo selections:
      IMC97=IW(NAMIND('MC97'))
      IF (IMC97.GT.0) THEN
         INIP97=1
         IROW97=IW(IMC97+1)
      ENDIF
      IOPT8=IW(NAMIND('OPT8'))
      IF (IOPT8.GT.0.AND.IDSEAR.EQ.8) THEN
         IMCDAT=IW(IOPT8+1)
         IF (IMCDAT.LT.0.OR.IMCDAT.GT.2) GO TO 980
      ENDIF
C SDL1 Data Card : LEP I datasets of 1995 required :
      ISDL1=IW(NAMIND('SDL1'))
      IF (ISDL1.GT.0) ILP195=1
C DLT cartridges required :
      ISDLT=IW(NAMIND('SDLT'))
      IF (ISDLT.GT.0) THEN
         IF (SELDAT.EQ.'P') IDLDAT=1
         IF (SELDAT.EQ.'R') IDLCRW=1
      ENDIF
C Set switches IDASEL and IALISE from what is already selected :
      CALL BKDASEL
C EG97 data card for grouped 1997 energies:
      if (iw(namind('EG97')).gt.0) ienv97=1
      call bkpgval
      GO TO 999
C ----------------------------------------------------------------------
C  Syntax error in a data card :
 980  IERCA=1
C
 999  RETURN
      END
      SUBROUTINE BKCHHO(NAMT,ICERN,IHOML,IMULT,IEXA,IDLT,I3490,IEROR)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Checks if a tape/cart name NAMT is an ALEPH Homelab one
C  J. Boucrot  22 - Sep - 1995
C  Completely rewritten 18-Mar-1996
C Called from BKCHKT
C Calls BKTANA                                 from BOOKLIB
C Calls CLTOU                                  from KERNLIB
C Input argument :
C    NAMT  : Name of tape/cartridge
C Output arguments :
C   ICERN = 1 if official ALEPH CERN tape , REAL Data
C   ICERN = 2 if official ALEPH CERN tape , MCarlo Data
C   ICERN = 0 if not  ALEPH CERN tape
C   IHOML = Homelab number in the BKINSC / BKLABS/ convention
C   IHOML = 0 if CERN tape
C   IMULT = 1 if multi-file tape
C   IEXA  = 1 if EXABYTE
C   IDLT  = 1 if DLT
C   IDLT  = 2 if REDWOOD cartridge
C   IDLT  = 3 if NTP     cartridge
C   I3490 = 1 if 3490 Cartridge
C   IEROR = 0 if all OK , = 1 if NOT an official ALEPH tape
C-----------------------------------------------------------------------
      SAVE
      CHARACTER*(*) NAMT
      CHARACTER NAMO*6,HOMNA*8,TNAT*1,TLABL*1
C-----------------------------------------------------------------------
      IEROR=1
      ICERN=0
      IHOML=0
      IMULT=0
      IEXA=0
      IDLT=0
      I3490=0
      NAMO=NAMT(1:6)
      CALL CLTOU(NAMO)
C Determine if this is an ALEPH tape :
      CALL BKTANA(NAMO,HOMNA,TNAT,TLABL,IHOME,IERT)
      IF (IERT.NE.0) GO TO 999
C Yes, it is : determine the Homelab :
      IF (IHOME.EQ.1)     ICERN=1
      IF (IHOME.EQ.101)   ICERN=2
      IF (ICERN.EQ.0) IHOML=IHOME
C Determine the nature of tape :
      IF (TNAT.EQ.'D')  IDLT=1
      IF (TNAT.EQ.'R')  IDLT=2
      IF (TNAT.EQ.'N')  IDLT=3
      IF (TNAT.EQ.'E')  IEXA=1
      IF (TNAT.EQ.'L')  I3490=1
      IF(IDLT+IEXA+I3490.GT.0) IMULT=1
C This is an official ALEPH tape :
 160  IEROR=0
C
 999  RETURN
      END
      SUBROUTINE BKCHIN(VARCH,NVCH,IPOIN,IOUT)
C ----------------------------------------------------------------------
C! Auxiliary to BKFILL
CKEY ALBOOK CHARACTER STRING / INTERNAL
C  E. Locci  -   J. Boucrot       25-Jul-1988
C  Transforms an array of character variables with different lengths
C  into their integer representation , to store them in Databook banks
C  Input arguments :
C  VARCH     : array of character variables ( may be of various lengths
C  NVCH      : number of character variables
C  IPOIN(I)  : location in IOUT of the first integer word describing VAR
C  Output argument :
C  IOUT      : output buffer for the integer representation ( 4 characte
C ----------------------------------------------------------------------
       SAVE
       EXTERNAL INTCHA
       CHARACTER* (*) VARCH(*)
       INTEGER IPOIN(*) , IOUT (*)
C
       DO 100 J=1,NVCH
          LENV=LEN(VARCH(J))
          IF (LENV.EQ.0) GO TO 100
C LENWR = maximum length of VARCH(J) in 4-characters words
          LENWR=IPOIN(J+1)-IPOIN(J)
          LA=1
          LENAM=(LENV+3)/4
          LENAM=MIN(LENAM,LENWR)
C IJ = location ( in IOUT) of first word of the integer repres. of VARCH
          IJ=IPOIN(J)
          DO 10 I=1,LENAM
             LB=MIN(LA+3,LENV)
             IOUT(IJ+I-1)=INTCHA(VARCH(J)(LA:LB))
             LA=LB+1
 10       CONTINUE
 100   CONTINUE
 999   RETURN
       END
      SUBROUTINE BKCHKD(TTAP,NPER,NROW,NFRUN,NLRUN)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Check if a dataset fulfils the user's selections
C   Author   J. Boucrot   18-Nov-1990
C   Completely rewritten 03 - Oct - 1996
C Called from BKFINDED,BKFINDFI,BKFINDTA              from  BOOKLIB
C Calls ALSTIN,BKCTIM                                 from  ALEPHLIB
C Calls BKPOIN,BKELEP,BKRUOK,BKCHHO                   from  BOOKLIB
C Calls BKCHKE,BKCHKF,BKCHKJ,BKCHKM,BKCHKRUN          from  BOOKLIB
C   All user selection keywords are in / BKKEYS /
C   and have been filled during the job initialisation
C Input  arguments :
C   TTAP   =  cartridge name of the dataset
C   NPER   =  BSET bank number of the dataset
C   NROW   =  Row # of the dataset in bank BSET , NR=NPER
C Output arguments :
C   NFRUN  =  First run # of dataset ;
C          =  0 if the dataset doesn't match the selections
C   NLRUN  =  Last run # of the dataset  ( = NFRU if only 1 run )
C          =  0 in all other cases
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- DATX11 ----
      PARAMETER ( NDX11 = 50 )
      CHARACTER*80 XDATX11
      COMMON / IDATX11 /  NDATX11,NPROCL,LPROCL(4)
      COMMON / CDATX11 /  XDATX11(NDX11)
      CHARACTER TTAP*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IGOOD=0
      NFRUN=0
      NLRUN=0
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 999
      IF (NROW.LE.0.OR.NROW.GT.LROWS(JBSET)) GO TO 999
      IF (TTAP.EQ.' ') GO TO 999
      KBSET=KROW(JBSET,NROW)
C do not consider scratched datasets :
      IF (IW(KBSET+JBSEDF).NE.0) GO TO 500
      NSRUN=0
      JSRUN=IW(NAMIND('SRUN'))
      IF (JSRUN.GT.0.AND.IW(JSRUN+IW(JSRUN)).GT.0) NSRUN=IW(JSRUN)
      NFRU=IW(KBSET+JBSEFR)
      NLRU=IW(KBSET+JBSELR)
C TTAP must be an officially supported ALEPH tape :
      CALL BKCHHO(TTAP,ICERN,IHOML,IMULT,IEXAB,IDLT,I34,IEROR)
      IF (IEROR.NE.0) GO TO 500
C-----------------------------------------------------------------------
C Specific checks for Real Data :
      IF (IMCDAT.EQ.2) GO TO 20
C The tape must fulfil the required DLT/3480 nature :
      IF (IDLDAT.GT.0.AND.IDLT.EQ.0) GO TO 500
      IF (IDASEL.NE.2.OR.IDSEAR.EQ.7) GO TO 5
C If DLT RAWs are required, the tape must be a multi-file one :
      IF ((IDLCRW.GT.0.AND.IMULT.EQ.0).OR.
     +    (IDLCRW.EQ.0.AND.IMULT.GT.0).OR.
     +    (IRAWAA.GT.0.AND.IMULT.GT.0)) GO TO 500
 5    IGORU=0
C Check run range :
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
C Runs may be in any order , so check them all if possible :
      IF (JBRLI.GT.0.AND.IBRL1.GT.0.AND.IBRL2.GT.0) THEN
         DO 10 IRR=IBRL1,IBRL2
            NRU=ITABL(JBRLI,IRR,JBRLRN)
            IF (NRU.GE.ISRUNF.AND.NRU.LE.ISRUNL) THEN
               IGORU=1
               GO TO 15
            ENDIF
 10      CONTINUE
C No JBRLI information for this dataset : check NFRU,NLRU :
      ELSE
         IF (NFRU.GE.ISRUNF.AND.NFRU.LE.ISRUNL) IGORU=1
         IF (NLRU.GE.ISRUNF.AND.NLRU.LE.ISRUNL) IGORU=1
         IF (ISRUNF.GE.NFRU.AND.ISRUNL.LE.NFRU) IGORU=1
         IF (ISRUNF.GE.NFRU.AND.ISRUNL.LE.NLRU) IGORU=1
      ENDIF
 15   IF (IGORU.EQ.0) GO TO 500
C-----------------------------------------------------------------------
C Check nature of data , if required :
 20   CALL BKCHKF(TTAP,NPER,NROW,IGOOF)
      IF (IGOOF.EQ.2) THEN
         IGOOD=1
         GO TO 170
      ENDIF
      IF (IGOOF.EQ.0) GO TO 500
C-----------------------------------------------------------------------
C Selection on processing level and date :
 30   CONTINUE
      IF (NPROCL.EQ.0) THEN
         CALL BKCHKJ(NPER,NROW,IGOOJ)
         IF (IGOOJ.EQ.0) GO TO 500
      ELSE
         ISAVE=LASTPR
         IJOK=0
         DO 35 NN=1,NPROCL
            LASTPR=LPROCL(NN)
            CALL BKCHKJ(NPER,NROW,IGOOJ)
            IF (IGOOJ.NE.0) IJOK=IJOK+1
 35      CONTINUE
         LASTPR=ISAVE
         IF (IJOK.EQ.0) GO TO 500
      ENDIF
C Check LEP energy , if required ( ENGLEP >0 ):
      IF (ENGLEP.LT.0.)   GO TO 40
      CALL BKCHKE(KBSET,NPER,ILOK)
      IF (ILOK.EQ.0) GO TO 500
C Check for program versions , and for MC special keywords :
 40   CALL BKCHKM(NPER,NROW,IGOOM)
      IF (IGOOM.EQ.0) GO TO 500
C No more checks for MCarlo datasets :
      IF (IMCDAT.EQ.2) THEN
         IGOOD=1
         GO TO 170
      ENDIF
C-----------------------------------------------------------------------
C Selection on run properties ( Real Data only ) :
C Only 1 run in the dataset ; check if it is OK :
      IF (NFRU.NE.NLRU) GO TO 50
      IF (JSRUN.GT.0.AND.NSRUN.GT.0) THEN
         IF (IUCOMP(NFRU,IW(JSRUN+1),NSRUN).EQ.0) GO TO 500
      ENDIF
      CALL BKRUOK(NFRU,IPHY,IOK)
         IF (LASTPR.EQ.1.AND.IBTQSE.NE.2) THEN
            CALL BKPRLV(DNADAT(IDASEL),NFRU,0,0,ILV,IFD,ILD,IERP)
            IF (IERP.NE.0) GO TO 170
         ENDIF
      IF (IOK.EQ.0) IGOOD=1
      GO TO 170
C Several runs on the dataset :
 50   CALL BKCHKRUN(KBSET,NPER,IROK)
      IF (IROK.EQ.1) IGOOD=1
C----------------------------------------------------------------------
C Dataset good / not good :
 170  IF (IGOOD.EQ.0) GO TO 500
      NFRUN=NFRU
      NLRUN=NLRU
 500  CONTINUE
C
 999  RETURN
C----------------------------------------------------------------------
 1013 FORMAT ( 15(1X,I4))
 1014 FORMAT ( 15(I5,1X))
      END
      SUBROUTINE BKCHKE(KBSET,NPER,IOK)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Check if a dataset fulfils the LEP ENERGY selections
C   Author   J. Boucrot   26-Feb-1996
C Called from BKCHKD or BKSRPS                        from  BOOKLIB
C Calls BKPOIN,BKTLEP                                 from  BOOKLIB
C Input  argument  :
C  KBSET   =  pointer to dataset in BSET
C   NPER   =  Dataset period number
C Output argument  :
C    IOK   =  1 if the present dataset is OK for the energy selection
C          =  0 if not
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( IFARU = 100000 , IFACT = 10 )
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IOK=1
      IF (ENGLEP.LT.0.)   GO TO 999
      TOLER=0.001*FLOAT(ITOLER)
C Check LEP energy , if required ( ENGLEP >0 ):
      ILOK=0
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      NFRU =IW(KBSET+JBSEFR)
      NLRU =IW(KBSET+JBSELR)
      CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
C MCarlo  datasets :
      IF (IMCDAT.EQ.2) THEN
         IEMC=IW(KBSET+JBSEBN)
         IASKD=NINT(1000.*ENGLEP)
         IF (IABS(IEMC-IASKD).LE.ITOLER) ILOK=1
         IF (ILOK.EQ.1) GO TO 500
         IF (JBRLI.GT.0.AND.IBRL1.GT.0.AND.IBRL2.GT.0) THEN
            DO 30 IRM=IBRL1,IBRL2
               NTS=ITABL(JBRLI,IRM,JBRLRN)
               IF (NTS.LT.IFARU) GO TO 30
               NRUM=NTS/IFARU
               IEMC=IFACT*(NTS-IFARU*NRUM)
               IF (IABS(IEMC-IASKD).LE.ITOLER) THEN
                  ILOK=1
                  GO TO 500
               ENDIF
 30         CONTINUE
         ENDIF
      ENDIF
C Real data datasets :
      IF (IMCDAT.EQ.1) THEN
C BRLI exists :
         IF (JBRLI.GT.0.AND.IBRL1.GT.0.AND.IBRL2.GT.0) THEN
            DO 40 IROO=IBRL1,IBRL2
               KBRLO=KROW(JBRLI,IROO)
               NROO=IW(KBRLO+JBRLRN)
               CALL BKTLEP(NROO,ENGLEP,TOLER,ILOK)
               IF (ILOK.EQ.1) GO TO 500
 40         CONTINUE
C No BRLI :
         ELSE
            DO 50 NRR=NFRU,NLRU
               CALL BKTLEP(NRR,ENGLEP,TOLER,ILOK)
               IF (ILOK.EQ.1) GO TO 500
 50         CONTINUE
         ENDIF
      ENDIF
 500  IOK=ILOK
C
 999  RETURN
      END
      SUBROUTINE BKCHKF(TTAP,NPER,NROW,IGOOF)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Check if a dataset fulfils nature of data and Homelab selections
C   Author   J. Boucrot  26-Mar-1996   Modified 03-Oct-1996
C Called from BKCHKD                                  from  BOOKLIB
C Calls BKPOIN,BKTALO                                 from  BOOKLIB
C Calls ALSTIN,BKINCA                                 from ALEPHLIB
C   All user selection keywords are in / BKKEYS /
C Input  arguments :
C   TTAP   =  tape name of the dataset
C   NPER   =  BSET bank number of the dataset
C   NROW   =  Row # of the dataset in bank BSET , NR=NPER
C Output arguments :
C   IGOOF  =  1 if selections OK ;
C   IGOOF  =  2 if selections OK and no more checks afterwards
C          =  0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
      CHARACTER DSNAM*20,CS1*1,TTAP*8,RTAP*8,TLOCC*9
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Initializations :
      IGOOF=0
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 500
      KBSET=KROW(JBSET,NROW)
C-----------------------------------------------------------------------
C Check if tape written in EPIO or NATIVE , if this selection was asked:
      FORMSO='EPIO'
      IF (TTAP(1:2).EQ.'AA') THEN
          INUM=BKINCA(TTAP(3:6))
          IF (INUM.LT.8000) FORMSO='NATI'
      ENDIF
      IF (TTAP(1:2).EQ.'AR') FORMSO='NATI'
      IF (SELFOR.NE.' '.AND.FORMSO(1:3).NE.SELFOR(1:3)) GO TO 500
C Check nature of data , if required :
      NADASO=IW(KBSET+JBSEND)
C Special Dilepton datasets :
      IF (IDSEAR.EQ.7.AND.IALISE.GT.10.AND.NADASO.NE.IALISE) GO TO 500
      IF (IDSEAR.NE.7.AND.IMCDAT.EQ.1.AND.IDASEL.GT.0.AND.
     +    NADASO.NE.IDASEL)  GO TO 500
C Other datasets :
      NADASO=MOD(NADASO,10)
      CALL ALSTIN(IW(KBSET+JBSEAD),JBSEAU-JBSEAD,DSNAM)
      IF (SELDAT(1:1).EQ.' ') SELDAT(1:1)='A'
      IF (SELDAT(1:1).EQ.'A') GO TO 20
      IF (INDEX(SELDAT,DSNAM(2:2)).EQ.0) GO TO 500
 20   TAPNSO=TTAP
C No more checks for Options 5 and 7 :
      IF (IDSEAR.EQ.5) GO TO 600
      IF (IDSEAR.EQ.7) GO TO 300
C Selection of RAW datasets according to cartridge/DLT :
      IF (IDASEL.NE.2.OR.IMCDAT.NE.1.OR.ILABCH.NE.1) GO TO 100
      IF (TTAP(1:2).EQ.'AA'.AND.IRAWAA.NE.0) GO TO 100
      IF (TTAP(1:2).EQ.'AR') THEN
         IF (ISYEAR.GE.1995.AND.IRAWD1.NE.0) GO TO 100
         IF (ISYEAR.LE.1994.AND.IRAWD2.NE.0) GO TO 100
      ENDIF
      IF (TTAP(1:2).EQ.'AA'.AND.IEPRAW.NE.0.AND.ISYEAR.EQ.1994.
     +    AND.FORMSO.EQ.'EPIO') GO TO 100
      GO TO 500
 100  CONTINUE
C Selection on Homelab :
      CALL BKCHHO(TTAP,ICERN,IHOML,IMULT,IEXA,IDLT,I3490,IERT)
      IF (IERT.NE.0) GO TO 500
      IF (ILABCH.GT.0) THEN
         if (ilabch.eq.6.and.idasel.eq.2) go to 200
         IF (ILABCH.EQ.1.AND.ICERN.EQ.0) GO TO 500
         IF (ILABCH.NE.1.AND.IHOML.NE.ILABCH) GO TO 500
      ENDIF
 200  continue
C Select DLTs which are really in the required Homelab :
      IF (IDLCRW.EQ.1.AND.IMULT.EQ.1.AND.ILABCH.NE.1) THEN
         CALL BKTALO(TTAP,0,TLOCC,ILABO)
         IF (ILABO.NE.ILABCH) GO TO 500
      ENDIF
C Special case of year 1994 for POTs and DSTs : AB and DLTs coexist :
      IF (ISYEAR.EQ.1994.AND.(IDASEL.EQ.3.OR.IDASEL.EQ.4)) THEN
         IF (IDLDAT.EQ.0.AND.IDLT.NE.0) GO TO 500
         IF (IDLDAT.NE.0.AND.IDLT.EQ.0) GO TO 500
      ENDIF
C The present dataset is OK for the selections tested in this routine :
 300  IGOOF=1
 500  CONTINUE
      GO TO 999
C Dataset good , no further checks :
 600  CONTINUE
      IGOOF=2
C
 999  RETURN
      END
      SUBROUTINE BKCHKJ(NPER,NROW,IGOO)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Check if a dataset fulfils processing and date requirements
C   Author   J. Boucrot   26-Mar-1996
C Called from BKCHKD                                  from  BOOKLIB
C Calls BKCTIM,ALSTIN                                 from  ALEPHLIB
C Calls BKPRLV                                        from  BOOKLIB
C   All user selection keywords are in / BKKEYS /
C Input  arguments :
C   NPER   =  BSET bank number of the dataset
C   NROW   =  Row # of the dataset in bank BSET , NR=NPER
C Output argument :
C    IGOO  =  1 if the present dataset is OK for the selections
C          =  0 if not
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER DSNAM*20
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Initializations :
      IGOO=0
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 999
      IF (NROW.LE.0.OR.NROW.GT.LROWS(JBSET)) GO TO 999
      KBSET=KROW(JBSET,NROW)
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
      NFRU=IW(KBSET+JBSEFR)
      NLRU=IW(KBSET+JBSELR)
      ICHKP=IW(NAMIND('CHKP'))
      JBLPR=IW(NAMIND('BLPR'))
C-----------------------------------------------------------------------
C Define dates of processing if the last one was required :
C The values for # real data runs are given in bank 'BLPR' :
      ISDAT=ISDATE
      ISDAL=ISDATL
      IF (ISDAT.NE.0.OR.LASTPR.EQ.0.OR.IMCDAT.EQ.2) GO TO 300
      IF (SELDAT.EQ.'R'.OR.SELDAT.EQ.' '.OR.SELDAT.EQ.'A') GO TO 300
C
C For real data only : check the JULIA processing level ( LASTPR )
C and the Tracking level ( IBTQSE ) with routine BKPRLV :
C
      ILVIN=LASTPR-1
      IF (LASTPR.GE.100) ILVIN=LASTPR
      ILKP=LASTPR+1
      IF (LASTPR.EQ.100) ILKP=1
C
      IDA=IW(KBSET+JBSEWD)
      IF (JBRLI.EQ.0.OR.IBRL1.EQ.0.OR.IBRL2.EQ.0) GO TO 200
C
C Loop on all runs in BRLI to find at least one OK :
C
      IPROK=0
      DO 100 IBB=IBRL1,IBRL2
         NRUN=ITABL(JBRLI,IBB,JBRLRN)
         IF (ICHKP.GT.0) THEN
            CALL BKLVPR(KBSET,JBLPR,IPRCV,ICOMP)
            IF (IPRCV.EQ.ILKP) THEN
               IPROK=1
               GO TO 150
            ENDIF
            GO TO 100
         ENDIF
         CALL BKPRLV(SELDAT,NRUN,ILVIN,IDA,LOU,ISDAT,ISDAL,IERR)
         IF (IERR.EQ.0) THEN
            IPROK=1
            GO TO 150
         ENDIF
 100  CONTINUE
 150  IF (IPROK.EQ.0) GO TO 500
      GO TO 300
C
C No information on 'BRLI' : check with NFRU,NLRU :
C
 200  CONTINUE
      IERB=1
      IERLA=1
      IPROK=0
      IF (ICHKP.GT.0) THEN
         CALL BKLVPR(KBSET,JBLPR,IPRCV,ICOMP)
         IF (IPRCV.EQ.ILKP) THEN
            IPROK=1
            GO TO 450
         ENDIF
         GO TO 300
      ENDIF
C
      IF (LASTPR.GE.100) THEN
         CALL BKPRLV(SELDAT,NFRU,ILVIN,IDA,LOU,IFDOU,ILDOU,IERB)
      ELSE
         CALL BKPRLV(SELDAT,NFRU,ILVIN,0,LOU,IFDOU,ILDOU,IERB)
      ENDIF
      IF (NLRU.NE.NFRU) THEN
         CALL BKPRLV(SELDAT,NLRU,ILVIN,0,LOU,IFDUU,ILDUU,IERLA)
         IF (IERB.NE.0.AND.IERLA.NE.0) GO TO 500
      ELSE
         IF (IERB.NE.0) GO TO 500
      ENDIF
      IF (IERB.EQ.0) THEN
         ISDAT=IFDOU
         ISDAL=ILDOU
      ENDIF
      IF (IERLA.EQ.0) THEN
         ISDAT=IFDUU
         ISDAL=ILDUU
      ENDIF
C-----------------------------------------------------------------------
C Check date of creation , if required ( ISDAT GT 0 ):
 300  IF (ISDAT.EQ.0) GO TO 450
      CALL ALSTIN(IW(KBSET+JBSEAD),JBSEAU-JBSEAD,DSNAM)
      CALL BKCTIM(DSNAM(7:17),IYEA,IMON,IDAY,IHOU,IMIN,ISEC)
      IDSET=IDAY+100*IMON+10000*IYEA
      IF (ISDAL.GT.0) GO TO 400
      IF (ISDAT.GT.0.AND.IDSET.LT.ISDAT) GO TO 500
      IF (ISDAT.LT.0.AND.IDSET.GT.IABS(ISDAT)) GO TO 500
      GO TO 450
 400  IF (IDSET.LT.ISDAT.OR.IDSET.GT.ISDAL) GO TO 500
C The dataset is OK for these requirements :
 450  IGOO=1
 500  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKCHKM(NPER,NROW,IGOOM)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Check if a dataset fulfils Program version and MC selections
C   Author   J. Boucrot  26-Mar-1996
C Called from BKCHKD                                  from  BOOKLIB
C Calls BKPOIN                                        from  BOOKLIB
C   All user selection keywords are in / BKKEYS /
C Input  arguments :
C   NPER   =  BSET bank number of the dataset
C   NROW   =  Row # of the dataset in bank BSET , NR=NPER
C Output arguments :
C   IGOOM  =  1 if selections OK ; = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
      PARAMETER ( IFARU = 100000 , IFAGA = 1000 )
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IGOOM=0
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 500
      KBSET=KROW(JBSET,NROW)
      IBSPF=IW(KBSET+JBSEBS)
      IF (IBSPF.EQ.0) GO TO 500
      CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
      IF (JBSPF.LE.0) GO TO 500
      KBSPF=KROW(JBSPF,IBSPF)
      KINGSO=IW(KBSPF+JBSPKC)
      CALL UCOPY(IW(KBSPF+JBSPCO),ICOMSO(1),NCOMC)
      IF (IMCDAT.EQ.1.AND.(IPRGVR+IMINPR+INANPR).EQ.0)  GO TO 300
C
C If these data are Monte-Carlo , check for special keywords :
C
      IRM2=IW(KBSPF+JBSPSR)
      IF (IRM2.GT.IFARU) THEN
         IPAKO=IRM2/IFARU
         ISD2=IRM2-IPAKO*IFARU
      ELSE
         IPAKO=0
         ISD2=IRM2
      ENDIF
      IF (IMCDAT.NE.2) GO TO 100
C KINGAL code :
      IF (KINCOD.GT.0.AND.KINCOD.NE.IW(KBSPF+JBSPKC)) GO TO 500
C RANMAR seed 1 :
      IF (ISEED1.GT.0.AND.ISEED1.NE.IW(KBSPF+JBSPFR)) GO TO 500
C RANMAR seed 2 :
      IF (ISEED2.GT.0.AND.ISEED2.NE.ISD2) GO TO 500
C Special Particle code :
      IF (INIP97.NE.0.AND.IROW97.GT.0) THEN
         CALL BKCH97(NPER,NROW,IGO97)
         IF (IGO97.EQ.0) GO TO 500
         GO TO 100
      ENDIF
      IF (ISELPA.EQ.-1) GO TO 100
      IF (ISELPA.GT.0.AND.IPAKO.NE.ISELPA)        GO TO 500
      IF (ISELPA.EQ.0.AND.IPAKO.GT.0) GO TO 500
 100  CONTINUE
C-----------------------------------------------------------------------
C Test on the Program version numbers :
C Get the JULIA / GALEPH version # :
      IBPRO=IW(KBSET+JBSEBP)
      IF (IBPRO.EQ.0) GO TO 200
      CALL BKPOIN(LECDAF,'BPRO',NPER,JBPRO)
      IF (JBPRO.LE.0) GO TO 200
      KBPRO=KROW(JBPRO,IBPRO)
      IGAGV=0
      IPRGV=0
      IGAK=IW(KBPRO+JBPRCV)
      IF (IGAK.GT.IFAGA) THEN
         IPRGV=IGAK/IFAGA
         IGAGV=IGAK-IFAGA*IPRGV
      ENDIF
C Test on Production program # :
      IPRGG=IW(KBPRO+JBPRVN)
      IF (NADASO.EQ.7.AND.IPRGG.GT.115) IPRVSO=IPRGG
C MINI version # :
      IF (SELDAT.EQ.'M'.AND.IMINPR.GT.0)  THEN
         IPRGG=IPRGG/10
         IF (IPRGG.NE.IMINPR) GO TO 500
      ENDIF
C NANO version # :
      IF (SELDAT.EQ.'N'.AND.INANPR.GT.0.AND.IPRGG.NE.INANPR) GO TO 500
C JULIA version # ( Real data only : )
      IF (IMCDAT.EQ.1) THEN
         IF (IPRGVR.GT.0.AND.IPRGV.NE.IPRGVR)     GO TO 500
         GO TO 300
      ENDIF
      IF (IPRGVR.EQ.0.AND.IGALPR.EQ.0) GO TO 200
C JULIA version # ( MC data only : )
      IF (IPRGVR.LT.0.AND.IPRGV.NE.IABS(IPRGVR))  GO TO 500
      IF (IPRGVR.GT.0.AND.IPRGV.LT.IPRGVR)        GO TO 500
C GALEPH version # :
      IF (IGALPR.LT.0.AND.IGAGV.NE.IABS(IGALPR))  GO TO 500
      IF (IGALPR.GT.0.AND.IGAGV.LT.IGALPR)        GO TO 500
C Test on the GALEPH Year of Geometry :
 200  CONTINUE
      IF (IGEOYR.LE.0) GO TO 300
      CALL BKY2K(IW(KBSPF+JBSPRG),100,IGEOG)
      IF (IGEOYR.LE.1990.AND.IGEOG.GE.1991) GO TO 500
      IF (IGEOYR.LE.1990.AND.IGEOG.LE.1990) GO TO 300
      IF (IGEOG.NE.IGEOYR) GO TO 500
C The present dataset is OK for the selections tested in this routine :
 300  CONTINUE
      IGOOM=1
 500  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKCHKR
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Analyzes Run selection datacards to speed up a dataset search
C J.Boucrot      09-Jun-1989
C Called from BKSEAR,PRDSET                               from BOOKLIB
C Calls BKFPER,BKPOIN                                     from BOOKLIB
C Input :
C  all informations coming from data cards SRUN  or SEVT , if any
C  all informations on selected dates , from BDTE
C Output :  the output of this routine is stored in the
C  common / SCANSL / which contains :
C  NFDSET,NLDSET  =  First/last row to be searched in BDFS bank
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      NFDSET=0
      NLDSET=0
      NB1TAP=0
C Find the right summary bank 'BDFS' to start the search :
      IF (IMCDAT.LE.0.OR.IMCDAT.GT.2) GO TO 999
      CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBPNT)
      IF (JBPNT.LE.0) GO TO 999
      LRLIS=LROWS(JBPNT)
      IF (LRLIS.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BOFS',IMCDAT,JBOFS)
      IF (JBOFS.LE.0) GO TO 999
      NBOFS=LROWS(JBOFS)
      IF (NBOFS.EQ.0) GO TO 999
C Default values
      NFDSET=1
      NLDSET=LRLIS
C Determine the corresponding periods :
      CALL BKFPERD(NPMIN,NPMAX,IERD)
      IF (IERD.NE.0) THEN
         NFDSET=1
         NLDSET=LROWS(JBDFS)
         GO TO 999
      ENDIF
C
C Determine the search limits using the BOFS bank :
C
      DO 250 IOF=1,NBOFS
         NPER=ITABL(JBOFS,IOF,JBOFNP)
         NOFF=ITABL(JBOFS,IOF,JBOFOF)
         NLSE=ITABL(JBOFS,IOF,JBOFLP)
         IF ( NPER.EQ.NPMIN) NFDSET=NOFF+1
         IF (NPER.EQ.NPMAX) NLDSET=NOFF+NLSE
 250  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKCHKRUN(KBSET,NPER,IGOOD)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Check if a multirun dataset fulfils the runs selections
C   Author   J. Boucrot   02-Oct-1996
C Called from BKCHKD                                  from  BOOKLIB
C Calls ALSTIN                                        from  ALEPHLIB
C Calls BKPOIN,BKRUOK,BKCOMRUN                        from  BOOKLIB
C Input  arguments :
C  KBSET   =  Pointer to dataset in BSET bank
C   NPER   =  BSET bank number of the dataset
C   NROW   =  Row # of the dataset in bank BSET , NR=NPER
C Output argument :
C   IGOOD  =  1 if at least 1 run fulfils the requirements
C          =  0 if the dataset doesn't match the selections
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      PARAMETER ( MAXRU = 15 )
      CHARACTER COMEN*80,RUNN*5
      INTEGER BKINCA,LISRU(MAXRU)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IGOOD=0
      IDATA=IW(KBSET+JBSEND)
      NSRUN=0
      JSRUN=IW(NAMIND('SRUN'))
      IF (JSRUN.GT.0.AND.IW(JSRUN+IW(JSRUN)).GT.0) NSRUN=IW(JSRUN)
      IF (IDATA.GT.10) GO TO 110
      IF (MOD(IDATA,10).NE.2) GO TO 110
C-----------------------------------------------------------------------
C Special checks for RAW DATA cartridges :
C EPIO Raws are treated as standard tapes :
      IF (IEPRAW.EQ.1) THEN
         IF (INDEX(FORMSO,'E').NE.0) GO TO 110
         IGOOD=0
         GO TO 500
      ENDIF
C Only 'AA'-style datasets are treated now :
      IAATY=0
      IF (IDASEL.EQ.2.AND.(IRAWAA.NE.0.OR.IRAWD2.NE.0)) IAATY=1
      IF (IAATY.EQ.0) GO TO 110
C Raw data : get the comment of the tape :
      IBSPF=IW(KBSET+JBSEBS)
      IF (IBSPF.EQ.0) GO TO 500
      CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
      IF (JBSPF.LE.0) GO TO 500
      KBSPF=KROW(JBSPF,IBSPF)
      CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
      CALL CLTOU(COMEN)
      IF (INDEX(COMEN,'RAW DATA').EQ.0) GO TO 110
      IF (INDEX(FORMSO,'E').NE.0) GO TO 110
C This is a NATIVE RAW data tape . Check if LEP energy is OK ;
C then if only 1 run selected by the user,
C check it from the tape comment :
      IF (IB1RUN.GT.0) THEN
         WRITE ( RUNN , '(I5)' ) IB1RUN
         IF (INDEX(COMEN,RUNN).NE.0) IGOOD=1
         GO TO 500
      ENDIF
C Check if the runs on the dataset are OK :
C This requires to decode the run # s from the comment ...
      NFRU=IW(KBSET+JBSEFR)
      CALL BKCOMRUN(COMEN,NFRU,LISRU,NRUNS)
C loop on runs and check if they are OK :
      DO 90 IRR=1,NRUNS
         NRUN=LISRU(IRR)
         IF (JSRUN.GT.0.AND.NSRUN.GT.0) THEN
            IF (IUCOMP(NRUN,IW(JSRUN+1),NSRUN).EQ.0) GO TO 90
         ENDIF
         CALL BKRUOK(NRUN,IPHY,IOK)
         IF (IOK.NE.0) GO TO 90
         IGOOD=1
         GO TO 500
 90   CONTINUE
         GO TO 500
C-----------------------------------------------------------------------
C The dataset is NOT a RAW tape from real data . Check the runs from BRL
 110  CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
C No 'BRLI' bank for this dataset , or MCarlo dataset :
      IF (JBRLI.LE.0.OR.IBRL1.EQ.0.OR.IMCDAT.EQ.2) THEN
         GO TO 500
      ELSE
C A 'BRLI' bank exists for this dataset :
         DO 130 IRO=IBRL1,IBRL2
            KBRLI=KROW(JBRLI,IRO)
            NRUN=IW(KBRLI+JBRLRN)
            IF (JSRUN.GT.0.AND.NSRUN.GT.0) THEN
               IF (IUCOMP(NRUN,IW(JSRUN+1),NSRUN).EQ.0) GO TO 130
            ENDIF
            CALL BKRUOK(NRUN,IPHY,IOK)
            IF (IOK.NE.0) GO TO 130
            IF (LASTPR.EQ.1.AND.IBTQSE.NE.2) THEN
               CALL BKPRLV(DNADAT(IDASEL),NRUN,0,0,ILV,IFD,ILD,IERP)
               IF (IERP.NE.0) GO TO 130
            ENDIF
            IGOOD=1
            GO TO 500
 130     CONTINUE
      ENDIF
C Dataset good / not good :
 500  CONTINUE
C
 999  RETURN
C----------------------------------------------------------------------
 1013 FORMAT ( 15(1X,I4))
 1014 FORMAT ( 15(I5,1X))
      END
      SUBROUTINE BKCHKT(NAMT,ICERN,IMULT,IDLT,IEROR)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Checks if a tape/cart name NAMT is an ALEPH name
C  J. Boucrot  20 - Mar - 1989
C   Completely rewritten 15-May-1995 for Exabytes and DLTs
C Called from USER
C Calls BKCHHO                                 from BOOKLIB
C Input argument :
C    NAMT  : Name of tape/cartridge
C Output arguments :
C   ICERN = 1 if official ALEPH CERN tape , REAL Data
C   ICERN = 2 if official ALEPH CERN tape , MCarlo Data
C   ICERN = 0 if not  ALEPH CERN tape
C   IMULT = 1 if multifile ( Exabyte or DLT )
C   IDLT  = 1 if DLT
C   IEROR = 0 if all OK , = 1 if NOT an official ALEPH tape
C-----------------------------------------------------------------------
      SAVE
      CHARACTER*(*) NAMT
C-----------------------------------------------------------------------
      IEROR=1
      ICERN=0
      IMULT=0
      IDLT=0
C
C Find Homelab and type of tape :
C
 100  CALL BKCHHO(NAMT,ICERN,IHOME,IMULT,IEXA,IDLT,I3490,IERHO)
      IF (IERHO.NE.0) GO TO 999
C This is an official ALEPH tape :
 160  IEROR=0
C
 999  RETURN
      END
      SUBROUTINE BKCH97(NPER,NROW,IGO97)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Check if a dataset fulfils 1997 MC selections
C   Author   J. Boucrot  10-Jun-1997
C Called from BKCHKM                                  from  BOOKLIB
C Calls ALSTIN                                        from  ALEPHLIB
C   All user selection keywords are in / BKKEYS /
C Input  arguments :
C   NPER   =  BSET bank number of the dataset
C   NROW   =  Row # of the dataset in bank BSET , NR=NPER
C Output argument :
C   IGO97  =  1 if selections OK ; = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      CHARACTER COMEN*80,KRAK*12
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IF (INIP97.LE.0.OR.IROW97.LE.0) GO TO 300
      IGO97=0
C Get the bank pointers :
      NR=NPER+NCY*(IGEOYR-IYERF)
      JBKM7=NLINK('BKM7',NR)
      IF (JBKM7.LE.0) GO TO 500
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.LE.0) GO TO 500
      KBSET=KROW(JBSET,NROW)
      IBSPF=IW(KBSET+JBSEBS)
      IF (IBSPF.EQ.0) GO TO 500
      CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
      IF (JBSPF.LE.0) GO TO 500
      KBSPF=KROW(JBSPF,IBSPF)
      CALL BKY2K(IW(KBSPF+JBSPRG),100,IGYR)
      IF (IGYR.NE.IGEOYR) GO TO 500
      CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
      CALL CLTOU(COMEN)
C Look for selected 1997 MC keyword of this generator in this comment:
      IOK=0
      KBKM7=KROW(JBKM7,IROW97)
      CALL ALSTIN(IW(KBKM7+JBKMKW),JBKMDE-JBKMKW,KRAK)
      CALL CLTOU(KRAK)
      lkrak=lnblnk(krak)
      INDKR=INDEX(COMEN,KRAK(1:LKRAK))
      if (indkr.eq.0) go to 500
      if (lkrak.eq.12) then
         if (comen(indkr:indkr+lkrak-1).eq.krak(1:lkrak)) iok=1
      else
         if (comen(indkr:indkr+lkrak).eq.krak(1:lkrak+1)) iok=1
      endif
      IF (IOK.EQ.0) GO TO 500
C The present dataset is OK for the selections tested in this routine :
 300  CONTINUE
      IGO97=1
 500  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKCLBTNA
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Clean up and sort bank BTNA
C J. Boucrot  28-02-1997
C Called from BKFINDTA                           from  BOOKLIB
C Calls  INTSOR                                  from  GENLIB
C Calls  AUBPRS                                  from  ALEPHLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      CALL AUBPRS('BTNA')
      JBTNA=NAMIND('BTNA')+1
 100  JBTNA=IW(JBTNA-1)
      IF (JBTNA.EQ.0) GO TO 999
      KBTNA=JBTNA+LMHLEN
      NBTNA=LROWS(JBTNA)
      IF (NBTNA.GT.1) CALL INTSOR(IW(KBTNA+1),NBTNA)
 999  RETURN
      END
      SUBROUTINE BKCLDA(IDSC,IER)
C -----------------------------------------------------------
CKEY UPDABOOK CLEANUP
C!  Clean-up of old datasets from checks on cartridges
C - J Boucrot - 29-APR-1990
C   Modified   02-July-1991 for new Dbase ;
C   Modified   18-Oct-1994  for new BLCLPE routine
C Called from BKCLEA                          from BOOKLIB
C Calls BKPOIN,BKCHKT,BKCLPE,BKEXFI           from BOOKLIB
C Calls ALSTIN                                from ALEPHLIB
C  Output arguments :
C   IDSC = Total Number of discarded datasets
C    IER = 0 if all OK , = 1 if no room for banks
C -----------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      INTEGER IDSCC(2),ITAB(MAXIN)
      CHARACTER VSN1*8,VSN2*8,COMEN*60,STATU*1,CHAINT*4
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C -------------------------------------------------------------
      IDSC=0
      IER=0
      CALL VZERO(IDSCC,2)
      IF (IBAUTO.EQ.0) PRINT 1100
      WRITE ( LWRDBG,1100)
C
C Loop on all datasets :
C
      DO 600 IDAT=1,2
      JBDFS=NLINK('BDFS',IDAT)
      IF (JBDFS.LE.0) GO TO 600
      NBDF=LROWS(JBDFS)
      IF (IDAT.EQ.1) JBDFM=NLINK('BDFS',2)
      IF (JBDFM.LE.0) GO TO 600
      NMC=LROWS(JBDFM)
      NPOLD=-1
C
      DO 500 IB1=1,NBDF
         KBDF1=KROW(JBDFS,IB1)
         CALL ALSTIN(IW(KBDF1+JBDFTC),2,VSN1)
         NPER1=IW(KBDF1+JBDFNP)
         NROW1=IW(KBDF1+JBDFNR)
         ICOP1=IW(KBDF1+JBDFCO)
         CALL BKEXFI(3,VSN1(1:6),IW(KBDF1+JBDFFN),IER)
         CALL BKPOIN(LECDAF,'BSET',NPER1,JBSE1)
         IF (JBSE1.LE.0) GO TO 500
         KBSE1=KROW(JBSE1,NROW1)
         IF (NPER1.NE.NPOLD) THEN
            NPOLD=NPER1
            WRITE ( LWRDBG,1301) NPER1
         ENDIF
C The tape recorded in the BDFS bank cannot be an official dataset :
         CALL BKCHKT(VSN1,ICERN,IMULT,IDLT,IERT)
         IF (IERT.NE.0) THEN
            IW(KBDF1+JBDFDF)=1
            CALL BKCLPE('BPCL',NPER1,IERP)
            IF (IERP.GT.0) GO TO 900
            IF (ICOP1.EQ.0) IW(KBSE1+JBSEDF)=1
            IDSCC(IDAT)=IDSCC(IDAT)+1
            WRITE ( LWRDBG,1200) AXEDNW,NPER1,NROW1
            GO TO 500
         ENDIF
C Check discard flag in 'BDFS' :
         IF (IW(KBDF1+JBDFDF).NE.0) THEN
            IDSCC(IDAT)=IDSCC(IDAT)+1
            CALL BKCLPE('BPCL',NPER1,IERP)
            IF (IERP.GT.0) GO TO 900
            IF (ICOP1.EQ.0.AND.IW(KBSE1+JBSEDF).EQ.0) IW(KBSE1+JBSEDF)=1
            WRITE (LWRDBG,1201) AXEDNW,IDAT
            WRITE ( LWRDBG,1204) IB1,NPER1,NROW1
            GO TO 500
         ENDIF
C If the cartridge is not a possible official production,
C scratch the dataset :
         IF (ICOP1.NE.0) THEN
            IF (IDAT.EQ.1) THEN
               IF (IW(KBSE1+JBSEFR).LT.NRUMIN) GO TO 15
               IF (IW(KBSE1+JBSELR).LT.NRUMIN) GO TO 15
            ELSE
               IF (IW(KBSE1+JBSEFR).GT.LRUNMC) GO TO 15
               IF (IW(KBSE1+JBSELR).GT.LRUNMC) GO TO 15
            ENDIF
         ENDIF
         GO TO 20
 15      IW(KBDF1+JBDFDF)=1
         IF (ICOP1.EQ.0) IW(KBSE1+JBSEDF)=1
         CALL BKCLPE('BPCL',NPER1,IERP)
         IF (IERP.GT.0) GO TO 900
         IDSCC(IDAT)=IDSCC(IDAT)+1
         WRITE (LWRDBG,1203) AXEDNW,IDAT,IB1
         GO TO 500
C
C If the cartridge contains an official dataset , one must
C check from the TMS database if it is always kept like that :
C ( location stored in BDFS was marked as "VOID" in BKUTLO )
 20      IFREE=0
         IF (CHAINT(IW(KBDF1+JBDFLO)).EQ.'VOID') IFREE=1
C
C this cartridge is no more an Homelab copy :
C scratch the corresponding dataset from the ALEBOOK database  :
C
 50      IF (IFREE.EQ.0) GO TO 500
         IW(KBDF1+JBDFDF)=1
         CALL BKCLPE('BPCL',NPER1,IERP)
         IF (IERP.GT.0) GO TO 900
         IF (ICOP1.EQ.0) IW(KBSE1+JBSEDF)=1
         IDSCC(IDAT)=IDSCC(IDAT)+1
         WRITE ( LWRDBG,1205) AXEDNW,IDAT,IB1
C
 500  CONTINUE
      IF (IBAUTO.EQ.0) PRINT 1101,IDAT,IDSCC(1),IDSCC(2)
      WRITE ( LWRDBG , 1101 ) IDAT,IDSCC(1),IDSCC(2)
 600  CONTINUE
      IDSC=IDSCC(1)+IDSCC(2)
      NSCRAD=NSCRAD+IDSC
      NMODIF=NMODIF+1
      GO TO 999
C No room for banks :
 900  IER=1
 999  RETURN
C ----------------------------------------------------------------------
 1100 FORMAT (/7X,'=== Subroutine BKCLDA ===   : Start searching',
     +        ' old datasets')
 1101 FORMAT (7X,'+++ BKCLDA IMCDAT , Discarded datasets =',3I9)
 1200 FORMAT (3X,'Dataset scratched : not an ALEPH tape : ',
     +            ' TAPE,Nper,Nrow =',2X,A10,2I8)
 1201 FORMAT (3X,'Dataset on ',2X,A10,' scratched from BDFS , IDAT=',I8)
 1203 FORMAT (3X,'Dataset on Tape ',2X,A10,' is not an official one',
     +        ' IDAT , IB1 =',2I8)
 1204 FORMAT (5X,' Discarded dataset BDFS row =',I9,' NPER,NROW =',2I9)
 1205 FORMAT (9X,'Dataset on Tape ',2X,A10,' was erased , tape free !',
     +        ' IDAT , IB1 =',2I8)
 1301 FORMAT (/3X,' ### BKCLDA Start checking Period = ',I8)
      END
      SUBROUTINE BKCLDX11
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Cleans up the common DISPX11 for X11 execution
C  J. Boucrot 18-Oct-1996
C  Called from DISPxxxx routines                 from BOOKLIB
C-----------------------------------------------------------------------
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
      NLINX11=0
      DO 100 IK=1,NMX11
 100  XLIN11(IK)=' '
      RETURN
      END
      SUBROUTINE BKCLEA(IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK CLEANUP
C! Steering of the data base cleanup from all discarded data sets
C J. Boucrot 07-Jul-1989  -  modified for BKCLDA 30-Apr-1990
C New modifs in 1994 ( BKEXCL , 'BPCL' bank )
C Called by BKUPDF                                        from BOOKLIB
C Calls BKPRES,BKCLDA,BKMESG,BKLIST,BKEXCL                from BOOKLIB
C Calls AUBPRS                                            from ALEPHLIB
C Calls BKFMT,BLIST                                       from BOS77
C Input banks : BSET,BTPN,BPRO,BSPF,BRLI
C Intermediate work banks are dropped at the end of BKPRES
C All other banks are cleaned up if needed ,
C and their internal links are modified accordingly
C  Output argument :
C   IER = 0 if all OK , = 1 if no room for banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      SAVE
      EXTERNAL NAMIND
      CHARACTER MESG*80,LISA1*40,LISA2*40,LISAL*80
      DATA LISA1  / 'BSETBTPNBPROBSPFBRLIBDFSBOFSBCAR' /
      DATA LISA2  / 'BSWKBFWKBTWKBPWKBSPWBRWK' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IER=0
C This routine is very much time-consuming ; it must not be executed
C systematically but either if a data card 'UPCL' was provided ,
C or if at least one SCRATCH file was processed :
      IF (IW(NAMIND('UPCL')).EQ.0.AND.NBKSCR.EQ.0) GO TO 999
C
      LISAL=LISA1//LISA2
      NPER=0
      IOPT=0
      NBCA=0
      IDSC=0
      ITSC=0
      IF (IBAUTO.EQ.0) PRINT 1100
      WRITE ( LWRDBG,1100 )
C Define the format of intermediate banks :
      CALL BKFMT('BSWK','2I,(7A,14I)')
      CALL BKFMT('BTWK','2I,(3A,I)')
      CALL BKFMT('BPWK','2I,(5A,6I)')
      CALL BKFMT('BSPW','2I,(20A,4I)')
      CALL BKFMT('BRWK','(I)')
      CALL BKFMT('BSRW','(I)')
      CALL BKFMT('BPCL','(I)')
C Reset the 'T' list and fill it with the banks to be cleaned up :
      CALL BLIST(IW,'T=','0')
      CALL BLIST(IW,'T+',LISA1)
C Call the cleanup routine checking cartridges names :
      CALL BKCLDA(IDSC,IERC)
      IF (IERC.NE.0) GO TO 900
C Examine if there are banks with elements to be discarded :
      IF (NMODIF.EQ.0.OR.NSCRAD.EQ.0) GO TO 999
C-----------------------------------------------------------------------
C Effective Cleanup of discarded Datasets :
C Loop on all 'BSET' Banks marked as having discarded datasets :
C
      IF (IDSC.EQ.0) GO TO 300
      JBPCL=IW(NAMIND('BPCL'))
      IF (JBPCL.EQ.0) GO TO 300
      NBPCL=LROWS(JBPCL)
      IF (NBPCL.EQ.0) GO TO 300
      DO 200 IBPCL=1,NBPCL
         NPER=ITABL(JBPCL,IBPCL,1)
C Period to be cleaned up :
         CALL BKPRES(NPER,IBK)
         IF (IBK.NE.0) GO TO 900
         JBPCL=IW(NAMIND('BPCL'))
 200  CONTINUE
C-----------------------------------------------------------------------
C Compress the cleaned-up banks :
C
 300  CALL AUBPRS('T')
      CALL BGARB(IW)
      IF (IDEBUG.EQ.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1103
      WRITE ( LWRDBG,1103)
      CALL BKLIST(LWRDBG,LISAL)
      GO TO 999
C No room for banks :
 900  MESG=' +++ BKCLEA +++ No room for work banks '
      LM=LNBLNK(MESG)
      CALL BKMESG('BKCLEA',IER,MESG(1:LM))
      IF (IBAUTO.EQ.0) PRINT 1104,NPER,IOPT,NBCA
      IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/22X,'=== Subroutine BKCLEA ===   : Start scratching',
     +        ' discarded datasets')
 1103 FORMAT (/22X,'>>> BKCLEA terminated successfully ')
 1104 FORMAT (//' @@@ BKCLEA ABORTED AT NPER,IOPT,NBCA =',3I8)
      END
      SUBROUTINE BKCLMC(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Cleans up the BDFS , NR =2 bank from multiple AM copies
C   Author   J. Boucrot   05-Oct-1994
C   Modified 04-Apr-1996 for BKCLMK
C Called from BKUPDF                        from BOOKLIB
C Calls  BKCHKT,BKCLMK                      from BOOKLIB
C Calls  ALSTIN                             from ALEPHLIB
C Output argument :
C    IER = 0 if all OK , = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      CHARACTER*8 TAPN,TAPC
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      WRITE (LWRDBG,1100)
      IF (IBAUTO.EQ.0) PRINT 1100
C
C LOOP on all members of 'BDFS' banks :
C
      IKLIN=0
      IKMAS=0
      DO 500 IRM=1,2
      CALL BKPOIN(LECDAF,'BDFS',IRM,JBDFS)
      IF (JBDFS.LT.0) GO TO 900
      NBDFS=LROWS(JBDFS)
      DO 300 IBD=1,NBDFS
         KBD=KROW(JBDFS,IBD)
         CALL ALSTIN(IW(KBD+JBDFTC),2,TAPN)
C Clean up originals of Homelabs MC datasets now copied at CERN :
         IF (IRM.EQ.2.AND.IW(KBD+JBDFCO).EQ.0) THEN
            CALL BKCHKT(TAPN,ICERN,IMU,IDL,IERT)
            IF (ICERN.EQ.0.OR.IERT.NE.0) GO TO 300
            CALL BKCLMK(IBD,IMOMA,IERMK)
            IF (IERMK.NE.0) GO TO 900
            IF (IMOMA.GT.0) IKMAS=IKMAS+IMOMA
            GO TO 300
         ENDIF
C Clean up all multiple copies of all tape copies :
         IFILM=IW(KBD+JBDFFN)
         NPAM=IW(KBD+JBDFNP)
         NRAM=IW(KBD+JBDFNR)
         MAB1=MIN0(IBD+500,NBDFS)
         DO 200 IB1=IBD+1,MAB1
            KB1=KROW(JBDFS,IB1)
            IF (IW(KB1+JBDFCO).EQ.0) GO TO 200
            IF (IW(KB1+JBDFDF).EQ.1) GO TO 200
            IFILC=IW(KB1+JBDFFN)
            CALL ALSTIN(IW(KB1+JBDFTC),2,TAPC)
            IF (TAPC(1:6).NE.TAPN(1:6)) GO TO 200
            IF (IFILC.NE.IFILM) GO TO 200
            NPA1=IW(KB1+JBDFNP)
            NRA1=IW(KB1+JBDFNR)
            WRITE ( LWRDBG,1110) TAPC,IB1,NPAM,NPA1,NRAM,NRA1
            WRITE ( LWRDBG,1111) TAPN,IFILM,IFILC
            IKLIN=IKLIN+1
            IW(KB1+JBDFDF)=1
 200     CONTINUE
 300  CONTINUE
 500  CONTINUE
      WRITE ( LWRDBG,1101) IKLIN
      IF (IBAUTO.EQ.0) PRINT 1101,IKLIN
      IF (IKMAS.EQ.0) GO TO 999
      WRITE ( LWRDBG,1102) IKMAS
      IF (IBAUTO.EQ.0) PRINT 1102,IKMAS
      GO TO 999
C
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/12X,'=== Subroutine BKCLMC === : Start MCAR Cleanup')
 1101 FORMAT (/12X,'=== Subroutine BKCLMC === : Nb of MCAR Cleaned =',
     +        I6)
 1102 FORMAT (/12X,'=== Subroutine BKCLMC === : Nb of HOME Masters',
     +        ' downgraded =',I6)
 1110 FORMAT (8X,'++ BKCLMC Cleanup TAPE=',2X,A8,
     +        ' -- IBDFS,NPERS =',3I6,' == NROWS =',2I6)
 1111 FORMAT (8X,'++ BKCLMC TAPC,IFILM,IFILC =',2X,A8,2I8)
      END
      SUBROUTINE BKCLMDAT(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Cleans up the BDFS banks from multiple Master copies
C   Author   J. Boucrot   12-Nov-1996
C Called from BKUPDF                        from BOOKLIB
C Calls  ALSTIN                             from ALEPHLIB
C Output argument :
C    IER = 0 if all OK , = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      CHARACTER*8 TAPN,TAPC
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      WRITE (LWRDBG,1100)
      IF (IBAUTO.EQ.0) PRINT 1100
C
C LOOP on all members of 'BDFS' banks :
C
      IKLIN=0
      DO 500 IRM=1,2
         CALL BKPOIN(LECDAF,'BDFS',IRM,JBDFS)
         IF (JBDFS.LT.0) GO TO 900
         NBDFS=LROWS(JBDFS)
         DO 300 IBD=1,NBDFS
            KBD=KROW(JBDFS,IBD)
C Clean up all multiple copies of all MASTER tapes :
            CALL ALSTIN(IW(KBD+JBDFTC),2,TAPC)
            IFILC=IW(KBD+JBDFFN)
            NPAM=IW(KBD+JBDFNP)
            NRAM=IW(KBD+JBDFNR)
            DO 200 IB1=IBD+1,NBDFS
               KB1=KROW(JBDFS,IB1)
               IF (IW(KB1+JBDFCO).NE.0) GO TO 200
               IF (IW(KB1+JBDFDF).EQ.1) GO TO 200
               CALL ALSTIN(IW(KB1+JBDFTC),2,TAPN)
               IF (TAPN(1:6).NE.TAPC(1:6)) GO TO 200
               IFILN=IW(KB1+JBDFFN)
               IF (IFILC.NE.IFILN) GO TO 200
C duplicate master dataset found : erase the oldest one :
               NPA1=IW(KB1+JBDFNP)
               NRA1=IW(KB1+JBDFNR)
               WRITE ( LWRDBG,1110) TAPN,IB1,NPAM,NPA1,NRAM,NRA1
               WRITE ( LWRDBG,1111) TAPC,IFILC,IFILN
               IKLIN=IKLIN+1
               IW(KBD+JBDFDF)=1
               NBKSCR=NBKSCR+1
C mark it to be discarded in 'BSET' :
               JBSET=NLINK('BSET',NPAM)
               IF (JBSET.EQ.0) GO TO 300
               KBSET=KROW(JBSET,NRAM)
               IW(KBSET+JBSEDF)=1
               GO TO 300
 200        CONTINUE
 300     CONTINUE
 500  CONTINUE
      WRITE ( LWRDBG,1101) IKLIN
      IF (IBAUTO.EQ.0) PRINT 1101,IKLIN
      GO TO 999
C
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/12X,'=== Subroutine BKCLMDAT === : Start Cleanup')
 1101 FORMAT (/12X,'=== Subroutine BKCLMDAT === : Nb of datasets',
     +         ' cleaned =',I6)
 1110 FORMAT (8X,'++ BKCLMDAT Cleanup TAPE=',2X,A8,
     +        ' -- IBDFS,NPERS =',3I6,' == NROWS =',2I6)
 1111 FORMAT (8X,'++ BKCLMDAT TAPC,IFILC,IFILN =',2X,A8,2I8)
      END
      SUBROUTINE BKCLMK(IBDF,IMOMA,IERM)
C-----------------------------------------------------------------------
CKEY UPDABOOK CLEANUP
C! Finds link of CERN MC datasets to previous Homelab ones
C  J. Boucrot   04-Apr-1996
C  Called from BKCLMC
C  Calls BKFILB,BKPOIN,BKMODI,BKCHKT               from BOOKLIB
C  Calls ALSTIN                                    from ALEPHLIB
C  Input argument :
C     IBDF  = Row in 'BDFS' , NR = 2 , of the dataset
C  Output arguments :
C   IMOMA =  number of Homelab datasets downgraded
C    IERM =  1 if no room to book banks
C    IERM =  0 if all OK
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      PARAMETER ( NPSKC = 100000 , IFAGA = 1000 )
      INTEGER ITAB(MAXIN)
      CHARACTER*8 TAPNW,TAPOL,TAPO2
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IERM=0
      IRKIN=0
      IMOMA=0
C Get all relevant bank pointers :
      IF (IBDF.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BDFS',2,JBDFS)
      IF (JBDFS.LE.0) GO TO 900
      NBDFS=LROWS(JBDFS)
      IF (IBDF.GT.NBDFS) GO TO 999
      KBDFS=KROW(JBDFS,IBDF)
      NPERC=IW(KBDFS+JBDFNP)
      NROWC=IW(KBDFS+JBDFNR)
      CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPNW)
      CALL BKCHKT(TAPNW,ICERN,IMUL,IDL,IERT)
      IF (ICERN.NE.2.OR.IERT.NE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BSET',NPERC,JBSET)
      IF (JBSET.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BPRO',NPERC,JBPRO)
      IF (JBPRO.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BSPF',NPERC,JBSPF)
      IF (JBSPF.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BRLI',NPERC,JBRLI)
      IF (JBRLI.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BTPN',NPERC,JBTPN)
      IF (JBTPN.LE.0) GO TO 999
      MBSET=KROW(JBSET,NROWC)
C Set reference quantities from 'BSET' bank of the dataset :
      INADI=IW(MBSET+JBSEND)
      IRFRU=IW(MBSET+JBSEFR)
      IRLRU=IW(MBSET+JBSELR)
      IRFEV=IW(MBSET+JBSEFE)
      IRLEV=IW(MBSET+JBSELE)
      IRENG=IW(MBSET+JBSEBN)
C Set reference quantities from  'BPRO' bank of the dataset :
      MBPRO=IW(MBSET+JBSEBP)
      IRPRO=ITABL(JBPRO,MBPRO,JBPRVN)
      IRCOR=ITABL(JBPRO,MBPRO,JBPRCV)
      IGAGV=IRCOR
      IF (IRCOR.GT.IFAGA) THEN
         IPRGV=IRCOR/IFAGA
         IGAGV=IRCOR-IFAGA*IPRGV
      ENDIF
      IRALE=ITABL(JBPRO,MBPRO,JBPRAV)
      IRDBS=ITABL(JBPRO,MBPRO,JBPRDN)
      IRDBD=ITABL(JBPRO,MBPRO,JBPRDD)
C Set reference quantities from 'BSPF' bank of dataset :
      MBSPF=IW(MBSET+JBSEBS)
      IRKIN=ITABL(JBSPF,MBSPF,JBSPKC)
      IF (IRKIN.LE.1000) GO TO 999
      IRRA1=ITABL(JBSPF,MBSPF,JBSPFR)
      IRRA2=MOD(ITABL(JBSPF,MBSPF,JBSPSR),NPSKC)
      IRGEO=ITABL(JBSPF,MBSPF,JBSPRG)
C Set reference quantities from 'BRLI' bank of new dataset :
      MBRLI=IW(MBSET+JBSEBR)
      IRRNE=ITABL(JBRLI,MBRLI,JBRLNE)
      IRNBY=ITABL(JBRLI,MBRLI,JBRLNB)
C----------------------------------------------------------------------
C Now loop on all rows of BDFS , NR = 2 and try to find the same
C keywords from a Homelab tape considered up to now as MASTER dataset :
C
C Loop on all 'BDFS' rows :
      DO 500 IBDFS=1,NBDFS
         IF (IBDFS.EQ.IBDF) GO TO 500
         KBDFS=KROW(JBDFS,IBDFS)
         IF (IW(KBDFS+JBDFCO).NE.0) GO TO 500
         IF (IW(KBDFS+JBDFNP).NE.NPERC) GO TO 500
C NO copies or discarded datasets !
         IF (IW(KBDFS+JBDFCO).NE.0) GO TO 500
         IF (IW(KBDFS+JBDFDF).NE.0) GO TO 500
C Checks in 'BSET':
         NROW=IW(KBDFS+JBDFNR)
         KBSET=KROW(JBSET,NROW)
         IF (IW(KBSET+JBSEDF).NE.0) GO TO 500
         IF (IW(KBSET+JBSEFR).NE.IRFRU) GO TO 500
         IF (IW(KBSET+JBSELR).NE.IRLRU) GO TO 500
         IF (IW(KBSET+JBSEFE).NE.IRFEV) GO TO 500
         IF (IW(KBSET+JBSELE).NE.IRLEV) GO TO 500
         IF (IW(KBSET+JBSEND).NE.INADI) GO TO 500
C Checks in 'BPRO':
         IBPRO=IW(KBSET+JBSEBP)
         KBPRO=KROW(JBPRO,IBPRO)
         IF (IW(KBPRO+JBPRVN).NE.IRPRO) GO TO 500
         IPJGA=IW(KBPRO+JBPRCV)
         IPOGA=IPJGA
         IF (IPJGA.GT.IFAGA) THEN
            IPOGV=IPJGA/IFAGA
            IPOGA=IPJGA-IFAGA*IPOGV
         ENDIF
         IF (IPOGA.NE.IGAGV) GO TO 500
         IF (IW(KBPRO+JBPRAV).NE.IRALE) GO TO 500
         IF (IW(KBPRO+JBPRDN).NE.IRDBS) GO TO 500
         IF (IW(KBPRO+JBPRDD).NE.IRDBD) GO TO 500
C Checks in 'BSPF':
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         IF (IW(KBSPF+JBSPKC).NE.IRKIN) GO TO 500
         IF (IW(KBSPF+JBSPFR).NE.IRRA1) GO TO 500
         IF (MOD(IW(KBSPF+JBSPSR),NPSKC).NE.IRRA2) GO TO 500
         IF (IW(KBSPF+JBSPRG).NE.IRGEO) GO TO 500
C Checks in 'BTPN' ( OLD dataset must be from a Homelab ) :
         IBTPN=IW(KBSET+JBSEBT)
         KBTPN=KROW(JBTPN,IBTPN)
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPOL)
         CALL BKCHKT(TAPOL,ICERN,IMU,IDL,IERTA)
         IF (ICERN.NE.0) GO TO 500
C Checks in 'BRLI':
         IBRL1=IW(KBSET+JBSEBA)
         KBRLI=KROW(JBRLI,IBRL1)
         IF (IW(KBRLI+JBRLRN).NE.IRFRU) GO TO 500
         IF (IW(KBRLI+JBRLNE).NE.IRRNE) GO TO 500
         NBYT=IW(KBRLI+JBRLNB)
         IF (NBYT.GT.IRNBY+NPSKC) GO TO 500
         IF (NBYT.LT.IRNBY-NPSKC) GO TO 500
C
C The present dataset is the same as the input one :
C it has to be discarded first :
C
         IW(KBDFS+JBDFDF)=1
         IW(KBSET+JBSEDF)=1
         NBKSCR=NBKSCR+1
         WRITE ( LWRDBG,1001) IRKIN,TAPNW,TAPOL,IBDFS
         IF (IBAUTO.EQ.0) PRINT 1001,IRKIN,TAPNW,TAPOL,IBDFS
C
C The present dataset must now be put as copy of the input one in 'BDFS'
C
 320     CALL VZERO(ITAB,MAXIN)
         DO 350 IS=JBDFTC,JBDFCO-1
 350     ITAB(IS)=INTCHA('    ')
         ITAB(JBDFTC)=IW(KBDFS+JBDFTC)
         ITAB(JBDFTC+1)=IW(KBDFS+JBDFTC+1)
         ITAB(JBDFLO)=IW(KBDFS+JBDFLO)
         ITAB(JBDFNP)=NPERC
         ITAB(JBDFNR)=NROWC
         ITAB(JBDFCO)=1
         CALL BKFILB('BDFS',2,ITAB,LBDFSA,LBOU,IEOU)
         IF (IEOU.EQ.2) GO TO 900
         CALL BKMODI('BDFS',2,0,LBDFSA,IERO)
         IF (IERO.NE.0) GO TO 900
         WRITE ( LWRDBG,1002) TAPOL,LBOU,NROWC
         IMOMA=IMOMA+1
C
C The present dataset may have already copies  :
C they have to searched for :
C
         MIBD=MAX0(1,IBDFS-50)
         MABD=MIN0(NBDFS,IBDFS+150)
         KKDFS=0
         NROOL=IW(KBDFS+JBDFNR)
         DO 400 IKK=MIBD,MABD
            KKKFS=KROW(JBDFS,IKK)
            IF (IW(KKKFS+JBDFCO).NE.1) GO TO 400
            IF (IW(KKKFS+JBDFNP).NE.IRKIN) GO TO 400
            IF (IW(KKKFS+JBDFNR).NE.NROOL) GO TO 400
            KKDFS=KKKFS
            GO TO 410
 400     CONTINUE
 410     IF (KKDFS.EQ.0) GO TO 500
         IW(KKDFS+JBDFDF)=1
         NBKSCR=NBKSCR+1
C
C This dataset must now be put as copy of the input one in 'BDFS' :
C
 420     CALL VZERO(ITAB,MAXIN)
         DO 450 IS=JBDFTC,JBDFCO-1
 450     ITAB(IS)=INTCHA('    ')
         ITAB(JBDFTC)=IW(KKDFS+JBDFTC)
         ITAB(JBDFTC+1)=IW(KKDFS+JBDFTC+1)
         ITAB(JBDFLO)=IW(KKDFS+JBDFLO)
         ITAB(JBDFNP)=NPERC
         ITAB(JBDFNR)=NROWC
         ITAB(JBDFCO)=1
         CALL BKFILB('BDFS',2,ITAB,LBDFSA,LBOU,IEOU)
         IF (IEOU.EQ.2) GO TO 900
         CALL BKMODI('BDFS',2,0,LBDFSA,IERO)
         IF (IERO.NE.0) GO TO 900
         CALL ALSTIN(IW(KKDFS+JBDFTC),2,TAPO2)
         WRITE ( LWRDBG,1005) TAPO2,LBOU,NROWC
         IMOMA=IMOMA+1
 500  CONTINUE
      GO TO 999
C No room for banks :
 900  IERM=1
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (5X,'+++ BKCLMK +++ For KINGAL =',I7,' New Master ',
     +        'Dataset =',2X,A8,' ** OLD was ',2X,A8,I6)
 1002 FORMAT (8X,'>>> BKCLMK <<< Tape ',2x,a8,' is now COPY at BDFS',
     +        ' row =',I8,' - from BSET row =',I8)
 1005 FORMAT (15X,'>>> BKCLMK <<< Tape ',2x,a8,' is SECOND COPY at',
     +        ' BDFS row =',I8,' - from BSET row =',I8)
      END
      SUBROUTINE BKCLOD(IER)
C-----------------------------------------------------------------------
CKEY STEER UPDATE TAPES
C! Writes new infos on ALEBOOK NEWSEQ and close all files
C J.Boucrot      20-Jun-1989
C  Modified  AM. Lutz      30-MAR-1990
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C Called from BKSTEE                                      from BOOKLIB
C Calls BKBDFS,BKWDAF,BKWSEQ,BKSYSM                       from BOOKLIB
C Calls ACLOSE                                            from ALEPHLIB
C Output argument :
C   IER   = 0 if all OK , = 1 if not possible to write on DAFs
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-----------------------------------------------------------------------
       IER=1
C
C Write all new informations on the ALEBOOK database :
C
       IF (NMODIF.EQ.0) GO TO 500
       IF (IBUPDA.GT.0.AND.LENBOK.GT.0) THEN
          CALL BKWSEQ(LECDAF,IFAIL)
          CALL ACLOSE(LECDAF,IER)
          IF (IFAIL.GT.2) GO TO 999
       ENDIF
C-----------------------------------------------------------------------
 500   CONTINUE
       IER=0
C IF errors occured during the  UPDABOOK  job , send the error file
C to the reader of the Bookkeeping managers
       IF (IBUPDA.GT.0.AND.NOVERR.GT.0) THEN
          CALL BKSYSM(' UPDABOOK ','BOOK')
       ENDIF
 999   CONTINUE
C
       CLOSE (LECDAF)
       CLOSE (LEBCAR)
       CLOSE (LWRERR)
       RETURN
       END
      SUBROUTINE BKCLPE(NAME,NPER,IER)
C -----------------------------------------------------------
CKEY UPDABOOK CLEANUP
C!  Builds the bank 'BPCL' of periods with discarded datasets
C - J. Boucrot 18-Oct-1994
C Called from BKCLDA                          from BOOKLIB
C Calls AUBOS                                 from ALEPHLIB
C   Input arguments :
C   NAME = bank name ( 'BPCL' or 'BMOP' )
C   NPER = Period number , to be stored in bank 'BPCL'
C  Output argument :
C    IER = 0 if all OK , = 1 if no room for banks
C -----------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( NPERM = 500 )
      CHARACTER*4 NAME
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C -------------------------------------------------------------
      IER=0
      IF (NAME.NE.'BPCL'.AND.NAME.NE.'BMOP') GO TO 999
      JBPCL=IW(NAMIND(NAME))
      IF (JBPCL.EQ.0) THEN
         CALL AUBOS(NAME,0,LMHLEN+NPERM,JBPCL,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JBPCL+LMHCOL)=1
         IW(JBPCL+LMHROW)=0
      ENDIF
C Check if period NPER already in :
      JBPCL=IW(NAMIND(NAME))
      IF (JBPCL.EQ.0) GO TO 999
      NBPCL=LROWS(JBPCL)
      IF (NBPCL.EQ.0) GO TO 100
      IND=IUCOMP(NPER,IW(JBPCL+LMHLEN+1),NBPCL)
      IF (IND.GT.0) GO TO 999
C New period : Store it
 100  IW(JBPCL+LMHROW)=IW(JBPCL+LMHROW)+1
      IW(JBPCL+LMHLEN+NBPCL+1)=NPER
      GO TO 999
C No room for banks :
 900  IER=1
      WRITE ( LWRDBG,1100)
 999  RETURN
 1100 FORMAT (/7X,'=== Subroutine BKCLPE !!!   No room for Banks !')
      END
      SUBROUTINE BKCLVR(NPER,ITSC)
C -----------------------------------------------------------
CKEY UPDABOOK CLEANUP
C!  Verifies the comment field of official ALEPH datasets
C - J Boucrot - 11-Sep-1990  Modified for TMS  25-Feb-1991
C   Modified for MINI/NANO comments       30-Nov-1992
C Called from BKBOKD                       from BOOKLIB
C Calls BKPOIN,BKNDCO,BKNMCO,BKVRCD        from BOOKLIB
C Calls ALSTIN,ALINST,BKCARI               from ALEPHLIB
C  Input argument :
C     NPER = Period number of dataset to be checked
C Output argument :
C     ITSC = Number of comments modified
C -----------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      SAVE
      PARAMETER ( NMAXC = 80 , NCHCO = 12 , NKGM = 10000 )
      PARAMETER ( NSPKC = 100000 , IFAGA = 1000 )
      CHARACTER VSN*8,VSNP*8,NADD*6,TAPOR*8,DSNAM*20,QUOT*1
      CHARACTER*80 COMIN,COMOU,COMP,COMOL
      CHARACTER RUNFI*5,RUNLA*5,SNAR*3
      INTEGER ITM(2)
      DATA HQUOT / 1H' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C -------------------------------------------------------------
      ITSC=0
      COMIN=' '
      COMOU=' '
      VSN=' '
      TAPOR=' '
      NWCOM=JBSPKC-JBSPCO
      CALL UH1TOC(HQUOT,QUOT,1)
 110  JBSET=NLINK('BSET',NPER)
 120  IF (JBSET.EQ.0) GO TO 600
      NSETS=LROWS(JBSET)
C
C Loop on all datasets :
C
      DO 500 ISET=1,NSETS
         KBSET=KROW(JBSET,ISET)
         CALL ALSTIN(IW(KBSET+JBSEAD),JBSEAU-JBSEAD,DSNAM)
         IDNAT=IW(KBSET+JBSEND)
         IBTAP=IW(KBSET+JBSEBT)
         IF (IBTAP.EQ.0) GO TO 500
C Get all necessary pointers to all relevant banks :
         IF (NPER.EQ.0) THEN
            CALL BKPOIN(LECDAF,'BTAP',NPER,JBTAP)
         ELSE
            CALL BKPOIN(LECDAF,'BTPN',NPER,JBTAP)
         ENDIF
         IF (JBTAP.EQ.0) GO TO 500
         KBTAP=KROW(JBTAP,IBTAP)
         CALL ALSTIN(IW(KBTAP+JBTPVS),2,VSN)
         CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
         IBRL1=IW(KBSET+JBSEBA)
         IBRL2=IW(KBSET+JBSEBR)
         IBSPF=IW(KBSET+JBSEBS)
         IF (IBSPF.EQ.0) GO TO 500
         CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
         IF (JBSPF.EQ.0) GO TO 500
C Get the comment of the dataset :
         KBSPF=KROW(JBSPF,IBSPF)
         CALL ALSTIN(IW(KBSPF+JBSPCO),NWCOM,COMIN)
         CALL CLTOU(COMIN)
C Check for special alignment/calibration data :
         ISALC=0
         IF (INDEX(COMIN,'ARAW').GT.0) ISALC=12
         IF (INDEX(COMIN,'APOT').GT.0) ISALC=13
         IF (ISALC.GT.0) THEN
            IW(KBSET+JBSEND)=ISALC
            L1=INDEX(COMIN,'A')
            COMOU=' '
            SNAR=COMIN(L1+1:L1+3)
            IFRU=IW(KBSET+JBSEFR)
            ILRU=IW(KBSET+JBSELR)
            CALL BKCARI(IFRU,5,RUNFI)
            CALL BKCARI(ILRU,5,RUNLA)
            COMOU='Dilepton '//SNAR//' of Runs '//RUNFI//' ---> '//RUNLA
            COMOU=COMOU(1:LNBLNK(COMOU))
            IF (ISALC.GT.10)  WRITE (LWRDBG,1112)  VSN,COMOU
            GO TO 450
         ENDIF
         CALL BKPOIN(LECDAF,'BPRO',NPER,JBPRO)
         IF (JBPRO.EQ.0) GO TO 500
         IBPRO=IW(KBSET+JBSEBP)
         IF (IBPRO.EQ.0) GO TO 500
         KBPRO=KROW(JBPRO,IBPRO)
C The comment for MINI / NANOs has to be rebuilt anyway :
         IF (DSNAM(1:1).EQ.'D'.AND.(IDNAT.EQ.5.OR.IDNAT.EQ.7)) GO TO 300
         IF (DSNAM(1:1).EQ.'M'.AND.(IDNAT.EQ.5.OR.IDNAT.EQ.7)) GO TO 350
         IF (INDEX(COMIN,'MINI FROM').GT.0) GO TO 350
         IF (INDEX(COMIN,'NANO FROM').GT.0) GO TO 350
C For 1995 DATA POTs and DSTs on DLT's , comments have to be rebuilt any
         IF (DSNAM(1:1).EQ.'D'.AND.(IDNAT.EQ.3.OR.IDNAT.EQ.4).
     +       AND.(VSN(1:2).EQ.'AS'.OR.VSN(1:1).EQ.'Y')) THEN
             CALL BKVRCD(NPER,ISET,IMOD,IER)
             IF (IER.NE.0) GO TO 999
             IF (IMOD.NE.0) ITSC=ITSC+1
             GO TO 500
          ENDIF
C If comment contains only """  ( ALPROD error ) , try to rebuild it :
         IF (IW(KBSPF+JBSPCO).EQ.0) GO TO 150
         IF (COMIN.EQ.' ') GO TO 470
C Check the comment for special characters ( fatal for TMS /SCANBOOK):
         LN=LNBLNK(COMIN)
         ISPEC=0
         DO 130 IK=1,LN
            IF (COMIN(IK:IK).EQ.QUOT) THEN
               ISPEC=ISPEC+1
               COMIN(IK:IK)=' '
            ENDIF
            IF (COMIN(IK:IK).EQ.'(') THEN
               ISPEC=ISPEC+1
               COMIN(IK:IK)=' '
            ENDIF
            IF (COMIN(IK:IK).EQ.')') THEN
               ISPEC=ISPEC+1
               COMIN(IK:IK)=' '
            ENDIF
 130     CONTINUE
C Checks end up here for MCarlo datasets :
         IF (DSNAM(1:1).NE.'D') THEN
C If it is a special CCBAr or BBBar verify the special particle code :
            ICCB=0
            IF (INDEX(COMIN,' CCB').GT.0) ICCB=104
            IF (INDEX(COMIN,' BBA').GT.0) ICCB=105
            IF (ICCB.EQ.0) GO TO 140
            IKPA=IW(KBSPF+JBSPSR)
            ISPAR=IKPA/NSPKC
            IF (ISPAR.NE.ICCB) THEN
               INEW=ICCB*NSPKC+MOD(IKPA,NSPKC)
               IW(KBSPF+JBSPSR)=INEW
               WRITE ( LWRDBG,1109) VSN,COMIN,ICCB,IKPA,INEW
               ITSC=ITSC+1
            ENDIF
 140        CONTINUE
            IF (ISPEC.GT.0) THEN
               COMOU=COMIN
               GO TO 450
            ENDIF
            GO TO 500
         ENDIF
C Now begin special checks for real data :
C Only CERN ABxxxx Cartridges are verified ( POTs,DSTs and MINIs )
         IF (IDNAT.LE.2.OR.IDNAT.GE.NNDAT) GO TO 500
         IF (IDNAT.NE.7.AND.VSN(1:2).NE.'AB'.AND.VSN(1:2).NE.'AS')
     +       GO TO 500
         IF (IW(KBSPF+JBSPKC).GT.0) GO TO 500
         IF (INDEX(COMIN,'OF RUN').GT.0) THEN
            CALL BKVRCD(NPER,ISET,IMOD,IER)
            IF (IER.NE.0) GO TO 999
            IF (IMOD.NE.0) ITSC=ITSC+1
            GO TO 500
         ENDIF
C ----------------------------------------------------------------------
C Comment for Real Data POT or DST was invalid . One must build it from
C the run numbers stored in the bank BRLI ( or in BSET ) :
C
 150     CONTINUE
         COMOU=DNADAT(IDNAT)//'of runs'
         IF (JBRLI.EQ.0.OR.IBRL1.EQ.0.OR.IBRL2.EQ.0) THEN
            WRITE ( COMOU(13:18) , '(I6)' )  IW(KBSET+JBSEFR)
            GO TO 450
         ENDIF
         NCHTO=NCHCO
C Loop on the relevant rows of 'BRLI' :
         DO 200 INN=IBRL1,IBRL2
            IF (INN.LE.0) GO TO 200
            KBRLI=KROW(JBRLI,INN)
            NRULI=IW(KBRLI+JBRLRN)
            NADD=' '
            IF (NRULI.LT.10000) THEN
               NNR=5
               CALL BKCARI(NRULI,4,NADD)
            ELSE
               NNR=6
               CALL BKCARI(NRULI,5,NADD)
            ENDIF
            NCHTO=NCHTO+NNR
C Build the new comment for 'BSPF' :
            IF (NCHTO.GT.NMAXC) THEN
               COMOU=COMOU(1:LNBLNK(COMOU))//' etc'
               GO TO 450
            ENDIF
            COMOU=COMOU(1:LNBLNK(COMOU))//' '//
     +            NADD(1:LNBLNK(NADD))
 200     CONTINUE
         GO TO 450
C ----------------------------------------------------------------------
C Comment for Real Data MINI OR NANO . One must build it :
C
 300     CONTINUE
         CALL BKNDCO(KBSET,JBPRO,JBRLI,COMOU,IER)
         IF (IER.NE.0) GO TO 470
         GO TO 450
C ----------------------------------------------------------------------
C Comment for MCarlo Data MINI OR NANO . One must build it using the com
C of the mother POT , when available :
 350     CONTINUE
         KINCO=MOD(IW(KBSPF+JBSPKC),NKGM)
         IF (IW(KBSPF+JBSPCO).EQ.0) GO TO 400
C  Strip off comments from 'K EVTS ' :
        LMINI=INDEX(COMIN,'MINI')
        LSLA=INDEX(COMIN,'K EVT')
        IF (LMINI.EQ.0.OR.LSLA.EQ.0) GO TO 355
        COMOU=' '
        IBA=3
        IF (COMIN(LSLA-4:LSLA-4).EQ.' ') IBA=4
        COMOU=COMIN(1:LSLA-IBA)
        GO TO 450
 355    CONTINUE
C Try to find the mother POT :
         IDP=0
         IDM=0
         IF (IDNAT.EQ.5) IDP=INDEX(COMIN,'MINI FROM')
         IF (IDNAT.EQ.7) IDP=INDEX(COMIN,'NANO FROM')
         IDM=INDEX(COMIN,' AM')
         if (idm.eq.0) IDM=INDEX(COMIN,' AU')
         TAPOR=' '
         IF (IDP.GT.0) TAPOR=COMIN(IDP+11:IDP+16)//'  '
         IF (IDP.EQ.0.AND.IDM.GT.0) TAPOR=COMIN(IDM:IDM+5)//'  '
         LI=LNBLNK(TAPOR)
         IF (LI.LE.0) GO TO 400
         IF (TAPOR.EQ.' ') GO TO 400
         CALL ALINST(TAPOR,ITM,IBID)
C Original POT found : get its 'BSET' NPER , NROW from 'BDFS' :
         CALL BKPOIN(LECDAF,'BDFS',2,JBDFS)
         IF (JBDFS.LE.0) GO TO 400
         NPERP=0
         NROWP=0
         DO 360 IBD=1,LROWS(JBDFS)
            KBDFS=KROW(JBDFS,IBD)
            IF (IW(KBDFS+JBDFTC).NE.ITM(1))    GO TO 360
            IF (IW(KBDFS+JBDFTC+1).NE.ITM(2))  GO TO 360
            NPERP=IW(KBDFS+JBDFNP)
            NROWP=IW(KBDFS+JBDFNR)
            GO TO 370
 360     CONTINUE
 370     IF (NPERP.EQ.0.OR.NROWP.EQ.0) GO TO 400
         CALL BKPOIN(LECDAF,'BSET',NPERP,JBSEP)
         IF (JBSEP.EQ.0) GO TO 400
         KBSEP=KROW(JBSEP,NROWP)
         IBSPP=IW(KBSEP+JBSEBS)
         CALL BKPOIN(LECDAF,'BSPF',NPERP,JBSPP)
         IF (JBSPP.EQ.0) GO TO 400
         KBSPP=KROW(JBSPP,IBSPP)
C Special particle code , if any , must be transmitted to the MINI / NAN
         IW(KBSPF+JBSPSR)=IW(KBSPP+JBSPSR)
         CALL ALSTIN(IW(KBSPP+JBSPCO),NWCOM,COMOL)
         CALL BKNMCO(KINCO,KBSET,JBPRO,JBRLI,COMOL,COMOU,IER)
         IF (IER.NE.0) GO TO 400
         GO TO 450
C
C Empty comment from ALPROD , or unrecognizable POT from the comment.
C Try to identify it starting from what is stored in the present dataset
C
 400     IDPOT=IW(KBPRO+JBPRNI)
         IF (IDPOT.EQ.0) IDPOT=3
         ISDAT=IW(KBSET+JBSEWD)
         IF (ISDAT.LE.0) THEN
            CALL BKCTIM(DSNAM(7:17),IY,IM,ID,IH,IMI,IS)
            IF (IY.LE.10)  IY=100+IY
            ISDAT=10000*IY+100*IM+ID
         ENDIF
         IRAN1=IW(KBSPF+JBSPFR)
         IRAN2=MOD(IW(KBSPF+JBSPSR),NSPKC)
         ISPKO=IW(KBSPF+JBSPSR)/NSPKC
         IGEOG=IW(KBSPF+JBSPRG)
         IGAK=IW(KBPRO+JBPRCV)
         IGAGV=IGAK
         IF (IGAK.GT.IFAGA) THEN
            IPRGV=IGAK/IFAGA
            IGAGV=IGAK-IPRGV*IFAGA
         ENDIF
         IRUMC=IW(KBSET+JBSEFR)
         CALL BKPOIN(LECDAF,'BSET',KINCO,JBSEP)
         IF (JBSEP.LE.0) GO TO 480
         CALL BKPOIN(LECDAF,'BSPF',KINCO,JBSPP)
         IF (JBSPP.LE.0) GO TO 480
         CALL BKPOIN(LECDAF,'BPRO',KINCO,JBPRP)
         IF (JBPRP.LE.0) GO TO 480
         NRSEP=LROWS(JBSEP)
         IKLOM=0
         DO 440 IKR=NRSEP,1,-1
            KBSEP=KROW(JBSEP,IKR)
            IF (IW(KBSEP+JBSEND).NE.IDPOT) GO TO 440
            IF (IW(KBSEP+JBSEWD).GT.ISDAT) GO TO 440
            IF (IW(KBSEP+JBSEFR).NE.IRUMC) GO TO 440
            IBPRP=IW(KBSEP+JBSEBP)
            IBSPP=IW(KBSEP+JBSEBS)
            KBPRP=KROW(JBPRP,IBPRP)
            KBSPP=KROW(JBSPP,IBSPP)
            IF (IW(KBSPP+JBSPFR).NE.IRAN1) GO TO 440
            IF (MOD(IW(KBSPP+JBSPSR),NSPKC).NE.IRAN2)  GO TO 440
            ISPPO=IW(KBSPP+JBSPSR)/NSPKC
            IF (ISPKO.GT.0.AND.ISPKO.NE.ISPPO) GO TO 440
            IF (IW(KBSPP+JBSPRG).NE.IGEOG) GO TO 440
            IPJGA=IW(KBPRP+JBPRCV)
            IPOGA=IPJGA
            IF (IPJGA.GT.IFAGA) THEN
               IPOGV=IPJGA/IFAGA
               IPOGA=IPJGA-IPOGV*IFAGA
            ENDIF
            IF (IPOGA.NE.IGAGV) GO TO 440
C Mother POT has been found !
C Special particle code if any must be transmitted to the MINI / NANO :
            IW(KBSPF+JBSPSR)=IW(KBSPP+JBSPSR)
            CALL ALSTIN(IW(KBSPP+JBSPCO),NWCOM,COMOL)
C Build the new comment :
            CALL BKNMCO(KINCO,KBSET,JBPRO,JBRLI,COMOL,COMOU,IER)
            IF (IER.NE.0) GO TO 480
            IKLOM=IKR
            GO TO 445
 440     CONTINUE
 445     IF (IKLOM.GT.0) GO TO 450
         IF (IKLOM.EQ.0.AND.ISDAT.LT.960000) GO TO 480
C Some MC MINIs made in 1996 have no mother POT :
         CALL ALSTIN(IW(KBSPF+JBSPCO),NWCOM,COMOL)
         CALL BKNMCO(KINCO,KBSET,JBPRO,JBRLI,COMOL,COMOU,IER)
         IF (IER.NE.0) GO TO 480
C ----------------------------------------------------------------------
C Write the new comment in 'BSPF' :
C
 450     ITSC=ITSC+1
         DO 460 IK=JBSPCO,JBSPKC-1
 460     IW(KBSPF+IK)=INTCHA('    ')
         CALL ALINST(COMOU,IW(KBSPF+JBSPCO),NDUM)
         VSNP=VSN
         COMP=COMOU
         IFILE=IW(KBPRO+JBPRDD)
         WRITE ( LWRDBG,1012) DNADAT(IDNAT),VSNP,IFILE,COMP
         GO TO 500
C Errors :
 470     WRITE ( LWRDBG,1105)
         GO TO 500
 480     WRITE ( LWRDBG,1106) VSN,TAPOR
         ITSC=-1
 500  CONTINUE
C
 600  IF (ITSC.EQ.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1103,ITSC
      WRITE ( LWRDBG,1103) ITSC
 999  RETURN
C ----------------------------------------------------------------------
 1012 FORMAT (/'  ===> New comment for Tape =',2X,A4,2X,A8,I5,2X,A80)
 1103 FORMAT (7X,'+++ BKCLVR Dataset Comments rebuilt  =',I9)
 1105 FORMAT (/1X,100(1H*)/' **** BKCLVR ****  Dataset with empty ',
     +        ' comment !! ',/1X,100(1H*))
 1106 FORMAT (/1X,100(1H*)/' **** BKCLVR ****  Rebuilding of comment',
     +        ' not possible !! ',/25X,' VSN , TAPOR =',2(2X,A8),
     +         /1X,100(1H*))
 1109 FORMAT (/1X,100(1H*)/' **** BKCLVR ****  Dataset with wrong ',
     +       'Spec. Particle Code !',/'  >> TAPE =',2X,A8,/
     +       '  ++ COMMENT is :',2X,A80,/
     +       '  ** ICCB , IKPA , INEW =',2I8,I12,/1X,100(1H*))
 1112 FORMAT (/' ===> New Comment for Alignment/Calibration Tape :'/,
     +         2X,'VSN = ',A8,' Comment : ',A80)
      END
      SUBROUTINE BKCOMRUN(COMEN,NFRU,LISRU,NRUNS)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Decode RAW dataset run list from dataset comment
C   Author   J. Boucrot   02-Oct-1996
C Called from BKCHKRUN                                from  BOOKLIB
C Input  argument :
C  COMEN  =  dataset comment
C   NFRU  =  first run ( from BSET )
C Output arguments :
C  LISRU  =  list of runs
C  NRUNS  =  number of runs
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( MAXRU=15 )
      CHARACTER COMEN*80,COMRU*80
      INTEGER LISRU(MAXRU)
C-----------------------------------------------------------------------
C Decode the run # s from the comment ...
         CALL VZERO(LISRU,MAXRU)
         COMRU=' '
         IRRU=5
         IF (NFRU.GT.9999) IRRU=6
         IPP=INDEX(COMEN,'RUNS')
         ISTA=5
         COMRU=COMEN(IPP+ISTA:LNBLNK(COMEN))
         LENRU=LNBLNK(COMRU)+1
         NRUNS=(1+LENRU)/IRRU
         IF (IRRU.EQ.5) THEN
            READ (COMRU,1013)  (LISRU(K),K=1,NRUNS)
         ELSE
            READ (COMRU,1014)  (LISRU(M),M=1,NRUNS)
         ENDIF
C
 999  RETURN
C----------------------------------------------------------------------
 1013 FORMAT ( 15(1X,I4))
 1014 FORMAT ( 15(I5,1X))
      END
      SUBROUTINE BKCOPY
C-----------------------------------------------------------------------
CKEY ALBOOK COPY
C! Multipurpose routine used by ALCOPY,ALBOOK and ALPROD/ALREPRO execs
C
C J. Boucrot  28-08-1989     - modified 06-Oct-1989 for 'RUNH' problems
C   Modified 19-Mar-1990 for 1990 POTs with multi-record run headers
C   Modified 24-May-1990 to handle properly DSTs and MINIs
C   Modified 19-Dec-1991  to process NANO DSTs
C   Modified 01-Dec-1994 to use ABRSEL on VAX and UNIX machines
C Calls BUNIT,BREAD,BWRITE,BDROP,BGARB,BSWAP,BKFMT        from BOSLIB
C Calls ACARD1,ACARD2,ALDTYP,ALGTYP,ALSTIN,AUBOS,JALREC   from ALEPHLIB
C Calls BKINJB,BKENRU,BKENJO,BKVARS                       from BOOKLIB
C Calls BKBSET,BKBTAP,BKBSPF,BKBPRO                       from BOOKLIB
C
C Options are transmitted from ALCOPY/ALBOOK/ALPROD execs via BOS cards
C   The following operations can be done :
C     -  COPY job with or without change of format , no Bookkeeping
C     -  COPY job with or without change of format , Bookkeeping
C        ( In both cases above , selection of runs/events may be done
C          through SRUN  , IRUN , NEVT , SEVT data cards )
C     -  Fast reading of a file or tape , creating the informations
C         needed for the  Bookkeeping
C        ( in this option , the run/event selection is meaningless )
C-----------------------------------------------------------------------
C   Syntax of data cards : ( All of them are generated automatically
C                            by ALCOPY ,ALBOOK or ALPROD )
C
C   BOOK                        generates the Bookkeeping file sent to
C                               the ALSOFT machine
C
C   BUSR  'username'                    : needed for an adequate info
C   BCOM  'some meaningful comment'     : in the Bookkeeping database
C
C-----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- RUNHJJ ----
      PARAMETER(JRUNEN=1,JRUNRN=2,JRUNRT=3,JRUNSD=4,JRUNST=5,LRUNHA=5)
C-- EVEHJJ ----
      PARAMETER(JEVEEN=1,JEVERN=2,JEVERT=3,JEVEDA=4,JEVETI=5,JEVEEV=6,
     +          JEVEM1=7,JEVEM2=8,JEVEM3=9,JEVEM4=10,JEVETY=11,
     +          JEVEES=12,JEVETE=13,LEVEHA=13)
C-- KSECJJ ----
      PARAMETER(JKSEGI=1,JKSEGV=2,JKSEGN=3,JKSEAN=4,JKSEGX=5,JKSEGE=6,
     +          JKSEAX=7,JKSEAE=8,LKSECA=8)
      COMMON / KSECDA / IKINSEC,IKINVSN,IEVNTAC,XSECTAC,XSECERR
      PARAMETER (  IYMIN = 89 , IELMX = 1000000 )
      DIMENSION BLIN(10000)
      CHARACTER FMIN*4,FMOU*4,FSOU*4,PROGN*8,FDUM*40,PARM*20
      CHARACTER*4 NAME,NLIST,FMUN
      INTEGER ACARD1,ACARD2,ALGTYP
      INTEGER LPARC(NFILMX)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Initialization of some variables :
C
      IBOOK=0
      FMIN='    '
      FMOU='    '
      PROGN='        '
      INIJB=0
      IRUNR=0
      NREC=0
      NVOLD=0
      NVNEW=0
      NROLD=0
      NRNEW=0
C
      CALL BKFMT('ROLD','2I')
      DO 15 IK=1,NFILMX
 15   LPARC(IK)=0
C Fortran units for input/output streams :
      LUNIN=1
      LUNOU=2
C-----------------------------------------------------------------------
C
C  Bookkeeping requested ?  ( data card BOOK )
C
      IF (IW(NAMIND('BOOK')).NE.0) IBOOK=1
C-----------------------------------------------------------------------
C Read the input tape :
C
 110  CALL ABRSEL('S','NODE',IRET)
      IF (IRET.GE.4) GO TO 500
      IF (IRET.EQ.2) THEN
C This is a run record :
C ---- begin specific actions if Bookkeeping option requested  ....
C Is this the end-of-run of a Mcarlo tape or file ? :
         JRUNE=IW(NAMIND('RUNE'))
         IF (JRUNE.GT.0.AND.IGAL.EQ.1) GO TO 200
         IF (IBOOK.EQ.1) THEN
            FSOU=FMOU
            IF (FMOU.EQ.' ') THEN
               FSOU=FMIN
               LUNOU=LUNIN
            ENDIF
C on first 'RUNR' bank , store the values in 'ROLD'
            JRUNR=IW(NAMIND('RUNR'))
            IF (JRUNR.NE.0) THEN
               IRUNR=IRUNR+1
               IF (IRUNR.EQ.1) THEN
                  CALL AUBOS('ROLD',0,LMHLEN,JROLD,IGARB)
                  IF (IGARB.EQ.2) GO TO 910
                  IW(JROLD+JRUNEN)=IW(JRUNR+JRUNEN)
                  IW(JROLD+JRUNRN)=IW(JRUNR+JRUNRN)
                  NROLD=IW(JRUNR+JRUNRN)
               ENDIF
            ENDIF
C determine the nature of input data and the name
C of the program which produced them :
            CALL ALDTYP(IDNAT)
            IGAL=ALGTYP(I1,I2,I3,I4)
            IF (IGAL.EQ.0.AND.IDNAT.EQ.2) PROGN='ON LINE '
            IF (IGAL.EQ.1.AND.IDNAT.EQ.2) PROGN='GALEPH  '
            IF (IDNAT.EQ.1) PROGN='KINGAL  '
            IF (IDNAT.EQ.7) PROGN='NDSTPROD'
            IF (PROGN.NE.' ') GO TO 130
            JRHAH=IW(NAMIND('RHAH'))
            IF (JRHAH.EQ.0) GO TO 132
            NLPR=LROWS(JRHAH)
            KRHAH=KROW(JRHAH,NLPR)
            CALL ALSTIN(IW(KRHAH+1),2,PROGN)
            IF (INDEX(PROGN,'M').GT.0) PROGN='MINI'
 130        CONTINUE
            IF (PROGN.EQ.' ') PROGN='ON LINE '
            IF (IDNAT.EQ.0) IDNAT=2
C
C Write the LBOKLUZ0 file for LUMInosity for POT Real data :
C
            IF (IDNAT.EQ.3.AND.IGAL.EQ.0) CALL BKLBOK
C
            INIJB=INIJB+1
            IF (INIJB.GT.1) GO TO 132
C initialize the Bookkeeping package :
            CALL BKINJB(PROGN,LUNIN,1,LUNOU,1,FSOU,IDNAT,FDUM,IER)
            IF (IER.NE.0) GO TO 910
C build the general Bookkeeping banks BPRO,BSPF
            IF (IGAL.EQ.0) THEN
               CALL BKFTCA
               CALL BKBPRO(IER)
               IF (IER.NE.0) GO TO 910
               CALL BKBSPF(IER)
               IF (IER.NE.0) GO TO 910
            ELSE
               CALL BKENRU(0,IER)
               IF (IER.NE.0) GO TO 910
            ENDIF
C Is this really a new run , or another run record of the same run ?
 132        IF (JRUNR.GT.0) THEN
               NRNEW=IW(JRUNR+JRUNRN)
               IF (NRNEW.EQ.NROLD.OR.NVNEW.EQ.NVOLD) GO TO 135
               NEVRUN(1)=NVNEW-NVOLD
               CALL BSWAP(IW,'RUNR','ROLD')
C Build the Bookkeeping record for the previous run just ended :
               CALL BKBSET(LUNOU,IER)
               IF (IER.NE.0) GO TO 910
C Flip 'RUNR' and 'ROLD' :
               JROLD=IW(NAMIND('ROLD'))
               IF (JROLD.EQ.0) GO TO 910
               JRUNR=IW(NAMIND('RUNR'))
               IF (JRUNR.EQ.0) GO TO 910
               IW(JRUNR+JRUNEN)=IW(JROLD+JRUNEN)
               IW(JRUNR+JRUNRN)=IW(JROLD+JRUNRN)
               NROLD=NRNEW
               NVOLD=NVNEW
 135           CONTINUE
            ENDIF
         ENDIF
C ---- end of specific actions if Bookkeeping option requested ---------
      ENDIF
C-----------------------------------------------------------------------
C is this an event record or a slow control record ?
      IF (IRET.EQ.1.OR.IRET.EQ.3) THEN
         IF (IRET.EQ.1)  NVNEW=NVNEW+1
C ---- begin  specific actions if Bookkeeping option requested ....
C - quantities from the 'KSEC' bank in run_end record :
         IF (IBOOK.EQ.1.AND.IRET.EQ.3) THEN
            JKSEC=IW(NAMIND('KSEC'))
            IF (JKSEC.GT.0) THEN
               IKINSEC=ITABL(JKSEC,1,JKSEGI)
               IKINVSN=ITABL(JKSEC,1,JKSEGV)
               IEVNTAC=ITABL(JKSEC,1,JKSEAN)
               XSECTAC=RTABL(JKSEC,1,JKSEAX)
               XSECERR=RTABL(JKSEC,1,JKSEAE)
            ENDIF
         ENDIF
C
            IF (IBOOK.EQ.1.AND.NVNEW.EQ.1) THEN
C Get DATE , LEP energy (in Mev ) for this run , from Event Header  :
               JEVEH=IW(NAMIND('EVEH'))
               IF (JEVEH.EQ.0) GO TO 150
               LPARC(5)=IW(JEVEH+JEVEDA)
               LPARC(6)=IW(JEVEH+JEVETI)
               IELEP=IW(JEVEH+JEVETE)
C IELEP is sometimes given in Kev ...
               IF (IELEP.GT.IELMX) IELEP=IELEP/1000
               LPARC(8)=IELEP
               CALL BKVARS(LPARC)
 150           CONTINUE
            ENDIF
C ---- end of specific actions if Bookkeeping option requested ....
      ENDIF
 200  CONTINUE
      GO TO 110
C
C end-of-data :
C
 500  CONTINUE
      IF (IBOOK.EQ.1) THEN
         NEVRU=NVNEW-NVOLD
         IF (NEVRU.GT.0) CALL BKENRU(NEVRU,IER)
         IF (IER.NE.0) GO TO 910
         CALL BKENJO(IER)
         IF (IER.NE.0) GO TO 910
      ENDIF
      GO TO 999
C-----------------------------------------------------------------------
C Process errors :
 910  WRITE ( IW(6) ,1002 )
 1002 FORMAT (//' +++ BKCOPY : Not enough room for Bookkeeping banks')
C
 999  RETURN
      END
      SUBROUTINE BKCTIM(DAYSC,IYEAR,IMONT,IDAY,IHOUR,IMINU,ISEC)
C-----------------------------------------------------------------------
C! Translates the time-dependant part of a Bookkeeping filename
CKEY ALBOOK  DSNAME TIME / USER
C  J. Boucrot       21-Dec-1988
C  May be called by the user
C   Input = DAYSC  11-DIGIT character name built as follows :
C     * 2 digits for the year .
C     * then a point (on VAX) or a blank ( on IBM ) as separator
C     * 3 digits for the day # in the year ( from 1 to 365 or 366 )
C     * 5 digits for the second # in the day ( 1 to 86400 )
C  Output arguments : precise timing :
C     IYEAR  =  2 last digits of the year
C     IMONT  =  month number ( between 1 and 12 )
C     IDAY   =  day number in the month ( between 1 and 31)
C     IHOUR  =  hour number in the day
C     IMINU  =  minute number in the hour
C     ISEF   =  second number in the minute
C  These arguments are set to 0 if the input string is meaningless
C-----------------------------------------------------------------------
       SAVE
       PARAMETER (JSCMX = 86400 )
       PARAMETER ( IFYEA=1 , ILYEA=2 , ILPOI=3 , IPDAY=4 )
       PARAMETER ( ILDAY = 6 , IPSEC = 7 , ILSEC = 11 )
       CHARACTER*1  CT
       CHARACTER*11 DAYSC
       INTEGER IDMON(13,2)
       DATA IDMON /0,31,59,90,120,151,181,212,243,273,304,334,365,
     +             0,31,60,91,121,152,182,213,244,274,305,335,366/
C-----------------------------------------------------------------------
C
       IYEAR=0
       IMONT=0
       IDAY=0
       IHOUR=0
       IMINU=0
       ISEC=0
C First , check if the input string looks reasonable :
       DO 5 I=1,11
          IF (I.EQ.3) GO TO 5
          CT=DAYSC(I:I)
          IF (ICHAR(CT).LT.ICHAR('0')) GO TO 999
          IF (ICHAR(CT).GT.ICHAR('9')) GO TO 999
 5     CONTINUE
C
C Year
       READ ( DAYSC(IFYEA:ILYEA) , '(I2)' )  IYEAR
C
C Day # in the year
C
       READ ( DAYSC(IPDAY:ILDAY) , '(I3)' )  JDAY
C
C translate it into month and day in the month :
C
       IBISS=1
       IF (MOD(IYEAR,4).EQ.0) IBISS=2
       DO 10 IM=1,12
          MIND=1+IDMON(IM,IBISS)
          MAXD=IDMON(IM+1,IBISS)
          IF (JDAY.GE.MIND.AND.JDAY.LE.MAXD) THEN
             IMONT =IM
             IDAY=JDAY-MIND+1
             GO TO 20
          ENDIF
 10    CONTINUE
 20    CONTINUE
C
C Second in the day :
C
       READ ( DAYSC(IPSEC:ILSEC) , '(I5)' )  JSEC
C Translate it into hour, minute , second :
       IF (JSEC.LE.0.OR.JSEC.GT.JSCMX) GO TO 999
       IHOUR=JSEC/3600
       JM=JSEC-3600*IHOUR
       IMINU=JM/60
       ISEC=JM-60*IMINU
C
 999   RETURN
       END
      SUBROUTINE BKDACI(IFLAG,CDAT,CTIM,IDATE,ITIME)
C----------------------------------------------------------------------
CKEY TOOL
C! Transforms Character dates into Integer dates
C  Author  J.BOUCROT 14-Nov-1989
C Called from USER
C Input arguments :
C  IFLAG  = 1 if input date to be described as DD/MM/YY
C  IFLAG  = 2 if input date to be described as MM/DD/YY
C  CDAT   = character date , either DD/MM/YY or MM/DD/YY
C  CTIM   = character time , HH.mm.SS
C Output arguments :
C  IDATE  = integer date YYMMDD
C  ITIME  = integer time hhmmss
C----------------------------------------------------------------------
      CHARACTER CDAT*8,CTIM*8
C----------------------------------------------------------------------
      IDATE=-111111
      ITIME=-111111
      IDC=1
      IDM=4
      IF (IFLAG.EQ.2) IDC=4
      IF (IFLAG.EQ.2) IDM=1
C
      READ ( CDAT(IDC:IDC+1) , '(I2)' , ERR=910 ) IDAY
      READ ( CDAT(IDM:IDM+1) , '(I2)' , ERR=910 ) IMON
      READ ( CDAT(7:8) , '(I2)' , ERR=910 ) IYEA
      READ ( CTIM(1:2) , '(I2)' , ERR=910 ) IHOU
      READ ( CTIM(4:5) , '(I2)' , ERR=910 ) IMIN
      READ ( CTIM(7:8) , '(I2)' , ERR=910 ) ISEC
      IDATE=IDAY+100*IMON+10000*IYEA
      ITIME=ISEC+100*IMIN+10000*IHOU
      GO TO 999
C Wrong input :
 910  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKDAIC(IFLAG,IDATE,ITIME,CDAT,CTIM)
C----------------------------------------------------------------------
CKEY TOOL
C! Transforms integer dates into character dates
C  Author  J.BOUCROT 14-Nov-1989
C Called from USER
C Input arguments :
C  IFLAG  = 1 if output date to be described as DD/MM/YY
C  IFLAG  = 2 if output date to be described as MM/DD/YY
C  IDATE  = integer date YYMMDD
C  ITIME  = integer time hhmmss
C Output arguments :
C  CDAT   = character date , either DD/MM/YY or MM/DD/YY
C  CTIM   = character time , HH.mm.SS
C----------------------------------------------------------------------
      CHARACTER CDAT*8,CTIM*8
C----------------------------------------------------------------------
      CDAT='  /  /  '
      CTIM='  .  .  '
      IF (IDATE.LT.0.OR.ITIME.LT.0) GO TO 999
C
      IDC=1
      IDM=4
      IF (IFLAG.EQ.2) IDC=4
      IF (IFLAG.EQ.2) IDM=1
C Decode IDATE and ITIME :
      IYEA=IDATE/10000
      IF (IYEA.GT.99) GO TO 999
      IST=IDATE-10000*IYEA
      IMON=IST/100
      IDAY=IST-IMON*100
      IHOU=ITIME/10000
      IF (IHOU.GE.24)  GO TO 999
      ISM=ITIME-10000*IHOU
      IMIN=ISM/100
      ISEC=ISM-IMIN*100
C Build CDAT and CTIM :
      WRITE ( CDAT(IDC:IDC+1) , '(I2)' )    IDAY
      WRITE ( CDAT(IDM:IDM+1) , '(I2)' )    IMON
      CALL BKCARI(IYEA,2,CDAT(7:8))
      WRITE ( CTIM(1:2) , '(I2)' )    IHOU
      WRITE ( CTIM(4:5) , '(I2)' )    IMIN
      WRITE ( CTIM(7:8) , '(I2)' )    ISEC
C
 999  RETURN
      END
      SUBROUTINE BKDAPR(LUN,NAME,NOUT,NTOU)
C-----------------------------------------------------------------------
C! Gets the sorted list of DAF bank numbers for bank 'NAME'
C  Adapted version of the BOS BDAPR subroutine , J. Boucrot 07-Jun-1993
C  Called from BKLUFP                                    from BOOKLIB
C  Input arguments :
C   LUN = Fortran unit name to read the DAF
C  NAME = name of the bank to be read
C Output arguments :
C  NOUT = sorted array of bank numbers existing on the DAF
C  NTOU = number of different banks
C-----------------------------------------------------------------------
      CHARACTER*4 NAME,CHAINT
C     COMMON/DACOM FOR DIRECT ACCESS SUBROUTINES
      COMMON/DACOM/LUNDA,NWRDA,NPRDA,
     1             IUB,  IDR,  IDD,  NRR,  NRD,  NDD,
     1             NADA, NRDA, NDDA, NDDR, INDA, NHDA,
     2             NDTD, NDTC, NDTR, IDRR, IDDR,
     3            INW,NIW,NEX,INA,JRLO,JRHI,NRLO,NRHI,
     4             NI,NIR(200)
C     BOS CONSTANTS EXPLAINED IN CPARAM
C
      PARAMETER (
     1            NSS = 50, LUC =  5, LUP =  6, LUW =  7, LUB =  8,
     2            IAR =  8, NJA = 11, NJW = 12, LJW = 13, INM = 14,
     3            IGP = 15, IWK = 16, NDN = 17, NDW = 18, IGN = 19,
     4            IGW = 20, IDL = 21, ILT = 21, IDA = 28, IOS = 29,
     5            ICK = 30, IRC = 30, NGN = 39, NGW = 40, NFH = 40,
     6            LCH = 38)
C     ------
      COMMON/BCS/IW(1000)
      INTEGER NJR(100),NOUT(*)
C-----------------------------------------------------------------------
      NTOU=0
      IF(IW(LUP).LE.0) GOTO 100
      IUB=NLINK('+BUF',LUN)
      IF(IUB.EQ.0) GOTO 100
      LUNDA=LUN
      NWRDA=IW(IUB+11)
   70 CONTINUE
      NS=NAMIND(NAME)*100+LUN
      NJ=0
      LAST=0
   72 INR=NDANR(LUN,NAME,'GE',LAST)
      IF(IW(2).NE.0) GOTO 78
      INS=NLINK('+DIS',NS)
      IF(INS.EQ.0) GOTO 100
      DO 73 J=5,IW(INS)
      IF(IW(INS+J).EQ.INR) GOTO 74
   73 CONTINUE
      GOTO 78
   74 DO 76 I=J,IW(INS)
      NJ=NJ+1
      NJR(NJ)=IW(INS+I)
      NTOU=NTOU+1
      NOUT(NTOU)=NJR(NJ)
      IF(NJ.LT.100) GOTO 76
      NJ=0
      LAST=NJR(100)+1
      GOTO 72
   76 CONTINUE
      LAST=NJR(NJ)+1
      GOTO 72
   78 CONTINUE
   80 NJ=0
      LAST=-1
   82 INR=NDANR(LUN,NAME,'LE',LAST)
      IF(IW(2).NE.0) GOTO 88
      INS=NLINK('+DIS',NS)
      IF(INS.EQ.0) GOTO 100
      DO 83 J=5,IW(INS)
      IF(IW(INS+J).EQ.INR) GOTO 84
   83 CONTINUE
      GOTO 88
   84 DO 86 I=J,5,-1
      NJ=NJ+1
      NJR(NJ)=IW(INS+I)
      NTOU=NTOU+1
      NOUT(NTOU)=NJR(NJ)
      IF(NJ.LT.100) GOTO 86
      NJ=0
      LAST=NJR(100)-1
      GOTO 82
   86 CONTINUE
      LAST=NJR(NJ)-1
      GOTO 82
   88 CONTINUE
  100 RETURN
      END
      SUBROUTINE BKDASEL
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Define flag IDASEL fromethe nature of selected Data
C  J. Boucrot 10-Sep-1996
C  Called from INNADAT,BKSEXQ                             from BOOKLIB
C Common variables defined in this routine for the search :
C    IDASEL                 in   / BKFILU /
C    IALISE , SELDAT        in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
      IF (SELDAT.EQ.'A') SELDAT=' '
C Define IDASEL if necessary :
      IF (SELDAT.EQ.' ') GO TO 999
      IF (IDASEL.GT.0) GO TO 202
      DO 201 IJ=1,NNDAT
         IF (SELDAT(1:1).NE.DNADAT(IJ)(1:1))  GO TO 201
         IDASEL=IJ
         GO TO 202
 201  CONTINUE
 202  IF (IDASEL.GT.8) IDASEL=8
      IF (IDSEAR.EQ.7) IALISE=IDASEL+10
C
 999  RETURN
      END
      SUBROUTINE BKDATSIZ(NPER,KBSET,MBYT)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Compute the size ( in Mbytes ) of a dataset
C  Author J.Boucrot 04-Oct-1996
C Called from PRBFIL,PRLEV3                      from BOOKLIB
C Calls BKCHHO                                   from BOOKLIB
C Calls JALREC                                   from ALEPHLIB
C Input arguments :
C   NPER = BSET bank #
C  KBSET = pointer in BSET,NPER of dataset
C Output argument :
C   MBYT = size of dataset in MBytes
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      COMMON / PRBFAA / NRUNAA,NPOSAA
      CHARACTER TAPE*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      MBYT=0
      NBYTS=0
      NMBY=1000000
      NADAT=MOD(IW(KBSET+JBSEND),10)
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      IBTPN=IW(KBSET+JBSEBT)
      IF (IBTPN.EQ.0) GO TO 999
      JBTPN=NLINK('BTPN',NPER)
      IF (JBTPN.EQ.0) GO TO 999
      KBTPN=KROW(JBTPN,IBTPN)
      CALL ALSTIN(IW(KBTPN+JBTPVS),2,TAPE)
      IRAWD=0
      IF (IDASEL.EQ.2.AND.IRAWD1.EQ.1) IRAWD=1
C No BRLI information for the dataset :
      IF (IBRL1.GT.0.AND.IBRL2.GT.0) GO TO 100
      NRECT=IW(KBTPN+JBTPRN)
      NBYTS=NRECT*JALREC(DUMM)
      GO TO 300
C BRLI information exists :
 100  JBRLI=NLINK('BRLI',NPER)
      IF (JBRLI.EQ.0) GO TO 300
      DO 150 IBRLI=IBRL1,IBRL2
         KBRLI=KROW(JBRLI,IBRLI)
         IF (IRAWD.EQ.1) THEN
            NRUI=IW(KBRLI+JBRLRN)
            IF (NRUI.NE.NRUNAA) GO TO 150
         ENDIF
         NBYTS=NBYTS+IW(KBRLI+JBRLNB)
 150  CONTINUE
C Get MBytes from # of bytes :
 300  IF (NBYTS.LE.0) GO TO 999
      MBYT=NBYTS/NMBY
      IF (IMCDAT.EQ.1.AND.NADAT.EQ.2) MBYT=MIN0(MBYT+2,600)
      IF (IMCDAT.EQ.2.AND.MBYT.LE.100) MBYT=2*MBYT
      CALL BKCHHO(TAPE,ICERN,IHOML,IMULT,IEX,IDL,I3490,IER)
      IF (IER.NE.0) GO TO 999
      IF (IMULT.EQ.0.AND.(MBYT.LE.0.OR.MBYT.GT.200)) MBYT=200
C
 999  RETURN
      END
      SUBROUTINE BKDBSX11(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Open/read the year/MC database for X11 execution
C  J. Boucrot 30-Nov-1996
C  Called from X11
C  Calls BKOPDA,BKOPYD,BKLEPL                        from BOOKLIB
C Output argument :
C   IER = 1 if problem with database
C-----------------------------------------------------------------------
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
      IER=0
C Open/read the adequate database:
      IF (IMCDAT.EQ.2) THEN
         CALL BKOPDA('ALEBMCAR',IFAIL)
         IF (IFAIL.NE.0) GO TO 900
      ELSE
         CALL BKOPYD(IFAIL)
         IF (IFAIL.NE.0) GO TO 900
      ENDIF
C Build the list of LEP energies :
      CALL BKLEPL
      GO TO 999
C Error with the database :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKDKLI(LINE,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK INIT
C! Auxiliary to BKINRQ : compares time of file to time of database
C J. Boucrot  10-10-1995
C Called from BKINRQ                                    from BOOKLIB
C Calls  BKUXCI,PRPSLS                                  from BOOKLIB
C  Input argument :
C  LINE = line of Listfile containing information on file ( on VM )
C  LINE = DATE of file writing ( on UNIX )
C  Output argument :
C   IER = 0  all OK
C   IER = 1  file is older than database , should be discarded
C-----------------------------------------------------------------------
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      CHARACTER*(*) LINE
      CHARACTER FILE*60,DATE*12,SIZE*9
C-----------------------------------------------------------------------
      IER=1
C On UNIX : LINE contains already the date with syntax of ls -l command
      DATE=LINE(1:12)
      CALL BKUXCI(DATE,IDFIL,ISFIL)
C Compare this time with the time of last DBASE update :
C only more recent files will get IER = 0 :
      IYO=IYEAOL
      IF (IYO.LT.10) IYO=100+IYO
      IDDAF=10000*IYO+100*IMONOL+IDAYOL
      IF (IDFIL.LT.IDDAF) GO TO 999
      IF (IDFIL.GT.IDDAF) GO TO 5
      ISDAF=10000*IHOUOL+100*IMINOL+ISECOL
      IF (ISFIL.LE.ISDAF) GO TO 999
 5    IER=0
      GO TO 999
C Problem somewhere :
 900  CONTINUE
 999  RETURN
      END
      SUBROUTINE BKDLTMAS(IMCD,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Check all CERN DLTs and Redwoods  and put them as MASTER datasets
C  J. Boucrot 11-Dec-1996  - Modified 09-Jan-1998 for Redwoods
C Called from BKUPDF                             from BOOKLIB
C Calls BKCHKT                                   from BOOKLIB
C Calls  ALSTIN                                  from ALEPHLIB
C   Intput argument :
C IMCD = 1  for Real datasets, = 2 for MC datasets
C   Output argument :
C  IER = 1  if pb with banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
          CHARACTER*8 TAPE,TAPMA
          CHARACTER*4 TLOC,CHAINT,VLOC(2)
          INTEGER INTAX(2),INTAM(2),MOLOC(2),MOMAS(2)
          EXTERNAL CHAINT,INTCHA
          DATA VLOC / 'VAUL' , 'STK ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      CALL VZERO(MOLOC,2)
      CALL VZERO(MOMAS,2)
C Real or MC datasets :
      IF (IMCD.LT.1.OR.IMCD.GT.2) GO TO 999
      WRITE (LWRDBG,1001) IMCD
      JBDFS=NLINK('BDFS',IMCD)
      IF (JBDFS.LE.0) GO TO 900
      NBDFS=LROWS(JBDFS)
      ILOC=0
      IMAS=0
C LOOP on all datasets of this category :
      DO 700 IBDFS=1,NBDFS
         KBDFS=KROW(JBDFS,IBDFS)
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
C Look only at CERN DLTs or Redwood files (NOT Raws!):
         CALL BKCHKT(TAPE,ICERN,IMULT,IDLT,IER1)
         IF (IER1.NE.0) GO TO 700
         IF (ICERN.EQ.0) GO TO 700
         IF (TAPE(1:2).EQ.'AR') GO TO 700
C IDLT = 1 for DLTs, = 2 for Redwoods:
         IF (IDLT.LT.1.OR.IDLT.GT.2) GO TO 700
C Decode the TMS location ; put it as VLOC(IDLT) if not OK:
         TLOC=CHAINT(IW(KBDFS+JBDFLO))
         IF (TLOC.NE.VLOC(IDLT)) THEN
            WRITE (LWRDBG,1014) TAPE,TLOC
            MOLOC(IMCD)=MOLOC(IMCD)+1
            IW(KBDFS+JBDFLO)=INTCHA(VLOC(IDLT))
         ENDIF
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         IFILC=IW(KBDFS+JBDFFN)
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.LE.0) GO TO 900
         KBSET=KROW(JBSET,NROW)
         ICOF=IW(KBDFS+JBDFCO)
         IF (ICOF.EQ.0) GO TO 700
C
C This DLT or Redwood is a copy : there may  be somewhere
C an  Homelab 3480 cartridge or DLT or Redwood as master,
C which has to become a copy; CERN masters remain unchanged:
C
         CALL UCOPY(IW(KBDFS+JBDFTC),INTAX,2)
         NBD1=MAX0(1,IBDFS-10)
         NBD2=MIN0(NBDFS,IBDFS+10)
         DO 300 IIBD=NBD1,NBD2
            KKBD=KROW(JBDFS,IIBD)
            NNPP=IW(KKBD+JBDFNP)
            IF (NNPP.NE.NPER) GO TO 300
            NNRR=IW(KKBD+JBDFNR)
            IF (NNRR.NE.NROW) GO TO 300
            ICOFL=IW(KKBD+JBDFCO)
            IF (ICOFL.NE.0) GO TO 300
            CALL ALSTIN(IW(KKBD+JBDFTC),2,TAPMA)
C If TAPMA is a CERN DLT/Redwood, all is OK, let it as it is:
            CALL BKCHKT(TAPMA,IMUL,ICERM,IDLTM,IERM)
            IF (IERM.NE.0) GO TO 300
            IF (ICERM.NE.0.AND.(IDLTM.EQ.1.OR.IDLTM.EQ.2)) GO TO 300
C TAPMA is an Homelab tape:
            WRITE (LWRDBG,1006) TAPMA,IIBD,IBDFS,TAPE
C Exchange the CERN and Homelab datasets in BDFS :
            CALL UCOPY(IW(KKBD+JBDFTC),INTAM,2)
            CALL UCOPY(INTAM(1),IW(KBDFS+JBDFTC),2)
            CALL UCOPY(INTAX(1),IW(KKBD+JBDFTC),2)
C Put the CERN DLT name in bank 'BTPN', NR=NPER:
C Exchange the CERN and Homelab DLT file # in BDFS:
            IFILH=IW(KKBD+JBDFFN)
            IW(KKBD+JBDFFN)=IFILC
            IW(KBDFS+JBDFFN)=IFILH
C Exchange the CERN and Homelab DLT file # in BPRO:
            IBPRO=IW(KBSET+JBSEBP)
            IF (IBPRO.EQ.0) GO TO 400
            JBPRO=NLINK('BPRO',NPER)
            IF (JBPRO.EQ.0) GO TO 400
            KBPRO=KROW(JBPRO,IBPRO)
            IW(KBPRO+JBPRDD)=IFILC
            IBTPN=IW(KBSET+JBSEBT)
            IF (IBTPN.LE.0) GO TO 400
            JBTPN=NLINK('BTPN',NPER)
            IF (JBTPN.LE.0) GO TO 400
            KBTPN=KROW(JBTPN,IBTPN)
            CALL UCOPY(INTAX(1),IW(KBTPN+JBTPVS),2)
            MOMAS(IMCD)=MOMAS(IMCD)+1
            GO TO 400
 300     CONTINUE
 400     CONTINUE
 700  CONTINUE
      WRITE ( LWRDBG,1011) MOLOC,MOMAS
      GO TO 999
C No room FOR BANKS
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/12X,'=== Subroutine BKDLTMAS === : Start for BDFS',
     +        ' bank number',I5)
 1006 FORMAT (5x,'++ Old master was: ',2x,a8,' iibd,ibdfs =',2i6,
     +        ' new master is :',2x,a8)
 1011 FORMAT (/' ** Total number of mod locs =',2i8/
     +         ' ** Total number of mod mast =',2i8)
 1014 FORMAT (8X,'== TAPE :',2X,A8,' Loc Old was :',2x,a4)
      END
      SUBROUTINE BKDNWP(TITLE,NPER,LPER,IF1,IF2,IRUN1,IRUN2,
     +                  IDAT1,IDAT2,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Defines a new bookkeeping "period" , or update an old one
C J. Boucrot  08-12-1988  modified  03-11-1989
C Called from BKNEWP                                     from  BOOKLIB
C Calls AUBOS,BKFILL,ALINST                              from ALEPHLIB
C Calls BKPOIN,BKMODI                                    from  BOOKLIB
C  Input :  TITLE       =   Period name
C           NPER        =   New period number
C           LPER        =   LEP machine  period number
C           IF1,IF2     =   First and last valid LEP fill #
C           IRUN1,IRUN2 =   First and last valid run #
C           IDAT1,IDAT2 =   First and last date of period ( yymmdd )
C  The parameters of the new period are stored in bank 'BPER'
C  Output arguments :
C           IER = 0  all OK
C               = 1  no room to book/enlarge bank 'BPER'
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER * (*)  TITLE
      INTEGER ITAB(MAXIN)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C
      IER=0
      CALL VZERO(ITAB,MAXIN)
      DO 1 I=1,JBPEPN-1
 1    ITAB(I)=INTCHA('    ')
C
C Fill the variables :
C
      CALL ALINST(TITLE(1:LNBLNK(TITLE)),ITAB(JBPEPA),NN)
      ITAB(JBPEPN)=NPER
      ITAB(JBPELP)=LPER
      ITAB(JBPEFE)=IF1
      ITAB(JBPELE)=IF2
      ITAB(JBPEFR)=IRUN1
      ITAB(JBPELR)=IRUN2
      ITAB(JBPEFD)=IDAT1
      ITAB(JBPELD)=IDAT2
C
C Check if 'BPER' exists  already and if this call is an update :
C
      CALL BKMODI('BPER',1,0,LENB,IERM)
      IF (IERM.NE.0) GO TO 900
      NRO=0
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 110
C is this a new period , or the update of an old one :
      NRO=LROWS(JBPER)
      IF (NRO.EQ.0) GO TO 110
      DO 100 IP=1,NRO
         IF (ITABL(JBPER,IP,JBPEPN).EQ.NPER) THEN
            NOLD=IP
            GO TO 200
         ENDIF
 100  CONTINUE
C new period :
 110  CONTINUE
      CALL BKFILB('BPER',1,ITAB,LBPERA,NEWRO,IER)
      GO TO 999
C update of an old one :
 200  CONTINUE
      KBPER=KROW(JBPER,NOLD)
      CALL UCOPY(ITAB(JBPEPA),IW(KBPER+JBPEPA),LBPERA)
      GO TO 999
C
C No room for bank 'BPER' :
 900  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKDOAL(IER)
C ----------------------------------------------------------------------
CKEY STEER
C! Steering of BOOKKEEPING job task execution
C  J. Boucrot   20-Apr-1989
C  Rewritten for UNIX 23-Oct-1995   Mod for SQL 21-Jun-1999
C Called from BKSTEE                               from BOOKLIB
C Calls  BKUPDF,BKSEAR,BKRTMS,BKSPLI,BKLISF        from BOOKLIB
C Calls  BKSQLA,BKCOPY                             from BOOKLIB
C Calls  BGARB                                     from BOS
C  Ouput parameter :
C    IER  = 0  if all OK
C    IER  = 1  BOS banks error
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C ----------------------------------------------------------------------
      IER=0
C Task = Search the ALEBOOK database ( SCANBOOK ) :
      IF (IDSEAR.NE.0) THEN
         CALL BKSEAR(IER)
C Task = COPY or extract Bookkeping info ( ALCOPY/ALBOOK/ALPROD ) :
      ELSEIF (IBCOPY.EQ.1) THEN
         CALL BKCOPY
C Task = Make the Listfiles of disk files :
      ELSEIF (IBLIST.EQ.1) THEN
         CALL BKLISF(IER)
C Task = Automatic UPDABOOK  :
      ELSEIF (IBUPDA.GT.0) THEN
         CALL BKUPDF(IER)
C Task = RESCUE TMS updating which failed during the last UPDABOOK :
      ELSEIF (ITMSRC.EQ.1) THEN
         CALL BKRTMS
C Task = Split the ALEBOOK database into Year databases:
      ELSEIF (IBSPLI.EQ.1) THEN
         CALL BKSPLI
C Task = Make the SQL files or SQL updates:
      ELSEIF (IBKSQL.EQ.1) THEN
         CALL BKSQLA(IER)
      ENDIF
C
 999  CALL BGARB(IW)
      RETURN
      END
      SUBROUTINE BKDVER(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Fills the lists of program versions and processings
C  J. Boucrot 19-Sep-1996            Modified 19-03-1997 for X11
C  Partially rewritten 22-01-1999
C  Called from BKSRSI,BKSRPS                        from BOOKLIB
C  Calls BKFPER,BKPOIN,BKLVPR,BKFIDTS               from BOOKLIB
C  Calls ALSTIN                                     from ALEPHLIB
C Output argument  :
C   IER = 1 if problems with BOS bankse ; = 0 otherwise
C Fills tables of commons /STATPR/ and /DATPROC/
C according to the selections already done
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- DATPROC ----
      PARAMETER ( NPROC = 4 )
      COMMON / DATPROC / NPROCD(NPROC),IFIDAC(NPROC),ILADAC(NPROC),
     +                   IJUVRC(NPROC),IMNVRC(NPROC),ICOVRC(NPROC),
     +                   IJUSLC(NPROC)
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
      CHARACTER TAPE*8
      PARAMETER ( IFAGA = 1000 , IRMA = 100000 )
      COMMON / RSELX11 / IRFLX11,ISRUF11,ISRUL11,ISYEA11
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
C For X11 execution, verify the running conditions before executing:
      IF (IBKINT.EQ.-1) THEN
         CALL BKVERAL(IER)
         IF (IER.NE.0) GO TO 905
      ENDIF
C Special execution for X11 and Impatient Stream search :
      IF (IDSEAR.EQ.2.AND.IBKINT.EQ.-1) THEN
         IDASEL=3
         SELDAT='P'
         CALL DISPOTS
         GO TO 999
      ENDIF
C Initialise common / DATPROC /
      DO 10 IK=1,NPROC
         NPROCD(IK)=0
         IJUVRC(IK)=0
         IMNVRC(IK)=0
         ICOVRC(IK)=1
         ILADAC(IK)=-1
         IFIDAC(IK)=999999
10    CONTINUE
      IF (IBKINT.EQ.-1.AND.IRFLX11.GT.0) THEN
         ISYEAR=ISYEA11
         ISRUNF=ISRUF11
         ISRUNL=ISRUL11
      ENDIF
C Initialise common / STATPR /
      NTOGAS=0
      NTOJUS=0
      NTOPARK=0
      NTOMIS=0
      NTONAS=0
      NTODTS=0
      CALL VZERO(IPARLIS,NKIN)
      CALL VZERO(JULISS,NVERS)
      CALL VZERO(IGALIS,NVERS)
      CALL VZERO(JULNBS,NVERS)
      CALL VZERO(IGANBS,NVERS)
      CALL VZERO(MILISS,NVERS)
      CALL VZERO(MINNBS,NVERS)
      CALL VZERO(NALISS,NVERS)
      CALL VZERO(NANNBS,NVERS)
      DO 50 IK=1,4
        DO 30 IR=1,NVERS
 30     NUMDTS(IK,IR)=0
 50   CONTINUE
C Other initialisations :
      JBPLI=IW(NAMIND('BPLI'))
      JBLPR=IW(NAMIND('BLPR'))
      IF (JBPLI.EQ.0.OR.JBLPR.EQ.0) GO TO 905
      CALL BKCHKR
      IF (IMCDAT.EQ.1) THEN
         CALL BKFPERD(NPMIN,NPMAX,IERD)
         IF (IERD.NE.0) GO TO 999
      ELSE
         NPMIN=1000
         NPMAX=9999
         IF (KINCOD.NE.0) THEN
            NPMIN=KINCOD
            NPMAX=KINCOD
         ENDIF
      ENDIF
C Special initialisations for X11 running:
      IF (IBKINT.EQ.-1) THEN
         IF (IMCDAT.EQ.2) CALL BKDASEL
         IF (PHYKEY.EQ.' ') THEN
            IPHYGR=0
         ELSE
            ISELPH=1
            CALL BKPHY11
         ENDIF
      ENDIF
C-----------------------------------------------------------------------
C Loop on all datasets corresponding to present selections:
      JBDFS=NLINK('BDFS',IMCDAT)
      DO 730 IBDFS=NFDSET,NLDSET
         KBDFS=KROW(JBDFS,IBDFS)
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         IF (NPER.LT.NPMIN.OR.NPER.GT.NPMAX) GO TO 730
C Get pointers to other banks:
         CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
         IF (JBSPF.EQ.0) GO TO 730
         CALL BKPOIN(LECDAF,'BPRO',NPER,JBPRO)
         IF (JBPRO.EQ.0) GO TO 730
         CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
         IF (JBSET.EQ.0) GO TO 730
C Informations from  this 'BSET' bank :
         KBSET=KROW(JBSET,NROW)
C Check nature of data :
         INDAI=IW(KBSET+JBSEND)
         INDAD=MOD(INDAI,10)
         IF (IDSEAR.EQ.7.AND.INDAI.LT.10) GO TO 720
         IF (IDASEL.GT.0.AND.INDAD.NE.IDASEL) GO TO 720
C Check year of geometry ( MCarlo only ! )
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         CALL BKY2K(IW(KBSPF+JBSPRG),100,IGEOG)
         IF (IMCDAT.EQ.2.AND.IGEOG.NE.IGEOYR) GO TO 720
C Check LEP energy :
         IF (ENGLEP.GT.0.) THEN
            CALL BKCHKE(KBSET,NPER,IRUOK)
            IF (IRUOK.EQ.0) GO TO 720
         ENDIF
C Check particle code,if selected already ( MCarlo only ! ) :
         IF (IMCDAT.EQ.2) THEN
            ISMR2=IW(KBSPF+JBSPSR)
            IKOPA=ISMR2/IRMA
            IF (IBKINT.EQ.-1) THEN
               IF (ISELPA.LT.0)  GO TO 705
               IF (ISELPA.GT.0.AND.IKOPA.NE.ISELPA) GO TO 720
               IF (ISELPA.EQ.0.AND.IKOPA.GT.0) GO TO 720
 705           CONTINUE
C Check on 1997 MC special conditions, if necessary:
            IF (INIP97.NE.0.AND.IROW97.GT.0) THEN
               CALL BKCH97(NPER,NROW,IGO97)
               IF (IGO97.EQ.0) GO TO 720
            ENDIF
            ENDIF
         ENDIF
C Check Homelab :
         IF (ILABCH.LE.0) GO TO 708
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
         CALL BKCHHO(TAPE,ICERN,IHOML,IMUL,IEX,IDL,I34,IEROR)
         IF (IEROR.NE.0) GO TO 720
         IF (ILABCH.EQ.1.AND.ICERN.EQ.0) GO TO 720
         IF (ILABCH.GT.1.AND.IHOML.NE.ILABCH) GO TO 720
 708     CONTINUE
C For X11 running , check on Phys. Groups :
         IF (IBKINT.EQ.-1.AND.IMCDAT.EQ.1) THEN
            IBRL1=IW(KBSET+JBSEBA)
            IBRL2=IW(KBSET+JBSEBR)
            IF (IBRL1*IBRL2.EQ.0) GO TO 720
            CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
            IF (JBRLI.LE.0) GO TO 730
            IFIK=0
            DO 715 IBR=IBRL1,IBRL2
               IRUC=ITABL(JBRLI,IBR,JBRLRN)
               CALL BKRUOK(IRUC,IPHYS,IOK)
               IF (IOK.EQ.0) THEN
                  IFIK=1
                  GO TO 716
               ENDIF
 715        CONTINUE
 716        IF (IFIK.EQ.0) GO TO 720
         ENDIF
C
         IBPRO=IW(KBSET+JBSEBP)
         IF (IBPRO.LE.0) GO TO 720
         KBPRO=KROW(JBPRO,IBPRO)
         IPRVN=IW(KBPRO+JBPRVN)
         IJULV=IW(KBPRO+JBPRCV)/IFAGA
         IGALV=IW(KBPRO+JBPRCV)-IFAGA*IJULV
C List of JULIA  versions and datasets :
         IF (IJULV.GT.0) THEN
            IF (IPRGVR.LE.0.OR.(IJULV.EQ.IPRGVR)) THEN
               IJUJU=IUCOMP(IJULV,JULISS,NTOJUS)
               IF (IJUJU.EQ.0) THEN
                  NTOJUS=NTOJUS+1
                  JULISS(NTOJUS)=IJULV
                  CALL INTSOR(JULISS,NTOJUS)
                  JULNBS(NTOJUS)=JULNBS(NTOJUS)+1
               ELSE
                  JULNBS(IJUJU)=JULNBS(IJUJU)+1
               ENDIF
            ENDIF
         ENDIF
C List of MINI versions and datasets :
         IF (IDASEL.EQ.5) THEN
            IPRMI=IPRVN/10
            IF (IMINPR.LE.0.OR.(IPRMI.EQ.IMINPR)) THEN
               MINLAS=MAX0(IPRMI,MINLAS)
               IMIMI=IUCOMP(IPRMI,MILISS,NTOMIS)
               IF (IMIMI.EQ.0) THEN
                  NTOMIS=NTOMIS+1
                  MILISS(NTOMIS)=IPRMI
                  CALL INTSOR(MILISS,NTOMIS)
                  MINNBS(NTOMIS)=MINNBS(NTOMIS)+1
               ELSE
                  MINNBS(IMIMI)=MINNBS(IMIMI)+1
               ENDIF
            ENDIF
         ENDIF
C
C If choice is on processing levels , find IPRCV  (Real data only) :
C  IPRCV = processing level , defined as follows
C  1 = Test   2 = Last  3 = Previous  4 = Old  0 = UNKNOWN
C
         IF (IMCDAT.NE.1) GO TO 710
         CALL BKLVPR(KBSET,JBLPR,IPRCV,ICOMP)
         IF (IPRCV.EQ.0) GO TO 710
C fill tables of common /DATPROC/ :
         IDATN=IW(KBSET+JBSEWD)
         NPROCD(IPRCV)=NPROCD(IPRCV)+1
         IFIDAC(IPRCV)=MIN0(IFIDAC(IPRCV),IDATN)
         ILADAC(IPRCV)=MAX0(ILADAC(IPRCV),IDATN)
         IJUVRC(IPRCV)=IJULV
         IF (IDASEL.EQ.5) IMNVRC(IPRCV)=IPRVN/10
         IF (IDASEL.EQ.7) IMNVRC(IPRCV)=IPRVN
         IF (ICOMP.EQ.0) ICOVRC(IPRCV)=2
 710     CONTINUE
C
C Now specific fillings for MCarlo datasets :
C
         IF (IMCDAT.NE.2) GO TO 720
C Special list for X11 running :
         IF (IBKINT.EQ.-1) CALL BKFIDTS(IGALV,IJULV,IPRMI)
C List of GALEPH versions and datasets :
         IF (IGALV.GT.0) THEN
            IF (IGALPR.LE.0.OR.(IGALV.EQ.IGALPR)) THEN
               IGAGA=IUCOMP(IGALV,IGALIS,NTOGAS)
               IF (IGAGA.EQ.0) THEN
                  NTOGAS=NTOGAS+1
                  IGALIS(NTOGAS)=IGALV
                  CALL INTSOR(IGALIS,NTOGAS)
                  IGANBS(NTOGAS)=IGANBS(NTOGAS)+1
               ELSE
                  IGANBS(IGAGA)=IGANBS(IGAGA)+1
               ENDIF
            ENDIF
         ENDIF
C Store all special particle code identifiers , if any :
         IF (IUCOMP(IKOPA,IPARLIS,NTOPARK).EQ.0) THEN
            NTOPARK=NTOPARK+1
            IPARLIS(NTOPARK)=IKOPA
            CALL INTSOR(IPARLIS,NTOPARK)
         ENDIF
 720  CONTINUE
C
 730  CONTINUE
C-----------------------------------------------------------------------
C Now for MCarlo datasets fill the list of KINGAL names :
      IF (IMCDAT.NE.2) GO TO 999
      IF (NTOPARK.GT.0.AND.JBPLI.GT.0) THEN
         DO 750 IPK=1,NTOPARK
            IKOP=IPARLIS(IPK)
            DO 740 IPP=1,LROWS(JBPLI)
               KBPLI=KROW(JBPLI,IPP)
               IF (IKOP.NE.IW(KBPLI+JBPLPC)) GO TO 740
               CALL ALSTIN(IW(KBPLI+JBPLPN),JBPLPC-JBPLPN,PARKODS(IPK))
 740        CONTINUE
 750     CONTINUE
      ENDIF
      GO TO 999
C Problems with BOS banks :
 905  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKEDTA(KBDFS,IEDID)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Finds if an EDIR exists for dataset at adress KBDFS
C J. Boucrot  28-02-1997
C Called from BKFINDTA                           from  BOOKLIB
C Calls  ALSTIN,BKINCA                           from  ALEPHLIB
C Calls  IUCOMP                                  from  GENLIB
C Input argument :
C KBDFS = dataset address in 'BDFS'
C Output argument :
C IEDID = 1 if an EDIR exists; =0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER*8  TAPE
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IEDID=0
      CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
      NR=10*ICHAR(TAPE(1:1)) + ICHAR(TAPE(2:2))
      IFILE=IW(KBDFS+JBDFFN)
      ITAP=IFILE + 1000*BKINCA(TAPE(3:6))
C Find bank 'BTNA' and pointer :
      JBTNA=NLINK('BTNA',NR)
      IF (JBTNA.EQ.0) GO TO 999
      IF (LROWS(JBTNA).LE.0) GO TO 999
      KBTNA=JBTNA+LMHLEN
      IND=IUCOMP(ITAP,IW(KBTNA+1),LROWS(JBTNA))
      IF (IND.GT.0) IEDID=1
 999  RETURN
      END
      SUBROUTINE BKELEP(NRUN,ELEP,IFILL,BMAG,IDET,NEVT,JBRU)
C ----------------------------------------------------------------------
CKEY TOOL/USER
C! Find the LEP energy and other quantities for run NRUN
C  J. Boucrot  05 - Oct - 1989
C Called from several Bookkeeping routines
C Calls BKFPER,BKPOIN                            from  BOOKLIB
C  Input :
C  NRUN  =  Run NUmber
C Output arguments :
C  ELEP  = LEP energy in Gev ( -1. if not known )
C  IFILL = LEP Fill #  ( -1 if not known )
C  BMAG  = Aleph Magnet Field in Kgauss ( -1. if not known)
C  IDET  = Bitmap of Aleph detectors on/off for this run
C  NEVT  = number of events for this run
C  JBRU  = Pointer to adequate info in 'BRUC' , = 0 if run not found
C Used banks :  'BRUC' , in which the ONLINE Logbook content is stored
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      SAVE
      DATA B0 , FCUR0 / 1.5 , 4967.5 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      JBRU=0
      ELEP=-1.
      BMAG=-1.
      IFILL=-1
      IF (NRUN.LE.NRUMIN) GO TO 999
C Find the Bookkeeping period , then the right 'BRUC' bank :
      CALL BKFPER(NRUN,0,NPER)
      IF (NPER.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 999
      IELEP=0
      IRS=0
      DO 25 IS=1,LROWS(JBRUC)
         NRUC=ITABL(JBRUC,IS,JBRURN)
         IF (NRUN.NE.NRUC) GO TO 25
         IRS=IS
         IELEP=ITABL(JBRUC,IS,JBRUTE)
         GO TO 30
 25   CONTINUE
 30   IF (IRS.EQ.0.OR.IELEP.EQ.0) GO TO 999
C
C Run found in 'BRUC' : store the parameters
C
      ELEP=0.001*FLOAT(IELEP)
      IFILL=ITABL(JBRUC,IRS,JBRULF)
      IMAG=ITABL(JBRUC,IRS,JBRUMC)
      IDET=ITABL(JBRUC,IRS,JBRUDC)
      NEVT=ITABL(JBRUC,IRS,JBRUEF)
      IF (NEVT.LE.0) NEVT=ITABL(JBRUC,IRS,JBRUEV)
      BMAG=B0*FLOAT(IMAG)/FCUR0
      JBRU=KROW(JBRUC,IRS)
C
 999  RETURN
      END
      SUBROUTINE BKENJO(IER)
C ----------------------------------------------------------------------
C! Write Bookkeeping banks at end of Production jobs
CKEY ALBOOK END JOB / INTERNAL
C J. Boucrot  25-Jul-1988   modified  03-Nov 1988
C Called from Production jobs
C Calls BKOPEN,BKWRIT                            from  ALEPHLIB
C  All the Bookkeeping banks created during this production job
C  are written on logical unit LBOORL , which is opened in this routine
C Output argument :
C    IER = 0 if all OK  ;   = 1 if output file cannot be opened
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C ----------------------------------------------------------------------
       IER=0
      CALL ACLOSE(0,IERC)
C Check if the 'BOOK' data card was activated
      IF (IW(NAMIND('BOOK')).EQ.0) GO TO 999
C Check if the bookkeeping banks exist
       JBSET=NLINK('BSET',NPERPR)
       IF (JBSET.LE.0) GO TO 999
C
C Open the Bookkeeping output file , give its standard name :
C
       CALL BKOPEN(0,IERR)
       IF (IERR.NE.0) GO TO 999
C
C Write the Bookkeeping banks on unit LBOORL :
C
       CALL BKWRIT
C
 999   RETURN
       END
      SUBROUTINE BKENRU(NEVRW,IER)
C-----------------------------------------------------------------------
C! Stores data for Bookkeeping at each end-of-run
CKEY ALBOOK END RUN / INTERNAL
C Called from production jobs
C Calls ALGTYP,BKBSET,BKBPRO,BKBSPF                     from  ALEPHLIB
C Author : J. Boucrot    15-Nov-1988   modified 9-May-1989
C Input argument :
C     For each output stream K  ( K=1,NFILOU )
C  NEVRW(K)  = Number of events really written for the present run
C              on output stream K .
C Output argument :
C    IER  = 0 if all OK
C         = 1 if  no room to book banks
C-----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- EVEHJJ ----
      PARAMETER(JEVEEN=1,JEVERN=2,JEVERT=3,JEVEDA=4,JEVETI=5,JEVEEV=6,
     +          JEVEM1=7,JEVEM2=8,JEVEM3=9,JEVEM4=10,JEVETY=11,
     +          JEVEES=12,JEVETE=13,LEVEHA=13)
      COMMON / TAPEFIL / IFILTA
      INTEGER NEVRW(*),ALGTYP
      CHARACTER*3 PRN3
      LOGICAL FIRST
      DATA FIRST / .TRUE. /
C-----------------------------------------------------------------------
      IER=0
      IFILTA=0
      IF (NFILOU.LE.0) GO TO 999
C Check if the 'BOOK' data card was activated
      IF (IW(NAMIND('BOOK')).EQ.0) GO TO 999
C
C On first call :
C
      IF (FIRST) THEN
C   check for data cards 'BTOU' or 'BFOU' if the output streams
C   were not defined through AOPENW , and fill / BKFILS / :
         CALL BKFTCA
C   build banks 'BPRO' and 'BSPF' :
         CALL BKBPRO(IER)
         IF (IER.NE.0) GO TO 999
         CALL BKBSPF(IER)
         IF (IER.NE.0) GO TO 999
         FIRST=.FALSE.
      ENDIF
C
C On each call , loop on all output files and build
C all the relevant Bookkeping banks :
C
      NEVT=0
      NAEVE=NLINK('EVEH',0)
      IF (NAEVE.NE.0) NEVT=IW(NAEVE+JEVEEV)
      DO 10 IFIL=1,NFILOU
         NEVRUN(IFIL)=NEVRW(IFIL)
         IF (NEVRW(IFIL).EQ.0) NEVRUN(IFIL)=NEVT
C If Monte-Carlo data processed , give the correct dataset name :
         IF (ALGTYP(I1,I2,I3,I4).NE.0.OR.IW(NAMIND('KJOB')).GT.0) THEN
            DSETNA(IFIL)(1:1)='M'
            DATNAT='M'
         ENDIF
C
C Build banks 'BSET'  ,  ' BTAP'  , 'BRLI' :
C
         IF (NEVRUN(IFIL).GT.0) CALL BKBSET(IFIL,IER)
         IF (IER.NE.0) GO TO 999
 10   CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKERRF(PROG,SUBR,IKOD)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Writes an error file during BOOK/SPLI JOBS  on unit LWRFER
C  ( The Fortran stop code cannot be trapped otherwise by ALUPDATE EXEC
C J. Boucrot  29-09-1992
C  UNIX Version 06-Oct-1995
C Called from BKSPLI or BKSTEE or BKUPDF                   from  BOOKLIB
C Calls VMCMS                                              from  GENLIB
C  Input arguments :
C  PROG  = Program name presently executed
C  SUBR  = name of the calling routine
C  IKOD  = Fortran stop code for the error
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      SAVE
      CHARACTER* (*) PROG,SUBR
      CHARACTER  MSG*100,STMES*72,FIDEF*80,NAMFE*20
      DATA NAMFE / 'filestop.errorfor   ' /
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-----------------------------------------------------------------------
      IF (IBUPDA.EQ.0.AND.IBMAKJ.EQ.0.AND.IBSPLI.EQ.0) GO TO 999
C Open the error file :
      IF (IKOD.EQ.150) GO TO 999
      CALL BOSTA
      FIDEF=' '
      FIDEF=ALS_STAT(1:ILSTAT)//NAMFE(1:LNBLNK(NAMFE))
      FIDEF=FIDEF(1:LNBLNK(FIDEF))
      CALL SYSTEM(' rm -f '//FIDEF)
      OPEN ( LWRFER , FILE = FIDEF , STATUS = 'NEW' , ERR = 999 )
C Write the message lines :
      STMES=' Job '//PROG//' stopped in routine '//SUBR//' with code :'
      WRITE ( LWRFER , 1000 ) STMES
      WRITE ( LWRDBG , 1000 ) STMES
      STMES=' '
      WRITE ( STMES(2:4) , '(I3)' )  IKOD
      WRITE ( LWRFER , 1000 ) STMES
      WRITE ( LWRDBG , 1000 ) STMES
      STMES=' '
      STMES=' Date is : '//CDATIM//' ;  Time is : '//CSETIM
      WRITE ( LWRFER , 1000 ) STMES
      WRITE ( LWRDBG , 1000 ) STMES
C
 999  RETURN
 1000 FORMAT (A72)
      END
      SUBROUTINE BKEXFI(IMODE,VSF,IFIL,IER)
C ----------------------------------------------------------------------
CKEY SCANBOOK TOOLS
C! Fills char. vars of /EXABYT/ from input VSF
C  J. Boucrot 30 - Jul - 1994
C  Completely rewritten 12-Dec-1997 for > 99 files
C Called by many    routines            from BOOKLIB
C Calls BKINCA,BKCARI                   from ALEPHLIB
C Input arguments :
C  IMODE = 1 if VSF name = BDFS convention AXnnnnij   ij = file #
C            ij should be >= 0 but < 100
C  IMODE = 2 if VSF name = FILI convention AXnnnn.ijk ijk = file #
C            ijk is any number between 1 and 999
C  IMODE = 3 if VSF name = VSN , plus IFIL file name given
C            IFIL may be any number between 1 and 999
C  IMODE = 4 if VSF name = OLD EDIR convention AXnnnn_j if 1 < j < 10
C                                              AXnnnn    for file 1
C                                              AXnnnij  if ij >= 10
C  IMODE = 5 if VSF name = NEW EDIR convention:
C                 AXnnnn_ijk ijk = 1,...999
C
C    VSF = volume name, see IMODE
C   IFIL = file # , only if IMODE = 3
C
C Input arguments are transformed to adhoc names in / EXABYTE /
C
C Output :  IER  = 0  all OK
C           IER  = 1  error in input arguments
C ----------------------------------------------------------------------
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      CHARACTER*(*) VSF
      CHARACTER TAP*6,FINU*3,FINN*3,FIRAR*5
      INTEGER BKINCA
C ----------------------------------------------------------------------
C Initialisations :
      IER=0
      IAXFLN=0
      AXBDFS=' '
      AXFILI=' '
      AXEDIR=' '
      FINU=' '
      FINN=' '
      AXEDNW=' '
      CALL CLTOU(VSF)
      LK=LNBLNK(VSF)
      TAP=VSF(1:6)
      AXVSNT=TAP
      IF (IMODE.LE.0.OR.IMODE.GT.5) GO TO 900
      IF (IFIL.GT.0.AND.IMODE.NE.3) GO TO 900
      IF (IMODE.NE.1) GO TO 200
C ----------------------------------------------------------------------
C IMODE = 1 :
      IF (LK.NE.8) GO TO 900
      IAXFLN=BKINCA(VSF(7:8))
      AXBDFS=VSF(1:8)
      IF (IAXFLN.LT.10) CALL BKCARI(IAXFLN,1,FINU(1:1))
      IF (IAXFLN.GE.10) CALL BKCARI(IAXFLN,2,FINU(1:2))
      AXFILI=TAP//'.'//FINU(1:LNBLNK(FINU))
      IF (IAXFLN.LE.1)  AXEDIR=TAP//'  '
      IF (IAXFLN.GT.1.AND.IAXFLN.LT.10)  AXEDIR=TAP//'_'//FINU(1:1)
      IF (IAXFLN.GE.10)  AXEDIR=AXBDFS
      AXEDNW=TAP//'_'//FINU(1:LNBLNK(FINU))
      GO TO 999
C ----------------------------------------------------------------------
C IMODE = 2 :
 200  IF (IMODE.NE.2) GO TO 300
      IF (LK.LT.8.OR.VSF(7:7).NE.'.') GO TO 900
      AXFILI=VSF(1:LK)
      IAXFLN=BKINCA(VSF(8:LK))
      IF (IAXFLN.GT.MAXFI) GO TO 900
      AXBDFS=TAP//'  '
      IF (IAXFLN.LE.MAXBD) THEN
         CALL BKCARI(IAXFLN,2,FINU(1:2))
         AXBDFS=TAP//FINU(1:2)
      ENDIF
      FINN=VSF(8:LK)
      IF (IAXFLN.LE.1.OR.IAXFLN.GT.MAXBD)   AXEDIR=TAP//'  '
      IF (IAXFLN.GT.1.AND.IAXFLN.LT.10)     AXEDIR=TAP//'_'//FINU(2:2)
      IF (IAXFLN.GE.10.AND.IAXFLN.LE.MAXBD) AXEDIR=AXBDFS
      AXEDNW=TAP//'_'//FINN(1:LNBLNK(FINN))
      GO TO 999
C ----------------------------------------------------------------------
C IMODE = 3 :
 300  IF (IMODE.NE.3) GO TO 400
      IF (LK.NE.6) GO TO 900
      IF (IFIL.LE.0.OR.IFIL.GT.MAXFI) GO TO 900
      IAXFLN=IFIL
      IF (IAXFLN.LE.MAXBD) THEN
         CALL BKCARI(IFIL,2,FINN(1:2))
         AXBDFS=TAP//FINN(1:2)
      ELSE
         AXBDFS=TAP//'  '
      ENDIF
      FINU=' '
      CALL BKFIDAR(IAXFLN,FIRAR)
      LFIR=LNBLNK(FIRAR)
      AXFILI=TAP//FIRAR(1:LFIR-1)
      IF (IAXFLN.GT.1.AND.IAXFLN.LT.10)  AXEDIR=TAP//'_'//FIRAR(2:2)
      IF (IAXFLN.LE.1.OR.IAXFLN.GE.10)   AXEDIR=AXBDFS
      AXEDNW=AXFILI
      AXEDNW(7:7)='_'
      GO TO 999
C ----------------------------------------------------------------------
C IMODE = 4 :
 400  IF (IMODE.NE.4) GO TO 500
      AXEDIR=VSF(1:8)
      IF (VSF(7:8).EQ.'  '.OR.VSF(7:7).EQ.'.') THEN
         FINU(1:1)='1'
         IAXFLN=1
      ELSE IF (VSF(7:7).EQ.'_') THEN
         FINU(1:1)=VSF(8:8)
         IAXFLN=BKINCA(VSF(8:8))
      ELSE
         FINU(1:2)=VSF(7:8)
         IAXFLN=BKINCA(VSF(7:8))
      ENDIF
      AXFILI=VSF(1:6)//'.'//FINU(1:LNBLNK(FINU))
      CALL BKCARI(IAXFLN,2,FINN(1:2))
      AXBDFS=VSF(1:6)//FINN(1:2)
      AXEDNW=TAP//'_'//FINU(1:LNBLNK(FINU))
      GO TO 999
C ----------------------------------------------------------------------
C IMODE = 5 :
 500  IF (IMODE.NE.5) GO TO 900
      IUND=INDEX(VSF,'_')
      IF (IUND.EQ.0) GO TO 900
      LL=LK
      LD=INDEX(VSF,'.')
      IF (LD.GT.0) LL=LD-1
      FINN=VSF(IUND+1:LL)
      IAXFLN=BKINCA(FINN)
      IF (IAXFLN.GT.MAXFI) GO TO 900
      AXFILI=TAP//'.'//FINN(1:LNBLNK(FINN))
      IF (IAXFLN.LE.MAXBD) THEN
         CALL BKCARI(IAXFLN,2,FINU(1:2))
         AXBDFS=TAP//FINU(1:2)
      ELSE
         AXBDFS=TAP//'  '
      ENDIF
      IF (IAXFLN.LE.1.OR.IAXFLN.GT.MAXBD) AXEDIR=TAP//'  '
      IF (IAXFLN.GT.1.AND.IAXFLN.LT.10)   AXEDIR=TAP//'_'//FINU(1:1)
      IF (IAXFLN.GE.10.AND.IAXFLN.LE.MAXBD) AXEDIR=AXBDFS
      AXEDNW=VSF(1:LK)
      GO TO 999
C Error in input arguments :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKFDAB(NRUN,NPER,NR,NAMB,IER)
C-----------------------------------------------------------------------
CKEY Tools
C! Finds the database corresponding to a given run
C  J. Boucrot              13-Feb-1992
C Called from USER
C Calls BKFPER,BKNPDB                           from BOOKLIB
C  Input arguments :
C    NRUN   =  Run number ( for real data only )
C    NPER   =  Period number ; if = 0 , will be computed from NRUN
C  Output arguments :
C   NAMB  = Database name  ; blank if not found
C   NR    = Database number ;  = -1 if not found
C   IER   = 0 if all OK
C         = 1 if NO Database found
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER*8  NAMB
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      NAMB=' '
      IER=0
      NR=-1
C MCarlo data :
      IF (IMCDAT.EQ.2) THEN
         NR=NDBTOT
         GO TO 110
      ENDIF
C REAL  data :
      IER=1
      IF (NPER.GT.0) THEN
         NPERO=NPER
         GO TO 90
      ENDIF
      CALL BKFPER(NRUN,0,NPERO)
 90   IF (NPERO.LE.0) GO TO 999
      CALL BKNPDB(NPERO,NR)
 110  IF (NR.LE.0) GO TO 999
      NAMB=PERDBS(NR)
      IER=0
 999  RETURN
      END
      SUBROUTINE BKFIDAR(NPOS,FIRAR)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Codes the file number of a RAW data DLT
C  J. Boucrot  10 Oct-1996
C  Called from PRBFIL or BKFIRAR                   from BOOKLIB
C  Calls BKCARI                                    from ALEPHLIB
C Input argument :
C   NPOS = file number in dataset
C  Output argument :
C  FIRAR = file number marker to be put in FILI card
C          e.g.   .23.   for file 23 or  .111. for file 111
C-----------------------------------------------------------------------
      CHARACTER FIRAR*5,FI1*1,FI2*2,FI3*3
C-----------------------------------------------------------------------
      FIRAR='.    '
      IF (NPOS.LE.0.OR.NPOS.GT.999) GO TO 999
      IF (NPOS.LT.10) THEN
         CALL BKCARI(NPOS,1,FI1)
         FIRAR(2:2)=FI1
      ELSE IF (NPOS.GE.10.AND.NPOS.LT.100) THEN
         CALL BKCARI(NPOS,2,FI2)
         FIRAR(2:3)=FI2
      ELSE
         CALL BKCARI(NPOS,3,FI3)
         FIRAR(2:4)=FI3
      ENDIF
      LL=LNBLNK(FIRAR)
      FIRAR(LL+1:LL+1)='.'
 999  RETURN
      END
      SUBROUTINE BKFIDTS(IGALV,IJULV,IMINV)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Fills special GALEPH/JULIA/MINI versions for X11
C  J. Boucrot 28-Oct-1996
C  Called from BKDVER                            from BOOKLIB
C Input  arguments :
C IGALV = GALEPH version number of present dataset
C IJULV = JULIA  version number of present dataset
C IMINV = MINI   version number of present dataset, if any
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
      IF (NTODTS.EQ.0) GO TO 600
C
      DO 500 IK=1,NTODTS
         NOK=0
         IF (NUMDTS(1,IK).EQ.IGALV) NOK=NOK+1
         IF (NUMDTS(2,IK).EQ.IJULV) NOK=NOK+1
         IF (IDASEL.EQ.5.AND.NUMDTS(3,IK).EQ.IMINV) NOK=NOK+1
         IF ((IDASEL.EQ.5.AND.NOK.EQ.3).OR.(IDASEL.LE.3.AND.NOK.EQ.2))
     +      THEN
            NUMDTS(4,IK)=NUMDTS(4,IK)+1
            GO TO 999
         ENDIF
 500  CONTINUE
C
C One has to Fill a new line :
 600  IF (NTODTS.GE.NVERS) GO TO 999
      NTODTS=NTODTS+1
      NUMDTS(1,NTODTS)=IGALV
      NUMDTS(2,NTODTS)=IJULV
      IF (IDASEL.EQ.5) NUMDTS(3,NTODTS)=IMINV
      NUMDTS(4,NTODTS)=NUMDTS(4,NTODTS)+1
999   RETURN
      END
      SUBROUTINE BKFILB(NAME,NPER,ITAB,LENRO,NROW,IER)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Adds information to an existing Bookkeeping bank
C  J. Boucrot  23 - Mar - 1989
C Called from BKBOKD , or from USER
C Calls AUBOS                                      from ALEPHLIB
C Calls BKPOIN                                     from BOOKLIB
C  Input arguments :
C  NAME , NPER = Name and period # of the Bookkeeping bank
C    ITAB      = list of values to be added as a new row
C    LENRO     = length of one row in this bank
C  Ouput arguments :
C    NROW      = row # onto which the information has been copied
C    IER       = 0 if all OK
C              = 1 if a garbage collection occured in AUBOS
C              = 2 if no room to book/enlarge the bank
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
      INTEGER ITAB(*)
      CHARACTER*4 NAME
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NROW=0
C
C Test if the bank exists ; if not book it ; if no room left ,
C enlarge it by creating NBROW new free rows :
C
      CALL BKPOIN(0,NAME,NPER,JBANK)
      IF (JBANK.LE.0) THEN
         LENB=LENRO*NBROW+LMHLEN
         IOLRO=0
      ELSE
         IOLRO=LROWS(JBANK)
         IF (LFRROW(JBANK).GT.1) GO TO 10
         LENB=IW(JBANK)+LENRO*NBROW
      ENDIF
C Book or enlarge 'NAME' if needed :
      CALL AUBOS(NAME,NPER,LENB,JBANK,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IER=IGARB
      IW(JBANK+LMHCOL)=LENRO
      IW(JBANK+LMHROW)=IOLRO
C
 10   CONTINUE
C Now transfer the information from ITAB to the bank :
      KBANK=KNEXT(JBANK)
      CALL UCOPY(ITAB(1),IW(KBANK+1),LENRO)
      NROW=IOLRO+1
      IW(JBANK+LMHROW)=NROW
      GO TO 999
C
C No room to book/enlarge the bank :
C
 900  IER=2
C
 999  RETURN
      END
      SUBROUTINE BKFILL(NAME,NPER,VARCH,ITAB)
C ----------------------------------------------------------------------
C! Fills the databook bank with name 'NAME'
CKEY ALBOOK BANK FILL / INTERNAL
C  E. Locci  -   J. Boucrot       25-Jul -1988
C Called from USER
C Calls BKCHIN                                     from ALEPHLIB
C Input arguments :
C  NAME = 4-character name of the bank
C  NPER = "Period number"
C VARCH = Input character elements of the bank
C  ITAB = Input integer elements of the bank ( must be put at the locati
C         defined by the HAC common / NAMEJJ / by the calling routine )
C ----------------------------------------------------------------------
       SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
       COMMON / BKWORK / JCBDES
       EXTERNAL NLINK
       CHARACTER* (*) VARCH(*)
       CHARACTER*4 NAME
       INTEGER ITAB(*),ITBLO(MAXCH)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
       DO 1 IL=1,MAXCH
 1     ITBLO(IL)=0
       IF (JCBDES.EQ.0) GO TO 999
       INAM=INTCHA(NAME)
C For banks which contain integer representation of character variables
C Find the row # of the description of bank NAME in work bank JCBDES
       ILOC=1
       NRRDS=LROWS(JCBDES)
       DO 10 IR=1,NRRDS
          IF (ITABL(JCBDES,IR,JBDEBN).EQ.INAM) GO TO 20
          ILOC=ILOC+1
 10    CONTINUE
 20    CONTINUE
       IF (ILOC.GT.NRRDS) GO TO 50
C
C Transform the character variables into their integer representation
C in the appropriate locations of the buffer ITAB
C
       NUMCH=ITABL(JCBDES,ILOC,JBDENC)
       IF (NUMCH.LE.0.OR.VARCH(1).EQ.' ')  GO TO 50
       ITLCH=KROW(JCBDES,ILOC)+JBDELS
       CALL UCOPY(IW(ITLCH),ITBLO(1),NUMCH)
       CALL BKCHIN(VARCH,NUMCH-1,ITBLO,ITAB)
C
C Fill a new row in the bank :
C
 50    CONTINUE
C
         JNAME=NLINK(NAME,NPER)
         IF (JNAME.EQ.0) GO TO 999
         IF (LFRROW(JNAME).LT.1) GO TO 999
C
         LENRO=LCOLS(JNAME)
         IOLRO=LROWS(JNAME)
C
C Fill the new row
         KNAME=KNEXT(JNAME)
         CALL UCOPY(ITAB,IW(KNAME+1),LENRO)
         IW(JNAME+LMHROW)=1+IOLRO
C
 999     RETURN
         END
      SUBROUTINE BKFINDAA(NFOUN,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Find datasets on AA RAWs from Selection keywords
C   Author   J. Boucrot   01-OCT-1997
C Called from BKFINDTA                          from  BOOKLIB
C Calls BKFPER,BKTLEP,BKRUOK,BKSTORUN,PRWARNX11 from  BOOKLIB
C   All input selection keywords are in / BKKEYS /
C   and have been filled during the job initialisation
C  Output arguments :
C  NFOUN   =  Number of datasets found matching the requests
C    IER   =  1 if too many datasets found
C          =  0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      CHARACTER TEXT*80
C Common to communicate the results to the printout routine
      PARAMETER (NAAMX = 4000)
      COMMON / IAALIS /  IAACUR,LAAPER(NAAMX),LAAROW(NAAMX)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NFOUN=0
C Quit if homelab is not CERN:
      IF (IDASEL.NE.2.OR.ILABCH.NE.1) GO TO 999
      IF (IRAWAA.NE.1) GO TO 999
      CALL VZERO(LAAPER,NAAMX)
      CALL VZERO(LAAROW,NAAMX)
C Find periods of data taking:
      CALL BKFPERD(NPMIN,NPMAX,IERD)
      IF (IERD.NE.0) GO TO 999
      TOLER=0.001*FLOAT(ITOLER)
      IF (IDSEAR.NE.5.AND.IBKINT.EQ.2) WRITE (LWRINT,1021)
C
C Loop on all periodS NPER :
C
      DO 500 NPER=NPMIN,NPMAX
         JBRUC=NLINK('BRUC',NPER)
         IF (JBRUC.LE.0) GO TO 500
         DO 400 IBRUC=1,LROWS(JBRUC)
            KBRUC=KROW(JBRUC,IBRUC)
            IRUN=IW(KBRUC+JBRURN)
            IF (IRUN.LT.ISRUNF) GO TO 400
            IF (IRUN.GT.ISRUNL) GO TO 400
C Run must be OK w.r.t Run_Quality selections:
            CALL BKRUOK(IRUN,IPHYS,IOK)
            IF (IOK.NE.0) GO TO 400
C If selection on LEP energy, the energy must be OK:
            IF (ENGLEP.GT.0.) THEN
               CALL BKTLEP(IRUN,ENGLEP,TOLER,ILOK)
               IF (ILOK.NE.0) GO TO 400
            ENDIF
C If selection on date of data taking, check it:
            IF (ISDATE.GT.0) THEN
               IRAWD=IW(KBRUC+JBRUWD)
               IF (IRAWD.LT.ISDATE) GO TO 400
               IDAL=IABS(ISDATL)
               IF (IDAL.GT.0.AND.IRAWD.GT.IDAL) GO TO 400
            ENDIF
C This dataset is OK: store it
            CALL BKSTORUN(0,IRUN,IERU)
            IF (IERU.NE.0) GO TO 995
            LAAPER(NTOTRUNS)=NPER
            LAAROW(NTOTRUNS)=IBRUC
 400     CONTINUE
 500  CONTINUE
C-----------------------------------------------------------------------
C End , error codes
 800  NFOUN=NTOTRUNS
      NDATFOUN=NTOTRUNS
      GO TO 999
C Too many cartridges found :
 995  IER=1
      WRITE ( LWRUSR,1040) NDATFOUN
      TEXT=' Warning !! Too many TAPEs found ! '
      CALL PRWARNX11(TEXT)
C
 999  RETURN
 1021 FORMAT (' ---  Search for AA tapes in the SCANBOOK database..')
 1040 FORMAT (/5X,'** BKFINDTA ** Too many cartridges found :',I8)
      END
      SUBROUTINE BKFINDAR(NFOUN,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Find datasets on AR copies of AA LEP1 RAWs
C   Author   J. Boucrot   01-OCT-1997
C Called from BKFINDTA                          from  BOOKLIB
C Calls BKFPER,BKTLEP,BKRUOK,BKSTORUN           from  BOOKLIB
C Calls BKELEP,GETLOCNUM,PRWARNX11              from  BOOKLIB
C   All input selection keywords are in / BKKEYS /
C   and have been filled during the job initialisation
C  Output arguments :
C  NFOUN   =  Number of datasets found matching the requests
C    IER   =  1 if too many datasets found
C          =  0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRDLJJ ----
      PARAMETER(JBRDTC=1,JBRDLO=3,JBRDFN=4,JBRDRN=5,LBRDLA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      CHARACTER TEXT*80,TLOC*4,CHAINT*4
C Common to communicate the results to the printout routine
      PARAMETER (NAARX = 4000)
      COMMON / IARLIS /  IARCUR,LARROW(NAARX)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NFOUN=0
C Quit if homelab is not CERN or FLORIDA:
      IF (IDASEL.NE.2.OR.IRAWD2.NE.1) GO TO 999
      IF (ILABCH.GT.2.AND.ILABCH.NE.6) GO TO 999
C Year of data taking must be 1994 or less :
      IF (ISYEAR.GT.1994) GO TO 999
      CALL VZERO(LARROW,NAARX)
      TOLER=0.001*FLOAT(ITOLER)
      IF (IDSEAR.NE.5.AND.IBKINT.EQ.2) WRITE (LWRINT,1021)
C
C Loop on all rows of  bank 'BRDL',NR=ISYEAR
C
      JBRDL=NLINK('BRDL',ISYEAR)
      IF (JBRDL.LE.0) GO TO 999
      DO 400 IBRDL=1,LROWS(JBRDL)
         KBRDL=KROW(JBRDL,IBRDL)
C Run must be OK w.r.t Run_Quality selections:
         IRUN=IW(KBRDL+JBRDRN)
         IF (IRUN.LT.ISRUNF) GO TO 400
         IF (IRUN.GT.ISRUNL) GO TO 400
         CALL BKRUOK(IRUN,IPHYS,IOK)
         IF (IOK.NE.0) GO TO 400
C The Homelab must be the right one:
         TLOC=CHAINT(IW(KBRDL+JBRDLO))
         CALL GETLOCNUM(TLOC,ILOC)
         IF (ILOC.NE.ILABCH) GO TO 400
C If selection on LEP energy, the energy must be OK:
         IF (ENGLEP.GT.0.) THEN
            CALL BKTLEP(IRUN,ENGLEP,TOLER,ILOK)
            IF (ILOK.NE.0) GO TO 400
         ENDIF
C If selection on date of data taking, check it:
         IF (ISDATE.GT.0) THEN
            CALL BKELEP(IRUN,ELEP,IFIL,BM,IDE,NEV,KBRUC)
            IF (KBRUC.LE.0) GO TO 400
            IRAWD=IW(KBRUC+JBRUWD)
            IF (IRAWD.LT.ISDATE) GO TO 400
            IDAL=IABS(ISDATL)
            IF (IDAL.GT.0.AND.IRAWD.GT.IDAL) GO TO 400
         ENDIF
C This dataset is OK: store it
         CALL BKSTORUN(0,IRUN,IERU)
         IF (IERU.NE.0) GO TO 995
         LARROW(NTOTRUNS)=IBRDL
 400  CONTINUE
C-----------------------------------------------------------------------
C End , error codes
 800  NFOUN=NTOTRUNS
      NDATFOUN=NTOTRUNS
      GO TO 999
C Too many cartridges found :
 995  IER=1
      WRITE ( LWRUSR,1040) NDATFOUN
      TEXT=' Warning !! Too many TAPEs found ! '
      CALL PRWARNX11(TEXT)
C
 999  RETURN
 1021 FORMAT (' --- Search for AR DLT copies in the SCANBOOK database')
 1040 FORMAT (/5X,'** BKFINDAR ** Too many DLT copies found :',I8)
      END
      SUBROUTINE BKFINDED(NFOUN,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Find EDIRs of Cartridges
C  Author  J. Boucrot 02-Oct-1996
C Called from PRDSET
C Calls  PRVXLI,BKCHKT,PRWARNX11           from BOOKLIB
C Output arguments:
C   NFOUN = number of files found
C     IER = 0  :  all OK
C         = 1  :  too many datasets found
C         = 2  :  List of EDIRs not found
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      PARAMETER ( NCATF = 3 )
      CHARACTER*2 CHKL(NCATF)
      INTEGER BKINCA
      CHARACTER BLAF*80,BLAFU*80,DISKU*30,TAPNA*8,TEXT*80
      DATA CHKL / 'P0' , 'D0' , 'M0' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      NFOUN=0
      IER=0
      IROK=0
      IF (IMCDAT.EQ.1.AND.IDASEL.EQ.2) GO TO 999
      IF (IWFILI.NE.2) GO TO 999
C OPEN and READ the List of EDirs :
      IPSVX=1
 10   BLAF=' '
      DISKU=' '
      CALL PRVXLI(IPSVX,DISKU,BLAF,IERP)
      IROK=IROK+1
      IF (IERP.EQ.2) GO TO 920
      IF (IERP.EQ.1) GO TO 800
      IPSVX=IPSVX+1
      BLAFU = BLAF
      CALL CLTOU(BLAFU)
C-----------------------------------------------------------------------
C Check the information found .
      IF (MOD(IROK,1000).EQ.0.AND.IBKINT.EQ.2) PRINT 1032,IROK
      IEDIR=0
      ITAFI=0
      IOK=0
C Is it a Run file or the EDIR of a Run File ?
      IF (IMCDAT.EQ.2) GO TO 70
      DO 15 II=1,NCATF
         IF (SELDAT.EQ.' '. OR.SELDAT.EQ.'A') GO TO 13
         IF (INDEX(SELDAT,CHKL(II)(1:1)).EQ.0) GO TO 15
 13      IF (BLAFU(1:2).NE.CHKL(II)) GO TO 15
         IOK=II
         GO TO 20
 15   CONTINUE
C This is a Run File , or the EDIR of a Run File : NOT kept
 20   IF (IOK.GT.0) GO TO 10
C-----------------------------------------------------------------------
C The present file corresponds to a Cartridge Edir :
C
 70   TAPNA=' '
      TAPNA(1:6)=BLAFU(1:6)
      CALL BKCHKT(TAPNA,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0) GO TO 10
C Extract tape name and file #:
      IEDIR=INDEX(BLAFU(1:17),'.EDIR')
      IF (IEDIR.EQ.0) GO TO 10
      IFILE=1
      IUND=INDEX(BLAFU(1:IEDIR-1),'_')
      IF (IUND.GT.0) IFILE=BKINCA(BLAFU(IUND+1:IEDIR-1))
C Store tape name and file in a coded way in temporary bank 'BTNA':
      CALL BKSTEDNA(TAPNA(1:6),IFILE,IER)
      IF (IER.NE.0) GO TO 995
      GO TO 10
C-----------------------------------------------------------------------
C End , error codes
 800  NFOUN=NDATFOUN
      IF (IBKINT.EQ.2) WRITE (LWRINT,1022)
      GO TO 999
C No room for the LISTFILE , or missing LISTFILE :
 920  IER=2
      GO TO 999
C Too many files found :
 995  IER=1
      WRITE ( LWRUSR,1040) NTODT
      TEXT=' Warning !! Too many EDIRs found ! '
      CALL PRWARNX11(TEXT)
 999  CONTINUE
      RETURN
C----------------------------------------------------------------------
 1022 FORMAT (' ---      All Edir files processed ...')
 1032 FORMAT (15X,I7,'  Edir files processed ')
 1040 FORMAT (/5X,'** BKFINDED ** Too many EDIRs found :',I8)
      END
      SUBROUTINE BKFINDFI(IOPT,NFOUN,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Find Run files or EDIRs of RUN files
C  Author  J. Boucrot 01-Oct-1996
C Called from PROPT2 or DISPOTS                  from BOOKLIB
C Calls PRVXLI,BKTLEP,BKRUOK,BKSTODAT,BKSTORUN   from BOOKLIB
C Calls BKINCA                                   from ALEPHLIB
C Input argument :
C   IOPT  = 1 for standard call from PROPT2 ,
C         = 2 for call from DISPOTS for X11
C Output arguments:
C   NFOUN = number of files found
C     IER = 0  :  all OK
C         = 1  :  too many files found
C         = 2  :  LISTFILE not found
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
      PARAMETER ( NCATF = 3 )
      CHARACTER*2 CHKL(NCATF)
      INTEGER BKINCA
      CHARACTER BLAF*80,BLAFU*80,DISKU*30
      DATA CHKL / 'P0' , 'D0' , 'M0' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      NFOUN=0
      IER=0
      IROK=0
      IFIL2=0
      IF (IMCDAT.EQ.2.OR.IDSEAR.NE.2) GO TO 999
      TOLER=0.001*FLOAT(ITOLER)
      ILARU=0
      JBLAS=NLINK('BLAS',1)
      IF (JBLAS.GT.0) ILARU=ITABL(JBLAS,1,JBLALO)
C OPEN and READ the List of Files :
      IPSVX=1
 10   BLAF=' '
      DISKU=' '
      CALL PRVXLI(IPSVX,DISKU,BLAF,IERP)
      IROK=IROK+1
      IF (IERP.EQ.2) GO TO 920
      IF (IERP.EQ.1) GO TO 800
      IPSVX=IPSVX+1
      BLAFU = BLAF
      CALL CLTOU(BLAFU)
C-----------------------------------------------------------------------
C Check the information found .
      IF (MOD(IROK,1000).EQ.0.AND.IBKINT.EQ.2) PRINT 1032,IROK
      IEDIR=0
      IRUFI=0
      IOK=0
C Is it a Run file or the EDIR of a Run File ?
      DO 15 II=1,NCATF
         IF (SELDAT.EQ.' '. OR.SELDAT.EQ.'A') GO TO 13
         IF (INDEX(SELDAT,CHKL(II)(1:1)).EQ.0) GO TO 15
 13      IF (BLAFU(1:2).NE.CHKL(II)) GO TO 15
         IOK=II
         NADASO=IOK+1
         GO TO 20
 15   CONTINUE
 20   IF (IOK.EQ.0) GO TO 10
C This is a Run File , or the EDIR of a Run File :
      IF (INDEX(BLAFU(1:17),'EDIR').NE.0) THEN
         IEDIR=1
         IRUFI=1
      ELSE
C file OK . Must be EPIO or NATIVE :
         IF (INDEX(BLAFU(1:17),'EPIO').NE.0) THEN
            IF (SELFOR(1:1).EQ.'N') GO TO 10
            IRUFI=1
         ENDIF
         IF (INDEX(BLAFU(1:17),'NAT').NE.0) THEN
            IF (SELFOR(1:1).EQ.'E') GO TO 10
            IRUFI=1
         ENDIF
         IF (INDEX(BLAFU(1:17),'DAT').NE.0) IRUFI=1
      ENDIF
 30   IF (IEDIR+IRUFI.GT.0) GO TO 35
      GO TO 10
C
C Is it OK w.r.t. user's selections ?
C
C Nature of data :
 35   IF (SELCAT.EQ.' '.OR.SELCAT.EQ.'A') GO TO 40
      IF (INDEX(SELCAT,BLAFU(1:1)).EQ.0) GO TO 10
C Run :
 40   NRUF=BKINCA(BLAFU(2:8))
C Don't check very recent runs not yet in 'BRUC' banks:
      IF (ILARU.GT.0.AND.NRUF.GT.ILARU) GO TO 50
      CALL BKRUOK(NRUF,IPHY,IOK)
      IF (IOK.NE.0) GO TO 10
C Check if run files have the correct syntax :
      IF (BLAFU(2:3).NE.'00') GO TO 10
C Check LEP Energy :
      IF (ENGLEP.LT.0.) GO TO 50
      CALL BKTLEP(NRUF,ENGLEP,TOLER,IOK)
      IF (IOK.EQ.0) GO TO 10
 50   CONTINUE
C Store the run in / DATAFOUN /
      IF (IOPT.EQ.2) THEN
         IFIL2=IFIL2+1
         GO TO 10
      ENDIF
      CALL BKSTODAT(0,NRUF,IEDIR,IERD)
      IF (IERD.GT.0) GO TO 995
      CALL BKSTORUN(0,NRUF,IERR)
      IF (IERR.GT.0) GO TO 995
      GO TO 10
C-----------------------------------------------------------------------
C End , error codes
 800  IF (IOPT.EQ.1) NFOUN=NDATFOUN
      IF (IOPT.EQ.2) NFOUN=IFIL2
      IF (IBKINT.EQ.2) WRITE (LWRINT,1022)
      GO TO 999
C No room for the LISTFILE , or missing LISTFILE :
 920  IER=2
      GO TO 999
C Too many files found :
 995  IER=1
 999  CONTINUE
      CLOSE ( LECTXT )
      RETURN
C----------------------------------------------------------------------
 1022 FORMAT (' ---      All Disk files processed ...')
 1032 FORMAT (15X,I7,'  files processed ')
C
      END
      SUBROUTINE BKFINDTA(NFOUN,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Find datasets on Cartridges from Selection keywords
C   Author   J. Boucrot   02-OCT-1996
C Called from PRDSET                           from  BOOKLIB
C Calls BKFINDAA,BKFINDAR,BKTALO,BKCHKD        from  BOOKLIB
C Calls BKCLBTNA,BKEDTA,BKSTODAT,PRWARNX11     from  BOOKLIB
C Calls ALSTIN                                 from  ALEPHLIB
C Calls IUCOMP                                 from  GENLIB
C   All input selection keywords are in / BKKEYS /
C   and have been filled during the job initialisation
C  Output arguments :
C  NFOUN   =  Number of datasets found matching the requests
C    IER   =  1 if too many datasets found
C          =  0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      CHARACTER TAPL*8,TAPE*8,TEXT*80
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NFOUN=0
C Special search for 'AA' tApe RAW datasets of LEP1 :
      IF (IDASEL.EQ.2.AND.IRAWAA.EQ.1) THEN
         CALL BKFINDAA(NFOUN,IERA)
         IF (IERA.NE.0) GO TO 995
         GO TO 999
      ENDIF
C Special search for RAW datasets of 1994 and before copied on DLTs :
      IF (IDASEL.EQ.2.AND.IRAWD2.EQ.1) THEN
         CALL BKFINDAR(NFOUN,IERR)
         IF (IERR.NE.0) GO TO 995
         GO TO 999
      ENDIF
C Loop on all the datasets of period NPER :
C
      JBDFS=NLINK('BDFS',IMCDAT)
      IF (JBDFS.EQ.0) GO TO 999
      NSETS=LROWS(JBDFS)
      IF (NSETS.EQ.0) GO TO 999
      IF (NLDSET.GT.NSETS) NLDSET=NSETS
      IF (IDSEAR.NE.5.AND.IBKINT.EQ.2)  WRITE (LWRINT,1021)
C
      NFDD=NFDSET
      NLDD=NLDSET
      IF (IDSEAR.EQ.5.AND.NTAPKY.EQ.1.AND.NB1TAP.GT.0) THEN
         NFDD=NB1TAP
         NLDD=NB1TAP
      ENDIF
C
      DO 500 IBDFS=NFDD,NLDD
C Do not consider datasets already found with an EDIR :
         IND=IUCOMP(IBDFS,IBDSEL,NTOTFOUN)
         IF (IND.NE.0) GO TO 500
         KBDFS=KROW(JBDFS,IBDFS)
C do not consider scratched datasets :
         IF (IW(KBDFS+JBDFDF).NE.0) GO TO 500
C Check if location of tape matches the Homelab :
         IF (ILABCH.GT.0) THEN
            CALL BKTALO(' ',IBDFS,TAPL,ILAB)
            IF (ILAB.NE.ILABCH) GO TO 500
         ENDIF
C Call the search routine in turn for each dataset :
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
C For 1995 and after, never take the DLT copies of RAWs:
         if (irawd1.eq.1.and.idasel.eq.1.and.ilabch.eq.1) then
             IF (TAPE(1:2).EQ.'AR'.AND.IW(KBDFS+JBDFCO).EQ.1) GO TO 500
          ENDIF
         CALL BKCHKD(TAPE,NPER,NROW,NRUF,NRUL)
         IF (NRUF.LE.0) GO TO 500
C-----------------------------------------------------------------------
C Store the informations in / DATAFOUN /
         IF (IWFILI.EQ.2) CALL BKCLBTNA
         IEDID=0
         IF (IWFILI.EQ.2) CALL BKEDTA(KBDFS,IEDID)
         CALL BKSTODAT(IBDFS,NRUF,IEDID,IERD)
         IF (IERD.NE.0) GO TO 995
 500  CONTINUE
C-----------------------------------------------------------------------
C End , error codes
 800  NFOUN=NDATFOUN
      GO TO 999
C Too many cartridges found :
 995  IER=1
      WRITE ( LWRUSR,1040) NDATFOUN
      TEXT=' Warning !! Too many EDIRs found ! '
      CALL PRWARNX11(TEXT)
C
 999  RETURN
 1021 FORMAT (' ---  Search for Cartridges in the SCANBOOK database..')
 1040 FORMAT (/5X,'** BKFINDTA ** Too many cartridges found :',I8)
      END
      SUBROUTINE BKFIRAA(TAPAA,ILOC,TLABL,RUNR)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Auxiliary to PRBFIL fors AA RAW Data of 1991-1994
C   Author   J. Boucrot   01-OCT-1997
C Called from PRBFIL                            from  BOOKLIB
C Calls ALSTIN,BKCARI                           from  ALEPHLIB
C   All selected datasets are in / IAALIS /
C   and have been filled during the dataset search
C  Output arguments:
C TAPAR = tape name (6 Chars)
C  ILOC = location, =0 if Archived
C TLABL = tape label
C  RUNR = run number coded on 6 digits
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      CHARACTER TAPE*8,TAPAA*6,TLABL*1,RUNR*6
C Common to communicate the results to the printout routine
      PARAMETER (NAAMX = 4000)
      COMMON / IAALIS /  IAACUR,LAAPER(NAAMX),LAAROW(NAAMX)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      ILOC=0
      IF (NTOTRUNS.LE.0.OR.IAACUR.LE.0) GO TO 999
      JBRUC=NLINK('BRUC',LAAPER(IAACUR))
      IF (JBRUC.LE.0) GO TO 999
      IF (LAAROW(IAACUR).GT.LROWS(JBRUC)) GO TO 999
      KBRUC=KROW(JBRUC,LAAROW(IAACUR))
C Get quantities from bank 'BRUC':
      IRUN=IW(KBRUC+JBRURN)
      CALL ALSTIN(IW(KBRUC+JBRUVS),2,TAPE)
      TAPAA=TAPE(1:6)
      ILOL=NINT(RW(KBRUC+JBRUVL))
      IF (ILOL.EQ.18.OR.ILOL.LE.0) GO TO 999
      ILOC=ILOL
      TLABL='A'
      CALL BKCARI(IRUN,6,RUNR)
C
 999  RETURN
      END
      SUBROUTINE BKFIRAR(TAPAR,ILOC,TLABL,RUNR,FIRAR)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Auxiliary to PRBFIL fors AR DLTs copies of RAW Data of 1991-1994
C   Author   J. Boucrot   01-OCT-1997
C Called from PRBFIL                            from  BOOKLIB
C Calls BKFIDAR,GETLOCNUM                       from  BOOKLIB
C Calls ALSTIN,BKCARI                           from  ALEPHLIB
C   All selected datasets are in / IARLIS /
C   and have been filled during the dataset search
C  Output arguments:
C TAPAR = tape name (6 Chars)
C  ILOC = location, =0 if Archived
C TLABL = tape label
C  RUNR = run number coded on 6 digits
C FIRAR = file number code
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRDLJJ ----
      PARAMETER(JBRDTC=1,JBRDLO=3,JBRDFN=4,JBRDRN=5,LBRDLA=5)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      CHARACTER TAPE*8,TAPAR*6,TLABL*1,RUNR*6,FIRAR*5,TLOC*4,CHAINT*4
C Common to communicate the results to the printout routine
      PARAMETER (NAAMX = 4000)
      COMMON / IARLIS /  IARCUR,LARROW(NAAMX)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      ILOC=0
      IF (NTOTRUNS.LE.0.OR.IARCUR.LE.0) GO TO 999
      JBRDL=NLINK('BRDL',ISYEAR)
      IF (JBRDL.LE.0) GO TO 999
      IF (LARROW(IARCUR).GT.LROWS(JBRDL)) GO TO 999
C Get quantities from present dataset :
      KBRDL=KROW(JBRDL,LARROW(IARCUR))
C Get quantities from bank 'BRDL':
      IRUN=IW(KBRDL+JBRDRN)
      CALL ALSTIN(IW(KBRDL+JBRDTC),2,TAPE)
      TAPAR=TAPE(1:6)
      IFILE=IW(KBRDL+JBRDFN)
      TLOC=CHAINT(IW(KBRDL+JBRDLO))
      CALL GETLOCNUM(TLOC,ILOL)
      IF (ILOL.EQ.18.OR.ILOL.LE.0) GO TO 999
      ILOC=ILOL
      TLABL='A'
      CALL BKCARI(IRUN,6,RUNR)
      CALL BKFIDAR(IFILE,FIRAR)
C
 999  RETURN
      END
      SUBROUTINE BKFIROU
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Sets variables IWFILI and IPSROU from IDSEAR
C J. Boucrot  30-09-1996
C Called from BKSRIN                              from  BOOKLIB
C Common variables defined in this routine for the search :
C    IWFILI , IPSROU   in / BKKEYS /
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
C FILI CARDS have always to be generated for IDSEAR = 1,2,4,7
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.2.OR.IDSEAR.EQ.4.
     +    OR.IDSEAR.EQ.7)  IWFILI=1
C SRUN CARDS have always to be generated for IDSEAR = 1,2,3,4,7
      IF (IDSEAR.LE.4.OR.IDSEAR.EQ.7) IPSROU=1
 999  RETURN
      END
      SUBROUTINE BKFISR(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Fill bank 'SRUN' from banks 'SEVT' or 'SFIL'
C J. Boucrot  31-08-1994 - modified 23-09-1996 and 15-10-1998
C Called from BKVFIYE or BKRUCA                          from  BOOKLIB
C Calls AUBOS                                            from ALEPHLIB
C Calls BKFPFI                                           from  BOOKLIB
C  Output argument  :
C           IER = 0  all OK
C               = 1  no room to book bank 'SRUN'
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      INTEGER LISRU(NTPMX),LISFI(NTPMX)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NFOUN=0
      CALL VZERO(LISRU,NTPMX)
      CALL VZERO(LISFI,NTPMX)
      JSFIL=NLINK('SFIL',0)
      IF (JSFIL.GT.0) GO TO 8
C-----------------------------------------------------------------------
C If SEVT cards are present , build SRUN from them :
C
      IF (IW(NAMIND('SEVT')).EQ.0) GO TO 999
      JSEVT=NAMIND('SEVT')+1
 2    JSEVT=IW(JSEVT-1)
      IF (JSEVT.EQ.0) GO TO 6
      DO 5 KK=1,NFOUN
         IF (IW(JSEVT+1).EQ.LISRU(KK)) GO TO 2
 5    CONTINUE
      NFOUN=NFOUN+1
      IF (NFOUN.GT.NTPMX) GO TO 6
      LISRU(NFOUN)=IW(JSEVT+1)
      GO TO 2
C
C Sort the list by increasing run # , then fill SRUN :
C
 6    IF (NFOUN.EQ.0) GO TO 999
      CALL INTSOR(LISRU,NFOUN)
      ISRUNF=LISRU(1)
      ISRUNL=LISRU(NFOUN)
      CALL AUBOS('SRUN',0,NFOUN,JSRUN,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      CALL UCOPY(LISRU(1),IW(JSRUN+1),NFOUN)
      CALL AUBOS('SRUI',0,NFOUN,JSRUI,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      CALL UCOPY(LISRU(1),IW(JSRUI+1),NFOUN)
      GO TO 999
C-----------------------------------------------------------------------
C Input = 'SFIL' bank : Loop on all fills of bank 'SFIL' :
C and check their existence.
C If a fill doesn't exist, replace it by the next one:
C
 8    IMOD=1
      NFINI=IW(JSFIL)
      IF (NFINI.EQ.1.OR.(NFINI.EQ.2.AND.IW(JSFIL+2).LT.0))
     +    IMOD=2
      CALL UCOPY(IW(JSFIL+1),LISFI(1),NFINI)
      IREJF=0
      DO 100 IKF=1,NFINI
         IFTES=LISFI(IKF)
         IF (IFTES.LT.0) IFTES=-IFTES
         CALL BKFPFI(IFTES,IFNEW,NPER,NRUF,NRUL,IBRRU,IERF)
         IF (IERF.NE.1.AND.IFNEW.NE.IFTES) THEN
            IREJF=IREJF+1
            IF (LISFI(IKF).LT.0) IFNEW=-IFNEW
            LISFI(IKF)=IFNEW
         ENDIF
 100  CONTINUE
C If modifications done, replace old SFIL contents by new ones :
      IF (IREJF.NE.0) CALL UCOPY(LISFI(1),IW(JSFIL+1),NFINI)
C
C Now loop on all 'SFIL' members and define run limits:
C
      NFIRU=999999
      NLARU=-1
      NFIOK=0
      NRUOK=0
C
 180  IFILL=0
      NFIOK=NFIOK+1
      IF (IMOD.EQ.1) THEN
         IF (NFIOK.GT.IW(JSFIL)) GO TO 600
         IFILL=IW(JSFIL+NFIOK)
      ELSE
         IFILL=IW(JSFIL+1)+NFIOK-1
         IF (IW(JSFIL).GT.1.AND.IFILL.GT.IABS(IW(JSFIL+2))) GO TO 600
      ENDIF
      IF (IFILL.EQ.0) GO TO 180
      CALL BKFPFI(IFILL,IFINW,NPER,NFRUN,NLRUN,IBRUC,IERW)
      IF (IERW.NE.0) GO TO 180
      IF (IMOD.EQ.2) THEN
         NFIRU=MIN0(NFRUN,NFIRU)
         NLARU=MAX0(NLRUN,NLARU)
      ELSE
         CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
         IF (JBRUC.LE.0) GO TO 180
         MAXBR=MIN0(LROWS(JBRUC),IBRUC+60)
         DO 200 IBRR=IBRUC,MAXBR
            KBRUC=KROW(JBRUC,IBRR)
            IF (IW(KBRUC+JBRULF).NE.IFILL) GO TO 200
            NRUOK=NRUOK+1
            IF (NRUOK.GT.NTPMX) GO TO 600
            LISRU(NRUOK)=IW(KBRUC+JBRURN)
 200     CONTINUE
      ENDIF
      IF (IMOD.EQ.2.AND.IW(JSFIL).EQ.1) GO TO 600
      GO TO 180
C
C Now book 'SRUN' and fill it with first / -last run # :
C
 600  CONTINUE
      IF (NFIOK.LE.0) GO TO 999
      IF (IMOD.EQ.2) THEN
         CALL AUBOS('SRUN',0,2,JSRUN,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JSRUN+1)=NFIRU
         IW(JSRUN+2)=-NLARU
         ISRUNF=NFIRU
         ISRUNL=NLARU
      ELSE
         IF (NRUOK.LE.0) GO TO 999
         CALL INTSOR(LISRU,NRUOK)
         CALL AUBOS('SRUN',0,NRUOK,JSRUN,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         CALL UCOPY(LISRU(1),IW(JSRUN+1),NRUOK)
         ISRUNF=LISRU(1)
         ISRUNL=LISRU(NRUOK)
      ENDIF
      GO TO 999
C No room for bank 'SRUN' :
 900  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKFIYE(LU,IFIL1,IFIL2,IRBAD)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Checks fills/year consistency
C J. Boucrot  23-09-1996
C Called from BKSRUN or BKRUCA                 from BOOKLIB
C Calls DISFILYE                               from BOOKLIB
C   Input arguments :
C          LU   = Fortran unit to print messages
C   IFIL1,IFIL2 = First/last fill to be considered
C  Output argument  :
C         IRBAD = 0  all OK
C               = 1  fills are coming from different years
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER TEXT*80
C-----------------------------------------------------------------------
 800  IRBAD=1
      TEXT=' '
      DO 810 IY=1,NTOYEA-1
         IG=0
         IF (IFIL1.GE.LISTFF(IY).AND.IFIL1.LT.LISTFF(IY+1)) IG=IG+1
         IF (IFIL2.GE.LISTFF(IY).AND.IFIL2.LT.LISTFF(IY+1)) IG=IG+1
         IF (IG.EQ.2) THEN
            IRBAD=0
            GO TO 811
         ENDIF
 810  CONTINUE
 811  CONTINUE
      IF (IRBAD.EQ.1) THEN
         WRITE ( LU , 1003 )
C For SCANX11, open a message window :
      IF (IBKINT.EQ.-1) THEN
         TEXT='Error in input selection !'
         CALL WINX11(100,TEXT)
         TEXT='You cannot mix fills from different years'
         CALL WINX11(101,TEXT)
         TEXT=' Please give a new selection'
         CALL WINX11(102,TEXT)
         CALL WINX11(999,TEXT)
      ENDIF
C Display the list of known years/fills :
         IF (IBKINT.EQ.1) CALL DIRUFIYE(LU)
         GO TO 999
      ENDIF
C
C If Year = 1995 , verify that one doesn't mix LEP I and LEP II fills :
C
      IF (IRBAD.NE.0) GO TO 999
      IF (LISYEA(IY).EQ.1995) THEN
         ILEP2=-1
         IF (IFIL1.GT.MXLFI1.AND.IFIL2.GT.MXLFI1) ILEP2=1
         IF (IFIL1.LE.MXLFI1.AND.IFIL2.LE.MXLFI1) ILEP2=0
         IF (ILEP2.EQ.-1) THEN
            IRBAD=1
            WRITE ( LU,1018 )
            WRITE ( LU,1019 ) LISTFF(IY),MXLFI1,MXLFI1+1
C For SCANX11, open a message window :
            IF (IBKINT.EQ.-1) THEN
               TEXT='Error in input selection !'
               CALL WINX11(103,TEXT)
               TEXT='Do not mix LEP 1 and LEP 1.5 data in 1995'
               CALL WINX11(104,TEXT)
               WRITE (TEXT,1201) LISTFF(IY),MXLFI1
               CALL WINX11(105,TEXT)
               WRITE (TEXT,1202) MXLFI1+1,LISTFF(IY+1)
               CALL WINX11(106,TEXT)
               TEXT=' Please give a new selection'
               CALL WINX11(107,TEXT)
               CALL WINX11(999,TEXT)
            ENDIF
         ENDIF
      ENDIF
C
 999  RETURN
C-----------------------------------------------------------------------
 1003       FORMAT (/'  ===>>> You cannot mix fills from ',
     +               ' different years !! <<<===')
 1018       FORMAT (/'  ===>>> You cannot mix fills from ',
     +               ' LEP 1 and LEP 1.5 running !! <<<===')
 1019 FORMAT (/' ===  LEP 1 fills of 1995 range from :',I7,' to : ',I7,
     +        /' ===>  If you want LEP 1.5 fills , ask for fills >',I7)
 1201 FORMAT('1995 LEP 1   Fills : from ',I6,' to ',I6)
 1202 FORMAT('1995 LEP 1.5 Fills : from ',I6,' to ',I6)
      END
      SUBROUTINE BKFPER(NRUN,NKING,NPER)
C ----------------------------------------------------------------------
CKEY TOOL/USER
C! Find the period # of a given run
C  J. Boucrot  23 - Mar - 1989
C Called from USER
C Calls BKPOIN                                          from  BOOKLIB
C  Input :
C    NRUN  =  Run NUmber
C   NKING  =  Kingal Identifier ( only for Monte-Carlo data )
C Output :    NPER = Period number  ( = -1 if nothing found )
C Used banks :  'BPER' , in which the description of periods is stored
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
       PARAMETER ( IKRCO = 10000 )
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
         NPER = -1
         IF (NKING.NE.0) THEN
            NPER=MOD(NKING,IKRCO)
            GO TO 990
         ENDIF
         CALL BKPOIN(LECDAF,'BPER',1,JBPER)
         IF (JBPER.LE.0) GO TO 990
         NTPR=LROWS(JBPER)
         DO 10 IPE=1,NTPR
            IT1=ITABL(JBPER,IPE,JBPEFR)
            IT2=ITABL(JBPER,IPE,JBPELR)
            IF (NRUN.LT.ITABL(JBPER,IPE,JBPEFR))  GO TO 10
            IF (NRUN.GT.ITABL(JBPER,IPE,JBPELR))  GO TO 10
            GO TO 100
 10      CONTINUE
         GO TO 990
C
 100     NPER=ITABL(JBPER,IPE,JBPEPN)
C
 990     IF (IBAUTO.EQ.0.AND.IDEBUG.EQ.2) PRINT 1001,NRUN,NKING,NPER
 1001    FORMAT (' +++ BKFPER RUN # ,NKING , PERIOD=',3I8)
C
 999     RETURN
         END
      SUBROUTINE BKFPERD(NPMIN,NPMAX,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Finds the periods for a given situation
C  J. Boucrot 10-Feb-1999
C  Called from BKCHKR,BKDVER,BKFINDAA,BKSEPRDK,BKLEPL  from BOOKLIB
C Output arguments :
C  NPMIN = minimum period number
C  NPMAX = maximum period number
C   IER = 1 if problems , = 0 if all OK
C-----------------------------------------------------------------------
      PARAMETER ( IYMI = 1989 )
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NPMIN=0
      NPMAX=0
C MCarlo datasets:  NPMIN=NPMAX=KINCOD
      IF (IMCDAT.EQ.1) GO TO 100
      IF (KINCOD.LE.0) GO TO 900
      NPMIN=KINCOD
      NPMAX=KINCOD
      GO TO 999
C
C Real data. Check if ISYEAR is defined :
C
 100  IF (IMCDAT.NE.1) GO TO 900
      IYEA=0
      IF (ISYEAR.GT.0) THEN
         IYEA=ISYEAR
         GO TO 200
      ENDIF
C no : define it from ISRUNF
      IF (ISRUNF.LT.NRUMIN.OR.ISRUNF.GT.NRUMAX) GO TO 900
      DO 150 IZ=1,NTOYEA
         IF (ISRUNF.LT.LISFRU(IZ).OR.ISRUNF.GE.LISFRU(IZ+1)) GO TO 150
         IYEA=LISYEA(IZ)
         GO TO 200
 150  CONTINUE
 200  IF (IYEA.LE.0) GO TO 900
C
C Now try to find the periods. Maximum is the last one from 'BPER':
C
      JBPER=IW(NAMIND('BPER'))
      IF (JBPER.LE.0) GO TO 900
      NBPER=LROWS(JBPER)
      KBPER=KROW(JBPER,NBPER)
      NPMX=IW(KBPER+JBPEPN)
C Now scan bank 'BDAD' to get the period limits:
      JBDAD=IW(NAMIND('BDAD'))
      IF (JBDAD.LE.0) GO TO 900
      NBDAD=LROWS(JBDAD)
      DO 300 IBDAD=1,NBDAD
         KBDAD=KROW(JBDAD,IBDAD)
         IYY=IYMI+IW(KBDAD+JBDANR)
         IF (IYY.NE.IYEA) GO TO 300
         NPMIN=IW(KBDAD+JBDAPM)
         NPMAX=IW(KBDAD+JBDAPX)
         GO TO 400
 300  CONTINUE
 400  IF (NPMIN.LE.0) GO TO 900
      IF (NPMAX.LE.0) GO TO 900
      NPMAX=MIN0(NPMAX,NPMX)
      GO TO 999
C Problems :
 900  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKFPFI(NFIL,NFOU,NPER,NRUF,NRUL,IBRRU,IER)
C ----------------------------------------------------------------------
CKEY TOOL/USER
C! Find the period # of a given LEP Fill
C  J. Boucrot  31 - Aug - 1994   Modified 15-Oct-1998
C Called from BKFISR,BKVFIYE,BKVRFIRU        from BOOKLIB
C Calls BKPOIN                               from BOOKLIB
C  Input :
C    NFIL  =  LEP Fill  Number to be searched for in the BRUC bank
C Outputs :
C     NFOU = LEP Fill number found
C          = NFIL if it exists in BRUC
C          = the next one existing in BRUC, if not found
C     NPER = Period number  ( = -1 if nothing found )
C     NRUF = First run in fill
C     NRUL =  Last run in fill
C    IBRRU =  Row number for run NRUF in BRUC , NR = NPER
C     IER  = 0 if all OK
C          = 1 if period not found
C          = 2 if NFIL not known in BRUC (in which case NFOU # NFIL)
C Used banks :  'BPER' , in which the description of periods is stored
C               'BRUC' , to find the fill and its attributes
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IER = 0
      NPER = -1
      NRUF = 9999999
      NRUL = -1
      IBRRU=-1
      NFOU=-1
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 900
      DO 10 IPE=1,LROWS(JBPER)
         IF (NFIL.LT.ITABL(JBPER,IPE,JBPEFE))  GO TO 10
         IF (NFIL.GT.ITABL(JBPER,IPE,JBPELE))  GO TO 10
         GO TO 100
 10   CONTINUE
      GO TO 900
C
 100  NPER=ITABL(JBPER,IPE,JBPEPN)
C
C Now search for fill NFIL in bank 'BRUC' , NR = NPER
C
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 910
      nok=0
      DO 200 IBRUC=1,LROWS(JBRUC)
         KBRUC=KROW(JBRUC,IBRUC)
         IF (IW(KBRUC+JBRULF).NE.NFIL) GO TO 200
         NRUF=MIN0(NRUF,IW(KBRUC+JBRURN))
         NRUL=MAX0(NRUL,IW(KBRUC+JBRURN))
         NOK=NOK+1
         IF (NOK.EQ.1) IBRRU=IBRUC
 200  CONTINUE
      IF (NRUL.LT.0.OR.NRUF.GT.NRUL) GO TO 300
      NFOU=NFIL
      GO TO 999
C
C NFIL not found : find the next one in 'BRUC':
C
 300  CONTINUE
      INW=0
      NRUL=-1
      NRUF=999999
      IBRRU=-1
      DO 400 IRUC=1,LROWS(JBRUC)
         KRUC=KROW(JBRUC,IRUC)
         LFLL=IW(KRUC+JBRULF)
         IF (LFLL.LT.NFIL) GO TO 400
         INW=INW+1
         IF (INW.EQ.1) NFOU=LFLL
         IF (LFLL.NE.NFOU) GO TO 400
         NRUF=MIN0(NRUF,IW(KRUC+JBRURN))
         NRUL=MAX0(NRUL,IW(KRUC+JBRURN))
         IF (INW.EQ.1) IBRRU=IRUC
 400  CONTINUE
      IF (NFOU.GT.0) GO TO 910
C
C IER = 1 if period not found or NFOU not found
C
 900  IER=1
      GO TO 999
C IER = 2 if NFIL not known in BRUC, but NFOU found
 910  IER=2
C
 999  RETURN
      END
      SUBROUTINE BKFRTM(TAPN,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEERING
C! Free tape TAPN in the TMS database
C  J. Boucrot  21 - Jan - 1991    - Modified 18-Mar-1996
C Called from BKUTMS                                  from BOOKLIB
C Calls  BKGTMS,BKPTMS,BKTANA                         from BOOKLIB
C   Input argument :
C      TAPN = name of the cartridge to be freed
C   Output argument :
C      IER = 1 if problem in TMS ,  = 0 if all OK
C      IER = -1 if TMS NOT AVAILABLE
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
       CHARACTER*(*) TAPN
       CHARACTER USNEW*12,USOLD*12,TXTAG*80,BITAG*30,LBTNA*8
       CHARACTER*1 TNAT,TLABL
C-----------------------------------------------------------------------
      IER=0
      ICOD=1
C  Check family name and range of the input tape
      CALL BKTANA(TAPN(1:6),LBTNA,TNAT,TLABL,IHOML,IERT)
      IF (IERT.NE.0) GO TO 990
      INOWR=IW(NAMIND('NOWR'))
C Now build the new username :
      ICOD=2
      USNEW=' '
      USNEW=TAPN(1:2)//'_'//LBTNA(1:5)
      IF (TAPN(1:2).EQ.'AD') USNEW='AD_GERMA'
      IF (TAPN(1:2).EQ.'AG') USNEW='AG_BRITA'
      IF (TAPN(1:2).EQ.'AI') USNEW='AI_ITALY'
C Get the old user name :
      CALL BKGTMS(TAPN,5,IRC,USOLD)
      IF (IRC.EQ.0) GO TO 990
      IF (IRC.EQ.-1) GO TO 995
C Transfer to new user USNEW :
      ICOD=3
      IOUT=0
      IF (INOWR.EQ.0) CALL BKPTMS(TAPN,3,USNEW,IOUT)
      IF (IOUT.EQ.1) GO TO 990
      IF (IOUT.EQ.2) GO TO 995
C Change binary tag :
      ICOD=4
      IOUT=0
C Get the old Institute name :
      CALL BKGTMS(TAPN,3,IRC,TXTAG)
      IF (IRC.EQ.0) GO TO 990
      IF (IRC.EQ.-1) GO TO 995
      BITAG=TXTAG(1:4)
      IF (INOWR.EQ.0) CALL BKPTMS(TAPN,1,BITAG,IOUT)
      IF (IOUT.EQ.1) GO TO 990
      IF (IOUT.EQ.2) GO TO 995
C Change TEXT tag :
      ICOD=5
      TXTAG='Not yet booked'
      IOUT=0
      IF (INOWR.EQ.0) CALL BKPTMS(TAPN,2,TXTAG,IOUT)
      IF (IOUT.EQ.1) GO TO 990
      IF (IOUT.EQ.2) GO TO 995
C Set this cartridge to "Write Enable" again :
      ICOD=6
      IOUT=0
      IF (INOWR.EQ.0) CALL BKPTMS(TAPN,5,' ',IOUT)
      IF (IOUT.EQ.1) GO TO 990
      IF (IOUT.EQ.2) GO TO 995
C Set the protection on Access Control Group to the standard value :
      ICOD=7
      IOUT=0
      IF (INOWR.EQ.0) CALL BKPTMS(TAPN,7,' ',IOUT)
      IF (IOUT.EQ.1) GO TO 990
      IF (IOUT.EQ.2) GO TO 995
C All OK , put a line on debug file :
      WRITE (LWRDBG,1001) TAPN,USOLD,USNEW
      GO TO 999
C A Problem occured : put a warning on output :
 990  WRITE (LWRDBG,1002) TAPN,ICOD
      IF (IBAUTO.EQ.0) PRINT 1002,TAPN,ICOD
      IER=1
      GO TO 999
C TMS Not available : put a warning on output :
 995  WRITE (LWRDBG,1002) TAPN,ICOD
      IF (IBAUTO.EQ.0) PRINT 1003,TAPN,ICOD
      IER=-1
  999 RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (' === Subroutine BKFRTM : Tape ',2X,A6,' Successfully ',
     +        ' freed by TMS ; Users Old , New =',2(2X,A12))
 1002 FORMAT (' === Subroutine BKFRTM : Tape ',2X,A6,' NOT FREED : ',
     +        ' Problem with TMS at step = ',I5, ' of BKFRTM !!!')
 1003 FORMAT (' === Subroutine BKFRTM : Tape ',2X,A6,' NOT FREED : ',
     +        ' TMS NOT AVAILABLE at step = ',I5, ' of BKFRTM !!!')
      END
      SUBROUTINE BKFTAP(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Writes the Numfiles.cerntaps  file
C  Author  J.Boucrot  14-Jan-1998
C Called from BKMBYT                       from BOOKLIB
C Calls BKSORT,BKFTAPC,BKTADUP             from BOOKLIB
C Calls BKCARI                             from ALEPHLIB
C Calls ALINST,ALSTIN,BKINCA,AUBOS,AUBPRS  from ALEPHLIB
C Calls BKFMT,BDROP                        from BOS77
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      SAVE
      PARAMETER (JBKTCO=1,JBKTTA=7,JBKTFI=8,LBKTFA=8)
      PARAMETER ( NFAM = 10 , NTPMX = 2000 )
      CHARACTER*2 TPFAM(NFAM)
      CHARACTER*60 FNIN,FNPR,FOPR,FOKP
      CHARACTER LINE*80,TAPE*9,TF*2,COMTA*24,TAPA*6,TAPN*4,CPTA*14
      CHARACTER TAPFI*10
      INTEGER BKINCA
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      DO 5 IK=1,NFAM
         TPFAM(IK)=' '
 5    CONTINUE
      NFAMT=0
      CALL BKFMT('BKTF','2I,(6A,2I)')
      write (lwrdbg,1001)
C Open the input file BKMBYTES.CERNTAPS:
      FNIN=' '
      FNIN=ALS_TEMP(1:ILTEMP)//'bkmbytes.cerntaps'
      FNIN=FNIN(1:LNBLNK(FNIN))
      OPEN ( LECPLI , FILE = FNIN , STATUS = 'OLD' , ERR = 901 )
C
C Read this file :
C
 10   READ ( LECPLI , '(A)' , END = 500 , ERR = 901 ) LINE
      TAPFI=LINE(7:16)
      TAPE=TAPFI(1:9)
      IF (TAPE(7:9).EQ.' ') GO TO 10
C Only multifile tapes considered: find which family
      TF=TAPE(1:2)
      IF (NFAMT.EQ.0) GO TO 40
      IFAM=0
      DO 20 IFM=1,NFAMT
         IF (TF.NE.TPFAM(IFM)) GO TO 20
         IFAM=IFM
         GO TO 40
 20   CONTINUE
C Family already existing:
 40   IF (IFAM.GT.0) THEN
         JBKTF=NLINK('BKTF',IFAM)
         GO TO 60
C New family: Create the corresponding 'BKTF' bank:
      ELSE
         NFAMT=NFAMT+1
         TPFAM(NFAMT)=TF
         LENKT=LMHLEN+NTPMX*LBKTFA
         CALL AUBOS('BKTF',NFAMT,LENKT,JBKTF,IGARB)
         IF (IGARB.EQ.2) GO TO 920
         IW(JBKTF+LMHCOL)=LBKTFA
         IW(JBKTF+LMHROW)=0
      ENDIF
C Check if the present tape is already in bank 'BKTF':
 60   ITAP=BKINCA(TAPE(3:6))
      IFIL=BKINCA(TAPFI(8:10))
      NKTF=LROWS(JBKTF)
      IF (NKTF.LE.0) GO TO 120
      NTOK=0
      DO 100 IBKTF=1,NKTF
         KBKTF=KROW(JBKTF,IBKTF)
C yes, it is: update the file # if needed
         IF (IW(KBKTF+JBKTTA).EQ.ITAP) THEN
            NTOK=IBKTF
            IOLF=IW(KBKTF+JBKTFI)
            IW(KBKTF+JBKTFI)=MAX0(IOLF,IFIL)
            GO TO 110
         ENDIF
 100  CONTINUE
 110  IF (NTOK.GT.0) GO TO 10
C Tape not known: add a new row in 'BKTF':
 120  NRR=LROWS(JBKTF)
      KKTF=KROW(JBKTF,NRR+1)
      IW(KKTF+JBKTFI)=IFIL
      IW(KKTF+JBKTTA)=ITAP
      CALL ALINST(LINE(20:43),IW(KKTF+JBKTCO),IBIDE)
      IW(JBKTF+LMHROW)=NRR+1
C read next line on input file:
      GO TO 10
C reading finished:
 500  CONTINUE
      CLOSE (LECPLI)
      IF (NFAMT.EQ.0) GO TO 999
C----------------------------------------------------------------------
C Open the output file :
      FNPR=' '
      FNPR=ALS_TEMP(1:ILTEMP)//'numfiles_new.cerntaps'
      FNPR=FNPR(1:LNBLNK(FNPR))
      CALL SYSTEM(' rm -f '//FNPR)
      OPEN ( LWRMGR , FILE = FNPR , STATUS = 'NEW' , ERR = 999 )
      write (lwrmgr,1100)
C Compress and sort the 'BKFT' banks
      CALL AUBPRS('BKTF')
      DO 600 IBK=1,NFAMT
         CALL BKSORT('BKTF',IBK,JBKTTA,IERF)
         IF (IERF.EQ.2) GO TO 920
 600  CONTINUE
C Now write the results:
      DO 800 IBT=1,NFAMT
         JBKT=NLINK('BKTF',IBT)
         IF (JBKT.EQ.0) GO TO 800
         NBKT=LROWS(JBKT)
         DO 700 IBKT=1,NBKT
            KBKT=KROW(JBKT,IBKT)
            CALL ALSTIN(IW(KBKT+JBKTCO),JBKTTA-JBKTCO,COMTA)
            CALL BKCARI(IW(KBKT+JBKTTA),4,TAPN)
            TAPA=TPFAM(IBT)//TAPN
            NFIL=IW(KBKT+JBKTFI)
            CALL BKFTAPC(TAPA,CPTA,GBYT,IERT)
            IF (IERT.NE.0) GO TO 902
            WRITE (LWRMGR,1101) TAPA,NFIL,COMTA,CPTA,GBYT
 700     CONTINUE
 800  CONTINUE
      CALL BDROP(IW,'BKTF')
      CLOSE ( LWRMGR )
C----------------------------------------------------------------------
C All OK : swap the old and new numfiles.cerntaps :
      FOPR=' '
      FOPR=ALS_TEMP(1:ILTEMP)//'numfiles_old.cerntaps'
      FOPR=FOPR(1:LNBLNK(FOPR))
      FOKP=' '
      FOKP=ALS_TEMP(1:ILTEMP)//'numfiles.cerntaps'
      FOKP=FOKP(1:LNBLNK(FOKP))
C numfiles -> numfiles_old
      call system(' mv '//FOKP//' '//FOPR)
C numfiles_new -> numfiles
      call system(' mv '//FNPR//' '//FOKP)
C And finally edit the file tobecopied.cerntaps
C giving the list of tapes to be duplicated:
      CALL BKTADUP(IERT)
      IF (IERT.NE.0) GO TO 903
      GO TO 999
C----------------------------------------------------------------------
C Error : no input file :
 901  WRITE (LWRDBG,1011)
      go to 999
C Error : updable to read numfiles.cerntaps
 902  WRITE (LWRDBG,1012)
      go to 999
C Error : problem to create the file tobecopied.cerntaps
 903  WRITE (LWRDBG,1013)
      go to 999
C No room for banks :
 920  IER=1
      WRITE (LWRDBG,1014)
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKFTAP === : start updating file ',
     +        'numfiles.cerntaps')
 1011 FORMAT (/22X,'*** ERROR in BKFTAP *** : unable to open/read ',
     +        'bkmbytes.cerntaps')
 1012 FORMAT (/22X,'*** ERROR in BKFTAP *** : unable to open/read ',
     +        'numfiles.cerntaps')
 1013 FORMAT (/22X,'*** ERROR in BKFTAP *** : unable to create ',
     +        'the file tobecopied.cerntaps')
 1014 FORMAT (/22X,'*** ERROR in BKFTAP *** : NO room for BOS banks')
 1100 FORMAT (78(1H=)/,'= Tape',T11,'# Files',T22,'Nature',
     +        T31,'Proc / Mc Year',T51,'Copy',T70,'Gbytes'/,78(1H=))
 1101 FORMAT (2X,A6,I6,6X,A24,6X,A14,4x,F6.3)
      END
      SUBROUTINE BKFTAPC(TAPE,COMT,GBYT,IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Auxiliary to BKFTAP
C  Author  J.Boucrot  26-Jan-1998
C Called from BKFTAP                       from BOOKLIB
C Calls BKISDL                             from BOOKLIB
C Calls BKINCA                             from ALEPHLIB
C INPUT arguments:
C  TAPE = tape name to be copied
C OUTPUT arguments :
C  COMT = comment field for copy
C  GBYT = Number of Gbytes of the tape
C   IER = 1 if pb with input tape; = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      SAVE
      PARAMETER ( NTPM = 2000 )
      PARAMETER ( NCOPR = 100 )
      CHARACTER*6 COPYTODO,COPYDONE,COPYTP
      COMMON / REDCOPS / COPYTODO(NCOPR),COPYDONE(NCOPR),COPYTP(NCOPR)
      COMMON / IREDCOP / NCOPYOK,NTOCOPY,NFITODO(NCOPR)
      CHARACTER*6 OLDTP(NTPM),OLDCP(NTPM)
      CHARACTER TAPE*6,COMT*14,TOCOP*14,FNOL*60,LINE*80
      INTEGER BKINCA,IFOLD(NTPM)
      DATA TOCOP / 'To be   copied' /
      DATA IPASS / 0 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      COMT=' '
C On first pass, read the old numfiles.cerntaps file and fill
C the arrays oldtp and oldcp :
      IF (IPASS.EQ.0) THEN
         IPASS=1
         DO 5 IK=1,NTPM
            OLDTP(IK)=' '
            OLDCP(IK)=' '
            IFOLD(IK)=0
 5       CONTINUE
         NOLD=0
         FNOL=' '
         FNOL=ALS_TEMP(1:ILTEMP)//'numfiles.cerntaps'
         FNOL=FNOL(1:LNBLNK(FNOL))
         OPEN ( LECSEQ , FILE = FNOL , STATUS = 'OLD' , ERR = 901 )
         REWIND (LECSEQ )
 10      READ ( LECSEQ , '(A)' , END = 100 , ERR = 901 ) LINE
         IF (LINE(1:1).EQ.'=') GO TO 10
         NOLD=NOLD+1
         IF (NOLD.GT.NTPM) GO TO 901
         OLDTP(NOLD)=LINE(3:8)
         OLDCP(NOLD)=LINE(51:56)
         IFOLD(NOLD)=BKINCA(LINE(11:14))
         GO TO 10
C
 100     CONTINUE
         CLOSE (LECSEQ)
      ENDIF
C----------------------------------------------------------------------
C Check if the input tape is known from the numfiles.cerntaps file:
      ITPOK=0
      DO 200 II=1,NOLD
         IF (TAPE.NE.OLDTP(II)) GO TO 200
         ITPOK=II
         GO TO 250
 200  CONTINUE
C NOT known : quit (may be  new tape)
 250  IF (ITPOK.EQ.0) GO TO 999
C Put the old copy tape (or To be copied) as default COMT:
      COMT(1:6)=OLDCP(ITPOK)
      IF (OLDCP(ITPOK).EQ.TOCOP(1:6)) COMT=TOCOP
C----------------------------------------------------------------------
C Find the size of the tape ( in Gbytes) :
      CALL BKISDL(TAPE,2,IDLT)
      GBYT=0.
      IF (IDLT.EQ.0.OR.NFIDLT.EQ.0) GO TO 260
      JBDFS=NLINK('BDFS',IMCDLT)
      IF (JBDFS.EQ.0) GO TO 260
      MBYT=0
      DO 255 II=1,NFIDLT
         KBDFS=KROW(JBDFS,LISBDF(II))
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.EQ.0) GO TO 255
         KBSET=KROW(JBSET,NROW)
         JBRLI=NLINK('BRLI',NPER)
         IF (JBRLI.EQ.0) GO TO 255
         IBRL1=IW(KBSET+JBSEBA)
         IBRL2=IW(KBSET+JBSEBR)
         IF (IBRL1*IBRL2.EQ.0) GO TO 255
         DO 253 IBRLI=IBRL1,IBRL2
            KBRLI=KROW(JBRLI,IBRLI)
            MBYT=MBYT+IW(KBRLI+JBRLNB)/1000000
 253     CONTINUE
 255  CONTINUE
      GBYT=0.001*FLOAT(MBYT)
 260  CONTINUE
C----------------------------------------------------------------------
C Find if this tape was copied during this update JOB:
C
      ICONW=0
      IF (NCOPYOK.EQ.0) GO TO 400
      DO 300 IK=1,NCOPYOK
         IF (TAPE.NE.COPYDONE(IK)) GO TO 300
         ICONW=IK
         GO TO 350
 300  CONTINUE
 350  IF (ICONW.EQ.0) GO TO 400
C Yes, it is. If there was already a copy, this is a problem!
      IF (OLDCP(ITPOK).EQ.' '.OR.OLDCP(ITPOK).EQ.TOCOP(1:6))
     +    GO TO 370
      WRITE (LWRDBG,1001) TAPE,OLDCP(ITPOK),COPYTP(ICONW)
      GO TO 999
C Was not already copied : put the copy name in COMT:
 370  COMT(1:6)=COPYTP(ICONW)
      GO TO 999
C----------------------------------------------------------------------
C Find if the copy has to be done after this update JOB:
C
 400  ICOPW=0
      IF (NTOCOPY.EQ.0) GO TO 999
      DO 420 IL=1,NTOCOPY
         IF (TAPE.NE.COPYTODO(IL)) GO TO 420
         ICOPW=IL
         GO TO 450
 420  CONTINUE
 450  IF (ICOPW.EQ.0) GO TO 999
C Compare the file # from alprod and the one from scanbook;
C issue a warning if they are not the same:
      IF (NFITODO(ICOPW).NE.IFOLD(ITPOK)) THEN
          CALL BKISDL(TAPE,2,IDLT)
          IF (IDLT.LE.0.OR.NFITODO(ICOPW).NE.NFIDLT)
     +    WRITE (LWRDBG,1003) TAPE,IFOLD(ITPOK),NFITODO(ICOPW)
      ENDIF
C If a copy existed already, there is a problem:
      IF (OLDCP(ITPOK).NE.' '.AND.OLDCP(ITPOK).NE.TOCOP(1:6)) THEN
         WRITE (LWRDBG,1002) TAPE,OLDCP(ITPOK)
         GO TO 999
      ENDIF
C ALL OK : Put the comment field to TOCOP:
      COMT=TOCOP
      GO TO 999
C
C Problems :
C
 901  IER=1
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (/5X,100(1H*),/5X,'****** ERROR in BKFTAPC Tape ',2x,a6,
     +        ' already copied on ',2x,a6/,5X,
     +        '****** copied again in this job on',2x,a6/5X,100(1H*))
 1002 FORMAT (/5X,100(1H*),/5X,'****** ERROR in BKFTAPC Tape ',2x,a6,
     +        ' already copied on ',2x,a6/,5X,'****** asked to be ',
     +        'copied again in this job'/5X,100(1H*))
 1003 FORMAT (5X,100(1H*)/5X,'****** WARNING in BKFTAPC : Tape ',
     +        2x,a6,' has ',i5,' Files from SCANBOOK'/5X,
     +        '****** and ',i5,' Files from alprod !!!'/5X,100(1H*))
      END
      SUBROUTINE BKFTCA
C ----------------------------------------------------------------------
C! Gets output file/tape parameters
CKEY ALBOOK OUTPUT FILE / INTERNAL
C  J. Boucrot         8-May-1989
C  Modified 02-Dec-1994 for UNIX machines
C  Called from BKENRU                           from BOOKLIB
C  Calls ABUNIT                                 from ALEPHLIB
C  Calls BKOUTF,BKUNFI                          from BOOKLIB
C  Input banks needed :  'FILI' (from BOS data cards)
C  The results are stored in the common /BKFILS/
C ----------------------------------------------------------------------
      SAVE
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
      CHARACTER FNAMD*80,TAPFI*8
C ----------------------------------------------------------------------
      IF (NFILOU.EQ.0) GO TO 999
C  Check if a FILI CARD is there ; if yes extract the tape name from it
C
      CALL BKUNFI(TAPFI)
      IF (TAPFI.EQ.' ' ) GO TO 999
      CALL ABUNIT(LIN,LOU,K2,KDA,KEVD)
      IF (LIN.GT.0) LISLOU(1)=LIN
      CALL BKOUTF(LISLOU(1),TAPFI,'EPIO','CART',FNAMD,ILF)
C
 999  RETURN
      END
      SUBROUTINE BKGPCO(COMEN,IPAF,IAMB)
C ----------------------------------------------------------------------
C! Tries to guess the Special Particle code from dataset comment
CKEY ALBOOK PROD FILL/INTERNAL
C  J. Boucrot         3-Sep-1993
C  Called from BKBSPF                           from ALEPHLIB
C  Input argument  :
C  COMEN = CHARACTER*80 comment of the dataset
C  Output argument  :
C   IPAF  = Aleph special particle code , = 0 if noting found
C   IAMB  = 0 if all OK
C         = 1 if the comment gives ambiguous determination
C ----------------------------------------------------------------------
      CHARACTER*(*)   COMEN
C-----------------------------------------------------------------------
      IPAF=0
      IAMB=0
      ITAU=0
      IMUO=0
      IELE=0
      ICCB=0
      IBBB=0
C Try string for Taus :
      IF (INDEX(COMEN,'TAU').GT.0)  GO TO 100
      IF (INDEX(COMEN,'->TT').GT.0) GO TO 100
      GO TO 101
100   ITAU=1
C Try string for Muons :
101   IF (INDEX(COMEN,'MUON').GT.0)   GO TO 200
      IF (INDEX(COMEN,'->MM').GT.0)   GO TO 200
      IF (INDEX(COMEN,'MUMU').GT.0)   GO TO 200
      IF (INDEX(COMEN,' MM ').GT.0)   GO TO 200
      IF (INDEX(COMEN,'MU-MU').GT.0)  GO TO 200
      IF (INDEX(COMEN,' MU ').GT.0)   GO TO 200
      IF (INDEX(COMEN,'MU+MU-').GT.0)  GO TO 200
      IF (INDEX(COMEN,'MU+').GT.0)     GO TO 200
      GO TO 201
200   IMUO=1
C Try string for Electrons :
201   IF (INDEX(COMEN,'BHABHA').GT.0)   GO TO 300
      IF (INDEX(COMEN,'->EE').GT.0)     GO TO 300
      IF (INDEX(COMEN,' EE ').GT.0)     GO TO 300
      IF (INDEX(COMEN,' EL ').GT.0)     GO TO 300
      IF (INDEX(COMEN,' E-E ').GT.0)    GO TO 300
      IF (INDEX(COMEN,'E+E-').GT.0)    GO TO 300
      IF (INDEX(COMEN,' E+').GT.0)     GO TO 300
      GO TO 301
300   IELE=1
C Try string for C quarks  :
301   IF (INDEX(COMEN,'CCB').GT.0)   GO TO 400
      IF (INDEX(COMEN,'->CC').GT.0)  GO TO 400
      IF (INDEX(COMEN,' CC ').GT.0)  GO TO 400
      GO TO 401
400   ICCB=1
C Try string for b quarks  :
401   IF (INDEX(COMEN,'BBB').GT.0)   GO TO 500
      IF (INDEX(COMEN,'->BB').GT.0)  GO TO 500
      IF (INDEX(COMEN,'BBAR').GT.0)  GO TO 500
      IF (INDEX(COMEN,' BB ').GT.0)  GO TO 500
      GO TO 501
500   IBBB=1
C now get the code :
501   IF (ITAU+IMUO+IELE+ICCB+IBBB.EQ.0) GO TO 999
      IF (ITAU+IMUO+IELE+ICCB+IBBB.GT.1) THEN
         IAMB=1
         GO TO 999
      ENDIF
      IF (ITAU.EQ.1) IPAF= 33
      IF (IMUO.EQ.1) IPAF=  5
      IF (IELE.EQ.1) IPAF=  2
      IF (ICCB.EQ.1) IPAF=104
      IF (IBBB.EQ.1) IPAF=105
 999  RETURN
      END
      SUBROUTINE BKGROU(PHG,IGR)
C-----------------------------------------------------------------------
CKEY TOOL/INTERNAL
C! Find the physics group number of PHG in KEYWPH
C  Author J. Boucrot  08-Nov-1996
C Called from BKPHYG                             from BOOKLIB
C Input argument :
C    PHG  = Physics group name
C Output argument :
C    IGR  = 0 if not found
C         = rank in KEYWPH ( from 4 to NGROUF ) otherwise
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER PHG*2
C-----------------------------------------------------------------------
      IGR=0
      DO 100 KK=4,NGROUF
         IF (IGRLEP.NE.3.AND.IPGVAL(KK).EQ.0) GO TO 100
         IF (PHG.NE.KEYWPH(KK)) GO TO 100
         IGR=KK
         GO TO 999
 100  CONTINUE
 999  RETURN
      END
      SUBROUTINE BKGTCK(IWORD,IGROU,IGOOD)
C-----------------------------------------------------------------------
CKEY TOOL/INTERNAL
C! Tests if a run can be accepted from Physics groups
C  Author J. Boucrot  23-Jul-1997
C Called from BKPHYG,PRPHYZ2                     from BOOKLIB
C Input arguments:
C    IWORD = Run Quality Bitmap from database bank 'BRUC'
C    IGROU = Physics Group # to be checked
C Output argument :
C    IGOOD = 1 if run accepted
C          = 0 if run rejected
C-----------------------------------------------------------------------
      SAVE
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      LOGICAL BTEST
C-----------------------------------------------------------------------
      IGOOD=0
C Quit immediately for MCarlo data :
      IF (IMCDAT.EQ.2) GO TO 999
C Check bit IGROU-1 of word IWORD:
      IF (BTEST(IWORD,IGROU-1)) IGOOD=1
C
 999  RETURN
      END
      SUBROUTINE BKGTMS(VSNIN,IOPT,IFOUN,OUTXT)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEERING
C!  Gets informations from the TMS database
C  Author J. Boucrot   21-Jan-1991
C Called from user
C Calls  SYSREQ                                       from CERNLIB
C  Input arguments :
C  VSNIN = Cartridge VSN (6 characters )
C   IOPT = Operation requested by the user :
C        = 1  Is the cartridge known from TMS ?  --> IFOUN
C        = 2  Get the TMS status of VSN : Absent,Cleaned,on Drive,Entere
C             Result in OUTXT  ( CH*1)
C        = 3  Get the BINARY Tag which contains : Institute (CH*4) + Bla
C                     Aleph Dataset Name  (OUTXT must be CH*20)
C        = 4  Get the TEXT Tag which contains the Comment (OUTXT : CH*60
C        = 5  Get the OWNER of VSNIN  (OUTXT : CH*12)
C        = 6  Get the PHYSICAL LOCATION of VSNIN  ( OUTXT : CH*12)
C  Output arguments :
C  IFOUN = 1 if Operation was successful
C  IFOUN = 0 if Cartridge not known by TMS
C  IFOUN = -1  if TMS NOT available
C  OUTXT = character string for output of options 2 to 6 ( must be dimen
C          sioned correctly in the calling routine )
C-----------------------------------------------------------------------
      CHARACTER VSN*6,COMAND*80
      CHARACTER*(*) OUTXT,VSNIN
      PARAMETER ( IBUF = 2 )
      CHARACTER*132 TMSREP(IBUF)
C-----------------------------------------------------------------------
C Initialisations and checks :
      IFOUN=0
      OUTXT=' '
      IF (IOPT.LT.1.OR.IOPT.GT.6) GO TO 999
      VSN=VSNIN(1:6)
      COMAND=' '
      DO 10 IP=1,IBUF
 10   TMSREP(IP)=' '
      ISYS=IBUF
C
C User request is Option 1 ( Is the cartridge known from TMS  ? )
C    or Option 2 ( Get the TMS Status )
C
      IF (IOPT.GT.2) GO TO 300
      WRITE ( COMAND,9000) VSN
 9000 FORMAT ('QUERY VID ',A)
      LC=LNBLNK(COMAND)
      IF (IOPT.EQ.2) THEN
         COMAND=COMAND(1:LC)//' (STAT'
         LC=LNBLNK(COMAND)
      ENDIF
      CALL sysreq('tms     ',COMAND(1:LC),IRC,TMSREP,ISYS)
      IF (IRC.NE.0) GO TO 800
      IFOUN=1
      IF (IOPT.EQ.2) OUTXT=TMSREP(1)(8:8)
      GO TO 999
C User option is : Get the BINARY Tag from TMS
 300  IF (IOPT.GT.3) GO TO 400
      WRITE ( COMAND,9001) VSN
 9001 FORMAT ('TAG VID ',A,' GET BINARY')
      LC=LNBLNK(COMAND)
      CALL sysreq('tms     ',COMAND(1:LC),IRC,TMSREP,ISYS)
      IF (IRC.NE.0) GO TO 800
      IFOUN=1
      OUTXT=TMSREP(1)(1:80)
      GO TO 999
C User option is : Get from TMS the Text tag :
 400  IF (IOPT.GT.4) GO TO 500
      WRITE ( COMAND,9004) VSN
 9004 FORMAT ('TAG VID ',A,' GET TEXT')
      LC=LNBLNK(COMAND)
      CALL sysreq('tms     ',COMAND(1:LC),IRC,TMSREP,ISYS)
      IF (IRC.NE.0) GO TO 800
      OUTXT=TMSREP(1)(1:80)
      IFOUN=1
      GO TO 999
C User option is : Get from TMS the present OWNER :
 500  IF (IOPT.GT.5) GO TO 600
      WRITE ( COMAND,9005) VSN
 9005 FORMAT ('Q VID ',A,' (OWNER')
      LC=LNBLNK(COMAND)
      CALL sysreq('tms     ',COMAND(1:LC),IRC,TMSREP,ISYS)
      IF (IRC.NE.0) GO TO 800
      OUTXT=TMSREP(1)(8:15)
      IFOUN=1
      GO TO 999
C User option is : Get from TMS the PHYSICAL LOCATION :
 600  IF (IOPT.GT.6) GO TO 800
      WRITE ( COMAND,9006) VSN
 9006 FORMAT ('Q VID ',A,' (LIBRARY')
      LC=LNBLNK(COMAND)
      CALL sysreq('tms     ',COMAND(1:LC),IRC,TMSREP,ISYS)
      IF (IRC.NE.0) GO TO 800
      OUTXT=TMSREP(1)(3:LNBLNK(TMSREP(1)))
      IFOUN=1
      GO TO 999
C Cartridge not found in the TMS database , or TMS unavailable :
 800  IFOUN=0
      IF (IRC.EQ.3) IFOUN=-1
 999  RETURN
      END
      SUBROUTINE BKGYEAR(IYEA)
C-----------------------------------------------------------------------
CKEY SCANBOOK TOOLS
C! Gives the year of last data taking
C  J. Boucrot 23-Sep-1997
C  Called from several routines
C Output argument :
C   IYEA = year of last data taking
C        = 0 if bank 'BPER' not found
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Define year of last data:
      IYEA=0
      JBPER=NLINK('BPER',1)
      IF (JBPER.GT.0) THEN
         KBPER=KROW(JBPER,LROWS(JBPER))
         IYY=IW(KBPER+JBPEFD)/10000
         IF (IYY.GT.10) IYEA=1900+IYY
         IF (IYY.LT.10) IYEA=2000+IYY
      ENDIF
 999  RETURN
      END
      SUBROUTINE BKHOMV
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINTOUT
C! Determines the Homelab from the Computer Name
C J. Boucrot  30-01-1991
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C Called from BKSEIN                                from   BOOKLIB
C Variable defined i this routine :
C   NLABDF   in common / BKLABS /
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
       CHARACTER CCOMP*8, HOST*80
C-----------------------------------------------------------------------
      CCOMP=' '
      ILAB=0
C Homelab to be verified , or defined ; for Option 6 , it must be taken
C the computer on which we are running :
      CALL GETENV('HOST',HOST)
      ILD = ICFNBL(HOST,1,40)
      ILL = LNBLNK(HOST)
      CCOMP = HOST(ILD:ILL)
      IF (INDEX(CCOMP,'afal').GT.0.OR.INDEX(CCOMP,'csf').GT.0.OR.
     +    INDEX(CCOMP,'saga').GT.0.OR.
     +    INDEX(CCOMP,'shift') .GT. 0) ILAB = 1
      IF (INDEX(CCOMP,'anas').GT.0.OR.
     +    INDEX(CCOMP,'siou').GT.0) ILAB=3
C IF nothing found , let CERN as default :
      ICLAB=ILAB
      IF (ILAB.EQ.0) ICLAB=1
      NLABDF=ICLAB
C Make the necessary corrections to the Homelab-dependant variables :
      SELPOT=CTAPSL(ICLAB)
      SELCAT=SELPOT
      SELMAG='C'
C
 999  RETURN
      END
      SUBROUTINE BKIDX11
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Initialize common /DATX11/
C  J. Boucrot 30-Nov-1996
C-----------------------------------------------------------------------
C-- DATX11 ----
      PARAMETER ( NDX11 = 50 )
      CHARACTER*80 XDATX11
      COMMON / IDATX11 /  NDATX11,NPROCL,LPROCL(4)
      COMMON / CDATX11 /  XDATX11(NDX11)
      COMMON / RSELX11 / IRFLX11,ISRUF11,ISRUL11,ISYEA11
C-----------------------------------------------------------------------
C Initialize / DATX11 / :
      NDATX11=0
      NPROCL=0
      DO 10 I=1,4
 10   LPROCL(I)=0
      DO 100 II=1,NDX11
 100  XDATX11(II)=' '
      IRFLX11=0
 999  RETURN
      END
      SUBROUTINE BKINAL(IMODE,IER)
C ----------------------------------------------------------------------
CKEY STEER
C! Steering of BOOKKEEPING job initializations
C  J. Boucrot   20-Apr-1989    - Modified 18-Oct-1996
C Called from BKSTEE
C Calls BKINBO,BKINIU,BKINIT,BKINI2,BKTASK,BKSKEY         from BOOKLIB
C Calls BKINSC,BKADMI,BKINFM                              from  BOOKLIB
C Calls BKBBUP,BKINRC,BKOPDA,BKRVAX,BKSCAINI              from  BOOKLIB
C Calls BREADC,NAMIND                                     from  BOSLIB
C  Input argument :
C  IMODE  = 0 for jobs without X11
C  IMODE  = 1 for X11 SCANBOOK jobs
C  Output argument :
C    IER  = 0  if all OK
C    IER  = 1  BOS banks error
C    IER  = 2  if other errors  ( No TASK defined , or USER not OK )
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER*80 MESG
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IER=0
C Initialise BOS :
      CALL BKINBO
C Initialise Fortran units , commons , etc ...
      CALL BKINIU
C Initialize the internal Bookkeeping banks :
      CALL BKINIT(IER)
      IF (IER.NE.0) GO TO 999
      CALL BKINI2
C Read the BOS data cards , if necessary
      IF (IW(NAMIND('BTSK')).EQ.0)  THEN
         ISAV=IW(5)
         IW(5)=LECCAR
C In order to satisfy the HP-UX compiler, we need to give the file name
         OPEN (LECCAR, FILE='fort.7', STATUS='OLD',
     +         ACCESS='SEQUENTIAL', FORM='FORMATTED')
         CALL BREADC
         CLOSE (LECCAR)
         IW(5)=ISAV
      ENDIF
C Set IBKINT flag for X11 jobs :
      IF (IMODE.EQ.1) IBKINT=-1
      IF (IW(NAMIND('BAUT')).GT.0) IBAUTO=1
C Now , interpret these data cards to determine which task
C has to be performed :
      CALL BKTASK(IPRV,IER)
      IF (IER.NE.0) GO TO 999
      CALL BKINFM
      IF (IDSEAR.GT.0) CALL BKINSC
      CALL BKSKEY (IER)
      IF (IER.NE.0) GO TO 999
C Initialise pathnames for alsoft files for all tasks but SCANBOOK:
      CALL BKUNXF
C Call the initialization of installation-dependant parameters :
      IF (IDSEAR.EQ.0) THEN
         CALL BKINSC
         CALL BKADMI(IER)
      ENDIF
      IF (IER.NE.0) GO TO 999
      IF (IBCOPY.EQ.1.OR.ITMSRC.EQ.1) GO TO 999
C
C Open and read the alebook.epio file ( ALSOFT tasks )
C
      IF (IDSEAR.EQ.0) THEN
         CALL BKOPDA('ALEBOOK ',IER)
         IF (IBUPDA.GT.0) GO TO 999
C For ALSOFT tasks LISTFILE and SPLIDBAS :
C transfer bank 'BYEA' into variables of / BKFILU / :
         CALL BKBBUP(IER)
      ENDIF
C
C Open and read the alebroot file for SCANBOOK :
C
      IF (IMODE.EQ.1.OR.IDSEAR.GT.0) THEN
         CALL BKSCAINI(IER)
      ENDIF
C
 999  RETURN
      END
       SUBROUTINE BKINBO
C-----------------------------------------------------------------------
CKEY STEER
C! Initialisation of BOS for Bookkeeping programs
C J. Boucrot  18-10-1996
C Calls BNAMES , BOS                                     from    BOSLIB
C-----------------------------------------------------------------------
      PARAMETER ( LNAMES = 3000 , LBOS = 6000000 )
      COMMON /BCS/   IW(LBOS)
C Initialize  BOS :
       CALL BNAMES(LNAMES)
       CALL BOS(IW,LBOS)
 999   RETURN
       END
      SUBROUTINE BKINFM
C-----------------------------------------------------------------------
CKEY ALBOOK / INIT
C! Defines all Bookkeeping bank formats
C  J. Boucrot  18 - Mar - 1996
C Called from BKINAL                           from BOOKLIB
C Calls BKFMT                                  from BOS77
C Calls ALFMT                                  from ALEPHLIB
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      SAVE
      DATA IKALL / 0 /
      INTEGER ALFMT
      CHARACTER FMT*1
C-----------------------------------------------------------------------
      IKALL=IKALL+1
      CALL BKFMT('BCAR','2I,(47A,2I)')
      CALL BKFMT('BDAD','2I,(3I,27A)')
      CALL BKFMT('BDAT','2I,(4A)')
      CALL BKFMT('BDES','2I,(A,19I)')
      CALL BKFMT('BDFS','2I,(3A,5I)')
      CALL BKFMT('BDRQ','2I,(I,3A)')
      CALL BKFMT('BEXA','2I,(6I)')
      CALL BKFMT('BKLI','2I,(2A,I)')
      CALL BKFMT('BKMC','2I,(2A,I)')
      CALL BKFMT('BKMD','2I,(6I)')
      CALL BKFMT('BKMN','2I,(64A)')
      CALL BKFMT('BLAS','2I,(11I)')
      CALL BKFMT('BLPR','2I,(8I)')
      CALL BKFMT('BMCL','2I,(11I)')
      CALL BKFMT('BNAM','2I,(14A)')
      CALL BKFMT('BOFS','2I,(3I)')
      CALL BKFMT('BPER','2I,(10A,8I)')
      CALL BKFMT('BPHY','2I,(38A)')
      CALL BKFMT('BPLI','2I,(3A,2I)')
      CALL BKFMT('BPRO','2I,(5A,6I)')
      CALL BKFMT('BRAN','2I,(4A,I)')
      CALL BKFMT('BRLI','2I,(3I)')
      CALL BKFMT('BRUC','2I,(4A,16I,4F)')
      CALL BKFMT('BS4B','2I,(3I,2F,I,2F,I,2F,I,2F)')
      CALL BKFMT('BSCL','2I,(11I)')
      CALL BKFMT('BSET','2I,(7A,14I)')
      CALL BKFMT('BSLU','2I,(3I,3F)')
      CALL BKFMT('BSPF','2I,(20A,4I)')
      CALL BKFMT('BTAP','2I,(3A,4I)')
      CALL BKFMT('BTHO','2I,(3A,3I)')
      CALL BKFMT('BTPN','2I,(3A,I)')
      CALL BKFMT('BXLI','2I,(2A)')
      CALL BKFMT('BXYZ','2I,(I,22F)')
      CALL BKFMT('BYEA','2I,(3I)')
      CALL BKFMT('BKM7','2I,(18A)')
      CALL BKFMT('BRDL','2I,(3A,2I)')
C
C For ALUPDATE and ALBOOK tasks : read all ALEPH BOS bank formats :
C Read all other ALEPH BOS bank formats from the database on 1st call :
C
      IF (IKALL.NE.1) GO TO 999
      IF (IBUPDA.EQ.0.AND.IBCOPY.EQ.0) GO TO 999
C
C Open the ADBSCONS DAF :
C
      CALL AOPDBS(' ',IER)
      IF (IER.NE.0) GO TO 999
C Read the formats :
      IND = ALFMT(LECFMT,'ALL ',FMT)
C
 999  RETURN
      END
      SUBROUTINE BKINI2
C ----------------------------------------------------------------------
CKEY STEER
C! Initialize the Banks needed for BOOKKEEPING jobs
C  J. Boucrot       30-Mar-1989   Modiied 11-Jun-1989
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C Called from BKINAL                            from  BOOKLIB
C Calls BKFMT                                    from BOS77
C Calls DATIMH,UHTOC                             from KERNLIB
C Must be called after BKINIT
C  Purpose : Initialization of the Bookkeeping banks used internally
C            by the DAF manipulation programs and not defined in the
C            ALEPHLIB : BCAR,BDAT,BNAM,BPER,BRLN,BSCR,BSCU
C  1/ Define  the bank formats
C  2/ Fill  the 'BDES' work bank which contains the description of
C     the meaningful length of character variables in these banks
C     in order to use them automatically in routine BKFILL
C  See BKINIT in ALEPHLIB for the description
C  of the tabular work bank 'BDES'
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- ALCONS ----
      REAL PI, TWOPI, PIBY2, PIBY3, PIBY4, PIBY6, PIBY8, PIBY12
      REAL RADEG, DEGRA
      REAL CLGHT, ALDEDX
      INTEGER NBITW, NBYTW, LCHAR
      PARAMETER (PI=3.141592653589)
      PARAMETER (RADEG=180./PI, DEGRA=PI/180.)
      PARAMETER (TWOPI = 2.*PI , PIBY2 = PI/2., PIBY4 = PI/4.)
      PARAMETER (PIBY6 = PI/6. , PIBY8 = PI/8.)
      PARAMETER (PIBY12= PI/12., PIBY3 = PI/3.)
      PARAMETER (CLGHT = 29.9792458, ALDEDX = 0.000307)
      PARAMETER (NBITW = 32 , NBYTW = NBITW/8 , LCHAR = 4)
      SAVE
      COMMON / BKWORK / JCBDES
      PARAMETER (NCOMP = 4 , NCKLI = 2 , NCRAN = 2)
      PARAMETER (NCDAT = 3 , NCNAM = 4 , NCPER = 2)
      PARAMETER (NCCAR = 15, NCDFS = 3 , NCRUC = 3)
      PARAMETER (NCTPN = 3 )
      DIMENSION DA(2),TA(2)
      CHARACTER*80 PREVL
      CHARACTER*132 FIDEF
      CHARACTER*1 TT,TESTC(NCOMP)
      DATA TESTC / 'I' , 'V' , 'C' , 'U' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C Quit immedialtely if the work bank JSBDES is not booked :
      IF (JCBDES.EQ.0) GO TO 999
C
C Add the new Bookkeeping banks to the list to be written on BOS files :
C
      LENOL=LNBLNK(LISBKB)
      IF (LENOL.EQ.0) GO TO 999
      PREVL=LISBKB(1:LENOL)
      LISBKB=PREVL(1:LENOL)//
     +       'BDATBDFSBOFSBPERBRUCBKLIBRANBLPRBYEABPLI'
C Define the special computer-depending bank number for BNAM and BCAR :
      ICOMPB=0
      TT=OPSYST(1:1)
      DO 10 IC=1,NCOMP
         IF (TT.EQ.TESTC(IC)) ICOMPB=IC
 10   CONTINUE
C
C Store the timing of the beginning of the job in /BKTIMI/
C
      CALL DATIMH(DA,TA)
      CALL UHTOC(DA,LCHAR,CDATIM,8)
      CALL UHTOC(TA,LCHAR,CSETIM,8)
C-----------------------------------------------------------------------
C Define auxiliary bank formats :
C
      CALL BKFMT('RLUM','2I,(4I,3F)')
      CALL BKFMT('LFIL','2I,(4I,8F)')
      CALL BKFMT('RXYZ','2I,(3I,8F)')
      CALL BKFMT('RLUL','2I,(4I,3F)')
      CALL BKFMT('LFUL','2I,(4I,8F)')
      CALL BKFMT('RXYU','2I,(3I,8F)')
      CALL BKFMT('RSLU','2I,(3I,3F)')
      CALL BKFMT('SLUL','2I,(3I,3F)')
      CALL BKFMT('S4BU','2I,(3I,2F,I,2F,I,2F,I,2F)')
      CALL BKFMT('RS4B','2I,(3I,2F,I,2F,I,2F,I,2F)')
C Put all BOS outputs on a dummy file
      IW(6)=LWRBLA
       LWRBLA = 0
       IW(6) = LWRBLA
CHMH       OPEN (LWRBLA,FILE='/dev/null',STATUS='NEW')
C-----------------------------------------------------------------------
C Add relevant information in work bank 'BDES'
C
      NBOK=LROWS(JCBDES)
C
C Store character variable locations and lengths in BDES :
C
C Description of Bank 'BCAR'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BCAR')
      IW(KBDES+JBDENE)=LBCARA
      IW(KBDES+JBDENC)=NCCAR
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBCAVS
      IW(KBDES+2)=JBCAVI
      IW(KBDES+3)=JBCALA
      IW(KBDES+4)=JBCATY
      IW(KBDES+5)=JBCALO
      IW(KBDES+6)=JBCAMN
      IW(KBDES+7)=JBCAIN
      IW(KBDES+8)=JBCAPD
      IW(KBDES+9)=JBCACO
      IW(KBDES+10)=JBCAON
      IW(KBDES+11)=JBCARD
      IW(KBDES+12)=JBCART
      IW(KBDES+13)=JBCACM
      IW(KBDES+14)=JBCADN
      IW(KBDES+15)=JBCAWN
C Description of Bank 'BDAT'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BDAT')
      IW(KBDES+JBDENE)=LBDATA
      IW(KBDES+JBDENC)=NCDAT
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBDADU
      IW(KBDES+2)=JBDATU
      IW(KBDES+3)=LBDATA+1
C Description of Bank 'BNAM'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BNAM')
      IW(KBDES+JBDENE)=LBNAMA
      IW(KBDES+JBDENC)=NCNAM
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBNAUN
      IW(KBDES+2)=JBNAUL
      IW(KBDES+3)=JBNARF
      IW(KBDES+4)=LBNAMA+1
C Description of Bank 'BPER'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BPER')
      IW(KBDES+JBDENE)=LBPERA
      IW(KBDES+JBDENC)=NCPER
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBPEPA
      IW(KBDES+2)=JBPEPN
C Description of Bank 'BDFS'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BDFS')
      IW(KBDES+JBDENE)=LBDFSA
      IW(KBDES+JBDENC)=NCDFS
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBDFTC
      IW(KBDES+2)=JBDFLO
      IW(KBDES+3)=JBDFNP
C Description of Bank 'BRUC'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BRUC')
      IW(KBDES+JBDENE)=LBRUCA
      IW(KBDES+JBDENC)=NCRUC
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBRUVS
      IW(KBDES+2)=JBRUTT
      IW(KBDES+3)=JBRULF
C Description of Bank 'BKLI'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BKLI')
      IW(KBDES+JBDENE)=LBKLIA
      IW(KBDES+JBDENC)=NCKLI
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBKLKN
      IW(KBDES+2)=JBKLKC
C Description of Bank 'BRAN'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BRAN')
      IW(KBDES+JBDENE)=LBRANA
      IW(KBDES+JBDENC)=NCRAN
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBRAIN
      IW(KBDES+2)=JBRANI
C Description of Bank 'BTPN'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BTPN')
      IW(KBDES+JBDENE)=LBTPNA
      IW(KBDES+JBDENC)=NCTPN
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBTPVS
      IW(KBDES+2)=JBTPFO
      IW(KBDES+3)=JBTPRN
C
C Update # of rows of work bank JCBDES
C
      IW(JCBDES+LMHROW)=NBOK
C
 999  RETURN
      END
      SUBROUTINE BKINIT(IER)
C ----------------------------------------------------------------------
C! Initialization of Data Bookkeeping
CKEY ALBOOK  INIT / INTERNAL
C  E. Locci  -   J. Boucrot       15-Sep-1988     Modified 30-Aug-1989
C Calls BKFMT,WBANK                                from BOS77
C Calls BKINST                                     from ALEPHLIB
C Called by BKINJB                                 from ALEPHLIB
C  Purpose : Initialization of the Bookkeeping package , namely :
C  1/ Defines the Bookkeeping bank formats and lists
C  2/ Fills the 'BDES' work bank which contains the description of
C     the meaningful length of character variables in Bookkeeping banks
C     in order to use them automatically in routine BKFILL
C  3/ Define the installation-dependant parameters
C  Output argument :
C     IER = 0 if all OK
C     IER = 1 if no room to book work bank 'BDES'
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
      COMMON / BKWORK / JCBDES
      PARAMETER ( NBKBK = 15 )
      PARAMETER ( NCPRO = 4 , NCSPF = 2)
      PARAMETER ( NCSET = 3 , NCTAP = 3)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C Store in /BKCONS/ the name of the computer on which the program
C is currently executing :
      IER=0
      CALL BKNAMC(OPSYST)
C Default value of DATNAT , if not yet determined
      DATNAT='D'
C Define variables in  common /BKPPNB/
      NPERPR=0
C-----------------------------------------------------------------------
C Build the time-dependant part of all Bookkeeping output files
C which will be written during this job :
C
      CALL BKTIMC(TIMNAM)
C No output streams by default ( must be defined by BKINJB )
      NFILOU=0
C
C Store the list of Bookkeeping banks to be written on BOS files :
C
      LISBKB = 'BPROBRLIBSETBSPFBTAP'
C
C Define the format of Bookkeeping output files :
C PLEASE NEVER CHANGE IT !
C
      FORMBK='CARD'
C
C Define the default Fortran logical unit for Bookkeeping output file :
C
      LBOORL=79
C
C Set the default value of the IBM disk mode for the Bookkeeping files :
C
      BOKMOD=' *'
C
C Define the installation-dependant parameters :
C
      CALL BKINST
C-----------------------------------------------------------------------
C Book work bank 'BDES'
C
      JCBDES=0
      CALL WBANK(IW,JCBDES,LMHLEN+LBDESA*NBKBK,*990)
      IW(JCBDES+LMHCOL)=LBDESA
      IW(JCBDES-3)=INTCHA('BDES')
      NBOK=0
C
C Store character variable locations and lengths in BDES :
C
C Description of Bank 'BPRO'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BPRO')
      IW(KBDES+JBDENE)=LBPROA
      IW(KBDES+JBDENC)=NCPRO
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBPRPN
      IW(KBDES+2)=JBPROP
      IW(KBDES+3)=JBPRNN
      IW(KBDES+4)=JBPRVN
C Description of Bank 'BSET'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BSET')
      IW(KBDES+JBDENE)=LBSETA
      IW(KBDES+JBDENC)=NCSET
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBSEAD
      IW(KBDES+2)=JBSEAU
      IW(KBDES+3)=JBSEFR
C Description of Bank 'BSPF'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BSPF')
      IW(KBDES+JBDENE)=LBSPFA
      IW(KBDES+JBDENC)=NCSPF
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBSPCO
      IW(KBDES+2)=JBSPKC
C Description of Bank 'BTAP'
      NBOK=NBOK+1
      KBDES=KROW(JCBDES,NBOK)
      IW(KBDES+JBDEBN)=INTCHA('BTAP')
      IW(KBDES+JBDENE)=LBTAPA
      IW(KBDES+JBDENC)=NCTAP
      KBDES=KBDES+JBDELS-1
      IW(KBDES+1)=JBTAVS
      IW(KBDES+2)=JBTAFO
      IW(KBDES+3)=JBTARN
C
C Update # of rows of work bank JCBDES
C
      IW(JCBDES+LMHROW)=NBOK
      GO TO 999
C Not enough space
 990  LOUT=IW(6)
      IF (LOUT.NE.0) WRITE (LOUT,1001)
 1001 FORMAT (//' +++ BKINIT +++ No space to book work bank BDES')
      IER=1
C
 999  RETURN
      END
      SUBROUTINE BKINIU
C-----------------------------------------------------------------------
CKEY STEER
C! Initialization of Variables for Bookkeeping jobs
C J. Boucrot  07-12-1988
C  Modified  AM. Lutz      30-MAR-1990
C Called from BKINAL                                  from BOOKLIB
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- RSLEP1 ----
      PARAMETER (NSL1 = 5 )
      CHARACTER RSELEP1*10,PHYKL1*200
      COMMON / LEP1RS / IRSLEP1
      COMMON / CEP1RS / RSELEP1(NSL1),PHYKL1(NSL1)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
C-----------------------------------------------------------------------
C Initialize all input/output Fortran logical unit # ( / BKLUPD / )
      LECCAR=7
      LECDAT=10
      LECDFN=11
      LECRQL=12
      LECDAF=13
      LECPHY=14
      LECTXT=15
      LECRQF=16
      LECSEQ=17
      LECVMA=18
      LEBCAR=19
      LECINT=5
      LECMAK=9
      LECKIN=8
      LECNWP=60
      LECPRO=61
      LECXYZ=62
      LECPLI=63
      LECYEA=64
      LECFMT=97
      LECTDR=81
C
      LWRINT=6
      LWRUSR=40
      LWRSPY=95
      LWRMGR=94
      LWRBLA=93
      LWRFLI=92
      LWRJSU=91
      LWRRQU=90
      LWRERR=89
      LWRSEQ=88
      LWRFRI=87
      LWRFRV=86
      LWRSQP=85
      LWRTMS=84
      LWRDBG=83
      LWRRAW=82
      LWRSRU=53
      LWRINS=80
      LWRFIL=66
      LWRTMP=78
      LWBRK7=96
      LWRCAR=99
      LWRUUU=77
      LWRFER=79
C
      IDEBUG=0
      IBKINT=0
      IBPRUS=2
      USFNAM=' '
      USERLG='BATCH'
C
C Initialize some counters in / BKFILU /
C
      NOVERR=0
      NFILRQ=0
      ICURFI=0
      NMODIF=0
      NSCRAD=0
      LENBOK=0
      NBDFDO=0
      NBDFOL=0
      NBKSCR=0
      NAMRIN='DIFFRINF CARDS A'
      IFRONL=999999
      ILRONL=-1
      NRUMIN=2400
      NRUMAX=999999
      LRUNMC=2000
      NRULEP=5909
      ITOLER=250
      IROUND=250
      EROUND=0.25
      ISCQUI=0
      NLEPSF=0
      ITMKOD=0
      MINSIC=16643
      MIRU94=25100
      MIR4BU=35765
      MXLFI1=3042
      MXLRU1=37853
      MX94NR=30381
      CALL VZERO(ILEPEN,NLEPE)
      DO 60 IEE=1,NLEPE
 60   ILEPEN(IEE)=0
      IENV97=0
      ENG197=133.
      ENG297=182.5
      ITOL97=4000
      TOLE97=4.
      NDBTOT=0
      NPEDMI=0
      NPEDMX=0
      DO 65 ISK=1,NRYEA
         LISYEA(ISK)=0
         LISTFF(ISK)=0
         LISLFI(ISK)=0
         NPERMI(ISK)=0
         NPERMX(ISK)=0
         LISNRB(ISK)=0
         PERDBS(ISK)=' '
         BANDBS(ISK)=' '
 65   LISFRU(ISK)=0
      IDASEL=0
      DNADAT(1)='KIN '
      DNADAT(2)='RAW '
      DNADAT(3)='POT '
      DNADAT(4)='DST '
      DNADAT(5)='MINI'
      DNADAT(6)='MICR'
      DNADAT(7)='NANO'
      DNADAT(8)='UNKN'
C Default values for VAX files informations in SCANBOOK :
      ISVAXC=0
      TIMFVX=' 1-JAN-1990 00:00:00.00'
      VAXMCH='ALWS  '
      NAMLIF=' '
      NAMTDR=' '
      OKEDIR='YES '
      CARDSF=' '
C Default values for Physics Groups ( for Run Selection ) :
      NGROUF=0
      NL2GRO=0
      DO 71 IGR=1,NGPHY
         IPGVAL(IGR)=0
         DO 68 KR=1,4
 68       LEPSGR(KR,IGR)=0
         KEYWPH(IGR)=' '
         MANAPH(IGR)=' '
         CHOIPH(IGR)=' '
          KEYGL2(IGR)=' '
 71      GROUPH(IGR)=' '
      SCAVER='16.8'
      MINLAS=9
      NANLAS=111
C
C Initialize the keywords in / BKTSKC / :
C
      IBUPDA=0
      IBSPLI=0
      IBMAKJ=0
      NBREDO=0
      IBCOPY=0
      IDSEAR=0
      ITMSRC=0
      IFAKFA=0
      IBKSQL=0
      IBAUTO=0
      IBLIST=0
      IONLIN=0
C
C Initialize the keys and counters in / BKKEYS / :
C
      IKEYOK=0
      NTAPKY=0
      NDSNKY=0
      NCCOMP=0
      IMCDAT=1
      ENGLEP=-100.
      ISDATE=0
      ISDATL=0
      ISPHYS=0
      KINCOD=0
      ISEED1=0
      ISEED2=0
      ISEED3=0
      ISELPA=-1
C  in  /BKPRSL /  :
      ISRUNF=0
      ISRUNL=999999
      LASRUR=0
      IPRONL=0
      IBFCOM=0
      ISORLE=0
      ISYEAR=0
      IB1RUN=0
      ISELPH=1
      IGEOYR=0
      IGALPR=0
      IPRGVR=0
      ISPERF=0
      IPHYGR=0
      IPSROU=1
      IWFILI=1
      IMINPR=0
      INANPR=0
      IBTQSE=2
      LASTPR=1
      IZASKD=-1
      IZTOTC=0
      IDTRQU=0
      NDTRQU=0
      IDLCRW=0
      IEPRAW=0
      IDLRAW=0
      IDLDAT=0
      IALISE=0
      ICERCO=0
      ILEP2S=0
      IFBOOK=0
      IDATSL=0
      IJULSL=0
      IPROSL=0
      IRAWAA=0
      IRAWD1=0
      IRAWD2=0
      IYEASL=0
      IRUNSL=0
      IFILSL=0
      ILP195=0
      IBREDO=0
      INIP97=0
      IROW97=0
      IGRLEP=0
C
C Initialize some char.var. in / BKKEYS /
C
      SELCAT=' '
      SELSTA=' '
      SELDAT=' '
      SELMAG=' '
      SELFOR='EPIO'
      SELMAN=' '
      SELTIM=' '
      SELCOM(1)=' '
      SELUSR=' '
      SELLOC=' '
      SELPHY=' '
      PHYKEY=' '
      SELINS=' '
      SELRAN=' '
      CODM97=' '
      CKEY97=' '
      DSKSPY='B'
      DO 45 IS=1,NTPMX
         LISTAP(IS)=' '
 45   CONTINUE
      DO 46 IS=1,NDSMX
         LISDSN(IS)=' '
 46   CONTINUE
      DO 47 IL=1,NDRQU
 47   DETRQU(IL)=' '
C Initialize / EXABYT / :
      NEXAFO=0
      IDSEXA=0
      IDSEPR=0
      IBDFRW=0
      IDISEX=0
      CALL VZERO(LISEXA,NEXAT)
C
C Initialize /DATAFOUN/ :
      NDATFOUN=0
      NTOTRUNS=0
      CALL VZERO(IBDSEL,NTODT)
      CALL VZERO(IEDSEL,NTODT)
      CALL VZERO(LISRUSEL,NTODT)
      CALL VZERO(LISORTRU,NTODT)
      CALL VZERO(LISKINSL,NTODT)
      CALL VZERO(LISALRUN,NTODT)
      CALL VZERO(LISALSOR,NTODT)
      CALL VZERO(LISENGLP,NTODT)
      CALL VZERO(LISALBDF,NTODT)
C Initialize / LEP1RS / :
      IRSLEP1=0
      DO 100 IK=1,NSL1
         RSELEP1(IK)=' '
         PHYKL1(IK)=' '
 100  CONTINUE
      RSELEP1(1)='Heavy Flav'
      PHYKL1(1)='VD.AND.HE.AND.HH.AND.HM.AND.HD'
      PHYKL1(1)=PHYKL1(1)(1:LNBLNK(PHYKL1(1)))
C Initialize / MASGEN / :
      DO 150 IM=1,NMAS
         LIGENS(IM)=0
         CMGENS(IM)=' '
 150  CONTINUE
      CALL VZERO(IROBKM7,NTKM7)
      NGENMA=2
      CMGENS(1)='W    '
      CMGENS(2)='Higgs'
      LIGENS(1)=5035
      LIGENS(2)=7020
      ISELGEN=0
      ISELMAS=0
      ISELROB7=0
      CALL BKIDX11
 999  RETURN
      END
      SUBROUTINE BKINJB(PRNAM,LUNIN,NOUT,LUNOU,MODOU,FTYP,NADFI,FNOUT,
     +                  IER)
C-----------------------------------------------------------------------
C! Initialization of Bookkeeping at start of job
CKEY ALBOOK INIT JOB / USER
C Called from production jobs :
C  If FILI/FILO cards are used to define the input/output streams :
C    after  the call to ACDARG concerning the current output stream
C    before the call to AOPENW concerning the current output stream
C  If not : called after i/o  initialisation
C Calls BKINIT,BKFTCA                                from  ALEPHLIB
C Author : J. Boucrot    15-Nov-1988   modified 09-May-1989
C Input arguments :
C  PRNAM  = Name of the production program ( KINGAL,GALEPH,JULIA,
C                                            ALPHA, ... )
C  LUNIN  = Fortran unit number for the input stream to the
C           production program , if any ( JULIA and ALPHA only )
C         = 0 if no input stream , or call from GALEPH or KINGAL
C  NOUT   = Current output stream #  for this production
C  LUNOU  = Fortran logical unit for the current output stream
C  MODOU  = 0 if the output data stream is defined using AOPENW
C         = 1 if not
C  FTYP   = 'EPIO' or 'NATI' for the current output stream
C  NADFI  = Nature of data written on the current output stream
C                      coded as follows :
C              1 = Kinematics    2 = RAW data      3 = POT
C              4 = DST           5 = MiniDST       6 = MicroDST
C              7 = NanoDST
C                  Important convention :
C     If the output stream  K is the Event Directory of another
C     output stream J , then put  NADFI(K) = 100 + NADFI(J)
C  FNOUT  = Name of the current output stream ( cf. ACDARG )
C
C Output argument :
C    IER  = 0 if all OK
C         = 1 if  no room to book banks
C-----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- EVEHJJ ----
      PARAMETER(JEVEEN=1,JEVERN=2,JEVERT=3,JEVEDA=4,JEVETI=5,JEVEEV=6,
     +          JEVEM1=7,JEVEM2=8,JEVEM3=9,JEVEM4=10,JEVETY=11,
     +          JEVEES=12,JEVETE=13,LEVEHA=13)
      COMMON / KSECDA / IKINSEC,IKINVSN,IEVNTAC,XSECTAC,XSECERR
      CHARACTER*(*) FNOUT,FTYP
      CHARACTER*80 FNAMI,ATYPI,FDEVI
      CHARACTER*8 PRNAM
      INTEGER ALGTYP
      LOGICAL FIRST
      DATA FIRST /.TRUE./
C-----------------------------------------------------------------------
      IER=0
C Check if the 'BOOK' data card was activated
      IF (IW(NAMIND('BOOK')).EQ.0) GO TO 999
      IF (NOUT.LE.0) GO TO 999
C Various initializations done on first call only :
      IF (.NOT.FIRST) GO TO 300
      FIRST=.FALSE.
      PRNAME=PRNAM
C
C Initialization of Bookkeeping banks
C
      CALL BKINIT(IER)
      IF (IER.NE.0) GO TO 999
C
      DO 2 I=1,NFILMX
         NADTOU(I)=0
         LISLOU(I)=0
         NCALLS(I)=0
         ITAPOU(I)=0
         IFILOU(I)=0
         IEVDOU(I)=0
         NBYTOT(I)=0
         NEVRUN(I)=0
         LPAROU(I)=0
 2    CONTINUE
      NPAROU=0
      IKINSEC=0
      IKINVSN=0
      IEVNTAC=0
      XSECTAC=0.
      XSECERR=0.
C-----------------------------------------------------------------------
C For each call , update variables of common /BKFILS/
 300  NFILOU=MAX0(NFILOU,NOUT)
      NADTOU(NOUT)=NADFI
      LISLOU(NOUT)=LUNOU
      IF (MODOU.NE.0) FORMFI(NOUT)=FTYP
 999  RETURN
      END
      SUBROUTINE BKINPROC
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Gets selected processing levels for X11
C  J. Boucrot 30-Nov-1996
C Called from BKVRX11                           from BOOKLIB
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATPROC ----
      PARAMETER ( NPROC = 4 )
      COMMON / DATPROC / NPROCD(NPROC),IFIDAC(NPROC),ILADAC(NPROC),
     +                   IJUVRC(NPROC),IMNVRC(NPROC),ICOVRC(NPROC),
     +                   IJUSLC(NPROC)
C-- DATX11 ----
      PARAMETER ( NDX11 = 50 )
      CHARACTER*80 XDATX11
      COMMON / IDATX11 /  NDATX11,NPROCL,LPROCL(4)
      COMMON / CDATX11 /  XDATX11(NDX11)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER*4 PROCS(4)
      CHARACTER PROX*20
      DATA PROCS /'TEST', 'LAST', 'PREV' , 'OLD ' /
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) GO TO 999
      IF (IDASEL.LE.2) GO TO 999
      IF (NDATX11.LE.0) GO TO 999
C
C Loop on lines of common / DATX11 /
C
      DO 100 IK=1,NDATX11
         PROX=XDATX11(IK)(1:20)
         CALL CLTOU(PROX)
C Find which processing level was selected :
         DO 50 KK=1,4
            IF (INDEX(PROX,PROCS(KK)).EQ.0) GO TO 50
            IPRL=KK-1
            IF (KK.EQ.1) IPRL=100
            NPROCL=NPROCL+1
            LPROCL(NPROCL)=IPRL
 50      CONTINUE
 100  CONTINUE
      IF (NPROCL.EQ.1) THEN
         LASTPR=LPROCL(NPROCL)
         NPROCL=0
      ENDIF
 999  RETURN
      END
      SUBROUTINE BKINRQ(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK INIT
C! Scans the list of "Request files" received from the BOOKKEEP reader
C J. Boucrot  07-12-1988
C Completely rewritten 10-Oct-1995 for UNIX version
C Called from BKUPDF                                    from BOOKLIB
C Calls BKMESG,BKCTIM,BKDKLI,PRPSLS                     from BOOKLIB
C  Output argument :
C   IER = 0  all OK
C   IER = 1  no new files , UPDATE DAF not needed .
C   IER = 2  unable to read the list of files , abort the job .
C   IER = 3  too many Request files ( this should never happen ! )
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      SAVE
      PARAMETER (NOK = 5)
      CHARACTER LINCH*80,MESG*80,DATNM*11
      CHARACTER*3 OKNAM(NOK),FIL3
      CHARACTER*1 BLAN
      PARAMETER ( NCOPR = 100 )
      CHARACTER*6 COPYTODO,COPYDONE,COPYTP
      COMMON / REDCOPS / COPYTODO(NCOPR),COPYDONE(NCOPR),COPYTP(NCOPR)
      COMMON / IREDCOP / NCOPYOK,NTOCOPY,NFITODO(NCOPR)
      DATA OKNAM / 'BOK' , 'SCR' , 'MOD' , 'SYS' , 'COP' /
      DATA BLAN / ' ' /
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      PARAMETER ( LNNFI = 30 )
      CHARACTER CHEKO*7,NAMPR*60,FILE*60,DATE*12,SIZE*9,FILNM*60
      DATA CHEKO / 'BMODT.0' /
C-----------------------------------------------------------------------
      IER=2
      MESG=' '
      NTOCOPY=0
      NCOPYOK=0
      DO 1 NN=1,NCOPR
         COPYTODO(NN)=' '
         COPYDONE(NN)=' '
         COPYTP(NN)=' '
         NFITODO(NN)=0
 1    CONTINUE
C
C On UNIX , the list of Reqfiles must be :
C                -  built in the ALS_STAT directory using ls -L
C                -  for the ALS_RQF directory of Request Files
C                -  then opened for further read
C
      NAMPR=' '
      NAMPR=ALS_STAT(1:ILSTAT)//'allsysd.listenew'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      CALL SYSTEM(' rm -f '//NAMPR)
      CALL SYSTEM(' ls -L -o '//ALS_RQF(1:LNBLNK(ALS_RQF))//
     +            ' > '//NAMPR)
      OPEN ( LECRQL , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C Files from the Online Logbook must be processed first .
C Read a first time the listfile on Fortran unit LECRQL :
C
 2    READ ( LECRQL , '(A)' , END=9   , ERR=900 )   LINCH
C Compare the timing of this file w.r.t. the database writing :
      FILNM=' '
      CALL PRPSLS(LINCH,FILE,DATE,SIZE)
      CALL CLTOU(FILE)
      IF (INDEX(FILE,CHEKO).EQ.0) GO TO 2
      CALL BKDKLI(DATE,ITIMC)
      FILNM=FILE(1:LNBLNK(FILE))
      IF (ITIMC.NE.0) GO TO 2
      NFILRQ=NFILRQ+1
      IF (NFILRQ.GT.NRQFMX) GO TO 920
      NAMRQF(NFILRQ)=FILNM(1:LNNFI)
      FORMRQ(NFILRQ)=FILNM(5:5)
      DSKREQ=FILNM(19:19)
      GO TO 2
C
C end of first read : rewind and read again :
C this time the Online Logbook files must be avoided .
C
 9    REWIND (LECRQL)
 10   READ ( LECRQL , '(A)' , END=100 , ERR=900 )   LINCH
C Compare the timing of this file w.r.t. the database writing :
      FILNM=' '
      CALL PRPSLS(LINCH,FILE,DATE,SIZE)
      CALL CLTOU(FILE)
      IF (INDEX(FILE,CHEKO).NE.0) GO TO 10
      CALL BKDKLI(DATE,ITIMC)
      FILNM=FILE(1:LNBLNK(FILE))
      IF (ITIMC.NE.0) GO TO 10
C Check if it is a name corresponding to a Bookkeeping Request file :
      FIL3=FILNM(2:4)
      DO 20 I=1,NOK
         IF (FIL3.EQ.OKNAM(I)) GO TO 30
 20   CONTINUE
C non-standard file , send a warning :
      IF (FIL3.NE.'UNQ') THEN
         IF (IBAUTO.EQ.0) PRINT 1001,FILNM
         WRITE (LWRDBG,1001) FILNM
      ENDIF
C
      GO TO 10
 30   CONTINUE
C
C Check if the time-dependant part of the name is OK :
C ( for files from production jobs only )
C
      IF (FIL3.NE.'BOK'.OR.FILNM(1:4).EQ.'LBOK') GO TO 31
      CALL BKCTIM(FILNM(7:17),IY,IM,ID,IH,IMI,IS)
      IF (IY+IM+ID.EQ.0) GO TO 10
 31   CONTINUE
C
C All OK : this file has to be taken into account during this UPDATE DAF
C Store its name in / BKFILU / :
C
 40   NFILRQ=NFILRQ+1
      IF (NFILRQ.GT.NRQFMX) GO TO 920
      NAMRQF(NFILRQ)=FILNM(1:LNNFI)
      FORMRQ(NFILRQ)=FILNM(5:5)
C special patch for BSCRATCH files :
      IF (FILNM(5:5).EQ.'A') FORMRQ(NFILRQ)='T'
      DSKREQ=FILNM(19:19)
      GO TO 10
C ----------------------------------------------------------------------
C
C Normal exit : end of input listfile
C
 100  IF (NFILRQ.EQ.0) GO TO 910
      IER=0
      IF (IBAUTO.EQ.0) PRINT 1002,NFILRQ
      WRITE (LWRDBG,1002) NFILRQ
      GO TO 999
C-----------------------------------------------------------------------
C Processing of errors :
C
 900  MESG=' ++ Error in BKINRQ : unable to read'//
     +' the file containing the Request file names'
      LM=LNBLNK(MESG)
      CALL BKMESG(BLAN,LECRQL,MESG(1:LM))
      GO TO 999
C
 910  IER=1
      MESG=' ++ BKINRQ : no new Request files'//
     +     ' found ; no database update today !'
      LM=LNBLNK(MESG)
      WRITE (LWRRQU,1003) MESG(1:LM)
      CLOSE (LWRRQU)
      CALL BKMESG(LINCH,LECRQL,MESG(1:LM))
      GO TO 999
C
 920  IER=3
      MESG=' ++ In BKINRQ : too many new files ,'//
     +' the UPDATE DAF cannot be complete'
      LM=LNBLNK(MESG)
      CALL BKMESG(LINCH,NFILRQ,MESG(1:LM))
C
 999  CLOSE (LECRQL)
      RETURN
 1001 FORMAT (/'  === BKINRQ === Non-standard Request file',
     +      ' found , name is : ',2X,A20,' === SKIPPED ! ===')
 1002 FORMAT (/'  === BKINRQ === End of processing ; Number of',
     +         ' New Request Files =',I6)
 1003 FORMAT (A)
      END
      SUBROUTINE BKINSC
C-----------------------------------------------------------------------
CKEY STEER
C! Defines site-dependant quantities for SCANBOOK
C  J. Boucrot        06-Apr-1989
C  Modified  AM. Lutz      30-MAR-1990
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C Called from BKINAL                                       from BOOKLIB
C Calls  BKINTD                                            from BOOKLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      SAVE
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-----------------------------------------------------------------------
C Here one defines the file names for the Bookkeeping databases :
      NAMSQB=' '
      CALL GETENV('ALDATA',ALDATA)
      ILDATA = LNBLNK(ALDATA)
      CALL GETENV('ALEDIR',ALEDIR)
      ILEDIR = LNBLNK(ALEDIR)
      ALMCDA = ALDATA
      ILMCDA = ILDATA
      ALMCED = ALEDIR
      ILMCED = ILEDIR
      CALL GETENV('ALBOOK',ALBOOK)
      IF (ALBOOK .EQ. ' ') THEN
        CALL GETENV('ALEPH',ALBOOK)
        ILBOOK = LNBLNK(ALBOOK)
        ALBOOK(ILBOOK+1:) = '/book'
      END IF
      ILBOOK = LNBLNK(ALBOOK)
      NAMSQB=ALBOOK(:ILBOOK)//'/alebook.epio'
      ISCTS=0
      IF (IDSEAR.GT.0.AND.IW(NAMIND('BTST')).GT.0) ISCTS=1
      IF (ICSTS.EQ.1) CALL BKUNXF
      IF (IBUPDA.GT.0.OR.IBSPLI.GT.0.OR.ISCTS.EQ.1.OR.IBLIST.EQ.1.
     +    OR.IBKSQL.EQ.1) THEN
         NAMSQB=' '
         NAMSQB=ALS_TEMP(1:ILTEMP)//'alebook.epio'
         NAMSQB=NAMSQB(1:LNBLNK(NAMSQB))
      ENDIF
      FORSQB='EPIO'
      IF (IDSEAR.GT.0) CALL BKINTD
C-----------------------------------------------------------------------
C Define site-dependant quantities for POT and DST cartridges :
      NLABOK=11
      CLISTL(1)='CERN      '
      CLISTL(2)='Germany'
      CLISTL(3)='IN2P3'
      CLISTL(4)='Saclay'
      CLISTL(5)='United Kingdom'
      CLISTL(6)='Florida'
      CLISTL(7)='Wisconsin'
      CLISTL(8)='Italy'
      CLISTL(9)='Beijing'
      CLISTL(10)='Barcelona'
      CLISTL(11)='Copenhagen'
      CTAPSL(1)='AS'
      CTAPSL(2)='AD'
      CTAPSL(3)='AF'
      CTAPSL(4)='AF'
      CTAPSL(5)='AG'
      CTAPSL(6)='AH'
      CTAPSL(7)='AH'
      CTAPSL(8)='AI'
      CTAPSL(9)='AH'
      CTAPSL(10)='AH'
      CTAPSL(11)='AH'
      DO 5 IK=NLABOK+1,NLABS
         CTAPSL(IK)=' '
         CLISTL(IK)=' '
 5    CONTINUE
C
C Default values :
      NLABDF=1
      DISKIB='PUBXU '
      SELPOT=CTAPSL(NLABDF)
      ILABCH=NLABDF
C
C Definition of TMS libraries and locations :
C
      NTMSLI=19
      TMSLIB(1)='PIT  '
      TMSLIB(2)='VAULT'
      TMSLIB(3)='REST '
      TMSLIB(4)='HEIDE'
      TMSLIB(5)='MUNIC'
      TMSLIB(6)='SIEGE'
      TMSLIB(7)='MAINZ'
      TMSLIB(8)='LYON '
      TMSLIB(9)='PARIS'
      TMSLIB(10)='RAL  '
      TMSLIB(11)='BARCE'
      TMSLIB(12)='BEIJI'
      TMSLIB(13)='FLORI'
      TMSLIB(14)='WISCO'
      TMSLIB(15)='CINEC'
      TMSLIB(16)='1    '
      TMSLIB(17)='COPEN'
      TMSLIB(18)='B186 '
      TMSLIB(19)='REST '
C Definition of locations :
      TMSLAB(1) ='ALEPH Pit'
      TMSLAB(2) ='CERN Vaul'
      TMSLAB(3) =' ?????   '
      TMSLAB(4) ='Heidelber'
      TMSLAB(5) ='MPI-Munic'
      TMSLAB(6) ='Siegen   '
      TMSLAB(7) ='Mainz    '
      TMSLAB(8) ='Lyon     '
      TMSLAB(9) ='Saclay   '
      TMSLAB(10)='RAL      '
      TMSLAB(11)='Barcelona'
      TMSLAB(12)='Beijing  '
      TMSLAB(13)='Florida  '
      TMSLAB(14)='Wisconsin'
      TMSLAB(15)='CINECA   '
      TMSLAB(16)='RobotCERN'
      TMSLAB(17)='Copenhage'
      TMSLAB(18)='Archived '
      TMSLAB(19)='CERN Vaul'
C Homelab code for these locations :
      IHOLAB(1) = 1
      IHOLAB(2) = 1
      IHOLAB(3) = 0
      IHOLAB(4) = 2
      IHOLAB(5) = 2
      IHOLAB(6) = 2
      IHOLAB(7) = 2
      IHOLAB(8) = 3
      IHOLAB(9) = 4
      IHOLAB(10)= 5
      IHOLAB(11)= 10
      IHOLAB(12)= 9
      IHOLAB(13)= 6
      IHOLAB(14)= 7
      IHOLAB(15)= 8
      IHOLAB(16)= 1
      IHOLAB(17)= 11
      IHOLAB(18)=1
      IHOLAB(19)=1
C
      DO 9 IL=NTMSLI+1,NTMLI
         TMSLIB(IL)=' '
         TMSLAB(IL)=' '
         IHOLAB(IL)=0
 9    CONTINUE
 999  RETURN
      END
      SUBROUTINE BKINST
C ----------------------------------------------------------------------
C! Defines installation-dependant parameters for Bookkeeping
CKEY ALBOOK  INIT JOB / INTERNAL
C  Author J. Boucrot  12-Dec-1989
C  Called from BKINIT                              from ALEPHLIB
C  Calls ALSTIN,ACARD1,ACARD2                      from ALEPHLIB
C  The values given below are parameters for the CERN computers
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
       INTEGER ACARD1,ACARD2
C ----------------------------------------------------------------------
C
C The default value of PRONOD may be overwritten by the data card BPRC :
C
        IBPRC=NLINK('BPRC',0)
        IF (IBPRC.NE.0) CALL ALSTIN(IW(IBPRC+1),IW(IBPRC),PRONOD)
C
C ----------------------------------------------------------------------
C Default value for BOKNOD may be overwritten by the data card 'BNOD'
C ( useful to send the Bookkeeping files on other computers , or on
C two different nodes )  . Syntax is e.g. :
C            BNOD  ' CERNVM | FRSAC12'
C
       NCOMPB=1
       IF (ACARD1('BNOD').EQ.0) GO TO 60
       NPAR=0
 10    NPAR=NPAR+1
       IF (NPAR.GT.2) GO TO 50
       IF (ACARD2(NPAR,BOKNOD(NPAR)).EQ.0) GO TO 50
       GO TO 10
 50    NCOMPB=NPAR-1
 60    CONTINUE
C
       RETURN
       END
      SUBROUTINE BKINTD
C-----------------------------------------------------------------------
CKEY SCANBOOK STEER
C! Reads the file defining local test SCANBOOK database
C  J. Boucrot        26-Mar-1996
C Called from BKINSC
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      SAVE
      LOGICAL LEX
      CHARACTER LINCH*60,SCTEST*16
      DATA SCTEST / 'scandir.testname' /
C-----------------------------------------------------------------------
      IF (IDSEAR.EQ.0) GO TO 999
      NAMTDR=' '
C Open  the file SCTEST , if it exists , in the working directory :
      INQUIRE ( FILE = SCTEST , EXIST = LEX )
      IF (.NOT.LEX) GO TO 999
      OPEN ( LECTDR , FILE = SCTEST , STATUS = 'OLD' , ERR = 999 )
      REWIND ( LECTDR )
C Read the file :
      READ ( LECTDR , '(A)' , ERR = 999 , END = 999 )  LINCH
      NAMTDR=LINCH(1:LNBLNK(LINCH))
      CLOSE ( LECTDR )
C On UNIX only : build the new NAMSQB name for reference SCANBOOK databa
      NAMSQB=' '
      NAMSQB=NAMTDR(1:LNBLNK(NAMTDR))//'alebook.epio'
C
 999  RETURN
      END
      SUBROUTINE BKINTI(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK INIT
C! Gets informations on  UPDABOOK  timings
C J. Boucrot  30-03-1989   modified 14-11-1989 for BKDACI
C UNIX Version 06-Oct-1995
C Called from BKUPDF                                from BOOKLIB
C Calls ALSTIN,BKTIMN                               from ALEPHLIB
C Calls BKMESG,BKPOIN,BKDACI                        from BOOKLIB
C  Warning : this subroutine cannot run on VAX !
C  --------  It relies on the structure of the file description given
C            by the LISTFILE command of VM/CMS
C
C  Purpose : reads informations transmitted by the  UPDABOOK  exec :
C            precise timing of the access in write mode to the ALSOFT
C            Disk . No new "request file" can be received after this
C            time , to be processed by the present  UPDABOOK  job .
C            This timing info is transmitted on  Fortran unit LECDAT
C Output argument :
C IER =  0 if all OK
C     =  1 if the old DAF is more recent than the date of disk attach
C        ( this should NEVER be the case ! )
C     =  2 if one of the necessary files is unreadable
C     if IER # 0  , the  UPDABOOK  job must be aborted
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
      CHARACTER BKINF*80,MESG*80,OLDAY*8,OLTIM*8,FIDAT*60,BKTIM*80
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Decode and store in /BKTIMI/ the timing of the last ALEBOOK DAF
C modification , stored in the last row of the 'BDAT' bank :
C
      IER=2
      FIDAT=' '
      BKTIM=' '
      FIDAT=ALS_STAT(1:ILSTAT)//'accdbase.date'
      FIDAT=FIDAT(1:LNBLNK(FIDAT))
      OPEN ( LECDAT , FILE = FIDAT , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
      CALL BKPOIN(LECDAF,'BDAT',1,JBDAT)
      IF (JBDAT.LE.0) GO TO 201
      NRDAT=LROWS(JBDAT)
      IF (NRDAT.EQ.0) GO TO 201
      KBDAT=KROW(JBDAT,NRDAT)
      CALL ALSTIN(IW(KBDAT+JBDADU),JBDATU-JBDADU,OLDAY)
      CALL ALSTIN(IW(KBDAT+JBDATU),LBDATA-JBDATU+1,OLTIM)
      CALL BKDACI(2,OLDAY,OLTIM,IDOLD,ISOLD)
      IYEAOL=IDOLD/10000
      ITOL=IDOLD-10000*IYEAOL
      IMONOL=ITOL/100
      IDAYOL=ITOL-100*IMONOL
      IHOUOL=ISOLD/10000
      ITTOL=ISOLD-10000*IHOUOL
      IMINOL=ITTOL/100
      ISECOL=ITTOL-100*IMINOL
C-----------------------------------------------------------------------
C Decode the information on the timing of attaching the ALSOFT   disk
C in Write mode , and store it in / BKTIMI / :
C
      READ ( LECDAT , '(A)' , ERR=200 )   ACCTIM
      READ ( ACCTIM(10:11) , '(I2)'  , ERR=200  )   IMONNW
      READ ( ACCTIM(13:14) , '(I2)'  , ERR=200  )   IDAYNW
      READ ( ACCTIM(16:17) , '(I2)'  , ERR=200  )   IYEANW
      READ ( ACCTIM(20:21) , '(I2)'  , ERR=200  )   IHOUNW
      READ ( ACCTIM(23:24) , '(I2)'  , ERR=200  )   IMINNW
      READ ( ACCTIM(26:27) , '(I2)'  , ERR=200  )   ISECNW
C
C Check consistency between the creation date of the present DAF
C and the time obtained above :
C
      IDNEW=10000*IYEANW+100*IMONNW+IDAYNW
      IF (IDNEW.LT.IDOLD) GO TO 201
      IF (IDNEW.GT.IDOLD) GO TO 10
      ISNEW=10000*IHOUNW+100*IMINNW+ISECNW
      IF (ISNEW.LT.ISOLD) GO TO 201
 10   CONTINUE
C
C Build the time-dependant part of all filenames which have to be
C created during this  UPDABOOK  run and store it in / BKTIMI /
C
      CALL BKTIMN(IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW,
     +            TIMNAN)
      IER=0
C
      WRITE (LWRDBG,1001)
      WRITE (LWRDBG,*)  ' **************************************'
      WRITE (LWRDBG,*)  ' *   ALEPH  OFFLINE BOOKKEEPING       *'
      WRITE (LWRDBG,*)  ' *   Dayly Updating of SCANBOOK data  *'
      WRITE (LWRDBG,*)  ' *   UPDABOOK JOB starting            *'
      WRITE (LWRDBG,*)  ' *   alsoft UNIX dir was accessed at  *'
      WRITE (LWRDBG,1002) ACCTIM(10:30),SCAVER
      WRITE (LWRDBG,*)  ' **************************************'
      WRITE (LWRDBG,1001)
      IF (IBAUTO.NE.0) GO TO 999
      PRINT *,          ' **************************************'
      PRINT *,          ' *   ALEPH  OFFLINE BOOKKEEPING       *'
      PRINT *,          ' *   Dayly Updating of SCANBOOK data  *'
      PRINT *,          ' *   UPDABOOK JOB starting            *'
      PRINT *,          ' *   alsoft UNIX dir was accessed at  *'
      PRINT 1002,ACCTIM(10:30),SCAVER
      PRINT *,          ' **************************************'
C
      GO TO 999
C-----------------------------------------------------------------------
C Process errors :
C
 200  MESG=' +++ Error in BKINTI : unable to read'//
     +' the file containing the ACCESS DISK timing'
      LM=LNBLNK(MESG)
      CALL BKMESG(BKTIM,LECDAT,MESG(1:LM))
      GO TO 999
 201  IER=1
      MESG=' +++ Error in BKINTI : Timing of '//
     +'ACCESS DISK anterior to old DAF creation'
      LM=LNBLNK(MESG)
      CALL BKMESG(BKTIM,LECDAT,MESG(1:LM))
 999  CONTINUE
C
C Close the file LECDAT
C
      CLOSE (LECDAT)
C
      RETURN
 1001 FORMAT (/)
 1002 FORMAT (2X,1H*,8X,A20,8X,1H*/,2X,1H*,8X,'BOOKLIB Version = ',
     +        2X,A4,4X,1H*)
      END
      SUBROUTINE BKINVT(FININ)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Builds the list of VAX POT files for impatient stream
C  Author  J. Boucrot 22-Sep-1997
C Called from PRVXLI
C Calls LIB$SPAWN                     from DEC run-time library
C Input argument :
C  FININ  = 'Test' or 'Last'
C----------------------------------------------------------------------
 999  RETURN
      END
      SUBROUTINE BKISDATE(CDT,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Decodes the choice for dates of data processing
C  J. Boucrot 30-Nov-1996
C  Called from INISDATE                              from BOOKLIB
C  Calls BKINCA                                      from ALEPHLIB
C Input argument :
C   CDT = Character string describing the date choice
C Output argument :
C   IER = 1 if syntax incorrect or date invalid ;
C       = 0 otherwise
C Common variables defined in this routine for the search :
C    ISDATE,ISDATL                in  / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
      INTEGER BKINCA
      CHARACTER*(*) CDT
      CHARACTER LET6*6,LET20*20,SGT*1,SLT*1,SLA*1,COMA*1
      DATA SGT,SLT,SLA,COMA  / '>' , '<' , '/' , ',' /
C-----------------------------------------------------------------------
      IER=0
      LET20=CDT(1:20)
 315  LLC=LNBLNK(LET20)
      IF (INDEX(LET20,SGT).GT.0) GO TO 320
      IF (INDEX(LET20,SLT).GT.0) GO TO 320
      IF (INDEX(LET20,SLA).GT.0) GO TO 340
      GO TO 345
 320  LET6=LET20(LLC-5:LLC)
      ISDATE=BKINCA(LET6)
      IF (ISDATE.LT.100) GO TO 345
      IF (INDEX(LET20,SLT).GT.0) ISDATE=-ISDATE
      GO TO 999
 340  IKK=INDEX(LET20,SLA)
      ISDATE=BKINCA(LET20(1:IKK-1))
      IF (ISDATE.LT.100) GO TO 345
      ISDATL=BKINCA(LET20(IKK+1:LLC))
      GO TO 999
C
 345  IER=1
 999  RETURN
      END
      SUBROUTINE BKISDL(TAPIN,IMODE,IDLT)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Check if TAPIN is a DLT and provides list of files
C  J. Boucrot 16-May-1995
C  Calls BKCHKT                               froM BOOKLIB
C    Input arguments:
C  TAPIN = tape name
C  IMODE = 1 : only give IDLT as output
C  IMODE = 2 : fill also common / ITSDLT /
C   Output argument:
C IDLT = 1  if TAPIN is a DLT
C IDLT = 0  if not
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      CHARACTER TAPIN*8,TPM*2,TAPDS*8
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Is TAPIN a DLT ?
      CALL BKCHKT(TAPIN,ICERN,IMULT,IDLT,IEROR)
      IF (IMODE.EQ.1.OR.IMULT.EQ.0) GO TO 999
      IDLT=1
C
C It is a DLT : If IMODE = 2 , search for all files of this DLT in BDFS
C
      CALL VZERO(LISBDF,NFIDL)
      CALL VZERO(LISORD,NFIDL)
      CALL VZERO(LISFIL,NFIDL)
      CALL VZERO(LISPDL,NFIDL)
      DO 100 IS=1,NFIDL
 100  TAPDLT(IS)=' '
      NFIDLT=0
      IMCDLT=0
      DO 800 IMC=1,2
         JBDFS=NLINK('BDFS',IMC)
         IF (JBDFS.EQ.0) GO TO 999
         NBDFS=LROWS(JBDFS)
C Loop on all rows of BDFS to find all occurences of TAPIN :
         DO 500 IBDFS=1,NBDFS
            KBDFS=KROW(JBDFS,IBDFS)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPDS)
            IF (TAPDS(1:6).NE.TAPIN(1:6)) GO TO 500
            IFIL=IW(KBDFS+JBDFFN)
            IF (IFIL.EQ.0) IFIL=1
            NFIDLT=NFIDLT+1
            IF (NFIDLT.GT.NFIDL) GO TO 550
            LISBDF(NFIDLT)=IBDFS
            LISPDL(NFIDLT)=IW(KBDFS+JBDFNP)
            TAPDLT(NFIDLT)=TAPDS
            LISFIL(NFIDLT)=IFIL
            IMCDLT=IMC
 500     CONTINUE
         IF (NFIDLT.GT.0) GO TO 550
 800  CONTINUE
C Now sort the list in ascending order of files on DLT :
 550  IF (NFIDLT.LE.0) GO TO 999
      CALL SORTZV(LISFIL,LISORD,NFIDLT,-1,0,0)
 999  RETURN
      END
      SUBROUTINE BKKDYM(IPAF,IERR)
C ----------------------------------------------------------------------
CKEY ALBOOK PROD FILL/INTERNAL
C! Get the Special Particle code from the KDYM bank
C  J. Boucrot        29-Apr-1996
C  Called from BKBSPF                           from BOOKLIB
C  Output arguments :
C   IPAF  = Aleph special particle code , = 0 if nothing found
C   IERR  = 0 if all OK
C         = 1 if no KDYM bank
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IPAF=-1
      IERR=1
      JKDYM=IW(NAMIND('KDYM'))
      IF (JKDYM.LE.0) GO TO 999
      IERR=0
      IPAF=0
      RKOD=RTABL(JKDYM,1,1)
      IKOD=NINT(RKOD)
C Tau,mu,electron :
      IF (IKOD.EQ.3) IPAF= 33
      IF (IKOD.EQ.2) IPAF=  5
      IF (IKOD.EQ.1) IPAF=  2
C Standard quark mix :
      IF (IKOD.EQ.10) IPAF=0
C 1 quark (u,d,s,c,b,t) :
      IF (IKOD.GT.10.AND.IKOD.LE.16) IPAF=100+IKOD-10
 999  RETURN
      END
      SUBROUTINE BKKINS(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Fills the lists of KINGAL codes and names
C  J. Boucrot 19-Sep-1996
C  Called from BKSRSI                               from BOOKLIB
C  Calls BKPOIN                                     from BOOKLIB
C  Calls ALSTIN                                     from ALEPHLIB
C Output argument  :
C   IER = 1 if problems with BOS bankse ; = 0 otherwise
C Fills tables of commons /KINSEL/ for the selected year of geometry
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
C Initialise common /KINSEL/ :
      NTOPARK=0
      NTOKNAM=0
      NTOTKIN=0
      NPRESK=0
      DO 10 IKK=1,NKIN
         PARKODS(IKK)=' '
         KINNAMES(IKK)=' '
         IPARLIS(IKK)=0
         KINCODL(IKK)=0
         LIPRESK(IKK)=0
         DO 5 IJJ=1,NDAT
            LISTKINS(IJJ,IKK)=0
 5       CONTINUE
 10   CONTINUE
C  Other Initialisations :
      JBKIN=IW(NAMIND('BKLI'))
      IF (JBKIN.EQ.0) GO TO 905
C
C Fill names and codes of existing KINGAL generators :
C
      KKIN=LROWS(JBKIN)
      KKIN=MIN0(KKIN,NKIN)
      DO 20 IK=1,KKIN
         KBKIN=KROW(JBKIN,IK)
         KINCODL(IK)=IW(KBKIN+JBKLKC)
         CALL ALSTIN(IW(KBKIN+JBKLKN),2,KINNAMES(IK))
 20   CONTINUE
      NTOKNAM=KKIN
C
C Fill number of datasets for currently selected  year of geometry :
C
      IF (IGEOYR.LE.1989) GO TO 999
      CALL BKPOIN(LECDAF,'BMCL',IGEOYR,JBMCL)
      IF (JBMCL.EQ.0) GO TO 999
      NBMCL=LROWS(JBMCL)
      DO 200 IR=1,NBMCL
         KBMCL=KROW(JBMCL,IR)
         ILAA=IW(KBMCL+JBMCLA)
         IF (ILABCH.GT.0.AND.ILAA.NE.ILABCH) GO TO 200
 180     KINC=IW(KBMCL+JBMCKG)
         IKIN=IUCOMP(KINC,KINCODL,NTOKNAM)
         IF (IKIN.LE.0) GO TO 200
         NPRESK=NPRESK+1
         LIPRESK(NPRESK)=IKIN
         DO 185 IIO=1,NDAT
            NDSET=IW(KBMCL+JBMCTO+IIO)
            NTOTKIN=NTOTKIN+NDSET
            LISTKINS(IIO,IKIN)=LISTKINS(IIO,IKIN)+NDSET
 185     CONTINUE
 200  CONTINUE
      GO TO 999
C Problems with BOS banks :
 905  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKKYIN(NPAR,IOK,KEY,POUT)
C ----------------------------------------------------------------------
CKEY STEER
C! Decodes keys for datasets selection in SCANBOOK
C  J. Boucrot   25-June-1990
C  Calls ACARD2                                     from ALEPHLIB
C  Calls CLTOU                                      from KERNLIB
C  Called from BKCASI or BKSKEY                     from BOOKLIB
C Input argument :
C    NPAR = parameter number on input data card
C Output arguments :
C    IOK = 0 if severe syntax error in data cards
C    KEY = Keyword for this NPAR
C   POUT = value given to this keyword in the data cards
C ----------------------------------------------------------------------
      INTEGER ACARD2
      CHARACTER*(*) KEY,POUT
      CHARACTER PARM*60,VALIN*60
C ----------------------------------------------------------------------
      PARM=' '
      VALIN=' '
      POUT=' '
      IOK=0
      IF (ACARD2(NPAR,PARM).EQ.0) GO TO 999
      CALL CLTOU(PARM)
      INN=INDEX(PARM,'=')
      IF (INN.EQ.0) GO TO 999
      KEY=PARM(1:INN-1)
      VALIN=PARM(INN+1:LNBLNK(PARM))
C check for leading blanks after '=' separator :
      ILF=0
      LV=LNBLNK(VALIN)
      IF (LV.EQ.0) GO TO 999
      DO 10 IK=1,LV
         IF (VALIN(IK:IK).NE.' ') THEN
           ILF=IK
           GO TO 20
         ENDIF
 10   CONTINUE
 20   IF (ILF.EQ.0) GO TO 999
C
      POUT=VALIN(ILF:LV)
      KEY=KEY(1:LNBLNK(KEY))
      POUT=POUT(1:LNBLNK(POUT))
      IOK=1
C
 999  RETURN
      END
      SUBROUTINE BKLBOK
C----------------------------------------------------------------------
C CKEY ALBOOK COPY
C! Writes special Luminosity files LBOKLUZ0 ( on UNIX only ! )
C  Author  J.Boucrot  23-Feb-1996
C Called from BKCOPY                                      from BOOKLIB
C Calls AUBPRS,AOPENW,BKCARI                              from ALEPHLIB
C Calls BWRITE,BLIST                                      from BOSLIB
C Calls SYSTEM                                            from GENLIB
C----------------------------------------------------------------------
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER FINA*60,RUNU*5,MSG*80,USER*12
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- RUNHJJ ----
      PARAMETER(JRUNEN=1,JRUNRN=2,JRUNRT=3,JRUNSD=4,JRUNST=5,LRUNHA=5)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
C Various initialisations :
      IER=0
      JRUNR=IW(NAMIND('RUNR'))
      IF (JRUNR.EQ.0) GO TO 999
      NRUN=IW(JRUNR+JRUNRN)
C From 1998 onwards, these files are not built any more for LEP1 runs:
      IF (NRUN.LE.MXLRU1) GO TO 999
      CALL BKCARI(NRUN,5,RUNU)
      USER=' '
      USER=USERLG(1:LNBLNK(USERLG))
      CALL CLTOU(USER)
      IALP=0
      IF (INDEX(USER,'ALPROD').GT.0.OR.INDEX(USER,'ALREPR').GT.0) IALP=1
      JTST=IW(NAMIND('BTST'))
C
C This routine can be executed only :
C  - either by ALSOFT , with the BTST card
C  - or by ALPROD/ALREPRO , in production
C
      IEXR=0
      IF (INDEX(USER,'ALSOFT').GT.0.AND.JTST.GT.0) IEXR=1
      IF (IALP.EQ.1) IEXR=1
      IF (IEXR.EQ.0) GO TO 999
C-----------------------------------------------------------------------
C Define the LUMI file name : LBOKLUZ0.R00xxxxx where xxxxx = run number
C
      FINA=' '
      FINA='LBOKLUZ0.R00'//RUNU
C Give a special name to the files produced by alprod/alrepro on UNIX :
      IF (IALP.EQ.1)  FINA=FINA(1:LNBLNK(FINA))//'.temp'
      CALL SYSTEM(' rm -f '//FINA)
C
C Open the file for writing :
C
      LE=LNBLNK(FINA)
      CALL AOPENW(LWRUUU,FINA(1:LE),FORMBK,'DISK',IER)
      IF (IER.NE.0) GO TO 999
C
C Clear 'S' list and put LUMI banks on it :
C
      CALL BLIST(IW,'S=','0')
      CALL BLIST(IW,'S=','JEDSJSUMLUMISLUM')
      CALL AUBPRS('S')
C
C Write the LUMI banks on unit LWRUUU :
C
      CALL BWRITE(IW,LWRUUU,'S')
      CALL BWRITE(IW,LWRUUU,'0')
      CLOSE (LWRUUU)
C
 999  RETURN
      END
      SUBROUTINE BKLEPL
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Finds all LEP energies corresponding to the selected runs
C  J. Boucrot 28-Feb-1990    Modified for MCarlo data 04-July-1990
C  Called from BKSEAR or BKSRIN                     from BOOKLIB
C  Calls BKPOIN                                     from BOOKLIB
C  Calls INTSOR                                     from KERNLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( irm99 = 49000 , IZEN = 91000 )
      LOGICAL TEST
      TEST(IA,IB,IC)=IA.LT.IB.OR.IA.GT.IC
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Find all LEP energies for selected runs :
      NLEPSF=0
      CALL VZERO(ILEPEN,NLEPE)
      IF (IMCDAT.EQ.1) GO TO 300
C Simulated data :
      IF (IMCDAT.NE.2) GO TO 999
      CALL BKPOIN(LECDAF,'BDFS',2,JBDFS)
      IF (JBDFS.LE.0) GO TO 999
      NMC=LROWS(JBDFS)
      DO 200 IMC=1,NMC
         KBDFS=KROW(JBDFS,IMC)
         NPER=IW(KBDFS+JBDFNP)
         IF (KINCOD.GT.0.AND.NPER.NE.KINCOD) GO TO 200
         NROW=IW(KBDFS+JBDFNR)
         CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
         IF (JBSET.LE.0) GO TO 200
         IF (IGEOYR.GT.0) THEN
            IBSPF=ITABL(JBSET,NROW,JBSEBS)
            CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
            IF (JBSPF.LE.0) GO TO 200
            KBSPF=KROW(JBSPF,IBSPF)
            CALL BKY2K(IW(KBSPF+JBSPRG),100,IGEOG)
            IF (IGEOG.NE.IGEOYR) GO TO 200
         ENDIF
         ILEP=ITABL(JBSET,NROW,JBSEBN)
         IF (ILEP.LE.0) GO TO 200
         ELEP=0.001*FLOAT(ILEP)
         NLEPO=NINT(ELEP/EROUND)
         IEROU=NLEPO*IROUND
         IF (NLEPSF.EQ.0) GO TO 180
         IF (IEROU.LE.0) GO TO 200
         IF (IUCOMP(IEROU,ILEPEN,NLEPSF).GT.0) GO TO 200
 180     NLEPSF=NLEPSF+1
         IF (NLEPSF.GT.NLEPE) THEN
            NLEPSF=NLEPE
            GO TO 550
         ENDIF
         ILEPEN(NLEPSF)=IEROU
 200  CONTINUE
      GO TO 550
C Real data :
 300  IRR1=MAX0(ISRUNF,NRUMIN)
      IRR2=MIN0(ISRUNL,NRUMAX)
C
      CALL BKFPERD(NPER1,NPER2,IERD)
      IF (IERD.NE.0) GO TO 999
C
      DO 500 IPER=NPER1,NPER2
         CALL BKPOIN(LECDAF,'BRUC',IPER,JBRUC)
         IF (JBRUC.LE.0) GO TO 500
         NRUC=LROWS(JBRUC)
         IF (NRUC.LE.0) GO TO 500
         DO 400 NRO=1,NRUC
            IRUN=ITABL(JBRUC,NRO,JBRURN)
            IF (TEST(IRUN,IRR1,IRR2)) GO TO 400
            CALL BKRUOK(IRUN,IPHH,IOK)
            IF (IOK.NE.0) GO TO 400
            ILEP=ITABL(JBRUC,NRO,JBRUTE)
            IF (ILEP.LE.0) GO TO 400
            ELEP=0.001*FLOAT(ILEP)
            NLEPO=NINT(ELEP/EROUND)
            IEROU=NLEPO*IROUND
            IF (IRUN.GE.IRM99.AND.IEROU.LT.100000) IEROU=IZEN
            IF (NLEPSF.EQ.0) GO TO 380
            IF (IEROU.LE.0) GO TO 400
            IF (IUCOMP(IEROU,ILEPEN,NLEPSF).GT.0) GO TO 400
 380        NLEPSF=NLEPSF+1
            IF (NLEPSF.GT.NLEPE) THEN
               NLEPSF=NLEPE
               GO TO 550
            ENDIF
            ILEPEN(NLEPSF)=IEROU
400      CONTINUE
500   CONTINUE
C Sort the resulting table by increasing LEP energies :
550   IF (NLEPSF.EQ.0) GO TO 999
      CALL INTSOR(ILEPEN,NLEPSF)
C
999   RETURN
      END
      SUBROUTINE BKLFUL(LFILL,NRUNF,NRUNL,NEVT,ELEP,BXYZ,ERXYZ,OFS,IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK UPDADBS
C - J.Boucrot 25-Sep-1990
C! fill the intermediate bank LFUL
C  Called from BKLUFI                            from  BOOKLIB
C  Calls AUBOS                                   from ALEPHLIB
C
C - Input     : LFILL    / INTE   = LEP fill number
C               NRUNF    / INTE   = first run of the fill
C               NRUNL    / INTE   = last run of the fill
C               NEVT     / INTE   = number of events
C               ELEP     / REAL   = LEP energy
C               BXYZ(3)  / REAL   = beam position :x,y,z
C               ERXYZ(3) / REAL   = error on the beam position: x,y,z
C               OFS      / REAL   = Offset in T. Burnett's method
C - Output    : IER      / INTE   = 0 if all OK
C                                   1 if not enough space for LFUL
C ----------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
C-- LFILJJ ----
      PARAMETER(JLFILF=1,JLFIFR=2,JLFILR=3,JLFINV=4,JLFILE=5,JLFIBX=6,
     +          JLFIBY=7,JLFIBZ=8,JLFIEX=9,JLFIEY=10,JLFIEZ=11,
     +          JLFIOF=12,LLFILA=12)
      REAL BXYZ(*),ERXYZ(*)
      DATA EPSIL / 0.000001 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------
C - get the bank pointer , build a new bank if necessary :
C
      IER=0
      JLFUL=NLINK('LFUL',NRLFUL)
      IF (LROWS(JLFUL).GE.MXLFUL) THEN
         NBALFU=NBALFU+1
         NRLFUL=NRUNF
         LMLFU=LMHLEN+MXLFUL*LLFILA
         CALL AUBOS('LFUL',NRLFUL,LMLFU,JLFUL,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JLFUL+LMHCOL)=LLFILA
         IW(JLFUL+LMHROW)=0
      ENDIF
C - fill one row
      IROW=LROWS(JLFUL)+1
      KLFUL = KROW(JLFUL,IROW)
      IW(KLFUL+JLFILF) = LFILL
      IW(KLFUL+JLFIFR) = NRUNF
      IW(KLFUL+JLFILR) = NRUNL
      IW(KLFUL+JLFINV) = NEVT
      RW(KLFUL+JLFILE) = ELEP
      RW(KLFUL+JLFIBX) = BXYZ(1)
      RW(KLFUL+JLFIBY) = BXYZ(2)
      RW(KLFUL+JLFIBZ) = BXYZ(3)
      RW(KLFUL+JLFIEX) = ERXYZ(1)
      RW(KLFUL+JLFIEY) = ERXYZ(2)
      RW(KLFUL+JLFIEZ) = ERXYZ(3)
      RW(KLFUL+JLFIOF) = OFS
      IW(JLFUL+LMHROW) = IROW
C - sort LFUL in ascending order of LEP fill
      CALL SORTIQ(IW(JLFUL+LMHLEN+1),LCOLS(JLFUL),LROWS(JLFUL),
     &               JLFILF)
C
      GO TO 999
C
C - not enough room for 'LFUL' :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKLISDF(IER)
C-----------------------------------------------------------------------
CKEY LISTFILES
C! Auxiliary to BKLISF : builds BABM and BTD internal banks
C J. Boucrot  02-03-1999
C Caalle from BKLISF                                from BOOKLIB
C Calls BKSORT                                      from BOOKLIB
C Calls AUBPRS,BKINCA,AUBOS                         from ALEPHLIB
C  Output argument :
C   IER = 0  all OK
C   IER = 1 NO room for banks     = 2 Error in BKKMBYTES.CERNTAPS
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BABMJJ ----
      PARAMETER(JBABTA=1,JBABDF=2,LBABMA=2)
C-- BTDEJJ ----
      PARAMETER(JBTDFI=1,JBTDIM=2,JBTDFS=3,LBTDEA=3)
C
      PARAMETER ( MAXBM = 10000 , MAXRD = 500)
      CHARACTER TAPEF*10,TA*2,TAPFA*17,FNIN*80,LINE*100
      INTEGER BKINCA
      DATA TAPFA / 'AB AM AS AU Y1 R0' /
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
C Open the input file BKMBYTES.CERNTAPS:
      FNIN=' '
      LINE=' '
      MAXFA=1+LNBLNK(TAPFA)/3
      FNIN=ALS_TEMP(1:ILTEMP)//'bkmbytes.cerntaps'
      FNIN=FNIN(1:LNBLNK(FNIN))
      OPEN ( LECPLI , FILE = FNIN , STATUS = 'OLD' , ERR = 902 )
C
C Read this file :
C
 10   READ ( LECPLI , '(A)' , END = 500 , ERR = 902 ) LINE
      READ ( LINE , 1002)  TAPEF,IMCD,IBDFS
      TA=TAPEF(1:2)
      INUM=BKINCA(TAPEF(3:6))
      IFIL=0
      IF (LNBLNK(TAPEF).GT.7) IFIL=BKINCA(TAPEF(8:10))
      IND=INDEX(TAPFA,TA)
      IF (IND.EQ.0) GO TO 10
      IFAM=1+IND/3
      IF (IFAM.GE.3) GO TO 300
C
C 'AB' or 'AM' tapes : build 'BABM' banks
C
      JBABM=NLINK('BABM',IFAM)
C bank doesn't exist : book it
      IF (JBABM.LE.0) THEN
         LENB=LMHLEN+MAXBM*LBABMA
         CALL AUBOS('BABM',IFAM,LENB,JBABM,IGARB)
         IF (IGARB.EQ.2) GO TO 901
         IW(JBABM+LMHCOL)=LBABMA
         IW(JBABM+LMHROW)=0
      ENDIF
C fill it :
      KBABM=KNEXT(JBABM)
      IW(KBABM+JBABTA)=INUM
      IW(KBABM+JBABDF)=IBDFS
      IW(JBABM+LMHROW)=IW(JBABM+LMHROW)+1
      GO TO 10
C
C Multifile tapes : build 'BTDE' banks
C
 300  IF (IFAM.GT.MAXFA) GO TO 10
      NFAM=MAXBM*(IFAM-1)+INUM
      JBTDE=NLINK('BTDE',NFAM)
C bank doesn't exist : book it
      IF (JBTDE.LE.0) THEN
         LENT=LMHLEN+MAXRD*LBTDEA
         CALL AUBOS('BTDE',NFAM,LENT,JBTDE,IGARB)
         IF (IGARB.EQ.2) GO TO 901
         IW(JBTDE+LMHCOL)=LBTDEA
         IW(JBTDE+LMHROW)=0
      ENDIF
C fill it :
      KBTDE=KNEXT(JBTDE)
      IW(KBTDE+JBTDFI)=IFIL
      IW(KBTDE+JBTDIM)=IMCD
      IW(KBTDE+JBTDFS)=IBDFS
      IW(JBTDE+LMHROW)=IW(JBTDE+LMHROW)+1
      GO TO 10
C
C-----------------------------------------------------------------------
C Compress and sort these banks :
C
 500  CALL AUBPRS('BABM')
      DO 600 IFA=1,2
         CALL BKSORT('BABM',IFA,JBABTA,IERS)
         IF (IERS.EQ.2) GO TO 901
 600  CONTINUE
C
      CALL AUBPRS('BTDE')
      JBTDE=NAMIND('BTDE')+1
 700  JBTDE=IW(JBTDE-1)
      IF (JBTDE.EQ.0) GO TO 800
      INPER=IW(JBTDE-2)
      CALL BKSORT('BTDE',INPER,JBTDFI,IERS)
      IF(IERS.EQ.2) GO TO 901
      GO TO 700
 800  CONTINUE
C
      GO TO 999
C ----------------------------------------------------------------------
C Errors :
C No room for banks :
 901  IER=1
      WRITE (LWRDBG,1101)
      GO TO 999
C Error in reading the file BKMBYTES.CERNTAPS :
 902  IER=2
      WRITE (LWRDBG,1102) LINE
 999  RETURN
C-----------------------------------------------------------------------
 1002 FORMAT (6X,A10,49X,I2,2X,I6)
 1101 FORMAT (/5X,'*** ERROR in BKLISDF : No room for BOS banks !!! ')
 1102 FORMAT (/5X,'*** ERROR in BKLISDF when reading BKMBYTES.CERNTAPS',
     +        /5x,'==> Line =',2x,a100)
      END
      SUBROUTINE BKLISF(IER)
C----------------------------------------------------------------------
CKEY LISTSCAN
C! Makes split Listfiles of files on CERNVM maxidisks or ALWS disks
C  Verifies also that all official files on CERNVM disks are known
C  in the ALEBOOK NEWSEQ database .
C  Author  J. Boucrot 01-Oct-1991  ( IBM code only )
C  Adapted for ALWS  19-Dec-1991
C  Modified: Helge Meinhard  01-Sep-1992   UNIX version
C  Many modifs  07-Jan-1993 in IBM and VAX versions J. Boucrot
C Called from BKDOAL
C Calls BKINCA,BKCARI,ALINST,ALSTIN,AUBOS             from ALEPHLIB
C Calls BKPOIN,BKRQFV,BKCHKT,BKDACI                   from BOOKLIB
C Calls BKBFVX,BKWRVX  ( for VAX  version )           from BOOKLIB
C Calls BKUXCI,PRPSLS  ( for UNIX version )           from BOOKLIB
C Calls CALDAT,VMCMS                                  from GENLIB
C  Output argument :
C      IER = 0 if all OK
C      IER = 1 if no room for banks
C      IER = 2 if one output file not built
C----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      PARAMETER ( NCATF = 3 , NTOFI = 40 , NLUST = 40 )
      PARAMETER ( IYM = 10000 , NDGFNA = 1 )
      CHARACTER CARTR*6,TAPL*9,YEAR*4,TAPNA*8,SELMK*2,CTYP*3
      CHARACTER CHREP*119,CDATS*6,CDTF*6,CTAP*8,BLAFU*20,DIRFIL*60
      CHARACTER*2 CHKL(NCATF)
      CHARACTER*8 CDATD,CTIMD,CDATF,CTIMF
      INTEGER BKINCA,ITAPT(2),ISSEL(8)
      CHARACTER*132  INFO,MSG,BLAF,OUFI
      DATA SELMK  / '$$' /
      DATA TOLFI  / 5. /
      PARAMETER ( JBFVRN=1,JBFVPO=2,JBFVDS=4,LBFVXA=5)
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER*17 FILIS(NTOFI)
      CHARACTER FITYP*9,FICUR*17,FILE*80,SIZE*9,DATE*12,FIOBS*17,
     +          LINS*100
      DATA FITYP / 'filelist.' /
      DATA CHKL / 'p0' , 'd0' , 'm0' /
      DATA IBLK   / 1 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Define the list of all Listfiles ( RAW,POT,DST,MINI for all years ) :
C  ( They will use all Fortran units from 60 to 76 )
C and then do their FILEDEFs to define them on the "B" disk ( temporary
C
      IER=0
      ITOFI=0
      IF (IBAUTO.EQ.0) PRINT 1000
      WRITE ( LWRDBG , 1000 )
      CALL BKUNXF
C Date/time of last database update :
C Create intermediate banks 'BADM' and 'BTDE' from file bkmbytes.cerntap
C to accelerate the dataset search in this routine
      CALL BKLISDF(IERD)
      IF (IERD.NE.0) GO TO 950
      IDATD=0
      ITIMD=0
      INEWF=0
      JBDAT=IW(NAMIND('BDAT'))
      IF (JBDAT.GT.0) THEN
         KBDAT=KROW(JBDAT,LROWS(JBDAT))
         CALL ALSTIN(IW(KBDAT+JBDADU),2,CDATD)
         CALL ALSTIN(IW(KBDAT+JBDATU),2,CTIMD)
         CALL BKDACI(2,CDATD,CTIMD,IDATD,ITIMD)
      ENDIF
C
C One has to work in the appropriate directory:
      dirfil=als_filel
      ldi=lnblnk(dirfil)
      call system(' cd '//dirfil(1:ldi))
C File containing the list of listfiles (to be used when cleaning up the
C empty listfiles at the end of the updating):
      FICUR = FITYP//'listfils'
      OPEN (NLUST, FILE=FICUR, STATUS='NEW', ERR=900)
C File containing the list of obsolete datasets on ALWS :
      FIOBS = FITYP//'obsolete'
      OPEN (LWRSPY, FILE=FIOBS, STATUS='NEW', ERR=900)
      WRITE ( LWRSPY , 1013 )
      WRITE ( LWRSPY , 1014 )  CDATIM,CSETIM
C
      DO 100 IYE=1,NTOYEA-1
         CALL BKCARI(LISYEA(IYE),4,YEAR)
C No more NANO filelists in 1997 onwards:
            DO 50 IDATA=2,5
            ITOFI=ITOFI+1
            CTYP = DNADAT(IDATA)
            CALL CUTOL(CTYP)
            FILIS(ITOFI)=FITYP//CTYP//YEAR
            ILUN=NLUST+ITOFI
            OPEN (ILUN, FILE=FILIS(ITOFI), STATUS='NEW', ERR=900)
            WRITE ( NLUST , 1001 ) FILIS(ITOFI)(1:LNBLNK(FILIS(ITOFI)))
 50      CONTINUE
 100  CONTINUE
C Do the same for the MCarlo Listfile :
      ITOFI=ITOFI+1
      ILUN=NLUST+ITOFI
      FILIS(ITOFI)=FITYP//'mcarlo'
      OPEN (ILUN, FILE=FILIS(ITOFI), STATUS='NEW', ERR=900)
      WRITE ( NLUST , 1001 ) FILIS(ITOFI)(1:LNBLNK(FILIS(ITOFI)))
C Get the pointers for 'BDFS' banks :
      CALL BKPOIN(LECDAF,'BDFS',1,JBDF1)
      IF (JBDF1.LE.0) GO TO 950
      NBDF1=LROWS(JBDF1)
      CALL BKPOIN(LECDAF,'BDFS',2,JBDF2)
      IF (JBDF2.LE.0) GO TO 950
      NBDF2=LROWS(JBDF2)
C-----------------------------------------------------------------------
C Update the listfiles.data according to new datasets of the day:
      CALL BKLISUPD
C open and read the list of files
C the list of files is on /aleph/book/listfiles.data
      OPEN (LECTXT, FILE='listfiles.data', STATUS='OLD',
     +  ERR=900)
      REWIND LECTXT
C Read the Listfile :
 10   READ ( LECTXT , '(A80)' , END=800 , ERR = 920 ) INFO
      ILD=LNBLNK(INFO)
      IEPIO=0
      ISZFI=0
      ISZDS=0
      ILUFE=0
C
      BLAF=INFO(NDGFNA:ILD)
      CALL PRPSLS(INFO,FILE,DATE,SIZE)
      BLAF = FILE
      BLAF(55:) = DATE
      BLAF(70:) = SIZE
      NADASO=0
C Is it a Run file or the EDIR of a Run File ?
      IOK=0
      DO 250 II=1,NCATF
         IF (BLAF(1:2).NE.CHKL(II)) GO TO 250
         IOK=II
         NADASO=IOK+1
         GO TO 260
 250  CONTINUE
 260  IF (IOK.EQ.0) GO TO 310
C This is a Run File , or the EDIR of a Run File :
      NRUF=BKINCA(BLAF(2:8))
      IYOK=0
      DO 300 IY=1,NTOYEA-1
         IF (NRUF.GE.LISFRU(IY).AND.NRUF.LE.LISFRU(IY+1)) THEN
            IYOK=IY
            GO TO 301
         ENDIF
 300  CONTINUE
 301  IF (IYOK.EQ.0) THEN
         IF (IBUPDA.GT.0) WRITE ( LWRDBG,1011) NRUF,INFO(:ILD)
         GO TO 10
      ENDIF
      NNDA=MOD(NADASO,10)
      IF (NNDA.LT.2.OR.NNDA.GT.5) GO TO 10
      LUN=NLUST+4*(IYOK-1)+NNDA-1
      ILUFE=LUN-NLUST
      IF (INDEX(BLAF,'.EPIO').GT.0) CALL BKBFVX(NRUF,NADASO,BLAF(1:8))
      GO TO 500
C-----------------------------------------------------------------------
C The present file is a Cartridge File :
C
 310  TAPNA=' '
      BLAFU(1:20)=BLAF(1:20)
      CALL CLTOU(BLAFU)
      TAPNA(1:6)=BLAFU(1:6)
      CALL CLTOU(TAPNA)
      CALL BKCHKT(TAPNA,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0) GO TO 10
C Get file # from edir decoding:
      IEDIR=INDEX(BLAFU(1:17),'.EDIR')
      IF (IEDIR.EQ.0) GO TO 10
      IFILE=1
      IUND=INDEX(BLAFU(1:IEDIR-1),'_')
      IF (IUND.GT.0) IFILE=BKINCA(BLAFU(IUND+1:IEDIR-1))
      IF (INDEX(BLAF,'EPIO').GT.0)  IEPIO=1
C Determine the date/hour of writing of this file in the form :
C   IDATF = yymmdd     ITIMF = hhmmss
      IDATF=0
      ITIMF=0
      CALL BKUXCI(DATE,IDATF,ITIMF)
      NRDA=0
      IDATS=0
      ITIMS=0
      NPER=0
      NRMC=0
      CALL BKLISFD(TAPNA,IFILE,IMCD,IBDFS)
      IF (IMCD.LE.0.OR.IBDFS.LE.0) GO TO 540
      JBDFS=NLINK('BDFS',IMCD)
      KBDFS=KROW(JBDFS,IBDFS)
      NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.LE.0) GO TO 540
      KBSET=KROW(JBSET,NROW)
      IF (IMCD.EQ.2) GO TO 400
C Real data :
         NRUF=IW(KBSET+JBSEFR)
         NADA=MOD(IW(KBSET+JBSEND),10)
C Get year and output file LUN :
         IYOK=0
         DO 350 IY=1,NTOYEA-1
            IF (NRUF.GE.LISFRU(IY).AND.NRUF.LE.LISFRU(IY+1)) THEN
               IYOK=IY
               GO TO 351
            ENDIF
 350     CONTINUE
 351     IF (IYOK.EQ.0.OR.IYOK.GE.NTOYEA) THEN
            IF (IBUPDA.GT.0) WRITE ( LWRDBG,1011) NRUF,INFO(:ILD)
            GO TO 10
         ENDIF
         IDATS=IW(KBSET+JBSEWD)
         ITIMS=IW(KBSET+JBSEWH)
      NRDA=IBDFS
         NNDA=MOD(NADA,10)
         IF (NNDA.LT.2.OR.NNDA.GT.5) GO TO 10
         LUN=NLUST+4*(IYOK-1)+NNDA-1
         ILUFE=LUN-NLUST
         GO TO 500
C Monte Carlo :
  400 NRMC=IBDFS
         IDATS=IW(KBSET+JBSEWD)
         ITIMS=IW(KBSET+JBSEWH)
 420  LUN=NLUST+ITOFI
      ILUFE=ITOFI
 500  CONTINUE
C
C If this file is an EPIO file , get its size in Bytes as stored in the
C SCANBOOK database :
C
      IF (IEPIO.EQ.0.OR.NPER.EQ.0.OR.KBSET.EQ.0) GO TO 540
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      IF (IBRL1.EQ.0.OR.IBRL2.EQ.0) THEN
         CALL BKBFVX(IW(KBSET+JBSEFR),IW(KBSET+JBSEND),TAPNA)
         GO TO 540
      ENDIF
      CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
      IF (JBRLI.LE.0) GO TO 540
      DO 510 IRO=IBRL1,IBRL2
         IRUND=ITABL(JBRLI,IRO,JBRLRN)
         CALL BKBFVX(IRUND,IW(KBSET+JBSEND),TAPNA)
 510  ISZDS=ISZDS+ITABL(JBRLI,IRO,JBRLNB)
 540  CONTINUE
C-----------------------------------------------------------------------
C
C Now one has to decide what to do with this file .
C If it's known in the SCANBOOK database , write a line on the output fi
C
      IF (NRMC+NRDA+IOK.GT.0) THEN
         WRITE ( LUN , 1001 ) INFO(:ILD)
C No further checks for Run files :
         IF (IOK.GT.0) GO TO 10
C
C Concatenated files : if their date of writing is anterior to the date
C the dataset in SCANBOOK , there is a big problem -> write on LWRSPY
C HMH if the conversion of the file creation date failed, assume it's ok
         IF (IDATF .EQ. -1)                     GO TO 550
         IF (IDATS.GT.0.AND.IDATS.LT.IDATF)     GO TO 550
         IF (IDATS.EQ.IDATF)                    GO TO 550
         IF (IDATS.GT.IDATF.AND.ITIMF.EQ.-1)    GO TO 550
         INF=IDATF/IYM
         IF (INF.GT.10) THEN
            IYEAF=1900+INF
         ELSE
            IYEAF=2000+INF
         ENDIF
         INS=IDATS/IYM
         IF (INS.GT.10) THEN
            IYEAS=1900+INS
         ELSE
            IYEAS=2000+INS
         ENDIF
         IF (IYEAF.LT.IYEAS) GO TO 547
         IF (IYEAF.GT.IYEAS) GO TO 550
         CALL VZERO(ISSEL,8)
         CHREP=' '
         IDAYS=0
         CALL BKCARI(IDATS,6,CDATS)
         ISSEL(1)=BKINCA(CDATS(5:6))
         ISSEL(2)=BKINCA(CDATS(3:4))
         ISSEL(3)=IYEAS
         CALL CALDAT(101,CHREP,ISSEL,IFAIL)
         IF (IFAIL.EQ.0) IDAYS=ISSEL(4)
         CALL VZERO(ISSEL,8)
         CHREP=' '
         IDAYF=0
         CALL BKCARI(IDATF,6,CDTF)
         ISSEL(1)=BKINCA(CDTF(5:6))
         ISSEL(2)=BKINCA(CDTF(3:4))
         ISSEL(3)=IYEAF
         CALL CALDAT(101,CHREP,ISSEL,IFAIL)
         IF (IFAIL.EQ.0) IDAYF=ISSEL(4)
C Tolerance for writing the file is 48 hours :
         IF (IDAYS.LE.IDAYF) GO TO 550
         IF (IDAYS-IDAYF.GE.3) GO TO 547
         IHTES=24000*(IDAYS-IDAYF)+ITIMS-ITIMF
         IF (IHTES.LT.48000) GO TO 550
 547     WRITE ( LWRSPY , 1105 ) BLAF(1:LNBLNK(BLAF)),IDATS,ITIMS
         INEWF=INEWF+1
 550     CONTINUE
      ELSE
C Files not known from the SCANBOOK database : write a line in the file
C OBSOLETE DATASETS , unless the file is more recent than the last datab
C HMH if the conversion of the file creation date failed, assume it's ok
         IF (IDATF .EQ. -1)                     GO TO 560
         IF (IDATD.GT.0.AND.IDATF.GT.IDATD)     GO TO 560
         IF (IDATD.EQ.IDATF.AND.ITIMF.EQ.-1)    GO TO 560
         IF (IDATD.EQ.IDATF.AND.ITIMF.GT.ITIMD) GO TO 560
         LINS = BLAF(:LNBLNK(BLAF))
      CALL CUTOL(LINS)
         WRITE ( LWRSPY , 1001 ) LINS
         INEWF=INEWF+1
 560     CONTINUE
      ENDIF
C
C Now compare the actual file size to the expected one from the database
C and issue a warning if a difference GT.TOLFI (%) is found :
C
      IF (IEPIO.EQ.0.OR.ISZDS.EQ.0.OR.ISZFI.EQ.0) GO TO 600
      DIF=FLOAT(ISZDS)-FLOAT(ISZFI)
      FACT=100.*ABS(DIF)/FLOAT(ISZDS)
      IF (FACT.GT.TOLFI) THEN
         LINS=BLAF(1:LNBLNK(BLAF))
         WRITE ( LWRSPY , 1106 ) LINS,ISZDS,ISZFI
         INEWF=INEWF+1
      ENDIF
 600  CONTINUE
C
      GO TO 10
C-----------------------------------------------------------------------
C Close all files :
C
 800  CLOSE ( NLUST )
      CLOSE ( LECTXT )
      DO 810  IFIL=1,ITOFI
         LUNI=NLUST+IFIL
         CLOSE ( LUNI)
 810  CONTINUE
      CALL BKWSBOS('Listfiles')
      IF (INEWF.EQ.0) WRITE ( LWRSPY , 1016)
      CLOSE ( LWRSPY )
      GO TO 999
C-----------------------------------------------------------------------
C Processing of various possible errors :
C No room for the LISTFILE , or missing LISTFILE :
 900  IER=2
      IF (IBAUTO.EQ.0) PRINT 1005,ILUN
      WRITE ( LWRDBG,1005) ILUN
      GO TO 999
C Error when reading the general list of files :
 920  IER=2
      IF (IBAUTO.EQ.0) PRINT 1007
      WRITE ( LWRDBG,1007)
      GO TO 999
C No room to get the banks :
 950  IER=1
      IF (IBAUTO.EQ.0) PRINT 1006
      WRITE ( LWRDBG,1006)
 999  RETURN
C----------------------------------------------------------------------
 1000 FORMAT (/22X,'=== Subroutine BKLISF starts : make the Listfiles',
     +        ' for SCANBOOK execution ')
 1001 FORMAT (A)
 1005 FORMAT (' ==== Problem in BKLISF : unable to open LUN =',I8)
 1006 FORMAT (' ==== Problem in BKLISF : no room for banks')
 1007 FORMAT (' ==== Problem in BKLISF : ERROR when reading CMS EXEC')
 1011 FORMAT (5X,' +++ In BKLISF No Year Found for Run =',I8/,
     +        ' Line read was :',2X,A80)
 1013 FORMAT (' ++ List of files or EDIRs corresponding to datasets ',
     +        ' not known in the SCANBOOK database :')
 1014 FORMAT (/' +++ Date is :',2X,A8,'  Time is :',2X,A8/)
 1016 FORMAT (/' >>>  NO Obsolete files found today <<<')
 1105 FORMAT (/' PROBLEM !! File is OLDER than the date of writing by',
     +         ' ALPROD !!'/,1X,(A)/,' Date (YYMMDD) / time (hhmmss) ',
     +         ' of writing by ALPROD =',2I10)
 1106 FORMAT (/' ++ PROBLEM !! EPIO File has NOT the length expected ',
     +        ' from the SCANBOOK database !!'/,(A)/,5X,'Expected',
     +        ' length =',I10,' Bytes ; Actual length = ',I10,' Bytes')
      END
      SUBROUTINE BKLISFD(TAPE,IFILE,IMCD,IBDFS)
C-----------------------------------------------------------------------
CKEY LISTFILES
C! Auxiliary to BKLISF : gives IMCDA and IBDFS for a tape
C J. Boucrot  02-03-1999
C Called from BKLISF                                from BOOKLIB
C Calls LOCTAB,BKINCA                               from ALEPHLIB
C Uses internal banks 'BABM' and 'BTDE' built in routine BKLISDF
C  Input arguments :
C   TAPE = tape name (Char*6)
C  IFILE = file number of tape
C
C  Output arguments:
C  IMCD = 1 or 2 if tape found, = 0 if not found
C IBDFS = row number in bank 'BDFS', NR=IMCD, of dataset
C       = 0 if not found
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BABMJJ ----
      PARAMETER(JBABTA=1,JBABDF=2,LBABMA=2)
C-- BTDEJJ ----
      PARAMETER(JBTDFI=1,JBTDIM=2,JBTDFS=3,LBTDEA=3)
C
      PARAMETER ( MAXBM = 10000 , MAXRD = 500)
      CHARACTER TAPE*6,TA*2,TAPFA*17
      INTEGER BKINCA
      DATA TAPFA / 'AB AM AS AU Y1 R0' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IMCD=0
      IBDFS=0
      TA=TAPE(1:2)
      IND=INDEX(TAPFA,TA)
      IF (IND.EQ.0) GO TO 999
      INUM=BKINCA(TAPE(3:6))
      IFAM=1+IND/3
      MAXFA=1+LNBLNK(TAPFA)/3
      IF (IFAM.GE.3) GO TO 300
C AB or AM tapes :  use BABM banks
      JBABM=NLINK('BABM',IFAM)
      IF (JBABM.LE.0) GO TO 999
      IRANK=LOCTAB(IW(JBABM+LMHLEN+1),LCOLS(JBABM),LROWS(JBABM),
     +              JBABTA,INUM)
      IF (IRANK.LE.0) GO TO 999
      IMCD=IFAM
      IBDFS=ITABL(JBABM,IRANK,JBABDF)
      GO TO 999
C Multi-file tapes : use 'BTDE' banks
 300  IF (IFILE.LE.0.OR.IFILE.GT.MAXRD) GO TO 999
      IF (IFAM.GT.MAXFA) GO TO 999
      NFAM=MAXBM*(IFAM-1)+INUM
      JBTDE=NLINK('BTDE',NFAM)
      IF (JBTDE.LE.0) GO TO 999
      IRANK=LOCTAB(IW(JBTDE+LMHLEN+1),LCOLS(JBTDE),LROWS(JBTDE),
     +              JBTDFI,IFILE)
      IF (IRANK.LE.0) GO TO 999
      IBDFS=ITABL(JBTDE,IRANK,JBTDFS)
      IMCD =ITABL(JBTDE,IRANK,JBTDIM)
C
 999  RETURN
      END
      SUBROUTINE BKLIST (LUN,LIST)
C -----------------------------------------------------------
CKEY TOOL PRINT/USER
C   Called from USER  or from BKSEAR
C - J Boucrot - 891107 -  adapted from AUBLIS of ALEPHLIB
C!  Lists all    banks put on the list 'LIST', following the
C   convention : bank length = 1st word * 2nd word + LMHLEN
C   and prints statistics on bank content and lengths
C Input arguments :
C  LUN  = Fortran logical unit onto which the printout is done
C  LIST = BOS list to be printed out
C - Calls       NLIST, NBANK                   from BOS77.hlb
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
      EXTERNAL NLIST, NBANK
      CHARACTER LIST*(*), NAME*4, NLIST*4
      INTEGER LENBA(20)
      CHARACTER*4 BANKL(20)
C -------------------------------------------------------------
      NBAN=0
      LENTO=0
      I = 0
 1    I = I+1
      NAME = NLIST (IW,I,LIST)
      IF (NAME.EQ.' ') GOTO 990
      WRITE (LUN,1001) NAME
      NBAN=NBAN+1
      BANKL(NBAN)=NAME
      LENBA(NBAN)=0
      KNAME = NAMIND(NAME)+1
 2    KNAME = IW(KNAME-1)
      IF (KNAME.NE.0) THEN
         LE=LMHLEN+IW(KNAME+1)*IW(KNAME+2)
         WRITE (LUN,1002) IW(KNAME-2),IW(KNAME+2),LE
         LENTO=LENTO+LE
         LENBA(NBAN)=LENBA(NBAN)+LE
         GOTO 2
      ENDIF
      GOTO 1
C
 990  WRITE (LUN,1003) LENTO
      DO 222 IK=1,NBAN
        PERC=100.*FLOAT(LENBA(IK))/FLOAT(LENTO)
        WRITE (LUN,1004) BANKL(IK),LENBA(IK),PERC
222   CONTINUE
 999  CONTINUE
      RETURN
 1001 FORMAT (/' +++ Named bank : ',2X,A4)
 1002 FORMAT (8X,' Nr = ',I6,'   Number of rows=',I6,
     +        '   Number of words =',I9)
 1003 FORMAT (//' ======  GENERAL STATISTICS : Total length =',I9/)
 1004 FORMAT (4X,'Named bank',2X,A4,' Number of words =',I8,
     +           '  Percentage of total =',F6.2)
      END
      SUBROUTINE BKLISUPD
C----------------------------------------------------------------------
C CKEY LISTSCAN
C! Updates the file listfiles.data according to today's new files
C  Author  J.Boucrot  11-Nov-1999
C Called from BKLISF                        from  BOOKLIB
C Calls PRPSLS                              from  BOOKLIB
C----------------------------------------------------------------------
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( NNEW = 2000 )
      CHARACTER*132 line,linf,linch,elines(nnew)
      CHARACTER*20 edirna(nnew)
      character*80 file,afedir,afedal,afenew,afedol
      character fedir*17,fedal*14,fenew*14,fedol*18
      character date*12,size*9,edirlm*30,fina*20,aedir*12
      INTEGER ITAGS(NNEW)
      DATA fedir / 'filelist.alledirs'  /
      DATA fedal / 'listfiles.data'     /
      DATA fedol / 'listfiles.data_old' /
      DATA fenew / 'list.new_edirs'     /
      DATA aedir / '/aleph/edir/'       /
C-----------------------------------------------------------------------
      laedir=lnblnk(aedir)
C Define the various files:
      afedir=' '
      afedir=als_filel(1:ilfilel)//fedir
      lafedir=lnblnk(afedir)
      afedal=' '
      afedal=als_filel(1:ilfilel)//fedal
      lafedal=lnblnk(afedal)
      afedol=' '
      afedol=als_filel(1:ilfilel)//fedol
      lafedol=lnblnk(afedol)
      afenew=' '
      afenew=als_filel(1:ilfilel)//fenew
      lafenew=lnblnk(afenew)
C
C Make the list of all '*.edirlist' files done in this job
C and put it in afenew (list.new_edirs) :
C
      call system(' rm -f '//afenew)
      call system(' ls -L -o '//als_filel(1:ilfilel)//'*.edirlist'//
     +            ' > '//afenew)
C
C Open this file, read it and store all new files in local arrays:
C
      NEWED=0
      DO 10 IK=1,NNEW
         ITAGS(IK)=0
         ELINES(IK)=' '
         EDIRNA(IK)=' '
 10   CONTINUE
C
      OPEN (LECRQL , FILE = afenew, status='OLD',
     +      form = 'FORMATTED', access = 'SEQUENTIAL')
C
 20   READ ( LECRQL , '(A)' , END = 100 , ERR = 900)  LINE
C decode the file name and read it:
      lli=lnblnk(line)
      iadn=index(line,als_filel(1:ilfilel))
      if (iadn.eq.0) go to 20
      fina=' '
      fina=line(iadn+ilfilel:lli)
      OPEN (LECKIN , FILE = fina, status='OLD',
     +      form = 'FORMATTED', access = 'SEQUENTIAL')
      linf=' '
      READ (LECKIN , '(A)' , END=30, ERR= 930) linf
 30   continue
      close (leckin)
C This file was empty : erase it :
      if (lnblnk(linf).le.0) then
         call system(' rm -f '//fina)
         go to 20
      endif
C decode the edir name:
      iaded=index(linf,aedir)
      if (iaded.eq.0) go to 20
      newed=newed+1
      if (newed.gt.nnew) go to 910
      lline=lnblnk(linf)
      edirna(newed)=linf(iaded+laedir:lline)
      ialprod=index(linf,'alprod')
      if (ialprod.eq.0) ialprod=15
      elines(newed)=linf(1:ialprod+5)//' '//
     +              linf(ialprod+6:iaded-1)//edirna(newed)
      go to 20
C File finished :
 100  continue
      close (lecrql)
C If no new EDIRs, quit without doing anything else:
      if (newed.le.0) go to 999
C-----------------------------------------------------------------------
C Now open the file listfiles.data in read mode,
C     open the file filelist.alledirs in write mode
C
      call system(' rm -f '//afedir(1:lafedir))
      OPEN (LECDFN , FILE = afedal, status='OLD',
     +      form = 'FORMATTED', access = 'SEQUENTIAL')
      OPEN (LWRMGR , FILE = afedir, status='NEW', ERR=999)
C Read listfiles.data :
      linda=0
 200  READ ( LECDFN , '(A)' , END = 300 , ERR = 920)  LINCH
      linda=linda+1
      call prpsls(linch,file,date,size)
C check if this file is not superseded by one of the day:
      iold=0
      do 150 k=1,newed
         if (index(file,edirna(k)(1:lnblnk(edirna(k)))).gt.0) then
            itags(k)=1
            iold=k
            go to 160
         endif
 150  continue
 160  continue
C write the appropriate line on afedir (filelist.alledirs) :
      if (iold.eq.0) then
         write (lwrmgr, '(A)') linch(1:lnblnk(linch))
      else
         llo=lnblnk(elines(iold))
         write (lwrmgr, '(A)') elines(iold)(1:llo)
      endif
      go to 200
C reading finished : close lecdfn:
 300  continue
      close (lecdfn)
C-----------------------------------------------------------------------
C Now write the new edirs at the end of filelist.alledirs :
      DO 400 I=1,NEWED
         IF (ITAGS(I).NE.0) GO TO 400
         lli=lnblnk(elines(i))
         WRITE (LWRMGR, '(A)' )  ELINES(I)(1:lli)
 400  CONTINUE
C and close the file:
      close (lwrmgr)
C Rename listfile.data as listfiles.data_old :
      call system(' mv '//afedal(1:lafedal)//' '//afedol(1:lafedol))
C Rename filelist.edirs  as listfiles.data :
      call system(' mv '//afedir(1:lafedir)//' '//afedal(1:lafedal))
C Erase all the temporary small files of the day:
      DO 600 K=1,NEWED
         edirlm=' '
         edirlm=edirna(K)(1:lnblnk(edirna(k)))//'list'
         llm=lnblnk(edirlm)
         call system(' rm -f '//edirlm(1:llm))
 600  continue
C
      GO TO 999
C-----------------------------------------------------------------------
C ERRORS:
C Error when reading the list.new_edirs file:
 900  IER=1
      write (lwrdbg,1001) ier,newed,afenew(1:lafenew)
 1001 format (/10x,' ** Error in BKLISUPD ier,newed =',2i8,
     +        ' file =',(A))
      GO TO 999
C Too many new EDIRs this day:
 910  IER=2
      write (lwrdbg,1002) ier,newed,afenew(1:lafenew)
 1002 format (/10x,' ** Too many EDIRs in BKLISUPD ier,newed =',2i8,
     +        ' file =',(A))
      GO TO 999
C Error when reading the listfiles.data file:
 920  IER=3
      write (lwrdbg,1003) ier,linda,afedal(1:lafedal)
 1003 format (/10x,' ** Error in BKLISUPD ier,linda =',2i8,
     +        ' file =',(A))
      GO TO 999
C Error when reading the listfiles.data file:
 930  IER=4
      write (lwrdbg,1004) ier,fina
 1004 format (/10x,' ** Error in BKLISUPD ier =',i8,
     +        ' file =',(A))
C
 999  RETURN
      END
      SUBROUTINE BKLOCM(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads TMODLOCA files sent by the tapes facility
C  J. Boucrot  15-Jun-1996
C  Completely rewritten 01-Oct-1998
C  Called from BKMODD                           from BOOKLIB
C  Calls BKMESG,BKGTMS,BKMODI                   from BOOKLIB
C Output argument :
C    IER  =  1 if syntax error in file
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      SAVE
      CHARACTER TAPN*8,TMLOC*4,TMBIN*20,SEPLO*1
      CHARACTER*80 BLA,MESG,INFO
      DATA SEPLO / '_' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ISCOK=0
      MESG=' '
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
      REWIND LECTXT
      IREC=0
C
 5    READ ( LECTXT, '(A)' , END=800 , ERR=900 ) INFO
      CALL CLTOU(INFO)
      IREC=IREC+1
      BLA=' '
      BLA=INFO(1:LNBLNK(INFO))
      WRITE ( LWRDBG , 1099) BLA
      IF (IREC.EQ.1) GO TO 5
      TAPN=INFO(2:7)//'  '
C-----------------------------------------------------------------------
C find the new location :
      TMBIN=' '
      CALL BKGTMS(TAPN(1:6),6,ITMF,TMBIN)
      IF (ITMF.LE.0) GO TO 5
      INOLO=INDEX(TMBIN,SEPLO)
      IF (INOLO.EQ.0) GO TO 5
      TMLOC=TMBIN(INOLO+1:INOLO+4)
      INEWL=INTCHA(TMLOC)
      J1=INTCHA(TAPN(1:4))
      J2=INTCHA(TAPN(5:8))
C
C Files TMODLOCA xxxxxxx sent by TAPES EXEC give a list of tapes whose
C locations have changed . Store the new locations into the 'BLOT' bank
C ( Temporary bank initialized in BKSTLO and use in BKBDFS )
C
      NFOUN=0
C Find all occurences of TAPN in 'BLOT' :
      DO 200 IDF=1,2
         JBLOT=NLINK('BLOT',IDF)
         IF (JBLOT.EQ.0) GO TO 200
         NBLOT=LROWS(JBLOT)
         JBDFS=NLINK('BDFS',IDF)
         IF (JBDFS.EQ.0) GO TO 200
         DO 100 IBLOT=1,NBLOT
            KBLOT=KROW(JBLOT,IBLOT)
            IF (IW(KBLOT+JBDFTC).NE.J1)    GO TO 100
            IF (IW(KBLOT+JBDFTC+1).NE.J2)  GO TO 100
            NFOUN=NFOUN+1
            KBDFS=KROW(JBDFS,IBLOT)
            NPER=IW(KBDFS+JBDFNP)
            CALL BKMODI('BSET',NPER,0,LBSETA,IERM)
            IW(KBLOT+JBDFLO)=INEWL
 100     CONTINUE
 200  CONTINUE
      IF (NFOUN.EQ.0) GO TO 5
      ISCOK=ISCOK+1
      WRITE ( LWRDBG,1119) TAPN,TMLOC,NFOUN
      GO TO 5
C-----------------------------------------------------------------------
C Processing terminated :
 800  IF (IBAUTO.EQ.0) PRINT 1104,ISCOK
      WRITE ( LWRDBG,1104) ISCOK
      GO TO 999
C-----------------------------------------------------------------------
C Syntax error in TMODLOCA cards file :
C
 900  IVAL=1
      MESG=(' +++ Error in BKLOCM : syntax error in file')
 920  IER=1
      BLA=INFO(1:80)
      CALL BKMESG(BLA,IVAL,MESG)
 999  RETURN
C-----------------------------------------------------------------------
 1099 FORMAT (/1X,A80)
 1100 FORMAT (/2X,'=== Subroutine BKLOCM ===   : Start processing',
     +        ' Request File',I5,2X,A25/)
 1104 FORMAT (/7X,'+++ Total Number of tapes with new locations  =',I9)
 1119 FORMAT (7X,'+++ BKLOCM : Tape : ',2X,A8,' New location =',2x,A4,
     +        ' for Nfiles =',I6)
 1130 FORMAT (7X,'+++ BKLOCM starts mod. location for ',I6,' Datasets')
      END
*/ ------------------ New routine --------------------------
      SUBROUTINE BKLUFI(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Writes 'RLUM'  'LFIL'  'RSLU' and 'RXYZ'  banks for the ADBSCONS DAF
C  Author  J.Boucrot  21-May-1990  - Modified many times -
C  Completely rewritten 15-Dec-1994 to avoid ASSIGN for OSF1
C  Add call to BKLUS4 + UNIX version , 12-Oct-1995
C Called from BKUPDF                                      from BOOKLIB
C Calls BKRUOK,BKMESG,BKLURL,BKLULF,BKLUXY,BKLUSL,BKLUFP  from BOOKLIB
C Calls ACLOSE,AOPDBS,AOPEN,AUBOS                         from ALEPHLIB
C Calls VMCMS,DATIME,IUCOMP                               from GENLIB
C Calls NAMIND,BREAD,BLIST                                from BOS77
C        Cannot run without 'BADB' data card !!
C
C  2 modes of running  , depending on 'BADB' card :
C     Default :  'BADB'       -->   current year updated in database
C                'BADB' IYEA  -->   year IYEA updated ( if it exists ! )
C Output argument :
C    IER  = 0 if all OK ;
C         = 1 if no run found ( wrong inputs )
C         = 2 if no room to book banks
C         = 3 if problem in writing 'RLUM' or 'LFIL' or 'RXYZ'
C         = 4 if problem with ADBSCONS DAF
C         = 5 if problem with XYZVERTR CARDS file
C         = 6 if problem with DBAS BANK      file
C----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- RLUMJJ ----
      PARAMETER(JRLURN=1,JRLURQ=2,JRLUNZ=3,JRLUNB=4,JRLULU=5,JRLUBK=6,
     +          JRLUBT=7,LRLUMA=7)
C-- LFILJJ ----
      PARAMETER(JLFILF=1,JLFIFR=2,JLFILR=3,JLFINV=4,JLFILE=5,JLFIBX=6,
     +          JLFIBY=7,JLFIBZ=8,JLFIEX=9,JLFIEY=10,JLFIEZ=11,
     +          JLFIOF=12,LLFILA=12)
C-- RXYZJJ ----
      PARAMETER(JRXYRN=1,JRXYNV=2,JRXYFL=3,JRXYBX=4,JRXYBY=5,JRXYBZ=6,
     +          JRXYEX=7,JRXYEY=8,JRXYEZ=9,JRXYLU=10,JRXYOF=11,
     +          LRXYZA=11)
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
C-- RS4BJJ ----
      PARAMETER(JRS4RN=1,JRS4LQ=2,JRS4B1=3,JRS4L1=4,JRS4K1=5,JRS4B2=6,
     +          JRS4L2=7,JRS4K2=8,JRS4B3=9,JRS4L3=10,JRS4K3=11,
     +          JRS4B4=12,JRS4L4=13,JRS4K4=14,LRS4BA=14)
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
      PARAMETER (TOLPC = 0.01 , NRROW = 500 , NLROW = 250 , NFILR = 50 )
      PARAMETER ( IYM = 10000 , NRRP = 1)
      INTEGER LISRL(NFILR),LISFL(NFILR),LISXU(NFILR),LISSL(NFILR)
      INTEGER LISS4(NFILR),LISRJ(100)
      CHARACTER BLA*80,MESG*80,MSG*80
      DATA IRUST / 9999999 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
C Initialisations :
C----------------------------------------------------------------------
      IER=0
      MINSI=MINSIC
      MIN4B=MIR4BU
C A data card 'BADB'  must be present :
      IBADB=IW(NAMIND('BADB'))
      IF (IBADB.LE.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1100
      WRITE ( LWRDBG , 1100 )
C
      NMODL=0
      NMODR=0
      NMODX=0
      NMODS=0
      CALL VZERO(LISS4,NFILR)
      NMOD4=0
      IF (IBUPDA.LT.1) GO TO 999
      CALL VZERO(LISRL,NFILR)
      CALL VZERO(LISFL,NFILR)
      CALL VZERO(LISXU,NFILR)
      CALL VZERO(LISSL,NFILR)
C Initialise common / RLUFIL / :
      TOLPCU=TOLPC
      MINRSI=MINSI
      MINR4B=MIN4B
      MXRLUL=NRROW
      NBARLU=1
      MXLFUL=NLROW
      NBALFU=1
      MXYZUL=NRROW
      NBALXY=1
      MXSLUL=NRROW
      NBASLU=1
      MXS4BU=NRROW
      NBAS4B=1
      IF (IW(IBADB).EQ.0) THEN
         CALL DATIME(ID,IT)
         INN=ID/IYM
         IF (INN.GT.10) THEN
            IYCA=1900+INN
         ELSE
            IYCA=2000+INN
         ENDIF
      ELSE
         IYCA=IW(IBADB+1)
      ENDIF
      INDY=IUCOMP(IYCA,LISYEA,NTOYEA)
      IF (INDY.EQ.0.OR.INDY.EQ.NTOYEA) GO TO 905
      NRUMI=LISFRU(INDY)
      NRUMX=LISFRU(INDY+1)
      NRRLUL=LISLFI(INDY)
      NRLFUL=LISLFI(INDY)
      NXYZUL=LISLFI(INDY)
      NRSLUL=LISLFI(INDY)
      NRS4BU=LISLFI(INDY)
      IF (IYCA.EQ.1992) NRSLUL=MINSI
      IRUDA=IRUST
C
C Initialise intermediate banks 'RLUL', 'LFUL', 'RXYU', 'SLUL', 'S4BU' :
C
      LMRLU=LMHLEN+MXRLUL*LRLUMA
      CALL AUBOS('RLUL',NRRLUL,LMRLU,JRLUL,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      IW(JRLUL+LMHCOL)=LRLUMA
      IW(JRLUL+LMHROW)=0
C
      LMLFU=LMHLEN+MXLFUL*LLFILA
      CALL AUBOS('LFUL',NRLFUL,LMLFU,JLFUL,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      IW(JLFUL+LMHCOL)=LLFILA
      IW(JLFUL+LMHROW)=0
C
      LMSLU=LMHLEN+MXSLUL*LRSLUA
      CALL AUBOS('SLUL',NRSLUL,LMSLU,JSLUL,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      IW(JSLUL+LMHCOL)=LRSLUA
      IW(JSLUL+LMHROW)=0
C
      LMS4B=LMHLEN+MXS4BU*LRS4BA
      CALL AUBOS('S4BU',NRS4BU,LMS4B,JS4BU,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      IW(JS4BU+LMHCOL)=LRS4BA
      IW(JS4BU+LMHROW)=0
C
C Open the ADBSCONS DAF :
C
      CALL AOPDBS('ADBSTEST',IER)
      IF (IER.NE.0) GO TO 940
C----------------------------------------------------------------------
C Loop on all RUNS known from the SCANBOOK database bank 'BRUC' :
C----------------------------------------------------------------------
C
      JBRUC=NAMIND('BRUC')+1
 10   JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 600
      IRUNF=100000
      IRUNL=-1
      NVERS=0
      NRUFI=0
      NRUNS=LROWS(JBRUC)
      IF (NRUNS.LE.0) GO TO 10
C----------------------------------------------------------------------
C Loop on all runs of this period :
C
      DO 500 IK=1,NRUNS
         KBRUC=KROW(JBRUC,IK)
         IRUN=IW(KBRUC+JBRURN)
         IF (IRUN.LT.NRUMI.OR.IRUN.GT.NRUMX) GO TO 500
C Is it a good run ?
         CALL BKRUOK(IRUN,IPHYS,IOK)
         IF (IOK.NE.0.AND.IK.EQ.NRUNS)  GO TO 250
         IF (IOK.NE.0)  GO TO 500
C Update run_dependant quantities in bank 'RLUL'
         CALL BKLURL(KBRUC,IRUDA,NMODR,LISRL,IERL)
         IF (IERL.NE.0) GO TO 920
C Update run_dependant quantities in bank 'SLUL'
         CALL BKLUSL(IRUN,NMODS,LISSL,IERS)
         IF (IERS.NE.0) GO TO 920
C Update run_dependant quantities in bank 'S4BU'
         CALL BKLUS4(IRUN,NMOD4,LISS4,IER4)
         IF (IER4.NE.0) GO TO 920
C Update Fill_dependant quantities in bank 'LFUL'
 250     CALL BKLULF(JBRUC,IK,NMODL,LISFL,IERL)
         IF (IERL.NE.0) GO TO 920
C end of loop on runs of a given period :
 500  CONTINUE
C go to next period of data taking :
      GO TO 10
C End of all periods :
 600  CONTINUE
      IF (NMODL+NMODR+NMODX+NMODS+NMOD4.EQ.0) GO TO 910
C-----------------------------------------------------------------------
C  All runs processed   : final saving on files in BOS CARDS format
C-----------------------------------------------------------------------
      CALL BKLUFP(LISRL,NMODR,LISFL,NMODL,LISSL,NMODS,LISXU,NMODX,
     +            LISS4,NMOD4,NRUMI,NRUMX,IERB)
      IF (IERB.EQ.1) GO TO 930
      IF (IERB.EQ.2) GO TO 948
      IER=0
C Save separately the LFIL bank:
      CALL BKLULFDB(IER)
      IF (IER.NE.0) GO TO 948
      GO TO 999
C----------------------------------------------------------------------
C Error processing :
C----------------------------------------------------------------------
C Wrong data card BADB ; not fatal , but issue a warning :
 905  IER=1
      IF (IBAUTO.EQ.0) PRINT 1031,INDY
      WRITE ( LWRDBG , 1031 )  INDY
      GO TO 999
C No runs found : NOT fatal , but issue a warning :
 910  IER=1
      IF (IBAUTO.EQ.0) PRINT 1033
      WRITE ( LWRDBG , 1033 )
      GO TO 999
C No room for banks :
 920  IER=2
      MESG=' +++ Error in BKLUFI : no room for banks'
      GO TO 950
C Problem with OPEN :
 930  IER=3
      MESG=' +++ Error in BKLUFI : problem with NEWRLFIL file'
      GO TO 950
C Problem with ADBSCONS DAF :
 940  IER=4
      MESG=' +++ Error in BKLUFI : problem with ADBSCONS DAF'
      GO TO 950
C Problem with DBAS BANK or DROP LUMBANKS files :
 948  IER=6
      MESG=' +++ Error in BKLUFI : problem with DBAS BANK file'
 950  BLA=' '
      IVAL=0
      CALL BKMESG(BLA,IVAL,MESG)
      GO TO 999
C
 999  RETURN
C----------------------------------------------------------------------
 1031 FORMAT (//' +++ Warning : in BKLUFI : wrong year asked :',I8)
 1033 FORMAT (//' +++ Warning : in BKLUFI : no MODIFIED runs found' )
 1100 FORMAT (/22X,'=== Subroutine BKLUFI : start building new',
     +             ' banks RLUM and LFIL')
      END
      SUBROUTINE BKLUFP(LISRL,NMODR,LISFL,NMODL,LISSL,NMODS,LISXU,NMODX,
     +                  LISS4,NMOD4,NRUMI,NRUMX,IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Auxiliary to BKLUFI
C  Author  J.Boucrot  08-Jun-1993
C UNIX Version and mods for 'RS4B' bank 12-Oct-1995
C Called from BKLUFI                                      from BOOKLIB
C Calls AUBPRS                                            from ALEPHLIB
C Calls BKDAPR                                            from BOOKLIB
C Calls BUNIT,BWRSB                                       from BOSLIB
C Calls VMCMS                                             from GENLIB
C Input  arguments :
C  LISRL,NMODR = list and number of modifs to 'RLUM' banks
C  LISFL,NMODL = list and number of modifs to 'LFIL' banks
C  LISSL,NMODS = list and number of modifs to 'RSLU' banks
C  LISXU,NMODX = list and number of modifs to 'RXYZ' banks
C  NRUMI,NRUMX = minimum and maximum run number presently scanned
C  LISS4,NMOD4 = list and number of modifs to 'RS4B' banks
C Output argument :
C  IER = 0 if all OK
C  IER = 1 if problem with intermediate files
C  IER = 2 if problem with DBAS BANK or DROP NEWBANKS files
C----------------------------------------------------------------------
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER FINA*60
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- RLUMJJ ----
      PARAMETER(JRLURN=1,JRLURQ=2,JRLUNZ=3,JRLUNB=4,JRLULU=5,JRLUBK=6,
     +          JRLUBT=7,LRLUMA=7)
C-- LFILJJ ----
      PARAMETER(JLFILF=1,JLFIFR=2,JLFILR=3,JLFINV=4,JLFILE=5,JLFIBX=6,
     +          JLFIBY=7,JLFIBZ=8,JLFIEX=9,JLFIEY=10,JLFIEZ=11,
     +          JLFIOF=12,LLFILA=12)
C-- RXYZJJ ----
      PARAMETER(JRXYRN=1,JRXYNV=2,JRXYFL=3,JRXYBX=4,JRXYBY=5,JRXYBZ=6,
     +          JRXYEX=7,JRXYEY=8,JRXYEZ=9,JRXYLU=10,JRXYOF=11,
     +          LRXYZA=11)
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
C-- RS4BJJ ----
      PARAMETER(JRS4RN=1,JRS4LQ=2,JRS4B1=3,JRS4L1=4,JRS4K1=5,JRS4B2=6,
     +          JRS4L2=7,JRS4K2=8,JRS4B3=9,JRS4L3=10,JRS4K3=11,
     +          JRS4B4=12,JRS4L4=13,JRS4K4=14,LRS4BA=14)
      PARAMETER ( NBANS = 100 )
      INTEGER LDRSL(NBANS),LDRLU(NBANS),LDRXY(NBANS),LDLFI(NBANS)
      INTEGER LJRSL(NBANS),LJRLU(NBANS),LJRXY(NBANS),LJLFI(NBANS)
      INTEGER LDRS4(NBANS),LJRS4(NBANS)
      INTEGER LISRL(*),LISFL(*),LISXU(*),LISSL(*),LISS4(*)
      CHARACTER CLINO*72,CLINW*72,FNPR*72,MSG*80,CLODO*65
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
C Various initialisations :
      IER=0
      LUNDB=JUNIDB(0)
      CALL VZERO(LDRSL,NBANS)
      CALL VZERO(LDRLU,NBANS)
      CALL VZERO(LDRXY,NBANS)
      CALL VZERO(LDLFI,NBANS)
      CALL VZERO(LJRSL,NBANS)
      CALL VZERO(LJRLU,NBANS)
      CALL VZERO(LJRXY,NBANS)
      CALL VZERO(LJLFI,NBANS)
      CALL VZERO(LJRS4,NBANS)
      NJRS4=0
      NJRLU=0
      NJLFI=0
      NJRSL=0
      NJRXY=0
C----------------------------------------------------------------------
C  All runs processed   : final saving on files in BOS CARDS format
C Define the intermediate BOS CARDS file to write 'RLUM','LFIL' and 'RXY
C
      FNPR=' '
      FNPR=ALS_TEMP(1:ILTEMP)//'prfrlu'//TIMNAM
      FNPR=FNPR(1:LNBLNK(FNPR))
      CALL SYSTEM(' rm -f '//FNPR)
      OPEN ( LWRFIL , FILE = FNPR , STATUS = 'NEW' , ERR = 930 )
      CALL BUNIT(LWRFIL,'TEXT',72)
      CALL AUBPRS('RLULLFULRXYUSLULS4BU')
C
C Loop on all 'RLUL' banks and write them on LWRFIL :
C
      IF (NMODR.EQ.0) GO TO 620
      CALL BKDAPR(LUNDB,'RLUM',LDRLU,NDRLU)
      IRL=0
      JRLUL=NAMIND('RLUL')+1
 610  JRLUL=IW(JRLUL-1)
      IF (JRLUL.EQ.0) GO TO 620
      IRL=IRL+1
C     IF (LISRL(IRL).EQ.0) GO TO 610
      NRBA=IW(JRLUL-2)
      NR1=ITABL(JRLUL,1,JRLURN)
      IF (NRBA.NE.NR1) IW(JRLUL-2)=NR1
      NNR=IW(JRLUL-2)
      NJRLU=NJRLU+1
      LJRLU(NJRLU)=NNR
C write bank RLUL , NR=NNR  :
      CALL BWRSB(IW,LWRFIL,'RLUL',NNR)
      GO TO 610
C
C same for 'LFUL'
C
 620  IF (NMODL.EQ.0) GO TO 650
      CALL BKDAPR(LUNDB,'LFIL',LDLFI,NDLFI)
      JLFUL=NAMIND('LFUL')+1
      ILF=0
 630  JLFUL=IW(JLFUL-1)
      IF (JLFUL.EQ.0) GO TO 650
      ILF=ILF+1
C     IF (LISFL(ILF).EQ.0) GO TO 630
      NRBA=IW(JLFUL-2)
      NR1=ITABL(JLFUL,1,JLFIFR)
      IF (NRBA.NE.NR1) IW(JLFUL-2)=NR1
      NNF=IW(JLFUL-2)
      NJLFI=NJLFI+1
      LJLFI(NJLFI)=NNF
C write bank LFUL , NR=NNF  :
      CALL BWRSB(IW,LWRFIL,'LFUL',NNF)
      GO TO 630
 650  CONTINUE
C
C same for 'SLUL'
C
 655  IF (NMODS.EQ.0) GO TO 660
      CALL BKDAPR(LUNDB,'RSLU',LDRSL,NDRSL)
      JSLUL=NAMIND('SLUL')+1
      ILS=0
 658  JSLUL=IW(JSLUL-1)
      IF (JSLUL.EQ.0) GO TO 660
      ILS=ILS+1
C     IF (LISSL(ILS).EQ.0) GO TO 658
      NRBA=IW(JSLUL-2)
      NR1=ITABL(JSLUL,1,JRSLRN)
      IF (NRBA.NE.NR1) IW(JSLUL-2)=NR1
      NNS=IW(JSLUL-2)
      NJRSL=NJRSL+1
      LJRSL(NJRSL)=NNS
C write bank SLUL , NR=NNS  :
      CALL BWRSB(IW,LWRFIL,'SLUL',NNS)
      GO TO 658
 660  CONTINUE
C
C same for 'S4BU'
C
      IF (NMOD4.EQ.0) GO TO 669
      CALL BKDAPR(LUNDB,'RS4B',LDRS4,NDRS4)
      JS4BU=NAMIND('S4BU')+1
      IL4=0
 662  JS4BU=IW(JS4BU-1)
      IF (JS4BU.EQ.0) GO TO 669
      IL4=IL4+1
C     IF (LISS4(IL4).EQ.0) GO TO 662
      NRBA=IW(JS4BU-2)
      NR1=ITABL(JS4BU,1,JRS4RN)
      IF (NRBA.NE.NR1) IW(JS4BU-2)=NR1
      NN4=IW(JS4BU-2)
      NJRS4=NJRS4+1
      LJRS4(NJRS4)=NN4
C write bank S4BU , NR=NN4  :
      CALL BWRSB(IW,LWRFIL,'S4BU',NN4)
      GO TO 662
 669  CONTINUE
C----------------------------------------------------------------------
C  Open the final output BOS cards file ; write on it
C
 680  CONTINUE
      IF (IW(NAMIND('NOWR')).NE.0) GO TO 999
C The BOS CARDS file must be rewritten to move BANK names in col. 1 :
      REWIND (LWRFIL)
      FINA=' '
      FINA=ALS_TEMP(1:ILTEMP)//'difrlu'//TIMNAM
      FINA=FINA(1:LNBLNK(FINA))
      CALL SYSTEM(' rm -f '//FINA)
      OPEN ( LWRFRV , FILE = FINA , STATUS = 'NEW' , ERR = 930 )
C
 690  READ ( LWRFIL , '(A72)' , END=700 , ERR=930 ) CLINO
      IF (INDEX(CLINO,'START OF').NE.0) GO TO 690
      IF (INDEX(CLINO,'$FMT').NE.0) GO TO 690
      CLINW=CLINO(2:LNBLNK(CLINO))
      IF (CLINW(1:4).EQ.'ENDQ') GO TO 690
      IF (CLINW(1:4).EQ.'RLUL') CLINW(1:4)='RLUM'
      IF (CLINW(1:4).EQ.'LFUL') CLINW(1:4)='LFIL'
      IF (CLINW(1:4).EQ.'SLUL') CLINW(1:4)='RSLU'
      IF (CLINW(1:4).EQ.'RXYU') CLINW(1:4)='RXYZ'
      IF (CLINW(1:4).EQ.'S4BU') CLINW(1:4)='RS4B'
      WRITE ( LWRFRV , '(A72)' ) CLINW
      GO TO 690
C----------------------------------------------------------------------
C Close files , erase the intermediate BOS CARDS file :
C
 700  CLOSE ( LWRFRV )
      CALL SYSTEM(' rm -f '//FNPR)
      MSG=' '
      MSG=ALS_TEMP(1:ILTEMP)//'dbas.bank'
      CALL SYSTEM(' mv '//FINA(1:LNBLNK(FINA))//' '//
     +            MSG(1:LNBLNK(MSG)))
 810  IF (IBAUTO.EQ.0) PRINT 1101,NMODR,NMODL
      WRITE ( LWRDBG , 1101 ) NMODR,NMODL
C----------------------------------------------------------------------
C Now check if there is any need to create a 'DROP' file :
C
      CALL BKLUFW(NRUMI,NRUMX,'RLUM',LDRLU,NDRLU,LJRLU,NJRLU,NMRLU,IERB)
      IF (IERB.NE.0) GO TO 940
      CALL BKLUFW(NRUMI,NRUMX,'LFIL',LDLFI,NDLFI,LJLFI,NJLFI,NMLFI,IERB)
      IF (IERB.NE.0) GO TO 940
      CALL BKLUFW(NRUMI,NRUMX,'RSLU',LDRSL,NDRSL,LJRSL,NJRSL,NMRSL,IERB)
      IF (IERB.NE.0) GO TO 940
      CALL BKLUFW(NRUMI,NRUMX,'RS4B',LDRS4,NDRS4,LJRS4,NJRS4,NMRS4,IERB)
      IF (IERB.NE.0) GO TO 940
      GO TO 999
C Problem with files :
 930  IER=1
      GO TO 999
 940  IER=2
 999  CONTINUE
      CLOSE ( LWRFIL )
      CLOSE ( LWRUSR )
      CALL SYSTEM(' rm -f '//FNPR)
      RETURN
C----------------------------------------------------------------------
 1101 FORMAT (30X,'+++ BKLUFP : Modified elements in RLUM , LFIL =',
     +       2I8,/30X,'+++ New DBAS BANK sent to ADBSCONS Manager +++')
 1102 FORMAT (30X,'+++ DROP NEWBANKS sent to ADBSCONS Manager +++')
      END
      SUBROUTINE BKLUFW(NRUMI,NRUMX,NAME,LDRL,NDRL,LJRL,NJRL,NMODS,IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Auxiliary to BKLUFP
C  Author  J.Boucrot  08-Jun-1993
C UNIX Version 06-Oct-1995
C Called from BKLUFP                                      from BOOKLIB
C Calls BKCARI                                            from ALEPHLIB
C Calls VMCMS                                             from GENLIB
C Input  arguments :
C  NRUMI,NRUMX = minimum and maximum run number presently scanned
C  NAME        = name of the bank presently read from DAF
C  LDRL ,NDRL  = list and number of banks NAME from DAF
C  LJRL ,NJRL  = list and number of banks NAME from the present update
C Output arguments :
C  NMODS       = number of obsolete DAF banks found
C  IER = 0 if all OK , = 1 if problem with files
C----------------------------------------------------------------------
      SAVE
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      INTEGER LDRL(*),LJRL(*)
      CHARACTER NAME*4,BLAW*72,MSG*80,CQUOT*1,RUNU*5
      LOGICAL FIRST
      DATA FIRST / .TRUE. /
C----------------------------------------------------------------------
      IER=0
      CQUOT=''''
      NMODS=0
      IF (IW(NAMIND('BDBG')).EQ.0) GO TO 50
      WRITE ( LWRDBG,1011) NAME,NRUMI,NRUMX,NDRL,NJRL
      WRITE ( LWRDBG,1012) (LDRL(K),K=1,NDRL)
      WRITE ( LWRDBG,1013) (LJRL(K),K=1,NJRL)
 50   IF (NDRL.LE.0.OR.NJRL.LE.0) GO TO 999
C Loop on all DAF bank numbers ; check if they are in the UPDABOOK list
      DO 500 NDB=1,NDRL
         NDBAN=LDRL(NDB)
         IF (NDBAN.LT.NRUMI.OR.NDBAN.GT.NRUMX) GO TO 500
         IF (IUCOMP(NDBAN,LJRL,NJRL).GT.0) GO TO 500
         NMODS=NMODS+1
         IF (FIRST) THEN
            FIRST=.FALSE.
            MSG=' '
            MSG=ALS_STAT(1:ILSTAT)//'drop.lumbanks'
            MSG=MSG(1:LNBLNK(MSG))
            CALL SYSTEM(' rm -f '//MSG)
            OPEN ( LWRUSR , FILE = MSG , STATUS = 'NEW' , ERR = 940 )
            IF (IER.NE.0) GO TO 940
         ENDIF
         CALL BKCARI(NDBAN,5,RUNU)
C Write a line on the file DROP LUMBANKS :
         BLAW='DROP '//CQUOT//NAME//CQUOT//'  '//RUNU
         WRITE ( LWRUSR , 1001 ) BLAW
 500  CONTINUE
      GO TO 999
C Problem with LUMBANKS file :
 940  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (A72)
 1011 FORMAT (/' ++ Entry BKLUFW NAME , nrumi,nrumx,ndrl,njrl =',
     +2X,A4,4I8)
 1012 FORMAT (5X,' List of DAF bank numbers =',10I8)
 1013 FORMAT (5X,' List of UPDABOOK bank numbers =',10I8)
      END
      SUBROUTINE BKLULF(JBRUC,IK,NMODL,LISFL,IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS / INTERNAL
C! Update FILL-dependant quantities in bank 'LFUL'
C  Author  J.Boucrot  15-Dec-1994
C Called from BKLUFI                        from BOOKLIB
C Calls BKLFUL,BKBPOS                       from BOOKLIB
C Calls GETLEP,GETOFS                       from ALEPHLIB
C  Input arguments :
C JBRUC = Pointer to 'BRUC' bank
C    IK = Current row in 'BRUC'
C NMODL = number of modified FILLS in 'LFUL'
C LISFL = tag list for 'LFUL' banks
C Output argument  :
C    IER  = 0 if all OK ;
C         = 1 if no room to book banks
C----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
      COMMON / VERBEA/  NVERB,XYB(20),DDB(3),XYZB(3)
      INTEGER LISFL(*)
      REAL DDS(3),XYZS(3),DXYZS(3),XYS(20),XYZD(3),DXYZD(3)
      DATA  IPASS / 0 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      IF (JBRUC.EQ.0.OR.IK.LE.0) GO TO 999
      KBRUC=KROW(JBRUC,IK)
      NRUNS=LROWS(JBRUC)
      IRUN=IW(KBRUC+JBRURN)
      LFILL=IW(KBRUC+JBRULF)
      ELEPS=0.001*FLOAT(IW(KBRUC+JBRUTE))
      IF (IPASS.EQ.0) THEN
         IPASS=1
         LFILO=LFILL
         ELEPO=ELEPS
         IRUNF=100000
         IRUNL=-1
         CALL VZERO(DDS,3)
         CALL VZERO(XYZS,3)
         CALL VZERO(XYS,20)
         CALL VZERO(DXYZS,3)
         NVERS=0
         NRUFI=0
      ENDIF
C
C Same fill : increment the content of the "fill buffer" :
C
      IF (LFILL.EQ.LFILO) THEN
         NRUFI=NRUFI+1
         NVERS=NVERS+NVERB
         IRUNF=MIN0(IRUNF,IRUN)
         IRUNL=MAX0(IRUNL,IRUN)
         XYZS(3)=XYZS(3)+XYZB(3)
         DDS(3)=DDS(3)+DDB(3)
         DO 100 IY=1,20
 100     XYS(IY)=XYS(IY)+XYB(IY)
         IF (IK.EQ.NRUNS) GO TO 300
         GO TO 470
      ENDIF
C
C This run begins a new fill . First , terminate the previous one :
C
 300  CONTINUE
      IRCC=0
C Search if it was already in the ADBSCONS DAF :
      CALL GETLEP(IRUN,IOK,IFILL,NVERD,ELEPD,XYZD,DXYZD)
      CALL GETOFS(IRUN,OLDOF)
      IF (IOK.EQ.0) IRCC=1
      IF ( ABS(ELEPO-ELEPD).GT.TOLPCU) IRCC=IRCC+1
      IF (NVERS.LE.2) GO TO 350
      IF (NVERS.NE.NVERD) IRCC=IRCC+1
C Compute Z position and error on it :
      ISS=3
      XYZS(ISS)=XYZS(ISS)/NVERS
      IF (ABS(XYZS(ISS)-XYZD(ISS)).GT.TOLPCU**2) IRCC=IRCC+1
      DDS(ISS)=(DDS(ISS)/NVERS-XYZS(ISS)**2)/(NVERS-1)
      DXYZS(ISS)=SQRT(ABS(DDS(ISS)))
      IF (ABS(DXYZS(ISS)-DXYZD(ISS)).GT.TOLPCU**3) IRCC=IRCC+1
 350  CONTINUE
C Compute X,Y positions and errors ( T. Burnett's algorithm ) :
      CALL BKBPOS(XYS,NTRAK,XYZS(1),XYZS(2),DXYZS(1),DXYZS(2),
     +            OFSET,IMETH)
C yes , it was .. Is it worth updating it ?
 400  IF (IRCC.GE.1) THEN
         NMODL=NMODL+1
         LISFL(NBALFU)=1
      ENDIF
C
C Store values for previous fill :
C
      CALL BKLFUL(LFILO,IRUNF,IRUNL,NTRAK,ELEPO,XYZS,DXYZS,OFSET,IER)
      IF (IER.NE.0) GO TO 900
      IF (IK.EQ.NRUNS.AND.LFILL.EQ.LFILO) GO TO 999
C
C RAZ the fill-dependant variables
C
 460  LFILO=LFILL
      ELEPO=ELEPS
      IRUNF=100000
      IRUNL=-1
      CALL VZERO(DDS,3)
      CALL VZERO(XYZS,3)
      CALL VZERO(XYS,10)
      CALL VZERO(DXYZS,3)
      NVERS=0
      NRUFI=0
C Store the quantities just read into the "fill buffer" for next fill:
      NRUFI=NRUFI+1
      NVERS=NVERS+NVERB
      IRUNF=MIN0(IRUNF,IRUN)
      IRUNL=MAX0(IRUNL,IRUN)
      XYZS(3)=XYZS(3)+XYZB(3)
      DDS(3)=DDS(3)+DDB(3)
      DO 465 IY=1,20
 465  XYS(IY)=XYS(IY)+XYB(IY)
C  for last run , don't forget to store the data :
 470  IF (NRUFI.GE.1.AND.IK.EQ.NRUNS) GO TO 300
      GO TO 999
C No room for banks :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKLULFDB(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Auxiliary to BKLUFI : write RLUM and LFIL on separate files
C  Author  J.Boucrot  28-Sep-1998
C Called from BKLUFI                                      from BOOKLIB
C Calls AUBPRS                                            from ALEPHLIB
C Calls BKDAPR                                            from BOOKLIB
C Calls BUNIT,BWRSB                                       from BOSLIB
C Output argument :
C  IER = 0 if all OK
C  IER = 1 if problem with files
C----------------------------------------------------------------------
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER*72 FNIN,FNLU,FNDS,CLINO
C----------------------------------------------------------------------
C Definition and opening of files :
C dbas.bank on unit LWRFIL contains all banks :
      IER=0
      FNIN=' '
      FNIN=ALS_TEMP(1:ILTEMP)//'dbas.bank'
      FNIN=FNIN(1:LNBLNK(FNIN))
      OPEN ( LWRFIL , FILE = FNIN , STATUS = 'OLD' ,
     +       FORM = 'FORMATTED', ERR = 930 )
C lfil.bank to be written with only 'LFIL' on unit LWRFRV
      FNLU=' '
      FNLU=ALS_TEMP(1:ILTEMP)//'lfil.bank'
      FNLU=FNLU(1:LNBLNK(FNLU))
      CALL SYSTEM(' rm -f '//FNLU)
      OPEN ( LWRFRV , FILE = FNLU , STATUS = 'NEW' , ERR = 930 )
C dbas.newbank to be written without 'LFIL' on unit LWRUSR
      FNDS=' '
      FNDS=ALS_TEMP(1:ILTEMP)//'dbas.newbank'
      FNDS=FNDS(1:LNBLNK(FNDS))
      CALL SYSTEM(' rm -f '//FNDS)
      OPEN ( LWRUSR , FILE = FNDS , STATUS = 'NEW' , ERR = 930 )
C
      ILFIL=0
C
 100  READ ( LWRFIL , '(A72)' , END=700 , ERR=930 ) CLINO
      IF (INDEX(CLINO,'LFIL').NE.0) ILFIL=1
      IF (INDEX(CLINO,'RLUM').NE.0) ILFIL=0
      IF (INDEX(CLINO,'RSLU').NE.0) ILFIL=0
      IF (INDEX(CLINO,'RXYZ').NE.0) ILFIL=0
      IF (INDEX(CLINO,'RS4B').NE.0) ILFIL=0
      IF (ILFIL.EQ.1) THEN
         WRITE ( LWRFRV , '(A72)' ) CLINO
      ELSE
         WRITE ( LWRUSR , '(A72)' ) CLINO
      ENDIF
C
      GO TO 100
C----------------------------------------------------------------------
C Close files :
C
 700  CLOSE ( LWRFIL )
      CLOSE ( LWRFRV )
      CLOSE ( LWRUSR )
      CALL SYSTEM(' mv '//FNDS(1:LNBLNK(FNDS))//' '//
     +           FNIN(1:LNBLNK(FNIN)))
      WRITE ( LWRDBG , 1101 ) FNLU
      GO TO 999
C Problem with files :
 930  IER=1
      WRITE ( LWRDBG , 1102 )
 999  RETURN
C----------------------------------------------------------------------
 1101 FORMAT (/30X,'+++ BKLULFDB : LFIL banks written on ',2X,A72)
 1102 FORMAT (/30X,'+++ BKLULFDB : PROBLEM with files')
      END

      SUBROUTINE BKLUMI(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads special file of LUMINOSITY updates
C  stores informations in bank 'BRUC'
C  J. Boucrot  29-Mar-1990
C  Updated for new LUMI file content 29-Jul-1996
C  Called from BKMODD
C  Calls BKFPER,BKPOIN                               from BOOKLIB
C  Calls AUBOS                                       from ALEPHLIB
C  Output arguments :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      SAVE
      PARAMETER ( NONL = 100 )
      LOGICAL BTEST
      CHARACTER INFO*132
      DATA EF89 / 0.997 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      INOLU=0
      BACK=0.
      BTRG=1.
C find the run which was previously known as the last with final LUMI :
      MRUVL=-1
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 900
      KBLAS=KROW(JBLAS,1)
      NRULU=IW(KBLAS+JBLALU)
C the first record was already read in BKMODD :
      IREC=1
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C
C Read the input file :
C
 5    READ ( LECTXT, '(A132)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
      CALL CLTOU(INFO)
      IF (INDEX(INFO,'NRU').GT.0.OR.INDEX(INFO,'BHAB').GT.0) GO TO 5
C Decode the information of lumi and update BRUC :
 30   READ ( INFO , 1001 ) NRUN,NBHAB,RLUM
      IF (RLUM.LE.0.) GO TO 5
      CALL BKFPER(NRUN,0,NPER)
      IF (NPER.LE.0) GO TO 5
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LT.0) GO TO 900
      IF (JBRUC.EQ.0) GO TO 5
      NRUC=LROWS(JBRUC)
      IF (NRUC.LE.0) GO TO 5
      IOLD=0
      MRUVL=MAX0(MRUVL,NRUN)
      BTRG=1.
      IF ( NRUN.LT.LISFRU(2)) BTRG=EF89
C
      DO 80 IRO=1,NRUC
         IF (ITABL(JBRUC,IRO,JBRURN).NE.NRUN) GO TO 80
C If this run was already in 'BRUC' , this is an update :
C store the new , modified informations :
         KRUO=KROW(JBRUC,IRO)
         IW(KRUO+JBRUNB)=NBHAB
C        IW(KRUO+JBRUNZ)=NZER
         RW(KRUO+JBRULU)=RLUM
C        IW(KRUO+JBRUTE)=NINT(1000.*ENER)
C        RW(KRUO+JBRUBK)=BACK
C        RW(KRUO+JBRUBT)=BTRG
         IPHY=IW(KRUO+JBRUBR)
         IF (BTEST(IPHY,0)) THEN
            PRINT 1103,NRUN
            WRITE (LWRDBG,1103) NRUN
         ENDIF
         IQLOL=IW(KRUO+JBRUCS)
         IF (IQLOL.GE.-1) THEN
            IQUOL=(1+IQLOL)/10
         ELSE
            IQUOL=-1
         ENDIF
         IW(KRUO+JBRUCS)=1+10*IQUOL
         IOLD=1
 80   CONTINUE
      IF (IOLD.EQ.1) GO TO 600
C
C This run was not yet known in BRUC : increase the bank
C and store the info
C
      IOLR=0
      IF (JBRUC.EQ.0) THEN
         LENB=LBRUCA*NONL+LMHLEN
      ELSE
         IOLR=LROWS(JBRUC)
         IF (LFRROW(JBRUC).GT.1) GO TO 410
         LENB=IW(JBRUC)+LBRUCA*NONL
      ENDIF
C Book or enlarge 'BRUC' if needed :
      CALL AUBOS('BRUC',NPER,LENB,JBRUC,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBRUC+LMHCOL)=LBRUCA
 410  IW(JBRUC+LMHROW)=IOLR+1
C
      LRO=LROWS(JBRUC)
      KRUO=KROW(JBRUC,LRO)
      DO 420 IS=JBRUNZ,JBRULD
 420  IW(KRUO+IS)=-1
      IW(KRUO+JBRUCS)=-11
      IW(KRUO+JBRUNB)=NBHAB
      IW(KRUO+JBRUNZ)=NZER
      RW(KRUO+JBRULU)=RLUM
      RW(KRUO+JBRUBK)=BACK
      RW(KRUO+JBRUBT)=BTRG
      IW(KRUO+JBRUCS)=1+IW(KRUO+JBRUCS)
C
 600  WRITE ( LWRDBG , 1101 ) NRUN,NBHAB,RLUM
      NMODIF=NMODIF+1
      INOLU=INOLU+1
      GO TO 5
C
 800  CONTINUE
C Store in BLAS the new last run # for which the LUMI is definitive :
      IF (MRUVL.GT.NRULU) THEN
         IW(KBLAS+JBLALU)=MRUVL
         WRITE ( LWRDBG , 1102) MRUVL
      ENDIF
C If any modif done , book bank 'BADB' to trigger BKLUFI execution :
      IF (INOLU.LE.0) GO TO 999
      CALL AUBOS('BADB',1,0,JBADB,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      GO TO 999
C
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT(8X,I5,6X,I4,18X,F6.2)
 1100 FORMAT (/2X,'=== Subroutine BKLUMI ===   : Start processing',
     +        ' Request File',I5,2X,A20)
 1101 FORMAT (7X,'+++ BKLUMI UPDATE RUN,Bhabs,Lumi=',2I8,2X,F9.5)
 1102 FORMAT (/7X,'>>> END BKLUMI : Last Run with LUMI OK =',I8)
 1103 FORMAT (9X,'--- WARNING in BKLUMI  : Run ',I9,'  selected by ',
     +        ' Lumi experts , marked as DUCK in database !!')
      END
      SUBROUTINE BKLURL(KBRUC,IRUDA,NMODR,LISRL,IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS / INTERNAL
C! Update run-dependant quantities in bank 'RLUL'
C  Author  J.Boucrot  15-Dec-1994
C Called from BKLUFI                        from BOOKLIB
C Calls BKRLUL                              from BOOKLIB
C Calls GETLUM,GETLEP                       from ALEPHLIB
C  Input arguments :
C KBRUC = pointer inside 'BRUC' bank for current run
C IRUDA = lower run in current range
C NMODR = number of modified runs in 'RLUL'
C LISRL = tag list for 'RLUL' banks
C Output argument  :
C    IER  = 0 if all OK ;
C         = 1 if no room to book banks
C----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
      PARAMETER ( IRUST = 9999999 )
      REAL XYZD(3),DXYZD(3)
      INTEGER LISRL(*)
C----------------------------------------------------------------------
C Initialisations :
      IER=0
      CALL VZERO(XYZD,3)
      CALL VZERO(DXYZD,3)
C Get several variables for comparison with the content of the database
      IRUN=IW(KBRUC+JBRURN)
      IRQS=IW(KBRUC+JBRUBR)
      NUMZS=IW(KBRUC+JBRUNZ)
      NUMBS=IW(KBRUC+JBRUNB)
      RLUMS=RW(KBRUC+JBRULU)
      IF (NUMZS.LT.0) NUMZS=0
      IF (NUMBS.LT.0) NUMBS=0
      IF (RLUMS.LT.0.) RLUMS=0.
      BACKG=RW(KBRUC+JBRUBK)
      BHTRG=RW(KBRUC+JBRUBT)
C  Is this run already on ADBSCONS DAF ?
      CALL GETLUM(IRUN,IOK,IRQD,NUMZD,NUMBD,RLUMD,BACKD,BTRGD)
      IF (IOK.EQ.0) THEN
         IRC=1
         IRUDA=MIN0(IRUDA,IRUN)
         IF (IRUDA.EQ.IRUST) GO TO 100
      ENDIF
C Run already on ADBSCONS DAF . Is it worth updating ?
      IRC=0
      IF (IRQS.NE.IRQD) IRC=IRC+1
      IF (NUMZS.NE.NUMZD) IRC=IRC+1
      IF (NUMBS.NE.NUMBD) IRC=IRC+1
      IF (ABS(RLUMS-RLUMD).GT.TOLPCU) IRC=IRC+1
      IF (ABS(BACKG-BACKD).GT.TOLPCU) IRC=IRC+1
      IF (ABS(BHTRG-BTRGD).GT.TOLPCU) IRC=IRC+1
      ENDAF=0.
      EBRUC=0.001*FLOAT(IW(KBRUC+JBRUTE))
      CALL GETLEP(IRUN,IFOU,IFIL,NV,ENDAF,XYZD,DXYZD)
      IF (IFOU.GT.0.AND.ABS(ENDAF-EBRUC).GT.TOLPCU) IRC=IRC+1
 100  IF (IRC.GE.1) THEN
         NMODR=NMODR+1
         LISRL(NBARLU)=1
      ENDIF
C Add a new row in 'RLUL' :
      CALL BKRLUL(IRUN,IRQS,NUMZS,NUMBS,RLUMS,BACKG,BHTRG,IER)
      IF (IER.NE.0) GO TO 900
      GO TO 999
C No room for banks :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKLUSL(IRUN,NMODS,LISSL,IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS / INTERNAL
C! Update run-dependant quantities in bank 'SLUL'
C  Author  J.Boucrot  15-Dec-1994
C Called from BKLUFI                        from BOOKLIB
C Calls BKSLUL,BKPOIN,BKFPER                from BOOKLIB
C Calls GETSLU                              from ALEPHLIB
C  Input arguments :
C IRUN  = Current run
C NMODS = number of modified runs in 'SLUL'
C LISSL = tag list for 'SLUL' banks
C Output argument  :
C    IER  = 0 if all OK ;
C         = 1 if no room to book banks
C----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
      INTEGER LISSL(*)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
C Get several variables for comparison with the content of the database
C if there is any SICAL information for this run in 'BSLU' :
      IF (IRUN.LT.MINRSI)  GO TO 500
      CALL BKFPER(IRUN,0,NPRU)
      IF (NPRU.LE.0) GO TO 500
      CALL BKPOIN(LECDAF,'BSLU',NPRU,JBSLU)
      IF (JBSLU.LE.0) GO TO 500
      IRUS=0
      DO 100 ISL=1,LROWS(JBSLU)
         IF (ITABL(JBSLU,ISL,JRSLRN).NE.IRUN) GO TO 100
         IRUS=ISL
         GO TO 200
 100  CONTINUE
 200  IF (IRUS.EQ.0) GO TO 500
      KBSLU=KROW(JBSLU,IRUS)
      IF (IW(KBSLU+JRSLLQ).EQ.0) GO TO 500
C Get quantities from 'RSLU' and from database ; compare them :
      ILUQR=IW(KBSLU+JRSLLQ)
      NUBHR=IW(KBSLU+JRSLNB)
      XLUSR=RW(KBSLU+JRSLLU)
      XBAKR=RW(KBSLU+JRSLBK)
      EWCOR=RW(KBSLU+JRSLEW)
      CALL GETSLU(IRUN,IOK,ILUQD,NUBHD,XLUSD,BAKSI,EWCSI)
      IF (IOK.EQ.0) THEN
         IRS=1
         GO TO 300
      ENDIF
C Is it worth updating 'RSLU' ?
      IRS=0
      IF (ILUQR.NE.ILUQD) IRS=IRS+1
      IF (NUBHR.NE.NUBHD) IRS=IRS+1
      IF (ABS(XLUSR-XLUSD).GT.TOLPCU) IRS=IRS+1
 300  IF (IRS.GE.1)   THEN
         NMODS=NMODS+1
         LISSL(NBASLU)=1
      ENDIF
C yes , it is !
      CALL BKSLUL(IRUN,ILUQR,NUBHR,XLUSR,XBAKR,EWCOR,IERL)
      IF (IERL.NE.0) GO TO 900
 500  CONTINUE
      GO TO 999
C No room for banks :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKLUS4(IRUN,NMOD4,LISS4,IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS / INTERNAL
C! Update run-dependant quantities in bank 'S4BU'
C  Author  J.Boucrot  12-Oct-1995
C Called from BKLUFI                        from BOOKLIB
C Calls BKSL4B,BKPOIN,BKFPER                from BOOKLIB
C Calls GETS4B                              from ALEPHLIB
C Input argument  :
C   IRUN  = Current run
C Output arguments :
C   NMOD4 = number of modified runs in 'S4BU'
C   LISS4 = tag list for 'S4BU' banks
C    IER  = 0 if all OK ;
C         = 1 if no room to book banks
C----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
C-- RS4BJJ ----
      PARAMETER(JRS4RN=1,JRS4LQ=2,JRS4B1=3,JRS4L1=4,JRS4K1=5,JRS4B2=6,
     +          JRS4L2=7,JRS4K2=8,JRS4B3=9,JRS4L3=10,JRS4K3=11,
     +          JRS4B4=12,JRS4L4=13,JRS4K4=14,LRS4BA=14)
      INTEGER LISS4(*),NBHLO(4),NBHDB(4)
      REAL XLULO(4),XLUDB(4),XBALO(4),XBADB(4)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
C Get several variables for comparison with the content of the database
C if there is any SICAL information for this run in 'BS4B' :
      IF (IRUN.LT.MINR4B)  GO TO 999
      CALL BKFPER(IRUN,0,NPRU)
      IF (NPRU.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BS4B',NPRU,JBS4B)
      IF (JBS4B.LE.0) GO TO 999
      IRUS=0
      DO 100 ISL=1,LROWS(JBS4B)
         IF (ITABL(JBS4B,ISL,JBS4RN).NE.IRUN) GO TO 100
         IRUS=ISL
         GO TO 200
 100  CONTINUE
 200  IF (IRUS.EQ.0) GO TO 999
      KBS4B=KROW(JBS4B,IRUS)
      IF (IW(KBS4B+JBS4LQ).EQ.0) GO TO 999
C Get quantities from 'BS4B'  :
      ILUQL=IW(KBS4B+JRS4LQ)
      IOK4=0
      DO 250 IK=1,4
         NBHLO(IK)=IW(KBS4B+3)
         XLULO(IK)=RW(KBS4B+4)
         IF (NBHLO(IK).GT.0.AND.XLULO(IK).GT.0.) IOK4=IOK4+1
         XBALO(IK)=RW(KBS4B+5)
         KBS4B=KBS4B+3
 250  CONTINUE
C Is this run really a MANY-bunch one ?
      IF (IOK4.LE.1) GO TO 999
C Get quantities from database :
      CALL GETS4B(IRUN,IOK,ILUQB,NBUN,NBHDB,XLUDB,XBADB)
      IF (IOK.EQ.0) THEN
         IRS=1
         GO TO 300
      ENDIF
C Is it worth updating 'S4BU' ?
      IRS=0
      IF (ILUQL.NE.ILUQB) IRS=IRS+1
      DO 260 IE=1,4
         IF (NBHLO(IE).NE.NBHDB(IE)) IRS=IRS+1
         IF (ABS(XLULO(IE)-XLUDB(IE)).GT.TOLPCU) IRS=IRS+1
         IF (ABS(XBALO(IE)-XBADB(IE)).GT.TOLPCU) IRS=IRS+1
 260  CONTINUE
 300  IF (IRS.GE.1)   THEN
         NMOD4=NMOD4+1
         LISS4(NBAS4B)=1
      ENDIF
C yes , it is !
      CALL BKSL4B(IRUN,ILUQL,NBHLO,XLULO,XBALO,IERL)
      IF (IERL.NE.0) GO TO 900
      GO TO 999
C No room for banks :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKLVPR(KBSET,JBLPR,IPRCV,ICOMP)
C-----------------------------------------------------------------------
CKEY TOOLS
C! Gives the processing level of a dataset
C  J. Boucrot 21-Dec-1995
C  Called from BKBMCL,BKSRPS                        from BOOKLIB
C    Input arguments :
C KBSET = pointer to row in 'BSET' bank for the dataset
C JBLPR = pointer to bank 'BLPR'
C   Output arguments :
C  IPRCV = processing level , defined as follows
C  1 = Test   2 = Last  3 = Previous  4 = Old  0 = UNKNOWN
C ICOMP = 1  if processing complete  ; = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IPRCV=0
      ICOMP=-1
      IF (KBSET.LE.0.OR.JBLPR.LE.0) GO TO 999
      NBLPR=LROWS(JBLPR)
      IDAT=MOD(IW(KBSET+JBSEND),10)
C Find the processing level IPRCV :
C  1 = TEST   2 = Final ( Last )   3 = Previous  4 = Old
      IF (IDAT.EQ.2) THEN
         IPRCV=2
         GO TO 380
      ENDIF
      NRUMI=IW(KBSET+JBSEFR)
      NRUMX=IW(KBSET+JBSELR)
      IDAPR=IW(KBSET+JBSEWD)
C Loop on all processing levels in bank 'BLPR' :
      DO 370 IPR = 1,NBLPR
         KBLPR=KROW(JBLPR,IPR)
         IF (IW(KBLPR+JBLPNT).NE.IDAT) GO TO 370
         NRUP1=IW(KBLPR+JBLPFR)
         NRUP2=IW(KBLPR+JBLPLR)
         IF (NRUMI.LT.NRUP1.OR.NRUMI.GT.NRUP2) GO TO 370
         IDAFD=IW(KBLPR+JBLPFD)
         IDALD=IW(KBLPR+JBLPLD)
         IF (IDAPR.LT.IDAFD.OR.IDAPR.GT.IDALD) GO TO 370
         ILEVP=IW(KBLPR+JBLPRL)
         ICOMP=IW(KBLPR+JBLPJV)
C Test processing :
         IF (ILEVP.GE.100) THEN
            IPRCV=1
            GO TO 380
         ENDIF
C Last processing :
         IPRCV=2
         IF (IPR.EQ.NBLPR) GO TO 380
         KK1=KROW(JBLPR,IPR+1)
         IPLN1=IW(KK1+JBLPRL)
         IF (IPLN1.EQ.1.OR.IPLN1.GE.100) GO TO 380
         IF (IPLN1.NE.ILEVP+1) GO TO 370
C Previous processing :
         IPRCV=3
         IF (IPR.EQ.NBLPR-1) GO TO 380
         KK2=KROW(JBLPR,IPR+2)
         IPLN2=IW(KK2+JBLPRL)
         IF (IPLN2.EQ.1.OR.IPLN2.GE.100) GO TO 380
C Old processing :
         IPRCV=4
         IF (IPLN2.NE.ILEVP+2) GO TO 370
         GO TO 380
 370  CONTINUE
 380  CONTINUE
      IF (ICOMP.LT.0.AND.KBLPR.GT.0) ICOMP=IW(KBLPR+JBLPJV)
C
 999  RETURN
      END
      SUBROUTINE BKMBYT(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Writes the BKMBYTES CERNTAPS  file
C  Author  J.Boucrot  04-Nov-1991  - Modified  27-Feb-1992
C  UNIX Version 06-Oct-1995
C Called from BKUPDF                      from  BOOKLIB
C Calls  BKPOIN,BKFILB                    from  BOOKLIB
C Calls ALINST,ALSTIN,JALREC              from ALEPHLIB
C Calls VMCMS                             from   GENLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      SAVE
      CHARACTER TAPIN*8,TAPCE*8,MSG*80,DAD*2,DAP*1,KOC*8
      CHARACTER FNPR*60,PARNA*12,TAPE*6,TAPWR*10
      PARAMETER (  IRMA = 100000 )
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      LRECO=JALREC(DUMMY)
C Open the output file :
      FNPR=' '
      FNPR=ALS_TEMP(1:ILTEMP)//'bkmbytes.cerntaps'
      FNPR=FNPR(1:LNBLNK(FNPR))
      CALL SYSTEM(' rm -f '//FNPR)
      OPEN ( LWBMBY , FILE = FNPR , STATUS = 'NEW' , ERR = 999 )
      IF (IBAUTO.EQ.0) PRINT 1001
      WRITE ( LWRDBG,1001)
      JBPLI=IW(NAMIND('BPLI'))
C Loop on all data FAMILIES :
      DO 800 IMC=1,2
         CALL BKPOIN(LECDAF,'BDFS',IMC,JBDFS)
         IF (JBDFS.LE.0) GO TO 920
         NBDFS=LROWS(JBDFS)
         MBYT=0
         DAD='DA'
         IF (IMC.EQ.2) DAD='MC'
         DAP=' '
C Loop on all datasets :
         DO 600 IBD=1,NBDFS
            PARNA=' '
            TAPWR=' '
            KBDFS=KROW(JBDFS,IBD)
            IF (IW(KBDFS+JBDFDF).NE.0) GO TO 600
            NPER=IW(KBDFS+JBDFNP)
            NROW=IW(KBDFS+JBDFNR)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPIN)
            IFILE=IW(KBDFS+JBDFFN)
            CALL BKCHKT(TAPIN,ICERN,IMULT,IDLT,IERT)
C Keep only CERN tapes ( not RAW data ) :
            IF (ICERN.EQ.0) GO TO 600
C Dataset OK : get BSET bank , nature of data , year of data :
            CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
            IF (JBSET.LE.0) GO TO 920
            KBSET=KROW(JBSET,NROW)
            NDATA=MOD(IW(KBSET+JBSEND),10)
            IF (IMC.EQ.1.AND.NDATA.EQ.2) GO TO 600
            IDTIN=IW(KBSET+JBSEWD)
            IYEA=0
            IF (IMC.EQ.1) THEN
               NFRU=IW(KBSET+JBSEFR)
               DO 120 KY=1,NTOYEA
                  IF (NFRU.LT.LISFRU(KY))   GO TO 120
                  IF (NFRU.GE.LISFRU(KY+1)) GO TO 120
                  IYEA=LISYEA(KY)
                  GO TO 130
 120           CONTINUE
 130           CONTINUE
            ENDIF
C Get BRLI pointers :
            IBRL1=IW(KBSET+JBSEBA)
            IBRL2=IW(KBSET+JBSEBR)
            NBYTE=0
            IF (IBRL1.EQ.0.OR.IBRL2.EQ.0)    GO TO 350
            IF (IDLT.EQ.0.AND.IBRL1.EQ.IBRL2.AND.IMC.EQ.1) GO TO 350
C Multi-run datasets
            CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
            IF (JBRLI.LE.0) GO TO 920
            DO 150 IBR=IBRL1,IBRL2
               NBYTE=NBYTE+ITABL(JBRLI,IBR,JBRLNB)
 150        CONTINUE
            GO TO 480
C Single run datasets :
 350        CALL BKPOIN(LECDAF,'BTPN',NPER,JBTPN)
            IF (JBTPN.LE.0) GO TO 920
            IBTPN=IW(KBSET+JBSEBT)
            NBYTE=NBYTE+LRECO*ITABL(JBTPN,IBTPN,JBTPRN)
C Number of MBytes :
 480        MBYT=1+NBYTE/1000000
            IF (IMC.EQ.2) MBYT=2*MBYT
            IF (IDLT.EQ.0.AND.MBYT.GE.200) MBYT=200
            IF (MBYT.LE.0) MBYT=200
C For MCarlo data , get KINCAL generator name :
            KOC=' '
            IF (IMC.EQ.2) THEN
               IBSPF=IW(KBSET+JBSEBS)
               IF (IBSPF.LE.0) GO TO 490
               CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
               IF (JBSPF.LE.0) GO TO 490
               KBSPF=KROW(JBSPF,IBSPF)
               CALL BKY2K(IW(KBSPF+JBSPRG),100,IYEA)
               IF (IYEA.GT.2001.OR.IYEA.LE.0)
     +         CALL BKY2K(IW(KBSET+JBSEWD),10000,IYEA)
               IKINC=IW(KBSPF+JBSPKC)
               IF (IKINC.LE.0) GO TO 490
               JBKLI=IW(NAMIND('BKLI'))
               IF (JBKLI.LE.0) GO TO 490
               KKLI=LROWS(JBKLI)
               IPAKO=IW(KBSPF+JBSPSR)/IRMA
               IF (IPAKO.GT.0.AND.JBPLI.GT.0) THEN
                  DO 482 IKP=1,LROWS(JBPLI)
                     KBPLI=KROW(JBPLI,IKP)
                     IF (IW(KBPLI+JBPLPC).NE.IPAKO) GO TO 482
                     CALL ALSTIN(IW(KBPLI+JBPLPN),JBPLPC-JBPLPN,PARNA)
                     GO TO 483
 482              CONTINUE
               ENDIF
 483           CONTINUE
               IF ((NPER.EQ.5012.OR.NPER.EQ.5021.OR.NPER.EQ.5023.OR.
     +                NPER.EQ.5030).AND.PARNA.EQ.' ') PARNA='QQBAR'
               DO 485 IKK=1,KKLI
                  KBKLI=KROW(JBKLI,IKK)
                  IF (IW(KBKLI+JBKLKC).NE.IKINC) GO TO 485
                  CALL ALSTIN(IW(KBKLI+JBKLKN),2,KOC)
                  GO TO 490
  485          CONTINUE
               GO TO 490
            ENDIF
C For real data , find the processing level :
            DAP='O'
            CALL BKPRLV(DNADAT(NDATA),NFRU,0,IDTIN,ILVOU,IFD,ILD,IERL)
            IF (IERL.EQ.0) THEN
               DAP='L'
               GO TO 490
            ENDIF
            CALL BKPRLV(DNADAT(NDATA),NFRU,1,IDTIN,ILVOU,IFD,ILD,IERP)
            IF (IERP.EQ.0) THEN
               DAP='P'
               GO TO 490
            ENDIF
            CALL BKPRLV(DNADAT(NDATA),NFRU,100,IDTIN,ILVOU,IFD,ILD,IERT)
            IF (IERT.EQ.0) THEN
               DAP='T'
               GO TO 490
            ENDIF
 490        TAPE=TAPIN(1:6)
            IF (IMULT.EQ.0) THEN
               TAPWR(1:6)=TAPE
            ELSE
               CALL BKEXFI(3,TAPE,IFILE,IERE)
               TAPWR=AXEDNW
            ENDIF
            WRITE ( LWBMBY , 1002 ) TAPWR,DNADAT(NDATA),DAD,DAP,
     +                              KOC(1:6),IYEA,MBYT,PARNA,IMC,IBD
C
 600     CONTINUE
 800  CONTINUE
      CLOSE ( LWBMBY )
C
C Now build the file numfiles.cerntaps for CERN multifile tapes
C
      CALL BKFTAP(IERF)
      IF (IERF.NE.0) GO TO 920
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 920  IER=1
 999  RETURN
 1001 FORMAT (/22X,'=== Subroutine BKMBYT === : start updating file ',
     +        'BKMBYTES CERNTAPS')
 1002 FORMAT (6X,A10,3X,A4,2X,A2,2X,A1,1X,A6,2I6,2X,A12,2X,I2,2X,I6)
      END
      SUBROUTINE BKMCDA(IDAT,IMCA)
C -----------------------------------------------------------
CKEY UPDABOOK CLEANUP
C!  Builds the internal common / DAMCOU / for BKBDFS
C - J. Boucrot 18-May-1995
C Called from BKUPDF                          from BOOKLIB
C  Output arguments :
C    IDAT = nuber of DATA periods with changes in this job
C    IMCA = nuber of MC   periods with changes in this job
C -----------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
      SAVE
      PARAMETER ( NPDMX = 200 , NPMMX = 100 )
      COMMON / DAMCOU / NPERDA,LISPED(NPDMX),NPERMC,LISPEM(NPMMX)
      INTEGER IPOIN(2)
      DATA NPMC  / 1000 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C -------------------------------------------------------------
      IDAT=0
      IMCA=0
      NPERDA=0
      NPERMC=0
      CALL VZERO(LISPED,NPDMX)
      CALL VZERO(LISPEM,NPMMX)
      JBPCL=IW(NAMIND('BPCL'))
      JBMOP=IW(NAMIND('BMOP'))
      IF (JBPCL+JBMOP.EQ.0) GO TO 999
      IPOIN(1)=JBPCL
      IPOIN(2)=JBMOP
C Loop on both internal banks 'BPCL' and 'BMOP' :
      DO 300 IK=1,2
         IF (IPOIN(IK).EQ.0) GO TO 300
         DO 100 ILL=1,LROWS(IPOIN(IK))
            NPER=ITABL(IPOIN(IK),ILL,1)
            IF (NPER.LE.0) GO TO 100
C Real data :
            IF (NPER.LT.NPMC) THEN
               IF (NPERDA.GT.1) THEN
                  NN=IUCOMP(NPER,LISPED,NPERDA)
                  IF (NN.GT.0) GO TO 100
               ENDIF
               NPERDA=NPERDA+1
               IF (NPERDA.GT.NPDMX) GO TO 999
               LISPED(NPERDA)=NPER
C MC   data :
            ELSE
               IF (NPERMC.GT.1) THEN
                  NN=IUCOMP(NPER,LISPEM,NPERMC)
                  IF (NN.GT.0) GO TO 100
               ENDIF
               NPERMC=NPERMC+1
               IF (NPERMC.GT.NPMMX) GO TO 999
               LISPEM(NPERMC)=NPER
            ENDIF
 100     CONTINUE
 300  CONTINUE
C Final results :
      IF (NPERDA.GT.1) CALL INTSOR(LISPED,NPERDA)
      IF (NPERMC.GT.1) CALL INTSOR(LISPEM,NPERMC)
      IDAT=NPERDA
      IMCA=NPERMC
C
 999  RETURN
      END
      SUBROUTINE BKMC97(IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads the MCAR97DES file updating the MC 1997 Keyword descriptions
C  J. Boucrot  10-Jun-1997
C Modified 30-Apr-1998 for 1998 MCarlos
C Called from BKUPDF                            from  BOOKLIB
C Calls AUBOS,ALINST,BKINCA                     from ALEPHLIB
C     Fill  the 'BKM7' bank describing the 1997 MCarlo keywords
C  Output argument IER = 1 if no room to book banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      CHARACTER PAKY*4
      INTEGER ITAB(MAXIN),BKINCA
      CHARACTER INFO*120,INFU*120,PAK1*12,PAK2*60,PAK3*100,PAK4*20
      CHARACTER*80 NAMPR,MESG
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IER=0
      NCC=NTKM7
      IF (IBUPDA.GE.2) GO TO 999
      CALL BDROP(IW,'BKM7')
      IBKLI=IW(NAMIND('BKLI'))
      IF (IBKLI.LE.0) GO TO 900
      IBLAN=INTCHA('    ')
C
C Open the MCAR97DES LISTE file on Fortran unit LECPHY:
C
      NAMPR=' '
      NAMPR=ALS_REFR(1:ILREFR)//'mcarlep2des.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      OPEN ( LECPHY , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C Read one record and check for keywords :
 1    READ (LECPHY , '(A120)' , END=800 , ERR=900 ) INFO
      INFU=INFO
      CALL CLTOU(INFU)
C New generator:
      INEWB=INDEX(INFU,'USED TO')
      IF (INEWB.NE.0) THEN
         IGEOY=IYERF
         IGEN=BKINCA(INFU(INEWB-5:INEWB-2))
         IPRO=INDEX(INFU,'PRODUCE')
         PAKY=INFU(IPRO+8:IPRO+11)
         IF (PAKY.NE.' ') IGEOY=BKINCA(PAKY)
         IGENER=IGEN+NCY*(IGEOY-IYERF)
C Book a new bank for this generator 'BKM7', NR=IGENER
         ILEN=LMHLEN+NCC*LBKM7A
         CALL AUBOS('BKM7',IGENER,ILEN,JBKM7,IGARB)
         IF (IGARB.EQ.2) GO TO 910
         IW(JBKM7+LMHCOL)=LBKM7A
         IW(JBKM7+LMHROW)=0
         DO 100 II=LMHLEN+1,ILEN
            IW(JBKM7+II)=IBLAN
 100     CONTINUE
         NBCA=0
         GO TO 1
      ENDIF
C
C Standard line : fill one row in the 'BKM7' bank:
C Keyword:
C
      PAK1=' '
      PAK4=INFO(1:20)
      IF (PAK4.EQ.' ') GO TO 1
      J1=ICFNBL(PAK4,1,20)
      IF (J1.EQ.0) GO TO 1
      PAK1=PAK4(J1:LNBLNK(PAK4))
      CALL VFILL(ITAB(1),LBKM7A,IBLAN)
      CALL ALINST(PAK1,ITAB,IBLA1)
      NBCA=NBCA+1
      IW(JBKM7+LMHROW)=NBCA
      KBKM7=KROW(JBKM7,NBCA)
      CALL UCOPY(ITAB(1),IW(KBKM7+JBKMKW),JBKMDE-1)
C Content:
      PAK2=' '
      PAK3=INFO(21:120)
      IF (PAK3.EQ.' ') GO TO 1
      J2=ICFNBL(PAK3,1,100)
      IF (J2.EQ.0) GO TO 1
      PAK2=PAK3(J2:LNBLNK(PAK3))
      CALL VFILL(ITAB(1),LBKM7A,IBLAN)
      CALL ALINST(PAK2,ITAB,IBLA2)
      CALL UCOPY(ITAB(1),IW(KBKM7+JBKMDE),LBKM7A-JBKMDE+1)
      GO TO 1
C
 800  CALL AUBPRS('BKM7')
      CLOSE (LECPHY)
      GO TO 999
C ----------------------------------------------------------------------
C Process error :
 900  MESG=' +++ Error in BKMC97 : syntax error in file'
      CALL BKMESG(INFO,IREC,MESG)
      GO TO 999
 910  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKMESG(STRNG,IVAL,MESG)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Writes error messages during BOOK/TAPE JOBS  on unit LWRERR
C      This file is opened on first call to the routine
C J. Boucrot  07-12-1988
C  UNIX Version 06-Oct-1995
C Called from USER
C Calls VMCMS ( on IBM only )
C  Input arguments :
C  STRNG = character variable to be reported for debug
C  IVAL  = integer    #                #
C  MESG  = error message giving the name of the calling routine
C-----------------------------------------------------------------------
      SAVE
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      CHARACTER*80 STRNG,MESG,FIDEF
      CHARACTER  ERNAM*6
      LOGICAL FIRST
      DATA ERNAM / 'BERROR' /
      DATA FIRST / .TRUE. /
C-----------------------------------------------------------------------
C On first call , build the error file name and open it
      IF (FIRST) THEN
         FIRST=.FALSE.
      FIDEF=' '
      FIDEF=ALS_STAT(1:ILSTAT)//ERNAM//TIMNAN
      FIDEF=FIDEF(1:LNBLNK(FIDEF))
      CALL SYSTEM(' rm -f '//FIDEF)
      OPEN ( LWRERR , FILE = FIDEF , STATUS = 'NEW' , ERR = 999 )
         WRITE (LWRERR,1000) CDATIM,CSETIM
 1000    FORMAT (' ** BKMESG initialized , time is :',2X,A8,2X,A8)
      ENDIF
C Write now the error messages :
      NOVERR=NOVERR+1
      IF (ICURFI.NE.0) THEN
         LM=LNBLNK(NAMRQF(ICURFI))
         WRITE (LWRERR, 1001 )  NAMRQF(ICURFI)(1:LM)
 1001    FORMAT (' ** BOS file currently read :',A20)
      ENDIF
C
      LMS=LNBLNK(MESG)
      LMT=LNBLNK(STRNG)
      WRITE (LWRERR,1002)   MESG(1:LMS)
 1002 FORMAT (' -- Message = ',2X,A80)
      WRITE (LWRERR,1003)   IVAL,STRNG(1:LMT)
 1003 FORMAT (' -- Ival,String=',I10,2X,A80)
C
 999  RETURN
      END
      SUBROUTINE BKMODD(IMODE,IER)
C-----------------------------------------------------------------------
C
CKEY UPDABOOK FILPROC
C! Read BMODT Request files sent by PROGRAMS or SYSTEM MANAGERS
C  J. Boucrot  04-Sep-1989   modified 29-Mar-1990 for LUMI,LEP,RUN_Q
C  Modfied may times for lumi updates
C  Called from BKUPDA                                 from BOOKLIB
C  Calls BKOFJU,BKONLG,BKAADS,BKMESG,BKSLUM,BKUPZ0    from BOOKLIB
C  Calls BKLUMI,BKUPLE,BKBSCR,BKUPPG,BKUPRQ,BKS4BU    from BOOKLIB
C  Calls BREADC                                       from BOSLIB
C  Calls AUBPRS                                 from ALEPHLIB
C  Input argument :
C   IMODE = 1 for BMODT JSUMRALE files , = 0 otherwise
C  Output argument :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*80 INFO,BLA,MESG
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      BLA=' '
      MESG=' '
      IKYOK=0
      IREC=0
C
C The files BMODT JSUMRALE contains FILI cards which must be read
C by BREADC before processing by BKOFJU :
C
      IF (IMODE.EQ.0) GO TO 5
      ISAV=IW(5)
      IW(5)=LECCAR
      REWIND (LECCAR)
      CALL BREADC
      IW(5)=ISAV
C Read  new informations on RUNS from FALCON 1
      CALL BKOFJU(1,IER)
      GO TO 500
C-----------------------------------------------------------------------
C For all other files :
C Read the FIRST record on file , which contains a KEYWORD :
C but certain files from TAPES Unix have it on the 2nd record ...
C
 5    READ ( LECTXT, '(A)' , END=900 , ERR=900 ) INFO
      IREC=IREC+1
      IF (IREC.GT.2) GO TO 500
      CALL CLTOU(INFO)
C
C Switch according to keyword :
C
      IF (INDEX(INFO,'NLIN').NE.0) THEN
C
C Read a file containing Online Logbook informations on new runs :
C
         CALL BKONLG(IER)
         IF (IER.NE.0) GO TO 999
C
C Build the datasets corresponding to  new RAW data tapes :
C
         CALL BKAADS(IER)
         GO TO 999
      ENDIF
C
C Read a file containing a list of datasets to be SCRATCHED :
C
      IF (INDEX(INFO,'SCR').NE.0) THEN
         IKYOK=1
         CALL BKBSCR(IER)
      ENDIF
C
C Read a file containing a list of cartridges with locations changed :
C
      IF (INDEX(INFO,'MOV').NE.0) THEN
         IKYOK=1
         CALL BKLOCM(IER)
      ENDIF
C
C Read a file containing updates to the LUMINOSITY :
C
      IF (INDEX(INFO,'LUM').NE.0) THEN
         IKYOK=1
         CALL BKLUMI(IER)
      ENDIF
C
C Read a file containing the SICAL luminosity update :
C
      IF (INDEX(INFO,'SICAL').GT.0) THEN
         IKYOK=1
         CALL BKSLUM(1,IER)
      ENDIF
C
C Read a file containing the SICAL 4-BUNCH luminosity update :
C
      IF (INDEX(INFO,'BUNC').GT.0) THEN
         IKYOK=1
         CALL BKS4BU(1,IER)
      ENDIF
C
C Read a file containing updates to the LEP energy :
C
      IF (INDEX(INFO,'LEP ENERGY').NE.0) THEN
         IKYOK=1
         CALL BKUPLE(IER)
      ENDIF
C
C Read a file containing updates to the RUN_QUALITY :
C
      IF (INDEX(INFO,'RUN_QUAL').NE.0) THEN
         IKYOK=1
         CALL BKUPRQ(IER)
      ENDIF
C
C Read a file containing updates to the Physics Groups RunQual :
C
      IF (INDEX(INFO,'PHYSICS').NE.0) THEN
         IKYOK=1
         CALL BKUPPG(INFO)
      ENDIF
C
C Read a file containing the update of # of Z0s with XLUMOK per run :
C
      IF (INDEX(INFO,'Z0 XLU').GT.0) THEN
         IKYOK=1
         CALL BKUPZ0(IER)
      ENDIF
C-----------------------------------------------------------------------
C
 500  IF (IKYOK.EQ.1) GO TO 600
      IF (IREC.EQ.1.AND.IKYOK.EQ.0) GO TO 5
 600  IF (IER.EQ.0) CALL AUBPRS('BRUC')
      GO TO 999
C-----------------------------------------------------------------------
C Process   errors :
C Syntax error in BMODT cards file :
C
 900  BLA=INFO(1:80)
      IVAL=1
      MESG=(' +++ Error in BKMODD : syntax error in file')
C
 950  CALL BKMESG(BLA,IVAL,MESG)
C
 999  RETURN
      END
      SUBROUTINE BKMODI(NAMB,NPER,ISCR,LENGT,IER)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Stores bank name and # of banks modified during the job
C J. Boucrot  07-May-1989
C Modified 19-May-1995 to build the 'BMOP' bank
C Called from USER
C Calls BKCLPE                                from BOOKLIB
C   Input arguments :
C  NAMB  = bank name ( 4 characters )
C  NPER  = bank number
C  ISCR  = 1 if a data set of this bank has to be scratched
C LENGT  = length of new information
C   Output argument :
C  IER   = 1 if no room to book banks
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      SAVE
      CHARACTER BANLI*20,NAMB*4
      DATA BANLI / 'BSETBPROBTPNBSPFBRLI' /
C-----------------------------------------------------------------------
      IER=0
C If the bank name is one of the 5 central ones ,
C build the internal bank 'BMOP' , NR = NPER :
      INDU=INDEX(BANLI,NAMB)
      IF (INDU.GT.0) THEN
         CALL BKCLPE('BMOP',NPER,IER)
         IF (IER.NE.0) GO TO 999
      ENDIF
C
      NMODIF=NMODIF+1
      LENBOK=LENBOK+LENGT
      NSCRAD=NSCRAD+ISCR
C
 999  RETURN
      END
      SUBROUTINE BKNAMC(OPSYS)
C ----------------------------------------------------------------------
C!  Determines on which computer/operating system a job is running
CKEY ALBOOK COMPUTER / USER
C  Calls  WHICH                                    from GENLIB
C  Calls ALSTIN                                    from ALEPHLIB
C  Output argument : OPSYS = operating system name ( 8 characters )
C  Should be updated when code for the CRAY will be available from WHICH
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
       PARAMETER  ( NUMAC = 11 )
       CHARACTER*8 COMPU(0:NUMAC),OPSYS
       DATA COMPU / 'UNKNOWN ','VAX/VMS ',2*' ',5*'IBM VM  ',
     +              'APOLLO  ',2*'IBM VM  '/
C ----------------------------------------------------------------------
      IMAC=0
      OPSYS=COMPU(IMAC)
C If unknown computer , try to use the 'BNOD' data card , if given :
      IF (IMAC.EQ.0) THEN
         JBNOD=IW(NAMIND('BNOD'))
         IF (JBNOD.EQ.0) GO TO 999
         CALL ALSTIN(IW(JBNOD+1),IW(JBNOD),OPSYS)
      ENDIF
C
 999  RETURN
      END
      SUBROUTINE BKNAME(PRNAM,FORMA,NATOU,TIMNM,NAMSD)
C-----------------------------------------------------------------------
C! Builds the Aleph Bookkeeping Unique Dataset Name
CKEY ALBOOK FILE NAME / USER
C  J. Boucrot     28-Sep-1988         modified 20-Dec-1988
C  Modified 19-Dec-1991 for NANODSTs
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C Calls ALGTYP,BKTIMC                                     from ALEPHLIB
C Input :
C   PRNAM = Program Name :  'KINGAL' ,  'GALEPH' , 'JULIA' , 'ALPHA'
C                           'REDPOT' ,  'MINI'   , 'NANOPROD' etc ...
C              when called from Production programs ;
C           or Operation Name , with 'B' as 1st letter , when called
C              from internal Bookkeeping facilities ; e.g. 'BSYSRT'
C              'TSCRAT'  ,  'BSCRATCH'  , 'BMODTPHY'   etc ...
C   FORMA = Bos Format of the data set : 'NATIVE' , 'EPIO' , 'TEXT'
C   NATOU = Code describing the nature of what is written on the dataset
C       1 =  KINGAL output        2 = RAW data      3 =  POT
C       4 =  DST                  5 = MINIDST       6 =  MICRO
C       7 =  NANO                 8 = special files
C   TIMNM = Time-dependant part of the Bookkeeping file names
C           If TIMNM = ' ' , the routine BKTIMC is called
C  Output = NAMSD  Bookkeeping Dataset Name coded as follows :
C     * 1 letter : M or D for MCarlo or real Data
C     * 3 letters for the step of data
C         ( KIN/RAW/POT/DST/MIN/CRO/NAN/BOK )
C         For an event directory , 'E' is put as last of these 3 letters
C     * 1 letter for file format  (E/N/T for EPIO/NATIVE/TEXT)
C     * 1 letter for program name which produced the dataset (K/G/J/A)
C     * 2 digits for the year .
C     * then a point (on VAX) or a blank ( on IBM ) as separator
C     * 3 digits for the day # ( from 1 to 365 or 366 )
C     * 5 digits for the second # in the day ( 1 to 86400 )
C-----------------------------------------------------------------------
      SAVE
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
       PARAMETER ( NMAX = 7 )
       INTEGER ALGTYP
       CHARACTER*1 CDAT(2)
       CHARACTER*3 NATDA(NMAX+1)
       CHARACTER   FORMA*4,TIMNM*11,DAYSC*11,PRNAM*12,NAMSD*17
       DATA NATDA / 'KIN','RAW','POT','DST','MIN','CRO','NAN','BOK' /
       DATA CDAT  /'M','D'/
C-----------------------------------------------------------------------
C Check which kind of 'PRNAM' :
       IF (PRNAM(1:1).EQ.'B') THEN
          NAMSD(1:6)=PRNAM(1:6)
          GO TO 20
       ENDIF
       IF (INDEX(PRNAM,'M').GT.0) PRNAM(1:4)='MINI'
       NAMSD=' '
C Nature of data : Monte-Carlo , or real data  ( if not yet determined)
       IF (DATNAT.EQ.'M'.OR.DATNAT.EQ.'D') GO TO 10
       DATNAT='U'
       IST=2
       ITST=ALGTYP(IGEAN,ISIMD,IFAST,ITPC)
       IF (ITST.NE.0) IST=1
       DATNAT=CDAT(IST)
 10    NAMSD(1:1)=DATNAT
C Nature of what is written : RAW,POT,DST etc...
       ITOU=NATOU
       IF (NATOU.LE.0.OR.NATOU.GT.NMAX) ITOU=NMAX+1
       NAMSD(2:4)=NATDA(ITOU)
C Bos format of the data set ; program name ;
       CALL CLTOU(FORMA)
       NAMSD(5:5)=FORMA(1:1)
       IF (FORMA.EQ.'EDIR') NAMSD(5:5)='T'
       NAMSD(6:6)=PRNAM(1:1)
 20    CONTINUE
C
C Year , separator , day and second :
C if not given as input argument in TIMNM , call BKTIMC to get it :
C
       IF (TIMNM.EQ.' ') THEN
          CALL BKTIMC(DAYSC)
          NAMSD(7:17)=DAYSC
       ELSE
          NAMSD(7:17)=TIMNM
       ENDIF
C
 999   RETURN
       END
      SUBROUTINE BKNDCO(KBSET,JBPRO,JBRLI,COMNW,IER)
C ----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Rebuilds the Comment field for a MINI or NANO Real Data dataset
C J.Boucrot  27-Nov-1992
C   Called from BKCLVR                                     from BOOKLIB
C   Calls BKCARI,ALSTIN                                    from ALEPHLIB
C   Calls BKPOIN,BKELEP,BKCTIM                             from BOOKLIB
C    Input arguments :
C   KBSET = Pointer to the dataset 'BSET' row
C   JBPRO = Pointer to the dataset 'BPRO' bank
C   JBRLI = Pointer to the dataset 'BRLI' bank
C    Output arguments :
C     COMNW = New comment
C       IER = 0  if all OK
C           = 1  if there was no room for banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*(*) COMNW
      CHARACTER*80 OLDCO,COMOT,COMST
      CHARACTER VERMI*3,VERPR*4,DSNAM*20,DAYSC*11
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C Initializations - Only MINI or NANO datasets kept here :
      IER=1
      IMODI=0
      ILEP2=0
      COMNW=' '
      INADA=IW(KBSET+JBSEND)
      IF (INADA.NE.5.AND.INADA.NE.7) GO TO 999
      NEZS=0
C Get all relevant bank pointers :
      IBPRO=IW(KBSET+JBSEBP)
      IF (IBPRO.LE.0) GO TO 900
      KBPRO=KROW(JBPRO,IBPRO)
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
C ----------------------------------------------------------------------
C Compute number of Z0s ( data ) in the dataset for LEP 1 runs ,
C compute number of events in the dataset for LEP 2 runs :
      DO 15 IRO=IBRL1,IBRL2
         KBRLI=KROW(JBRLI,IRO)
         NRU=IW(KBRLI+JBRLRN)
         CALL BKELEP(NRU,ELEP,IT1,BM,ID,NE,JBRUC)
         IF (JBRUC.GT.0) THEN
            IF (ELEP.GT.100.) ILEP2=ILEP2+1
            IF (ILEP2.GT.0) NEZS=NEZS+IW(JBRUC+JBRUEF)
            IF (ILEP2.EQ.0) NEZS=NEZS+IW(JBRUC+JBRUNZ)
         ENDIF
 15   CONTINUE
C Get 1st run , last run , program version # :
      NFRU=IW(KBSET+JBSEFR)
      NLRU=IW(KBSET+JBSELR)
      IDAT=IW(KBSET+JBSEWD)
      NPVER=IW(KBPRO+JBPRVN)
      VERPR=' '
      IF (INADA.EQ.5) THEN
         IF (NPVER.LT.100) THEN
            CALL BKCARI(NPVER,2,VERMI(1:2))
            VERPR=VERMI(1:1)//'.'//VERMI(2:2)
         ELSE
            CALL BKCARI(NPVER,3,VERMI)
            VERPR=VERMI(1:2)//'.'//VERMI(3:3)
         ENDIF
      ELSE
         CALL BKCARI(NPVER,3,VERPR)
      ENDIF
         CALL ALSTIN(IW(KBSET+JBSEAD),JBSEAU-JBSEAD,DSNAM)
         DAYSC=DSNAM(7:17)
         CALL BKCTIM(DAYSC,IYEA,IMON,IDA,IHOU,IMI,ISE)
         IDAT=IDA+100*IMON+10000*IYEA
         ITIM=ISE+100*IMI+10000*IHOU
         IW(KBSET+JBSEWD)=IDAT
         IW(KBSET+JBSEWH)=ITIM
C ----------------------------------------------------------------------
C Build the new comment for Real DATA :
      COMNW=DNADAT(INADA)//' '//VERPR//' Z0        PROD        RUNS'//
     +      '       -->'
      IF (ILEP2.GT.0) COMNW(11:12)='EV'
      WRITE ( COMNW(14:19) , '(I6)' )  NEZS
      WRITE ( COMNW(26:31) , '(I6)' )  IDAT
      WRITE ( COMNW(38:42) , '(I5)' )  NFRU
      WRITE ( COMNW(48:52) , '(I5)' )  NLRU
 900  IER=0
C
 999  RETURN
      END
      SUBROUTINE BKNEWNAM(NAME,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK X11
C! Transmits the new file name to repaly SCANBOOK in X11 version
C  J. Boucrot 12-Mar-1997
C Called from Redosearch                         from BOOKLIB
C   Intput argument :
C NAME = Generic name for new files
C   Output argument :
C  IER = 1  if name is blank
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*(*) NAME
      CHARACTER PATH*100,FILE*50,FINA*40
C-----------------------------------------------------------------------
      IER=1
      IF (IBKINT.NE.-1) GO TO 999
      LLL=LNBLNK(NAME)
      IF (LLL.EQ.0) GO TO 999
      PATH=' '
      FILE=' '
      FINA=' '
      LFPAT=INDEXB(NAME,'/')
      LLCRO=INDEXB(NAME,']')
      IF (LFPAT.EQ.0) GO TO 999
      PATH(1:LFPAT)=NAME(1:LFPAT)
      FILE=NAME(LFPAT+1:LLL)
      IDOT=INDEX(FILE,'.')
      IF (IDOT.EQ.0) THEN
         FINA=FILE(1:LNBLNK(FILE))
      ELSE
         FINA=FILE(1:IDOT-1)
      ENDIF
      CARDSF=' '
      CARDSF=PATH(1:LNBLNK(PATH))//FINA(1:LNBLNK(FINA))
      CARDSF=CARDSF(1:LNBLNK(CARDSF))
      IER=0
 999  RETURN
      END
      SUBROUTINE BKNEWP(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads the PERIODS LISTE description of data taking periods
C and defines new Bookkeeping periods from the content of these files
C J. Boucrot  03-11-1989   - Modified 15-Jun-1990 for debug printout
C UNIX Version 06-Oct-1995
C Called from BKUPDF
C Calls BKDNWP,PRPERS,PRPROC,PRLASR,BKMESG,BKDACI       from BOOKLIB
C Calls AUBPRS,BKCARI                                   from ALEPHLIB
C  Output argument :
C   IER = 0  all OK
C   IER = 1  unable to open one of the Request Files
C   IER = 3  no room to book/extend BOS banks during updating
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      CHARACTER LTXT*2,TITLE*40,CDAT1*8,CDAT2*8,CTIM1*8,CTIM2*8
      CHARACTER MESG*80,INFO*132,MVM*80
      CHARACTER NAMPR*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-----------------------------------------------------------------------
      IER=0
      MESG=' '
      INFO=' '
      CTIM1=' '
      CTIM2=' '
      IF (IBUPDA.GE.2) GO TO 999
C
C Open the PERIODS LISTE file on Fortran unit LECNWP :
C
      NAMPR=' '
      NAMPR=ALS_REFR(1:ILREFR)//'periods.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      OPEN ( LECNWP , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C Drop the previous 'BPER' bank read from the database :
      IND=NDROP('BPER',1)
C
C Read the file :
C
      IREC=0
 10   READ ( LECNWP, '(A132)' , ERR=910 , END=100 ) INFO
      IF (LNBLNK(INFO).EQ.0) GO TO 10
      IREC=IREC+1
      IF (IREC.LE.3) GO TO 10
      READ ( INFO,1002 ) NPER,TITLE,IFIL1,IFIL2,IRUN1,IRUN2,CDAT1,CDAT2
      CALL BKDACI(1,CDAT1,CTIM1,IDAT1,ITIM1)
      CALL BKDACI(1,CDAT2,CTIM2,IDAT2,ITIM2)
C create a row in the new 'BPER' bank :
      CALL BKDNWP(TITLE,NPER,NPER,IFIL1,IFIL2,IRUN1,IRUN2,
     +            IDAT1,IDAT2,IER)
      IF (IER.NE.0) GO TO 930
      GO TO 10
C
 100  CONTINUE
      IER=0
      CALL AUBPRS('BPER')
      CALL PRPERS(LWRDBG)
      CALL PRPROC(LWRDBG)
      CALL PRLASR(LWRDBG,1)
      GO TO 999
C-----------------------------------------------------------------------
C Processing of errors :
C
 910  IER=1
      MESG=' ++ Error in BKNEWP : unable'//
     +     ' to read the PERIODS file'
      LM=LNBLNK(MESG)
      CALL BKMESG(NAMPR,IREC,MESG(1:LM))
      GO TO 999
 930  IER=3
      MESG=' ++ Error in BKNEWP : No room'//
     +     ' to book banks for New Period file'
      LM=LNBLNK(MESG)
      CALL BKMESG(NAMPR,IREC,MESG(1:LM))
C
 999  RETURN
 1002 FORMAT (I6,5X,A40,2X,I5,1X,I5,3X,I5,1X,I5,3X,A8,1X,A8)
      END
      SUBROUTINE BKNMCO(KINCO,KBSET,JBPRO,JBRLI,COMOT,COMNW,IER)
C ----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Rebuilds the Comment field for a MINI or NANO MCarlo dataset
C J.Boucrot  27-Nov-1992
C   Called from BKCLVR                                     from BOOKLIB
C   Calls BKCARI                                           from ALEPHLIB
C   Calls BKPOIN,BKELEP                                    from BOOKLIB
C    Input arguments :
C   KINCO = KINGAL Code of dataset
C   KBSET = Pointer to the dataset 'BSET' row
C   JBPRO = Pointer to the dataset 'BPRO' bank
C   JBRLI = Pointer to the dataset 'BRLI' bank
C   COMOT = Comment of POT mother tape
C    Output arguments :
C     COMNW = New comment
C       IER = 0  if all OK
C           = 1  if there was no room for banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( LSUP = 51 )
      CHARACTER*(*) COMNW,COMOT
      CHARACTER VERMI*3,VERPR*4,COMST*80,KINPR*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C Initializations - Only MINI or NANO datasets kept here :
      IER=1
      IMODI=0
      COMNW=' '
      VERMI=' '
      VERPR=' '
      INADA=IW(KBSET+JBSEND)
      IF (COMOT(1:2).EQ.'N ') THEN
         LFIN=LNBLNK(COMOT)
         COMST=' '
         COMST='RUN '//COMOT(3:LFIN)
         IF (INADA.NE.5.AND.INADA.NE.7) THEN
            COMNW=COMST
            IER=0
            GO TO 999
         ENDIF
      ENDIF
      IF (INADA.NE.5.AND.INADA.NE.7) GO TO 999
      NEVT=0
C Get all relevant bank pointers :
      IBPRO=IW(KBSET+JBSEBP)
      IF (IBPRO.LE.0) GO TO 900
      KBPRO=KROW(JBPRO,IBPRO)
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
C Get the KINGAL program name :
      KINPR=' '
      JBKLI=IW(NAMIND('BKLI'))
      IF (JBKLI.EQ.0) GO TO 5
      NKLI=LROWS(JBKLI)
      DO 2 I=1,NKLI
         KBKLI=KROW(JBKLI,I)
         IF (IW(KBKLI+JBKLKC).NE.KINCO) GO TO 2
         CALL ALSTIN(IW(KBKLI+JBKLKN),2,KINPR)
         GO TO 5
 2    CONTINUE
 5    CONTINUE
C ----------------------------------------------------------------------
C Compute number of events in the dataset :
      IF (IBRL1.EQ.0.OR.IBRL2.EQ.0) THEN
         NEVT=IW(KBSET+JBSELE)-IW(KBSET+JBSEFE)
      ELSE
         DO 15 IRO=IBRL1,IBRL2
            KBRLI=KROW(JBRLI,IRO)
            NEVT=NEVT+IW(KBRLI+JBRLNE)
 15      CONTINUE
      ENDIF
C Program version # :
      NPVER=IW(KBPRO+JBPRVN)
      IF (INADA.EQ.5) THEN
         IF (NPVER.LT.100) THEN
            CALL BKCARI(NPVER,2,VERMI(1:2))
            VERPR=VERMI(1:1)//'.'//VERMI(2:2)//' '
         ELSE
            CALL BKCARI(NPVER,3,VERMI)
            VERPR=VERMI(1:2)//'.'//VERMI(3:3)
         ENDIF
      ELSE
         CALL BKCARI(NPVER,3,VERPR)
      ENDIF
C Strip off the comment of the mother POT from its last part , if any :
      COMST=' '
C Special case of new NANOs made from MINIs :
      IF (INDEX(COMOT,'MINI').GT.0) THEN
         IRUN=INDEX(COMOT,'RUN')
         IF (IRUN.EQ.0)  GO TO 100
         COMST=COMOT(IRUN:LNBLNK(COMOT))
         GO TO 300
      ENDIF
 100  CONTINUE
C  Strip off comments from 'K EVTS ' :
      LSLA=INDEXB(COMOT,'K EVT')
      IF (LSLA.GT.0) THEN
         IBA=3
         IF (COMOT(LSLA-4:LSLA-4).EQ.' ') IBA=4
         COMOT=COMOT(1:LSLA-IBA)
         GO TO 250
      ENDIF
      LSLA=INDEXB(COMOT,'/')
      IF (LSLA.EQ.0) GO TO 250
      COMOT=COMOT(1:LSLA-3)
 250  LSLB=INDEXB(COMOT,' ')
      IF (LSLB.EQ.0) THEN
         COMST=COMOT(1:LNBLNK(COMOT))
      ELSE
         COMST=COMOT(1:LSLB-1)
      ENDIF
 300  CONTINUE
C ----------------------------------------------------------------------
C Build the new comment for MCarlo DATA :
      COMNW=DNADAT(INADA)//' '//VERPR//'        Evts '//KINPR(1:6)//
     +      ' '//COMST(1:LSUP)
      WRITE ( COMNW(10:15) , '(I6)' )  NEVT
 900  IER=0
C
 999  RETURN
      END
      SUBROUTINE BKNPDB(NPER,NDB)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Finds database number NDB in / BKFILU /
C  Author  J. Boucrot 01-Aug-1996
C Called from PROPT5
C Input arguments :
C   NPER  = data taking period number
C Output argument :
C     NDB = database number , =0 if not OK
C----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C----------------------------------------------------------------------
      NDB=0
      DO 30 IS=2,NDBTOT
         IF (NPER.LT.NPERMI(IS).OR.NPER.GT.NPERMX(IS)) GO TO 30
         NDB=IS
         GO TO 999
 30   CONTINUE
 999  RETURN
      END
      SUBROUTINE BKN97MC(NPOTS,NMINS)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Computes the number of POTS/MINIs for 1997 MCarlo datasets
C  J. Boucrot  02-Mar-1998
C Called from DISPAR97                            from BOOKLIB
C Calls  BKCH97,BKCHHO                            from BOOKLIB
C Calls  ALSTIN                                   from ALEPHLIB
C Output arguments:
C NPOTS = number of POTs  found
C NPOTS = number of MINIs found
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER*8 TAPE
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      NPOTS=0
      NMINS=0
      TAPE=' '
C Loop on BDFS rows:
      JBDFS=NLINK('BDFS',IMCDAT)
      IF (JBDFS.LE.0) GO TO 999
      DO 400 IBDFS=NFDSET,NLDSET
         KBDFS=KROW(JBDFS,IBDFS)
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         CALL BKCH97(NPER,NROW,IGO97)
         IF (IGO97.LE.0) GO TO 400
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.LE.0) GO TO 400
         KBSET=KROW(JBSET,NROW)
         NADAT=MOD(IW(KBSET+JBSEND),10)
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
         CALL BKCHHO(TAPE,ICERN,IHOME,IMULT,IEX,IDL,I34,IERO)
         IF (IERO.NE.0) GO TO 400
C CERN Tapes must be master datasets:
         IF (ILABCH.EQ.1) THEN
            IF (ICERN.EQ.0) GO TO 400
            IF (IW(KBDFS+JBDFCO).NE.0) GO TO 400
            GO TO 200
         ENDIF
C For labs outside CERN, homelab from tape name:
         IF (IHOME.NE.ILABCH) GO TO 400
 200     IF (NADAT.EQ.3) NPOTS=NPOTS+1
         IF (NADAT.EQ.5) NMINS=NMINS+1
 400  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKOFJU(IMODE,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads DST files of JULIA results from FALCON 1
C  then stores informations in bank 'BRUC'
C  The list of DST files was transmitted through FILI cards
C  read in subroutine BKMODD
C  J. Boucrot  04-Dec-1989   -  completely rewritten 28-Mar-1990
C  Modified 15-Mar-1991 for new beam X,Y algorithm
C  Big mods 05-Dec-1991 : use of VDET vertices , new 'BXYZ' bank/file
C Mods 24-May-1993 for 1993 data ( # of Z0s now in bank JEDS )
C  Called from BKMODD
C  Calls BKFPER,BKMODI,BKPOIN,BKMESG,BKSORT               from BOOKLIB
C  Calls AOPEN,ALOPEN,AREAD,AUBOS,AREAD,AUBPRS,PRTABL     from ALEPHLIB
C  Calls BDROP,BSWAP,BKFMT,BREAD,BUNIT,BWRITE,BLIST       from BOSLIB
C  Calls VMCMS                                            from GENLIB
C  Input argument :
C    IMODE = 1  if BMODTxx JSUMyyyy file to read POTs/DSTs/MINIs
C    IMODE = 2  if LBOKLUZ0 file sent by FALCON
C  Output arguments :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- JSUMJJ ----
      PARAMETER(JJSUNT=1,JJSUNV=2,JJSUNZ=3,JJSUNL=4,JJSUNB=5,JJSUVT=6,
     +          JJSUVV=7,JJSUVZ=8,JJSUVL=9,JJSUVB=10,JJSUTT=11,
     +          JJSUTZ=12,JJSUTB=13,JJSULI=14,JJSUIZ=15,JJSULO=16,
     +          JJSULZ=17,JJSUXV=18,JJSUYV=19,JJSUZV=20,JJSUXS=21,
     +          JJSUYS=22,JJSUZS=23,JJSUKB=24,JJSUKW=25,JJSUTN=26,
     +          JJSUTS=27,JJSUTV=28,JJSUA0=29,JJSUA1=30,JJSUA2=31,
     +          JJSUA3=32,JJSUA4=33,JJSUA5=34,JJSUA6=35,JJSUA7=36,
     +          JJSUA8=37,JJSUA9=38,JJSUB0=39,JJSUB1=40,JJSUB2=41,
     +          JJSUB3=42,JJSUB4=43,JJSUB5=44,JJSUB6=45,JJSUB7=46,
     +          JJSUB8=47,JJSUB9=48,LJSUMA=48)
C-- RALEJJ ----
      PARAMETER(JRALRN=1,JRALLR=2,JRALRS=3,JRALRT=4,JRALTT=6,JRALTM=8,
     +          JRALEP=9,JRALMP=13,JRALMC=14,JRALMA=15,JRALMB=16,
     +          JRALNA=17,JRALNB=18,JRALQA=19,JRALQB=20,JRALDU=21,
     +          JRALCO=22,JRALVD=24,JRALIT=26,JRALTP=27,JRALEC=29,
     +          JRALHC=32,JRALMU=35,JRALSA=41,JRALLC=43,JRALBC=45,
     +          LRALEA=46)
C-- LUMIJJ ----
      PARAMETER(JLUMHI=1,JLUMLO=2,JLUMCP=3,JLUMSA=4,JLUMTR=5,JLUMF1=6,
     +          JLUMF2=7,JLUMNS=8,JLUMF3=9,JLUMF4=10,JLUMBH=11,
     +          JLUMNP=12,JLUMB1=13,JLUMB2=14,JLUMLL=15,JLUMVH=16,
     +          JLUMNV=17,JLUMLU=18,JLUMSE=19,JLUMSY=20,LLUMIA=20)
C-- RINFJJ ----
      PARAMETER(JRINNE=1,JRINLF=2,JRINDC=3,JRINDQ=4,JRINLE=5,JRINMC=6,
     +          JRINLN=7,JRINBX=8,JRINBY=9,JRINBZ=10,JRINLU=11,
     +          JRINNZ=12,JRINNB=13,JRINBM=14,JRINFR=15,JRINLR=16,
     +          JRINNV=17,JRINNL=18,JRINNH=19,JRINVT=20,JRINVV=21,
     +          JRINVZ=22,JRINVL=23,JRINVB=24,JRINCA=25,JRINCB=26,
     +          JRINI1=27,JRINI2=28,JRINI3=29,JRINI4=30,JRINI5=31,
     +          JRINEX=32,JRINEY=33,JRINEZ=34,JRINR1=35,JRINR2=36,
     +          JRINR3=37,JRINR4=38,JRINR5=39,LRINFA=39)
      SAVE
      COMMON / SIBHA / NRUSIC,ILUQSI,NBHASI,SLUSIC,BACKSI,BTEWSI
      PARAMETER ( IYM = 10000 , IMX = 10000000 , NONL = 500)
      REAL BXY(20)
      CHARACTER*80 BLA,MESG,MSG
      LOGICAL BTEST
      DATA EPSIL / 0.1 / , IFIRST / 0 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Various initialisations
      IER=0
      IOLRU=-1
      BLA=' '
      INOFJ=0
      INOFB=0
      MESG=BLA
      NRUN=0
      MRUVN=-1
      NR4BU=MIR4BU
      MAXSI=MXLRU1
      CALL BKFMT('FAKR','2I,(3I,4A,I,4A,39I)')
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
      CALL DATIME(ID,IT)
      INN=ID/IYM
      IF (INN.GT.10) THEN
         IYCA=1900+INN
      ELSE
         IYCA=2000+INN
      ENDIF
C Find from bank 'BLAS' the last run # previously KNOWN
C and the last run number with provisional luminosity :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 920
      KBLAS=KROW(JBLAS,1)
      NRUOL=IW(KBLAS+JBLALO)
      NRUJU=IW(KBLAS+JBLAMA)
      NRULU=IW(KBLAS+JBLALU)
C Build all 'SEVT' banks from the existing 'SRUN' card , if any :
      CALL BKSREV(IER)
      IF (IER.NE.0) GO TO 920
C-----------------------------------------------------------------------
C Decode the information from JULIA results .
C Loop on all POT input files :
C
      IF (IMODE.EQ.2) GO TO 6
 5    IF (IMODE.NE.1) GO TO 800
      CALL ABRSEL('S','NODE',IRET)
      IF (IRET.GE.6) GO TO 800
      IF (IRET.EQ.1) GO TO 5
      IF (IDEBUG.EQ.1) CALL AUBLIS('S')
 6    IOKFJ=0
      IOKFR=0
      ICA=0
      ICB=0
      JEVEH=IW(NAMIND('EVEH'))
      IF (IMODE.EQ.1.AND.JEVEH.NE.0) GO TO 5
      JRALE=IW(NAMIND('RALE'))
      JSSUM=IW(NAMIND('JSUM'))
      JLUMI=IW(NAMIND('LUMI'))
      JJEDS=IW(NAMIND('JEDS'))
C-----------------------------------------------------------------------
C Store data from 'JSUM'  :
C
      IF (JSSUM.EQ.0) GO TO 750
      IOKFJ=1
      NRUN=IW(JSSUM-2)
      IF (NRUN.LT.LISFRU(1)) GO TO 5
      IF (NRUN.EQ.IOLRU) GO TO 5
      IOLRU=NRUN
      MRUVN=MAX0(MRUVN,NRUN)
      IF (IDEBUG.GT.0) CALL PRTABL('JSUM',NRUN)
C Number of events :
      NEVT=IW(JSSUM+LMHLEN+JJSUNT)
      NVERT=IW(JSSUM+LMHLEN+JJSUNV)
      NZERG=0
      NBHAB=0
      NXSE=-1
      RLUM=-1.
      ILUQSI=0
      CALL VZERO(BXY,20)
      IF (NVERT.LE.2) GO TO 7
      NZERG=IW(JSSUM+LMHLEN+JJSUVZ)
      IF (JJEDS.GT.0) NZERG=ITABL(JJEDS,1,16)
C Z of beam crossing and error on Z :
      BZZ=RW(JSSUM+LMHLEN+JJSUZV)/NVERT
      DZZ=(RW(JSSUM+LMHLEN+JJSUZS)/NVERT-BZZ**2)/(NVERT-1)
      IF(DZZ.GT.0.)  DZZ=SQRT(DZZ)
 7    CONTINUE
C Values for X,Y beam position calculation :
       DO 8 IA=1,20
          BXY(IA)=BXY(IA)+RTABL(JSSUM,1,JJSUA0-1+IA)
8      CONTINUE
C Get the provisional value from the luminosity :
      IF (IYCA.GE.1993.AND.NRUN.LT.MAXSI) THEN
C LEP I Data from 1993 to 1995 included :
         RLUM=-1.
         NBHAB=-1
         CALL GETLUM(NRUN,IFOUN,IRQFL,NZ,NBH,RLU,BK,BT)
         IF (IFOUN.GT.0) THEN
            NBHAB=NBH
            RLUM=RLU
            IF (IFOUN.EQ.3) THEN
C Data obtained from SICAL run header banks :
               NRUSIC=NRUN
               ILUQSI=1
               NBHASI=NBH
               SLUSIC=RLU
               BACKSI=0.
               BTEWSI=0.
               IF (IER.EQ.2) GO TO 5
               IF (NRUN.GE.NR4BU) CALL BKS4BU(2,IER)
            ENDIF
         ENDIF
      ELSE
C Data from 1992 and before :
      IF (JLUMI.EQ.0) GO TO 9
      IMETH=5
C Data with SICAl as Lumi reference :
      IF (NRUN.GT.MINSIC.AND.NRUN.LE.MXLRU1) IMETH=9
      IF (IMETH.EQ.9.AND.IMETH.GT.LROWS(JLUMI)) IMETH=5
C Data for LEP II with LCAL as Lumi reference :
      IF (NRUN.GT.MXLRU1)  IMETH=10
      IF (IMETH.EQ.10.AND.IMETH.GT.LROWS(JLUMI)) IMETH=5
      KLUMI=KROW(JLUMI,IMETH)
      IF (KLUMI.LE.0) GO TO 9
      RLUM=RW(KLUMI+JLUMLU)
      NBHAB=RW(KLUMI+JLUMB2)
      ENDIF
      LUNEW=0
      IF (RLUM.LT.EPSIL) THEN
         RLUM=-1.
         LUNEW=-1
      ENDIF
 9    CONTINUE
C-----------------------------------------------------------------------
C Now store these values in bank 'BRUC' :
C Determine the period of data taking ;
C if this run is already stored in 'BRUC' , update the info
C if not , create a new row in 'BRUC' :
      CALL BKFPER(NRUN,0,NPER)
      IF (NPER.LE.0) GO TO 100
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LT.0) GO TO 920
      IF (JBRUC.EQ.0) GO TO 100
      NRUC=LROWS(JBRUC)
      NROT=0
      IOLD=0
C
C find run NRUN in 'BRUC' and update corresponding data :
C
      DO 80 IRO=1,NRUC
         IF (ITABL(JBRUC,IRO,JBRURN).NE.NRUN) GO TO 80
         KRUO=KROW(JBRUC,IRO)
C
C one has to be very careful not to overwrite previous valuable
C informations :
C
         IF (NEVT.LE.0) GO TO 10
         NOLEV=IW(KRUO+JBRUEF)
         IDEV=IABS(NOLEV-NEVT)
         IF (IDEV.GT.1) IW(KRUO+JBRUEF)=NEVT
 10      IQLOL=IW(KRUO+JBRUCS)
         IF (IQLOL.GE.-1) THEN
            IQUAL=(1+IQLOL)/10
         ELSE
            IQUAL=-1
         ENDIF
         ILUOL=IQLOL-10*IQUAL
C if lumi is definitive , don't overwrite !
      IF (ILUOL.EQ.1) IOLD=-1
      IF (NRUN.LE.NRULU) IOLD=-1
C Protect against dilepton files :
      RLOLD=RW(KRUO+JBRULU)
      IF (RLUM.LE.0.) IOLD=-2
      IF (IOLD.LT.0) THEN
         IF (IOLD.EQ.-2)   WRITE ( LWRDBG,1107) NRUN,RLUM,RLOLD
         IF (IMODE.EQ.2) GO TO 800
         GO TO 5
      ENDIF
C number of Z0s  :
         IF (NZERG.LE.0) GO TO 20
         NOLDZ=IW(KRUO+JBRUNZ)
         IF (NOLDZ.LT.0.AND.NZERG.EQ.0) GO TO 15
         IF (IABS(NOLDZ-NZERG).LE.0) GO TO 20
 15      IW(KRUO+JBRUNZ)=NZERG
         INOFJ=INOFJ+1
C number of Bhabhas :
 20      IF (NBHAB.LE.0) GO TO 30
         NOLDB=IW(KRUO+JBRUNB)
         IF (NOLDB.LT.0.AND.NBHAB.EQ.0) GO TO 25
         IF (IABS(NOLDB-NBHAB).LE.0) GO TO 30
 25      IF (IYCA.LT.1993.OR.ILUQSI.EQ.0) IW(KRUO+JBRUNB)=NBHAB
C Lumi/quality  flag :
 30      IF (LUNEW.LT.0) GO TO 40
         IF (ILUOL.GE.0) GO TO 40
         IF (IYCA.LT.1993.OR.ILUQSI.EQ.0) IW(KRUO+JBRUCS)=LUNEW+
     +                                    10*IQUAL
         INOFJ=INOFJ+1
C Luminosity :
 40      CONTINUE
         IF (RLUM.LT.0.) GO TO 50
         IF (ABS(RLUM).LT.EPSIL.AND.RLOLD.LE.0.) GO TO 45
         IF (ABS((RLOLD-RLUM)/RLUM).LT.EPSIL) GO TO 50
 45      IF (IYCA.LT.1993.OR.ILUQSI.EQ.0) RW(KRUO+JBRULU)=RLUM
         INOFJ=INOFJ+1
 50      CONTINUE
         IOLD=1
C
         GO TO 200
C
 80   CONTINUE
C
C informations not yet on bank 'BRUC'  :
C
 100  CONTINUE
      IF (JBRUC.EQ.0) THEN
         LENB=LBRUCA*NONL+LMHLEN
         IOLR=0
      ELSE
         IOLR=LROWS(JBRUC)
         IF (LFRROW(JBRUC).GT.1) GO TO 110
         LENB=IW(JBRUC)+LBRUCA*NONL
      ENDIF
C Book or enlarge 'BRUC' if needed :
      CALL AUBOS('BRUC',NPER,LENB,JBRUC,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      IW(JBRUC+LMHCOL)=LBRUCA
 110  IW(JBRUC+LMHROW)=IOLR+1
      KBRUC=KROW(JBRUC,IOLR+1)
C
      DO 120 II=JBRUVS,JBRULF-1
 120  IW(KBRUC+II)=INTCHA('    ')
      DO 122 IS=JBRUNZ,JBRULD
 122  IW(KBRUC+IS)=-1
      IW(KBRUC+JBRUCS)=-11
      LUNEW=1
      IF (RLUM.LT.EPSIL) THEN
         RLUM=-1.
         LUNEW=-1
      ENDIF
      IW(KBRUC+JBRURN)=NRUN
      IW(KBRUC+JBRUEF)=NEVT
      IW(KBRUC+JBRUNZ)=NZERG
      IF (IYCA.LT.1993.OR.ILUQSI.EQ.0) IW(KBRUC+JBRUNB)=NBHAB
      IF (IYCA.LT.1993.OR.ILUQSI.EQ.0) RW(KBRUC+JBRULU)=RLUM
      IF ((IYCA.LT.1993.OR.ILUQSI.EQ.0).AND.LUNEW.GT.0)
     +     IW(KBRUC+JBRUCS)=IW(KBRUC+JBRUCS)+LUNEW
      INOFJ=INOFJ+1
C set bitmap for automatic selection for Physics groups having asked for
C ( for runs newly introduced in BKOFJU by Falcon summary files ) :
      DO 150 IKG=4,NGROUF
         IQPH=IW(KBRUC+JBRUBR)
         IF (.NOT.BTEST(IQPH,IKG-1).
     +   AND.CHOIPH(IKG).NE.' ') IW(KBRUC+JBRUBR)=IBSET(IQPH,IKG-1)
 150  CONTINUE
 200  CONTINUE
C-----------------------------------------------------------------------
C debug printout :
C
 726  IF (IOLD.EQ.1) WRITE ( LWRDBG , 1101 ) NRUN,NEVT,
     +               NZERG,NBHAB,RLUM
      IF (IOLD.EQ.0) WRITE ( LWRDBG , 1102 ) NRUN,NEVT,
     +               NZERG,NBHAB,NXSE,RLUM
      NMODIF=NMODIF+1
C all OK , go to the next input file :
 750  GO TO 5
C-----------------------------------------------------------------------
C End of processing : all files/cartridges  have been read
C
 800  CONTINUE
      CALL BDROP(IW,'JSUMRALELUMIJEDSSLUM')
C update run numbers for Online and Provisional LUMI in bank BLAS :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 920
      KBLAS=KROW(JBLAS,1)
      IF (MRUVN.GT.NRUJU) IW(KBLAS+JBLAMA)=MRUVN
      IF (MRUVN.GT.NRUOL) IW(KBLAS+JBLALO)=MRUVN
C If any modif done , book bank 'BADB' to trigger BKLUFI execution :
      IF (INOFJ+INOFB.LE.0) GO TO 805
      CALL AUBOS('BADB',1,0,JBADB,IGARB)
      IF (IGARB.EQ.2) GO TO 920
 805  CONTINUE
C-----------------------------------------------------------------------
C Get the actual sum of Z0s for the present year and best run so far :
C
 830  ISAV=ISELPH
      ISELPH=1
      NZ0TO=0
      NRUBI=0
      NZRBI=0
      NRUMI=LISYEA(1)
      INDY=IUCOMP(IYCA,LISYEA,NTOYEA)
      IF (INDY.GT.0) NRUMI=LISFRU(INDY)
      IFRUN=NRUMI-1
C Loop on all BRUC banks of the present year :
 850  IFRUN=IFRUN+1
      CALL BKFPER(IFRUN,0,NPER)
      IF (NPER.LE.0) GO TO 890
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 890
      ILRUN=ITABL(JBPER,NPER,JBPELR)
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 890
C Loop on runs in 'BRUC' , check if they are OK for run #
      NRUC=LROWS(JBRUC)
      IF (NRUC.LE.0) GO TO 890
      DO 860 IRUC=1,NRUC
         IRUN=ITABL(JBRUC,IRUC,JBRURN)
         CALL BKRUOK(IRUN,IPHY,IOK)
         IF (IOK.NE.0) GO TO 860
         NZRU=ITABL(JBRUC,IRUC,JBRUNZ)
         NZ0TO=NZ0TO+NZRU
         IF (NZRU.GT.NZRBI) THEN
            NZRBI=NZRU
            NRUBI=IRUN
         ENDIF
 860  CONTINUE
C Next period , if any :
      IFRUN=ILRUN
      GO TO 850
 890  CONTINUE
      ISELPH=ISAV
C Printout of results :
      WRITE ( LWRDBG,1105) NZ0TO,NRUBI,NZRBI
      GO TO 999
C-----------------------------------------------------------------------
C not enough space to book banks
 920  IVAL=0
      MESG=(' Error in BKOFJU : no space to book banks')
      IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/2X,'=== Subroutine BKOFJU ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1101 FORMAT (7X,'+++ BKOFJU Updating info for run : ',4I8,F10.2)
 1102 FORMAT (7X,'+++ BKOFJU New run , not in BRUC : ',5I8,F10.2)
 1105 FORMAT (//7X,'===== End of BKOFJU : Total number of Z0s this',
     +        ' year is : ',I9/7X,'===== Best run up to now is : ',2I9)
 1107 FORMAT (7X,'>> BKOFJU : NO UPDATE for run ',I6,
     +        ' ** Lumi new, old =',2F10.4)
      END
      SUBROUTINE BKONLG(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads special file  from ON-Line Logbook
C  stores informations in bank 'BRUC'
C  J. Boucrot  04-Sep-1989   modified many times in 1990,91,93,94
C  Completely rewritten 29-Mar-1995 for new data taking on DLT's in 1995
C UNIX Version 06-Oct-1995
C  Called from BKMODD
C  Calls BKFPER,BKMODI,BKPOIN,BKCARI,BKMESG,BKFILB         from BOOKLIB
C  Calls AUBOS,ALINST,BKTIMN,ALSTIN,BKINCA                 from ALEPHLIB
C  Output argument :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      SAVE
      PARAMETER ( VMMIN = 0.1 ,  NONL = 500 , NDPAT = 3 , NWDLT = 1 )
      INTEGER ITAB(MAXIN),BKINCA,ITBC(MAXIN),IDPAT(NDPAT),ITBRQ(NDPAT+1)
      INTEGER ITDLT(MAXIN)
      CHARACTER KEYW*1,SEPC*1,SRUN1*8,SRUN2*8,VSOLD*8,VST*8
      CHARACTER CDAY*8,CTIM*8,DSNOU*20,TIMN*11,COMEN*60,CRUN*6,S*132
      CHARACTER QUAL*22,QDEC*12,DLTCO*8,CODLT*60,COD98*20
      CHARACTER*1 QRUN,QULIS(4)
      CHARACTER*80 BLA,MESG,MSG
      CHARACTER INFO*132,COMT*16,VSN*6,CMON*3,TRTYP*8,VSSN*8
      CHARACTER*3 RMONT(12)
      LOGICAL BTEST
      DATA RMONT / 'JAN','FEB','MAR','APR','MAY','JUN','JUL',
     +             'AUG','SEP','OCT','NOV','DEC' /
      DATA QULIS / '?' , 'P' , 'M' , 'D' /
      DATA IPASS,NFR98  / 0 , 45000 /
      CHARACTER FINA*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IONLIN.EQ.0) GO TO 999
      IPASS=IPASS+1
      BLA=' '
      KEYW=' '
      VSOLD=' '
      MESG=BLA
      IOKWR=0
      INEWR=0
      NTAPS=0
      ICONT=0
      NRUN=0
      NWCOM=JBCADN-JBCACM
      NBDLT=0
      NFDLT=MAXFI
      CALL BKFMT('BDLT','(I)')
C get from bank 'BLAS' the last run numbers known in the database
C and udpated from a BMODT 00xxxx file :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 920
      KBLAS=KROW(JBLAS,1)
      NRUAL=IW(KBLAS+JBLALO)
      NRUOU=IW(KBLAS+JBLAOU)
      MRUVN=-1
      NRURQ=IW(KBLAS+JBLARQ)
      MRUVR=-1
      NFILA=IW(KBLAS+JBLALF)
      MFILR=-1
C
C The first record of the BMODT Request File was already read in BKMODD
C
      IREC=1
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C
C Read the input file :
C
 5    READ ( LECTXT , '(A132)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
      WRITE (LWRDBG,1101) IREC,INFO(1:LNBLNK(INFO))
      IF (INDEX(INFO,'????').NE.0) GO TO 5
 20   CALL VZERO(ITAB,MAXIN)
      CMON=' '
      VSN =' '
      COMT=' '
      DLTCO=' '
      COD98=' '
C-----------------------------------------------------------------------
C Decode the standard information from Online Logbook :
C
 30   READ (INFO,1000) NRUN
      IF (NRUN.LT.NFR98) THEN
           READ (INFO,1001) NRUN,IDAY,CMON,IYEA,IHOU,IMIN,ISEC,
     +     TRTYP,FAMP,ILEPF,ILEPB,NRECS,VSN,VMBYT,QUAL,DLTCO
      ELSE
           READ (INFO,1002) NRUN,IDAY,CMON,IYEA,IHOU,IMIN,ISEC,
     +     TRTYP,FAMP,ILEPF,ILEPB,NRECS,VSN,DLTCO,VMBYT,QUAL,COD98
      ENDIF
C Discard "COSMOLEP" data: of 1999:
      IF (TRTYP.EQ.'COSMOLEP') GO TO 5
C Determine the period of data taking :
      IFRONL=MIN0(IFRONL,NRUN)
      ILRONL=MAX0(ILRONL,NRUN)
      CALL BKFPER(NRUN,0,NPER)
      IF (NPER.LE.0) GO TO 5
C Write this line on LWRRAW for updating the whole Online history file :
      IOKWR=IOKWR+1
      IF (NRUN.LE.NRUAL) GO TO 32
      INEWR=INEWR+1
      IF (INEWR.EQ.1.AND.IPASS.EQ.1) THEN
         FINA=' '
         FINA=ALS_TEMP(1:ILTEMP)//'rawlist.update'
         FINA=FINA(1:LNBLNK(FINA))
         CALL SYSTEM(' rm -f '//FINA)
         OPEN ( LWRRAW , FILE = FINA , STATUS = 'NEW' , ERR = 900 )
      ENDIF
      IF (INDEX(INFO,'NLIN').NE.0) GO TO 20
      S=INFO(1:LNBLNK(INFO))
      WRITE ( LWRRAW , 1003 ) S
C
 32   MRUVN=MAX0(MRUVN,NRUN)
      MFILR=MAX0(MFILR,ILEPF)
C translate month number :
      IMON=0
      DO 35 I=1,12
         IF (CMON.EQ.RMONT(I)) GO TO 40
 35   CONTINUE
      GO TO 45
 40   IMON=I
 45   CONTINUE
C put all decoded values in ITAB to fill the 'BRUC' bank :
      IF (VSN.EQ.' '.OR.VSN(1:2).NE.'AR') VSN='NO TAP'
      VST=VSN//'  '
      CALL ALINST(VST,ITAB(JBRUVS),K1)
      CALL ALINST(TRTYP,ITAB(JBRUTT),K2)
      ITAB(JBRULF)=ILEPF
      ITAB(JBRURN)=NRUN
      ITAB(JBRUMC)=NINT(10.*FAMP)
      ITAB(JBRUWD)=10000*IYEA+100*IMON+IDAY
      ITAB(JBRUWH)=10000*IHOU+100*IMIN+ISEC
      ITAB(JBRUEV)=NRECS
      ITAB(JBRUNE)=2*ILEPB
      ITAB(JBRULD)=NINT(1000.*VMBYT)
C Global Run_Quality for the present run :
      QRUN=QUAL(1:1)
      ITAB(JBRUCS)=-11
      IQUAL=-2
      DO 50 IQQ=2,4
         IF (QRUN.NE.QULIS(IQQ)) GO TO 50
         IQUAL=IQQ-2
         GO TO 55
 50   CONTINUE
 55   IF (IQUAL.LE.-2) GO TO 60
      IF (IQUAL.GE.0) MRUVR=MAX0(MRUVR,NRUN)
      ITAB(JBRUCS)=10*IQUAL-1
      WRITE ( LWRDBG,1104) NRUN,QRUN
 60   CONTINUE
C For the run bitmap :
      IQPHY=-1
      IF (IQUAL.GE.0) IQPHY=2-IQUAL
C set bitmap for DUCK,PERF,MAYB
      IWPHY=ITAB(JBRUBR)
      IF (IQPHY.GE.0) ITAB(JBRUBR)=IBSET(IWPHY,IQPHY)
C set bitmap for automatic selection for Physics groups having asked for
      DO 70 IKG=4,NGROUF
         IQPH=ITAB(JBRUBR)
         IF ((QRUN.EQ.'P'.OR.QRUN.EQ.'M').
     +   AND.CHOIPH(IKG).NE.' ') ITAB(JBRUBR)=IBSET(IQPH,IKG-1)
 70   CONTINUE
C From 1998 onwards, build the bitmap for Physics Tools from the CIA wor
      IF (NRUN.GT.NFR98) THEN
         CALL BKONPHY(COD98,ITAB(JBRUBR),IBOU)
         ITAB(JBRUBR)=IBOU
      ENDIF
C Detector Run_quality mapped on 12-character word ( 10 elements maxi )
      QDEC=' '
      IDET=0
      DO 80 IDEC=1,22
         IF (QUAL(IDEC:IDEC).EQ.' ') GO TO 80
         IDET=IDET+1
         QDEC(IDET:IDET)=QUAL(IDEC:IDEC)
 80   CONTINUE
C-----------------------------------------------------------------------
C Now get the appropriate 'BDRQ' bank ; look if NRUN already in it :
C
      DO 90 ID=1,NDPAT
 90   IDPAT(ID)=INTCHA('    ')
      CALL ALINST(QDEC,IDPAT(1),IBIDE)
      CALL BKPOIN(LECDAF,'BDRQ',NPER,JBDRQ)
      IF (JBDRQ.LT.0) GO TO 920
      IF (JBDRQ.EQ.0) GO TO 200
      DO 100 IBDRQ=1,LROWS(JBDRQ)
         KBDRQ=KROW(JBDRQ,IBDRQ)
         IF (IW(KBDRQ+JBDRRN).EQ.NRUN) THEN
C Run already in 'BDRQ' : this is an update
            CALL UCOPY(IDPAT(1),IW(KBDRQ+JBDRDP),NDPAT)
            WRITE (LWRDBG,1112) NRUN,QDEC
            GO TO 300
         ENDIF
 100  CONTINUE
C This run is a new one : fill a new row in 'NDRQ' :
 200  ITBRQ(JBDRRN)=NRUN
      CALL UCOPY(IDPAT(1),ITBRQ(JBDRDP),NDPAT)
      CALL BKFILB('BDRQ',NPER,ITBRQ,LBDRQA,NDR,IERB)
      IF (IERB.EQ.2) GO TO 920
      CALL BKMODI('BDRQ',NPER,0,LBDRQA,IERM)
      WRITE ( LWRDBG,1113) NRUN,QDEC
C
C Get the appropriate  'BRUC' bank ; look if run NRUN
C was already stored in 'BRUC' :
C
 300  IOLD=0
      NROT=0
      ITPOL=1
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LT.0) GO TO 920
      IF (JBRUC.EQ.0) GO TO 500
      NRUC=LROWS(JBRUC)
      IF (NRUC.LE.0) GO TO 500
      DO 400 IRO=1,NRUC
         IF (ITABL(JBRUC,IRO,JBRURN).EQ.NRUN) THEN
C If this run was already in 'BRUC' , this is an update :
C store the new , modified informations :
            KRUO=KROW(JBRUC,IRO)
            CALL UCOPY(ITAB(JBRUVS),IW(KRUO+JBRUVS),JBRUEV-JBRUVS+1)
            IW(KRUO+JBRUNE)=ITAB(JBRUNE)
            IW(KRUO+JBRUDC)=ITAB(JBRUDC)
            IW(KRUO+JBRULD)=ITAB(JBRULD)
C Save the previously defined Phys. Tools bits:
C only bits 0 to 2 (DUCK/MAYB/PERF) updated from CIA
             IUPDR=ITAB(JBRUBR)
             IOLBR=IW(KRUO+JBRUBR)
             INEWB=IOLBR
             DO 350 IBS=1,3
                IF (BTEST(IUPDR,IBS-1)) THEN
                   INEWB=IBSET(INEWB,IBS-1)
                ELSE
                   INEWB=IBCLR(INEWB,IBS-1)
                ENDIF
 350         CONTINUE
             IW(KRUO+JBRUBR)=INEWB
C From 1998 onwards, build the bitmap for Physics Tools from the CIA wor
      IF (NRUN.GT.NFR98) THEN
         CALL BKONPHY(COD98,IW(KRUO+JBRUBR),IBOU)
         IW(KRUO+JBRUBR)=IBOU
      ENDIF
C Do not update the exact LEP energy if already definitive :
            ILUM=MOD(IW(KRUO+JBRUCS),10)
            IF (ILUM.NE.1) THEN
               IW(KRUO+JBRUTE)=ITAB(JBRUNE)
               IW(KRUO+JBRUCS)=ITAB(JBRUCS)
            ENDIF
            WRITE (LWRDBG,1103) NRUN
            CALL ALSTIN(IW(KRUO+JBRUVS),JBRUTT-JBRUVS,VSOLD)
            IF (VSOLD(1:6).EQ.VSN) ITPOL=0
            IOLD=1
            NROT=IRO
            GO TO 500
         ENDIF
 400  CONTINUE
C
C This is a new run : Store all informations in bank 'BRUC'
C
 500  IOLR=0
      IF (IOLD.EQ.1) GO TO 600
C new entry :
      DO 550 IS=JBRUNZ,JBRUNB
 550  ITAB(IS)=-1
      ITAB(JBRUFL)=0
      ITAB(JBRUTE)=ITAB(JBRUNE)
C Book or enlarge 'BRUC' if needed :
      WRITE (LWRDBG,1102) NRUN,ILEPB,VSN,DLTCO(1:6)
      CALL BKFILB('BRUC',NPER,ITAB,LBRUCA,NNR,IER)
      IF (IER.EQ.2) GO TO 920
      CALL BKMODI('BRUC',NPER,0,LBRUCA,IER)
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 700
      LASRC=LROWS(JBRUC)
      KRUC=KROW(JBRUC,LASRC)
      IF (IW(KRUC+JBRURN).NE.NRUN) GO TO 700
      RW(KRUC+JBRULU)=-1.
      IF (IER.NE.0) GO TO 920
      GO TO 700
C
C Update of info concerning the tape for an already existing run  :
C ( if the tape has changed or was previously unknown )
C
 600  IF (ITPOL.EQ.0) GO TO 700
      CALL ALINST(VST,ITAB(JBRUVS),NNF)
      KBRUC=KROW(JBRUC,NROT)
      CALL UCOPY(ITAB(JBRUVS),IW(KBRUC+JBRUVS),JBRUTT-JBRUVS)
      IW(KBRUC+JBRULD)=ITAB(JBRULD)
      IW(KBRUC+JBRUTE)=ITAB(JBRUNE)
      IW(KBRUC+JBRUNE)=ITAB(JBRUNE)
      IW(KBRUC+JBRUFL)=ITAB(JBRUFL)
      IW(KBRUC+JBRUCS)=ITAB(JBRUCS)
C-----------------------------------------------------------------------
C Transmit the new Online 'AR' DLT's to the TMS
C via a temporary bank 'BCAR',NR=1000 :
      NROU=1000
C
 700  IF (VSN.EQ.' '.OR.VSN.EQ.'NO TAP') GO TO 5
      IF (VSN(1:2).NE.'AR') GO TO 5
 730  CALL VZERO(ITBC,MAXIN)
      CALL VZERO(ITDLT,MAXIN)
      DO 731 II=JBCAVS,JBCAWN-1
 731  ITBC(II)=INTCHA('    ')
      NROU=1000
      VSSN=' '
      COMEN=' '
      VSSN=VSN(1:LNBLNK(VSN))
      CALL BKSSTR('BCAR',NROU,VSSN,JBCAVI-JBCAVS,JBCAVS,NRWO)
      CALL BKPOIN(LEBCAR,'BCAR',NROU,JBCOU)
      IF (JBCOU.EQ.0) GO TO 735
      KBCOU=KROW(JBCOU,NRWO)
      IF (NRWO.EQ.0.OR.KBCOU.EQ.0) GO TO 735
      CALL UCOPY(IW(KBCOU+JBCAVS),ITBC(JBCAVS),LBCARA)
C If tape already modified , update only the comment :
      NTAPS=NTAPS+1
      GO TO 750
C
C First pass here for a NEW tape :
C Modify user name , date of reservation , datasetname :
C
 735  CONTINUE
      CALL ALINST(VSSN,ITBC(JBCAVS),IBD)
      CALL ALINST(DLTCO,ITBC(JBCAVI),NNV)
      CALL ALINST('ON LINE',ITBC(JBCAON),NN3)
      CDAY='  /  /  '
      WRITE ( CDAY(1:2) , '(I2)' )    IDAY
      WRITE ( CDAY(4:5) , '(I2)' )    IMON
      WRITE ( CDAY(7:8) , '(I2)' )    IYEA
      CTIM='  .  .  '
      WRITE ( CTIM(1:2) , '(I2)' )    IHOU
      WRITE ( CTIM(4:5) , '(I2)' )    IMIN
      WRITE ( CTIM(7:8) , '(I2)' )    ISEC
      CALL ALINST(CDAY,ITBC(JBCARD),NN2)
      CALL ALINST(CTIM,ITBC(JBCART),NN2)
C build the dataset name :
      CALL BKTIMN(IYEA,IMON,IDAY,IHOU,IMIN,ISEC,TIMN)
      DSNOU='DRAWNO'//TIMN
      CALL ALINST(DSNOU,ITBC(JBCADN),NNW)
      COMEN='RAW DATA RUNS       '
      WRITE (COMEN(14:19) , '(I6)' ) NRUN
      DO 741 IK=JBCACM,JBCADN-1
 741  ITBC(IK)=INTCHA('    ')
      CALL ALINST(COMEN,ITBC(JBCACM),NNC)
      ITBC(JBCAWN)=ITBC(JBCAWN)+1
      ITBC(JBCARF)=2
C Build the array ITDLT of informations for the copy DLTCO :
      CALL UCOPY(ITBC(1),ITDLT(1),LBCARA)
      DO 745 IKK=JBCAVS,JBCAWN-1
 745  ITDLT(IKK)=INTCHA('    ')
      CODLT=' '
      CODLT='COPY OF '//VSSN
      CALL ALINST(CODLT,ITDLT(JBCACM),NND)
      CALL ALINST(DLTCO,ITDLT(JBCAVS),NNY)
      CALL ALINST(DSNOU,ITDLT(JBCADN),NNW)
C Book/enlarge the intermediate bank 'BCAR' , NR=1000
C and store informations for master DLT VSSN :
      CALL BKFILB('BCAR',1000,ITBC,LBCARA,LROWD,IERB)
      IF (IERB.EQ.2) GO TO 920
      NROU=1000
      CALL BKMODI('BCAR',NROU,0,LBCARA,IER)
      IF (IER.NE.0) GO TO 920
C Book/enlarge the intermediate bank 'BCAR' , NR=1000
C and store informations for copy DLT DLTCO :
      CALL BKFILB('BCAR',1000,ITDLT,LBCARA,LROWD,IERB)
      IF (IERB.EQ.2) GO TO 920
      NROU=1000
      CALL BKMODI('BCAR',NROU,0,LBCARA,IER)
      IF (IER.NE.0) GO TO 920
C Book the intermediate bank 'BDLT' , NR=DLT number
C and store informations for original , copy and run :
      NBDLT=0
      NNR=BKINCA(VSN(3:6))
      LHDLT=LMHLEN+NWDLT*NFDLT
      CALL AUBOS('BDLT',NNR,LHDLT,JBDLT,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      IW(JBDLT+LMHCOL)=NWDLT
      NBDLT=NBDLT+1
      IW(JBDLT+LMHROW)=NBDLT
      KBDLT=KROW(JBDLT,NBDLT)
      IW(KBDLT+1)=NRUN
      GO TO 5
C
C Tape already modified : update only the comment :
C
 750  CALL ALSTIN(ITBC(JBCACM),NWCOM,COMEN)
      ITL=LNBLNK(COMEN)
      ITAR=INDEX(COMEN,'>')
      IF (ITAR.GT.0) THEN
         ITL=ITAR
      ELSE
         COMEN(ITL+2:ITL+3)='->'
         ITL=LNBLNK(COMEN)
      ENDIF
      NDIG=4
      IF (NRUN/10000.GT.0) NDIG=5
      IF (NRUN/100000.GT.0) NDIG=6
      CALL BKCARI(NRUN,NDIG,CRUN)
      COMEN=COMEN(1:ITL)//' '//CRUN(1:LNBLNK(CRUN))
      CALL ALINST(COMEN,ITBC(JBCACM),NNO)
      CALL UCOPY(ITBC(JBCAVS),IW(KBCOU+JBCAVS),LBCARA)
C Add a new row in bank 'BDLT' :
      NNR=BKINCA(VSN(3:6))
      JBDLT=NLINK('BDLT',NNR)
      IF (JBDLT.GT.0) GO TO 765
      NBDLT=0
      LHDLT=LMHLEN+NWDLT*NFDLT
      CALL AUBOS('BDLT',NNR,LHDLT,JBDLT,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      IW(JBDLT+LMHCOL)=NWDLT
 765  NBDLT=NBDLT+1
      IF (NBDLT.GT.NFDLT) THEN
         WRITE ( LWRDBG, 1120 )  VSN,NBDLT
         GO TO 930
      ENDIF
      IW(JBDLT+LMHROW)=NBDLT
      KBDLT=KROW(JBDLT,NBDLT)
      IW(KBDLT+1)=NRUN
      GO TO 5
 800  CONTINUE
C Update the last run # in 'BLAS' , if necessary :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 920
      KBLAS=KROW(JBLAS,1)
      IF (MRUVN.GT.NRUAL) IW(KBLAS+JBLALO)=MRUVN
      IF (MRUVN.GT.NRUOU) IW(KBLAS+JBLAOU)=MRUVN
      IF (MRUVR.GT.NRURQ) IW(KBLAS+JBLARQ)=MRUVR
      IF (MFILR.GT.NFILA) IW(KBLAS+JBLALF)=MFILR
      GO TO 999
C-----------------------------------------------------------------------
C Process   errors :
C Syntax error in BMODT cards file :
C
 900  BLA=INFO(1:80)
      IVAL=IREC
      MESG=(' +++ Error in BKONLG : syntax error in file')
      GO TO 950
C not enough space to book banks
 920  IVAL=0
      MESG=(' Error in BKONLG : no space to book banks')
      IER=1
      GO TO 950
C Too many files on a DLT :
 930  IVAL=0
      MESG=(' Error in BKONLG : too many files on DLT')
      IER=1
C
 950  CALL BKMESG(BLA,IVAL,MESG)
C
 999  IF (IOKWR.EQ.0) THEN
C If the file was empty ( only title ) it must be erased from ALSOFT 231
         MSG=' '
         MSG=ALS_RQF(1:ILERQF)//NAMRQF(ICURFI)
         CALL SYSTEM(' rm -f '//MSG(1:LNBLNK(MSG)))
         WRITE ( LWRDBG,1110) NAMRQF(ICURFI)
      ENDIF
      RETURN
C----------------------------------------------------------------------
 1000 FORMAT( I6)
 1001 FORMAT (I6,1X,I2,1X,A3,2X,4(1X,I2),A8,
     +        1X,F6.1,3(1X,I5),1X,A6,1X,F7.3,1X,A22,A8)
 1002 FORMAT (I6,1X,I2,1X,A3,2X,4(1X,I2),A8,
     +        1X,F6.1,3I6,2(1X,A6),1X,F7.3,1X,A22,A20)
 1003 FORMAT (A130)
 1100 FORMAT (/2X,'=== Subroutine BKONLG ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1101 FORMAT (2X,'+++ BKONLG =',I4/1X,A130)
 1102 FORMAT (7X,'+++ BKONLG New Run,ELEP,RAW Tape =',2I8,2X,A6,
     +        ' Copy DLT is :',2X,A6)
 1103 FORMAT (17X,'=== Informations updated in bank BRUC for run',I9)
 1104 FORMAT (17X,'=== Run_Quality for Run ',I7,' is : ',2X,A1)
 1110 FORMAT (7X,'+++ BKONLG : File ',2X,A20,' is empty : ERASED !')
 1112 FORMAT (17X,'=== Bank BDRQ updated, run',I9,' with QDEC =',2X,A12)
 1113 FORMAT (7X,'+++ BKONLG New Run in BDRQ =',I8,' QDEC =',2X,A12)
 1120 FORMAT (7X,'+++ BKONLG ERROR ! Too many files on DLT=',2X,A8,I8)
      END
      SUBROUTINE BKONPHY(CODE,IBPIN,IBPOU)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C!   Decodes the 1998 CIA bitpattern for Physics Tools
C  Author J.Boucrot 12-May-1998
C Called from BKONLG                            from BOOKLIB
C  Input arguments:
C   CODE   = CIA bitpattern (20 characters)
C    IBPIN = input     BRUC bitpattern
C  Output argument :
C    IBPOU = corrected BRUC bitpattern
C-----------------------------------------------------------------------
      PARAMETER ( NBIPA = 8 )
      CHARACTER*(*) CODE
      INTEGER ICOBI(NBIPA)
      DATA ICOBI / 23 , 15 , 16 , 20 , 17 , 18 , 22 , 14 /
C-----------------------------------------------------------------------
C
C CODE is the CIA coded pattern for 1998 Physics Tools
C       P for "PERF" , D for  "DUCK"
C    e.g.  P D P P P D D D
C
C Order of Physics Tools : VVVVV
C      TR   DX  EI  GA  MI  LX  FV  EF
C      23   15  14  20  17  18  22  14
C Bit # in BRUC word JBRUBR ^^^^  (1st bit is bit 0 )
C
C-----------------------------------------------------------------------
      IOLD=IBPIN
      DO 100 II=1,NBIPA
         IK=1+2*(II-1)
         IQPH=IOLD
         IF (CODE(IK:IK).NE.'D') THEN
            IOLD=IBSET(IQPH,ICOBI(II))
         ELSE
            IOLD=IBCLR(IQPH,ICOBI(II))
         ENDIF
 100  CONTINUE
C
      IBPOU=IOLD
      RETURN
      END
      SUBROUTINE BKOPDA(NAMED,IFAIL)
C-----------------------------------------------------------------------
CKEY UPDABOOK INIT
C!   OPEN DATABASES  FOR BOOKKEEPING
C  Author A.Falvard 20-Jun-1989
C  Modified  to deal with SEQ files , J. Boucrot 29-Aug-1989
C  Modified for year-dependant databases J. Boucrot 17-Feb-1992
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C Called from BKINAL or from BKSEAR             from BOOKLIB
C Calls BKMESG                                  from BOOKLIB
C Calls BREAD,BDROP,BGARB                       from BOSLIB
C Calls AOPEN                                   from ALEPHLIB
C  Input argument :
C   NAMED  = Year database name
C  Output argument :
C    IFAIL = 0    ALL IS OK
C            1    PROBLEM
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      SAVE
      CHARACTER FIDEF*132,MESG*80,IRECF*13,NRECF*13,PASSW*4
      CHARACTER FINAM*80,FINPR*80,NAMED*8,LISB*1
      CHARACTER NAMEL*8
      DATA FINPR / ' ' /
      DATA NBROL / 0 /
C-----------------------------------------------------------------------
      IFAIL=1
      FINAM=' '
C  Open and read the NAMED DATABASE file :
      NAMEL = NAMED
      CALL CUTOL(NAMEL)
      IND1 = INDEXB(NAMSQB,'/')
      IND2 = INDEX(NAMSQB(IND1+1:),'.') + IND1
      FINAM=NAMSQB(1:IND1)//NAMEL(:LNBLNK(NAMEL))//
     +  NAMSQB(IND2:LNBLNK(NAMSQB))
      IF (FINAM.EQ.FINPR.AND.NBROL.EQ.NBREDO) GO TO 100
      CALL AOPEN(LECDAF,FINAM,FORSQB,'DISK',IER)
      IF (IER.NE.0) THEN
         MESG=NAMED//' NEWSEQ file not opened'
         GO TO 900
      ENDIF
C Define the BOS list to put the banks :
      LISB='E'
      IF (IDSEAR.GT.0.AND.NAMED.NE.'ALEBROOT') THEN
         LISB='T'
         IF (IDSEAR.NE.7) CALL BDROP(IW,LISB)
         CALL BGARB(IW)
      ENDIF
 10   CALL BREAD(IW,LECDAF,LISB,*10,*100)
      GO TO 10
 100  CONTINUE
      FINPR=FINAM
      NBROL=NBREDO
      IFAIL=0
 500  CONTINUE
      CALL ACLOSE(LECDAF,IECL)
C
      GO TO 999
C Process error :file not found
 900  CALL BKMESG(FIDEF,0,MESG)
C
 999  RETURN
      END
      SUBROUTINE BKOPEN(LUN,IERRK)
C ----------------------------------------------------------------------
C! Opens a Data Bookkeeping file for writing
CKEY ALBOOK OPEN FILE / USER
C  J. Boucrot                     2-Nov-1988
C Calls BKNAME,AOPENW                               from ALEPHLIB
C  Purpose :
C   Defines all quantities relevant to the Bookkeping production
C   output file ; give it a normalized name , and open it
C   on Fortran unit LBOORL.
C  Input argument  :
C    LUN  = FORTRAN logical unit number  ;
C           if 0 , take the default value stored in LBOORL
C  Output argument :
C   IERRK = 0 if file successfully opened
C         = 1 if not
C ----------------------------------------------------------------------
      SAVE
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( NBOOK = 8 )
      CHARACTER USER*12,NAMBK*17
C ----------------------------------------------------------------------
      IERRK=1
C Define LBOORL if LUN # 0
      IF (LUN.GT.0) LBOORL=LUN
C
C Build the normalized Bookkeeping production file name :
C
      CALL BKNAME(PRNAME,FORMBK,NBOOK,TIMNAM,NAMBK)
      NAMBKF=' '
      NAMBKF=NAMBK(:LNBLNK(NAMBK))
      NAMBKF(9:9)='.'
      USER=' '
      USER=USERLG(1:LNBLNK(USERLG))
      CALL CLTOU(USER)
      LB=LNBLNK(NAMBKF)
C Give a special name to the files produced by alprod/alrepro on UNIX :
      IF (INDEX(USER,'ALPROD').GT.0.OR.INDEX(USER,'ALREPR').GT.0)
     +          NAMBKF=NAMBKF(1:LB)//'.temp'
C
C Open the file for writing :
C
       LE=LNBLNK(NAMBKF)
       CALL AOPENW(LBOORL,NAMBKF(1:LE),FORMBK,'DISK',IER)
C
       IF (IER.NE.0) THEN
          IERRK=1
          LBOORL=0
          GO TO 999
       ENDIF
       IERRK=0
C
 999   RETURN
       END
      SUBROUTINE BKOPFI(IEROR)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Open and read the TTAPES SPY file at the end of UPDABOOK job
C Author     E. Locci      17-Avr-1989
C UNIX Version 06-Oct-1995
C Called from BKTASP                             from BOOKLIB
C ----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      CHARACTER A*13,CONTEN*132
      CHARACTER FIDEF*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C ----------------------------------------------------------------------
      IEROR=1
      FIDEF=' '
      FIDEF=ALS_TEMP(1:ILTEMP)//'ttapes.spyadd'
      FIDEF=FIDEF(1:LNBLNK(FIDEF))
      CALL SYSTEM(' rm -f '//FIDEF)
      OPEN ( LWRSPY , FILE = FIDEF , STATUS = 'NEW' , ERR = 999 )
      IEROR=0
C
 999  RETURN
      END
      SUBROUTINE BKOPT5(INUS,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Fills variables for Option 5 from INUS
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN5                                 from BOOKLIB
C  Calls BKRDCH,BKEXFI,BKCHKT                          from BOOKLIB
C  Calls BKINCA,BKCARI,AUBOS                           from ALEPHLIB
C Input argument :
C  INUS = character string given by the user
C Output argument :
C   IER = 0 if all OK
C       = 1 if invalid run number given (< 0 or > last Online run)
C       = 2 if invalid cartridge or DLT file syntax
C       = 3 of range of tapes too big ( > 1000 )
C Common variables defined in this routine for the search :
C    NTAPKY and LISTAP     from / BKKEYS /
C    IB1RUN,ISRUNF,ISRUNL  from / BKKEYS /
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      CHARACTER LET1*1,LET6*6,TAP1*8,TAP2*8,COMA*1,STAP*4,TEXT*80
      CHARACTER*(*) INUS
      INTEGER BKINCA
      DATA COMA / ',' /
C-----------------------------------------------------------------------
      IER=0
      IF (INUS.EQ.' ') GO TO 999
      LET6=INUS(1:6)
      LET1=LET6(1:1)
      NTAPKY=0
      IB1RUN=0
C 1 file of a multifile tape : e.g. AUnnnn.ij
      IDOT=INDEX(INUS,'.')
      IF (IDOT.GT.0) THEN
         LLUS=LNBLNK(INUS)
         NTAPKY=1
         LISTAP(NTAPKY)(1:6)=INUS(IDOT-6:IDOT-1)
         LISDSN(NTAPKY)=INUS(IDOT+1:LLUS)
         GO TO 800
      ENDIF
C 1 run selected :
      IF (ICHAR(LET1).GE.ICHAR('0').AND.ICHAR(LET1).LE.ICHAR('9')) THEN
         IB1RUN=BKINCA(LET6)
         IMCDAT=1
         IF (IB1RUN.GT.NRUMAX.OR.IB1RUN.LE.0) GO TO 910
         IKEYOK=IKEYOK+1
         ISRUNF=IB1RUN
         ISRUNL=IB1RUN
         CALL AUBOS('SRUN',0,1,JSRUN,IGARB)
         IF (IGARB.EQ.2) GO TO 999
         IW(JSRUN+1)=IB1RUN
         GO TO 800
      ENDIF
C Range of cartridges selected :
      LSLA=INDEX(INUS,'/')
      IF (LSLA.GT.0) THEN
         TAP1=INUS(1:LSLA-1)
         TAP2=INUS(LSLA+1:LSLA+8)
         IFTAP=BKINCA(TAP1(3:6))
         ILTAP=BKINCA(TAP2(3:6))
         NTAP=ILTAP-IFTAP+1
         IF (NTAP.GT.NTPMX) GO TO 930
         NTAPKY=NTAP
         ITAP=IFTAP
         DO 14 IT=1,NTAPKY
            CALL BKCARI(ITAP,4,STAP)
            LISTAP(IT)=TAP1(1:2)//STAP
            ITAP=ITAP+1
 14      CONTINUE
         GO TO 800
      ENDIF
C 1 cartridge selected :
      IF (INDEX(INUS,COMA).EQ.0) THEN
         CALL BKCHKT(LET6,ICE,IMU,IDL,IERDR)
         IF (IERDR.NE.0) GO TO 920
         IKEYOK=IKEYOK+1
         NTAPKY=1
         LISTAP(NTAPKY)=LET6
         SELMAG='T'
         SELCAT=' '
         SELDAT='A'
         GO TO 800
C List of cartridges entered :
      ELSE
         INLIS=INDEX(INUS,COMA)
         LOUT =LNBLNK(INUS)
         IN1=1
         IN2=INLIS-1
 12      CONTINUE
         LET6=INUS(IN1:IN2)
         CALL BKCHKT(LET6,ICE,IMU,IDL,IERDR)
         IF (IERDR.NE.0) GO TO 920
         IKEYOK=IKEYOK+1
         NTAPKY=NTAPKY+1
         LISTAP(NTAPKY)=LET6
         IF (IN2.GE.LOUT) GO TO 13
         IN1=IN1+INLIS
         INLIS=INDEX(INUS(IN1:LOUT),COMA)
         IN2=IN1+INLIS-2
         IF (INLIS.EQ.0) IN2=LOUT
         GO TO 12
 13      CONTINUE
         SELMAG='T'
         SELCAT=' '
         SELDAT='A'
         GO TO 800
      ENDIF
C
 800  GO TO 999
C ----------------------------------------------------------------------
C IER= 1 : Invalid run number
 910  IER=1
      TEXT=' Error !! Invalid run number ! '
      CALL PRWARNX11(TEXT)
      GO TO 999
C IER= 2 : Invalid Cartridge name
 920  IER=2
      TEXT=' Error !! Invalid tape name  ! '
      CALL PRWARNX11(TEXT)
      GO TO 999
C IER= 3 : Too many tapes given
 930  IER=3
      TEXT=' Error !! Tape range is too big ! (Max 1000)'
      CALL PRWARNX11(TEXT)
 999  RETURN
      END
      SUBROUTINE BKOPYD(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Opens and reads the current Year's Database
C J.Boucrot  15-Jun-1996
C Called from BKSEXQ or BKSRPR                            from BOOKLIB
C Calls BKFDAB,BKOPDA                                     from BOOKLIB
C Output arguments:
C    IER  =  1 if not successful , = 0 otherwise
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER NAMDB*8
C-----------------------------------------------------------------------
      IER=0
      IF (IDSEAR.LE.0.OR.IDSEAR.EQ.4.OR.IMCDAT.EQ.2) GO TO 900
      IF (IDSEAR.EQ.3.OR.IDSEAR.EQ.8) GO TO 900
      IF (ISRUNF.LT.LRUNMC.OR.ISRUNF.GT.NRUMAX)      GO TO 900
C Find the adequate year database :
      CALL BKFDAB(ISRUNF,0,NRD,NAMDB,IERB)
      IF (IERB.NE.0.OR.NRD.LE.0) GO TO 900
C Open and read it :
      CALL BKOPDA(NAMDB,IFAIL)
      IF (IFAIL.NE.0) GO TO 900
      GO TO 999
C -- Error somewhere when searching or reading the database :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKOUTF(LUN,FULNM,FORMA,DEVIC,FNAMD,ILF)
C-----------------------------------------------------------------------
C!  Defines the Aleph Data set Name of the output file
CKEY ALBOOK OUTPUT FILE / INTERNAL
C  J. Boucrot        17 Dec 1988      Modified  30-Aug-1989
C Called from BKFTCA                                    from BOOKLIB
C Calls BKNAME                                          from BOOKLIB
C   Input arguments :
C LUN   =  Fortran logical unit #  for this output stream
C FULNM =  Full output file name ( with eventually node and directory)
C          as given in the input data cards
C FORMA =  'EPIO' or 'NATV'
C DEVIC =  Nature of device ( 'DISK' , 'TAPE' , 'CART' )
C   Output arguments :
C FNAMD =  Modified file name ( only for disk files ! )
C   ILF =  0 if this output stream doesn't need a renaming in AOPENW
C   ILF =  1 if this output stream is a file to be renamed in AOPENW
C  The resulting informations are transferred in the common /BKFILS/
C-----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
       EXTERNAL CHAINT
       PARAMETER ( NTAPC = 6 )
       CHARACTER*1 SEPDV(2),SEPDI
       CHARACTER*2 SEPCO
       CHARACTER*4 CHAINT,BLAN,DEV4
       CHARACTER*(*) FULNM,FORMA,DEVIC
       CHARACTER*80 DIRNM,FILNM,FNAMD
       DATA BLAN /' '/
       DATA SEPDV / ']' , ':' /  ,  SEPDI / ' ' /
       DATA SEPCO / '::' /
       DATA IFIL,IEVD,ITAP  / 3*0 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
       ILU=0
       ILF=0
       FNAMD=BLAN
       IF (IW(NAMIND('BOOK')).EQ.0) GO TO 999
C
C Loop on all output streams defined when calling BKINJB
C to see if LUN is one of these , or if it is an event directory
C ( in that case LUN = LISLOU+10 )
C
       DO 2 IFF=1,NFILOU
          IF (LUN.EQ.LISLOU(IFF)+10) THEN
             IEVDOU(IFF)=1
             GO TO 999
          ENDIF
          IF (LUN.EQ.LISLOU(IFF)) THEN
             ILU=IFF
             GO TO 3
          ENDIF
 2     CONTINUE
 3     IF (ILU.EQ.0) GO TO 999
C
C LUN is an output stream for which the Bookkeeping has to work :
C
       LENAM=LNBLNK(FULNM)
       FORMFI(ILU)='UNDF'
       IF (FORMA(1:1).EQ.'E') FORMFI(ILU)='EPIO'
       IF (FORMA(1:1).EQ.'N') FORMFI(ILU)='NATV'
C
C Build the normalized Aleph dataset name for this output stream :
C
          NADAT=MOD(NADTOU(ILU),10)
          CALL BKNAME(PRNAME,FORMA,NADAT,TIMNAM,DSETNA(ILU))
          DSETNA(ILU)=DSETNA(ILU)(1:LNBLNK(DSETNA(ILU)))
C-----------------------------------------------------------------------
C Branch according to the nature of the device :
C Disk file :
C
       DEV4=DEVIC(1:4)
       IF (DEV4.NE.'FILE'.AND.DEV4.NE.'DISK') GO TO 50
       IFIL=IFIL+1
       IFILOU(ILU)=IFIL
       LF=LNBLNK(FNAMD)
       FNAMD=FNAMD(1:LF)
       ILF=0
       GO TO 999
C-----------------------------------------------------------------------
C Tape or cartridge : store the VSN name :
C
 50    IF (DEV4.EQ.'TAPE'.OR.DEV4.EQ.'CART') THEN
          ITAP=ITAP+1
          ITAPOU(ILU)=ITAP
         LN=LNBLNK(FULNM)
          IF (LN.GT.6) THEN
            VSNTAP(ILU)=FULNM(1:LN)
         ELSE
            VSNTAP(ILU)=FULNM(1:NTAPC)//'  '
         ENDIF
       ENDIF
C
 999   RETURN
       END
      SUBROUTINE BKPGSET
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Defines which Physics groups are active for the current year
C  J. Boucrot  11-Sep-1997
C  Called from BKPGVAL                          from BOOKLIB
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      DATA IYEAL,IYEAN / 1996 , 1998 /
C-----------------------------------------------------------------------
      CALL VZERO(IPGVAL,NGPHY)
      IF (ISYEAR.LT.1989.OR.ISYEAR.GT.2001) GO TO 999
C
C Verify that IGRLEP has been properly defined:
C
      IF (IBKINT.EQ.-1) GO TO 2
      IF (ISPERF.NE.0.OR.IGRLEP.GT.0) GO TO 10
 2    IGRLEP=2
      IF (ISYEAR.GE.IYEAN) IGRLEP=4
      IF (ISYEAR.LE.IYEAL) THEN
         IGRLEP=1
         GO TO 10
      ENDIF
      LL=LNBLNK(PHYKEY)
      IF (LL.NE.2) GO TO 10
      DO 5 IIK=1,NGROUF
         IF (PHYKEY(1:2).NE.KEYWPH(IIK)) GO TO 5
         IF (LEPSGR(3,IIK).EQ.1) IGRLEP=3
 5    CONTINUE
 10   CONTINUE
C Set PHYKEY to SELPHY if 1 group selected:
      IF (SELPHY.NE.' '.AND.IPHYGR.GT.0.AND.IGRLEP.NE.3) THEN
         PHYKEY=' '
         PHYKEY(1:2)=SELPHY
      ENDIF
C
C Fill the IPGVAL tags according to IGRLEP and LEPSGR :
C
      DO 200 II =1,NGROUF
 200  IPGVAL(II)=LEPSGR(IGRLEP,II)
C If LEP2 Groups selected, define PHYKEY :
         IF (IGRLEP.EQ.3.AND.IPHYGR.GT.0) THEN
            PHYKEY=' '
            PHYKEY=KEYGL2(IPHYGR)
         ENDIF
C
 999  RETURN
      END
      SUBROUTINE BKPGVAL
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Redefines Physics groups/tools and LEP energy tolerances
C  J. Boucrot 23-Mar-1997
C  Called from BKVERAL,BKSRUN,PUSHFOR              from BOOKLIB
C  Calls BKPGSET,BKTOLSET                          from BOOKLIB
C-----------------------------------------------------------------------
C Redefine which Physics Grops/Tools are really active for this run:
      CALL BKPGSET
C Redefine the LEP energy tolerances for the sorting by energies:
      CALL BKTOLSET
C
 999  RETURN
      END
      SUBROUTINE BKPHYG(IPHBM,IOK)
C-----------------------------------------------------------------------
CKEY TOOL/INTERNAL
C! Tests if a run can be accepted or not if complex choice done
C  Author J. Boucrot  08-Nov-1996
C Called from BKRUOK                             from BOOKLIB
C Calls  BKGROU,BKGTCK                           from BOOKLIB
C Input argument :
C    IPHBM = Run Quality Bitmap
C Output argument :
C    IOK  = 0 if run accepted
C         = 1 if run rejected
C-----------------------------------------------------------------------
      SAVE
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      PARAMETER ( NGROU = 15 )
      INTEGER IGROU(NGROU),IPRES(NGROU)
      CHARACTER LET2*2
C-----------------------------------------------------------------------
      IOK=0
C Quit immediately for MCarlo data :
      IF (IMCDAT.EQ.2) GO TO 999
C LEP 2 Physics Groups must be processed as complex choices:
      IF (IGRLEP.EQ.3.AND.NL2GRO.GT.0) GO TO 5
C
C One single Physics Groups requested:
C
      IF (IPHYGR.GT.0) THEN
         CALL BKGTCK(IPHBM,IPHYGR,IGOOD)
         IF (IGOOD.EQ.0) GO TO 900
         GO TO 999
      ENDIF
C-----------------------------------------------------------------------
C Combination of Physics Groups requested:
C
 5    IPHYK=LNBLNK(PHYKEY)
      IF (IPHYK.LE.0) GO TO 999
C Parse the keyword :
C First physics group :
      CALL VZERO(IGROU,NGROU)
      CALL VZERO(IPRES,NGROU)
      ITOT=1
      IPOIN=0
      CALL CLTOU(PHYKEY)
      IF (PHYKEY(1:5).EQ.'.NOT.') THEN
         LET2=PHYKEY(6:7)
         IPR=2
         IPOIN=8
      ELSE
         LET2=PHYKEY(1:2)
         IPR=1
         IPOIN=3
      ENDIF
      CALL BKGROU(LET2,IGR)
      IGROU(ITOT)=IGR
      IPRES(ITOT)=IPR
C Other physics groups :
 10   IF (IPOIN.GE.IPHYK) GO TO 500
      IMORE=0
      IF (PHYKEY(IPOIN:IPOIN+9).EQ.'.AND..NOT.') THEN
         IMORE=10
         IPR=2
         GO TO 100
      ENDIF
      IF (PHYKEY(IPOIN:IPOIN+4).EQ.'.AND.') THEN
         IMORE=5
         IPR=1
      ENDIF
      IF (PHYKEY(IPOIN:IPOIN+8).EQ.'.OR..NOT.') THEN
         IMORE=9
         IPR=0
         GO TO 100
      ENDIF
      IF (PHYKEY(IPOIN:IPOIN+3).EQ.'.OR.') THEN
         IMORE=4
         IPR=3
      ENDIF
 100  IF (IMORE.EQ.0) GO TO 500
      ITOT=ITOT+1
      IPOIN=IPOIN+IMORE
      LET2=PHYKEY(IPOIN:IPOIN+1)
      CALL BKGROU(LET2,IGR)
      IGROU(ITOT)=IGR
      IPRES(ITOT)=IPR
      IPOIN=IPOIN+2
      GO TO 10
C-----------------------------------------------------------------------
C Check the present run for the keywords asked :
 500  CONTINUE
      IF (ITOT.LE.0) GO TO 999
C try if there is a group selected by 'OR' :
      DO 600 IGG=1,ITOT
         IF (IPRES(IGG).EQ.0) GO TO 600
         CALL BKGTCK(IPHBM,IGROU(IGG),IGOOD)
         IF (IGOOD.GT.0.AND.IPRES(IGG).EQ.3) GO TO 999
 600  continue
C now groups which must be there or not be there :
      DO 700 IGG=1,ITOT
         IF (IPRES(IGG).EQ.0) GO TO 700
         CALL BKGTCK(IPHBM,IGROU(IGG),IGOOD)
         IF (IGOOD.GT.0.AND.IPRES(IGG).EQ.2) GO TO 900
         IF (IGOOD.LE.0.AND.IPRES(IGG).EQ.1) GO TO 900
 700  CONTINUE
      GO TO 999
C Run rejected :
 900  IOK=1
C
 999  RETURN
      END
        SUBROUTINE BKPHY11
C-----------------------------------------------------------------------
CKEY SCANBOOK X11
C Update Phygroup selection variables
C Author J.Boucrot 09-Jan-1997
C Called from BKVRX11,BKDVER                 from BOOKLIB
C Calls  BKGROU                              from BOOKLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-----------------------------------------------------------------------
        IF (IBKINT.NE.-1.OR.IMCDAT.NE.1) GO TO 999
C For real data, if selection done on Physics Groups, update the variabl
       IF (PHYKEY.NE.' ') THEN
          IPHYGR=0
          LPHY=LNBLNK(PHYKEY)
          IF (LPHY.EQ.2) THEN
             SELPHY=PHYKEY(1:2)
             CALL BKGROU(SELPHY,IPHYGR)
          ELSE
             SELPHY=' '
          ENDIF
       ENDIF
 999   RETURN
       END
      SUBROUTINE BKPKODI(PARTN,IPKO,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Gets the particle code if the particle name is given
C  J. Boucrot 28-Oct-1996
C  Called from user
C Input  arguments :
C PARTN = particle name   ( ALPHA convention )
C IPKO  = particle code # ( ALPHA convention )
C IER   = 1 if particle not found ; = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      CHARACTER*(*) PARTN
      CHARACTER*12  PART,CPK
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=1
      PART=PARTN(1:12)
      CALL CLTOU(PART)
      JBPLI=IW(NAMIND('BPLI'))
      IF (JBPLI.EQ.0) GO TO 999
      ICODE=0
C Loop on all particles  names of bank 'BPLI' :
      DO 100 IBPLI=1,LROWS(JBPLI)
         KBPLI=KROW(JBPLI,IBPLI)
         CALL ALSTIN(IW(KBPLI+JBPLPN),3,CPK)
         CALL CLTOU(CPK)
         IF (INDEX(CPK,PART).EQ.0) GO TO 100
         ICODE=IW(KBPLI+JBPLPC)
         GO TO 200
 100  CONTINUE
 200  IF (ICODE.EQ.0) GO TO 999
      IER=0
      IPKO=ICODE
 999  RETURN
      END
      SUBROUTINE BKPOIN(LUN,NAME,NR,JPOIN)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Gets the pointer to bank NAME,NR for Bookkeeping jobs
C  Banks MUST be in memory !
C J. Boucrot  01-06-1989   Modified 17-Feb-1992
C Called from USER
C   Maintained only for backward-compatibility of the code !
C Input arguments :
C  LUN  = logical unit ( COMPLETELY USELESS NOW ! )
C  NAME = bank name
C  NR   = bank #
C  Output argument :
C   JPOIN = pointer to bank NAME,NR in memory , if  >0
C         = 0 if the bank cannot be found
C-----------------------------------------------------------------------
       CHARACTER NAME*4
C-----------------------------------------------------------------------
       JPOIN=NLINK(NAME,NR)
C
 999   RETURN
       END
      SUBROUTINE BKPRES(NPER,IBK)
C ----------------------------------------------------------------------
CKEY UPDABOOK  CLEANUP
C! Compress bookkeeping banks from all discarded data sets
C  J. Boucrot 30 - Apr - 1990
C  Modified 18-Oct-1994 to use 'BPCL' to gain space in BCS array
C Called by BKCLEA                     from BOOKLIB
C Calls NDROP,BGARB                    from BOS77
C Calls AUBOS                          from ALEPHLIB
C Calls BKPOIN                         from BOOKLIB
C Input banks : BSET,BTPN,BPRO,BSPF,BRLI     NR=NPER
C Input  :  NPER = period number
C Output :  IBK  = 0  all OK
C           IBK  = 1  no room to book the internal work banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( NSETS = 10000 )
      INTEGER LISBT(NSETS),LISBP(NSETS)
      INTEGER LISBS(NSETS),LISR1(2*NSETS),LISR2(2*NSETS)
      EXTERNAL NLINK
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C Initialisations :
      IBK=1
      CALL VZERO(LISBT,NSETS)
      CALL VZERO(LISBP,NSETS)
      CALL VZERO(LISBS,NSETS)
      CALL VZERO(LISR1,2*NSETS)
      CALL VZERO(LISR2,2*NSETS)
      LBSET=0
      LBTAP=0
      LBPRO=0
      LBSPF=0
      LBRLI=0
C
C Book intermediate banks : they are simply used as temporary buffers
C to copy the lines of the input banks , which have to be kept
C
C 'BSET' and 'BSWK' :
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 999
      LBSET=LROWS(JBSET)
      IF (LBSET.EQ.0) GO TO 999
      IF (LBSET.GT.NSETS) THEN
         WRITE ( LWRDBG,1110) LBSET,NSETS
         GO TO 999
      ENDIF
      CALL AUBOS('BSWK',NPER,LMHLEN+LBSET*LCOLS(JBSET),JWBSET,IGARB)
      IF (IGARB.EQ.2.OR.JWBSET.EQ.0) GO TO 999
      IW(JWBSET+1)=LCOLS(JBSET)
C 'BTPN' and 'BTWK' :
 5    CALL BKPOIN(LECDAF,'BTPN',NPER,JBTAP)
      IF (JBTAP.LT.0) GO TO 999
      IF (JBTAP.GT.0) LBTAP=LROWS(JBTAP)
      IF (LBTAP.EQ.0) GO TO 15
      CALL AUBOS('BTWK',NPER,LMHLEN+LBTAP*LCOLS(JBTAP),JWBTAP,IGARB)
      IF (IGARB.EQ.2.OR.JWBTAP.EQ.0) GO TO 999
      IW(JWBTAP+1)=LCOLS(JBTAP)
C 'BPRO' and 'BPWK' :
 15   CALL BKPOIN(LECDAF,'BPRO',NPER,JBPRO)
      IF (JBPRO.LT.0) GO TO 999
      IF (JBPRO.GT.0) LBPRO=LROWS(JBPRO)
      IF (LBPRO.EQ.0) GO TO 25
      CALL AUBOS('BPWK',NPER,LMHLEN+LBPRO*LCOLS(JBPRO),JWBPRO,IGARB)
      IF (IGARB.EQ.2.OR.JWBPRO.EQ.0) GO TO 999
      IW(JWBPRO+1)=LCOLS(JBPRO)
C 'BSPF' and 'BSPW' :
 25   CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
      IF (JBSPF.LT.0) GO TO 999
      IF (JBSPF.GT.0) LBSPF=LROWS(JBSPF)
      IF (LBSPF.EQ.0) GO TO 35
      CALL AUBOS('BSPW',NPER,LMHLEN+LBSPF*LCOLS(JBSPF),JWBSPF,IGARB)
      IF (IGARB.EQ.2.OR.JWBSPF.EQ.0) GO TO 999
      IW(JWBSPF+1)=LCOLS(JBSPF)
      INSIN=IW(JWBSPF-2)
C 'BRLI' and 'BRWK' :
 35   CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
      IF (JBRLI.LT.0) GO TO 999
      IF (JBRLI.GT.0) LBRLI=LROWS(JBRLI)
      IF (LBRLI.EQ.0) GO TO 45
      CALL AUBOS('BRWK',NPER,LMHLEN+LBRLI*LCOLS(JBRLI),JWBRLI,IGARB)
      IF (IGARB.EQ.2.OR.JWBRLI.EQ.0) GO TO 999
      IW(JWBRLI+1)=LCOLS(JBRLI)
      INBIN=IW(JWBRLI-2)
 45   CONTINUE
C Book the bank 'BSRW' which gives the correspondance old BSET row -> ne
C  ( 'BSRW' is a temporary , non-tabular bank , to be used in BKBDFS )
      CALL AUBOS('BSRW',NPER,LBSET,JBSRW,IGARB)
      IF (IGARB.EQ.2.OR.JBSRW.EQ.0) GO TO 999
C Initialize the counters for the new row # in intermediate banks :
      ICBSE=0
      ICBTA=0
      ICBPR=0
      ICBSP=0
      ICBR1=0
      ICBR2=0
C ----------------------------------------------------------------------
C Loop on all old BSET rows :
C
      DO 200 IROW=1,LBSET
         KBSET=KROW(JBSET,IROW)
C Is this line marked as "to be discarded" ?   If yes , skip it
         IF (IW(KBSET+JBSEDF).NE.0) GO TO 150
C The line must be kept . Update the row # in the new banks :
         ICBSE=ICBSE+1
         IOLBT=IW(KBSET+JBSEBT)
         IOLBP=IW(KBSET+JBSEBP)
         IOLBS=IW(KBSET+JBSEBS)
         IOLBA=IW(KBSET+JBSEBA)
         IOLBR=IW(KBSET+JBSEBR)
         IW(JBSRW+IROW)=ICBSE
C BSET :  copy old line into new in intermediate bank JWBSET
         KBSNW=KROW(JWBSET,ICBSE)
         CALL UCOPY(IW(KBSET+1),IW(KBSNW+1),LBSETA)
         IW(JWBSET+2)=MAX0(ICBSE,IW(JWBSET+2))
C BTAP : update pointer in JWBSET , copy old line in JWBTAP
         IF (IOLBT.NE.0.AND.LBTAP.GT.0) THEN
            IF (LISBT(IOLBT).EQ.0) THEN
               ICBTA=ICBTA+1
               IF (ICBTA.GT.NSETS) GO TO 920
               LISBT(IOLBT)=ICBTA
            ENDIF
            ICBT=LISBT(IOLBT)
C
            IW(KBSNW+JBSEBT)=ICBT
            KBTOL=KROW(JBTAP,IOLBT)
            KBTNW=KROW(JWBTAP,ICBT)
            CALL UCOPY(IW(KBTOL+1),IW(KBTNW+1),LBTPNA)
            IW(JWBTAP+2)=MAX0(ICBT,IW(JWBTAP+2))
         ENDIF
C BPRO : update pointer in JWBSET , copy old line in JWBPRO
         IF (IOLBP.NE.0.AND.LBPRO.GT.0) THEN
            IF (LISBP(IOLBP).EQ.0) THEN
               ICBPR=ICBPR+1
               IF (ICBPR.GT.NSETS) GO TO 920
               LISBP(IOLBP)=ICBPR
            ENDIF
            ICBP=LISBP(IOLBP)
            IW(KBSNW+JBSEBP)=ICBP
            KBPOL=KROW(JBPRO,IOLBP)
            KBPNW=KROW(JWBPRO,ICBP)
            CALL UCOPY(IW(KBPOL+1),IW(KBPNW+1),LBPROA)
            IW(JWBPRO+2)=MAX0(ICBP,IW(JWBPRO+2))
         ENDIF
C BSPF : update pointer in JWBSET , copy old line in JWBSPF
         IF (IOLBS.NE.0.AND.LBSPF.GT.0) THEN
            IF (LISBS(IOLBS).EQ.0) THEN
               ICBSP=ICBSP+1
               IF (ICBSP.GT.NSETS) GO TO 920
               LISBS(IOLBS)=ICBSP
            ENDIF
            ICBS=LISBS(IOLBS)
            IW(KBSNW+JBSEBS)=ICBS
            KBSOL=KROW(JBSPF,IOLBS)
            KBSPW=KROW(JWBSPF,ICBS)
            CALL UCOPY(IW(KBSOL+1),IW(KBSPW+1),LBSPFA)
            IW(JWBSPF+2)=MAX0(ICBS,IW(JWBSPF+2))
         ENDIF
          INBSP=IW(JWBSPF-2)
C
C BRLI : update the 2 pointers in JWBSET ; copy the old lines
C        in the intermediate bank JWBRLI
C
         IF (IOLBA.NE.0.AND.LBRLI.GT.0) THEN
            IF (LISR1(IOLBA).EQ.0) THEN
               ICBR1=ICBR2+1
               ICBR2=ICBR1+IOLBR-IOLBA
                IF (ICBR2.GT.2*NSETS) GO TO 920
               LISR1(IOLBA)=ICBR1
               LISR2(IOLBR)=ICBR2
            ENDIF
            ICB1=LISR1(IOLBA)
            ICB2=LISR2(IOLBR)
            IW(KBSNW+JBSEBA)=ICB1
            IW(KBSNW+JBSEBR)=ICB2
            NLIN=IOLBR-IOLBA+1
            DO 120 ILIN=1,NLIN
               KBROL=KROW(JBRLI,IOLBA+ILIN-1)
               KBRNW=KROW(JWBRLI,ICB1+ILIN-1)
               CALL UCOPY(IW(KBROL+1),IW(KBRNW+1),LBRLIA)
 120        CONTINUE
            IW(JWBRLI+2)=MAX0(ICB2,IW(JWBRLI+2))
         ENDIF
C
 150     CONTINUE
C
 200  CONTINUE
      IF ( ICBSE.EQ.0) GO TO 800
C ----------------------------------------------------------------------
C Check if all pointers of new banks are OK :
      LWSET=LROWS(JWBSET)
      LWTAP=LROWS(JWBTAP)
      LWPRO=LROWS(JWBPRO)
      LWSPF=LROWS(JWBSPF)
      LWRLI=LROWS(JWBRLI)
      DO 400 IT=1,LWSET
      KKSNW=KROW(JWBSET,IT)
      IPTAP=IW(KKSNW+JBSEBT)
      IPPRO=IW(KKSNW+JBSEBP)
      IPSPF=IW(KKSNW+JBSEBS)
      IPBR1=IW(KKSNW+JBSEBA)
      IPBR2=IW(KKSNW+JBSEBR)
      IF (IPTAP.GT.LWTAP.OR.IPPRO.GT.LWPRO) GO TO 355
      IF (IPSPF.GT.LWSPF.OR.IPBR1.GT.LWRLI) GO TO 355
      IF (IPBR2.GT.LWRLI) GO TO 355
      GO TO 400
355   IF (IBAUTO.EQ.0) PRINT 1101,LWTAP,IPTAP,LWPRO,IPPRO,LWSPF,IPSPF,
     +           LWRLI,IPBR1,IPBR2
      WRITE (LWRDBG,1101) LWTAP,IPTAP,LWPRO,IPPRO,LWSPF,IPSPF,
     +           LWRLI,IPBR1,IPBR2
      GO TO 999
C
 400  CONTINUE
C ----------------------------------------------------------------------
C Now copy the new temporary banks into the old ones ;
C then drop the temporary banks to save space in /BCS/ :
C
 500  CONTINUE
C  'BSET' and 'BSWK' :
      IF (LWSET.GT.LBSET)  THEN
         WRITE (LWRDBG,1103) LWSET,LBSET
         IF (IBAUTO.EQ.0) PRINT 1103,LWSET,LBSET
         GO TO 999
      ENDIF
      LBSCO=LMHLEN+LWSET*LCOLS(JBSET)
      CALL UCOPY(IW(JWBSET+1),IW(JBSET+1),LBSCO)
      INS=NDROP('BSWK',NPER)
C  'BTPN' and 'BTWK' :
      IF (LWTAP.GT.LBTAP)  THEN
         WRITE (LWRDBG,1104) LWTAP,LBTAP
         IF (IBAUTO.EQ.0) PRINT 1104,LWTAP,LBTAP
         GO TO 999
      ENDIF
      LBTCO=LMHLEN+LWTAP*LCOLS(JBTAP)
      CALL UCOPY(IW(JWBTAP+1),IW(JBTAP+1),LBTCO)
      INT=NDROP('BTWK',NPER)
C  'BPRO' and 'BPWK' :
      IF (LWPRO.GT.LBPRO)  THEN
         WRITE (LWRDBG,1105) LWPRO,LBPRO
         IF (IBAUTO.EQ.0) PRINT 1105,LWPRO,LBPRO
         GO TO 999
      ENDIF
      LBPCO=LMHLEN+LWPRO*LCOLS(JBPRO)
      CALL UCOPY(IW(JWBPRO+1),IW(JBPRO+1),LBPCO)
      INP=NDROP('BPWK',NPER)
C  'BSPF' and 'BSPW' :
      IF (LWSPF.GT.LBSPF)  THEN
         WRITE (LWRDBG,1106) LWSPF,LBSPF
         IF (IBAUTO.EQ.0) PRINT 1106,LWSPF,LBSPF
         GO TO 999
      ENDIF
      LBSCO=LMHLEN+LWSPF*LCOLS(JBSPF)
      CALL UCOPY(IW(JWBSPF+1),IW(JBSPF+1),LBSCO)
      INS=NDROP('BSPW',NPER)
C  'BRLI' and 'BRWK' :
      IF (LWRLI.GT.LBRLI)  THEN
         WRITE (LWRDBG,1107) LWRLI,LBRLI
         IF (IBAUTO.EQ.0) PRINT 1107,LWRLI,LBRLI
      ENDIF
      LBRCO=LMHLEN+LWRLI*LCOLS(JBRLI)
      CALL UCOPY(IW(JWBRLI+1),IW(JBRLI+1),LBRCO)
      INR=NDROP('BRWK',NPER)
      CALL BGARB(IW)
C ----------------------------------------------------------------------
 800  IBK=0
      GO TO 999
C
 920  IF (IBAUTO.EQ.0) PRINT 1100
      WRITE ( LWRDBG,1100 )
C
 999  RETURN
C ----------------------------------------------------------------------
 1100 FORMAT (/' === TOO MANY DATASETS - ABORT !!')
 1101 FORMAT (//' === BKPRES Pointers destroyed !!!'/2X,' BTAP =',2I12,
     +        ' BPRO = ',2I12 ,/2X,' BSPF =',2I12,' BRLI =',3I12//)
 1103 FORMAT (/8X,' === BKPRES error on BSET bank : LWSET,LBSET =',2I8)
 1104 FORMAT (/8X,' === BKPRES error on BTPN bank : LWTAP,LBTAP =',2I8)
 1105 FORMAT (/8X,' === BKPRES error on BPRO bank : LWPRO,LBPRO =',2I8)
 1106 FORMAT (/8X,' === BKPRES error on BSPF bank : LWSPF,LBSPF =',2I8)
 1107 FORMAT (/8X,' === BKPRES error on BRLI bank : LWRLI,LBRLI =',2I8)
 1110 FORMAT (/8X,' === BKPRES ERROR NBSET,LSETS =',2I9)
       END
      SUBROUTINE BKPRJX11
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Printout of JULIA versions/Processings for Real data
C J. Boucrot  13-11-1996
C Called from X11
C Calls DISJULVR,DISPROCC                          from  BOOKLIB
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
      LU=LWRUSR
      IF (IBKINT.NE.-1.OR.IDSEAR.EQ.2) GO TO 999
C Selection on JULIA Version # :
      IF (IJULSL.GT.0) THEN
         CALL DISJULVR(LU)
      ENDIF
C Selection on Processings :
      IF  (IPROSL.NE.0) THEN
         CALL DISPROCC(LU)
      ENDIF
C
 999  RETURN
      END
      SUBROUTINE BKPRLI(IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads the PROCESS LISTE file updating the Julia Processings
C  J. Boucrot       11-Jun-1991
C  Modified 30-Sep-1992 to make provision for 2 extra words/row
C  Modified 10-Nov-1994 to read MINI/NANO current version #
C UNIX Version 06-Oct-1995
C Called from BKUPDF                            from BOOKLIB
C Calls AUBOS,AUBPRS                            from ALEPHLIB
C Calls BKMESG,BKCARI,BKFILB                    from BOOKLIB
C Calls BDROP                                   from BOS77
C     Fill  the 'BLPR' bank describing the JULIA processings
C  Output argument IER = 1 if no room to book banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      INTEGER ITAB(MAXIN)
      CHARACTER INFO*100,LTXT*2,MESG*80,DANAT*4,MVM*80
      CHARACTER NAMPR*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IER=0
      IREC=0
      IMOD=0
      IF (IBUPDA.GE.2) GO TO 999
C
C Open the PROCESS LISTE file on Fortran unit LECPRO :
C
      NAMPR=' '
      NAMPR=ALS_REFR(1:ILREFR)//'process.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      OPEN ( LECPRO , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C Read one record and check for keywords :
 1    READ ( LECPRO , '(A100)' , END = 800 , ERR = 900 ) INFO
      IREC=IREC+1
C MINI and NANO last version numbers :
      IF (IREC.EQ.1) THEN
         READ (INFO,1000) MINLAS,NANLAS
         WRITE ( LWRDBG,1002) MINLAS,NANLAS
         JBLAS=IW(NAMIND('BLAS'))
         IF (JBLAS.GT.0) THEN
            KBLAS=KROW(JBLAS,1)
            IW(KBLAS+JBLAMI)=MINLAS
            IW(KBLAS+JBLANA)=NANLAS
         ENDIF
      ENDIF
      IF (IREC.LE.5) GO TO 1
      IF (LNBLNK(INFO).EQ.0) GO TO 1
      CALL VZERO(ITAB,MAXIN)
      READ ( INFO , 1001 )  DANAT,(ITAB(KK),KK=JBLPFR,LBLPRA)
C find which nature of data :
      DO 20 IS=1,NNDAT
         IF (DANAT.NE.DNADAT(IS)) GO TO 20
         ITAB(1)=IS
         GO TO 22
 20   CONTINUE
 22   IF (ITAB(1).LE.0) GO TO 1
      IMOD=IMOD+1
      IF (IMOD.EQ.1) CALL BDROP(IW,'BLPR')
      CALL BKFILB('BLPR',1,ITAB,LBLPRA,NOUT,IER)
      IF (IER.GE.2) GO TO 910
      GO TO 1
C
 800  CALL AUBPRS('BLPR')
      GO TO 999
C ----------------------------------------------------------------------
C Process error :
 900  MESG=' +++ Error in BKPRLI : syntax error in file'
      CALL BKMESG(INFO,IREC,MESG)
      GO TO 999
 910  IER=1
C
 999  RETURN
 1000 FORMAT (10X,I3,10X,I4)
 1001 FORMAT (3X,A4,6X,I6,3(4X,I6),2(10X,I3),10X,I6)
 1002 FORMAT (/15X,' ++ BKPRLI MINI - NANO versions =',2I4)
      END
      SUBROUTINE BKPRLV(DANAT,NRUN,ILVIN,IDTIN,ILVOU,IFDOU,ILDOU,IER)
C ----------------------------------------------------------------------
CKEY SCANBOOK/TOOL/INTERNAL
C! Deals with processing levels from bank 'BLPR'
C  Meaningful only for REAL DATA
C  J. Boucrot   2-Jul-1990
C  Completely rewritten for Tracking Quality - 8 Dec 1992 , J. Boucrot
C  Called from BKCHKD,BKBRK7,BKMBYT,BKVEHO,PRSRUN         from BOOKLIB
C Input arguments :
C   DANAT = nature of data wanted : 'RAW' , 'POT' , 'DST' etc ..
C   NRUN  = Run number
C   ILVIN = Processing level required
C           if = 0 : the last processing level will be considered
C           if = 1 : the previous level will be considered
C           if = 100 : special TEST reprocessing
C           if = 1000 : COMPLETE set of processings
C   IDTIN = Date of processing ; = 0 if not known
C Output arguments :
C   ILVOU = Level of processing found  ( = 0 if not found )
C   IFDOU = First date of processing for this level of processing
C   ILDOU = Last  date of processing for this level of processing
C   IER   = 0 if all OK ;  = 1 if nothing found
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER*(*) DANAT
      CHARACTER*1 DKEY
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
C
      IER=1
      INADA=0
      ILVOU=0
      IFDOU=0
      ILDOU=0
      ITKOU=0
      DKEY=DANAT(1:1)
C Check input :
      IF (DKEY.EQ.' ') GO TO 999
      IF (NRUN.LT.NRUMIN) GO TO 999
      DO 10 I=1,NNDAT
         IF (DNADAT(I)(1:1).EQ.DKEY) THEN
            INADA=I
            GO TO 20
         ENDIF
 10   CONTINUE
 20   IF (INADA.EQ.0) GO TO 999
C
C Get the ALEBOOK database bank 'BLPR' :
C
      JBLPR=IW(NAMIND('BLPR'))
      IF (JBLPR.EQ.0) GO TO 999
      NLPR=LROWS(JBLPR)
C
C Loop on all rows of 'BLPR' to determine the levels
C of processing for these data :
C
      MAXLV=0
      ILAV=0
      IROW=0
      IROWK=0
      DO 50 ILPR=1,NLPR
         KBLPR=KROW(JBLPR,ILPR)
C Check nature of data , run number :
         IF (IW(KBLPR+JBLPNT).NE.INADA) GO TO 50
         IF (NRUN.LT.IW(KBLPR+JBLPFR))  GO TO 50
         IF (NRUN.GT.IW(KBLPR+JBLPLR))  GO TO 50
         ILAV=IW(KBLPR+JBLPRL)
         IF (ILVIN.EQ.100.AND.ILAV.NE.100) GO TO 50
         IF (ILVIN.EQ.100.AND.ILAV.EQ.100) THEN
            IROW=ILPR
            MAXLV=1
            GO TO 51
         ENDIF
         IF (ILVIN.LT.100.AND.ILAV.EQ.100) GO TO 50
         MAXLV=MAXLV+1
         IROW=ILPR
 50   CONTINUE
 51   IF (IROW.EQ.0) GO TO 999
C ----------------------------------------------------------------------
C Now check if there is any valid result for option ILVIN :
C
C LAST processing :
      IF (ILVIN.EQ.0) THEN
          IF (MAXLV.EQ.0) GO TO 999
          IROWK=IROW
      ENDIF
C PREVIOUS processing :
      IF (ILVIN.EQ.1) THEN
          IF (MAXLV.LT.2) GO TO 999
          IROWK=IROW-1
      ENDIF
C TEST Reprocessing :
      IF (ILVIN.EQ.100) THEN
          IF (IROW.EQ.0)  GO TO 999
          IROWK=IROW
      ENDIF
C COMPLETE Processing :
      IF (ILVIN.EQ.1000) THEN
          IF (MAXLV.EQ.0)  GO TO 999
          IROWK=IROW
      ENDIF
C ----------------------------------------------------------------------
C Now fill the output arguments and perform tests on date/tracking :
C
      IF (IROWK.EQ.0) GO TO 999
      KBLPR=KROW(JBLPR,IROWK)
      IFDOU=IW(KBLPR+JBLPFD)
      ILDOU=IW(KBLPR+JBLPLD)
      ILVOU=IW(KBLPR+JBLPRL)
      ITKOU=IW(KBLPR+JBLPTQ)
C If date given in input , check it wrt the database dates :
      IF (IDTIN.GT.0) THEN
         IF (IDTIN.LT.IFDOU) GO TO 999
         IF (IDTIN.GT.ILDOU) GO TO 999
      ENDIF
C Selection on tracking quality , if required :
C
C IBTQSE = -2,-1,0 :  ITKOU must be 2,1,0  respectively
C IBTQSE = 1       :  ITKOU must be 0 or 1 , not 2
C IBTQSE = 2       :  means no selection on tracking
C
      IF (IDSEAR.GT.0.AND.ILVIN.EQ.0.AND.IBTQSE.NE.2) THEN
         IF (IBTQSE.LE.0.AND.ITKOU.NE.IABS(IBTQSE)) GO TO 999
         IF (IBTQSE.EQ.1.AND.ITKOU.GT.IBTQSE)       GO TO 999
      ENDIF
C ALL OK :
      IER=0
C
 999  RETURN
      END
      SUBROUTINE BKPRLX11
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH X11
C! Gets selected processing level from X11 displayd
C  J. Boucrot 19-Mar-1997
C Called from pushfor                           from BOOKLIB
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- DATX11 ----
      PARAMETER ( NDX11 = 50 )
      CHARACTER*80 XDATX11
      COMMON / IDATX11 /  NDATX11,NPROCL,LPROCL(4)
      COMMON / CDATX11 /  XDATX11(NDX11)
      CHARACTER*4 PROCS(4)
      CHARACTER*80 DATIN
      INTEGER IPRLV(4)
      DATA PROCS /'TEST', 'LAST', 'PREV' , 'OLD ' /
      DATA IPRLV /  100 ,    1  ,    2   ,   0    /
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) GO TO 999
      DATIN=' '
      DATIN=XDATX11(1)
      CALL CLTOU(DATIN)
C
C Loop on all POSSIBLE processing levels ( max = 4 ) :
C
      DO 100 IK=1,4
         IF (INDEX(DATIN,PROCS(IK)).EQ.0) GO TO 100
         LASTPR=IPRLV(IK)
         GO TO 110
 100  CONTINUE
C Get MINI version, if needed:
 110  IF (IDASEL.NE.5) GO TO 999
      READ (DATIN(53:55) , *)  IMINPR
 999  NDATX11=0
      RETURN
      END
      SUBROUTINE BKPTMS(VSNIN,IOPT,TXTIN,IOUT)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEERING
C!  PUTS  new informations into the TMS database
C  Author J. Boucrot   21-Jan-1991
C Called from user
C Calls  SYSREQ                                       from CERNLIB
C Input arguments :
C  VSNIN = Cartridge VSN (6 characters )
C   IOPT = Operation requested by the user :
C        = 1  Put TXTIN as new BINARY Tag containing INST (CH*4) + Blank
C                       Aleph Dataset Name  (CH*20)
C        = 2  Put TXTIN as new TEXT Tag  ( New Comment )
C        = 3  Put TXTIN as new OWNER
C        = 4  Protect VSNIN against any further WRITE by anybody
C        = 5  Enable  VSNIN for further WRITE
C        = 6  Set protection on Access Control Group for written cartrid
C        = 7  Set protection on Access Control Group for free    cartrid
C        = 8  Tell TMS that VSNIN has an AL (ASCII) label - for RAW tape
C        = 9  Scratch VSNIN from the TMS database
C        = 10 Change location of 'AA' raw tapes to AA_VAULT
C
C  TXTIN = input character string ( must be dimensioned correctly in the
C          calling routine )
C  Output argument :
C  IOUT = 0 if operation done by TMS
C  IOUT = 1 if a problem occured in TMS execution
C  IOUT = 2 if TMS unavailable
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      SAVE
      CHARACTER VSN*6,TMSVR*8,COMAND*80,OLDOW*8,NEWOW*8,QUOT*1
      CHARACTER*(*) TXTIN,VSNIN
      CHARACTER*7 OPTIO(2)
      PARAMETER ( IBUF = 2 )
      CHARACTER*132 TMSREP(IBUF)
      DATA TMSVR  / 'tms     ' /
      DATA OPTIO  / 'BINARY ' , 'TEXT   ' /
      DATA HQUOT / 1H' /
C-----------------------------------------------------------------------
      IOUT=1
      IF (IOPT.LT.1.OR.IOPT.GT.15) GO TO 999
      IOUT=0
      CALL BKCHKT(VSNIN,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0) GO TO 999
      VSN=VSNIN(1:6)
      COMAND=' '
      DO 10 IP=1,IBUF
 10   TMSREP(IP)=' '
      ISYS=IBUF
C
C User request is Option 1 ( Put TXTIN as New BINARY Tag)
C              or Option 2 ( Put TXTIN as New TEXT   Tag)
C
      IF (IOPT.GT.2) GO TO 300
      IF (IOPT.EQ.1.AND.TXTIN.EQ.' ') GO TO 999
      IF (IOPT.EQ.1.AND.ICERN.NE.0) TXTIN(1:4)='CERN'
      IF (TXTIN.NE.' ') THEN
         COMAND='TAG VID '//VSN//' SET '//OPTIO(IOPT)//
     +          TXTIN(1:LNBLNK(TXTIN))
      ELSE
         CALL UH1TOC(HQUOT,QUOT,1)
         COMAND='TAG VID '//VSN//' SET '//OPTIO(IOPT)//
     +          QUOT//' '//QUOT
      ENDIF
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      GO TO 999
C
C User request is Option 3 ( Put TXTIN as New OWNER)
C
 300  IF (IOPT.GT.3) GO TO 400
      NEWOW=TXTIN(1:8)
      IF (NEWOW.EQ.' ' ) GO TO 999
      CALL BKGTMS(VSNIN,5,IFOUN,OLDOW)
      IF (IFOUN.LE.0) THEN
         IOUT=1
         IF (IFOUN.EQ.-1) IOUT=2
         GO TO 999
      ENDIF
      IF (OLDOW.EQ.NEWOW) GO TO 999
      CALL CLTOU(NEWOW)
      COMAND='TRANSFER VID '//VSN//' TO USER '//NEWOW
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      GO TO 999
C
C User request is Option 4 ( Disable WRITE on VSNIN )
C
 400  IF (IOPT.GT.4) GO TO 500
      IF (IMULT.NE.0) GO TO 999
      COMAND='LOCK DISABLE WRITE VID '//VSNIN
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.GT.2) THEN
         IOUT=1
         IF (IRC.EQ.3) IOUT=2
         IF (IRC.GT.2) ITMKOD=IRC
         GO TO 999
      ENDIF
      GO TO 999
C
C User request is Option 5 ( Enable VSNIN for WRITE ) :
C
 500  IF (IOPT.GT.5) GO TO 600
      COMAND='LOCK ENABLE  WRITE VID '//VSNIN
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      GO TO 999
C
C User request is Option 6 ( Set prot. on Access Control Group for WRITT
C
 600  IF (IOPT.GT.6) GO TO 700
      COMAND='PROTECT XU_DATA ACCOUNT XU APPLY SET '//VSNIN
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      GO TO 999
C
C User request is Option 7 ( Set prot. on Access Control Group for FREE
C
 700  IF (IOPT.GT.7) GO TO 800
      IF (VSN(1:2).EQ.'AA'.OR.VSN(1:2).EQ.'AB'.OR.VSN(1:2).EQ.'AM') THEN
         COMAND='PROTECT XU_DATA ACCOUNT XU APPLY SET '//VSNIN
      ELSE
         COMAND='PROTECT XU_USER ACCOUNT XU APPLY SET '//VSNIN
      ENDIF
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      GO TO 999
C
C User request is Option 8 ( Set LABEL = AL for RAW tapes in VAX NATIV )
C
 800  IF (IOPT.GT.8) GO TO 900
      COMAND='UPDATE VID '//VSNIN//' SET LABEL AL'
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      GO TO 999
C
C User request is Option 9 ( SCRATCH VSNIN from the TMS database )
C
 900  IF (IOPT.GT.9) GO TO 950
      COMAND='REMOVE VID '//VSNIN//' DELETE'
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
C Normal return code for this command is 185 , not 0 !!!
      IF (IRC.EQ.3) IOUT=2
C one has now to issue the ACTION TAKE and ACTION COMPLETE commands :
      GO TO 960
C
C User request is Option 10 ( Change location of 'AA' tapes )
C
 950  IF (IOPT.GT.10) GO TO 999
      COMAND='MOVE VID '//VSNIN//' TO AA_VAULT'
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      IF (IRC.NE.0) GO TO 999
 960  ISYS=IBUF
      COMAND='ACTION TAKE MOVE VID '//VSNIN
      LC=LNBLNK(COMAND)
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
      IF (IRC.NE.0) GO TO 999
      COMAND='ACTION COMPLETE MOVE VID '//VSNIN
      LC=LNBLNK(COMAND)
      ISYS=IBUF
      CALL sysreq(TMSVR,COMAND(1:LC),IRC,TMSREP,ISYS)
      WRITE ( LWRDBG,1001) COMAND(1:LC),IRC
      IF (IRC.NE.0) IOUT=1
      IF (IRC.EQ.3) IOUT=2
      IF (IRC.NE.0) ITMKOD=IRC
C
 999  RETURN
 1001 FORMAT (' ++ TMS Command = ',A80,' ++ TMS Retcode =',I8)
      END
      SUBROUTINE BKRANM(IBDFS,IRANM)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Gets Ranmar code for MC dataset sorting
C  Author J.Boucrot 04-Oct-1996
C Called from BKSTODAT                                  from BOOKLIB
C Input argument :
C  IBDFS = Row number of dataset in bank BDFS,NR=2
C Output argument :
C  IRANM = 31000*RANM1+RANM2
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
       PARAMETER ( LRANM = 31000 , IRMA = 100000 )
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IRANM=0
      IF (IMCDAT.NE.2) GO TO 999
      JBDFS=NLINK('BDFS',IMCDAT)
      IF (JBDFS.EQ.0) GO TO 999
      IF (IBDFS.LE.0.OR.IBDFS.GT.LROWS(JBDFS)) GO TO 999
      KBDFS=KROW(JBDFS,IBDFS)
      NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.EQ.0) GO TO 999
      IBSPF=ITABL(JBSET,NROW,JBSEBS)
      IF (IBSPF.EQ.0) GO TO 999
      JBSPF=NLINK('BSPF',NPER)
      IF (JBSPF.EQ.0) GO TO 999
      ISOUR=ITABL(JBSPF,IBSPF,JBSPFR)
      IF (ISOUR.GT.LRANM) ISOUR=LRANM
      IRANM=LRANM*ISOUR+MOD(ITABL(JBSPF,IBSPF,JBSPSR),IRMA)
      IF (IRANM.EQ.0) IRANM=ITABL(JBSET,NPER,JBSEWD)
C
 999  RETURN
      END
      SUBROUTINE BKRAWSTA(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Stores the statistics on RAW data runs in common /RAWSTAT/
C Called from BKBMCL                              from BOOKLIB
C  J. Boucrot 25-Sep-1997
C   Output argument :
C  IER = 1  if pb with banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
      PARAMETER (NYTOT = 20)
      COMMON / RAWSTAT / IFDYEA,NYEAOK,NRDYEA(NYTOT),IMBYEA(NYTOT)
      DATA MBYDF  / 120 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NYEAOK=0
      IFDYEA=1989
      CALL VZERO(NRDYEA,NYTOT)
      CALL VZERO(IMBYEA,NYTOT)
      JBPER=NLINK('BPER',1)
      IF (JBPER.LE.0) GO TO 900
C
C Implicit loop on all 'BRUC' banks :
C
      JBRUC=NAMIND('BRUC')+1
 10   JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 800
C Define year of data taking:
      NPER=IW(JBRUC-2)
      KBPER=KROW(JBPER,NPER)
      IYY=IW(KBPER+JBPEFD)/10000
      IF (IYY.GT.10) IYEA=1900+IYY
      IF (IYY.LE.10) IYEA=2000+IYY
      NYEA=IYEA-IFDYEA+1
      IF (NYEA.GT.NYTOT) GO TO 10
      NYEAOK=MAX0(NYEA,NYEAOK)
C Loop on the elements of this data taking period and store the results:
      DO 100 IBRUC=1,LROWS(JBRUC)
         KBRUC=KROW(JBRUC,IBRUC)
         NRDYEA(NYEA)=NRDYEA(NYEA)+1
         MBYRU=IW(KBRUC+JBRULD)/1000
C The information is missing for some 1990 runs:
         IF (MBYRU.LE.0.AND.IYEA.EQ.1990) MBYRU=MBYDF
C The information is crazy for some LEP1 runs:
         IF (MBYRU.GT.250.AND.IYEA.LT.1995) MBYRU=MBYDF
         IMBYEA(NYEA)=IMBYEA(NYEA)+MBYRU
 100  CONTINUE
      GO TO 10
C
 800  CONTINUE
      GO TO 999
C Problem with a bank:
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKRDCH(LUN,IOPT,STRNG)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Reads a character string from terminal , and check it
C  Check it for abnormal characters and convert it into UPPER case
C  J. Boucrot  05-Apr-1989
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C  Called from anywhere
C  Calls CLTOU                                          from GENLIB
C Input arguments :
C    LUN  =  FORTRAN logical unit on which the reading has to be done
C   IOPT  =  Option to perform checks on the character string just read
C         =  0  : NO check on special characters
C         =  1  : STRNG must contain letters and/or integers
C         =  2  : STRNG must contain only letters
C         =  3  : STRNG must contain only integers
C  Output argument :
C  STRNG  =  the string just read , if it is OK for the checks
C         =  ' ' if the string read is not OK
C-----------------------------------------------------------------------
      CHARACTER*(*) STRNG
      CHARACTER   CC*1,CSTR*132
      CSTR=' '
      READ ( LUN , '(A)' , END = 100 , ERR = 100 ) CSTR(1:130)
C ------- No translation to upper case on UNIX -------------------
      LL=LNBLNK(CSTR)
      IF (LL.EQ.0) GO TO 100
C
C Left justification
      DO 10 IK=1,LL
         IF (CSTR(IK:IK).NE.' ') THEN
           INB=IK
           GO TO 12
         ENDIF
 10   CONTINUE
 12   CONTINUE
      CSTR = CSTR(INB:LL)
C
      IF (IOPT.EQ.0.OR.CSTR(1:1).EQ.'Q'.OR.CSTR(1:1).EQ.'q') GO TO 20
      NNUM=0
C
      DO 15 I=1,LNBLNK(CSTR)
         CC=CSTR(I:I)
         IF (CC.EQ.' ') GO TO 16
C Check if integer :
         IF (ICHAR(CC).GE.ICHAR('0').AND.ICHAR(CC).LE.ICHAR('9')) THEN
            IF (IOPT.EQ.1) GO TO 15
            IF (IOPT.EQ.2) GO TO 100
            NNUM=NNUM+1
            GO TO 15
         ENDIF
C Check if letter :
         IF (
     +     (ICHAR(CC).LT.ICHAR('A') .OR. ICHAR(CC).GT.ICHAR('Z')) .AND.
     +     (ICHAR(CC).LT.ICHAR('a') .OR. ICHAR(CC).GT.ICHAR('z')))
     +     GOTO 100
 15   CONTINUE
 16   CONTINUE
C If IOPT = 3 , check number of integers :
C
      IF (IOPT.EQ.3.AND.NNUM.EQ.0) GO TO 100
C All OK :
 20   STRNG=CSTR(1:LNBLNK(CSTR))
      GO TO 999
C
C WRONG input with respect to the selected options , or EOF
C
 100  STRNG=' '
C
 999  RETURN
      END
      SUBROUTINE BKRDLFI(IBD,IRUN,NPOS)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Finds file of run IRUN in DLT RAW tape ( 1995 sq )
C  Author J.Boucrot 24-Oct-1996
C Called from PRFILISO                            from BOOKLIB
C Calls  PRBFIL                                   from BOOKLIB
C Calls  IUCOMP                                   from GENLIB
C  Input arguments :
C   IBD = position of tape in IBDSEL
C  IRUN = run number
C Output argument :
C  NPOS = position of file
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      NPOS=0
      JBDFS=NLINK('BDFS',IMCDAT)
      IF (JBDFS.LE.0) GO TO 999
      KBDFS=KROW(JBDFS,IBDSEL(IBD))
      NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.LE.0) GO TO 999
      KBSET=KROW(JBSET,NROW)
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      IF (IBRL1.LE.0.OR.IBRL2.LE.0) GO TO 999
      JBRLI=NLINK('BRLI',NPER)
      IF (JBRLI.LE.0) GO TO 999
      IFIL=0
      DO 500 IBRLI=IBRL1,IBRL2
         KBRLI=KROW(JBRLI,IBRLI)
         IFIL=IFIL+1
         IF (IW(KBRLI+JBRLRN).NE.IRUN) GO TO 500
         NPOS=IFIL
         GO TO 999
 500  CONTINUE
 999  RETURN
      END
      SUBROUTINE BKREAK(IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads the KINGENER file updating the KINGAL description banks
C  J. Boucrot  22-Feb-1990     modified  11-Jun-1991
C UNIX Version 06-Oct-1995
C Called from BKUPDF                            from  BOOKLIB
C Calls BKFILL,AUBPRS,BKBLAN                    from ALEPHLIB
C Calls BKMESG                                  from BOOKLIB
C     Fill  the 'BKLI' and BRAN banks describing the KINGAL library
C     and the attribution of RANMAR seeds
C  Output argument IER = 1 if no room to book banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( NCC = 100 )
      INTEGER ITAB(MAXIN)
      CHARACTER INFO*80,GENTO*8,MESG*80,GENCO*1,LET3*3,ZLABO*14
      CHARACTER*8  VARKL(MAXCH)
      CHARACTER*16 VARCH(MAXCH)
      CHARACTER LTXT*2,MVM*80
      CHARACTER NAMPR*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C ----------------------------------------------------------------------
      IER=0
      IREC=0
      IMOD=0
      IF (IBUPDA.GE.2) GO TO 999
C
C Open the KINGENER LISTE file on Fortran unit LECKIN :
C
      NAMPR=' '
      NAMPR=ALS_REFR(1:ILREFR)//'kingener.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      OPEN ( LECKIN , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C Read one record and check for keywords :
 1    READ (LECKIN , '(A80)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
      IF (IREC.EQ.1) GO TO 1
      IF (LNBLNK(INFO).EQ.0) GO TO 1
      LET3=INFO(1:3)
      IF (INDEX(INFO,'ALEPH NAME').NE.0) THEN
         IMOD=1
         CALL BDROP(IW,'BKLI')
         ILEN=LMHLEN+NCC*LBKLIA
         CALL AUBOS('BKLI',1,ILEN,JBKLI,IGARB)
         IF (IGARB.EQ.2) GO TO 910
         IW(JBKLI+LMHCOL)=LBKLIA
         IW(JBKLI+LMHROW)=0
         GO TO 1
      ENDIF
      IF (INDEX(INFO,'RANMAR').NE.0) THEN
         IMOD=2
         CALL BDROP(IW,'BRAN')
         ILEN=LMHLEN+NCC*LBRANA
         CALL AUBOS('BRAN',1,ILEN,JBRAN,IGARB)
         IF (IGARB.EQ.2) GO TO 910
         IW(JBRAN+LMHCOL)=LBRANA
         IW(JBRAN+LMHROW)=0
         GO TO 1
      ENDIF
C KINGAL generator names and codes :
      IF (IMOD.EQ.1) THEN
         IF (LET3.NE.' ') GO TO 1
         LET3=INFO(30:32)
         IF (LET3.EQ.' ') GO TO 1
         IF (INDEX(LET3,'$').NE.0) GO TO 1
         READ ( INFO,1001,ERR=900) GENTO,ICOD
         GENCO=GENTO(8:8)
         IF (GENCO.EQ.'X'.OR.GENCO.EQ.'R') GO TO 1
         CALL BKBLAN('BKLI',VARKL,ITAB)
         VARKL(1)(1:6)=GENTO(1:6)
         ITAB(JBKLKC)=ICOD
         CALL BKFILL('BKLI',1,VARKL,ITAB)
      ENDIF
C RANMAR Seeds allocation :
      IF (IMOD.EQ.2) THEN
         IF (LET3.NE.' ') GO TO 1
         LET3=INFO(30:32)
         IF (INDEX(LET3,'-').NE.0) GO TO 1
         CALL BKBLAN('BRAN',VARCH,ITAB)
         READ ( INFO,1002,ERR=900) ZLABO,ICOLA
         VARCH(1)(1:14)=ZLABO
         ITAB(JBRANI)=ICOLA
         CALL BKFILL('BRAN',1,VARCH,ITAB)
      ENDIF
      GO TO 1
C
 800  CALL AUBPRS('BKLIBRAN')
      CLOSE (LECKIN)
      GO TO 999
C ----------------------------------------------------------------------
C Process error :
 900  MESG=' +++ Error in BKREAK : syntax error in file'
      CALL BKMESG(INFO,IREC,MESG)
      GO TO 999
 910  IER=1
C
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (4X,A8,16X,I5)
 1002 FORMAT (12X,A14,4X,I2)
      END
      SUBROUTINE BKREDCOP(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Read and process BCOP files for Redwood copies
C  Author  J.Boucrot  26-Jan-1998
C Called from BKUPDA                       from BOOKLIB
C Calls BKREDCOT,BKISDL                    from BOOKLIB
C Calls BKINCA                             from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with input file;  = 0 otherwise
C----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      SAVE
      PARAMETER ( NCOPR = 100 )
      CHARACTER*6 COPYTODO,COPYDONE,COPYTP
      COMMON / REDCOPS / COPYTODO(NCOPR),COPYDONE(NCOPR),COPYTP(NCOPR)
      COMMON / IREDCOP / NCOPYOK,NTOCOPY,NFITODO(NCOPR)
      CHARACTER TOLD*6,TRED*6,TFIL*10,FILN*5,FNPR*60,TDL*8
      CHARACTER*80 LINE,INFO
      INTEGER BKINCA
C----------------------------------------------------------------------
      IER=0
      WRITE (LWRDBG,1000) ICURFI,NAMRQF(ICURFI)
C Read the line of the current file:
      REWIND (LECTXT)
      READ (LECTXT , '(A)' , ERR = 910) INFO
C Decode tape name and file number:
      IFI=ICFNBL(INFO,1,20)
      IF (IFI.EQ.0) GO TO 910
      TRED=INFO(IFI:IFI+5)
      TFIL=INFO(IFI+6:IFI+15)
      IFL=ICFNBL(TFIL,1,10)
      IF (IFL.EQ.0) GO TO 910
      FILN=TFIL(IFL:IFL+3)
      IFILE=BKINCA(FILN)
      WRITE (LWRDBG,1001) TRED,IFILE
C
C Is this tape known from SCANBOOK?
C Open the file containing the list of all known Redwoods:
C
      FNPR=' '
      FNPR=ALS_TEMP(1:ILTEMP)//'numfiles.cerntaps'
      FNPR=FNPR(1:LNBLNK(FNPR))
      OPEN ( LECPLI , FILE = FNPR , STATUS = 'OLD' , ERR = 910 )
C Read it until finding TRED:
      IFOLD=0
      IFOK=0
 10   READ ( LECPLI , '(A)' , END = 500 , ERR = 910 ) LINE
      IFOLD=IFOLD+1
      TOLD=LINE(3:8)
      IF (TOLD.NE.TRED) GO TO 10
      IFOK=IFOLD
      GO TO 500
 500  CONTINUE
C Is the tape to be copied known from SCANBOOK ?
      IF (IFOK.EQ.0) THEN
         TDL=TRED//'  '
         CALL BKISDL(TDL,2,IDLT)
         IF (IDLT.EQ.0.AND.NFIDLT.EQ.0) WRITE (LWRDBG,1010) TRED
      ENDIF
C Increment NTOCOPY and fill COPYTODO, NFITODO:
      NTOCOPY=NTOCOPY+1
      COPYTODO(NTOCOPY)=TRED
      NFITODO(NTOCOPY)=IFILE
C
C Prepare the TMS management of this tape:
C
      CALL BKREDCOT(TRED,IERT)
      IF (IERT.NE.0) GO TO 910
      GO TO 999
C Problem somewhere:
 910  IER=1
      WRITE (LWRDBG,1100)
C
 999  RETURN
C----------------------------------------------------------------------
 1000 FORMAT (/2X,'=== Subroutine BKREDCOP ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1001 FORMAT (/26X,'--> BKREDCOP === : Ready to duplicate tape ',
     +        2X,A6,2X,' # Files =',I4)
 1010 FORMAT (/5X,100(1H*),/10X,'****** BKREDCOP WARNING ! Tape ',
     +        'to be copied :',2X,A6,' NOT in SCANBOOK ! ******',
     +        /5X,100(1H*))
 1100 FORMAT (/5X,100(1H*),/10X,'****** ERROR in BKREDCOP FILE !',
     +        ' ******'/5X,100(1H*))
      END
      SUBROUTINE BKREDCOT(TAPE,IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK TMS
C! Fills bank 'BCAR' for full Redwood tapes for further TMS work
C  J. Boucrot 25 - Feb - 1998
C Called by BKREDCOP                    from BOOKLIB
C Calls BKCHKT,BKISDL,BKFILB,BKMODI     from BOOKLIB
C Calls ALINST                          from ALEPHLIB
C Input argument :
C  TAPE  = tape name
C Output argument :
C   IER  = 0  if all OK
C        = 1  if there was no room to update the database banks
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
      CHARACTER*(*) TAPE
      CHARACTER COMEN*60,OWNER*12
      INTEGER BKINCA,ITAB(MAXIN)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IER=0
C Only CERN Multifile tapes are to be considered here:
      CALL BKCHKT(TAPE,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0.OR.ICERN.EQ.0.OR.IMULT.EQ.0) GO TO 999
      CALL BKISDL(TAPE,2,IDLTT)
      IF (IDLTT.EQ.0.OR.NFIDLT.EQ.0) GO TO 999
C Initialisations :
      OWNER='ALPROD      '
      CALL VZERO(ITAB,MAXIN)
      DO 10 IKS=JBCAVS,JBCAWN-1
 10   ITAB(IKS)=INTCHA('    ')
      ITAB(JBCARF)=10
      NADAT=0
      IRUMI=999999
      IRUMX=-1
      JBDFS=NLINK('BDFS',IMCDLT)
      IF (JBDFS.EQ.0) GO TO 999
C
C Loop on all files to build the various neede quantities:
C
      DO 100 IDL=1,NFIDLT
         IBDFS=LISBDF(LISORD(IDL))
         KBDFS=KROW(JBDFS,IBDFS)
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.EQ.0) GO TO 100
         KBSET=KROW(JBSET,NROW)
         IBRL1=IW(KBSET+JBSEBA)
         IBRL2=IW(KBSET+JBSEBR)
         IF (IBRL1*IBRL2.EQ.0) GO TO 100
         JBRLI=NLINK('BRLI',NPER)
         IF (JBRLI.EQ.0) GO TO 100
C Determine first and last run on dataset:
         DO 50 IBRLI=IBRL1,IBRL2
            KBRLI=KROW(JBRLI,IBRLI)
            IRUN=IW(KBRLI+JBRLRN)
            IRUMI=MIN0(IRUMI,IRUN)
            IRUMX=MAX0(IRUMX,IRUN)
 50      CONTINUE
C Copy last DSETN and get nature of data:
         NADAT=IW(KBSET+JBSEND)
         CALL UCOPY(IW(KBSET+JBSEAD),ITAB(JBCADN),JBSEAU-JBSEAD)
 100  CONTINUE
C --------------------------------------------------------------------
C Now build the comment:
      COMEN=' '
      N1=1
      IF (NADAT.GT.10) THEN
         COMEN(1:8)='Dilepton'
         N1=10
      ENDIF
      INADA=MOD(NADAT,10)
      COMEN(N1:N1+3)=DNADAT(INADA)
      COMEN(N1+5:N1+11)='of runs'
      WRITE (COMEN(N1+13:N1+18), '(I6)') IRUMI
      COMEN(N1+20:N1+21)='to'
      WRITE (COMEN(N1+23:N1+28), '(I6)') IRUMX
C Put the TAPE,comment and owner in ITAB:
      CALL ALINST(TAPE,ITAB(JBCAVS),NBDS)
      CALL ALINST(COMEN,ITAB(JBCACM),NNCO)
      CALL ALINST(OWNER,ITAB(JBCAON),NNOW)
C Now store the infos on TAPE in the temporary bank BCAR,NR=1000 :
      CALL BKFILB('BCAR',1000,ITAB,LBCARA,NOU,IEOU)
      IF (IEOU.EQ.2) GO TO 910
      CALL BKMODI('BCAR',1000,0,LBCARA,IER)
      GO TO 999
C NO roo for 'BCAR' bank:
 910  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKREDO(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Clear all keys and banks before rerunning SCANBOOK
C J.Boucrot  27-May-1992
C Modified: Helge Meinhard  01-Sep-1992   UNIX version
C Called from BKSEAR or X11                               from BOOKLIB
C Calls  BKIDX11                                          from BOOKLIB
C Calls  BGARB,BDROP                                      from BOSLIB
C Output argument :
C    IER  =  1 if problem with BOS banks  ;  = 0 otherwise
C-----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- RSLEP1 ----
      PARAMETER (NSL1 = 5 )
      CHARACTER RSELEP1*10,PHYKL1*200
      COMMON / LEP1RS / IRSLEP1
      COMMON / CEP1RS / RSELEP1(NSL1),PHYKL1(NSL1)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      PARAMETER (MAXTR = 13)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IBKINT.NE.-1) NBREDO=NBREDO+1
      IF (NBREDO.GT.MAXTR) GO TO 900
C For interactive running other than X11 :
C RAZ all counters and keywords for SCANBOOK :
      IF (IBKINT.EQ.-1) GO TO 100
      IDSEAR=100
C keys and counters in / BKKEYS / :
      IKEYOK=0
      NTAPKY=0
      NDSNKY=0
      NCCOMP=0
      IMCDAT=1
      ENGLEP=-100.
      ISDATE=0
      ISDATL=0
      ISPHYS=0
      KINCOD=0
      ISEED1=0
      ISEED2=0
      ISEED3=0
      INIP97=0
      IROW97=0
C  in  /BKPRSL /  :
      IGRLEP=0
      ISRUNF=0
      ISRUNL=999999
      LASRUR=0
      IPRONL=0
      IBFCOM=0
      ISORLE=0
      ISYEAR=0
      IB1RUN=0
      ISELPH=1
      IGEOYR=0
      IGALPR=0
      IPRGVR=0
      ISPERF=0
      IPHYGR=0
      IPSROU=0
      IWFILI=0
      LASTPR=1
      IFIRTA=0
      ILABCH=1
      IFAKFA=0
      IBKSQL=0
      ISELPA=-1
      IMINPR=0
      INANPR=0
      IBTQSE=2
      IZASKD=-1
      IZTOTC=0
      IDTRQU=0
      NDTRQU=0
      IDLCRW=0
      IEPRAW=0
      IDLRAW=0
      IDLDAT=0
      IALISE=0
      ILEP2S=0
      IFBOOK=0
      IDATSL=0
      IJULSL=0
      IPROSL=0
      IRAWAA=0
      IRAWD1=0
      IRAWD2=0
      IYEASL=0
      IRUNSL=0
      IFILSL=0
      ILP195=0
      IENV97=0
      IBREDO=0
C
C Initialize some char.var. in / BKKEYS /
C
      SELCAT=' '
      SELSTA=' '
      SELDAT=' '
      SELMAG=' '
      SELFOR='EPIO'
      SELMAN=' '
      SELTIM=' '
      SELCOM(1)=' '
      SELUSR=' '
      SELLOC=' '
      SELPHY=' '
      PHYKEY=' '
      SELINS=' '
      SELRAN=' '
      CODM97=' '
      CKEY97=' '
      DSKSPY='B'
      DO 45 IS=1,NTPMX
         LISTAP(IS)=' '
 45   CONTINUE
      DO 46 IS=1,NDSMX
         LISDSN(IS)=' '
 46   CONTINUE
      DO 50 IL=1,NDRQU
 50   DETRQU(IL)=' '
      ISCQUI=0
      IDASEL=0
C RAZ comdeck /EXABYT/ :
 100  NEXAFO=0
      IDSEXA=0
      IBDFRW=0
      IDISEX=0
      IDSEPR=-1
      CALL VZERO(LISEXA,NEXAT)
      CALL BKIDX11
C Initialize /DATAFOUN/ :
      NDATFOUN=0
      NTOTRUNS=0
      CALL VZERO(IBDSEL,NTODT)
      CALL VZERO(IEDSEL,NTODT)
      CALL VZERO(LISRUSEL,NTODT)
      CALL VZERO(LISORTRU,NTODT)
      CALL VZERO(LISKINSL,NTODT)
      CALL VZERO(LISALRUN,NTODT)
      CALL VZERO(LISALSOR,NTODT)
      CALL VZERO(LISENGLP,NTODT)
      CALL VZERO(LISALBDF,NTODT)
C Initialize / LEP1RS / :
      IRSLEP1=0
C Initialize / MASGEN / :
      CALL VZERO(IROBKM7,NTKM7)
      ISELGEN=0
      ISELMAS=0
      ISELROB7=0
      CALL BKIDX11
      ITOLER=250
      IROUND=250
      EROUND=0.25
C Drop all banks from previous Year database :
      CALL BDROP(IW,'BSETBPROBSPFBRLIBTPN')
C Drop all banks from previous SCANBOOK run  :
      CALL BDROP(IW,'SEVTSRUNIRUNSRUI')
 800  CALL BGARB(IW)
      IER=0
      GO TO 999
C Error :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKREFI(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Redefines the output file names before rerunning SCANBOOK
C J.Boucrot  12-Mar-1997
C Called from BKSEAR                                      from BOOKLIB
C Calls  BKRDCH                                           from BOOKLIB
C Output argument :
C    IER  =  1 if problem with BOS banks  ;  = 0 otherwise
C-----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER (MLET8=60)
      CHARACTER LET8*(MLET8),MSG*90
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      LET8=' '
      IF (IBKINT.EQ.-1) GO TO 2
C Ask for the name of the new file(s) which will be written in this run
 1    WRITE (LWRINT,*) ' >>>> Please give a new Filename for OUTPUT',
     +      ' FILES for this run '
      CALL BKRDCH(LECINT,0,LET8)
      IF (LET8.EQ.' ') GO TO 1
      CARDSF=LET8
 2    CONTINUE
      IF (CARDSF(1:8).EQ.' ') CARDSF(1:8)='scanbook'
C
C NEW names of files requested :
C CLOSE  the previous output files :
C
 5    IF (IBKINT.EQ.-1) GO TO 10
      CLOSE  (LWRUSR)
      CLOSE  (LWRSRU)
      CLOSE  (LWRFIL)
 10   CONTINUE
C Define the new LUNs :
      LWRUSR=LWRUSR+1
      LWRERR=LWRUSR
      LWRFIL=LWRFIL+1
      LWRSRU=LWRSRU+1
C Define the new OUTPUT  file :
      MSG=CARDSF(:LNBLNK(CARDSF))//'.output'
      MSG=MSG(1:LNBLNK(MSG))
      OPEN ( LWRUSR , FILE = MSG , FORM = 'FORMATTED' ,
     +       STATUS = 'NEW' , ERR = 900 )
      GO TO 999
C
C Problems with files :
C
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKRFYX11(INUS,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! run/fill selection in SCANBOOK X11
C J. Boucrot  13-11-1996
C Called from X11
C Calls BKVYEAR,BKVRUYE,BKVFIYE                    from  BOOKLIB
C Input argument  :
C   INUS = character string provided by the user to select runs/fills
C  Output argument  :
C           IER = 0  all OK
C               = 1  error in the user's input
C               = 2  no room to book/enlarge bank 'SRUN'
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      COMMON / RSELX11 / IRFLX11,ISRUF11,ISRUL11,ISYEA11
      CHARACTER MODE*5
      CHARACTER*(*) INUS
C-----------------------------------------------------------------------
      IER=0
      LU=LWRUSR
      IF (IBKINT.NE.-1) GO TO 999
      ISRUNF=NRUMIN
      ISRUNL=NRUMAX
C Selection on year # :
      IF (IYEASL.GT.0) THEN
         CALL BKVYEAR(IEY)
         IF (IEY.NE.0) GO TO 900
C Selection on Runs :
      ELSE IF  (IRUNSL.EQ.1) THEN
         CALL BKVRUYE(LU,INUS,IEROR)
         IF (IEROR.EQ.1) GO TO 900
         IF (IEROR.EQ.2) GO TO 910
           ISYEAR=0
           CALL BKVYEAR(IERY)
           IF (IERY.GT.0) GO TO  900
           IRFLX11=1
           ISYEA11=ISYEAR
           ISRUF11=ISRUNF
           ISRUL11=ISRUNL
C Selection on Fills :
      ELSE IF  (IFILSL.EQ.1) THEN
         CALL BKVFIYE(LU,INUS,IEROR)
         IF (IEROR.EQ.1) GO TO 900
         IF (IEROR.EQ.2) GO TO 910
           ISYEAR=0
           CALL BKVYEAR(IERY)
           IRFLX11=1
           ISYEA11=ISYEAR
           ISRUF11=ISRUNF
           ISRUL11=ISRUNL
      ENDIF
      GO TO 999
C
C Error in the user's input string :
 900  IER=1
      GO TO 999
C
C No room for bank 'SRUN' :
 910  IER=2
C
 999  RETURN
      END
      SUBROUTINE BKRKSEIN(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK INIT
C! Scans the "KSEC" files generated by ALBOOK to build RKSE
C J. Boucrot  27-01-1999
C Called from BKUPDF                                    from BOOKLIB
C Calls BKRKSENW,PRPSLS                                 from BOOKLIB
C Calls AOPEN,AOPENW,AUBPRS,ACLOSE                      from ALEPHLIB
C Calls BWRITE,BREADC                                   from BOS77
C  Output argument :
C   IER = 0  all OK
C   IER = 1 : no room for banks
C   IER > 1  other errors
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
      SAVE
      CHARACTER NAMPR*60,LINCH*80,KSECDIR*44,RKSFIL*60,FILE*60
      CHARACTER FKSEC*80,FLINE*100,FLIN1*100,FLIN2*100,RKSOLD*60
      CHARACTER DATE*12,SIZE*9
      LOGICAL LEX
      DATA KSECDIR / '/afs/cern.ch/user/a/albook/public/ksecfiles/' /
C-----------------------------------------------------------------------
      IER=0
      IF (IW(NAMIND('BTST')).GT.0) GO TO 999
      CALL BKFMT('RKSE','2I,(11I,2F)')
C First, read the pre-existing file of RKSE banks:
      RKSFIL=' '
      RKSFIL=ALS_TEMP(1:ILTEMP)//'rksebank.cards'
      LFI=LNBLNK(RKSFIL)
      INQUIRE (FILE=RKSFIL, EXIST=LEX)
      IF (.NOT.LEX) GO TO 10
      CALL AOPEN(LECTDR,RKSFIL(1:LFI),'CARDS','DISK',IER)
      IF (IER.NE.0) GO TO 10
      IDUM=MRESET(LECTDR)
      ISAV=IW(4)
      IW(4)=0
      CALL BREADC
      IW(4)=ISAV
      CALL ACLOSE(LECTDR,IERC)
C
C The list of Ksec files must be :
C                -  built in the ALS_STAT directory using ls -L
C                -  then opened for further read
C
 10   NAMPR=' '
      NAMPR=ALS_STAT(1:ILSTAT)//'ksecfil.listenew'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      CALL SYSTEM(' rm -f '//NAMPR)
      CALL SYSTEM(' ls -L -o '//ksecdir//' > '//NAMPR)
      OPEN ( LECRQL , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
      NEWOK=0
C
C Read the list of files :
C
 20   READ ( LECRQL , '(A)' , END=600 , ERR=901 )   LINCH
      if (index(linch,'ksecout').eq.0) go to 20
      CALL PRPSLS(LINCH,FILE,DATE,SIZE)
      FKSEC=' '
      FKSEC=KSECDIR//FILE(1:LNBLNK(FILE))
C
C Now OPEN/read in turn each file :
C
      LKSEC=0
      FLIN1=' '
      FLIN2=' '
      OPEN ( LECFMT , FILE = FKSEC , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
      rewind (lecfmt)
 40   READ ( LECFMT , '(A)' , END=200 , ERR=902 )   FLINE
      LKSEC=LKSEC+1
      IF (LKSEC.EQ.4) FLIN1=FLINE
      IF (LKSEC.EQ.6) FLIN2=FLINE
      GO TO 40
C
C Try to recognize if this dataset is new; if yes, store it in 'RKSE' :
C
 200  CLOSE (LECFMT)
      CALL BKRKSENW(FLIN1,FLIN2,INW,IFAIL)
      IF (IFAIL.NE.0) GO TO 900
      IF (INW.NE.0) NEWOK=NEWOK+1
      GO TO 20
C
 600  CLOSE  (LECRQL)
      WRITE (LWRDBG,1020) NEWOK
      IF (NEWOK.EQ.0) GO TO 999
C-----------------------------------------------------------------------
C If new datasets are found, make a new rksebank.cards file :
      RKSOLD=' '
      RKSOLD=ALS_TEMP(1:ILTEMP)//'rksebank.oldcards'
      LFO=LNBLNK(RKSOLD)
      call system (' mv '//rksfil(1:lfi)//' '//rksold(1:lfo))
      CALL AOPENW(LWRFER,RKSFIL(1:LFI),'CARDS','DISK',IERW)
      IF (IERW.NE.0) GO TO 903
      CALL AUBPRS('RKSE')
      CALL BWRITE(IW,LWRFER,'RKSE')
      CALL BWRITE(IW,LWRFER,'0')
      CALL ACLOSE(LWRFER,IERC)
      GO TO 999
C-----------------------------------------------------------------------
C Processing of errors :
C
 900  IER=1
      WRITE (LWRDBG,1000)
      GO TO 999
 901  IER=2
      WRITE (LWRDBG,1001) NAMPR
      GO TO 999
 902  IER=3
      WRITE (LWRDBG,1002) FKSEC
      GO TO 999
 903  IER=4
      WRITE (LWRDBG,1003)
C
 999  RETURN
C-----------------------------------------------------------------------
 1000 FORMAT (' ==>  NO ROOM FOR BANKS IN BKRKSEIN : STOP !!')
 1001 FORMAT (' ++ Error # 1 in BKRKSEIN with file =',2x,A60)
 1002 FORMAT (' ++ Error # 2 in BKRKSEIN with file =',2x,A80)
 1003 FORMAT (' ++ Error # 3 in BKRKSEIN with AOPENW')
 1020 FORMAT (/22X,'=== Subroutine BKRKSEIN : new files =',I6)
      END
      SUBROUTINE BKRKSENW(FLIN1,FLIN2,INEW,IFAIL)
C-----------------------------------------------------------------------
CKEY UPDABOOK INIT
C! Finds if "KSEC" infos are new or not
C J. Boucrot  27-01-1999
C Called from BKRKSEIN                                  from BOOKLIB
C Calls BKMESG,BKCTIM,BKDKLI,PRPSLS                     from BOOKLIB
C  Input arguments :
C    FLIN1,FLIN2 = meaning lines of ksecfile
C  Output arguments:
C  INEW = 0  if info not new
C  INEW = 1  if info is new
C  IFAIL = 1 if no room for BOS banks, = 0 otherwise
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- RKSEJJ ----
*CD RKSEJJ
      PARAMETER(JRKSRN=1,JRKSYG=2,JRKSND=3,JRKSLE=4,JRKSR1=5,JRKSR2=6,
     +          JRKSGV=7,JRKSJV=8,JRKSMV=9,JRKSDV=10,JRKSNE=11,
     +          JRKSKX=12,JRKSKE=13,LRKSEA=13)
      SAVE
      PARAMETER ( MAXRK = 50 )
      CHARACTER FLIN1*100,FLIN2*100,DNAD*4
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IFAIL=0
      INEW=0
      IF (FLIN1.EQ.' '.OR.FLIN2.EQ.' ') GO TO 999
C
      READ  (FLIN1,1002) KINCO,DNAD,IGEOM,IRUN,IENGY,IRAN1,IRAN2,
     +                   IKINV,IGAV,IJUV,IMIV,IDBAS,IDATE
      READ  (FLIN2,1003) IEVNT,XSEC,XSECE
C Find which kind of data :
      IDNAT=0
      IF (DNAD.EQ.DNADAT(3)) IDNAT=3
      IF (DNAD.EQ.DNADAT(5)) IDNAT=5
      IF (IDNAT.EQ.0) GO TO 999
C Is there already a bank RKSE with this KINGAL code ?
      JRKSE=NLINK('RKSE',KINCO)
C If not, go directly to the storage :
      IF (JRKSE.EQ.0) GO TO 500
C Yes, there is one. Find if the info is new :
      IPREV=0
      DO 200 IRKSE=1,LROWS(JRKSE)
         KRKSE=KROW(JRKSE,IRKSE)
         IF (IW(KRKSE+JRKSRN).NE.IRUN) GO TO 200
         IF (IW(KRKSE+JRKSYG).NE.IGEOM) GO TO 200
         IF (IW(KRKSE+JRKSLE).NE.IENGY) GO TO 200
         IF (IW(KRKSE+JRKSR1).NE.IRAN1) GO TO 200
         IF (IW(KRKSE+JRKSR2).NE.IRAN2) GO TO 200
         IF (IW(KRKSE+JRKSGV).NE.IGAV) GO TO 200
         IF (IW(KRKSE+JRKSJV).NE.IJUV) GO TO 200
         IF (IW(KRKSE+JRKSDV).NE.IDBAS) GO TO 200
         IF (IW(KRKSE+JRKSNE).NE.IEVNT) GO TO 200
         IPREV=1
         GO TO 210
 200  CONTINUE
C DATASET already existing : exit
 210  IF (IPREV.EQ.1) GO TO 999
C ----------------------------------------------------------------------
C NEW DATASET : store it in bank RKSE, NR=KINCO :
 500  INEW=1
C Book or enlarge the bank, if necessary :
      IF (JRKSE.LE.0) THEN
         LENB=LMHLEN+MAXRK*LRKSEA
         IOLRO=0
      ELSE
         IOLRO=LROWS(JRKSE)
         IF (LFRROW(JRKSE).GT.1) GO TO 600
         LENB=IW(JRKSE)+MAXRK*LRKSEA
      ENDIF
      CALL AUBOS('RKSE',KINCO,LENB,JRKSE,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JRKSE+LMHCOL)=LRKSEA
      IW(JRKSE+LMHROW)=IOLRO
C Fill in the informations :
 600  KBANK=KNEXT(JRKSE)
      IW(KBANK+JRKSRN)=IRUN
      IW(KBANK+JRKSYG)=IGEOM
      IW(KBANK+JRKSND)=IDNAT
      IW(KBANK+JRKSLE)=IENGY
      IW(KBANK+JRKSR1)=IRAN1
      IW(KBANK+JRKSR2)=IRAN2
      IW(KBANK+JRKSGV)=IGAV
      IW(KBANK+JRKSJV)=IJUV
      IW(KBANK+JRKSMV)=IMIV
      IW(KBANK+JRKSDV)=IDBAS
      IW(KBANK+JRKSNE)=IEVNT
      RW(KBANK+JRKSKX)=XSEC
      RW(KBANK+JRKSKE)=XSECE
      IW(JRKSE+LMHROW)=IOLRO+1
      GO TO 999
C
C No room for bank RKSE :
 900  IFAIL=1
 999  RETURN
C ----------------------------------------------------------------------
 1002 FORMAT (1X,I5,3X,A4,2(1X,I4),2X,I6,
     +        2(2X,I5),3X,I5,3X,I4,2X,I5,4X,I4,
     +        4X,I4,5X,I6)
 1003 FORMAT (2X,I6,8X,F10.6,10X,F10.6)
      END

      SUBROUTINE BKRLUL(NRUNF,IRUNQ,NUMZ,NUMB,BLUM,BCKG,BTEF,IER)
C --------------------------------------------------------------
CKEY UPDABOOK UPDADBS
C - J.Boucrot 25-Sep-1990
C! fill the intermediate bank RLUL
C  Called from BKLUFI                            from  BOOKLIB
C  Calls AUBOS                                   from ALEPHLIB
C
C - Input     : NRUNF    / INTE   = run number
C               IRUNQ    / INTE   = run quality
C               NUMZ     / INTE   = number of Z
C               NUMB     / INTE   = number of Bhabhas
C               BLUM     / REAL   = best luminosity
C               BCKG     / REAL   = number of background bhabhas
C               BTEF     / REAL   = Bhabha trigger efficiency
C - Output    : IER      / INTE   = 0 if all OK
C                                   1 if not enough space for bank
C ----------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
C-- RLUMJJ ----
      PARAMETER(JRLURN=1,JRLURQ=2,JRLUNZ=3,JRLUNB=4,JRLULU=5,JRLUBK=6,
     +          JRLUBT=7,LRLUMA=7)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------
C - get the bank pointer , build a new bank if necessary :
C
      IER=0
      JRLUL=NLINK('RLUL',NRRLUL)
      IF (LROWS(JRLUL).GE.MXRLUL) THEN
         NBARLU=NBARLU+1
         NRRLUL=NRUNF
         LMRLU=LMHLEN+MXRLUL*LRLUMA
         CALL AUBOS('RLUL',NRRLUL,LMRLU,JRLUL,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JRLUL+LMHCOL)=LRLUMA
         IW(JRLUL+LMHROW)=0
      ENDIF
C - fill one row
      IROW=LROWS(JRLUL)+1
      KRLUL = KROW(JRLUL,IROW)
      IW(KRLUL+JRLURN) = NRUNF
      IW(KRLUL+JRLURQ) = IRUNQ
      IW(KRLUL+JRLUNZ) = NUMZ
      IW(KRLUL+JRLUNB) = NUMB
      RW(KRLUL+JRLULU) = BLUM
      RW(KRLUL+JRLUBK) = BCKG
      RW(KRLUL+JRLUBT) = BTEF
      IW(JRLUL+LMHROW)=IROW
C - sort RLUL in ascending order of run number
      CALL SORTIQ(IW(JRLUL+LMHLEN+1),LCOLS(JRLUL),LROWS(JRLUL),
     &               JRLURN)
C
      GO TO 999
C - no room for bank :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKRTMS
C-----------------------------------------------------------------------
CKEY UPDABOOK RESCUETMS STEERING
C!  Rescue of a TMS database updating which failed in a previous UPDABOO
C  Author J. Boucrot   3-Mar-1991
C Called from BKDOAL                                  from BOOKLIB
C Calls  BKUTMS,BKTASP                                from BOOKLIB
C Calls  AOPEN                                        from ALEPHLIB
C  UNIX Version 10-Oct-1995
C Calls  BREAD                                        from BOSLIB
C-----------------------------------------------------------------------
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER MSG*60,FNPR*60
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-----------------------------------------------------------------------
      IF (ITMSRC.NE.1) GO TO 999
C Open the file containing the 'BCAR' bank of tapes updates :
      FNPR=' '
      FNPR=ALS_STAT(1:ILSTAT)//'rescuetms.output'
      FNPR=FNPR(1:LNBLNK(FNPR))
      CALL SYSTEM(' rm -f '//FNPR)
      OPEN ( LWRDBG , FILE = FNPR , STATUS = 'NEW' , ERR = 980 )
      MSG=' '
      MSG=ALS_TEMP(1:ILTEMP)//'bcartms.rescuesq'
      MSG=MSG(1:LNBLNK(MSG))
      CALL AOPEN(LECDAF,MSG,'EDIR','DISK',IE)
      IF (IE.NE.0) GO TO 970
C File found : read it
 60   CALL BREAD(IW,LECDAF,'E',*60,*100)
      GO TO 60
C File read : perform the update :
 100  CALL BKUTMS(ITMS)
      CALL BKTASP(IFTA)
      IF (ITMS.NE.0) GO TO 980
C Erase the rescue file if all was OK :
      CALL SYSTEM(' rm -f '//MSG(1:LNBLNK(MSG)))
      GO TO 999
C No input file :
 970  STOP 970
C ERROR during TMS processing :
 980  STOP 980
 999  RETURN
      END
      SUBROUTINE BKRUAA(NRUN,TAPAA,IFILE,IEROR)
C ----------------------------------------------------------------------
CKEY TOOL/USER
C! Find the AA tape corresponding to run NRUN
C  J. Boucrot  22 - Sep - 1997
C Called from several routines
C Calls BKFPER,BKAARU                            from  BOOKLIB
C Calls ALSTIN                                   from ALEPHLIB
C  Input :
C  NRUN  =  Run Number
C Output arguments :
C  TAPAA = AA tape name
C  IFILE = file number on this tape
C  IEROR = 0 if all OK, = 1 if run not found in database
C Used banks :  'BRUC' , in which the ONLINE Logbook content is stored
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( NRAA = 20 )
      CHARACTER TAPAA*8
      INTEGER LIRAA(NRAA)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IEROR=1
      IFILE=0
      IF (NRUN.LE.NRUMIN.OR.NRUN.GT.MX94NR) GO TO 999
C Find the Bookkeeping period , then the right 'BRUC' bank :
      CALL BKFPER(NRUN,0,NPER)
      IF (NPER.LE.0) GO TO 999
      JBRUC=NLINK('BRUC',NPER)
      IF (JBRUC.LE.0) GO TO 999
      IBRUC=0
      DO 25 IS=1,LROWS(JBRUC)
         NRUC=ITABL(JBRUC,IS,JBRURN)
         IF (NRUN.NE.NRUC) GO TO 25
         IBRUC=IS
         GO TO 30
 25   CONTINUE
 30   IF (IBRUC.EQ.0) GO TO 999
C
C Run found in 'BRUC' : find the AA tape
C
      KBRUC=KROW(JBRUC,IBRUC)
      CALL ALSTIN(IW(KBRUC+JBRUVS),2,TAPAA)
      IF (TAPAA(1:2).NE.'AA') GO TO 999
C Now find the file number:
      CALL BKAARU(TAPAA,NPER,IBRUC,LIRAA,NRLI,IERA)
      IF (IERA.NE.0.OR.NRLI.LE.0) GO TO 999
      IFIL=IUCOMP(NRUN,LIRAA,NRLI)
      IF (IFIL.LE.0) GO TO 999
      IFILE=IFIL
      IEROR=0
C
 999  RETURN
      END
      SUBROUTINE BKRUCA(IERC)
C ----------------------------------------------------------------------
CKEY SCANBOOK
C! Checks run/year selections for SCANBOOK jobs with input cards
C  J. Boucrot   10 Oct -1992  from old routine BKCASI
C  Modified 01-09-94  for Fills
C  Calls BKFISR,BKRUYE                              from BOOKLIB
C  Calls AUBOS                                      from BOS77
C  Called from BKSEVR                               from BOOKLIB
C Output argument : IERC  = 0 if all OK
C                         = 1 if severe syntax error in data cards
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C ----------------------------------------------------------------------
      IERC=0
      IF (IDSEAR.EQ.100.OR.IDSEAR.GE.7) GO TO 999
      IF (IDSEAR.EQ.5) GO TO 999
C
 300  IF (IMCDAT.EQ.2) GO TO 999
C Set switches for SRUN or SFIL inputs from file :
      CALL BKVRFIRU(IER)
      IF (IER.NE.0) GO TO 980
C If 'SEVT' cards given , build 'SRUN' bank
C If a 'SFIL' data card is present , build the 'SRUN' bank :
      CALL BKFISR(IER)
      IF (IER.NE.0) GO TO 980
      JBSRU=IW(NAMIND('SRUN'))
      IF (JBSRU.EQ.0) GO TO 380
      ISRUNF=IW(JBSRU+1)
      NLSRU=IW(JBSRU)
      IF (NLSRU.EQ.1) THEN
         ISRUNL=ISRUNF
         IB1RUN=ISRUNF
         GO TO 380
      ELSE
         ISRUNL=IW(JBSRU+NLSRU)
         IF (ISRUNL.LE.0) ISRUNL=-ISRUNL
      ENDIF
      IF (IDSEAR.EQ.5.AND.ISRUNF.EQ.ISRUNL) IB1RUN=ISRUNF
 380  CONTINUE
      IF (IDSEAR.EQ.5.AND.ISRUNF.LT.LRUNMC) THEN
         IMCDAT=2
         IB1RUN=ISRUNF
         GO TO 999
      ENDIF
C Define ISYEAR from ISRUNF and ISRUNL if needed :
      CALL BKVYEAR(IEY)
      IF (IEY.NE.0) GO TO 980
C ----------------------------------------------------------------------
C Check runs/years  ( real data only ! )
C  No year selected :
      IF (IDSEAR.EQ.5.AND.IB1RUN.EQ.0) GO TO 999
      IF (ISYEAR.EQ.0) THEN
         IF (ISRUNF.LT.LISFRU(1).OR.ISRUNL.GT.LISLFI(NTOYEA)) THEN
            WRITE ( LWRUSR,1003)  ISRUNF,ISRUNL
            GO TO 880
         ENDIF
         CALL BKRUYE(LWRUSR,IRUOK)
         IF (IRUOK.NE.0) THEN
            WRITE ( LWRUSR,1004)  ISRUNF,ISRUNL
            GO TO 880
         ENDIF
         GO TO 999
      ENDIF
C A Year was selected : check consistency
      IND=IUCOMP(ISYEAR,LISYEA,NTOYEA-1)
      IF (IND.EQ.0) THEN
         WRITE ( LWRUSR,1005) ISYEAR
         GO TO 880
      ENDIF
C Year given , but no SRUN : build it :
      IF (JBSRU.LE.0) THEN
         CALL AUBOS('SRUN',0,2,JSRUN,IGARB)
         ISRUNF=LISFRU(IND)
         ISRUNL=LISFRU(IND+1)
         IW(JSRUN+1)=ISRUNF
         IW(JSRUN+2)=-ISRUNL
         GO TO 999
      ENDIF
C Year and SRUN given : check consistency :
      IRUOK=0
      IF (ISRUNF.LT.LISFRU(IND).OR.ISRUNF.GT.LISFRU(IND+1)) IRUOK=1
      IF (ISRUNL.LT.LISFRU(IND).OR.ISRUNL.GT.LISFRU(IND+1)) IRUOK=1
      IF (IRUOK.EQ.1) THEN
         WRITE ( LWRUSR,1006)  ISYEAR,ISRUNF,ISRUNL
         GO TO 880
      ENDIF
      IF (IDSEAR.GT.0.AND.ISRUNF.EQ.0) ISRUNF=1
      IF (IDSEAR.EQ.5.AND.ISRUNF.EQ.ISRUNL) IB1RUN=ISRUNF
      GO TO 999
C Display the list of known years/runs
 880  WRITE ( LWRUSR , 1007 )
      DO 885 II=1,NTOYEA-1
 885  WRITE (LWRUSR,1009) LISYEA(II),LISFRU(II),LISFRU(II+1)-1
C  Syntax error in a data card :
 980  IERC=1
C
 999  RETURN
C ----------------------------------------------------------------------
 1003 FORMAT (/10X,' ===>>>  Error found in data cards file !! <<<===',
     +        /,15X,'  Runs given in card SRUN are not valid :',2I8)
 1004 FORMAT (/10X,' ===>>>  Error found in data cards file !! <<<===',
     +        /,15X,' You cannot mix runs from different years :',2I8)
 1005 FORMAT (/10X,' ===>>>  Error found in data cards file !! <<<===',
     +        /15X,' You have selected a YEAR which is unknown :',I8)
 1006 FORMAT (/10X,' ===>>>  Error found in data cards file !! <<<===',
     +        /,15X,' the YEAR selected in data card SCIN  is :',I8
     +        /,15X,' the runs from SRUN dont match with it   :',2I8)
 1007 FORMAT (//'  ===   You find below the LIST of existing ',
     +          ' YEARS and Run Ranges  ===')
 1009 FORMAT (10X,3I10)
      END
      SUBROUTINE BKRUOK(NRUN,IPHYS,IOK)
C-----------------------------------------------------------------------
CKEY TOOL/INTERNAL
C! Tests if a run can be accepted or not
C  Author J. Boucrot  23-Nov-1989  modified 08-Nov-1996
C Called from USER
C Calls BKELEP,BKPHYG                            from BOOKLIB
C Input argument :
C    NRUN  = Run Number  ( Meaningful for Real data only )
C Output arguments :
C  IPHYS  = flag for Real Data runs , as stored in RINF bank :
C         = 1 LEP and Aleph Magnet OK , but Run Quality not OK
C         = 2 special test runs
C         = 3 cosmics
C         = 11 GOOD RUN for Physics Analysis
C    IOK  = 0 if run accepted
C         = 1 if run rejected
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      PARAMETER ( TOLPC = 0.01 , IMAGK = 49650 )
      INTEGER RACCEP
      CHARACTER TRTYP*8,LET2*2
      LOGICAL BTEST
C-----------------------------------------------------------------------
      IOK=0
C Quit immediately for MCarlo data :
      IF (IMCDAT.EQ.2.OR.NRUN.LE.LRUNMC) GO TO 999
C Check if run is in general run range :
      IF (NRUN.LT.ISRUNF.OR.NRUN.GT.ISRUNL) GO TO 900
C Check if run in specific run range , if any :
      JSRUI=IW(NAMIND('SRUI'))
      IF (JSRUI.EQ.0) GO TO 20
      NRUI=IW(JSRUI)
      IF (NRUI.EQ.2.AND.IW(JSRUI+2).LT.0) THEN
         ISFR1=IW(JSRUI+1)
         ISFR2=-IW(JSRUI+2)
         IF (NRUN.LT.ISFR1.OR.NRUN.GT.ISFR2) GO TO 900
      ELSE
         IND=IUCOMP(NRUN,IW(JSRUI+1),NRUI)
         IF (IND.EQ.0) GO TO 900
      ENDIF
 20   CONTINUE
C Check if run accepted from Physics quality , if required :
C
      IF (ISELPH.EQ.0) GO TO 999
      CALL BKELEP(NRUN,ELEP,IFI,BM,IDE,NEVT,KBRUC)
      IPHBM=IW(KBRUC+JBRUBR)
C Never accept "DUCK" runs :
      IF (BTEST(IPHBM,0)) GO TO 900
C Throw away non-PERF runs if PERF runs asked :
      IF (ISPERF.EQ.1.AND..NOT.BTEST(IPHBM,2)) GO TO 900
C
C Selection from Physics Groups ?
C
      IF (IPHYGR.GT.0.OR.PHYKEY.NE.' ') THEN
         CALL BKPHYG(IPHBM,IERP)
         IF (IERP.NE.0) GO TO 900
         IPHYS=11
         GO TO 999
      ENDIF
      IF (NRUN.GE.LISFRU(3)) THEN
         IF (BTEST(IPHBM,1).OR.BTEST(IPHBM,2)) THEN
            IPHYS=11
            GO TO 999
         ENDIF
      ENDIF
C
C Define the Data Quality Flag :
C
      CALL ALSTIN(IW(KBRUC+JBRUTT),JBRULF-JBRUTT,TRTYP)
      IPHYS=4
C trigger type :
      IF (INDEX(TRTYP,'COS').NE.0) THEN
         IPHYS=3
         GO TO 50
      ENDIF
      IF (INDEX(TRTYP,'DOWNSC').NE.0.OR.
     +    INDEX(TRTYP,'GBX').NE.0) THEN
         IPHYS=4
         GO TO 50
      ENDIF
      IPHYS=0
C LEP energy defined , Number of events reasonable  :
      IF (ELEP.LE.0..OR.NEVT.LT.1) GO TO 50
      IPHYS=2
      ITOLP=NINT(10000.*TOLPC)
      IMAG=IW(KBRUC+JBRUMC)
      IF (IABS(IMAG-IMAGK).GT.ITOLP) GO TO 50
      IPHYS=1
C Luminosity , Run Quality from Run Managers :
      XLUM=RW(KBRUC+JBRULU)
      IOKR=IW(KBRUC+JBRUCS)
      IF (NRUN.LE.LISFRU(2)) THEN
C runs of 1989 , old definition :
         IF (IOKR.LT.0.OR.IOKR.GT.15) GO TO 50
         IF (MOD(IOKR,10).EQ.1.AND.IPHYS.EQ.1.AND.XLUM.GE.0.)
     +       IPHYS=11
C runs of 1990 and after :
      ELSE
         IF (IPHYS.NE.1) GO TO 50
         IF (IOKR.GE.-1) THEN
            IQUAL=(1+IOKR)/10
         ELSE
            IQUAL=-1
         ENDIF
         ILUM=IOKR-10*IQUAL
         IF (IQUAL.LT.0.OR.IQUAL.GT.1) GO TO 50
         IF (ISPERF.EQ.1.AND.IQUAL.NE.0) GO TO 50
         IPHYS=11
      ENDIF
 50   CONTINUE
      IOK=1
      IF (IPHYS.EQ.11) IOK=0
      GO TO 999
C Run rejected :
 900  IOK=1
      IPHYS=0
C
 999  RETURN
      END
      SUBROUTINE BKRUYE(LU,IRBAD)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Checks runs/year consistency
C J. Boucrot  01-09-1994
C Modified for LEP II runs 1-Oct-1995
C Called from BKSRUN or BKRUCA                 from BOOKLIB
C Calls DISRUNYE                               from BOOKLIB
C   Input argument  :
C          LU   = Fortran unit to print messages
C  Output argument  :
C         IRBAD = 0  all OK
C               = 1  runs are coming from different years
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER TEXT*80
C-----------------------------------------------------------------------
 800  IRBAD=1
      TEXT=' '
      DO 810 IY=1,NTOYEA-1
         IG=0
         IF (ISRUNF.GE.LISFRU(IY).AND.ISRUNF.LT.LISFRU(IY+1)) IG=IG+1
         IF (ISRUNL.GE.LISFRU(IY).AND.ISRUNL.LT.LISFRU(IY+1)) IG=IG+1
         IF (IG.EQ.2) THEN
            IRBAD=0
            IF (IBKINT.EQ.-1) ISYEAR=LISYEA(IG)
            GO TO 811
         ENDIF
 810  CONTINUE
 811  CONTINUE
      IF (IRBAD.EQ.1) THEN
         WRITE ( LU , 1003 )
C For SCANX11, open a message window :
      IF (IBKINT.EQ.-1) THEN
         TEXT='Error in input selection !'
         CALL WINX11(100,TEXT)
         TEXT='You cannot mix runs from different years'
         CALL WINX11(101,TEXT)
         TEXT=' Please give a new selection'
         CALL WINX11(102,TEXT)
         CALL WINX11(999,TEXT)
      ENDIF
C Display the list of known years/runs
         IF (IBKINT.EQ.1) CALL DIRUFIYE(LU)
         GO TO 999
      ENDIF
C
C If Year = 1995 , verify that one doesn't mix LEP I and LEP II runs :
C
      IF (IRBAD.NE.0) GO TO 999
      IF (LISYEA(IY).EQ.1995) THEN
         ILEP2=-1
         IF (ISRUNF.GT.MXLRU1.AND.ISRUNL.GT.MXLRU1) ILEP2=1
         IF (ISRUNF.LE.MXLRU1.AND.ISRUNL.LE.MXLRU1) ILEP2=0
         IF (ILEP2.EQ.-1) THEN
            IRBAD=1
            WRITE ( LU,1018 )
            WRITE ( LU,1019 ) LISFRU(IY),MXLRU1,MXLRU1+1
C For SCANX11, open a message window :
            IF (IBKINT.EQ.-1) THEN
               TEXT='Error in input selection !'
               CALL WINX11(103,TEXT)
               TEXT='Do not mix LEP 1 and LEP 1.5 data in 1995'
               CALL WINX11(104,TEXT)
               WRITE (TEXT,1201) LISFRU(IY),MXLRU1
               CALL WINX11(105,TEXT)
               WRITE (TEXT,1202) MXLRU1+1,LISFRU(IY+1)
               CALL WINX11(106,TEXT)
               TEXT=' Please give a new selection'
               CALL WINX11(107,TEXT)
               CALL WINX11(999,TEXT)
            ENDIF
         ENDIF
      ENDIF
C
 999  RETURN
C-----------------------------------------------------------------------
 1003       FORMAT (/'  ===>>> You cannot mix runs from ',
     +               ' different years !! <<<===')
 1018       FORMAT (/'  ===>>> You cannot mix runs from ',
     +               ' LEP 1 and LEP 1.5 running !! <<<===')
 1019 FORMAT (//'  ===   LEP 1 runs of 1995 range from :',I7,' to : ',
     +          '  ===>  If you want LEP 1.5 runs , ask for runs >',I7)
 1201 FORMAT('1995 LEP 1   Runs : from ',I6,' to ',I6)
 1202 FORMAT('1995 LEP 1.5 Runs : from ',I6,' to ',I6)
      END
      SUBROUTINE BKRVAX
C-----------------------------------------------------------------------
CKEY STEER
C! Read the file containing VAX keywords
C This file is assigned to LECVMA in the Command file
C Author     J.Boucrot     08-Jan-1990
C Called from BKINAL                                from BOOKLIB
C-----------------------------------------------------------------------
 999  RETURN
      END
      SUBROUTINE BKSCAINI(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK INIT
C! Opening of alebroot database and specific SCANBOOK initialisations
C J.Boucrot  18-Oct-1996
C Called from BKINAL                                from BOOKLIB
C Calls BKSEIN,BKSESP,BKSEVR,BKSEPR                 from BOOKLIB
C Output argument :
C    IER  =  1 if problems with database, = 0 otherwise
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-----------------------------------------------------------------------
      IF (IDSEAR.LE.0) GO TO 999
      IER=0
      IFAIL=0
C
C Open and Read the ROOT database :
C
      CALL BKSEIN(IER,IFAIL)
      IF (IER.NE.0) GO TO 900
C
C Special executions, if any :
C
      CALL BKSESP(IER,IFAIL)
      IF (IER.NE.0) GO TO 900
      IF (IDSEAR.EQ.9.OR.IDSEAR.EQ.10) GO TO 999
C
C Verify that all is OK up to this point :
C
      CALL BKSEVR(IER,IFAIL)
      IF (IER.NE.0) GO TO 900
      GO TO 999
C Errors :
 900  IF (IFAIL.NE.0) CALL BKSEPR(IFAIL)
 999  CONTINUE
      RETURN
      END
      SUBROUTINE BKSEAR(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Steering of SCANBOOK : searching  of the ALEBOOK DATABASE
C J.Boucrot  05-Jun-1989
C Completely rewritten for SCANBOOK X11 18-Oct-1996
C Called from BKDOAL                                      from BOOKLIB
C Calls BKSEHE,BKSRIN,BKSEXQ,BKSEPR,PRCARD,BKSERE,BKREDO  from BOOKLIB
C Calls BOSTA                                             from BOS77
C Output argument :
C    IER  =  1 if problems during search, = 0 otherwise
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-----------------------------------------------------------------------
      IF (IDSEAR.LE.0) GO TO 999
      IER=0
      IFAIL=0
C
C Implicit loop on several interactive SCANBOOK executions  :
C
 200  CONTINUE
      CALL BKSEHE
      IF (IBKINT.EQ.2.OR.IDSEAR.GT.8) THEN
         CALL BKSRIN(IERI)
         IF (ISCQUI.EQ.1) THEN
            IFAIL=5
            GO TO 900
         ENDIF
         IF (IERI.NE.0) THEN
            IER=1
            IFAIL=1
            GO TO 900
         ENDIF
      ENDIF
C
C Now perform the search :
C
      CALL BKSEXQ(IER,IFAIL)
      IF (IER.NE.0.OR.IFAIL.NE.0) GO TO 900
      GO TO 999
C-----------------------------------------------------------------------
C Errors :
 900  IF (IFAIL.NE.0) CALL BKSEPR(IFAIL)
C
C Printout of data cards example for interactive SCANBOOK :
C
 999  IF (IBKINT.EQ.2.AND.IFAIL.NE.5) CALL PRCARD
      IF (IDEBUG.GE.1) CALL BOSTA
C
C Interactive dialogue : ask for rerunning SCANBOOK another time :
C
      IF ((IFAIL.EQ.0.OR.IFAIL.EQ.4.OR.IFAIL.EQ.5).AND.IBKINT.EQ.2)
     +     THEN
         CALL BKSERE(IREDO)
         IF (IREDO.NE.0) THEN
            CALL BKREFI(IER)
            IF (IER.NE.0) GO TO 1000
            CALL BKREDO(IER)
            IF (IER.NE.0) GO TO 1000
         ENDIF
         IF (IREDO.EQ.1) GO TO 200
      ENDIF
 1000 CONTINUE
      RETURN
      END
      SUBROUTINE BKSEHE
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Printout of Header for the beginning of SCANBOOK
C  J. Boucrot 12-Sep-1996
C  Called from BKSEAR                               from BOOKLIB
C  Calls BKINCA                                     from ALEPHLIB
C  Calls CALDAT                                     from CERNLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      CHARACTER CHREP*119,DMYU*14
      INTEGER BKINCA,ISSEL(8)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Put the date in the form dd.MONTH.iyear in DMYU :
      CALL VZERO(ISSEL,8)
      CHREP=' '
      DMYU=' '
      ISSEL(1)=BKINCA(UPDATL(4:5))
      ISSEL(2)=BKINCA(UPDATL(1:2))
      IYY=BKINCA(UPDATL(7:8))
      IF (IYY.LT.10) THEN
         ISSEL(3)=2000+IYY
      ELSE
         ISSEL(3)=1900+IYY
      ENDIF
      CALL CALDAT(101,CHREP,ISSEL,IFCA)
      DMYU=CHREP(1:14)
C Get last run and fill # known from the database :
      JBLAS=IW(NAMIND('BLAS'))
      NFMAX=ITABL(JBLAS,1,JBLALF)
C Write these informations on the output file :
      WRITE (LWRUSR,1004) SCAVER,DMYU,UPTIML
      WRITE (LWRUSR,1005) NRUMAX,NFMAX
      IF (IBKINT.NE.2) GO TO 999
C Now on the terminal, if interactive dialogue :
      LU=LWRINT
      IF (NBREDO.GT.0) GO TO 999
      WRITE (LU,*) '         ****  Welcome to SCANBOOK on UNIX ****'
 1    WRITE (LU,1004) SCAVER,DMYU,UPTIML
      WRITE (LU,1005) NRUMAX,NFMAX
C
 999   RETURN
C-----------------------------------------------------------------------
 1004 FORMAT (/9X,' --- SCANBOOK Version ',A4,' running  ---'/,
     +        /9X,' --- Last update of the Bookkeeping Database '/,
     +        16X,'was done on',2X,A14,' at',2X,A8)
 1005 FORMAT (9X, ' --- Last  Run # known from Online is : ',I6/,
     +        9X, ' --- Last Fill # known from Online is : ',I6/)
       END
      SUBROUTINE BKSEIN(IER,IFAIL)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Preliminary step of SCANBOOK database search
C J.Boucrot  15-Jun-1996
C Called from BKSCAINI
C Calls BKBBUP,BKOPDA,BKRUCA                              from BOOKLIB
C Output arguments:
C    IER  =  1 if search not successful , = 0 otherwise
C  IFAIL  =  reason of failure  , = 0 if all OK
C         =  1 if error when reading the ROOT database
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
      CHARACTER MSG*80
      LOGICAL LEX
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IFAIL=0
      IF (IDSEAR.LE.0) GO TO 999
C Define ILABCH as the default computer , if not yet defined :
      IF (ILABCH.LE.0.OR.ILABCH.GT.NLABOK) THEN
         CALL BKHOMV
         ILABCH=NLABDF
      ENDIF
C On UNIX systems, open the output file on the 1st pass:
      IF (CARDSF .EQ. ' ') CARDSF = 'scanbook'
      MSG = CARDSF(:LNBLNK(CARDSF))//'.output'
   77 INQUIRE (FILE=MSG, EXIST=LEX)
      IF (LEX .AND. IBKINT .EQ. 2) THEN
        WRITE (LWRINT,*) ' File ', MSG(:LNBLNK(MSG)), ' exists already.'
   78   WRITE (LWRINT,*) ' >>>> Please give a new filename for OUTPUT ',
     +                   'FILES for this run '
        CALL BKRDCH(LECINT,1,MSG)
        IF (MSG .EQ. ' ') GOTO 78
        CARDSF = MSG
        MSG = MSG(:LNBLNK(MSG))//'.output'
        GO TO 77
      ENDIF
      OPEN (LWRUSR, FILE=MSG, FORM='FORMATTED', STATUS='NEW', ERR=999)
      ICERCO=1
C
C Open/read the ROOT database ::
C
      CALL BKOPDA('ALEBROOT',IFF)
      IF (IFF.NE.0) GO TO 905
C Fill /BKFILU/ variables from banks BDAD,BPHY,BTHO :
      CALL BKBBUP(IERB)
      IF (IERB.NE.0) GO TO 905
C Find the last Real Data  run # known :
      JBLAS=IW(NAMIND('BLAS'))
      IF (JBLAS.LE.0) GO TO 905
      KBLAS=KROW(JBLAS,1)
      NRUMAX=IW(KBLAS+JBLALO)
      NRULEP=IW(KBLAS+JBLALE)
      GO TO 999
C-----------------------------------------------------------------------
C Error when reading the ROOT database :
 905  IER=1
      IFAIL=1
 999  RETURN
      END
      SUBROUTINE BKSEPR(IFAIL)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Printing of SCANBOOK searching errors
C J.Boucrot  20-Jun-1996
C Called from BKSEAR                                      from BOOKLIB
C Calls PRBHEA                                            from BOOKLIB
C  Input argument :
C  IFAIL  =  Reason of failure , explained below
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER TEXT*80
C-----------------------------------------------------------------------
      IF (IFAIL.LE.0.OR.IFAIL.GT.6) GO TO 999
      IF (IBKINT.LE.0) GO TO 999
      CALL PRBHEA(LWRUSR)
      IF (IFAIL.NE.1) GO TO 200
C No database, or error in the database content,
C or database cannot be read into memory:
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' *      Error in reading the database      *'
      WRITE (LWRUSR,*)  ' * ALEBOOK database absent or corrupted !! *'
      WRITE (LWRUSR,*)  ' * or BOS Common  too small             !! *'
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,1001)
      TEXT=' Error !! SCANBOOK database absent or corrupted !'
      CALL PRWARNX11(TEXT)
      IF (IBKINT.LT.1) GO TO 999
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' *      Error in reading the database      *'
      WRITE (LWRINT,*)  ' * ALEBOOK database absent or corrupted !! *'
      WRITE (LWRINT,*)  ' * or BOS Common  too small             !! *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
      GO TO 999
 200  IF (IFAIL.NE.2) GO TO 300
C BOS common too small for the printout banks :
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' *    Not enough room for BOS Banks        *'
      WRITE (LWRUSR,*)  ' * in the SCANBOOK printout routines    !! *'
      WRITE (LWRUSR,*)  ' * Please resubmit with more selections .. *'
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,1001)
      TEXT=' Error !! Not enough room in BOS banks !'
      CALL PRWARNX11(TEXT)
      IF (IBKINT.LT.1) GO TO 999
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' *    Not enough room for BOS Banks        *'
      WRITE (LWRINT,*)  ' * in the SCANBOOK printout routines    !! *'
      WRITE (LWRINT,*)  ' * Please resubmit with more selections .. *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
      GO TO 999
 300  IF (IFAIL.NE.3) GO TO 400
C Error in the runs/years, or conflict in basic keywords :
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' *      Error in the keywords              *'
      WRITE (LWRUSR,*)  ' * Search of ALEBOOK database not possible *'
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,1001)
      TEXT=' Error in selections : SCANBOOK cannot run !!'
      CALL PRWARNX11(TEXT)
      IF (IBKINT.LT.1) GO TO 999
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' *      Error in the keywords              *'
      WRITE (LWRINT,*)  ' * Search of ALEBOOK database not possible *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
      GO TO 999
 400  IF (IFAIL.NE.4) GO TO 500
C Nothing found during trhe search :
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' * No datasets have been found on database *'
      WRITE (LWRUSR,*)  ' * matching your selections . Sorry !      *'
      WRITE (LWRUSR,*)  ' *******************************************'
      IF (IBKINT.LT.1) GO TO 999
      WRITE (LWRINT,1001)
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' * No datasets have been found on database *'
      WRITE (LWRINT,*)  ' * matching your selections . Sorry !      *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
      GO TO 999
 500  IF (IFAIL.NE.5) GO TO 600
C User abort during the interactive dialogue :
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' * User abort .  SCANBOOK terminated  !    *'
      WRITE (LWRUSR,*)  ' *******************************************'
      IF (IBKINT.LT.1) GO TO 999
      WRITE (LWRINT,1001)
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' * User abort .  SCANBOOK terminated  !    *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
      GO TO 999
 600  IF (IFAIL.NE.6) GO TO 999
C Problem with EDIRs lists :
C  On UNIX:
C List of files and EDIRS not available :
C
      LUN=LWRUSR
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,*) ' ** Printout of UNIX Disk Files not possible *'
      WRITE (LUN,*) ' **  no list of files and EDIRS              *'
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,1001)
      TEXT=' Error !! No list of EDIR files on this UNIX machine !!'
      CALL PRWARNX11(TEXT)
      IF (IBKINT.LT.2) GO TO 999
      LUN=LWRINT
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,*) ' ** Printout of UNIX Disk Files not possible *'
      WRITE (LUN,*) ' **  no list of files and EDIRS              *'
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,1001)
 999  RETURN
 1001 FORMAT (/)
      END
      SUBROUTINE BKSEPRDK(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Prepare and cleanup banks before search
C J.Boucrot  01-Oct-1996
C Called from BKSEXQ                                      from BOOKLIB
C Calls BKOPDA,BKOPYD,BKFPER                              from BOOKLIB
C Calls BGARB,NDROP,BDROP,NLINK                           from BOS77
C Output arguments:
C    IER  =  1 if problem with a database ; =0 if all OK
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-----------------------------------------------------------------------
      IER=0
      IF (IDSEAR.EQ.3.OR.IDSEAR.EQ.5.OR.IDSEAR.EQ.8) GO TO 240
C If multiple interactive successive runs , check if the correct 'BDFS'
C is still in memory ; if not , read 'ALEBROOT' again :
      JBDF=NLINK('BDFS',IMCDAT)
      IF (JBDF.EQ.0) THEN
         CALL BKOPDA('ALEBROOT',IFF)
         IF (IFF.NE.0) GO TO 905
      ENDIF
C Drop all possible unused big banks to save space in the BOS array :
      IF (IBKINT.EQ.-1) GO TO 999
      IF (IMCDAT.EQ.1) THEN
         IND=NDROP('BDFS',2)
      ELSE
         IND=NDROP('BDFS',1)
         CALL BDROP(IW,'BRUC')
      ENDIF
      CALL BGARB(IW)
      IF (IBKINT.EQ.-1) GO TO 999
C Open/read the adequate year or MCarlo database for input = CARDS :
      IF (IBKINT.NE.1) GO TO 240
      IF (IMCDAT.EQ.1) THEN
         CALL BKOPYD(IER)
         IF (IER.NE.0) GO TO 905
      ELSE
         CALL BKOPDA('ALEBMCAR',IFAIL)
         IF (IFAIL.NE.0) GO TO 905
      ENDIF
 240  CONTINUE
C For MCarlo , if a KINGAL code is selected drop all other periods :
      IF (IMCDAT.NE.2.OR.KINCOD.EQ.0) GO TO 245
      JBSET=NAMIND('BSET')+1
 242  JBSET=IW(JBSET-1)
      IF (JBSET.EQ.0) GO TO 244
      NPER=IW(JBSET-2)
      IF (NPER.EQ.KINCOD) GO TO 242
      IND=NDROP('BSET',NPER)
      IND=NDROP('BSPF',NPER)
      IND=NDROP('BRLI',NPER)
      IND=NDROP('BTPN',NPER)
      IND=NDROP('BPRO',NPER)
      GO TO 242
 244  CALL BGARB(IW)
C For real data , drop unused 'BRUC' banks :
 245  IF (IMCDAT.NE.1) GO TO 250
      CALL BKFPERD(NPMIN,NPMAX,IERD)
      IF (IERD.NE.0) GO TO 250
      JBRUC=NAMIND('BRUC')+1
 247  JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 248
      NPBR=IW(JBRUC-2)
      IF (NPBR.GE.NPMIN.OR.NPBR.LE.NPMAX) GO TO 247
      IND=NDROP('BRUC',NPBR)
      GO TO 247
 248  CALL BGARB(IW)
 250  CONTINUE
      GO TO 999
C -- Error when reading the database :
 905  IER=1
 999  RETURN
      END
      SUBROUTINE BKSERE(IREDO)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Interactive dialogue to ask to redo SCANBOOK
C J.Boucrot  20-Jun-1996
C Called from BKSEAR                                      from BOOKLIB
C Calls BKRDCH                                            from BOOKLIB
C Output argument :
C  IREDO  =  1 if SCANBOOK has to be rerun ; = 0 otherwise
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LET1*1
C-----------------------------------------------------------------------
      IREDO=0
      CALL PTO
      WRITE (LWRINT,*)  ' === Do you want to run SCANBOOK again ?'
      WRITE (LWRINT,*)  '     Reply Y/N   <CR> = NO '
      CALL BKRDCH(LECINT,2,LET1)
      CALL CLTOU(LET1)
      IF (LET1.NE.'Y') GO TO 999
      IREDO=1
 999  RETURN
      END
      SUBROUTINE BKSESP(IER,IFAIL)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Special manager's executions of SCANBOOK
C J.Boucrot  15-Jun-1996
C Called from BKSCAINI
C Calls BKOPDA,BKLIST,BKVEHO                              from BOOKLIB
C Calls PRBHEA,PRPROC,PRPERS                              from BOOKLIB
C Output arguments:
C    IER  =  1 if search not successful , = 0 otherwise
C  IFAIL  =  0 if all OK
C         =  2 if no room for BOS banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-----------------------------------------------------------------------
      IER=0
      IFAIL=0
C special manager's debug :
C
      IF (IDSEAR.EQ.9.OR.IDSEAR.EQ.10) THEN
         DO 5 NDB=2,NDBTOT
 5       CALL BKOPDA(PERDBS(NDB),IERL)
      ENDIF
      IF (IDSEAR.EQ.9) THEN
         CALL PRBHEA(LWRUSR)
         CALL PRPROC(LWRUSR)
         CALL PRPERS(LWRUSR)
         CALL BKLIST(LWRUSR,'E')
         CALL BKLIST(LWRUSR,'T')
         GO TO 999
      ENDIF
C Special listing of all Homelab Copies :
      IF (IDSEAR.EQ.10) THEN
         CALL BKVEHO(1,2,IERV)
         IF (IERV.NE.0) GO TO 907
         CALL BKVEHO(2,2,IERV)
         IF (IERV.NE.0) GO TO 907
         GO TO 999
      ENDIF
      GO TO 999
C Not enough room in BOS banks :
 907  IER=1
      IFAIL=2
 999  RETURN
      END
      SUBROUTINE BKSEVR(IER,IFAIL)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Verifies and defines some quantities before SCANBOOK search
C J.Boucrot  15-Jun-1996
C Called from BKSCAINI
C Calls BKPOIN,BKLEPL                                     from BOOKLIB
C Calls ALSTIN                                            from ALEPHLIB
C Output argument :
C    IER  =  1 if something fails , = 0 otherwise
C  IFAIL  =  0 if all OK
C         =  2 if error in the year or MC database ( bank missing )
C         =  3 if error in the selections
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER MSG*80
      LOGICAL LEX
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IF (IDSEAR.LE.0) GO TO 999
      IER=0
      IFAIL=0
C
      IF (IBKINT.EQ.1) THEN
         IF (IDSEAR.LT.1.OR.IDSEAR.GT.8) IDSEAR=100
         IF (IDSEAR.EQ.4.AND.IMCDAT.EQ.0) GO TO 910
      ENDIF
C Check if the database is OK :
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 905
C Find the date/time of last database update   :
      CALL BKPOIN(LECDAF,'BDAT',1,JBDAT)
      IF (JBDAT.LE.0) GO TO 10
      LBD=LROWS(JBDAT)
      KBDAT=KROW(JBDAT,LBD)
      CALL ALSTIN(IW(KBDAT+JBDADU),2,UPDATL)
      CALL ALSTIN(IW(KBDAT+JBDATU),2,UPTIML)
 10   CONTINUE
C Find the last Real Data  run # known :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 905
      KBLAS=KROW(JBLAS,1)
      NRUMAX=IW(KBLAS+JBLALO)
      NRULEP=IW(KBLAS+JBLALE)
C Verify runs/years if input CARDS :
      IF (IMCDAT.EQ.2) THEN
         ISRUNF=1
         ISRUNL=LRUNMC
      ELSE
         IF (IBKINT.EQ.1) THEN
            CALL BKRUCA(IERC)
            IF (IERC.NE.0) GO TO 910
         ENDIF
      ENDIF
C MINI and NANO last version numbers :
      JBLAS=IW(NAMIND('BLAS'))
      IF (JBLAS.GT.0) THEN
         MINLAS=ITABL(JBLAS,1,JBLAMI)
         NANLAS=ITABL(JBLAS,1,JBLANA)
      ENDIF
C If input = CARDS : find the list of LEP energies
 100  IF (IBKINT.EQ.1.AND.IDSEAR.NE.8) CALL BKLEPL
C If the selection of Physics Group was passed through SELPHY, determine
      IF (SELPHY.NE.' '.AND.SELPHY.NE.'PE') THEN
         CALL BKGROU(SELPHY,IGR)
         IF (IGR.NE.0) IPHYGR=IGR
      ENDIF
      IF (IBKINT.EQ.1.AND.IMCDAT.EQ.1) THEN
         CALL BKPGVAL
         CALL BKLEPL
         lphy=lnblnk(phykey)
         if (lphy.eq.2) call bkgrou(selphy,iphygr)
      ENDIF
      GO TO 999
C-----------------------------------------------------------------------
C Errors :
C ---  Bank missing in the database :
 905  IER=1
      IFAIL=1
      GO TO 999
C ---  Error in the previous selections:
 910  IER=1
      IFAIL=3
 999  RETURN
      END
      SUBROUTINE BKSEXQ(IER,IFAIL)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Executes the Searching of the SCANBOOK database
C J.Boucrot  15-Jun-1996
C Called from BKSEAR                                      from BOOKLIB
C Calls BKDASEL,BKVERAL,BKSEPRDK,PROPT2                   from BOOKLIB
C Calls PRDSET,PROPT3,PRSRUN,PRIPRO,PRBHEA                from BOOKLIB
C Output arguments:
C    IER  =  1 if search not successful , = 0 otherwise
C  IFAIL  =  reason of failure
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-----------------------------------------------------------------------
      IF (IDSEAR.LE.0.OR.IDSEAR.GT.8) GO TO 910
      IER=0
      IOPT=0
      NFOUN=0
      IFAIL=0
      FICARD=' '
C Definition and verification of some important flags :
      IF (IDSEAR.EQ.8) GO TO 300
      CALL BKDASEL
      CALL BKVERAL(IER)
      IF (IER.NE.0) GO TO 910
C Read the adequate database for IBKINT = 1 ( input = CARDS )
C prepare and cleanup dataset banks before the search :
      CALL BKSEPRDK(IER)
      IF (IER.NE.0) GO TO 905
C Issue a warning for jobs with input CARDS file :
      IF (IBKINT.EQ.1) THEN
         WRITE (LWRINT,*) ' SCANBOOK processes your request'
         WRITE (LWRINT,1002)  CARDSF(:LNBLNK(CARDSF))
      ENDIF
C Print the summary of search conditions on the output file :
 300  CALL PRBHEA(LWRUSR)
C-----------------------------------------------------------------------
C For all options , perform the requested task
C
C Search for disk files ( Option 2 )
      IF (IDSEAR.EQ.2) THEN
         CALL PROPT2(NFOUN,IER)
         IF (IER.NE.0) GO TO 950
C Informations on runs , luminosity , events ,Online logbook :
      ELSEIF (IDSEAR.EQ.3) THEN
         CALL PROPT3(0,ISRUNF,ISRUNL,NFOUN)
C Search for 1 Cartridge or 1 run ( Option 5 ) :
      ELSEIF (IDSEAR.EQ.5) THEN
         CALL PROPT5(NFOUN,IER)
C Summary printout for cartridge statistics :
      ELSEIF (IDSEAR.EQ.8) THEN
         CALL PRIPRO
         IER=0
         GO TO 999
C Dataset search through Options 1 , 4 or 7 :
      ELSE
         ISS=IDSEAR
         CALL PRDSET(IOPT,ISS,NFOUN,IER)
      ENDIF
      IF (ISCQUI.EQ.1) GO TO 940
      IF (IER.EQ.1) GO TO 907
      IF (IER.EQ.2) GO TO 950
C-----------------------------------------------------------------------
C Print the list of runs as SRUN card , if requested :
 800  IF ( NFOUN.LE.0) GO TO 930
      CALL PRSRUN(1)
      IER=0
      GO TO 999
C-----------------------------------------------------------------------
C Errors :
C -- Error when reading the Year database :
 905  IER=1
      IFAIL=1
      GO TO 999
C -- BOS common too small :
 907  IER=1
      IFAIL=2
      GO TO 999
C -- Error in the input keywords :
 910  IER=1
      IFAIL=3
      GO TO 999
C -- No datasets found :
 930  IFAIL=4
      GO TO 999
C -- User's abort during the interactive dialogue :
 940  IFAIL=5
      GO TO 999
C -- No list of EDIR files found :
 950  IFAIL=6
C
C-----------------------------------------------------------------------
 999  IF (IBKINT.EQ.-1)  THEN
         CLOSE(LWRUSR)
         CLOSE(LWRSRU)
         CLOSE(LWRFIL)
         nbredo=nbredo+1
      ENDIF
C     CALL PRPSYS
      RETURN
 1002 FORMAT (' according to your file ',A,'.cards')
      END
      SUBROUTINE BKSKEY(IERSK)
C ----------------------------------------------------------------------
CKEY STEER
C! Fills search keys for BOOKKEEPING jobs with Input Cards
C  J. Boucrot   20-May-1989
C  Modified  AM. Lutz      30-Mar-1990   ;  J . Boucrot 25-Jun-1990
C  Calls ACARD1,ACARD2,BKINCA,BKCARI,ALSTIN         from ALEPHLIB
C  Calls CLTOU                                      from KERNLIB
C  Calls BKCASI,BKKYIN                              from BOOKLIB
C  Called from BKINAL                               from BOOKLIB
C Input : BOS data cards defining the SCANBOOK or TAPES running
C         conditions ( user-provided , or generated by the execs )
C Output argument : IERSK = 0 if all OK
C                         = 1 if severe syntax error in data cards
C The selections are stored in variables of the common / BKKEYS /
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      PARAMETER ( LNTAP = 6 )
      INTEGER ACARD1,ACARD2,BKINCA
      CHARACTER PARM1*30,FTAP*6,PARM2*6,PREF*2,STAP*4
      CHARACTER  BNAME*4,MSG*80,PARM3*80,KEY*20,PARAM*20
C ----------------------------------------------------------------------
      IERSK=0
      IF (IDSEAR.EQ.0) GO TO 999
C Data cards to explicit the SCANBOOK search options :
      CALL BKCASI(IERC)
      IF (IERC.NE.0) THEN
         IERSK=1
         GO TO 999
      ENDIF
      IF (IDSEAR.GT.8) GO TO 999
      IF (IDSEAR.EQ.3) IPRONL=1
C ----------------------------------------------------------------------
C Decode the 'SCOU' data card to decode the SCANBOOK Output conditions :
C
C Example of syntax :
C  SCOU  'FILI_Cards = Yes | EDIR = No | SRUN_Cards = Yes '
C        'Sorted_by_LEP = Yes | Printout_Level = 3 | Opt3_display = 3'
C
 20   IF (ACARD1('SCOU').EQ.0) GO TO 30
      NPAR=0
 25   NPAR=NPAR+1
      CALL BKKYIN(NPAR,IOK,KEY,PARAM)
      IF (IOK.EQ.0) GO TO 30
C FILI_Cards :
      IF (KEY(1:1).EQ.'F') THEN
         IF (PARAM(1:1).NE.'N')  IWFILI=1
      ELSEIF ( KEY(1:1).EQ.'E')  THEN
         IF (PARAM(1:1).NE.'N')  IWFILI=2
      ELSEIF ( KEY(1:2).EQ.'SR')  THEN
         IF (PARAM(1:1).NE.'N')  IPSROU=1
      ELSEIF ( KEY(1:2).EQ.'IR')  THEN
         IF (PARAM(1:1).NE.'N')  IPSROU=10
      ELSEIF ( KEY(1:2).EQ.'SO')  THEN
         IF (PARAM(1:1).NE.'N')  ISORLE=1
      ELSEIF ( KEY(1:1).EQ.'O')  THEN
         IPRONL=BKINCA(PARAM)
      ELSEIF ( KEY(1:1).EQ.'P')  THEN
         IBPRUS=BKINCA(PARAM)
      ENDIF
      GO TO 25
C-----------------------------------------------------------------------
C Look for BDLI card to give a list of dataset names :
C Ex of syntax :  BDLI   'MPOTEA89.20233445,DRAWEO90.10955678'
C
 30   IF (ACARD1('BDLI').EQ.0) GO TO 70
      NPAR=1
      IKEYOK=IKEYOK+1
 65   IF (ACARD2(NPAR,PARM1).EQ.0) GO TO 70
      CALL CLTOU(PARM1)
      NDSNKY=NDSNKY+1
      LISDSN(NDSNKY)=PARM1
      NPAR=NPAR+1
      GO TO 65
 70   CONTINUE
C
C Look for BTLI card to give a list of tape/cartridges names :
C Ex of syntax :  BTLI   'AC3207|AR4422|AZ9901'
C    or for consecutive tapes : BTLI ' AC1001 | TO | AC1200'
C
 80   IF (ACARD1('BTLI').EQ.0) GO TO 170
      NPAR=1
      IKEYOK=IKEYOK+1
 165  IF (ACARD2(NPAR,PARM1).EQ.0) GO TO 170
      CALL CLTOU(PARM1)
C Exabyte with file # given : AXnnnn.ij
      IDOT=INDEX(PARM1,'.')
      IF (IDOT.GT.0) THEN
         LLUS=LNBLNK(PARM1)
         NTAPKY=1
         LISTAP(NTAPKY)(1:6)=PARM1(IDOT-6:IDOT-1)
         LISDSN(NTAPKY)=PARM1(IDOT+1:LLUS)
         GO TO 170
      ENDIF
C Consecutives tapes from tape1 TO tape2 :
      IF (PARM1.EQ.'TO') THEN
         IK=ACARD2(NPAR+1,PARM2)
         CALL CLTOU(PARM2)
         IF (IK.EQ.0) GO TO 980
         IF (LNBLNK(PARM2).NE.LNTAP) GO TO 980
         PREF=FTAP(1:2)
         IF (PARM2(1:2).NE.PREF) GO TO 980
         IFTAP=BKINCA(FTAP(3:LNTAP))
         ILTAP=BKINCA(PARM2(3:LNTAP))
         NTAPKY=ILTAP-IFTAP+1
         IF (NTAPKY.LE.0) GO TO 980
         IF (NTAPKY.GT.NTPMX) GO TO 970
         ITAP=IFTAP
         DO 120 IT=1,NTAPKY
            CALL BKCARI(ITAP,4,STAP)
            LISTAP(IT)=PREF//STAP
            ITAP=ITAP+1
 120     CONTINUE
         GO TO 170
C
C Normal input : next parameter = next tape name
      ELSE
         IF (LNBLNK(PARM1).NE.LNTAP) GO TO 980
         NTAPKY=NTAPKY+1
         IF (NTAPKY.GT.NTPMX) GO TO 970
            LISTAP(NTAPKY)=PARM1
         NPAR=NPAR+1
         FTAP=PARM1
         GO TO 165
      ENDIF
 170  CONTINUE
      GO TO 999
C-----------------------------------------------------------------------
C Syntax Errors  in data cards :
C
 970  BNAME='BKSKEY'
      MSG=' Too many tapes defined by the data cards : max = 1000'
      IERSK = 1
      GO TO 995
 980  BNAME='BTLI'
 990  NTAPKY=0
      IERSK = 2
      MSG=' Syntax error in data cards detected in BKSKEY'
 995  CALL BKMESG(BNAME,0,MSG)
C
 999  RETURN
      END
      SUBROUTINE BKSLUL(NRUNF,ILUQ,NUMB,BLUM,BCKG,BTEW,IER)
C --------------------------------------------------------------
CKEY UPDABOOK UPDADBS
C - J.Boucrot 11-Jan-1993
C! fill the intermediate bank SLUL ( SICAL luminosity )
C  Called from BKLUFI                            from  BOOKLIB
C  Calls AUBOS                                   from ALEPHLIB
C
C - Input     : NRUNF    / INTE   = run number
C               ILUQ     / INTE   = Sical Lumi Quality
C               NUMB     / INTE   = number of Bhabhas
C               BLUM     / REAL   = best luminosity
C               BCKG     / REAL   = number of background bhabhas
C               BTEW     / REAL   = Electroweak correction
C - Output    : IER      / INTE   = 0 if all OK
C                                   1 if not enough space for bank
C ----------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------
C - get the bank pointer , build a new bank if necessary :
C
      IER=0
      JSLUL=NLINK('SLUL',NRSLUL)
      IF (LROWS(JSLUL).GE.MXSLUL) THEN
         NBASLU=NBASLU+1
         NRSLUL=NRUNF
         LMSLU=LMHLEN+MXSLUL*LRSLUA
         CALL AUBOS('SLUL',NRSLUL,LMSLU,JSLUL,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JSLUL+LMHCOL)=LRSLUA
         IW(JSLUL+LMHROW)=0
      ENDIF
C - fill one row
      IROW=LROWS(JSLUL)+1
      KSLUL = KROW(JSLUL,IROW)
      IW(KSLUL+JRSLRN) = NRUNF
      IW(KSLUL+JRSLLQ) = ILUQ
      IW(KSLUL+JRSLNB) = NUMB
      RW(KSLUL+JRSLLU) = BLUM
      RW(KSLUL+JRSLBK) = BCKG
      RW(KSLUL+JRSLEW) = BTEW
      IW(JSLUL+LMHROW)=IROW
C - sort SLUL in ascending order of run number
      CALL SORTIQ(IW(JSLUL+LMHLEN+1),LCOLS(JSLUL),LROWS(JSLUL),
     &               JRSLRN)
C
      GO TO 999
C - no room for bank :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKSL4B(NRUNF,ILUQ,NBHLO,XLULO,XBALO,IER)
C --------------------------------------------------------------
CKEY UPDABOOK UPDADBS
C - J.Boucrot 11-Oct-1995
C! fill the intermediate bank S4BU ( SICAL Multibunch lumi )
C  Called from BKLUS4                            from  BOOKLIB
C  Calls AUBOS                                   from ALEPHLIB
C
C - Input     : NRUNF    / INTE   = run number
C               ILUQ     / INTE   = Sical Lumi Quality
C               NBHLO(4) / INTE   = number of Bhabhas per bunch
C               XLULO(4) / REAL   = best luminosity per bunch
C               XBALO(4) / REAL   = number of backg. bhabhas per bunch
C - Output    : IER      / INTE   = 0 if all OK
C                                   1 if not enough space for bank
C ----------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- RLUFIL ----
      COMMON / RLUFIL / NRRLUL,NBARLU,MXRLUL,NRLFUL,NBALFU,MXLFUL,
     +                  NXYZUL,MXYZUL,NBALXY,NRSLUL,MXSLUL,NBASLU,
     +                  NRS4BU,MXS4BU,NBAS4B,TOLPCU,MINRSI,MINR4B
C-- RS4BJJ ----
      PARAMETER(JRS4RN=1,JRS4LQ=2,JRS4B1=3,JRS4L1=4,JRS4K1=5,JRS4B2=6,
     +          JRS4L2=7,JRS4K2=8,JRS4B3=9,JRS4L3=10,JRS4K3=11,
     +          JRS4B4=12,JRS4L4=13,JRS4K4=14,LRS4BA=14)
      INTEGER NBHLO(4)
      REAL XLULO(4),XBALO(4)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------
C - get the bank pointer , build a new bank if necessary :
C
      IER=0
      JS4BU=NLINK('S4BU',NRS4BU)
      IF (LROWS(JS4BU).GE.MXS4BU) THEN
         NBAS4B=NBAS4B+1
         NRS4BU=NRUNF
         LMS4B=LMHLEN+MXS4BU*LRS4BA
         CALL AUBOS('S4BU',NRS4BU,LMS4B,JS4BU,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JS4BU+LMHCOL)=LRS4BA
         IW(JS4BU+LMHROW)=0
      ENDIF
C - fill one row
      IROW=LROWS(JS4BU)+1
      KS4BU = KROW(JS4BU,IROW)
      IW(KS4BU+JRS4RN) = NRUNF
      IW(KS4BU+JRS4LQ) = ILUQ
      DO 100 IKK=1,4
         IW(KS4BU+3) = NBHLO(IKK)
         RW(KS4BU+4) = XLULO(IKK)
         RW(KS4BU+5) = XBALO(IKK)
         KS4BU=KS4BU+3
 100  CONTINUE
      IW(JS4BU+LMHROW)=IROW
C - sort S4BU in ascending order of run number
      CALL SORTIQ(IW(JS4BU+LMHLEN+1),LCOLS(JS4BU),LROWS(JS4BU),
     &               JRS4RN)
C
      GO TO 999
C - no room for bank :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKSLUM(IMODE,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads special file of LUMINOSITY updates for SICAL luminosity
C  stores informations in bank 'BSLU'
C  J. Boucrot  11-Jan-1993
C  Modified  24-May-1993 to get data from data files through / SIBHS /
C  Called from BKMODD
C  Calls BKFPER,BKPOIN                               from BOOKLIB
C  Calls AUBOS                                       from ALEPHLIB
C  Input argument :
C    IMODE = 1  if information read from SICAL expert file
C    IMODE = 2 if information transmitted through common / SIBHA /
C  Output argument  :
C    IER  =  1 if no room to book banks
C    IER = 2 if no update done for IMODE = 2
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
      COMMON / SIBHA / NRUSIC,ILUQSI,NBHASI,SLUSIC,BACKSI,BTEWSI
      PARAMETER ( NONL = 100 )
      CHARACTER INFO*132
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      INOLU=0
      BACK=0.
      BTEW=1.
C the first record was already read in BKMODD :
      IREC=1
      IF (IMODE.EQ.2) GO TO 3
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C
C Read the input file :
C
 3    IF (IMODE.EQ.2) GO TO 40
 5    READ ( LECTXT, '(A132)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
C Decode the information of lumi :
 30   READ ( INFO , 1001 ) NRUN,ILUQ,NBHAB,SLUM,BACK,BTEW
      IF (ILUQ.LE.0.OR.SLUM.LE.0.) GO TO 5
      GO TO 60
C Infos from / SIBHA / :
 40   IF (ILUQSI.NE.1) GO TO 999
      NRUN=NRUSIC
      ILUQ=ILUQSI
      NBHAB=NBHASI
      SLUM=SLUSIC
      BACK=BACKSI
      BTEW=BTEWSI
 60   CONTINUE
      CALL BKFPER(NRUN,0,NPER)
      IF (NPER.LE.0) GO TO 5
      CALL BKPOIN(LECDAF,'BSLU',NPER,JBSLU)
      IF (JBSLU.LT.0) GO TO 900
      IF (JBSLU.EQ.0) GO TO 90
      NSLU=LROWS(JBSLU)
      IF (NSLU.LE.0) GO TO 90
      IOLD=0
C
      DO 80 IRO=1,NSLU
         IF (ITABL(JBSLU,IRO,JRSLRN).NE.NRUN) GO TO 80
C If this run was already in 'BSLU' , this is an update :
C store the new , modified informations :
         KRUO=KROW(JBSLU,IRO)
C Protect against dilepton files :
         NOLBH=IW(KRUO+JRSLNB)
         SOLBH=RW(KRUO+JRSLLU)
         IF (SLUM.LE.0..AND.SOLBH.GT.0.) IOLD=-1
         IF (NBHAB.LE.0.AND.NOLBH.GT.0)  IOLD=-1
         IF (IOLD.EQ.-1) THEN
            WRITE ( LWRDBG,1102) NRUN,NBHAB,NOLBH,SLUM,SOLBH
            IF (IMODE.EQ.2) THEN
               IER=2
               GO TO 800
            ELSE
               GO TO 5
            ENDIF
         ENDIF
         IW(KRUO+JRSLRN)=NRUN
         IW(KRUO+JRSLLQ)=ILUQ
         IW(KRUO+JRSLNB)=NBHAB
         RW(KRUO+JRSLLU)=SLUM
         RW(KRUO+JRSLBK)=BACK
         RW(KRUO+JRSLEW)=BTEW
         IOLD=1
         GO TO 81
 80   CONTINUE
 81   IF (IOLD.EQ.1) GO TO 600
C
C This run was not yet known in BSLU : increase the bank
C and store the info
C
 90   IOLR=0
      IF (JBSLU.EQ.0) THEN
         LENB=LRSLUA*NONL+LMHLEN
      ELSE
         IOLR=LROWS(JBSLU)
         IF (LFRROW(JBSLU).GT.1) GO TO 410
         LENB=IW(JBSLU)+LRSLUA*NONL
      ENDIF
C Book or enlarge 'BSLU' if needed :
      CALL AUBOS('BSLU',NPER,LENB,JBSLU,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBSLU+LMHCOL)=LRSLUA
 410  IW(JBSLU+LMHROW)=IOLR+1
C
      LRO=LROWS(JBSLU)
      KRUO=KROW(JBSLU,LRO)
      IW(KRUO+JRSLRN)=NRUN
      IW(KRUO+JRSLLQ)=ILUQ
      IW(KRUO+JRSLNB)=NBHAB
      RW(KRUO+JRSLLU)=SLUM
      RW(KRUO+JRSLBK)=BACK
      RW(KRUO+JRSLEW)=BTEW
C
 600  WRITE ( LWRDBG , 1101 ) NRUN,NBHAB,SLUM
      NMODIF=NMODIF+1
      INOLU=INOLU+1
      LENBOK=LENBOK+1
      IF (IMODE.EQ.1) GO TO 5
C
 800  CONTINUE
C If any modif done , book bank 'BADB' to trigger BKLUFI execution :
      IF (INOLU.LE.0) GO TO 999
      CALL AUBPRS('BSLU')
      CALL AUBOS('BADB',1,0,JBADB,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      GO TO 999
C
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (1X,I6,2(5X,I4),3(3X,F9.5))
 1100 FORMAT (/2X,'=== Subroutine BKSLUM ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1101 FORMAT (7X,'+++ BKSLUM UPDATE RUN,Bhabs,SICAL Lumi =',2I8,F9.5)
 1102 FORMAT (7X,'>> BKSLUM : NO UPDATE for run ',I6,
     +        ' ** NBHAB new,old =',2i6,' ** Lumi new, old =',2F10.4)
      END
      SUBROUTINE BKSORT(NAME,NPER,IADSO,IER)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Sorts a Bookkeeping bank in increasing order of
C  the quantity stored at address IADSO in the bank
C J. Boucrot  03-11-1989
C Calls BKPOIN                                      from BOOKLIB
C Calls ALSTIN                                      from ALEPHLIB
C Calls SORTZV                                      from KERNLIB
C Calls WBANK,BKFRW,WDROP                           from BOSLIB
C  Input arguments :
C   NAME = name of the bank to be sorted
C   NPER = period number
C  IADSO = relative address ( inside a row ) of the quantity
C          for which the sorting has to be done
C  Output argument :
C   IER = 0
C   IER = 2 NO room for work banks  ,  = 1 bank doesn't exist
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER VSNTA*8,NAME*4
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Check input arguments :
      IER=0
      JBLIN=0
      JBLOU=0
      JBCOP=0
      CALL BKPOIN(0,NAME,NPER,JBANK)
      IF (JBANK.LE.0) GO TO 990
      IADTO=IADSO
      IF (NAME.EQ.'BCAR') IADTO=1
      LICOL=LCOLS(JBANK)
      LIROW=LROWS(JBANK)
      IF (LIROW.LE.1) GO TO 990
      IF (IADTO.LE.0.OR.IADTO.GT.LIROW) GO TO 990
C Initialization of work banks :
      LECOP=LMHLEN+LIROW*LICOL
      CALL WBANK(IW,JBLIN,LIROW,*995)
      CALL WBANK(IW,JBLOU,LIROW,*995)
      CALL WBANK(IW,JBCOP,LECOP,*995)
      IW(JBCOP+LMHROW)=LIROW
      IW(JBCOP+LMHCOL)=LICOL
C Fill JBLIN with the array of numbers to be sorted :
      DO 100 IS=1,LIROW
         IF (NAME.NE.'BCAR') THEN
            IW(JBLIN+IS)=ITABL(JBANK,IS,IADTO)
         ELSE
            KBCAR=KROW(JBANK,IS)
            CALL ALSTIN(IW(KBCAR+JBCAVS),2,VSNTA)
            IW(JBLIN+IS)=BKINCA(VSNTA(3:6))
         ENDIF
 100  CONTINUE
C Fill JBLOU with the addresses ( in JBLIN ) of sorted quantities :
      CALL SORTZV(IW(JBLIN+1),IW(JBLOU+1),LIROW,-1,0,0)
C Fill JBCOP with sorted quantities :
      DO 500 IK=1,LIROW
         IFROM=IW(JBLOU+IK)
         KBIN=KROW(JBANK,IFROM)
         KBOU=KROW(JBCOP,IK)
         CALL UCOPY(IW(KBIN+1),IW(KBOU+1),LICOL)
 500  CONTINUE
C Swap JBCOP and the initial bank :
      CALL BKFRW(IW,NAME,NPER,IW,JBCOP,*995)
      GO TO 999
C
C Inconsistency in input arguments :
C
 990  IER=1
      GO TO 999
C No room for work banks :
 995  IER=2
C Drop all the work banks :
 999  CONTINUE
      IF(JBLIN.NE.0) CALL WDROP(IW,JBLIN)
      IF(JBLOU.NE.0) CALL WDROP(IW,JBLOU)
      IF(JBCOP.NE.0) CALL WDROP(IW,JBCOP)
C
      END
      SUBROUTINE BKSPLI
C----------------------------------------------------------------------
CKEY SPLIDBAS
C! Splits the ALEBOOK NEWSEQ file into YEAR databases
C  Author J.Boucrot 17-Feb-1992
C  UNIX Version 06-Oct-1995
C Called from BKDOAL                            from BOOKLIB
C Calls AUBOS,AOPEN,AOPENW,AUBLIS,ACLOSE        from ALEPHLIB
C Calls BKWSPL,BKERRF,BKUPBB,BKINFM             from BOOKLIB
C Calls BDROP,BGARB,BREAD,BWRITE,BOSTA          from BOS77
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      COMMON / EPCOMM / NMUNIT,NWUNIT,NCONT,ISTART,LASTUT,
     +                  LREF,LIST(500)
      PARAMETER ( NLUST = 40 )
      CHARACTER*60 FINC(20),FOUE(20)
      CHARACTER SPLIDOUT*60
      CHARACTER MSG*80,DISM*4,CHAINT*4,LISTK*120
      INTEGER IWOK(20)
C-----------------------------------------------------------------------
C
C INCREASE DEFAULT NUMBER OF EPIO UNITS...
      NMUNIT=15
C
C General initialisations on first pass :
C
C Open the output debug file and the list of year databases :
      SPLIDOUT=' '
      SPLIDOUT=ALS_STAT(1:ILSTAT)//'splidbas.debugout'
      SPLIDOUT=SPLIDOUT(1:LNBLNK(SPLIDOUT))
      CALL SYSTEM(' rm -f '//SPLIDOUT)
      OPEN ( LWRDBG , FILE = SPLIDOUT , STATUS = 'NEW' , ERR = 911 )
      MSG=' '
      MSG=ALS_REFR(1:ILREFR)//'aleyears.filelist'
      MSG=MSG(1:LNBLNK(MSG))
      CALL SYSTEM(' rm -f '//MSG)
      OPEN ( LWRCAR , FILE = MSG , STATUS = 'NEW' , ERR = 911 )
C
C If a bank 'RDAD' was read in BKADSD , replace 'BDAD' by it :
C
      CALL BKUPBB(IERB)
      IF (IERB.NE.0) GO TO 911
C
C Build the year databases in CARDS format :
C
      CALL VZERO(IWOK,20)
      DO 500 IDB=1,NDBTOT
         CALL BKWSPL(IDB,IFAIL)
         IF (IFAIL.EQ.0) IWOK(IDB)=1
         IF (IFAIL.NE.0)  THEN
            IF (IBAUTO.EQ.0) PRINT 1001,IDB
            WRITE ( LWRDBG,1001 ) IDB
            GO TO 500
         ENDIF
 500  CONTINUE
      CALL BDROP(IW,'R')
      CALL BKINFM
      LISTK=' '
      LISTK='BPROBRLIBSETBSPFBTPNBDATBPERBRUCBDFSBOFS'//
     +      'BKLIBRANBLPRBLASBMCLBPHYBDADBPLIBYEABSLU'//
     +      'BKMCBKMDBKMNBDRQBS4BBSCLBTHOBKM7BRDL    '
      CALL BDROP(IW,LISTK)
      CALL BGARB(IW)
C
C Transform them now in EPIO files :
C
      DO 700 IDE=1,NDBTOT
         IF (IWOK(IDE).EQ.0) GO TO 700
         LINC=NLUST+IDE-1
         LOUE=LINC+NDBTOT+2
         FINC(IDE)=' '
         FINC(IDE)=ALS_TEMP(1:ILTEMP)//PERDBS(IDE)//'.newcards'
         FINC(IDE)=FINC(IDE)(1:LNBLNK(FINC(IDE)))
         CALL CUTOL(FINC(IDE))
         FOUE(IDE)=' '
         FOUE(IDE)=ALS_TEMP(1:ILTEMP)//PERDBS(IDE)//'.epio'
         FOUE(IDE)=FOUE(IDE)(1:LNBLNK(FOUE(IDE)))
         CALL CUTOL(FOUE(IDE))
C Open the 'CARDS' file for this split database :
         CALL AOPEN(LINC,FINC(IDE),'EDIR','DISK',IE)
         IF (IE.NE.0) GO TO 912
 560     CALL BREAD(IW,LINC,'T',*560,*600)
         GO TO 560
 600     CONTINUE
C Open output EPIO file:
         CALL AOPENW(LOUE,FOUE(IDE),'EPIO','DISK',IE)
         IF (IE.NE.0) GO TO 912
C Write on output :
         CALL BWRITE(IW,LOUE,'T')
         CALL BWRITE(IW,LOUE,'0')
         CALL ACLOSE(LOUE,IER)
         CALL ACLOSE(LINC,IER)
         CALL BDROP(IW,'T')
         CALL BGARB(IW)
C Erase the temporary 'CARDS' file :
         CALL SYSTEM(' rm -f '//FINC(IDE))
         WRITE ( LWRCAR , 1002 ) FOUE(IDE)(1:LNBLNK(FOUE(IDE)))
 1002    FORMAT ( A60 )
 700  CONTINUE
      CALL BOSTA
      CLOSE ( LWRCAR)
      GO TO 999
C
 911  CALL BKERRF('SPLIDBAS','BKSPLI',901)
      STOP 901
 912  CALL BKERRF('SPLIDBAS','BKSPLI',902)
      STOP 902
C
 999   RETURN
 1001  FORMAT (//22X,' !!! PROBLEM !!! Database ',I8,' NOT WRITTEN !!')
       END
      SUBROUTINE BKSQLA(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl files for Oracle database
C  Author  J.Boucrot  18-Mar-1999
C Called from BKDOAL                                     from  BOOKLIB
C Calls all BKSQLxxxx routines                           from  BOOKLIB
C Calls BKCLBTNA,BKSQRED,BKSQUPCO,BKSQUPSQ               from  BOOKLIB
C Calls ALSTIN                                           from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C----------------------------------------------------------------------
      IER=0
C Execute only if BTSK 'BSQL' data card present
      IF (IBKSQL.EQ.0) GO TO 999
C Define the flag to build only new files:
      INEWQ=IW(NAMIND('NEWQ'))
C Define the flag for only file comparisons:
      INOSQ=IW(NAMIND('NOSQ'))
C Define the flag for only execution of sql_loader :
      IDOSQ=IW(NAMIND('DOSQ'))
C Define the directory on which the ctlfile will be written:
      CALL BKSQPREP(INOSQ,INEWQ,IERP)
      IF (IERP.NE.0) GO TO 999
      IF (INOSQ.NE.0.or.idosq.ne.0) GO TO 100
C----------------------------------------------------------------------
C Create in turn all the new full ctlfiles :
C
C read the list of Edirs and make internal banks 'BTNA':
      CALL BKSQRED(IERE)
      IF (IERE.NE.0) GO TO 900
C compress and sort these 'BTNA' banks:
      CALL BKCLBTNA
C Make the ctl file for Run_year:
      CALL BKSQLRY(iery)
      IF (IERY.NE.0) GO TO 900
C Make the ctl file for real data datasets:
      CALL BKSQLDA(IERV)
      IF (IERV.NE.0) GO TO 900
C Make the ctl file for Physics_tools definitions by year:
      CALL BKSQLPH(ierp)
      IF (IERP.NE.0) GO TO 900
C Make the ctl file for Run_conditions:
      CALL BKSQLRU(ieru)
      IF (IERU.NE.0) GO TO 900
C Make the ctl file for Data statistics by year:
      CALL BKSQLDS(ierd)
      IF (IERd.NE.0) GO TO 900
C Make the ctl file for MCarlo statistics by year of geometry:
      CALL BKSQLMS(ierS)
      IF (IERS.NE.0) GO TO 900
C Make the ctl file for Monte-Carlo datasets:
      CALL BKSQLMC(ierm)
      IF (IERM.NE.0) GO TO 900
C Make the ctl file for MCarlo statistics by Kingal Keyword :
      CALL BKSQLMSK(ierk)
      IF (IERk.NE.0) GO TO 900
C Make the ctl file for MCarlo Lep Energies by year/Kingal Keyword :
      CALL BKSQLMEN(iern)
      IF (IERn.NE.0) GO TO 900
C Make the ctl file for MCarlo Particle names :
      CALL BKSQLMPA(ierpa)
      IF (ierpa.NE.0) GO TO 900
C Make the ctl file for Tapes and Cartridges description:
      CALL BKSQLTAP(IERTA)
      if (ierta.ne.0) go to 900
C Make the ctl file for the 4 Bunch lumis:
      CALL BKSQLSI4(IERS4)
      IF (iers4.NE.0) GO TO 900
C
C Compare the new files to the old ones; create the update files:
C
 100  IF (INEWQ.GT.0) GO TO 800
      IF (IDOSQ.GT.0) GO TO 200
      CALL BKSQUPCO(IERC)
      IF (IERC.NE.0) GO TO 900
C
C Perform the Oracle updating using sql_loader:
C
 200  CALL BKSQUPSQ(IERD)
      IF (IERD.NE.0) GO TO 900
 800  CALL BKWSBOS('Sqlupdate')
      go to 999
C --------------------------------------------------------------------
C No Room for BOS Banks : error
 900  IER=1
 999  RETURN
C
      END
      SUBROUTINE BKSQLDA(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl files for Real datasets DATASETS and RUNSETS
C  Author  J.Boucrot  21-Apr-1999 , mod 21-Sep-1999 for ctl
C Called from BKSQLA                               from  BOOKLIB
C Calls BKSQWR,BKSQLDAO,BKSQLDAB,BKSQLDAR          from  BOOKLIB
C Calls ALSTIN                                     from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      COMMON / LINESQ / LINEDA,LINERU
C----------------------------------------------------------------------
      IER=0
      LINEDA=0
      LINERU=0
C
C Open the output file for real_data description:
C
      CALL BKSQWR(LWBMBY,'DATASETS',IERD)
      IF (IERD.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C
C Open the output file for run_data correlations:
C
      CALL BKSQWR(LWRSRU,'RUNSETS',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,2001)
C
C Then loop on all rows of 'BRUC' to get old 'AA' tapes:
C
      CALL BKSQLDAO(IER2)
      IF (IER2.NE.0) GO TO 900
C
C Then loop on all rows of 'BRDL' to get 'AR' copies of 'AA' tapes:
C
      CALL BKSQLDAR(IER3)
      IF (IER3.NE.0) GO TO 900
C
C Then  loop on all the rows of the 'BDFS', NR=1 bank :
C
      CALL BKSQLDAB(IER1)
      IF (IER1.NE.0) GO TO 900
C Close files and quit:
 800  CONTINUE
      CLOSE ( LWBMBY )
      CLOSE ( LWRSRU )
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 900  IER=1
  999 RETURN
 1001 FORMAT (/22X,'=== Subroutine BKSQLDA === : start building file ',
     +        'datasets.ctl')
 2001 FORMAT (/22X,'=== Subroutine BKSQLDA === : start building file ',
     +        'runsets.ctl')
      END
      SUBROUTINE BKSQLDAB(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes elements of DATASETS and RUNSETS for standard data
C  Author  J.Boucrot  21-Apr-1999 , mods 21-SEP-1999 for ctl
C Called from BKSQLDA                            from BOOKLIB
C Calls BKCHHO,BKEXFI,BKSQLHO,BKELEP,BKLVPR      from BOOKLIB
C Calls BKEDTA,BKSQWF,BKSQSIZ,BKY2K,BKSQPNAM     from BOOKLIB
C Calls ALSTIN,BKINCA                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
      INTEGER BKINCA
      CHARACTER TAPE*8,TAPFI*10,TLOC*4,CHAINT*4,TLAB*4,COMEN*80
      CHARACTER PROCL*4,DANA*4,RUNU*6,QUOT*1,TLL*3,XEDIR*1,XCOMP*1
      CHARACTER TAP*2,TAPFW*4,TLABW*6,COMMW*82,DANAW*6,PROCW*6
      CHARACTER*4 PROC(5)
      PARAMETER ( IRMA = 10000 , IMBY = 1000000 , IGAJ = 1000 )
      COMMON / LINESQ / LINEDA,LINERU
      DATA QUOT / '"' /
      DATA PROC / 'Unkn' , 'Test' , 'Last' , 'Prev' , 'Old ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      JBLPR=IW(NAMIND('BLPR'))
C
C Loop on all real data  :
C
      IMC=1
      JBDFS=NLINK('BDFS',IMC)
      IF (JBDFS.LE.0) GO TO 920
      NBDFS=LROWS(JBDFS)
C Loop on all datasets :
      DO 400 IBD=1,NBDFS
            TAPFI=' '
            TLAB=' '
            PROCL=' '
            DANA=' '
            XEDIR='F'
            IART=0
            KBDFS=KROW(JBDFS,IBD)
            IF (IW(KBDFS+JBDFDF).NE.0) GO TO 400
            NPER=IW(KBDFS+JBDFNP)
            NROW=IW(KBDFS+JBDFNR)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
            TAP=TAPE(1:2)
            IF (TAP.EQ.'AR') IART=1
            IFILE=IW(KBDFS+JBDFFN)
            ITAP=BKINCA(TAPE(3:6))
            ICOP=IW(KBDFS+JBDFCO)
C Homelab and location:
            TAPFI=' '
            CALL BKCHHO(TAPE,ICERN,IHOML,IMULT,IEXA,IDLT,I3490,IEROR)
            TLAB=CHAINT(IW(KBDFS+JBDFLO))
            CALL BKSQLHO(TLAB,ILAB)
            IF (ICERN.EQ.0.AND.ILAB.NE.IHOML) ILAB=IHOML
C Dataset OK : get BSET bank , nature of data , year of data :
            JBSET=NLINK('BSET',NPER)
            IF (JBSET.LE.0) GO TO 920
            JBSPF=NLINK('BSPF',NPER)
            IF (JBSPF.LE.0) GO TO 920
            KBSET=KROW(JBSET,NROW)
            NADA=IW(KBSET+JBSEND)
            DANA='UNKN'
            IF (NADA.LT.10) GO TO 50
            IF (NADA.EQ.12) DANA='DRAW'
            IF (NADA.EQ.13) DANA='DPOT'
            GO TO 60
 50         NDATA=MOD(NADA,10)
            DANA=DNADAT(NDATA)
 60         IDT2=IW(KBSET+JBSEWD)
            CALL BKY2K(IDT2,IRMA,IYYD)
            IDTIN=IYYD*IRMA+MOD(IDT2,IRMA)
C Find year of data taking :
            IYEA=0
            NFRU=IW(KBSET+JBSEFR)
            NLRU=IW(KBSET+JBSELR)
            CALL BKELEP(NFRU,EL,IT,BM,ID,NL,JBRUC)
            IF (JBRUC.LE.0) THEN
               CALL BKELEP(NLRU,EL,IT,BM,ID,NL,JBRUC)
            ENDIF
            IF (JBRUC.LE.0) GO TO 180
            CALL BKY2K(IW(JBRUC+JBRUWD),IRMA,IYEA)
C Find the JULIA/MINI version:
  180       IJUV=0
            IMIV=0
            IBPRO=IW(KBSET+JBSEBP)
            JBPRO=NLINK('BPRO',NPER)
            IF (JBPRO.LE.0) GO TO 200
            KBPRO=KROW(JBPRO,IBPRO)
            IJG=IW(KBPRO+JBPRCV)
            IJUV=IJG/IGAJ
            IF (NADA.EQ.5) IMIV=IW(KBPRO+JBPRVN)
C
C Find the processing level :
 200        CONTINUE
            IF (IART.EQ.1) THEN
               PROCL='Last'
               go to 310
            ENDIF
            CALL BKLVPR(KBSET,JBLPR,IPRCV,ICOMP)
            IF (IPRCV.LE.0.OR.IPRCV.GT.4) IPRCV=0
            PROCL=PROC(IPRCV+1)
C Processing complete or not ?
            XCOMP='F'
            IF (ICOMP.NE.0) XCOMP='T'
C Edir or not EDIR ?
            XEDIR='F'
            CALL BKEDTA(KBDFS,IEDID)
            IF (IEDID.NE.0) then
               XEDIR='T'
            else
               IF (tape(1:2).eq.'Y1'.or.tape(1:2).eq.'R0')
     +            CALL BKBOKED(TAPE,IFILE)
            endif
C Size of dataset:
            CALL BKSQSIZ(NPER,NROW,ISIZ)
C Comment:
            IBSPF=IW(KBSET+JBSEBS)
            KBSPF=KROW(JBSPF,IBSPF)
            CALL ALSTIN(IW(KBSPF+JBSPCO),20,COMEN)
C
 300        CONTINUE
            LINEDA=LINEDA+1
            CALL BKSQWF(TAP,TAPFW,LT)
            CALL BKSQWF(TLAB,TLABW,LL)
            CALL BKSQWF(COMEN,COMMW,LC)
            CALL BKSQWF(DANA,DANAW,LD)
            CALL BKSQWF(PROCL,PROCW,LP)
C
            WRITE ( LWBMBY , 1003 ) LINEDA,NPER,TAPFW(1:LT),ITAP,IFILE,
     +                           TLABW(1:LL),COMMW(1:LC),
     +                           DANAW(1:LD),PROCW(1:LP),
     +                           quot,XEDIR,quot,quot,XCOMP,quot,
     +                           IYEA,NFRU,NLRU,IDTIN,IJUV,IMIV,
     +                           ICOP,ISIZ,ILAB
C
C Now search for all runs in this dataset and fill lines in
C the RUNSETS file :
C
 310        JBRLI=NLINK('BRLI',NPER)
            IF (JBRLI.EQ.0) GO TO 400
            IBRL1=IW(KBSET+JBSEBA)
            IBRL2=IW(KBSET+JBSEBR)
C No BRLI bank informations:
            IF (IBRL1*IBRL2.EQ.0) THEN
               IF (NLRU.NE.NFRU) GO TO 400
               LINERU=LINERU+1
               IFILL=0
               CALL BKELEP(NFRU,EL,IT,BM,ID,NL,KBRUC)
               IF (KBRUC.NE.0) IFILL=IW(KBRUC+JBRULF)
               WRITE ( LWRSRU , 2003 ) LINERU,LINEDA,NFRU,IFILL
               GO TO 400
            ENDIF
c
C BRLI bank informations;
C SPECIAL treatment for 'AR' new RAW DLTs of 1995 and after
c
            IFIAR=0
            XCOMP='F'
            IDTIN=0
            IJUV=0
            IMIV=0
            DO 350 IBRLI=IBRL1,IBRL2
               KBRLI=KROW(JBRLI,IBRLI)
               NFRU=IW(KBRLI+JBRLRN)
C LEP FILL:
               IFILL=0
               CALL BKELEP(NFRU,EL,IT,BM,ID,NL,KBRUC)
               IF (KBRUC.GT.0) IFILL=IW(KBRUC+JBRULF)
               IF (IART.EQ.0) GO TO 340
C 'AR' RAW DLTS:
               IFIAR=IFIAR+1
               CALL BKEXFI(3,TAPE,IFIAR,IERX)
               TAPFI=AXEDNW
               TAP=TAPFI(1:2)
               ITAP=BKINCA(TAPFI(3:6))
               ISIZ=IW(KBRLI+JBRLNB)/IMBY
               WRITE (RUNU, '(I6)' )  NFRU
               COMEN=' '
               COMEN=' RAW of run '//RUNU
               NLRU=NFRU
C all 'AR' files: write DATASETS informations:
               LINEDA=LINEDA+1
               CALL BKSQWF(TAP,TAPFW,LT)
               CALL BKSQWF(TLAB,TLABW,LL)
               CALL BKSQWF(COMEN,COMMW,LC)
               CALL BKSQWF(DANA,DANAW,LD)
               CALL BKSQWF(PROCL,PROCW,LP)
C
               WRITE ( LWBMBY , 1003 ) LINEDA,NPER,TAPFW(1:LT),ITAP,
     +                           IFIAR,TLABW(1:LL),COMMW(1:LC),
     +                           DANAW(1:LD),PROCW(1:LP),
     +                           quot,XEDIR,quot,quot,XCOMP,quot,
     +                           IYEA,NFRU,NLRU,IDTIN,IJUV,IMIV,
     +                           ICOP,ISIZ,ILAB
C all datasets: write RUNSETS information:
 340           LINERU=LINERU+1
               WRITE ( LWRSRU , 2003 ) LINERU,LINEDA,NFRU,IFILL
 350        CONTINUE
 400     CONTINUE
C
      CALL BKSQPNAM('DATASETS',LINEDA,IBID)
      CALL BKSQPNAM('RUNSETS', LINERU,IBID)
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 920  IER=1
 999  RETURN
 1003 FORMAT ('*',I5,' ,',I3,' , ',A4,' , ',2(I5,' , '),A6,' , ',(A),
     +        ' , '/5X,A6,' , ',A6,2(' , ',A1,A1,A1),
     +        3(' , ',I6),' , ',I8,4(' , ',I6),' , ',I3)
 2003 FORMAT (3(I7,' , '),I6)
      END
      SUBROUTINE BKSQLDAO(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the elements of DATASETS and RUNSETS for old 'AA' tapes:
C  Author  J.Boucrot  21-Apr-1999 , mods 21-Sep-1999 for ctl
C Called from BKSQLDA                          from  BOOKLIB
C Calls BKAARU,BKCHHO,BKY2K,BKSQWF             from  BOOKLIB
C Calls ALSTIN,BKINCA                          from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
      PARAMETER ( NRUM = 10174)
      CHARACTER TAPE*8,TLOC*4,CHAINT*4,TLAB*4,RUNU*6
      CHARACTER PROCL*4,DANA*4,COMEN*80,QUOT*1,XEDIR*1,XCOMP*1
      CHARACTER TAP*2,TAPFW*4,TLABW*6,COMMW*82,DANAW*6,PROCW*6
      PARAMETER (IRMS = 1000, NRAA = 20, IRMA = 10000, NPMX =44 )
      PARAMETER ( MAXBY = 200 )
      integer BKINCA,liraa(nraa)
      COMMON / LINESQ / LINEDA,LINERU
      DATA QUOT / '"' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
C
C LOOP on all 'AA' tapes from BRUC banks :
C
      PROCL='Last'
      DANA='RAW '
      TLAB='B186'
      XCOMP='F'
      IDTIN=0
      IJUV=0
      IMIV=0
      CALL BKSQLHO(TLAB,ILAB)
      XEDIR='F'
      JBRUC=NAMIND('BRUC')+1
 450  JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 600
      NPER=IW(JBRUC-2)
      IF (NPER.GE.NPMX) GO TO 600
      DO 500 IBRUC=1,LROWS(JBRUC)
         KBRUC=KROW(JBRUC,IBRUC)
         NRUNA=IW(KBRUC+JBRURN)
         CALL ALSTIN(IW(KBRUC+JBRUVS),2,tape)
         TAP=TAPE(1:2)
         IF (TAP.NE.'AA') GO TO 500
C Up to end of 1990 (run 10174), these 'AA' tapes are masters;
C afterwards they are copies and the masters are 'AR' DLT's:
         ICOP=0
         IF (NRUNA.GE.NRUM) ICOP=1
         ITAP=BKINCA(TAPE(3:6))
         CALL BKAARU(tape,nper,ibruc,liraa,nrru,iera)
         if (iera.ne.0.OR.NRRU.LE.0) go to 500
         IFILE=IUCOMP(NRUNA,LIRAA,NRRU)
         NRSQL=NRSQL+1
         NFRU=NRUNA
         NLRU=NRUNA
C Dataset size and comment:
         ISIZ=IW(KBRUC+JBRULD)/IRMS
         IF (ISIZ.GT.MAXBY) ISIZ=MAXBY
         WRITE (RUNU , '(I6)' ) NFRU
         COMEN=' '
         COMEN=' RAW of run '//RUNU
C Year of data taking :
         CALL BKY2K(IW(KBRUC+JBRUWD),IRMA,IYEA)
C LEP fill:
         IFILL=IW(KBRUC+JBRULF)
C
C Write the dataset information:
C
         LINEDA=LINEDA+1
         CALL BKSQWF(TAP,TAPFW,LT)
         CALL BKSQWF(TLAB,TLABW,LL)
         CALL BKSQWF(COMEN,COMMW,LC)
         CALL BKSQWF(DANA,DANAW,LD)
         CALL BKSQWF(PROCL,PROCW,LP)
C
         WRITE ( LWBMBY , 1003 ) LINEDA,NPER,TAPFW(1:LT),ITAP,IFILE,
     +                           TLABW(1:LL),COMMW(1:LC),
     +                           DANAW(1:LD),PROCW(1:LP),
     +                           quot,XEDIR,quot,quot,XCOMP,quot,
     +                           IYEA,NFRU,NLRU,IDTIN,IJUV,IMIV,
     +                           ICOP,ISIZ,ILAB
C
C Write the runset information:
C
         LINERU=LINERU+1
         WRITE ( LWRSRU , 2003 ) LINERU,LINEDA,NRUNA,IFILL
C
 500  CONTINUE
      GO TO 450
 600  CONTINUE
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 920  IER=1
 999  RETURN
 1003 FORMAT ('*',I5,' ,',I3,' , ',A4,' , ',2(I5,' , '),A6,' , ',(A),
     +        ' , '/5X,A6,' , ',A6,2(' , ',A1,A1,A1),
     +        8(' , ',I6),' , ',I3)
 2003 FORMAT (3(I7,' , '),I6)
      END
      SUBROUTINE BKSQLDAR(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes elements of DATASETS and RUNSETS for LEP1 AR DLT copies
C  Author  J.Boucrot  21-Apr-1999 , Mods 21-Sep-1999 for ctl
C Called from BKSQLDA                             from  BOOKLIB
C Calls BKSQLHO,BKY2K,BKELEP,BKSQWF,BKFPER        from  BOOKLIB
C Calls ALSTIN,BKINCA                             from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BRDLJJ ----
      PARAMETER(JBRDTC=1,JBRDLO=3,JBRDFN=4,JBRDRN=5,LBRDLA=5)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
      PARAMETER ( IRMS = 1000 , IRMA = 10000 , MAXBY = 200)
      PARAMETER ( NRUM = 10174 )
      INTEGER BKINCA
      CHARACTER TAPE*8,TLOC*4,CHAINT*4,TLAB*4,RUNU*6,TAP*2
      CHARACTER PROCL*4,DANA*4,COMEN*80,QUOT*1,TLL*3,XEDIR*1
      CHARACTER TAPFW*4,TLABW*6,COMMW*82,DANAW*6,PROCW*6,XCOMP*1
      COMMON / LINESQ / LINEDA,LINERU
      DATA QUOT / '"' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
C Loop on all the RAW DLTs from 'BRDL' (defined for
C years 1991 to 1994 included):
C
 600  DANA='RAW '
      PROCL='Last'
      XEDIR='F'
      XCOMP='F'
      IDTIN=0
      IJUV=0
      IMIV=0
      JBRDL=NAMIND('BRDL')+1
 650  JBRDL=IW(JBRDL-1)
      IF (JBRDL.EQ.0) GO TO 800
      IYEA=IW(JBRDL-2)
      DO 700 IBRDL=1,LROWS(JBRDL)
         KBRDL=KROW(JBRDL,IBRDL)
         NRUNA=IW(KBRDL+JBRDRN)
         IFILE=IW(KBRDL+JBRDFN)
         CALL ALSTIN(IW(KBRDL+JBRDTC),2,tape)
         TAP=TAPE(1:2)
         ITAP=BKINCA(TAPE(3:6))
C For runs of 1991 to 1994 included (from NRUM to MX94NR)
C the AR3xxx DLTs are to be considered as MASTERs;
C all other cases and all other AR tapes are Copies:
         ICOP=1
         IF (ITAP.GE.3000) THEN
            IF (NRUNA.GE.NRUM.AND.NRUNA.LE.MX94NR) ICOP=0
         ENDIF
         TLAB=CHAINT(IW(KBRDL+JBRDLO))
         CALL BKSQLHO(TLAB,ILAB)
         NRSQL=NRSQL+1
         NFRU=NRUNA
         NLRU=NRUNA
         CALL BKFPER(NFRU,0,NPER)
C Comment:
         WRITE (RUNU, '(I6)') NFRU
         COMEN=' '
         COMEN=' RAW of run '//RUNU
C Size of dataset:
         ISIZ=MAXBY
         CALL BKELEP(NFRU,EL,IT,BM,ID,NL,KBRUC)
         IF (KBRUC.NE.0) THEN
            ISIZ=IW(KBRUC+JBRULD)/IRMS
            IF (ISIZ.GT.MAXBY) ISIZ=MAXBY
         ENDIF
C Find year of data taking :
         CALL BKY2K(IW(KBRUC+JBRUWD),IRMA,IYEA)
C LEP fill:
         IFILL=IW(KBRUC+JBRULF)
C Write the datasets information:
         LINEDA=LINEDA+1
         CALL BKSQWF(TAP,TAPFW,LT)
         CALL BKSQWF(TLAB,TLABW,LL)
         CALL BKSQWF(COMEN,COMMW,LC)
         CALL BKSQWF(DANA,DANAW,LD)
         CALL BKSQWF(PROCL,PROCW,LP)
C
         WRITE ( LWBMBY , 1003 ) LINEDA,NPER,TAPFW(1:LT),ITAP,IFILE,
     +                           TLABW(1:LL),COMMW(1:LC),
     +                           DANAW(1:LD),PROCW(1:LP),
     +                           quot,XEDIR,quot,quot,XCOMP,quot,
     +                           IYEA,NFRU,NLRU,IDTIN,IJUV,IMIV,
     +                           ICOP,ISIZ,ILAB
C
C Write the runset information:
C
         LINERU=LINERU+1
         WRITE ( LWRSRU , 2003 ) LINERU,LINEDA,NRUNA,IFILL
 700  CONTINUE
      GO TO 650
C
 800  CONTINUE
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 920  IER=1
 999  RETURN
 1003 FORMAT ('*',I5,' ,',I3,' , ',A4,' , ',2(I5,' , '),A6,' , ',(A),
     +        ' , '/5X,A6,' , ',A6,2(' , ',A1,A1,A1),
     +        8(' , ',I6),' , ',I3)
 2003 FORMAT (I7,' , ',2(I6,' , '),I5)
      END
      SUBROUTINE BKSQLDS(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for real data statistics DATASTAT
C  Author  J.Boucrot  14-Apr-1999 , Mods 10-NOV-1999 for SIZE
C Called from BKSQLA                           from  BOOKLIB
C Calls BKELEP,BKLVPR,BKTOLSET,BKSQLHO,BKCHHO  from  BOOKLIB
C Calls BKSQWR,BKSQWF,BKSQPNAM,BKSQSIZ         from  BOOKLIB
C Calls ALSTIN                                 from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
      PARAMETER ( NPROC = 5 , NLABS = 13 )
      PARAMETER ( IRMA = 100000, IFAGA = 1000 )
      PARAMETER ( NTOYA = 15 , NELEP = 10)
      COMMON / YEAPER / NYEAOK,IYEALI(NTOYA),IPERMI(NTOYA),
     +                  IPERMX(NTOYA)
      COMMON / YEALEP / LENEYR(NTOYA,NELEP)
      CHARACTER*4 PROCS(NPROC)
      CHARACTER PROCW*6,TAPE*8,TLOC*4,CHAINT*4
      INTEGER NRAWS(NPROC,NLABS),NPOTS(NPROC,NLABS)
      INTEGER NDSTS(NPROC,NLABS),NMINS(NPROC,NLABS)
      INTEGER MRAWS(NPROC,NLABS),MPOTS(NPROC,NLABS)
      INTEGER MDSTS(NPROC,NLABS),MMINS(NPROC,NLABS)
      DATA PROCS / 'Unkn' , 'Test' , 'Last' , 'Prev' , 'Old '  /
      DATA IYEAR,IYEAF / -1 , 1989 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
      IBKINT=0
      IMCDAT=1
      ILAB=0
C Open the output file :
      CALL BKSQWR(LWRFRI,'DATASTAT',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C Get some pointers :
      JBDFS=NLINK('BDFS',1)
      IF (JBDFS.EQ.0) GO TO 900
      JBOFS=NLINK('BOFS',1)
      IF (JBOFS.EQ.0) GO TO 900
      JBLPR=IW(NAMIND('BLPR'))
      IF (JBLPR.EQ.0) GO TO 900
C
C Loop on all years of data taking:
C
      DO 800 IYEAR=1,NYEAOK
         ISYEAR=IYEALI(IYEAR)
         NPMIN=IPERMI(IYEAR)
         NPMAX=IPERMX(IYEAR)
C Determine LEP energy tolerances for this year :
         IZY=ISYEAR-IYEAF+1
         ISRUNF=LISFRU(IZY)
         ISRUNL=LISFRU(IZY+1)-1
         CALL BKLEPL
C RAZ counters for this year :
         DO 20 K=1,NLABS
            DO 10 L=1,NPROC
               NRAWS(L,K)=0
               NPOTS(L,K)=0
               NDSTS(L,K)=0
               NMINS(L,K)=0
               MRAWS(L,K)=0
               MPOTS(L,K)=0
               MDSTS(L,K)=0
               MMINS(L,K)=0
 10         CONTINUE
 20      CONTINUE
C
C Loop on all periods for this year :
C
         DO 600 NPER=NPMIN,NPMAX
            JBSET=NLINK('BSET',NPER)
            IF (JBSET.EQ.0) GO TO 600
C Determine BDFS rows for this period
            NFSET=0
            NLSET=0
            DO 170 IBOFS=1,LROWS(JBOFS)
               KBOFS=KROW(JBOFS,IBOFS)
               IF (IW(KBOFS+JBOFNP).NE.NPER) GO TO 170
               NFSET=IW(KBOFS+JBOFOF)
               NLSET=IW(KBOFS+JBOFOF)+IW(KBOFS+JBOFLP)
               GO TO 180
 170        CONTINUE
 180        IF (NFSET*NLSET.EQ.0) GO TO 600
C
C Loop on all datasets for this period:
C
            DO 400 IBDFS=NFSET,NLSET
               KBDFS=KROW(JBDFS,IBDFS)
               IF (IW(KBDFS+JBDFNP).NE.NPER) GO TO 400
C Get the Homelab :
               TLOC=CHAINT(IW(KBDFS+JBDFLO))
               CALL BKSQLHO(TLOC,ILAB)
               CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
               CALL BKCHHO(TAPE,ICRN,IHOML,IMU,IXA,IDL,I34,IERO)
               IF (ICRN.EQ.0.AND.ILAB.NE.IHOML) ILAB=IHOML
C Don't consider CERN copies:
               IF (ICRN.GT.0.AND.IW(KBDFS+JBDFCO).NE.0) GO TO 400
C Get the BSET row :
               IBSET=IW(KBDFS+JBDFNR)
               KBSET=KROW(JBSET,IBSET)
               NDATA=IW(KBSET+JBSEND)
               IF (NDATA.GT.5) GO TO 400
               NFRU=IW(KBSET+JBSEFR)
C Determine the size of this datasets (in Mbytes)
               CALL BKSQSIZ(NPER,IBSET,MSIZ)
C
C Now determine the processing level of this dataset:
C
               IF (NDATA.LE.2) THEN
                 IPROC=3
                 GO TO 240
               ENDIF
               CALL BKLVPR(KBSET,JBLPR,IPRCV,IBID)
               IPROC=IPRCV+1
 240           CONTINUE
C Now store the results :
               IF (NDATA.EQ.2) THEN
                 NRAWS(IPROC,ILAB)=NRAWS(IPROC,ILAB)+1
                 MRAWS(IPROC,ILAB)=MRAWS(IPROC,ILAB)+MSIZ
               ELSEIF (NDATA.EQ.3) THEN
                 NPOTS(IPROC,ILAB)=NPOTS(IPROC,ILAB)+1
                 MPOTS(IPROC,ILAB)=MPOTS(IPROC,ILAB)+MSIZ
               ELSEIF (NDATA.EQ.4) THEN
                 NDSTS(IPROC,ILAB)=NDSTS(IPROC,ILAB)+1
                 MDSTS(IPROC,ILAB)=MDSTS(IPROC,ILAB)+MSIZ
               ELSEIF (NDATA.EQ.5) THEN
                 NMINS(IPROC,ILAB)=NMINS(IPROC,ILAB)+1
                 MMINS(IPROC,ILAB)=MMINS(IPROC,ILAB)+MSIZ
               ENDIF
 400        CONTINUE
C ----------------------------------------------------------------------
C Now do the same with 'BRUC' banks for all RAW datasets :
            JBRUC=NLINK('BRUC',NPER)
            IF (JBRUC.EQ.0) GO TO 600
            DO 500 IBRUC=1,LROWS(JBRUC)
               KBRUC=KROW(JBRUC,IBRUC)
               NFRU=IW(KBRUC+JBRURN)
C Get tape name and homelab :
               CALL ALSTIN(IW(KBRUC+JBRUVS),2,TAPE)
               CALL BKCHHO(TAPE,ICRN,ILAB,IMULT,IXAB,IDLT,I34,IEROR)
               IF (ICRN.NE.0) ILAB=1
               IF (TAPE(1:2).EQ.'AA') ILAB=12
C Get size of dataset in Mytes:
               MSIZ=IW(KBRUC+JBRULD)/IFAGA
C Store the dataset:
               NRAWS(3,ILAB)=NRAWS(3,ILAB)+1
               MRAWS(3,ILAB)=MRAWS(3,ILAB)+MSIZ
 500        CONTINUE
C
C End of loop on periods of the present year
 600  CONTINUE
C ----------------------------------------------------------------------
C
C Now write all this stuff :
C
      DO 750 ILAB=1,NLABS
         DO 740 IPR=1,NPROC
            NRO=NRAWS(IPR,ILAB)
            NPO=NPOTS(IPR,ILAB)
            NDS=NDSTS(IPR,ILAB)
            NMI=NMINS(IPR,ILAB)
            MRO=MRAWS(IPR,ILAB)
            MPO=MPOTS(IPR,ILAB)
            MDS=MDSTS(IPR,ILAB)
            MMI=MMINS(IPR,ILAB)
            IF (NRO+NPO+NDS+NMI.GT.0) THEN
               ILINE=ILINE+1
               CALL BKSQWF(PROCS(IPR),PROCW,LP)
               WRITE (LWRFRI,1003) ILINE,ISYEAR,PROCW(1:LP),
     +                             NRO,NPO,NDS,NMI,
     +                             MRO,MPO,MDS,MMI,ILAB
               ENDIF
 740     CONTINUE
 750  CONTINUE
C
C End of loop on years of data taking :
C
 800  CONTINUE
C
      CLOSE (LWRFRI)
      CALL BKSQPNAM('DATASTAT',ILINE,IBID)
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLDS === : start building file ',
     +        'datastat.ctl')
 1003 FORMAT (2(I5,' , '),A6,9(' , ',I8))
      END
      SUBROUTINE BKSQLHO(TLOC,ILAB)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Finds the Homelab # for TMS locations/Homelabs
C  Builds on 1st pass the ctl file for Homelabs  HOMEDESC
C  Author  J.Boucrot  25-Mar-1999 , Mods 21-Sep-1999 for ctl
C Called from BKSQLDA,BKSQLMC                      from  BOOKLIB
C Calls BKSQWR,BKSQWF,BKSQPNAM                     from  BOOKLIB
C  INPUT argument :
C    TLOC = TMS location of a tape
C  OUTPUT argument :
C    ILAB = number of Homelab in list HOMEL
C----------------------------------------------------------------------
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      SAVE IPASS
      PARAMETER ( NLABO = 13 , NLOCS = 15)
      INTEGER NUMLA(NLOCS)
      CHARACTER*12 HOMEL(NLABO)
      CHARACTER TLOC1*40,TLOC2*20,TLOCO*60,TLOC*4,HOMEW*14
      DATA NUMLA / 1, 1, 1, 12, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 /
      DATA TLOC1 / 'VAULPIT STK B186HEIDMUNILYONPARIRAL FLOR' /
      DATA TLOC2 / 'WISCCINEBEIJBARCCOPE' /
      DATA IPASS / 1 /
C----------------------------------------------------------------------
      IER=0
      ILAB=0
      TLOCO=TLOC1//TLOC2
      IF (IPASS.GT.1) GO TO 100
C Open the output file for homelabs description:
      IPASS=IPASS+1
      ILOCO=0
      CALL BKSQWR(LWRFER,'HOMEDESC',IERR)
      IF (IERR.NE.0) GO TO 900
C Initialise various arrays :
      HOMEL(1)='CERN'
      DO 10 I=2,11
         HOMEL(I)=CLISTL(I)(1:12)
 10   CONTINUE
      HOMEL(12)='Archive CERN'
      HOMEL(13)='Unknown'
      DO 30 IK=1,NLABO
         CALL BKSQWF(HOMEL(IK),HOMEW,LH)
         WRITE (LWRFER,1003) IK,IK,HOMEW(1:LH)
 30   CONTINUE
      CLOSE (LWRFER)
      CALL BKSQPNAM('HOMEDESC',NLABO,IBID)
 100  continue
C
C Determine Homelab corresponding to the  current TMS location:
C
      IOK=INDEX(TLOCO,TLOC)
      IF (IOK.EQ.0) THEN
         ILAB=NLABO
      ELSE
         IRANK=1+(IOK-1)/4
         ILAB=NUMLA(IRANK)
      ENDIF
      GO TO 999
C Error on file :
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLHO === : start building file ',
     +        'homedesc.ctl')
 1003 FORMAT (2(I5,' , '),A14)
      END
      SUBROUTINE BKSQLMC(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for Monte-Carlo datasets MCSETS
C  Author  J.Boucrot  10-Mar-1999 , Mods 21-Sep-1999 for ctl
C Called from BKSQLA                               from BOOKLIB
C Calls BKPOIN,BKEXFI,BKCHHO,BKEDTA,BKSQTMAS,BKY2K from BOOKLIB
C Calls BKSQLHO,BKSQSIZ,BKSQWR,BKSQWF,BKSQRYEN     from BOOKLIB
C Calls BKSQPNAM                                   from BOOKLIB
C Calls ALSTIN,BKINCA                              from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- BRDLJJ ----
      PARAMETER(JBRDTC=1,JBRDLO=3,JBRDFN=4,JBRDRN=5,LBRDLA=5)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER TAPE*8,TAPFI*10,TLOC*4,CHAINT*4,TLAB*4
      CHARACTER PROCL*4,DANA*4,TAP*2,QUOT*1,TLL*3,EXPLA*60
      CHARACTER COMEN*80,KEYW*12,KRAKL*12,KRAK*12,XEDIR*1
      CHARACTER TAPFW*4,TLABW*6,COMMW*82,DANAW*6,KEYWW*14
      PARAMETER (  IRSP = 100000 ,IRMY = 100 , IGAJ = 1000, NHV=5)
      PARAMETER ( IRMA = 10000 )
      INTEGER BKINCA,LIHV(NHV)
      DATA QUOT / '"' /
      DATA LIHV / 5012 , 5021 , 5023 , 5030 , 5300 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
C Open the output file :
      CALL BKSQWR(LWBMBY,'MCSETS',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C Loop on all MCarlo datasets  :
      IMC=2
         CALL BKPOIN(LECDAF,'BDFS',IMC,JBDFS)
         IF (JBDFS.LE.0) GO TO 920
         NBDFS=LROWS(JBDFS)
C Loop on all datasets :
         DO 400 IBD=1,NBDFS
            TAPFI=' '
            TLAB=' '
            PROCL=' '
            DANA=' '
            KBDFS=KROW(JBDFS,IBD)
            IF (IW(KBDFS+JBDFDF).NE.0) GO TO 400
            NPER=IW(KBDFS+JBDFNP)
            NROW=IW(KBDFS+JBDFNR)
            nthv=iucomp(nper,lihv,nhv)
            ICOP=IW(KBDFS+JBDFCO)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
            TAP=TAPE(1:2)
            ITAP=BKINCA(TAPE(3:6))
            IFILE=IW(KBDFS+JBDFFN)
C Location :
            CALL BKCHHO(TAPE,ICERN,IHOML,IMULT,IEXA,IDLT,I3490,IEROR)
            TLAB=CHAINT(IW(KBDFS+JBDFLO))
            CALL BKSQLHO(TLAB,ILAB)
            IF (ICERN.EQ.0.AND.IHOML.NE.ILAB) ILAB=IHOML
C Dataset OK : get BSET bank , nature of data:
            CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
            IF (JBSET.LE.0) GO TO 920
            KBSET=KROW(JBSET,NROW)
            NADA=IW(KBSET+JBSEND)
            DANA='UNKN'
            IF (NADA.GT.5.OR.NADA.LT.1) GO TO 60
            DANA=DNADAT(NADA)
 60         CONTINUE
C Date of processing yyyymmdd :
            IDT2=IW(KBSET+JBSEWD)
            CALL BKY2K(IDT2,IRMA,IYYD)
            IDTIN=IYYD*IRMA+MOD(IDT2,IRMA)
C Get LEP simulated energy in MeV:
            IENGY=IW(KBSET+JBSEBN)
C Get bank BSPF and year of geometry:
            IBSPF=IW(KBSET+JBSEBS)
            JBSPF=NLINK('BSPF',NPER)
            IF (JBSPF.LE.0) GO TO 400
            KBSPF=KROW(JBSPF,IBSPF)
            CALL BKY2K(IW(KBSPF+JBSPRG),IRMY,IYEA)
C Get the rounded energy corresponding to IENGY :
            CALL BKSQRYEM(IYEA,IENGY,IROUE)
C Get special particle code :
            IKOPA=IW(KBSPF+JBSPSR)/IRSP
            if (ikopa.eq.0.and.nthv.le.0) ikopa=-1
C Get Galeph/Julia/Mini versions from bank BPRO :
            IBPRO=IW(KBSET+JBSEBP)
            JBPRO=NLINK('BPRO',NPER)
            IF (JBPRO.LE.0) GO TO 400
            KBPRO=KROW(JBPRO,IBPRO)
            IJG=IW(KBPRO+JBPRCV)
            IJUV=IJG/IGAJ
            IGAV=IJG-IGAJ*IJUV
            IMIV=0
            IF (NADA.EQ.5) IMIV=IW(KBPRO+JBPRVN)
C Get EDIR flag :
            XEDIR='F'
            CALL BKEDTA(KBDFS,IEDID)
            IF (IEDID.NE.0) then
               XEDIR='T'
            else
               IF (TAPE(1:2).EQ.'Y1'.or.tape(1:2).eq.'R0')
     +            CALL BKBOKED(TAPE,IFILE)
            endif
C Get dataset size in Mbytes :
            CALL BKSQSIZ(NPER,NROW,MBYT)
C Get LEP2 MCarlo keyword and mass of generated particle from comment:
            KEYW='None'
            MPART=0
            CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
            CALL CLTOU(COMEN)
            IF (IYEA.LE.1995) GO TO 250
            NR=NPER+NCY*(IYEA-IYERF)
            JBKM7=NLINK('BKM7',NR)
            IF (JBKM7.LE.0) GO TO 250
            IKRA=0
            DO 100 IBKM7=1,LROWS(JBKM7)
               KBKM7=KROW(JBKM7,IBKM7)
C Keyword for selection:
               CALL ALSTIN(IW(KBKM7+JBKMKW),JBKMDE-JBKMKW,KRAKL)
               KRAK=KRAKL
               CALL CLTOU(KRAK)
               LKRAK=LNBLNK(KRAK)
               INDKR=INDEX(COMEN,KRAK(1:LKRAK))
               IF (INDKR.EQ.0) GO TO 100
               IKRAK=0
               IF (COMEN(INDKR:INDKR+LKRAK).EQ.KRAK(1:LKRAK)) IKRAK=1
               IF (IKRAK.EQ.0) GO TO 100
               KEYW=KRAKL
               IKRA=IBKM7
C Mass of generated particle (Higgs or W):
               CALL ALSTIN(IW(KBKM7+JBKMDE),LBKM7A-JBKMDE+1,EXPLA)
               CALL BKSQTMAS(NPER,EXPLA,MPART)
               if (index(krak,'QQ').gt.0.and.ikopa.lt.0) ikopa=0
               GO TO 250
 100        CONTINUE
C
 250        CONTINUE
C
 300        CALL BKSQWF(TAP,TAPFW,LT)
            CALL BKSQWF(TLAB,TLABW,LL)
            CALL BKSQWF(COMEN,COMMW,LC)
            CALL BKSQWF(DANA,DANAW,LD)
            CALL BKSQWF(KEYW,KEYWW,LK)
C
            WRITE (LWBMBY ,1003) IBD,nper,TAPFW(1:LT),ITAP,IFILE,
     +                           TLABW(1:LL),DANAW(1:LD),COMMW(1:LC),
     +                           KEYWW(1:LK),quot,XEDIR,quot,IYEA,
     +                           IDTIN,IENGY,IROUE,IKOPA,IGAV,IJUV,
     +                           IMIV,MPART,MBYT,ICOP,ILAB
C
 400     CONTINUE
C
 800  CONTINUE
      CLOSE ( LWBMBY )
      CALL BKSQPNAM('MCSETS',NBDFS,IBID)
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 920  IER=1
 999  RETURN
 1001 FORMAT (/22X,'=== Subroutine BKSQLMC === : start building file ',
     +        'mcsets.ctl')
 1003 FORMAT ('*',2(I6,' , '),A4,2(' , ',I5),2(' , ',A6),' , ',
     +       (A),' , ',/3X,(A),' ,',1X,A1,A1,A1,' , ',I4,' , ',I8,
     +       2(' , ',I6),4(' , ',I3),3(' , ',I6)' , ',I3)
      END
      SUBROUTINE BKSQLMEN(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for MCarlo energies MCLEPENERGY
C  Author  J.Boucrot  07-May-1999 , mods 21-Sep-1999 for ctl
C Called from BKSQLA                      from  BOOKLIB
C Calls BKSQWR,BKSQWF,BKSQPNAM            from  BOOKLIB
C Calls ALSTIN                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS banks  ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
      PARAMETER ( IP95 = 100000 , IY95 = 1995 )
      PARAMETER ( NKIN = 200 , NPLE = 3 )
      CHARACTER KINLW*10,FPERW*10
      CHARACTER*8 KINLI(NKIN)
      CHARACTER*7 PERLE(NPLE),FPER
      INTEGER KINCO(NKIN)
      DATA PERLE  / 'LEP 1  ' , 'LEP 1.5' , 'LEP 2  ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
C Open the output file :
      CALL BKSQWR(LWRRAW,'MCLEPENERGY',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C
C Fill KINGAL codes and names :
C
      JBKIN=IW(NAMIND('BKLI'))
      IF (JBKIN.EQ.0) GO TO 900
      KKIN=LROWS(JBKIN)
      KKIN=MIN0(KKIN,NKIN)
      DO 20 IK=1,KKIN
         KBKIN=KROW(JBKIN,IK)
         KINCO(IK)=IW(KBKIN+JBKLKC)
         CALL ALSTIN(IW(KBKIN+JBKLKN),2,KINLI(IK))
 20   CONTINUE
C
C Loop on internal 'BMCC' banks, NR = Iyeag, fileed in BKSQLMCC:
C
      JBMCC=NAMIND('BMCC')+1
 100  JBMCC=IW(JBMCC-1)
      IF (JBMCC.LE.0) GO TO 400
      IYEAG=IW(JBMCC-2)
      IF (IYEAG.EQ.LISYEA(NTOYEA)) GO TO 100
      NBMCC=LROWS(JBMCC)
C
C Loop on all rows for this bank :
C
      DO 200 IR=1,NBMCC
         KBMCC=KROW(JBMCC,IR)
         KINC=IW(KBMCC+1)
         IKIN=IUCOMP(KINC,KINCO,KKIN)
         IF (IKIN.LE.0) GO TO 200
C Rounded Lep energy:
         IENG=IW(KBMCC+2)
C Lep category:
         IF (IYEAG.LT.IY95) then
            FPER=PERLE(1)
         ELSEIF(IYEAG.EQ.IY95) THEN
            FPER=PERLE(1)
            IF (IENG.GT.IP95) FPER=PERLE(2)
         ELSE
            FPER=PERLE(3)
         ENDIF
C Print the results for this year on the output file:
         ILINE=ILINE+1
         CALL BKSQWF(KINLI(IKIN),KINLW,LK)
         CALL BKSQWF(FPER,FPERW,LF)
         WRITE (LWRRAW,1003) ILINE,FPERW(1:LF),IYEAG,KINCO(IKIN),
     +                       KINLW(1:LK),IENG
 200  CONTINUE
      GO TO 100
C End of 'BMCC' banks :
 400  CONTINUE
      CLOSE (LWRRAW)
      CALL BKSQPNAM('MCLEPENERGY',ILINE,IBID)
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLMEN === : start building file ',
     +        'mclepenergy.ctl')
 1003 FORMAT (I6,' , ',A10,' , ',2(I5,' , '),A10,' , ',I6)
      END
      SUBROUTINE BKSQLMPA(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for MCarlo Particle Names MCPARTICLES
C  Author  J.Boucrot  20-Apr-1999 , Mods 21-Sep-1999 for ctl
C Called from BKSQLDA                     from  BOOKLIB
C Calls BKBPLI,BKSQWR,BKSQWF,BKSQPNAM     from  BOOKLIB
C Calls ALSTIN                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
      CHARACTER PNAM*12,PNAMW*14
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
C Open the output file :
      CALL BKSQWR(LWRTMP,'MCPARTICLES',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C Get pointer:
      CALL BKBPLI(IERP)
      IF (IERP.NE.0) GO TO 900
      JBPLI=IW(NAMIND('BPLI'))
      IF (JBPLI.EQ.0) GO TO 900
C Put 'none' and 'qqbar' as first particles:
      ill=1
      pnam='none'
      ilp=-1
      CALL BKSQWF(PNAM,PNAMW,LP)
      WRITE (LWRTMP,1003) ill,PNAMW(1:LP),ilp,ilp
      ill=2
      pnam='qqbar'
      ilp=0
      CALL BKSQWF(PNAM,PNAMW,LP)
      WRITE (LWRTMP,1003) ill,PNAMW(1:LP),ilp,ilp
C
C Loop on all particles :
C
      DO 400 IBPLI=1,LROWS(JBPLI)
         KBPLI=KROW(JBPLI,IBPLI)
         CALL ALSTIN(IW(KBPLI+JBPLPN),3,PNAM)
         CALL BKSQWF(PNAM,PNAMW,LP)
         WRITE (LWRTMP,1003) ibpli+2,PNAMW(1:LP),
     +                       IW(KBPLI+JBPLPC),IW(KBPLI+JBPLAC)
 400  CONTINUE
      CLOSE (LWRTMP)
      NLMM=LROWS(JBPLI)+2
      CALL BKSQPNAM('MCPARTICLES',NLMM,IBID)
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLMPA === : start building file ',
     +        'mcparticles.sqlfil')
 1003 FORMAT (I5,' , ',A14,2(' , ',I5))
      END
      SUBROUTINE BKSQLMS(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for MCarlo Datasets Statistics MCSTAT
C  Author  J.Boucrot  31-Mar-1999 , mods 10-Nov-1999 for Size
C Called from BKSQLA                             from BOOKLIB
C Calls BKSQWR,BKSQWF,BKSQMCC,BKTOLSET,BKSQPNAM  from BOOKLIB
C Calls ALSTIN,AUBPRS                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS banks  ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
      PARAMETER ( NDATS = 7 , NKIN = 200 , NPLE = 3)
      PARAMETER ( IRMA = 100000, IFAGA = 1000 )
      PARAMETER ( IY95 = 1995, IRL1 = 250, ERL1 =0.25 )
      PARAMETER ( NTOYM = 15 , NMLEP = 50 , NKIGG = 7020)
      COMMON / YEAPMC / NYEAMC,IYEAMC(NTOYM),LENYMC(NTOYM,NMLEP)
C
      CHARACTER*7 PERLE(NPLE),FPER
      CHARACTER KINLW*10,FPERW*10
      CHARACTER*8 KINLI(NKIN)
      INTEGER KINCO(NKIN),LISKI(NLABS,NKIN)
      INTEGER NPOTY(NLABS,NKIN),NMINY(NLABS,NKIN)
      INTEGER MPOTY(NLABS,NKIN),MMINY(NLABS,NKIN)
      DATA PERLE  / 'LEP 1  ' , 'LEP 1.5' , 'LEP 2  ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
      IMCDAT=2
C Open the output file :
      CALL BKSQWR(LWRRAW,'MCSTAT',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C
C RAZ of common /YEAPMC/ :
C
      NYEAMC=0
      DO 10 IY=1,NTOYM
         IYEAMC(IY)=0
         DO 5 IE=1,NMLEP
            LENYMC(IY,IE)=0
 5       CONTINUE
 10   CONTINUE
C
C Fill KINGAL codes and names :
C
      JBKIN=IW(NAMIND('BKLI'))
      IF (JBKIN.EQ.0) GO TO 900
      KKIN=LROWS(JBKIN)
      KKIN=MIN0(KKIN,NKIN)
      DO 20 IK=1,KKIN
         KBKIN=KROW(JBKIN,IK)
         KINCO(IK)=IW(KBKIN+JBKLKC)
         CALL ALSTIN(IW(KBKIN+JBKLKN),2,KINLI(IK))
 20   CONTINUE
C
C Loop on 'BMCL' banks, NR = Iyeag, for  MCarlo datasets :
C
      JBMCL=NAMIND('BMCL')+1
 100  JBMCL=IW(JBMCL-1)
      IF (JBMCL.LE.0) GO TO 400
      IYEAG=IW(JBMCL-2)
      IF (IYEAG.GE.IRMA.OR.IYEAG.LT.IFAGA) GO TO 100
      IF (IYEAG.EQ.LISYEA(NTOYEA)) GO TO 100
      NBMCL=LROWS(JBMCL)
      JBSCL=NLINK('BSCL',IYEAG)
      IF (JBSCL.LE.0) GO TO 400
      NBSCL=LROWS(JBSCL)
C Fill common / YEAPMC/ for this year for future use in BKSQRYEM:
      isyear=iyeag
      igeoyr=iyeag
      IF (IYEAG.LE.IY95) THEN
         IROUND=IRL1
         ITOLER=IRL1
         EROUND=ERL1
      ELSE
         CALL BKTOLSET
      ENDIF
      CALL BKLEPL
      IF (NLEPSF.GT.0) THEN
         NYEAMC=NYEAMC+1
         IYEAMC(NYEAMC)=IYEAG
         DO 105 IEE=1,NLEPSF
            LENYMC(NYEAMC,IEE)=ILEPEN(IEE)
 105     CONTINUE
      ENDIF
C RAZ counters for this year:
      DO 120 K=1,NLABS
         DO 110 L=1,NKIN
            LISKI(K,L)=0
            NPOTY(K,L)=0
            NMINY(K,L)=0
            MPOTY(K,L)=0
            MMINY(K,L)=0
 110     CONTINUE
 120  CONTINUE
C Loop on all rows for this bank :
      DO 200 IR=1,NBMCL
         KBMCL=KROW(JBMCL,IR)
         ILAA=IW(KBMCL+JBMCLA)
         KINC=IW(KBMCL+JBMCKG)
         IKIN=IUCOMP(KINC,KINCO,KKIN)
         IF (IKIN.LE.0) GO TO 200
         NPOTY(ILAA,IKIN)=NPOTY(ILAA,IKIN)+IW(KBMCL+JBMCPO)
         NMINY(ILAA,IKIN)=NMINY(ILAA,IKIN)+IW(KBMCL+JBMCMI)
C Find size of data for CERN datasets:
         IF (ILAA.NE.1) GO TO 200
         DO 190 IBSCL=1,NBSCL
            KBSCL=KROW(JBSCL,IBSCL)
            IF (IW(KBSCL+JBMCKG).NE.KINC) GO TO 190
            MPOTY(ILAA,IKIN)=MPOTY(ILAA,IKIN)+IW(KBSCL+JBMCPO)
            MMINY(ILAA,IKIN)=MMINY(ILAA,IKIN)+IW(KBSCL+JBMCMI)
 190     CONTINUE
 200  CONTINUE
C Print the results for this year on the output file:
         DO 300 NK=1,NKIN
            CALL BKSQMCC(IYEAG,KINCO(NK),ILEPEN,NLEPSF,IROUND,IERC)
            IF (IERC.NE.0) GO TO 900
            DO 250 IH=1,NLABS
               IF (NPOTY(IH,NK)+NMINY(IH,NK).EQ.0) GO TO 250
C Lep category:
               IF (IYEAG.LT.IY95) then
                  FPER=PERLE(1)
               ELSEIF(IYEAG.EQ.IY95) THEN
                  FPER=PERLE(1)
                  IF (KINCO(NK).EQ.NKIGG) FPER=PERLE(2)
               ELSE
                  FPER=PERLE(3)
               ENDIF
C
               ILINE=ILINE+1
               CALL BKSQWF(KINLI(NK),KINLW,LK)
               CALL BKSQWF(FPER,FPERW,LF)
               WRITE (LWRRAW,1003) ILINE,IYEAG,FPERW(1:LF),
     +                             KINCO(NK),KINLW(1:LK),
     +                             NPOTY(IH,NK),NMINY(IH,NK),
     +                             MPOTY(IH,NK),MMINY(IH,NK),IH
 250        CONTINUE
 300     CONTINUE
         GO TO 100
C End of BMCL banks :
 400  CONTINUE
      CLOSE (LWRRAW)
      CALL BKSQPNAM('MCSTAT',ILINE,IBID)
      CALL AUBPRS('BMCC')
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLMS === : start building file ',
     +        'mcstat.ctl')
 1003 FORMAT (2(I5,' , '),A10,' , ',I5,' , ',A10,5(' , ',I8))
      END
      SUBROUTINE BKSQLMSK(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for MCarlo Stats by keywords MCKEYSTAT
C  Author  J.Boucrot  12-Apr-1999 , mods 21-Sep-1999 for ctl
C Called from BKSQLA                      from BOOKLIB
C Calls BKSQWR,BKSQLHO,BKSQTMAS,BKSQWF    from BOOKLIB
C Calls BKCHHO,BKY2K,BKSQPNAM             from BOOKLIB
C Calls ALSTIN                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS banks   = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      PARAMETER ( NKEY = 200 , NKIN = 200 )
      PARAMETER ( IRMA = 100000, IFAGA = 1000, IRMY = 100 )
      CHARACTER TAPE*8,COMM*80,KRAK*12
      CHARACTER KINLW*10,KEYHW*14,KEYEW*62,CHAINT*4,TLOC*4
      CHARACTER*8 KINLI(NKIN)
      CHARACTER*12 KEYH(NKEY)
      CHARACTER*60 KEYEX(NKEY)
      INTEGER KINCO(NKIN)
      INTEGER NPOTY(NLABS,NKEY),NMINY(NLABS,NKEY)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
      IYEMI=IYERF-1
      IYEMX=2001
      JBDFS=NLINK('BDFS',2)
      if (jbdfs.le.0) go to 900
      JBOFS=NLINK('BOFS',2)
      IF (JBOFS.LE.0) GO TO 900
C Open the output file :
      CALL BKSQWR(LWRRAW,'MCKEYSTAT',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C
C Fill KINGAL codes and names :
C
      JBKIN=IW(NAMIND('BKLI'))
      IF (JBKIN.EQ.0) GO TO 900
      KKIN=LROWS(JBKIN)
      KKIN=MIN0(KKIN,NKIN)
      DO 20 IK=1,KKIN
         KBKIN=KROW(JBKIN,IK)
         KINCO(IK)=IW(KBKIN+JBKLKC)
         CALL ALSTIN(IW(KBKIN+JBKLKN),2,KINLI(IK))
 20   CONTINUE
C----------------------------------------------------------------------
C
C Loop on 'BKM7' banks :
C
      JBKM7=NAMIND('BKM7')+1
 30   JBKM7=IW(JBKM7-1)
      IF (JBKM7.LE.0) GO TO 800
      IYEAG=IW(JBKM7-2)
      NBKM7=LROWS(JBKM7)
C Find Kincode and year of geometry :
      IYEOG=0
      NPER=0
      IKIN=0
      DO 110 IYEB=IYEMI,IYEMX
         DO 100 IKI=1,KKIN
            NTST=KINCO(IKI)+NCY*(IYEB-IYERF)
            IF (NTST.NE.IYEAG) GO TO 100
            NPER=KINCO(IKI)
            IYEOG=IYEB
            IKIN=IKI
            GO TO 120
 100    CONTINUE
 110  CONTINUE
 120  IF (NPER.EQ.0.OR.IYEOG.EQ.0) GO TO 30
C Make the list of keywords and explanations for this KINCOD/YEAR :
      DO 150 IBKM7=1,NBKM7
         KBKM7=KROW(JBKM7,IBKM7)
         CALL ALSTIN(IW(KBKM7+JBKMKW),3,KEYH(IBKM7))
         CALL ALSTIN(IW(KBKM7+JBKMDE),LBKM7A-JBKMKW,KEYEX(IBKM7))
 150  CONTINUE
C Get the limits in 'BDFS' for the present KINCODE:
      NFSET=0
      NLSET=0
      DO 170 IBOFS=1,LROWS(JBOFS)
         KBOFS=KROW(JBOFS,IBOFS)
         IF (IW(KBOFS+JBOFNP).NE.NPER) GO TO 170
         NFSET=IW(KBOFS+JBOFOF)
         NLSET=IW(KBOFS+JBOFOF)+IW(KBOFS+JBOFLP)
         GO TO 180
 170  CONTINUE
 180  IF (NFSET*NLSET.EQ.0) GO TO 30
C Get some necessary bank pointers :
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.EQ.0) GO TO 900
      JBSPF=NLINK('BSPF',NPER)
      IF (JBSPF.EQ.0) GO TO 900
C Prepare tables :
      DO 220 K=1,NLABS
         DO 210 L=1,NKEY
            NPOTY(K,L)=0
            NMINY(K,L)=0
 210     CONTINUE
 220  CONTINUE
C
C Loop on all relevant rows of 'BDFS' bank :
C
      DO 300  IBDFS=NFSET,NLSET
         KBDFS=KROW(JBDFS,IBDFS)
         IF (IW(KBDFS+JBDFNP).NE.NPER) GO TO 300
         IBSET=IW(KBDFS+JBDFNR)
         kbset=krow(jbset,ibset)
         INDAT=IW(KBSET+JBSEND)
C Keep only POTs and MINIs :
         IF (INDAT.NE.3.AND.INDAT.NE.5) GO TO 300
C find year of geometry :
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         CALL BKY2K(IW(KBSPF+JBSPRG),IRMY,IYEA)
         IF (IYEA.NE.IYEOG) GO TO 300
C Get the Homelab :
         TLOC=CHAINT(IW(KBDFS+JBDFLO))
         CALL BKSQLHO(TLOC,ILAB)
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
         CALL BKCHHO(TAPE,ICERN,IHOML,IMU,IEX,IDL,I34,IERO)
         IF (ICERN.EQ.0.AND.ILAB.NE.IHOML) ILAB=IHOML
C Now decode comment and find special keyword :
         CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMM)
         CALL CLTOU(COMM)
         IKOM=0
         DO 250 IK7=1,NBKM7
            KRAK=KEYH(IK7)
            CALL CLTOU(KRAK)
            lkrak=lnblnk(krak)
            INDKR=INDEX(COMM,KRAK(1:LKRAK))
            if (indkr.eq.0) go to 250
            if (COMM(indkr:indkr+lkrak).eq.krak(1:lkrak+1)) THEN
               IKOM=IK7
               GO TO 260
            ENDIF
 250     CONTINUE
 260     IF (IKOM.EQ.0) GO TO 300
C Increment the counters :
         IF (INDAT.EQ.3) NPOTY(ILAB,IKOM)=NPOTY(ILAB,IKOM)+1
         IF (INDAT.EQ.5) NMINY(ILAB,IKOM)=NMINY(ILAB,IKOM)+1
 300  CONTINUE
C
C Store in output files the results for this year and this KINCOD:
C
      DO 600 LAB=1,NLABS
         DO 500 KEY=1,NKEY
            NP=NPOTY(LAB,KEY)
            NM=NMINY(LAB,KEY)
            IF (NP+NM.EQ.0) GO TO 500
C decode the keyword explanation to find the mass, if any :
            CALL BKSQTMAS(NPER,KEYEX(KEY),MPART)
C write results on output file :
            ILINE=ILINE+1
            CALL BKSQWF(KINLI(IKIN),KINLW,LK)
            CALL BKSQWF(KEYH(KEY),KEYHW,LH)
            CALL BKSQWF(KEYEX(KEY),KEYEW,LE)
C
            WRITE (LWRRAW,1003) ILINE,IYEOG,NPER,KINLW(1:LK),
     +                          KEYHW(1:LH),KEYEW(1:LE),
     +                          MPART,NP,NM,LAB
C
 500     CONTINUE
 600  CONTINUE
C Go to next 'BKM7' bank :
      GO TO 30
C End of BKM7 banks :
 800  CONTINUE
      CLOSE (LWRRAW)
      CALL BKSQPNAM('MCKEYSTAT',ILINE,IBID)
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLMSK === : start building file',
     +        ' mckeystat.ctl')
 1003 FORMAT ('* ',3(I5,' ,'),(A),' , ',(A),' , '/,
     +        5X,(A),4(' , ',I6))
      END
      SUBROUTINE BKSQLPH(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for Run Quality definitions 'RUNQUALS'
C  Author  J.Boucrot  31-Mar-1999 , Mods 21-Sep-1999 for ctl
C Called from BKSQLA                      from  BOOKLIB
C Calls BKBBUP,BKSQWR,BKSQWF,BKSQPNAM     from  BOOKLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      PARAMETER ( NLIM = 3 )
      INTEGER IYEAL(NLIM),ISWIT(NLIM)
      CHARACTER KEYPW*4,GROUW*22,groulo*20,grou*20
      DATA IYEAL  / 1989 , 1997 , 1998 /
      DATA ISWIT  /  1 , 2 , 4 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
C Open the output file :
      CALL BKSQWR(LWRTMP,'RUNQUALS',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C
C Fill the internal variables of /BKFILU/ for run_quality:
C
      IDSEAR=1
      CALL BKBBUP(IERB)
      IF (IERB.NE.0) GO TO 900
C
C Loop on all years of data taking :
C
      DO 400 IK=1,NLIM
         ISWI=ISWIT(IK)
         IF (IK.EQ.1) THEN
            IYEMI=IYEAL(1)
            IYEMX=IYEAL(2)-1
         ELSEIF (IK.EQ.2) THEN
            IYEMI=IYEAL(2)
            IYEMX=IYEAL(2)
         ELSE
            IYEMI=IYEAL(3)
            IYEMX=LISYEA(NTOYEA-1)
         ENDIF
         DO 300 IYEA=IYEMI,IYEMX
            DO 200 ILG=4,NGROUF
               IF (LEPSGR(ISWI,ILG).EQ.0) GO TO 200
               ILINE=ILINE+1
C Write the corresponding line on the output file :
               CALL BKSQWF(keywph(ilg),KEYPW,LK)
               grou=grouph(ilg)
               call cutol(grou)
               groulo=grouph(ilg)(1:1)//grou(2:lnblnk(grou))
               CALL BKSQWF(groulo,GROUW,LG)
C
               WRITE (LWRTMP,1003) ILINE,IYEA,ILG,
     +               KEYPW(1:LK),GROUW(1:LG)
 200        CONTINUE
 300     CONTINUE
 400  CONTINUE
      CLOSE (LWRTMP)
      CALL BKSQPNAM('RUNQUALS',ILINE,IBID)
      IDSEAR=0
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLPH === : start building file ',
     +        'runquals.ctl')
 1003 FORMAT (3(I5,' , '),A4,' , ',A22)
      END
      SUBROUTINE BKSQLRU(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for Run Conditions 'RUNCOND'
C  Author  J.Boucrot  19-Mar-1999 , mods 21-Sep-1999 for ctl
C Called from BKSQLA                           from BOOKLIB
C Calls BKSQRYEN,BKVYEAR,BKPGSET,BKSQWF,BKSQWR from BOOKLIB
C Calls BKSQPNAM                               from BOOKLIB
C Calls ALSTIN                                 from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BSLUJJ ----
      PARAMETER(JBSLRN=1,JBSLLQ=2,JBSLNB=3,JBSLLU=4,JBSLBK=5,JBSLEW=6,
     +          LBSLUA=6)
      PARAMETER ( IRMA = 10000 )
      character fqual*30,FQUAL2*32
      CHARACTER QUOT*1,TAPE*8
      LOGICAL BTEST
      DATA QUOT / '"' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
C Open the output file :
      CALL BKSQWR(LWBMBY,'RUNCOND',IERR)
      IF (IERR.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C Loop on all 'BRUC' banks :
      ILINE=0
      JBRUC=NAMIND('BRUC')+1
 100  JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 600
      NPER=IW(JBRUC-2)
      DO 500 IBRUC=1,LROWS(JBRUC)
         ILINE=ILINE+1
         KBRUC=KROW(JBRUC,IBRUC)
         CALL ALSTIN(IW(KBRUC+JBRUVS),2,TAPE)
         IGLA=IW(KBRUC+JBRUBR)
         IRUN=IW(KBRUC+JBRURN)
C Write data in yyyymmdd format :
         IDT2=IW(KBRUC+JBRUWD)
         CALL BKY2K(IDT2,IRMA,IYYD)
         IDTIN=IYYD*IRMA+MOD(IDT2,IRMA)
C Find rounded LEP energy:
         IELEP=IW(KBRUC+JBRUTE)
         CALL BKSQRYEN(IRUN,IELEP,INOME)
C Luminosity : LCAL by default, but put the SiCAL on ewhen it exists
C ( for runs of mid-1992 until end of 1995 LEP1 data)
C
          XLUM=RW(KBRUC+JBRULU)
          JBSIC=NLINK('BSLU',NPER)
          IF (JBSIC.GT.0) THEN
             DO 60 IBSIC=1,LROWS(JBSIC)
                KBSIC=KROW(JBSIC,IBSIC)
                IF (IW(KBSIC+JBSLRN).NE.IRUN) GO TO 60
                XLUM=RW(KBSIC+JBSLLU)
                GO TO 70
 60          CONTINUE
 70          CONTINUE
          ENDIF
C Build array of run_quality flags :
         FQUAL=' '
         ISYEAR=0
         IBKINT=1
         ISPERF=0
         IGRLEP=0
         PHYKEY=' '
         ISRUNF=IRUN
         ISRUNL=IRUN
         CALL BKVYEAR(IER)
         IF (IER.NE.0) GO TO 900
         CALL BKPGSET
C
         NBIMX=0
         DO 200 IB=1,NGPHY
            FQUAL(IB:IB)='F'
            IF (IB.GE.4.AND.IPGVAL(IB).EQ.0) GO TO 200
            IF (BTEST(IGLA,IB-1)) FQUAL(IB:IB)='T'
            NBIMX=IB
 200     CONTINUE
C
C Write out the informations:
 300     CALL BKSQWF(FQUAL(1:NBIMX),FQUAL2,NF)
         WRITE (LWBMBY , 1003 ) ILINE,IRUN,NPER,FQUAL2(1:NF),
     +                          quot,TAPE(1:6),quot,IW(KBRUC+JBRULF),
     +                          IDTIN,(IW(KBRUC+K),K=JBRUWH,JBRUEV),
     +                          IELEP,INOME,IW(KBRUC+JBRUNZ),
     +                          IW(KBRUC+JBRUNB),IW(KBRUC+JBRUCS),
     +                          XLUM,RW(KBRUC+JBRUVL)
C
 500  CONTINUE
      GO TO 100
C Normal end:
 600  CONTINUE
      CLOSE ( LWBMBY )
      CALL BKSQPNAM('RUNCOND',ILINE,IBID)
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 900  IER=1
 999  RETURN
 1001 FORMAT (/22X,'=== Subroutine BKSQLRU === : start building file ',
     +        'runcond.ctl')
 1003 FORMAT ('*',2(I7,' ,'),I3,' ,',1X,(A),' , ',A1,A6,A1,' ,',
     +        I6,' , ',I8,' , ',3(I6,' , ')/,
     +        3x,4(I6,' , '),F12.4,' , ',F12.4)
      END
      SUBROUTINE BKSQLRY(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl files for Run-Fills 'RUNBYYEAR'
C     and the ctl file for LEP energy by Year 'ENERGYLEP'
C  Author  J.Boucrot  19-Mar-1999, mod 21-Sep-1999 for ctl
C Called from BKSQLA                         from BOOKLIB
C Calls  BKLEPL,BKTOLSET,BKSQWR,BKSQWF,BKY2K from BOOKLIB
C Calls  BKSQPNAM                            from BOOKLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
      PARAMETER ( IRMA = 10000 , NPLE = 3 , NPERL = 47 )
      PARAMETER ( NTOYA = 15 , NELEP = 10)
      COMMON / YEAPER / NYEAOK,IYEALI(NTOYA),IPERMI(NTOYA),
     +                  IPERMX(NTOYA)
      COMMON / YEALEP / LENEYR(NTOYA,NELEP)
      CHARACTER FPER*7,FPERW*9
      CHARACTER*7 PERLE(NPLE)
      DATA IRUMI,IRUMX  / 999999 , -1000  /
      DATA IFILI,IFILX  / 999999 , -1000  /
      DATA NPRLI,NPRLX  / 999999 , -1000  /
      DATA IYEAF  / 999 /
      DATA PERLE  / 'LEP 1  ' , 'LEP 1.5' , 'LEP 2  ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      ILINE=0
      ILIEN=0
      IKRA=0
      NYEAOK=0
      DO 10 IY=1,NTOYA
         IYEALI(IY)=0
         IPERMI(IY)=0
         IPERMX(IY)=0
         DO 5 IL=1,NELEP
            LENEYR(IY,IL)=0
  5      CONTINUE
 10   CONTINUE
C
C Open the output file for run/fills by year :
C
      CALL BKSQWR(LWBMBY,'RUNBYYEAR',IER1)
      IF (IER1.NE.0) GO TO 999
      WRITE ( LWRDBG,1001)
C
C Open the output file for LEP energies by year :
C
      CALL BKSQWR(LWRFRV,'ENERGYLEP',IER2)
      IF (IER2.NE.0) GO TO 999
      WRITE ( LWRDBG,2001)
C----------------------------------------------------------------------
C
C Loop on all 'BRUC' banks :
C
      JBRUC=NAMIND('BRUC')+1
      IF (JBRUC.LE.0) GO TO 900
 100  JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 600
      NPER=IW(JBRUC-2)
C If last period of 1995 LEP 1 data just finished, store the line :
      IF (NPER.EQ.NPERL) THEN
         ILINE=ILINE+1
         CALL BKSQWF(FPER,FPERW,LF)
         WRITE ( LWBMBY , 1003 ) iline,FPERW(1:LF),
     +                           IYEAF,IRUMI,IRUMX,
     +                           IFILI,IFILX,NPRLI,NPRLX
C Store corresponding LEP energies :
         ISRUNF=IRUMI
         ISRUNL=IRUMX
         ISYEAR=IYEAF
         ILP195=0
         IF (ISRUNF.LE.MXLRU1) ILP195=1
         CALL BKTOLSET
         CALL BKLEPL
         DO ILEP=1,NLEPSF
            ILIEN=ILIEN+1
            CALL BKSQWF(FPER,FPERW,LF)
            WRITE (LWRFRV,2003) ILIEN,FPERW(1:LF),IYEAF,ILEPEN(ILEP)
         ENDDO
C Store values in common /YEAPER/
         NYEAOK=NYEAOK+1
         IYEALI(NYEAOK)=IYEAF
         IPERMI(NYEAOK)=NPRLI
         IPERMX(NYEAOK)=NPRLX
         DO IIL=1,NLEPSF
            LENEYR(NYEAOK,IIL)=ILEPEN(IIL)
         ENDDO
C
         IYEAF=IYEA
         irumi=999999
         irumx=-1000
         ifili=999999
         ifilx=-1000
         nprli=999999
         nprlx=-1000
      ENDIF
C If last period of 1995 LEP 1.5 data just finished, store the line :
      IF (NPER.EQ.NPERL+1) THEN
         ILINE=ILINE+1
         CALL BKSQWF(FPER,FPERW,LF)
         WRITE ( LWBMBY , 1003 ) ILINE,FPERW(1:LF),
     +                           IYEAF,IRUMI,IRUMX,
     +                           IFILI,IFILX,NPERL,NPERL
C Store corresponding LEP energies :
         ISRUNF=IRUMI
         ISRUNL=IRUMX
         ISYEAR=IYEAF
         ILP195=0
         IF (ISRUNF.LE.MXLRU1) ILP195=1
         CALL BKTOLSET
         CALL BKLEPL
         DO ILEP=1,NLEPSF
            ILIEN=ILIEN+1
            CALL BKSQWF(FPER,FPERW,LF)
            WRITE (LWRFRV,2003) ILIEN,FPERW(1:LF),IYEAF,ILEPEN(ILEP)
         ENDDO
C Store values in /YEAPER/ :
         IPERMX(NYEAOK)=NPERL
         il9a=0
         do 300 iik=1,nelep
            if (leneyr(nyeaok,iik).eq.0) go to 310
            il9a=iik
 300     continue
 310     if (il9a.eq.0) go to 320
         DO IIL=1,NLEPSF
            LENEYR(NYEAOK,il9a+IIL)=ILEPEN(IIL)
         ENDDO
 320     continue
C
         IYEAF=IYEA+1
         irumi=999999
         irumx=-1000
         ifili=999999
         ifilx=-1000
         nprli=999999
         nprlx=-1000
      ENDIF
C
      IF (NPER.LT.NPERL) THEN
         FPER=PERLE(1)
      ELSEIF (NPER.EQ.NPERL) THEN
         FPER=PERLE(2)
      ELSE
         FPER=PERLE(3)
      ENDIF
C
C Loop on all runs of period NPER:
C
      DO 500 IBRUC=1,LROWS(JBRUC)
         KBRUC=KROW(JBRUC,IBRUC)
         IKRA=IKRA+1
         NRUN=IW(KBRUC+JBRURN)
         IFIL=IW(KBRUC+JBRULF)
         IF (IFIL.LE.10) GO TO 500
         CALL BKY2K(IW(KBRUC+JBRUWD),IRMA,IYEA)
         IF (IYEA.NE.IYEAF.AND.IYEA.NE.1996) THEN
            IF (IKRA.NE.1) THEN
               ILINE=ILINE+1
               CALL BKSQWF(FPER,FPERW,LF)
               WRITE ( LWBMBY , 1003 ) ILINE,FPERW(1:LF),
     +                                 IYEAF,IRUMI,IRUMX,
     +                                 IFILI,IFILX,NPRLI,NPRLX
C Store corresponding LEP energies :
               ISRUNF=IRUMI
               ISRUNL=IRUMX
               ISYEAR=IYEAF
               ILP195=0
               IF (ISRUNF.LE.MXLRU1) ILP195=1
               CALL BKTOLSET
               CALL BKLEPL
               DO ILEP=1,NLEPSF
                  ILIEN=ILIEN+1
                  CALL BKSQWF(FPER,FPERW,LF)
                  WRITE (LWRFRV,2003) ILIEN,FPERW(1:LF),
     +                                IYEAF,ILEPEN(ILEP)
               ENDDO
C Store values in common /YEAPER/ :
               NYEAOK=NYEAOK+1
               IYEALI(NYEAOK)=IYEAF
               IPERMI(NYEAOK)=NPRLI
               IPERMX(NYEAOK)=NPRLX
               DO IIL=1,NLEPSF
                  LENEYR(NYEAOK,IIL)=ILEPEN(IIL)
               ENDDO
C
            ENDIF
            IYEAF=IYEA
            irumi=999999
            irumx=-1000
            ifili=999999
            ifilx=-1000
            nprli=999999
            nprlx=-1000
         ENDIF
C
         IRUMI=MIN0(IRUMI,NRUN)
         IRUMX=MAX0(IRUMX,NRUN)
         NPRLI=MIN0(NPRLI,NPER)
         NPRLX=MAX0(NPRLX,NPER)
         IF (IFIL.GT.0) IFILI=MIN0(IFILI,IFIL)
         IF (IFIL.GT.0) IFILX=MAX0(IFILX,IFIL)
 500  CONTINUE
      GO TO 100
C Normal end:
 600  CONTINUE
      ILINE=ILINE+1
      CALL BKSQWF(FPER,FPERW,LF)
      WRITE ( LWBMBY , 1003 ) ILINE,FPERW(1:LF),
     +                        IYEAF,IRUMI,IRUMX,
     +                        IFILI,IFILX,NPRLI,NPRLX
C Store corresponding LEP energies :
      ISRUNF=IRUMI
      ISRUNL=IRUMX
      ISYEAR=IYEAF
      ILP195=0
      IF (ISRUNF.LE.MXLRU1) ILP195=1
      CALL BKTOLSET
      CALL BKLEPL
      DO ILEP=1,NLEPSF
         ILIEN=ILIEN+1
         CALL BKSQWF(FPER,FPERW,LF)
         WRITE (LWRFRV,2003) ILIEN,FPERW(1:LF),IYEAF,ILEPEN(ILEP)
      ENDDO
C Store values in common /YEAPER/ :
      NYEAOK=NYEAOK+1
      IYEALI(NYEAOK)=IYEAF
      IPERMI(NYEAOK)=NPRLI
      IPERMX(NYEAOK)=NPRLX
      DO IIL=1,NLEPSF
         LENEYR(NYEAOK,IIL)=ILEPEN(IIL)
      ENDDO
C
      CLOSE ( LWBMBY )
      CLOSE ( LWRFRV )
      CALL BKSQPNAM('RUNBYYEAR',ILINE,IBID)
      CALL BKSQPNAM('ENERGYLEP',ILIEN,IBID)
      GO TO 999
C----------------------------------------------------------------------
C No room for banks :
 900  IER=1
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLRY === : start building file ',
     +        'runbyyear.ctl')
 1003 FORMAT (I5,' , ',1X,A10,' , ',6(I6,' , '),I6)
 2001 FORMAT (/22X,'=== Subroutine BKSQLRY === : start building file ',
     +        'energylep.ctl')
 2003 FORMAT (I5,' , ',1X,A10,2(' , ',I6))
      END
      SUBROUTINE BKSQLSI4(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for 4-Bunch lumi LUMI4BUNCH
C  Author  J.Boucrot  20-Apr-1999 , mods 21-Sep-1999 for ctl
C Called from BKSQLA                      from  BOOKLIB
C Calls BKSQWR,BKSQPNAM                   from  BOOKLIB
C Calls ALSTIN                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
C Open the output file :
      CALL BKSQWR(LWRTMP,'LUMI4BUNCH',IERR)
      IF (IERR.NE.0) GO TO 900
      WRITE ( LWRDBG,1001)
C
C Loop on all periods of 4-Bunch lumi :
C
      JBS4B=NAMIND('BS4B')+1
 100  JBS4B=IW(JBS4B-1)
      IF (JBS4B.EQ.0) GO TO 500
      DO 400 IBS4B=1,LROWS(JBS4B)
         KBS4B=KROW(JBS4B,IBS4B)
         ILINE=ILINE+1
         WRITE (LWRTMP,1003) ILINE,IW(KBS4B+JBS4RN),IW(KBS4B+JBS4LQ),
     +                       IW(KBS4B+JBS4N1),RW(KBS4B+JBS4L1),
     +                       IW(KBS4B+JBS4N2),RW(KBS4B+JBS4L2),
     +                       IW(KBS4B+JBS4N3),RW(KBS4B+JBS4L3),
     +                       IW(KBS4B+JBS4N4),RW(KBS4B+JBS4L4)
 400  CONTINUE
      GO TO 100
 500  CONTINUE
      CLOSE (LWRTMP)
      CALL BKSQPNAM('LUMI4BUNCH',ILINE,IBID)
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLSI4 === : start building file ',
     +        'lumi4bunch.ctl')
 1003 FORMAT (2(I6,' , '),I6,4(' , ',I5,' , ',F8.4))
      END
      SUBROUTINE BKSQLTAP(IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Writes the ctl file for tape/cartridges descritpion CARTDES
C  Author  J.Boucrot  17-Aug-1999
C Called from BKSQLMAK                    from  BOOKLIB
C Calls BKSQWR,BKSQWF,BKSQPNAM            from  BOOKLIB
C Calls ALSTIN                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
      PARAMETER ( NFTA = 50 )
      CHARACTER TART*4,CHAINT*4,TAPQ*4,TLABL*4
      CHARACTER*2 TANA(NFTA),TLBL(NFTA)
      INTEGER LILO(NFTA),LIHI(NFTA)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      ILINE=0
C Initialise arrays:
      JRTHO=IW(NAMIND('RTHO'))
      IF (JRTHO.EQ.0) GO TO 999
      NTAOK=0
      DO 10 I=1,NFTA
         TANA(I)=' '
         TLBL(I)=' '
         LILO(I)=0
         LIHI(I)=0
 10   CONTINUE
C Open the output file :
      CALL BKSQWR(LWRTMP,'CARTDES',IERR)
      IF (IERR.NE.0) GO TO 900
      WRITE ( LWRDBG,1001)
C
C Loop on all rows of bank 'RTHO' :
C
      DO 100 IRTHO=1,LROWS(JRTHO)
         KRTHO=KROW(JRTHO,IRTHO)
         TART=CHAINT(IW(KRTHO+JBTHTA))
         NUMIN=IW(KRTHO+JBTHFI)
         NUMAX=IW(KRTHO+JBTHLA)
         iokta=0
         DO 50 K=1,NTAOK
            IF (TART(1:2).EQ.TANA(K)) THEN
               IOKTA=K
               LILO(K)=MIN0(NUMIN,LILO(K))
               LIHI(K)=MAX0(NUMAX,LIHI(K))
            ENDIF
 50      CONTINUE
         IF (IOKTA.GT.0) GO TO 100
         NTAOK=NTAOK+1
         TANA(NTAOK)=TART(1:2)
         TLBL(NTAOK)=TART(4:4)//'L'
         LILO(NTAOK)=NUMIN
         LIHI(NTAOK)=NUMAX
 100  CONTINUE
C
      IF (NTAOK.EQ.0) GO TO 500
      DO 400 IK=1,NTAOK
         IF (TANA(IK).EQ.'  ') GO TO 400
         ILINE=ILINE+1
         CALL BKSQWF(TANA(IK),TAPQ,LQ)
         CALL BKSQWF(TLBL(IK),TLABL,LB)
         WRITE (LWRTMP,1003) ILINE,TAPQ(1:LQ),LILO(IK),LIHI(IK),TLABL
 400  CONTINUE
 500  CONTINUE
      CLOSE (LWRTMP)
      CALL BKSQPNAM('CARTDES',ILINE,IBID)
      GO TO 999
C ERROR :
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKSQLTAP === : start building file ',
     +        'cartdes.ctl')
 1003 FORMAT (I6,' , ',A4,2(' , ',I6),' , ',A4)
      END
      SUBROUTINE BKSQMCC(IYEAR,KINC,LISLE,NLE,IROUN,IER)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Builds internal 'BMCC' banks for ctl file mclepenergy
C  Author  J.Boucrot  10-May-1999
C Called from BKSQLMS                     from  BOOKLIB
C Calls AUBOS                             from  ALEPHLIB
C  INPUT arguments :
C IYEAR = Year of Geometry
C  KINC = Kingal code of generator
C LISLE = list of rounded LEP energies of this year (MeV)
C   NLE = number of rounded LEP energies of this year
C IROUN = tolerance for LEP energies for this year (MeV)
C OUTPUT argument :
C   IER = 1 if no room for 'BMCC' banks
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      PARAMETER (NBMCC = 2, NKIN = 200 , NMLEP = 60 , IMINI = 80000)
      PARAMETER ( IRMY = 100 )
      INTEGER LICOD(NMLEP)
      INTEGER LISLE(*)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NCOD=0
      JBSET=NLINK('BSET',KINC)
      IF (JBSET.EQ.0) GO TO 999
      CALL VZERO(LICOD,NMLEP)
      JBMCC=NLINK('BMCC',IYEAR)
C Book bank 'BMCC', NR=IYEAR, if necessary :
      IF (JBMCC.EQ.0) THEN
         LENBM=LMHLEN*(1+NBMCC*NKIN*NMLEP)
         CALL AUBOS('BMCC',IYEAR,LENBM,JBMCC,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JBMCC+LMHROW)=0
         IW(JBMCC+LMHCOL)=NBMCC
      ENDIF
C Now loop on all MCarlo data sets of this year to get the list of energ
      DO 200 IBSET=1,LROWS(JBSET)
         KBSET=KROW(JBSET,IBSET)
C Get bank BSPF and year of geometry:
         IBSPF=IW(KBSET+JBSEBS)
         JBSPF=NLINK('BSPF',KINC)
         IF (JBSPF.LE.0) GO TO 200
         KBSPF=KROW(JBSPF,IBSPF)
         CALL BKY2K(IW(KBSPF+JBSPRG),IRMY,IYEA)
         IF (IYEA.NE.IYEAR) GO TO 200
C Get the generated LEP energy for this dataset:
         IENGY=IW(KBSET+JBSEBN)
         IF (IENGY.LT.IMINI) GO TO 200
C Get the corresponding rounded energy:
         IROU=0
         DO 50 IK=1,NLE
            IF (IABS(IENGY-LISLE(IK)).GT.IROUN) GO TO 50
            IROU=LISLE(IK)
            GO TO 60
 50      CONTINUE
 60      IF (IROU.EQ.0) GO TO 200
C If this energy was already in LICOD, skip; otherwise store:
         IND=IUCOMP(IROU,LICOD,NCOD)
         IF (IND.EQ.0.OR.NCOD.EQ.0) THEN
            NCOD=NCOD+1
            IF (NCOD.GT.NMLEP) GO TO 900
            LICOD(NCOD)=IROU
         ENDIF
 200  CONTINUE
C
C Now put the results in 'BMCC' :
C
      IF (NCOD.LE.0) GO TO 999
      DO 500 N=1,NCOD
         KBMCC=KNEXT(JBMCC)
         IW(KBMCC+1)=KINC
         IW(KBMCC+2)=LICOD(N)
         IW(JBMCC+LMHROW)=IW(JBMCC+LMHROW)+1
 500  CONTINUE
      GO TO 999
C No room for banks :
 900  IER=1
C
 999  RETURN
      END

      SUBROUTINE BKSQPNAM(NAME,INROW,IROU)
C-----------------------------------------------------------------------
CKEY SQLBOOK TOOL
C! Stores or gives the total number of rows of ctl table NAME
C
C Called from all BKSQLxxx routines and from BKSQUPVR  from BOOKLIB
C
C Input arguments :
C   NAME = name of ctl file
C  INROW = if >0 , total number of rows in this file
C                  to be put in inumrow in /sqldir/
C          if = 0 --> give the number of rows as output in IROU
C Output argument:
C  IROU  = total number of rows in this file, from inumrow
C          given as output if INROW = 0
C-----------------------------------------------------------------------
C-- SQLDIR ----
      parameter ( nsqfmx = 20)
      character filsql*12,alb_dir*45,ctl_dir*51
      COMMON / sqldir / lalboo,nbsqfil,isizsqf(nsqfmx),isizsql(nsqfmx),
     +                  ilensql(nsqfmx),inumrow(nsqfmx),lalctl
      COMMON / cqldir / alb_dir,ctl_dir,filsql(nsqfmx)
       CHARACTER*(*) NAME
C-----------------------------------------------------------------------
       IROU=0
       LLN=LNBLNK(NAME)
       DO 100 IK=1,NBSQFIL
          LLF=LNBLNK(FILSQL(IK))
          IF (NAME(1:LLN).NE.FILSQL(IK)(1:LLF)) GO TO 100
          IF (INROW.GT.0) THEN
             INUMROW(IK)=INROW
          ELSE
             IROU=INUMROW(IK)
          ENDIF
          GO TO 200
 100  CONTINUE
 200  CONTINUE
 999  RETURN
      END
      SUBROUTINE BKSQPREP(INOSQ,INEWQ,IER)
C-----------------------------------------------------------------------
CKEY SQLBOOK INIT
C! Scans the list of "ctl files" and fills common SQLDIR
C J. Boucrot  20-05-1999
C Called from BKSQLA                              from BOOKLIB
C Calls PRPSLS,BKREAK,BKPRLI,BKNEWP,BKBPLI,BKBYEA from BOOKLIB
C  Input argument :
C  INOSQ = 1 if files to be renamed ; # 0 otherwise
C  INEWQ = 1 if Nnew files to be built and nothing else
C  Output argument :
C   IER = 0  all OK
C   IER = 1  unable to read the list of files
C   IER = 2  too many ctlfiles (should never happen !)
C   IER = 3  no update today --> no need to do any SLQ job
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- SQLDIR ----
      parameter ( nsqfmx = 20)
      character filsql*12,alb_dir*45,ctl_dir*51
      COMMON / sqldir / lalboo,nbsqfil,isizsqf(nsqfmx),isizsql(nsqfmx),
     +                  ilensql(nsqfmx),inumrow(nsqfmx),lalctl
      COMMON / cqldir / alb_dir,ctl_dir,filsql(nsqfmx)
      CHARACTER albmd*40,checkf*4,checko*8,filsq*12,filsl*12
      CHARACTER DATE*12,SIZE*9,linch*140,ctl_name*11
      CHARACTER*80 NAMPR,FILOL,FILNW,FILE,FILDB,LINLN,FILLN,FILNO
      LOGICAL LEX
      DATA ALBMD / '/afs/cern.ch/user/a/albook/public_aleph/' /
      DATA CHECKF,CHECKO / '.ctl' , '.ctl_old' /
      DATA CTL_NAME / 'sql_loader/' /
C-----------------------------------------------------------------------
      IER=0
C Call all the initialisation subroutines needed by the SQL process
      CALL BKREAK(IERK)
      IF (IERK.NE.0) GO TO 905
      CALL BKPRLI(IERL)
      IF (IERL.NE.0) GO TO 905
      CALL BKNEWP(IERP)
      IF (IERP.NE.0) GO TO 905
      CALL BKBPLI(IERI)
      IF (IERI.NE.0) GO TO 905
      CALL BKBYEA(IERY)
      IF (IERY.NE.0) GO TO 905
      CALL BKADRI(IERD)
      IF (IERD.NE.0) GO TO 905
C-----------------------------------------------------------------------
C Define the name of the BKSQLA debug file and open it:
      FILDB=' '
      FILDB=ALS_STAT(1:ILSTAT)//'bksqla.debugout'
      call system(' rm -f '//fildb(1:lnblnk(fildb)))
      OPEN (LWRDBG, FILE = FILDB, STATUS = 'NEW', ERR = 999)
C Define the directory on which the ctlfiles will be written:
      IF (IW(NAMIND('BTST')).EQ.0) THEN
         alb_dir=albmd//'prod/'
      ELSE
         alb_dir=albmd//'test/'
      ENDIF
      lalboo=lnblnk(alb_dir)
C Check if the is a "noupdate_today" file : if yes, quit immediately:
      FILNO=' '
      FILNO=als_stat(1:ilstat)//'noupdate_today'
      INQUIRE (FILE=FILNO , EXIST = LEX)
      IF (LEX) GO TO 930
C Define the directory on which are the reference files *.ctl_header :
      ctl_dir=albmd//ctl_name
      lalctl=lnblnk(ctl_dir)
C RAZ common / sqldir/ :
      nbsqfil=0
      DO 1 NN=1,NSQFMX
         ISIZSQF(NN)=0
         ISIZSQL(NN)=0
         ILENSQL(NN)=0
         INUMROW(NN)=0
         FILSQL(NN)=' '
 1    CONTINUE
      IF (INEWQ.GT.0) GO TO 999
      IF (IW(NAMIND('DOSQ')).GT.0) GO TO 999
C ----------------------------------------------------------------------
C
C The list of ctlfiles is built in the alb_dir directory using ls -L
C
      NAMPR=' '
      NAMPR=alb_dir(1:lalboo)//'temp.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      CALL SYSTEM(' rm -f '//NAMPR)
      IF (INOSQ.EQ.0) THEN
         CALL SYSTEM(' ls -L -o '//alb_dir(1:lalboo)//'*.ctl'//
     +               ' > '//NAMPR)
      ELSE
         CALL SYSTEM(' ls -L -o '//alb_dir(1:lalboo)//'*.ctl_old'//
     +               ' > '//NAMPR)
      ENDIF
      OPEN ( LECRQL , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C
C Read the list of ctlfiles on Fortran unit LECRQL :
C
 2    READ ( LECRQL , '(A)' , END=100 , ERR=900 )   LINCH
C Decode the file name and size:
      FILNM=' '
      CALL PRPSLS(LINCH,FILE,DATE,SIZE)
      ISQL=INDEX(FILE,CHECKF)
      IF (ISQL.EQ.0) GO TO 2
      NBSQFIL=NBSQFIL+1
      IF (NBSQFIL.GT.NSQFMX) GO TO 920
      FILSQL(NBSQFIL)=FILE(1:ISQL-1)
      LFQ=LNBLNK(FILSQL(NBSQFIL))
      READ ( SIZE , '(I8)' )  ISIZSQF(NBSQFIL)
C Skip the following renaming section if INOSQ # 0 :
      IF (INOSQ.NE.0) GO TO 2
C Rename the old file ctlfile --> ctlfile_old :
      FILOL=' '
      FILOL=ALB_DIR(1:LALBOO)//FILSQL(NBSQFIL)(1:LFQ)//CHECKF
      LLO=LNBLNK(FILOL)
      FILNW=' '
      FILNW=ALB_DIR(1:LALBOO)//FILSQL(NBSQFIL)(1:LFQ)//CHECKO
      LLW=LNBLNK(FILNW)
      call system(' mv '//FILOL(1:LLO)//' '//FILNW(1:LLW))
C
      GO TO 2
C
C Normal exit : erase the temporary file :
C
 100  close (lecrql)
      WRITE (LWRDBG,1002) NBSQFIL
      call system(' rm -f '//nampr(1:lnblnk(nampr)))
C-----------------------------------------------------------------------
C Now read the file describing the number of linew per row
C for each ctlfile (stored in array ilensql) for BKSQUPCO:
C
      FILLN=' '
      FILLN=ALS_REFR(1:ILREFR)//'ctldesc.liste'
      FILLN=FILLN(1:LNBLNK(FILLN))
      OPEN ( LECPHY , FILE = FILLN , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C
 120  READ (LECPHY, '(A)' , END=500, ERR=910) LINLN
      FILSQ=' '
      READ (LINLN,1031) FILSQ,ILEN
      CALL CLTOU(FILSQ)
      LLQ=LNBLNK(FILSQ)
      IF (LLQ.EQ.0.OR.ILEN.EQ.0) GO TO 910
      IKK=0
      DO 200 IK=1,NBSQFIL
         FILSL=FILSQL(IK)
         ISL=LNBLNK(FILSL)
         IF (ISL.NE.LLQ) GO TO 200
         IF (FILSQ(1:LLQ).NE.FILSL(1:ISL)) GO TO 200
         IKK=IK
         GO TO 210
 200  CONTINUE
 210  IF (IKK.EQ.0) GO TO 910
      ILENSQL(IKK)=ILEN
      GO TO 120
C
 500  CLOSE (LECPHY)
      GO TO 999
C-----------------------------------------------------------------------
C Processing of errors :
C error in list of ctlfiles:
 900  ier=1
      WRITE (LWRDBG,1010)
      GO TO 999
C Initialisation routines:
 905  ier=1
      WRITE (LWRDBG,1009)
      GO TO 999
C error in file ctlfile:
 910  ier=1
      WRITE (LWRDBG,2010)
      GO TO 999
C too many ctlfiles:
 920  IER=2
      WRITE (LWRDBG,1011) NBSQFIL
      GO TO 999
C No update today: quit
 930  IER=3
      WRITE (LWRDBG,1013)
C
 999  return
C-----------------------------------------------------------------------
 1002 FORMAT (/22x,'  === BKSQPREP ===  Number of',
     +         ' Old ctl files =',I6)
 1009 FORMAT (/22x,'  *** ERROR IN BKSQPREP in the Init routines')
 1010 FORMAT (/22x,'  *** ERROR IN BKSQPREP in the list of ctlfile')
 2010 FORMAT (/22x,'  *** ERROR IN BKSQPREP in FILE ctldesc.liste')
 1011 FORMAT (/22x,'  *** ERROR IN BKSQPREP too many ctlfiles =',i8)
 1013 FORMAT (/22x,'  *** ERROR IN BKSQPREP : no update today, quit')
 1031 FORMAT (1X,A12,4X,I1)
      END
      SUBROUTINE BKSQRED(IER)
C----------------------------------------------------------------------
CKEY SQLBOOK
C! Read file of all Edirs and build 'BTNA' banks for SQL
C  Author  J. Boucrot 18-Mar-1999
C Called from BKSQLA                        from BOOKLIB
C Calls BKSQRRV,BKSTEDNA,BKCHKT             from BOOKLIB
C Output argument:
C     IER = 0  :  all OK
C         = 1  :  no space for BOS banks
C         = 2  :  List of EDIRs not found
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( NCATF = 3 )
      CHARACTER*2 CHKL(NCATF)
      INTEGER BKINCA
      CHARACTER BLAF*80,BLAFU*80,TAPNA*8,TEXT*80
      DATA CHKL / 'P0' , 'D0' , 'M0' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      NFOU=0
C OPEN and READ the List of EDirs :
      IPSVX=1
 10   BLAF=' '
      CALL BKSQRRV(IPSVX,BLAF,IERP)
      IF (IERP.EQ.2) GO TO 920
      IF (IERP.EQ.1) GO TO 800
      IPSVX=IPSVX+1
      BLAFU = BLAF
      CALL CLTOU(BLAFU)
C-----------------------------------------------------------------------
C Check the information found .
      IEDIR=0
      ITAFI=0
      IOK=0
C Is it a Run file or the EDIR of a Run File ?
      DO 15 II=1,NCATF
         IF (BLAFU(1:2).NE.CHKL(II)) GO TO 15
         IOK=II
         GO TO 20
 15   CONTINUE
C This is a Run File , or the EDIR of a Run File : NOT kept
 20   IF (IOK.GT.0) GO TO 10
C-----------------------------------------------------------------------
C The present file corresponds to a Cartridge Edir :
C
 70   TAPNA=' '
      TAPNA(1:6)=BLAFU(1:6)
      CALL BKCHKT(TAPNA,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0) GO TO 10
C Extract tape name and file #:
      IEDIR=INDEX(BLAFU(1:17),'.EDIR')
      IF (IEDIR.EQ.0) GO TO 10
      IFILE=1
      IUND=INDEX(BLAFU(1:IEDIR-1),'_')
      IF (IUND.GT.0) IFILE=BKINCA(BLAFU(IUND+1:IEDIR-1))
C Store tape name and file in a coded way in temporary bank 'BTNA':
      CALL BKSTEDNA(TAPNA(1:6),IFILE,IER)
      IF (IER.NE.0) GO TO 995
      NFOU=NFOU+1
      GO TO 10
C-----------------------------------------------------------------------
C End , error codes
 800  WRITE (LWRDBG,1022)  NFOU
      GO TO 999
C Problem with LISTFILE :
 920  IER=2
      GO TO 999
C NO room for 'BTNA' banks:
 995  IER=1
      WRITE ( LWRDBG,1040)
 999  RETURN
C----------------------------------------------------------------------
 1022 FORMAT (22X,'-  BKSQRED Edir files processed : ',I8)
 1040 FORMAT (/5X,'** BKSQRED  ** NO ROOM FOR BOS ')
      END
      SUBROUTINE BKSQRRV(IPASS,BLAF,IER)
C----------------------------------------------------------------------
CKEY SQLBOOK
C! Reads the list of all EDIR files
C  Author  J. Boucrot 18-Mar-1999
C Auxiliary to BKSQRED                from BOOKLIB
C Calls  PRPSLS                       from BOOKLIB
C Input argument :
C  IPASS  = CALL number to this routine
C Output arguments:
C   BLAF  = File name found
C     IER = 0  :  all OK
C         = 1  :  end of file
C         = 2  :  error on list of files
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- SQLDIR ----
      parameter ( nsqfmx = 20)
      character filsql*12,alb_dir*45,ctl_dir*51
      COMMON / sqldir / lalboo,nbsqfil,isizsqf(nsqfmx),isizsql(nsqfmx),
     +                  ilensql(nsqfmx),inumrow(nsqfmx),lalctl
      COMMON / cqldir / alb_dir,ctl_dir,filsql(nsqfmx)
      CHARACTER INFO*80,BLAF*80,FLISF*80
      CHARACTER FILE*80,SIZE*9,DATE*12,MAIND*30,DIRFIL*60
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      IF (IPASS.EQ.1) THEN
         FLISF=' '
         MAIND=' '
         CALL GETENV('HOME',MAIND)
         LMD=LNBLNK(MAIND)
         DIRFIL=' '
         IF (IW(NAMIND('BTST')).EQ.0) THEN
            DIRFIL=MAIND(1:LMD)//'/prod/filelist/'
         ELSE
            DIRFIL=MAIND(1:LMD)//'/test/filelist/'
         ENDIF
         ldi=lnblnk(dirfil)
         FLISF = dirfil(:ldi)//'listfiles.data'
C Open the file containing the List of FILES and EDIRS  on LECTXT
         OPEN (LECTXT,STATUS='OLD',READONLY,FILE=FLISF,ERR=950)
         REWIND ( LECTXT )
      ENDIF
C Read the informations concerning disk files on the UNIX system:
 10   READ (LECTXT, '(A)', END=900, ERR=950 ) INFO
      ILD = LNBLNK(INFO)
      IF (ILD .EQ. 0) GO TO 10
      CALL PRPSLS(INFO,FILE,DATE,SIZE)
      BLAF = FILE
      BLAF(55:) = DATE
      BLAF(70:) = SIZE
      GO TO 999
C----------------------------------------------------------------------
C End of list file :
 900  IER=1
      CLOSE (LECTXT)
      GO TO 999
C  Error on list file :
 950  IER=2
      WRITE (LWRDBG,1001) FLISF
 1001 FORMAT (' == BKSQRRV Error in file : ',2x,a80)
 999  RETURN
      END
      SUBROUTINE BKSQRYEM(IYEA,IGENE,IROUE)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Computes the nominal energy of a MCarlo dataset
C  Author  J.Boucrot  07-May-1999
C Called from BKSQLRU                     from  BOOKLIB
C Calls BKFPER,BKTOLSET                   from  BOOKLIB
C  INPUT arguments :
C  IYEA = Year of Geometry
C IGENE = exact generated energy (in MeV)
C  OUTPUT argument :
C IROUE = rounded LEP energy for this year conditions
C----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( IZEN = 100000 , IY95 = 1995)
      PARAMETER ( IYLIM = 1995, IRL1 = 250, ERL1 =0.25 )
      PARAMETER ( NTOYM = 15 , NMLEP = 50)
      COMMON / YEAPMC / NYEAMC,IYEAMC(NTOYM),LENYMC(NTOYM,NMLEP)
C-----------------------------------------------------------------------
      IROUE=IGENE
      ISYEAR=IYEA
      IGEOYR=IYEA
C Find rank of year in IYEAMC;
      IYO=IUCOMP(IYEA,IYEAMC,NYEAMC)
      IF (IYO.EQ.0) GO TO 999
C Find tolerances for this year :
      ILP195=0
      IF (IGENE.LT.IZEN.AND.IYEA.EQ.IY95) ILP195=1
      IF (IYEA.LE.IY95.OR.ILP195.EQ.1) THEN
         IROUND=IRL1
         ITOLER=IRL1
         EROUND=ERL1
      ELSE
         CALL BKTOLSET
      ENDIF
C Find nominal energy:
      IEL=0
      DO 200 IK=1,NMLEP
         ILEP=LENYMC(IYO,IK)
         IF (ILEP.LE.0) GO TO 200
         IF (IABS(IGENE-ILEP).GT.IROUND) GO TO 200
         IEL=IK
         GO TO 250
 200  CONTINUE
 250  IF (IEL.EQ.0) GO TO 999
      IROUE=LENYMC(IYO,IEL)
C
 999  RETURN
      END
      SUBROUTINE BKSQRYEN(NRUN,IELEP,IENOM)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Computes the nominal energy of a run
C  Author  J.Boucrot  20-Apr-1999 - modified 7-Dec-1999
C Called from BKSQLRU                     from  BOOKLIB
C Calls BKFPER                            from  BOOKLIB
C  INPUT arguments :
C  NRUN = run number
C IELEP = exact LEP energy (in MeV)
C  OUTPUT argument :
C IENOM = nominal LEP energy for this run/year conditions
C----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      PARAMETER ( NTOYA = 15 , NELEP = 10 , NYMX = 20)
      INTEGER ILIEN(NYMX)
      COMMON / YEAPER / NYEAOK,IYEALI(NTOYA),IPERMI(NTOYA),
     +                  IPERMX(NTOYA)
      COMMON / YEALEP / LENEYR(NTOYA,NELEP)
C-----------------------------------------------------------------------
      IENOM=IELEP
      CALL BKFPER(NRUN,0,NPER)
      CALL VZERO(ILIEN,NYMX)
C
C Find year of data taking :
C
      IYO=0
      DO 100 IY=1,NYEAOK
         IF (NPER.LT.IPERMI(IY).OR.NPER.GT.IPERMX(IY)) GO TO 100
         IYO=IY
         GO TO 110
 100  CONTINUE
 110  IF (IYO.EQ.0) GO TO 999
      ISYEAR=IYEALI(IYO)
C
C Find all nominal energies of the year :
C
      ILL=0
      DO 200 IK=1,NYEAOK
         IF (IYEALI(IK).NE.ISYEAR) GO TO 200
         DO 150 IL=1,NELEP
            IENER=LENEYR(IK,IL)
            IF (IENER.LE.0) GO TO 150
            IF (ILL.GT.0) THEN
               IDEJA=IUCOMP(IENER,ILIEN,ILL)
               IF (IDEJA.GT.0) GO TO 150
            ENDIF
            ILL=ILL+1
            IF (ILL.GT.NYMX) GO TO 999
            ILIEN(ILL)=IENER
 150     CONTINUE
 200  CONTINUE
      if (ill.le.0) go to 999
C
C Now find the nearest nominal energy IENOM for input energy IELEP:
C
      ILMIN=99999
      IOKR=-1
      DO 300 IE=1,ILL
         IDIF=IABS(IELEP-ILIEN(IE))
         ILMIX=MIN0(ILMIN,IDIF)
         IF (ILMIX.LT.ILMIN) IOKR=IE
         ILMIN=ILMIX
 300  CONTINUE
      IF (IOKR.LE.0) GO TO 999
      IENOM=ILIEN(IOKR)
C
 999  RETURN
      END
      SUBROUTINE BKSQSIZ(NPER,NROW,ISIZ)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Computes the size of a dataset in Mbytes
C  Author  J.Boucrot  20-Apr-1999
C Called from BKSQLDA and BKSQLMC         from  BOOKLIB
C Calls BKBBUP                            from  BOOKLIB
C Calls ALSTIN                            from ALEPHLIB
C  OUTPUT argument :
C   IER = 1 if pb with BOS Banks ;  = 0 otherwise
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER TAPE*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      GBYT=0.
      ISIZ=1
      LRECO=JALREC(DUMMY)
C Get pointers:
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.EQ.0) GO TO 999
      JBRLI=NLINK('BRLI',NPER)
      IF (JBRLI.EQ.0) GO TO 999
      JBTPN=NLINK('BTPN',NPER)
      IF (JBTPN.EQ.0) GO TO 999
      KBSET=KROW(JBSET,NROW)
C Data/MC?
      NFRU=IW(KBSET+JBSEFR)
      IMC=1
      IF (IMC.LE.LRUNMC) IMC=2
C Nature of tape :
      IBTPN=IW(KBSET+JBSEBT)
      KBTPN=KROW(JBTPN,IBTPN)
      CALL ALSTIN(IW(KBTPN+JBTPVS),2,TAPE)
      CALL BKCHKT(TAPE,ICERN,IMULT,IDLT,IERB)
      IF (IERB.NE.0) GO TO 999
C Get the dataset size :
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      IF (IBRL1.EQ.0.OR.IBRL2.EQ.0)    GO TO 350
      IF (IDLT.EQ.0.AND.IBRL1.EQ.IBRL2.AND.IMC.EQ.1) GO TO 350
C Multi-run datasets
      DO 333 IBR=IBRL1,IBRL2
         SBYTO=1.E-09*FLOAT(ITABL(JBRLI,IBR,JBRLNB))
         GBYT=GBYT+SBYTO
 333  CONTINUE
      GO TO 480
C Single run datasets :
 350  SBYT0=1.E-09*FLOAT(LRECO)*FLOAT(ITABL(JBTPN,IBTPN,JBTPRN))
      GBYT=GBYT+SBYT0
C
C Number of MBytes :
 480  IF (IDLT.EQ.0.AND.GBYT.GE.0.2) GBYT=0.2
      IF (TAPE(1:2).EQ.'AA')  GBYT=0.18
      IF (GBYT.LT.0.) GBYT=0.2
      ISIZ=NINT(1000.*GBYT)
C
 999  RETURN
      END
      SUBROUTINE BKSQTMAS(KINCO,COMM,MPART)
C----------------------------------------------------------------------
C CKEY SQLBOOK
C! Decodes the mass value in a MCarlo Keyword definition
C  Author  J.Boucrot  12-Apr-1999
C Called from BKSQKY,BKSQLMSK,BKSQLMC     from  BOOKLIB
C Calls BKINCA                            from ALEPHLIB
C  INPUT  arguments :
C   KINCO = KINGAL code
C    COMM = keyword explanation
C  OUTPUT argument :
C   MPART = particle mass, = 0 if nothing found
C----------------------------------------------------------------------
      CHARACTER COMM*60,EXPLA*60,TMASS*5
      INTEGER BKINCA
C-----------------------------------------------------------------------
      NPER=KINCO
      MPART=0
C Mass of generated particle (Higgs or W):
      EXPLA=COMM(1:60)
      CALL CLTOU(EXPLA)
C W mass always given as Mw=xx.yyGeV :
      IMW=INDEX(EXPLA,'MW=')
      IF (IMW.GT.0) THEN
         MPART=1000*BKINCA(EXPLA(IMW+3:IMW+4))
     +         + 10*BKINCA(EXPLA(IMW+6:IMW+7))
      ENDIF
C Higgs mass may be given as   mass xx  or mass xyz  or mass xx.y
      IF (NPER.EQ.7020) THEN
         IMH=INDEX(EXPLA,'MASS')
         IF (IMH.GT.0) then
            TMASS=EXPLA(IMH+4:IMH+8)
            idot=INDEX(tmass,'.')
            if (idot.eq.0) then
               MPART=1000*BKINCA(EXPLA(IMH+4:IMH+7))
            else
               MPART=1000*BKINCA(TMASS(1:IDOT-1))
     +         + 100*BKINCA(TMASS(IDOT+1:IDOT+1))
            endif
         endif
      ENDIF
 999  RETURN
      END
      SUBROUTINE BKSQUPCO(IER)
C-----------------------------------------------------------------------
CKEY SQLBOOK INIT
C! Scans the list of new "ctl files" and builds SQL instructions
C J. Boucrot  25-05-1999 , mods 21-Sep-1999 for ctl
C Called from BKSQLA                              from BOOKLIB
C Calls PRPSLS,BKSQUPDI                           from BOOKLIB
C  Output argument :
C   IER = 0  all OK
C   IER = 1  unable to read the list of files
C   IER = 2  too many ctlfiles (should never happen !)
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- SQLDIR ----
      parameter ( nsqfmx = 20)
      character filsql*12,alb_dir*45,ctl_dir*51
      COMMON / sqldir / lalboo,nbsqfil,isizsqf(nsqfmx),isizsql(nsqfmx),
     +                  ilensql(nsqfmx),inumrow(nsqfmx),lalctl
      COMMON / cqldir / alb_dir,ctl_dir,filsql(nsqfmx)
      parameter ( PDIFM = 0.025 )
      common / linecou / line_act
      CHARACTER checkf*4,dirac*7,dirdi*5,checku*10
      CHARACTER DATE*12,SIZE*9,LINCH*140
      CHARACTER*80 NAMPR,FILOL,FILNW,FILE
      DATA CHECKF,dirac,dirdi / '.ctl' , 'action/' , 'diff/' /
      DATA CHECKU / 'ctl.update' /
C-----------------------------------------------------------------------
      ier=0
      line_act=0
C Define the threshold for copy either from PDIFM
C or from data card BCMP  threshold:
      xdifm=pdifm
      IBCMP=IW(NAMIND('BDFM'))
      IF (IBCMP.GT.0) XDIFM=RW(IBCMP+1)
C
C The list of new ctlfiles is built in the alb_dir directory using ls -L
C
      NAMPR=' '
      NAMPR=alb_dir(1:lalboo)//'tempnew.liste'
      NAMPR=NAMPR(1:LNBLNK(NAMPR))
      CALL SYSTEM(' rm -f '//NAMPR)
      CALL SYSTEM(' ls -L -o '//alb_dir(1:lalboo)//'*.ctl'//
     +            ' > '//NAMPR)
      OPEN ( LECRQL , FILE = NAMPR , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
C
C Read the list of ctlfiles on Fortran unit LECRQL :
C
      NNFI=0
 2    READ ( LECRQL , '(A)' , END=100 , ERR=900 )   LINCH
C Decode the file name and size:
      CALL PRPSLS(LINCH,FILE,DATE,SIZE)
      ISQL=INDEX(FILE,CHECKF)
      IF (ISQL.EQ.0) GO TO 2
C Find which name in the list:
      NBSQOK=0
      DO 50 IK=1,NBSQFIL
         IF (FILSQL(IK).NE.FILE(1:ISQL-1)) GO  TO 50
         NBSQOK=IK
         GO TO 60
 50   CONTINUE
 60   IF (NBSQOK.EQ.0) GO TO 2
      NNFI=NNFI+1
      READ ( SIZE , '(I8)' )  ISIZSQL(NBSQOK)
C
      GO TO 2
C
C Normal exit : erase the temporary file :
C
 100  close (lecrql)
      WRITE (LWRDBG,1002) NNFI
      call system(' rm -f '//nampr(1:lnblnk(nampr)))
C-----------------------------------------------------------------------
C Open the list of files modified after this run:
      FILNW=ALB_DIR(1:LALBOO)//DIRAC//CHECKU
      LLW=LNBLNK(FILNW)
      call system(' rm -f '//filnw(1:llw))
      OPEN ( LWRUUU , FILE = FILNW, STATUS = 'NEW' , ERR = 900 )
C Now loop on all files and decide what to do:
      DO 800 IK=1,NBSQFIL
         if (isizsql(ik).le.0) go to 800
         IDIDI=IABS(ISIZSQL(IK)-ISIZSQF(IK))
         ICOP=0
         IF (ISIZSQF(IK).LE.0) THEN
            ICOP=1
         ELSE
            CHK=FLOAT(IDIDI)/FLOAT(ISIZSQL(IK))
            IF (CHK.GT.XDIFM) ICOP=1
         ENDIF
C
C If ICOP = 1 : add the file name in filnw in the /action/ subdirectory
         IF (ICOP.EQ.1) THEN
            LLQ=lnblnk(FILSQL(IK))
            FILOL=ALB_DIR(1:LALBOO)//FILSQL(IK)(1:LLQ)//CHECKF
            LLO=LNBLNK(FILOL)
            WRITE (LWRUUU, '(A)')  filol(1:llo)
            line_act=line_act+1
C
C If ICOP = 0 : one has to make the diff between files and
C add a line on lwruuu if necessary
C
         ELSE
            CALL BKSQUPDI(IK,ierd)
            if (ierd.ne.0) go to 900
         ENDIF
C
 800  CONTINUE
      close (lwruuu)
C If the action file ctl.update is empty, erase it:
      if (line_act.eq.0) call system(' rm -f '//filnw(1:lw))
      write (lwrdbg,1003) checku,line_act
      GO TO 999
C-----------------------------------------------------------------------
C Processing of errors :
C
 900  ier=1
      WRITE (LWRDBG,1010)
      GO TO 999
C
 920  IER=2
      WRITE (LWRDBG,1011) NBSQFIL
C
C
 999  CLOSE (LWRDBG)
      return
C-----------------------------------------------------------------------
 1002 FORMAT (/22x,'  === BKSQUPCO ===  Number of',
     +         ' NEW ctl files =',I6)
 1003 FORMAT (/5X,'** BKSQUPCO ** Number of lines written on file ',
     +        2x,a10,i5)
 1010 FORMAT (/22x,'  *** ERROR IN BKSQUPCO in the list of ctlfile')
 1011 FORMAT (/22x,'  *** ERROR IN BKSQUPCO too many ctlfiles =',i8)
      END
      SUBROUTINE BKSQUPDI(IK,IER)
C-----------------------------------------------------------------------
CKEY SQLBOOK DIFF
C! Compares new and old ctl files IK and build SQL updatings
C J. Boucrot  25-05-1999 , mods 21-Sep-1999 for ctl
C Called from BKSQUPCO                            from BOOKLIB
C   Input argument :
C   IK  = rank of files to be compared in /sqldir/
C  Output argument :
C   IER = 0  all OK
C   IER = 1  unable to read the list of files
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- SQLDIR ----
      parameter ( nsqfmx = 20)
      character filsql*12,alb_dir*45,ctl_dir*51
      COMMON / sqldir / lalboo,nbsqfil,isizsqf(nsqfmx),isizsql(nsqfmx),
     +                  ilensql(nsqfmx),inumrow(nsqfmx),lalctl
      COMMON / cqldir / alb_dir,ctl_dir,filsql(nsqfmx)
      common / linecou / line_act
      CHARACTER checkf*4,filna*12,dirdi*5,checko*8,fina*8,linch*140
      CHARACTER*80 NAMPR,FILOL,FILNW
      DATA CHECKF,CHECKO      / '.ctl' , '.ctl_old' /
      DATA dirdi,fina / 'diff/' , '.diffile' /
C-----------------------------------------------------------------------
      IF (IK.LE.0.OR.IK.GT.NBSQFIL) GO TO 999
C
C Define the name of old and new files :
C
      FILOL=' '
      FILNA=FILSQL(IK)
      LLF=LNBLNK(FILNA)
      FILOL=alb_dir(1:lalboo)//FILNA(1:LLF)//CHECKO
      llo=lnblnk(filol)
      FILNW=' '
      FILNW=alb_dir(1:lalboo)//FILNA(1:LLF)//CHECKF
      llw=lnblnk(filnw)
C the name of the file result of diff:
      NAMPR=' '
      nampr=alb_dir(1:lalboo)//dirdi//FILNA(1:LLF)//fina
C
C Create the diff_file :
C
      call system(' rm -f '//nampr(1:lnblnk(nampr)))
      CALL SYSTEM(' diff -n  '//filol(1:llo)//'  '//filnw(1:llw)//
     +            ' > '//NAMPR)
C
C Open and write the diff file, check if it is empty
C
      OPEN ( LECRQL , FILE = NAMPR , STATUS = 'OLD',
     +       ACCESS = 'SEQUENTIAL', FORM = 'FORMATTED' , ERR=999)

      ILINE=0
 10   READ ( LECRQL , '(A)'  , end = 100 , err = 999) linch
      if (lnblnk(linch).eq.0) go to 10
      iline=iline+1
      go to 10
 100  continue
C The Diff File is empty, erase it and quit:
      if (iline.eq.0) then
         call system(' rm -f '//nampr(1:lnblnk(nampr)))
         go to 999
      endif
C
C Write a line on the action file, if the diff_file exists:
C
      write (lwruuu, '(A80)' ) filnw
      line_act=line_act+1
C
 999  return
      END
      SUBROUTINE BKSQUPSQ(IER)
C-----------------------------------------------------------------------
CKEY SQLBOOK UPDATE
C! Executes the Oracle updating using sql_loader
C J. Boucrot  21-Sep-1999 for ctl
C Called from BKSQLA                        from BOOKLIB
C Calls BKSQUPVR                            from BOOKLIB
C  Output argument :
C   IER = 0  all OK
C   IER = 1  unable to read the list of files
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- SQLDIR ----
      parameter ( nsqfmx = 20)
      character filsql*12,alb_dir*45,ctl_dir*51
      COMMON / sqldir / lalboo,nbsqfil,isizsqf(nsqfmx),isizsql(nsqfmx),
     +                  ilensql(nsqfmx),inumrow(nsqfmx),lalctl
      COMMON / cqldir / alb_dir,ctl_dir,filsql(nsqfmx)
      PARAMETER (NFMAX = 20)
      logical lex
      CHARACTER*100 FILOG(NFMAX)
      character dirpr*80,filnw*80,checku*10,dirac*7,LINE*132,sqbi*49
      character blasq*23,filna*15,ctld*4,logf*100,outf*100,fdus*100
      character sqlor*150,sqlou*150,sqpl*50,sqplo*150,sqpou*100
      data dirac,checku / 'action/' , 'ctl.update' /
      data blasq,ctld / 'userid=scanbook/scanx11' , '.ctl' /
      data sqbi / '/afs/cern.ch/project/oracle/alpha/prod/bin/sqlldr' /
      data sqpl / '/afs/cern.ch/project/oracle/alpha/prod/bin/sqlplus'/
C-----------------------------------------------------------------------
      ier=0
C Make sure that we are in the right directory:
      dirpr=' '
      dirpr=alb_dir(1:lalboo)//dirac
      lldir=lnblnk(dirpr)
      call system (' cd '//dirpr(1:lldir))
C Open the action file ctl.update to get the list of files to be loaded:
      filnw=' '
      filnw=dirpr(1:lnblnk(dirpr))//checku
C do-nothing if the action file does not exist:
      INQUIRE (FILE=FILNW , EXIST = LEX)
      IF (.NOT.LEX) GO TO 999
      iline=0
      OPEN ( LECVMA , FILE = FILNW , STATUS = 'OLD' ,
     +       ACCESS = 'SEQUENTIAL' , FORM = 'FORMATTED', ERR = 900)
C
C Read the action file and get the name of the files to be loaded:
C
 10   READ (LECVMA , '(A)' , END=100 , ERR=900) LINE
      iline=iline+1
      ictl=index(line,ctld)
      if (ictl.eq.0) go to 900
C name of table in the file:
      filna=' '
      filna=line(lalboo+1:ictl-1)
C name of sqlplus instruction file and outfile:
      sqplo=' '
      sqplo=blasq(8:23)//' @'//ctl_dir(1:lalctl)//
     +      filna(1:lnblnk(filna))//'.sqlplus_instruct'
      llsqp=lnblnk(sqplo)
      sqpou=' '
      sqpou=dirpr(1:lldir)//filna(1:lnblnk(filna))//'.sqlplus_out'
      llpou=lnblnk(sqpou)
      write (lwrdbg,1090) filna,sqplo(19:llsqp),sqpou(1:llpou)
C name of sqlldr logfile and outfile:
      logf=' '
      logf=dirpr(1:lldir)//filna(1:lnblnk(filna))//'.log'
      lllog=lnblnk(logf)
      filog(iline)=' '
      filog(iline)=logf(1:lllog)
      outf=' '
      outf=dirpr(1:lldir)//filna(1:lnblnk(filna))//'.out'
      lllou=lnblnk(outf)
C
C Now build the sqlldr command:
C
      sqlor=' '
      sqlor = blasq(1:lnblnk(blasq))//' control='//
     +        line(1:lnblnk(line))
      lllor=lnblnk(sqlor)
      sqlou=' '
      sqlou ='log='//logf(1:lllog)//' > '//outf(1:lllou)
      lllou=lnblnk(sqlou)
      write (lwrdbg,1100) filna,sqlor(25:lllor)
C-----------------------------------------------------------------------
C
C Execute the sqlplus and sqlldr commands,
C unless a data card 'NOLO' was provided:
C
      if (iw(namind('NOLO')).gt.0) go to 10
C sqlplus:
      call system(' rm -f '//sqpou(1:llpou))
      call system(sqpl//' '//sqplo(1:llsqp)//' > '//sqpou(1:llpou))
C sqlldr:
      call system(' rm -f '//logf(1:lllog))
      call system(' rm -f '//outf(1:lllou))
      call system(sqbi//' '//sqlor(1:lllor)//' '//sqlou(1:lllou))
C go to next file:
      go to 10
C-----------------------------------------------------------------------
C
C Verifications:
C
 100  close (lecvma)
      if (iline.eq.0) go to 999
C Verification of the sql_loader output files: if errors, send a mail:
      ialer=0
      fdus=' '
      fdus=dirpr(1:lldir)//'errors_sql.liste'
      lldus=lnblnk(fdus)
      call system(' rm -f '//fdus(1:lldus))
      open(lwrfli, file=fdus, status = 'NEW' , err=999)
      do 200 ik=1,iline
         ictl=index(filog(ik),'.log')
         if (ictl.eq.0) go to 200
         filna=' '
         filna=filog(ik)(lldir+1:ictl-1)
         call bksqupvr(LECFMT,FILOG(IK),FILNA,IERV)
         if (ierv.eq.2) then
            ialer=ialer+1
            write (lwrfli, 1234) filog(ik)
         endif
 200  CONTINUE
C
      close (lwrfli)
      if (ialer.gt.0) then
C at least one error: send a mail :
         call system('Mail -s sql_loader_errors  '//
     +        ' Jacques.Boucrot@cern.ch < '//FDUS(1:LLDUS))
      else
         call system(' rm -f '//fdus(1:lldus))
      endif
      go to 999
C Error :
 900  ier=1
      write (lwrdbg,1001) checku,iline
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (/5X,'** BKSQUPSQ ** Error when reading file , line  ',
     +        2x,a10,i5)
 1090 format (/2x,' ==> BKSQUPSQ sqlplus onfile = ',2x,a15/
     +         10x,'Instruction file = ',(A)/
     +         10x,'Output file      = ',(A))
 1100 format (/2x,' ==> BKSQUPSQ sqlldr file = ',2x,(A),/10x,(A))
 1234 format (' SQL_Loader Errors detected in file ',2x,(A))
      END
      SUBROUTINE BKSQUPVR(LUN,FILL,FINA,IER)
C-----------------------------------------------------------------------
CKEY SQLBOOK UPDATE
C! Verifies the log file from sql_loader execution:
C J. Boucrot  27-Sep-1999
C Called from BKSQUPSQ                      from BOOKLIB
C Calls BKSQPNAM                            from BOOKLIB
C  Input arguments :
C    LUN = logical unit to read the file
C   FILL = full sqlldr output file name
C   FINA = table name
C  Output argument :
C   IER = 0  all OK
C   IER = 1  read problem in the output file
C   IER = 2  sql_loader errors found in the output file
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      logical lex
      CHARACTER*(*) FILL,FINA
      CHARACTER LINE*132,FIFI*12
      INTEGER BKINCA
C-----------------------------------------------------------------------
      IER=0
      ILODOK=0
C Verify if file exists:
      INQUIRE (FILE=FILL , EXIST = LEX)
      IF (.NOT.LEX) GO TO 999
      LLF=LNBLNK(FILL)
C Find expected number of rows :
      lln=lnblnk(fina)
      fifi=' '
      fifi=fina(1:lln)
      call cltou(fifi)
      CALL BKSQPNAM(FIFI(1:LLN),0,IROWEX)
C Open and read the file:
      OPEN (LUN, file=fill, status = 'OLD' ,
     +      form = 'FORMATTED' , access = 'SEQUENTIAL')
      ifaul=0
 10   read ( lun , '(A)' , end = 100 , err = 900 ) line
      if (index(line,'Table').gt.0.and.index(line,':').gt.0) then
         write (lwrdbg,1100) line(1:40)
      endif
      irow=index(line,'Rows successfully loaded')
      if (irow.gt.0) then
         write (lwrdbg,1110) line(1:50),irowex
         ilodok=bkinca(line(1:irow-1))
      endif
C Are there problems in the load ?
      lnol=index(line,'Rows not loaded')
      if (lnol.gt.0) then
         ierlo=bkinca(line(1:lnol-1))
         if (ierlo.gt.0) then
            ifaul=ifaul+1
            write (lwrdbg,1200) line(1:80)
         endif
      endif
C Other problems ?
      llin=lnblnk(line)
      lnor=index(line,'records rejected')
      lnod=index(line,'records discarded')
      if (lnor.gt.0.or.lnod.gt.0) then
         iddot=index(line,':')
         iwron=0
         if (iddot.gt.0) iwron=bkinca(line(iddot+1:llin))
         if (iwron.gt.0) then
            ifaul=ifaul+1
            write (lwrdbg,1200) line(1:80)
         endif
      endif
      go to 10
C
 100  continue
C
      close (lun)
C Check number of written rows:
      if (ilodok.eq.0) then
         ifaul=ifaul+1
      else
         if (irowex.gt.0.and.ilodok.ne.irowex) then
            write (lwrdbg,1120) fina,ilodok,irowex
            ifaul=ifaul+1
         endif
      endif
      if (ifaul.gt.0) go to 910
      go to 999
C Errors :
 900  IER=1
      write (lwrdbg,1210) fill(1:lnblnk(fill))
      go to 999
 910  IER=2
      Write (lwrdbg,1220) IFAUL,fill(1:lnblnk(fill))
C
 999  RETURN
C----------------------------------------------------------------------
 1100 FORMAT (25X,'** BKSQUPVR : verify log of',2x,a40)
 1110 FORMAT (30X,' ==> ',2x,(A),2x,'Expected from ctl file : ',I8)
 1120 FORMAT (25x,'** BKSQUPVR error in file',2x,(A),
     +        'number of rows loaded # expected :',2i8)
 1200 FORMAT (25x,'** BKSQUPVR error:',2x,(A))
 1210 FORMAT (25x,'** BKSQUPVR error reading file ',(A))
 1220 FORMAT (25x,'** BKSQUPVR :',I5,' SQL_LOADER ERRORS IN FILE :'/,
     +        25X,(A))
      END
      SUBROUTINE BKSQWF(CIN,COUT,LOUT)
C----------------------------------------------------------------------
CKEY SQLBOOK
C! Modifies a char. quantity to put it in ctl files
C  Author  J. Boucrot 30-Apr-1999
C Called from BKSQL routines                from BOOKLIB
C Input arguments:
C     CIN = input character string
C    COUT = output character string with quotes
C    LOUT = number of characters in COUT
C----------------------------------------------------------------------
       SAVE QUOT
       CHARACTER*(*) CIN,COUT
       CHARACTER QUOT*1
       DATA QUOT / '"' /
C----------------------------------------------------------------------
       LIN=LNBLNK(CIN)
       COUT=' '
       COUT(1:1)=QUOT
       COUT(2:LIN+1)=CIN(1:LIN)
       COUT(LIN+2:LIN+2)=QUOT
       LOUT=LIN+2
 999   RETURN
       END
      SUBROUTINE BKSQWR(LUN,TABLE,IERR)
C----------------------------------------------------------------------
CKEY SQLBOOK
C! Open and Write the header lines for ctl files
C  Author  J. Boucrot 21-Sep-1999
C Called from BKSQL routines                from BOOKLIB
C Input arguments:
C     LUN = Fortran unit for writing
C   TABLE = table name (max 12 chars)
C Output argument:
C    IERR = 0 if all OK, # 0 if problem
C----------------------------------------------------------------------
C-- SQLDIR ----
      parameter ( nsqfmx = 20)
      character filsql*12,alb_dir*45,ctl_dir*51
      COMMON / sqldir / lalboo,nbsqfil,isizsqf(nsqfmx),isizsql(nsqfmx),
     +                  ilensql(nsqfmx),inumrow(nsqfmx),lalctl
      COMMON / cqldir / alb_dir,ctl_dir,filsql(nsqfmx)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER*(*) TABLE
      CHARACTER FNPR*80,FNHE*100,line*60
C----------------------------------------------------------------------
      IERR=0
C First, open the file TABLE.ctl for subsequent writing:
      FNPR=' '
      CLOSE (LUN)
      FNPR=ALB_DIR(1:LALBOO)//TABLE(1:LNBLNK(TABLE))//'.ctl'
      fnpr=fnpr(1:lnblnk(fnpr))
      call system(' rm -f '//fnpr)
      OPEN (LUN, FILE=FNPR, STATUS = 'NEW' , ERR = 900)
C
C Now, open the TABLE.ctl_header file and write its content on LUN:
C
      fnhe=' '
      fnhe=ctl_dir(1:lalctl)//TABLE(1:LNBLNK(TABLE))//'.ctl_header'
      open (LECVMA, file=fnhe, status ='OLD', access = 'SEQUENTIAL',
     +      form = 'FORMATTED', err = 910)
      rewind (lecvma)
      iline=0
 10   read (lecvma, '(A)' , end = 100 , err = 920) line
      iline=iline+1
      write (lun , '(A60)' ) line
      go to 10
C end of file : close input file and quit
 100  close (lecvma)
      GO TO 999
C ----------------------------------------------------------------------
C Error somewhere:
 900  IERR=1
      write (lwrdbg,1001) fnpr
 1001 format (' ** Cannot open file ',2x,a80)
      go to 999
 910  IERR=2
      write (lwrdbg,1002) fnhe
 1002 format (' ** Cannot open file ',2x,a100)
      go to 999
 920  IERR=3
      write (lwrdbg,1003) fnhe,iline
 1003 format (' ** Error in file ',2x,a100/20x,' line =',i7)
  999 RETURN
      END
      SUBROUTINE BKSREV(IER)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Books and fills as many 'SEVT' banks as there are valid runs in 'SRUN
C J. Boucrot  14-Dec-1994
C Called from BKOFJU
C  Output argument :
C     IER = 0 if all OK
C         = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-----------------------------------------------------------------------
      IER=0
      JSRUN=IW(NAMIND('SRUN'))
      IF (JSRUN.EQ.0) GO TO 999
      NSRUN=IW(JSRUN)
      IF (NSRUN.LE.0) GO TO 999
      NSEVT=0
      DO 500 ISRUN=1,NSRUN
         NRUN=IW(JSRUN+ISRUN)
         IF (NRUN.LE.0) GO TO 500
         CALL AUBOS('SEVT',NSEVT,2,JSEVT,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IF (IGARB.EQ.1) JSRUN=IW(NAMIND('SRUN'))
         IW(JSEVT+1)=NRUN
         IW(JSEVT+2)=1
 500  CONTINUE
      GO TO  999
C No room for banks :
 900  IER=1
C
 999   RETURN
       END
      SUBROUTINE BKSRIN(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! STEERING of Interactive dialogue of SCANBOOK
C  J. Boucrot 20-Jun-1989
C Completely rewritten September 1996 for X11
C  Called from BKSEAR                                    from BOOKLIB
C  Calls INIDSEAR,BKFIROU,INIBPRUS,INILABCH,DISHOMLA     from BOOKLIB
C  Calls BKSRIN1,BKSRIN2,BKSRIN3,BKSRIN4,BKSRIN5,PTO     from BOOKLIB
C Output argument :
C   IER = 0 if all OK
C   IER = 1 if no room to book banks
C   IER = 2 if problems when reading a database
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-----------------------------------------------------------------------
C Routine executed only if interactive dialogue :
      IER=0
      IF (IBKINT.NE.2) GO TO 999
      LU=LWRINT
      WRITE (LU,*) '  >>> If you want to ABORT the interactive dialogue'
      WRITE (LU,*) '  >>>    reply QUIT or Q to any further question '
      CALL PTO
C ----------------------------------------------------------------------
C Define the search option :
      CALL INIDSEAR(LU)
      IF (ISCQUI.NE.0) GO TO 900
      CALL BKFIROU
C For IDSEAR = 1,4,7  ask for print level
      IBPRUS=2
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.4.OR.IDSEAR.EQ.7) THEN
         CALL INIBPRUS(LU)
      IF (ISCQUI.NE.0) GO TO 999
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C-----------------------------------------------------------------------
C Option 1/7
C Choice : infos on Real data datasets :
C
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.7) THEN
         CALL BKSRIN1(IER1)
         IF (IER1.EQ.1) GO TO 905
         IF (IER1.EQ.2) GO TO 910
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C-----------------------------------------------------------------------
C Option 2
C Choice : infos on Run Files of Impatient Stream ( CERN ) :
C
      IF (IDSEAR.EQ.2) THEN
         CALL BKSRIN2(IER1)
         IF (IER1.EQ.1) GO TO 905
         IF (IER1.EQ.2) GO TO 910
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C-----------------------------------------------------------------------
C Option 3
C Choice : infos on runs and data taking :
C
      IF (IDSEAR.EQ.3) THEN
         CALL BKSRIN3(IER)
         IF (IER.NE.0) GO TO 905
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C-----------------------------------------------------------------------
C Option 4
C Choice : infos on MCarlos datasets :
C
      IF (IDSEAR.EQ.4) THEN
         CALL BKSRIN4(IER)
         IF (IER.EQ.1) GO TO 905
         IF (IER.EQ.2) GO TO 910
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C-----------------------------------------------------------------------
C Option 5
C Choice : all infos on a given run or Cartridge :
C
      IF (IDSEAR.EQ.5) THEN
         CALL BKSRIN5
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C-----------------------------------------------------------------------
C Option 8
C Choice : general statistics on all datasets of a Homelab
C
      IF (IDSEAR.EQ.8) THEN
         CALL DISHOMLA(LU)
         CALL INILABCH(LU)
         IF (ISCQUI.NE.0) GO TO 900
         IMCDAT=0
      ENDIF
C-----------------------------------------------------------------------
C End of interactive dialogue :
C
 800   GO TO 999
C
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
      GO TO 999
C No room for BOS banks :
 905  IER=1
      WRITE (LWRUSR,1010) IER
      WRITE (LU,1010) IER
      GO TO 999
C Error when reading a database :
 910  IER=2
      WRITE (LWRUSR,1020) IER
      WRITE (LU,1020) IER
C
 999   RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/)
 1010 FORMAT (/9X,' --- SCANBOOK aborted in BKSRIN : IER =',I5,
     +        /9X,' --- No room for BOS banks - Call expert --- ')
 1020 FORMAT (/9X,' --- SCANBOOK aborted in BKSRIN : IER =',I5,
     +        /9X,' --- Problem with database - Call expert --- ')
       END
      SUBROUTINE BKSRIN1(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Steering of search parameters for Real datasets
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN                                      from BOOKLIB
C  Calls BKSRUN,BKFDAB,BKOPDA,BKLEPL                       from BOOKLIB
C  Calls INENGLEP,PRIPRO,INNADATA,INILABCH                 from BOOKLIB
C  Calls BKSRPR,INIBTQSE,INISORLE,INIPSROU                 from BOOKLIB
C  Calls DISNGLEP,DISHOMLA                                 from BOOKLIB
C  Output argument :
C   IER = 1 if no room for BOS banks
C   IER = 2 if problem wih the database
C       = 0 if all OK
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER NAMDB*8
C-----------------------------------------------------------------------
C Option 1 or 7 only - Search selections for Real data datasets
C
      IER=0
      IF (IMCDAT.NE.1) GO TO 999
      LU=LWRINT
C Run/Year  selections :
 10   CALL BKSRUN(IERB)
      IF (IERB.NE.0) GO TO 910
      IF (ISCQUI.NE.0) GO TO 999
C The year is known : read the adequate year database :
      CALL BKFDAB(ISRUNF,0,NRD,NAMDB,IER)
      IF (IER.NE.0.OR.NRD.LE.0) GO TO 920
      CALL BKOPDA(NAMDB,IFAIL)
      IF (IFAIL.NE.0) GO TO 920
C Find all LEP energies for selected runs :
      CALL BKLEPL
C Now ask for the LEP energy :
      CALL DISNGLEP(LU)
      CALL INENGLEP(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Display the list of existing datasets for the present selections :
      CALL PRIPRO
C Now choose the nature of data to be searched for :
      CALL INNADATA(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Now choose the HOMELAB - only for IDSEAR = 1
C since Homelab = CERN for IDSEAR = 7
      IF (IDSEAR.EQ.1) THEN
         CALL DISHOMLA(LU)
         CALL INILABCH(LU)
         IF (ISCQUI.NE.0) GO TO 999
      ENDIF
C Select now the Processing Level :
      CALL BKSRPR(IERPR)
      IF (IERPR.NE.0) GO TO 910
      IF (ISCQUI.NE.0) GO TO 999
C IF Year = 1992, select the tracking quality :
      IF (ISYEAR.EQ.1992) THEN
         CALL INIBTQSE(LU)
         IF (ISCQUI.NE.0) GO TO 999
      ENDIF
C Ask for EDIRs in FILI CARDS :
      CALL INIWFILI(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Ask for SRUN or IRUN Cards :
      CALL INIPSROU(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Ask for FILI sorted by LEP energy :
      CALL INISORLE(LU)
      GO TO 999
C Problem with BOS banks :
 910  IER=1
      GO TO 999
C Problem with the database :
 920  IER=2
 999  RETURN
      END
      SUBROUTINE BKSRIN2(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Steering of search parameters for Run disk filess
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN                               from BOOKLIB
C  Calls BKSRUN,INENGLEP,BKLEPL                     from BOOKLIB
C  Calls INISORLE,INIPSROU,DISNGLEP                 from BOOKLIB
C  Output argument :
C   IER = 1 if no room for BOS banks
C       = 0 if all OK
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATPROC ----
      PARAMETER ( NPROC = 4 )
      COMMON / DATPROC / NPROCD(NPROC),IFIDAC(NPROC),ILADAC(NPROC),
     +                   IJUVRC(NPROC),IMNVRC(NPROC),ICOVRC(NPROC),
     +                   IJUSLC(NPROC)
C-----------------------------------------------------------------------
C Option 2 only - Search selections for Real data datasets
C
      IER=0
      IF (IMCDAT.NE.1) GO TO 999
      LU=LWRINT
C Run/Year  selections :
 10   CALL BKSRUN(IERB)
      IF (IERB.NE.0) GO TO 910
      IF (ISCQUI.NE.0) GO TO 999
C Now ask for the LEP energy :
      CALL BKLEPL
      CALL DISNGLEP(LU)
      CALL INENGLEP(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Ask for EDIRs in FILI CARDS :
      CALL INIWFILI(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Ask for SRUN or IRUN Cards :
      CALL INIPSROU(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Ask for FILI sorted by LEP energy :
      CALL INISORLE(LU)
      GO TO 999
C Problem with BOS banks :
 910  IER=1
 999  RETURN
      END
      SUBROUTINE BKSRIN3(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Steering of search parameters for Option 3 of SCANBOOK
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN                                   from BOOKLIB
C  Calls BKSRUN,INENGLEP,INIPRONL,INIBTQSE              from BOOKLIB
C  Calls INIPSROU,INISORLE,DISNGLEP,BKLEPL              from BOOKLIB
C  Output argument :
C   IER = 1 if no room to book 'SRUN' or 'SFIL' bank
C       = 0 if all OK
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
C Option 3 only - Get the choice made by the user :
C
      IER=0
      IF (IMCDAT.NE.1.OR.IDSEAR.NE.3) GO TO 999
      LU=LWRINT
C Selection of year or runs :
 10   CALL BKSRUN(IERB)
      IF (IERB.NE.0) GO TO 910
      IF (ISCQUI.NE.0) GO TO 999
C Find and display all LEP energies for the selected year :
      CALL BKLEPL
      CALL DISNGLEP(LU)
C Now ask for the LEP energy :
      CALL INENGLEP(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Choose the special printout level for Option 3 :
      CALL INIPRONL(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Choose the special flag for 1992 data,if necessary :
      IF (ISYEAR.EQ.1992) THEN
         CALL INIBTQSE(LU)
         IF (ISCQUI.NE.0) GO TO 999
      ENDIF
C Ask for SRUN or IRUN Cards :
      CALL INIPSROU(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Ask for SRUN/IRUN sorted by LEP energy :
      CALL INISORLE(LU)
      GO TO 999
C No room for banks in BKSRUN :
 910  IER=1
 999  RETURN
      END
      SUBROUTINE BKSRIN4(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Steering of search parameters for Mcarlo datasets
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN                                from BOOKLIB
C  Calls BKSRSI,BKOPDA,INILABCH,DISHOMLA             from BOOKLIB
C  Output argument :
C   IER = 1 if no room for BOS banks
C   IER = 2 if problem when reading the MCarlo database
C       = 0 if all OK
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
C Option 4 only - Search selections for MCarlo datasets
C
      IER=0
      IF (IDSEAR.NE.4) GO TO 999
      LU=LWRINT
      IMCDAT=2
      ISRUNF=1
      ISRUNL=LRUNMC
C Define the Homelab :
      CALL DISHOMLA(LU)
      CALL INILABCH(LU)
      IF (ISCQUI.NE.0) GO TO 999
C Read the MCARLO database :
      JBDFS=NLINK('BDFS',IMCDAT)
      IF (JBDFS.EQ.0) THEN
         CALL BKOPDA('ALEBROOT',IFAID)
         IF (IFAID.NE.0) GO TO 910
      ENDIF
      CALL BKOPDA('ALEBMCAR',IFAIL)
      IF (IFAIL.NE.0) GO TO 910
C Special MCarlo selections :
 10   CALL BKSRSI(IERB)
      IF (IERB.NE.0) GO TO 905
C Ask for EDIRs in FILI CARDS :
      CALL INIWFILI(LU)
      GO TO 999
C Problem with BOS banks :
 905  IER=1
      GO TO 999
C Problem when reading the MCarlo database , or with BOS banks :
 910  IER=2
 999  RETURN
      END
      SUBROUTINE BKSRIN5
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Defines the search parameters for Option 5 of SCANBOOK
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN                                   from BOOKLIB
C  Calls INIBOPT5,BKOPT5                                from BOOKLIB
C  Calls BKINCA                                         from ALEPHLIB
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER INUS*132
C-----------------------------------------------------------------------
C Option 5 only - Get the choice made by the user :
C
      IF (IDSEAR.NE.5) GO TO 999
      LU=LWRINT
 10   CALL INIBOPT5(LU,INUS)
      IF (ISCQUI.NE.0) GO TO 999
C Now fill the coresponding variables for the search :
      CALL BKOPT5(INUS,IER)
      IF (IER.NE.0) THEN
         IF (IER.EQ.1) WRITE (LU,1001)
         IF (IER.EQ.2) WRITE (LU,1002)
         IF (IER.EQ.3) WRITE (LU,1003)
         GO TO 10
      ENDIF
 999  RETURN
 1001 FORMAT(' ** Invalid run number  -> change it')
 1002 FORMAT(' ** Invalid cartridge name -> change it')
 1003 FORMAT(' ** Range of tapes is TOO BIG -> change it')
      END
      SUBROUTINE BKSRPR(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Special selections on real data processing
C  J. Boucrot 20-Sep-1996
C  Called from BKSRIN1                              from BOOKLIB
C  Calls BKDVER,DISPROCC,DISJULVR                   from BOOKLIB
C  Calls INIJULSL,INIPRGVR,INISDATE,INLASTPR        from BOOKLIB
C Output argument :
C   IER = 0 if all OK
C   IER = 1 if problems with BOS banks
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-----------------------------------------------------------------------
      IER=0
      LU=LWRINT
C No selection on JULIA processing for RAW data , only sel. on date :
      IF (IDASEL.EQ.2) THEN
         CALL INISDATE(LU)
         IF (ISCQUI.NE.0) GO TO 900
         GO TO 999
      ENDIF
C Which type of selection : on processing, on date, on JULIA version:
      CALL INIJULSL(LU)
      IF (ISCQUI.NE.0) GO TO 900
C Build informations for processing levels and program versions :
      CALL BKDVER(IERV)
      IF (IERV.NE.0) GO TO 910
C Selection on JULIA Version Number :
      IF (IJULSL.NE.0.AND.NTOJUS.GT.0) THEN
         CALL DISJULVR(LU)
         CALL INIPRGVR(LU)
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C Selection on date of processing :
      IF (IDATSL.NE.0) THEN
         CALL INISDATE(LU)
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C Selection on level of processing :
      IF (IPROSL.NE.0) THEN
         CALL DISPROCC(LU)
         CALL INLASTPR(LU)
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
      GO TO 999
C-----------------------------------------------------------------------
C The user aborted the interactive dialogue :
 900  ISCQUI=1
      GO TO 999
C Problems with BOS banks
 910  IER=1
 999  RETURN
      END
      SUBROUTINE BKSRSI(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Interactive dialogue for user's MCARLO selection in SCANBOOK
C  J. Boucrot 02-Apr-1991
C Completely rewritten September 1996 for X11
C  Called from BKSRIN4                                     from BOOKLIB
C  Calls BKKINS,BKLEPL,BKDVER,INIGEOYR,INKINCOD,INNADATA   from BOOKLIB
C  Calls INEGLEP,INISELPA,INIGALPR,INIMINPR,ININANPR       from BOOKLIB
C  Calls DISKINCO,DISPARKO,DISMINVR,DISNANVR,DISNGLEP      from BOOKLIB
C Output argument :
C   IER = 0 if all OK
C   IER = 1 if no room for BOS banks
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
C-----------------------------------------------------------------------
      IER=0
      LU=LWRINT
C Selection on GALEPH Geometry ( given by Year ) - MANDATORY !! -
 10   CALL INIGEOYR(LU)
      IF (ISCQUI.NE.0) GO TO 900
C Selection on Kingal code :
C First store in common / KINSEL / the description of KINGAL
C datasets for the selected year of geometry :
C
      CALL BKKINS(IER4)
      IF (IER4.NE.0) GO TO 905
C Then ask for KINGAL code choice, if any :
      CALL DISKINCO(LU)
      IF (NPRESK.EQ.0) GO TO 10
      CALL INKINCOD(LU)
      IF (ISCQUI.NE.0) GO TO 900
      IF (INIP97.NE.0) THEN
         CALL DISPAR97(LU)
         CALL INIROW97(LU)
         IF (ISCQUI.NE.0) GO TO 900
      ENDIF
C-----------------------------------------------------------------------
C
C Now selection of nature of data :
C
 100  CALL INNADATA(LU)
      IF (ISCQUI.NE.0) GO TO 900
C Find all LEP energies for selected runs :
      CALL BKLEPL
C Now selection of LEP energies , if more than 1 :
      CALL DISNGLEP(LU)
      CALL INENGLEP(LU)
      IF (ISCQUI.NE.0) GO TO 900
C-----------------------------------------------------------------------
C Build the list of all GALEPH / JULIA version and Spec. Part code :
C
      CALL BKDVER(IERJ)
      IF (IERJ.NE.0) GO TO 905
C ASK for Selection on SPECIAL Particle identifier :
      IF (INIP97.NE.0.OR.NTOPARK.LE.0) GO TO 200
      CALL DISPARKO(LU)
      CALL INISELPA(LU)
      IF (ISCQUI.NE.0) GO TO 900
C Ask for Other selections :
 200  CALL INIGALPR(LU)
      IF (ISCQUI.NE.0) GO TO 900
C-----------------------------------------------------------------------
C Now selection on MINI / NANO version number , if needed :
      IF (SELDAT.EQ.'M')   THEN
         CALL DISMINVR(LU)
         CALL INIMINPR(LU)
      ENDIF
      IF (SELDAT.EQ.'N')   THEN
         CALL DISNANVR(LU)
         CALL ININANPR(LU)
      ENDIF
      IF (ISCQUI.NE.0) GO TO 900
      GO TO 999
C-----------------------------------------------------------------------
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
      GO TO 999
C No room for BOS banks :
 905  IER=1
 999  RETURN
      END
      SUBROUTINE BKSRUN(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Steering of user's dialogue for run/fill selection in SCANBOOK
C J. Boucrot  03-11-1989  Completely ewritten 21-Sep-1996
C Called from BKSRIN1 or BKSRIN3                        from  BOOKLIB
C Calls INYARUFI,INISYEAR,INRFIYE,INIRUNQ             from  BOOKLIB
C Calls DISRUNYE,DISFILYE,BKVRUYE,BKVFIYE             from  BOOKLIB
C  Output argument  :
C           IER = 0  all OK
C               = 1  no room to book/enlarge bank 'SRUN'
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      CHARACTER INUS*132,MODE*5
C-----------------------------------------------------------------------
C
      IER=0
      IF (IBKINT.NE.2) GO TO 999
      ISRUNF=NRUMIN
      ISRUNL=NRUMAX
      LU=LWRINT
C
C Interactive dialogue to ask for selection
C
 10   CALL INYARUFI(LU)
      IF (ISCQUI.EQ.1) GO TO 910
C If Selection on year # , ask which year :
      IF (IYEASL.GT.0) THEN
         CALL INISYEAR(LU)
         IF (ISCQUI.NE.0) GO TO 910
         CALL BKVYEAR(IEY)
         IF (IEY.NE.0) GO TO 900
         GO TO 500
C If Selection on Runs  , ask for run range or list :
      ELSE IF  (IRUNSL.EQ.1) THEN
 100  CALL DIRUFIYE(LU)
         MODE='RUNS'
         CALL INIRFIYE(LU,MODE,INUS)
         IF (ISCQUI.NE.0) GO TO 910
         CALL BKVRUYE(LU,INUS,IEROR)
         IF (IEROR.EQ.1) GO TO 100
         IF (IEROR.EQ.2) GO TO 900
          CALL BKVYEAR(IERY)
          IF (IERY.NE.0) GO TO 900
         GO TO 500
C If Selection on Fills , ask for fill range or list :
      ELSE IF  (IFILSL.EQ.1) THEN
 200  CALL DIRUFIYE(LU)
         MODE='FILLS'
         CALL INIRFIYE(LU,MODE,INUS)
         IF (ISCQUI.NE.0) GO TO 910
         CALL BKVFIYE(LU,INUS,IEROR)
         IF (IEROR.EQ.1) GO TO 200
         IF (IEROR.EQ.2) GO TO 900
          CALL BKVYEAR(IERY)
          IF (IERY.NE.0) GO TO 900
         GO TO 500
      ENDIF
      GO TO 10
C-----------------------------------------------------------------------
C Ask for selection on Run Quality :
C
 500  CALL INIRUNQ(LU)
      CALL BKPGVAL
      IF (ISCQUI.NE.0) GO TO 910
      IF (ISYEAR.LE.0) CALL BKVYEAR(IERY)
      GO TO 999
C-----------------------------------------------------------------------
C
C No room for bank 'SRUN' :
 900  IER=1
      GO TO 999
C
C User abort :
 910  ISCQUI=1
C
 999  RETURN
      END
      SUBROUTINE BKSSTR(NAME,NR,CHSTR,LENG,IADR,NROW)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Search for string CHSTR in bank NAME , NR
C J.Boucrot      05-Dec-1988      modified  10-Apr-1989
C Calls  ALSTIN                                   from ALEPHLIB
C Calls  CLTOU                                    from KERNLIB
C Calls  BKPOIN                                   from BOOKLIB
C Input arguments :
C  NAME   =  Bank name
C    NR   =  Bank number
C CHSTR   =  Character String to be searched for
C  LENG   =  number of words for the integer representation of CHSTR
C  IADR   =  Column number of the start of CHSTR in bank row
C Output arguments :
C   NROW  =  Row # of the first occurence of CHSTR in the bank
C         =  0 if not found
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
       PARAMETER ( NCHW = 4 )
       EXTERNAL NLINK
       CHARACTER*4 NAME
       CHARACTER*(*) CHSTR
       CHARACTER BKSTR*132,CHINP*132,CT*1
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
       NROW=0
       CALL BKPOIN(0,NAME,NR,JBNAM)
       IF (JBNAM.LE.0) GO TO 999
       NRO=LROWS(JBNAM)
       IF (NRO.EQ.0) GO TO 999
       IF (LENG+IADR-1.GT.LCOLS(JBNAM)) GO TO 999
       LIN=LNBLNK(CHSTR)
       CHINP=' '
       BKSTR=' '
       LCHR=NCHW*LENG
C Remove  all leading blanks
       IBL=1
       DO 1 I=1,LCHR
          CT=CHSTR(I:I)
          IF (CT.NE.' ') GO TO 2
          IBL=IBL+1
 1     CONTINUE
 2     LENIN=LIN-IBL+1
       CHINP(1:LENIN)=CHSTR(IBL:LIN)
C Convert string to upper case :
       CALL CLTOU(CHINP)
C Loop on all bank rows :
       DO 10 IRO=1,NRO
          KBNAM=KROW(JBNAM,IRO)
C Test if the name stored in the bank matches CHSTR :
          CALL ALSTIN(IW(KBNAM+IADR),LENG,BKSTR)
          IIN=INDEX(CHINP(1:LENIN),BKSTR(1:LENIN))
          IF (INDEX(CHINP(1:LENIN),BKSTR(1:LENIN)).EQ.0) GO TO 10
          NROW=IRO
          GO TO 999
 10    CONTINUE
C
 999   RETURN
       END
      SUBROUTINE BKSTEDNA(TAPE,IFILE,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Stores a CERN EDIR in bank BTNA
C J. Boucrot  28-02-1997  modified  18-Mar-1999
C Called from BKFINDED,BKSQRED                   from  BOOKLIB
C Calls  BKINCA,AUBOS                            from  ALEPHLIB
C Input argument :
C TAPE  = tape name used in the EDIRS
C IFILE = file number on this tape
C Output argument :
C   IER = 1 if no room to book bank 'BTNA'
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER*(*) TAPE
      INTEGER BKINCA
      PARAMETER ( NBAM = 10000 , NBY = 100000)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      NR=10*ICHAR(TAPE(1:1)) + ICHAR(TAPE(2:2))
      ITAP=IFILE + 1000*BKINCA(TAPE(3:6))
C Find bank and pointer :
      JBTNA=NLINK('BTNA',NR)
      IF (JBTNA.EQ.0) THEN
         LBTNA=LMHLEN+NBAM
         IF (TAPE(1:1).EQ.'Y') LBTNA=LMHLEN+NBY
         CALL AUBOS('BTNA',NR,LBTNA,JBTNA,IGARB)
         IF (IGARB.EQ.2.OR.JBTNA.EQ.0) GO TO 900
         IW(JBTNA+LMHCOL)=1
         IW(JBTNA+LMHROW)=0
         KBTNA=JBTNA+LMHLEN
      ELSE
         IF (LROWS(JBTNA).GE.NBY) GO TO 900
         KBTNA=KNEXT(JBTNA)
      ENDIF
C Store the tape name:
      IW(KBTNA+1)=ITAP
      IW(JBTNA+LMHROW)=IW(JBTNA+LMHROW)+1
 100  CONTINUE
      GO TO 999
C No room for banks:
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKSTEE
C-----------------------------------------------------------------------
CKEY STEER
C! Steering for all BOOKKEEPING jobs
C J. Boucrot  20-04-1988
C  Modified  AM. Lutz      30-MAR-1990
C Calls BKINAL,BKDOAL,BKCLOD,BKERRF                     from  BOOKLIB
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C Initialize the BOOKDAF package :
       CALL BKINAL(0,IER)
       IF (IER.NE.0) GO TO 900
C
C Perform the task determined from the BOS data cards :
C
 10    CALL BKDOAL(IER)
       IF (IER.NE.0) GO TO 901
       IF (IBUPDA.EQ.2) GO TO 10
C
C Update DAF/SEQ files, Close all files and quit :
C
       CALL BKCLOD(IER)
       IF (IER.NE.0) GO TO 906
       GO TO 999
C-----------------------------------------------------------------------
C Error handling : give an appropriate STOP code # which will be treated
C accordingly by the Exec :
C
 900   CALL BKERRF('INITIALIZE','BKSTEE',200)
       STOP 200
C
 901   CALL BKERRF('STEERING','BKSTEE',201)
       STOP 201
C
 906   CALL BKERRF('CLOSEFIL','BKSTEE',206)
       STOP 206
C
 999   CONTINUE
       STOP
       END
      SUBROUTINE BKSTLO(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEERING
C!  Saves the Tape locations from 'BDFS' bank in temporary 'BLOT' bank
C   Author J. Boucrot   14-Mar-1991
C    Modified 01-Oct-1998 for multifile tapes
C Called from BKUPDF                                  from BOOKLIB
C Calls  AUBOS                                        from ALEPHLIB
C Calls  BKFMT                                        from BOS77
C  Output argument :
C IER = 1 if no room to book 'BLOT' , = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER*8 TAPE,TAPIN
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
       IER=0
       IF (IBUPDA.NE.1) GO TO 999
       WRITE ( LWRDBG,1008)
       IF (IBAUTO.EQ.0) PRINT 1008
       CALL BKFMT('BLOT','2I,(3A)')
C Loop on the 2 'BDFS' banks :
       DO 500 IBDF=1,2
          JBDFS=NLINK('BDFS',IBDF)
          IF (JBDFS.EQ.0) GO TO 500
          NBDF=LROWS(JBDFS)
          LENBL=LMHLEN+JBDFLO*NBDF
          CALL AUBOS('BLOT',IBDF,LENBL,JBLOT,IGARB)
          IF (IGARB.EQ.2.OR.JBLOT.LE.0) GO TO 900
          IW(JBLOT+LMHCOL)=JBDFLO
          IW(JBLOT+LMHROW)=NBDF
C Loop on all tapes in this 'BDFS' bank :
          DO 400 ISET=1,NBDF
             KBDFS=KROW(JBDFS,ISET)
             KBLOT=KROW(JBLOT,ISET)
C Put in 'BLOT' only the 6-char tape name at every occurence:
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPIN)
            TAPE=TAPIN(1:6)//'  '
            IW(KBLOT+JBDFTC)  =INTCHA(TAPE(1:4))
            IW(KBLOT+JBDFTC+1)=INTCHA(TAPE(5:8))
            IW(KBLOT+JBDFLO)  =IW(KBDFS+JBDFLO)
 400      CONTINUE
 500   CONTINUE
       GO TO 999
C No room for bank 'BLOT' :
 900   IER=1
 999  RETURN
 1008 FORMAT ( /2X,' === Subroutine  BKSTLO ===  Start saving Tape ',
     +         'Locations in temporary bank')
      END
      SUBROUTINE BKSTODAT(IBD,NRUF,IEDIR,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Store a dataset in common / DATAFOUN /
C J. Boucrot  10-10-1996
C Called from BKFINDED,BKFINDFI,BKFINDTA         from  BOOKLIB
C Called BKRANM                                  from  BOOKLIB
C Calls IUCOMP                                   from  GENLIB
C Input arguments :
C  IBD  = row of dataset in bank BDFS
C NRUF  = first run on dataset
C IEDIR = 1 if EDIR found
C Output argument :
C   IER = 1 if too many datasets found ; =0 otherwise
C-----------------------------------------------------------------------
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-----------------------------------------------------------------------
      IER=0
      IF (IDSEAR.EQ.2.AND.IBD.LE.0) GO TO 10
C Check if dataset already found :
      IF (NDATFOUN.EQ.0) GO TO 10
      IND=IUCOMP(IBD,IBDSEL,NDATFOUN)
      IF (IND.GT.0) GO TO 999
C For CERN datasets, give preference to DLTs :
      IF (IDASEL.GE.3.AND.ILABCH.EQ.1) THEN
         CALL BKVRDLT(IBD,IDL)
         IF (IDL.EQ.1) GO TO 999
      ENDIF
      IF (IMCDAT.EQ.2) GO TO 10
      IF (LASTPR.GT.0) THEN
      INDR=IUCOMP(NRUF,LISRUSEL,NDATFOUN)
      IF (INDR.GT.0) GO TO 999
      ENDIF
C Store the informations in / DATAFOUN /
 10   NDATFOUN=NDATFOUN+1
      IF (NDATFOUN.GT.NTODT) GO TO 900
      IBDSEL(NDATFOUN)=IBD
      IF (IEDIR.EQ.1) IEDSEL(NDATFOUN)=1
      IF (IMCDAT.EQ.1) THEN
         LISRUSEL(NDATFOUN)=NRUF
      ELSE
         CALL BKRANM(IBD,IRANM)
         LISKINSL(NDATFOUN)=IRANM
      ENDIF
      GO TO 999
C Too many datasets :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKSTORUN(IBD,NRUN,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Store a run in common / DATAFOUN /
C J. Boucrot  10-10-1996
C Called from BKFINDFI,PROPT3,PRDATSET           from  BOOKLIB
C Calls BKELEP,BKRUOK                            from  BOOKLIB
C Calls IUCOMP                                   from  GENLIB
C Input arguments :
C  IBD  = row of dataset in bank BDFS
C NRUN  = run number
C Output argument :
C   IER = 1 if too many runs found ; =0 otherwise
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-----------------------------------------------------------------------
      IER=0
C Check if run-related quantity already stored :
      IF (NTOTRUNS.EQ.0) GO TO 10
      IND=IUCOMP(NRUN,LISALRUN,NTOTRUNS)
      IF (IND.GT.0) GO TO 999
C Make sure that the present run is OK for selections :
 10   IF (IDSEAR.NE.3) THEN
         CALL BKRUOK(NRUN,IPHY,IOK)
         IF (IOK.NE.0) GO TO 999
      ENDIF
C Get the energy :
      CALL BKELEP(NRUN,ELEP,IFIL,BM,ID,NV,JBR)
      NLL=NINT(ELEP/EROUND)
      IELEP=NLL*IROUND
C Store the informations in / DATAFOUN /
      NTOTRUNS=NTOTRUNS+1
      IF (NTOTRUNS.GT.NTODT) GO TO 900
      LISALRUN(NTOTRUNS)=NRUN
      LISENGLP(NTOTRUNS)=IELEP
      LISALBDF(NTOTRUNS)=IBD
      GO TO 999
C Too many runs :
 900  IER=1
 999  RETURN
      END
      SUBROUTINE BKSYFR(INFO,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Processes special files to free a cartridge/DLT
C  J. Boucrot  03-Nov-1995
C  Called from BKSYSD
C  Calls ALINST                                       from ALEPHLIB
C  Calls BKSSTR,BKPOIN,BKFILB,BKMODI,BKISDL           from BOOKLIB
C  Output argument :
C    IER  =  1 if no room to book banks
C    IER  =  2 if error in Request file
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      SAVE
      INTEGER ITAB(MAXIN)
      CHARACTER FRI*4,ALPR1*6,ALPR2*6,ALSOF*6,INFO*100,CK*6
      CHARACTER TAPE*8,TAPIN*8
      DATA FRI,ALPR1,ALPR2,ALSOF  / 'FREE', 'ALPROD', 'ALREPR',
     +                              'ALSOFT'  /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      TAPE=' '
      IBLAN=INTCHA('    ')
C Special case of tapes to be freed by TMS : 1 single line on file
C with syntax ALPROD VSNTAP FREE :
      IFRI=INDEX(INFO,FRI)
      IMF=ICFNBL(INFO,1,9)
      IF (IFRI.EQ.0.OR.IMF.EQ.0) GO TO 920
      CK=INFO(IMF:IMF+5)
      IF (CK.NE.ALPR1.AND.CK.NE.ALPR2.AND.CK.NE.ALSOF) GO TO 920
      TAPE=INFO(IFRI-7:IFRI-2)//'  '
C One has to check if TAPE is a cartridge or a DLT  :
      CALL BKISDL(TAPE,2,IDLT)
      IF (IDLT.EQ.0) THEN
         NFIDLT=1
         TAPDLT(NFIDLT)=TAPE
         LISORD(NFIDLT)=1
         IMCDLT=0
         IBDRO=0
         DO 6 IKS=1,2
            CALL BKSSTR('BDFS',IKS,TAPE,JBDFLO-JBDFTC,JBDFTC,NRODF)
            IF (NRODF.LE.0) GO TO 6
            IMCDLT=IKS
            IBDRO=NRODF
            GO TO 8
 6       CONTINUE
 8       IF (IMCDLT*IBDRO.EQ.0) GO TO 920
         LISBDF(NFIDLT)=IBDRO
      ENDIF
C
C Now loop on all these tapes or DLT files :
C
      IF (IMCDLT.EQ.0.OR.NFIDLT.EQ.0) GO TO 920
      JBDFS=NLINK('BDFS',IMCDLT)
      DO 500 IBD=1,NFIDLT
         KBDF=KROW(JBDFS,LISBDF(IBD))
         TAPIN=TAPDLT(LISORD(IBD))
         write ( lwrdbg,1112) imcdlt,lisbdf(ibd),tapin
C
C If the present tape contains a master dataset , there is a problem !
C Issue a warning and stop processing for this file
C
         IF (NFIDLT.EQ.1.AND.IW(KBDF+JBDFCO).EQ.0) THEN
            IF (IBAUTO.EQ.0) PRINT 1109,TAPIN,IMCDLT,LISBDF(IBD)
            WRITE ( LWRDBG,1109) TAPIN,IMCDLT,LISBDF(IBD)
            GO TO 999
         ENDIF
C Mark it as to be discarded in 'BDFS' :
         IW(KBDF+JBDFDF)=1
         CALL BKMODI('BSET',IW(KBDF+JBDFNP),0,LBSETA,IERM)
 500  CONTINUE
C
C Add a new row in bank 'BCAR' , NR=1000 for further TMS processing :
C
      CALL VZERO(ITAB,MAXIN)
      DO 550 IKS=JBCAVS,JBCAWN-1
 550  ITAB(IKS)=INTCHA('    ')
      CALL ALINST(TAPE,ITAB(JBCAVS),NBID)
      ITAB(JBCARF)=100
      CALL BKFILB('BCAR',1000,ITAB,LBCARA,NROU,IEOU)
      IF (IEOU.EQ.2) GO TO 910
      CALL BKMODI('BCAR',1000,0,LBCARA,IER)
      NMODIF=NMODIF+1
      NBDFDO=NBDFDO+1
      GO TO 999
C-----------------------------------------------------------------------
C Process   errors :
C not enough space to book banks
 910  IER=1
      GO TO 999
C Problem with content of file :
 920  IER=2
      WRITE ( LWRDBG,1110) INFO(1:LNBLNK(INFO))
C
 999  RETURN
C-----------------------------------------------------------------------
 1109 FORMAT (/1X,100(1H*)/4X,' +++ Warning !!  Tape ',2X,A8,' has',
     +        ' a MASTER DATASET on IMCDAT,NROW=',2I8/20X,'It will ',
     +        ' not be FREED please check carefully with ALPROD',
     +        ' or ALREPRO',/1X,100(1H*))
 1110 FORMAT (/30X,'+++ Error in BKSYFR : irrelevant infos :'/2X,A100)
 1112 Format (15x,' === BKSYFR Dataset BDFS Nr,Nrow =',I3,I7,' Name =',
     +        2X,A8,' is FREED ')
      END
      SUBROUTINE BKSYSD(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads files sent by ALCOPY / ALPROD / ALBOOK execs
C  J. Boucrot  22-Aug-1989    - Modified 20-01-1991 for TMS
C  Modified 02-Nov-1995 to take care of DLT files
C  Modified 09-Jan-1998 for multiple copies from DLTs
C  Called from BKUPDA
C  Calls BKDACI                                        from ALEPHLIB
C  Calls BKSYSF,BKSYFR,BKSYSG,BKMESG,BKISDL,BKSYSRED   from BOOKLIB
C  Output argument :
C    IER  =  1 if no room to book banks
C    IER = 2 if the request file is not accepted ( illegal operation )
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      SAVE
      CHARACTER*8 TAPIN,TAPOU,TAPIF,TAPOF,IDAT,ITIM
      CHARACTER FORM*4,INFO*100,S*100,MESG*80,NAMUS*12
      PARAMETER ( NCOPR = 100 )
      CHARACTER*6 COPYTODO,COPYDONE,COPYTP
      COMMON / REDCOPS / COPYTODO(NCOPR),COPYDONE(NCOPR),COPYTP(NCOPR)
      COMMON / IREDCOP / NCOPYOK,NTOCOPY,NFITODO(NCOPR)
C-----------------------------------------------------------------------
      IER=0
      MESG=' '
      TAPIN=' '
      TAPOU=' '
      IRRC=0
      ICOPY=0
      IERIN=0
      IEROU=0
      IDUPL=0
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
C
C Read the input file , which contains 3 ASCII records :
C
 5    READ ( LECTXT, '(A)' , END=500 , ERR=900 ) INFO
      S=INFO(1:LNBLNK(INFO))
      WRITE (LWRDBG , 1101) S
      CALL CLTOU(INFO)
      IRRC=IRRC+1
      IREC=MOD((IRRC-1),2)
      IF (IREC.EQ.0) IREC=2
C
C First line of file : switch according to nature of file :
C
      IF (IRRC.EQ.1) THEN
C Special case of tapes to be freed by TMS : 1 single line on file
C with syntax ALPROD VSNTAP FREE :
         IFRI=INDEX(INFO,'FREE')
         IF (IFRI.GT.0) THEN
            CALL BKSYFR(INFO,IERF)
            IF (IERF.EQ.1) GO TO 920
            IF (IERF.EQ.2) GO TO 900
            GO TO 999
         ENDIF
C Other files : Copies of datasets described by sets of 3 lines :
C First line contains username,date :
C with format : USERNAME DD/MM/YY HH.MM.SS
         NAMUS=' '
         IDF=INDEX(INFO,'/')
         IF (IDF.EQ.0) GO TO 900
         INM=MIN(IDF-4,12)
         NAMUS=INFO(1:INM)
         IDAT=INFO(IDF-2:IDF+5)
         ITIM=INFO(IDF+7:IDF+14)
         CALL BKDACI(1,IDAT,ITIM,IDATE,ITIME)
         IF (INDEX(INFO,'DUPLIC').GT.0) IDUPL=1
         GO TO 5
      ENDIF
C
C Next couple of lines contains the definition of input/output tapes
C e.g. Tape number and possibly file number e.g. AS1234_45 )
C or multi-file tape without file number  e.g. Y11234
C in which case the copy must be a multi-file also !
C
      IF (IREC.EQ.1) CALL BKSYSF(INFO,TAPIN,IFLIN,FORM,IERIN)
      IF (IREC.EQ.2) CALL BKSYSF(INFO,TAPOU,IFLOU,FORM,IEROU)
      IF (IREC.EQ.2) THEN
         IF (IERIN+IEROU.NE.0) GO TO 900
C In case of full duplication, fill vars in /REDCOPS/ and quit:
         IF (IDUPL.EQ.1) THEN
            NCOPYOK=NCOPYOK+1
            COPYDONE(NCOPYOK)=TAPIN
            COPYTP(NCOPYOK)=TAPOU
C Prepare the TMS management of this copy:
            CALL BKSYSRED(TAPIN,TAPOU,IERD)
            IF (IERD.NE.0) GO TO 920
            GO TO 450
         ENDIF
C Check if file of a multi-file:
         IF (IFLIN.GT.0) GO TO 400
C If not multifile tape, single copy:
         CALL BKISDL(TAPIN,2,IDLT)
         IF (IDLT.EQ.0.OR.NFIDLT.LE.0) GO TO 400
C The output must be also a multifile tape, otherwise stop:
         CALL BKCHKT(TAPOU,ICERN,IMULT,IDLT,IERT)
         IF (IERT.NE.0.OR.IMULT.EQ.0) GO TO 900
C Multifile tape copy : loop on the files:
         DO 200 IDL=1,NFIDLT
            TAPIF=TAPDLT(IDL)
            TAPOF=TAPOU(1:6)//TAPDLT(IDL)(7:8)
            IFLIN=LISORD(IDL)
            IFLOU=IFLIN
            CALL BKSYSG(TAPIF,IFLIN,TAPOF,IFLOU,IDAT,ITIM,NAMUS,IER)
            IF (IER.EQ.1) GO TO 920
            IF (IER.EQ.2) GO TO 999
            ICOPY=ICOPY+1
 200     CONTINUE
         WRITE (LWRDBG,1105) NFIDLT,TAPIN,TAPOU
         GO TO 450
C Copy of a single file :
 400     CALL BKSYSG(TAPIN,IFLIN,TAPOU,IFLOU,IDAT,ITIM,NAMUS,IER)
         IF (IER.EQ.1) GO TO 920
         IF (IER.EQ.2) GO TO 999
         ICOPY=ICOPY+1
 450     IERIN=0
         IEROU=0
      ENDIF
C go to next record on file
      GO TO 5
 500  CONTINUE
      IF (ICOPY.GT.1) WRITE (LWRDBG,1110) ICOPY
      GO TO 999
C-----------------------------------------------------------------------
C Process   errors :
C Syntax error in BSYST cards file :
C
 900  IVAL=IREC
      MESG=' ******* Error in BKSYSD : Invalid syntax '//
     +     ' in INPUT file ! *******'
      IF (IBAUTO.EQ.0) PRINT 1102,MESG(1:LNBLNK(MESG))
      WRITE (LWRDBG,1102) MESG(1:LNBLNK(MESG))
      IER=2
      GO TO 950
C not enough space to book banks
 920  IVAL=0
      MESG=' Error in BKSYSD : no space to book banks'
      IER=1
C
 950  CALL BKMESG(INFO,IVAL,MESG)
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/2X,'=== Subroutine BKSYSD ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1101 FORMAT (7X,'+++ BKSYSD : Reading file INFO =',52X,A40)
 1102 FORMAT (/1X,100(1H*)/7X,'+++ ',2X,A80/1X,100(1H*))
 1105 FORMAT (7X,'+++ BKSYSD : ', I5,' files from ',2X,A8,
     +        ' copied on ',2X,A8)
 1110 FORMAT (/7X,'+++ BKSYSD END for multiple file tape : ',I5,
     +        ' COPIES have been Read')
      END
      SUBROUTINE BKSYSF(INFO,TAPE,IFILE,FORM,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Auxiliary to BKSYSD : decode ALPROD / ALBOOK tape names
C  J. Boucrot  02-Nov-1995
C  Called from BKSYSD                                   from BOOKLIB
C  CallS  BKCHKT,BKEXFI                                 from BOOKLIB
C  Input argument :
C   INFO  = line of text from Request file
C  IFILE  = file # , if multifile device
C  Output arguments :
C   TAPE  = tape name in BDFS format
C   FORM  = tape format ( EPIO or NATV )
C    IER  =  0 if all OK
C    IER  =  1 if tape not OK
C-----------------------------------------------------------------------
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      CHARACTER INFO*100,TAPE*8,FORM*4,TAPAL*10
C-----------------------------------------------------------------------
      IER=1
      TAPAL=' '
      TAPE=' '
      FORM='EPIO'
      IFILE=0
      IF (INDEX(INFO,'NATV').GT.0) FORM='NATV'
      INB=ICFNBL(INFO,1,9)
      CALL BKCHKT(INFO(INB:INB+5),ICERN,IMULT,IDLT,IERB)
      IF (IERB.NE.0) GO TO 999
      TAPE=INFO(INB:INB+5)//'  '
      ISEPF=INDEX(INFO,'/')
      IF (ISEPF.EQ.0) ISEPF=1+LNBLNK(INFO)
C Tape is given as AB1234 :
      IF (IMULT.EQ.0.OR.ISEPF.EQ.0) GO TO 800
      TAPAL=INFO(INB:ISEPF-1)
C File of a multi-file Tape is given as AS1234_56 :
      IF (INDEX(TAPAL,'_').GT.0) THEN
         CALL BKEXFI(5,TAPAL,0,IERF)
         IF (IERF.NE.0) GO TO 999
         TAPE=AXBDFS
         IFILE=IAXFLN
      ENDIF
 800  IER=0
C
 999  RETURN
      END
      SUBROUTINE BKSYSG(TAPIN,IFLIN,TAPOU,IFLOU,IDAT,ITIM,NAMUS,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Processes the copies of tapes found by BKSYSD
C  J. Boucrot  20-Mar-1996
C  Called from BKSYSD
C  Calls BKINCA,BKCARI,ALSTIN,ALINST                         from ALEPHL
C  Calls BKPOIN,BKSSTR,BKFILB,BKMODI,BKMESG,BKDACI           from BOOKLI
C  Input arguments :
C  TAPIN  = input tape or DLT file
C  IFLIN  = file # if multiple file input device
C  TAPOU  = copy
C  IFLOU  = file # if multiple file output device
C   IDAT  = time of copy
C   ITIM  = time of copy
C  NAMUS  = name of user who did the copy
C  Output argument :
C    IER  =  1 if no room to book banks
C    IER = 2 if the request is not accepted ( illegal operation )
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      SAVE
      INTEGER ITAB(MAXIN),IPRV(4),ITPIN(2),ITPOU(2),BKINCA
      CHARACTER FORM*4,COMEN*60,TAPIN*8,TAPOU*8,CKAL*6,RTAP*8
      CHARACTER INFO*100,MESG*80,MASTR*8,TPPI*8,TPPO*8
      CHARACTER DSNIN*20,DSNOU*20,NAMUS*12,ITIM*8,IDAT*8,CKFR*4
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      INFO=' '
      MESG=' '
      DSNIN=' '
      DSNOU=' '
      IBLAN=INTCHA('    ')
C Find the input DATASET , check if no multiple entries :
C ( protection against users having forgotten to declare "FREE" the
C old unused cartridges with the TAPES EXEC ) :
      IF ( TAPIN.EQ.' '.OR.TAPOU.EQ.' ') GO TO 900
      IMCIN=0
      INPIN=0
      INROI=0
      NBDIN=0
      IDROI=0
      CALL ALINST(TAPIN,ITPIN,NB1)
      CALL ALINST(TAPOU,ITPOU,NB2)
C loop on both 'BDFS' banks :
      DO 590 IKK=1,2
         CALL BKPOIN(LECDAF,'BDFS',IKK,JBDFS)
         IF (JBDFS.LE.0) GO TO 920
         NBDF=LROWS(JBDFS)
C loop on all datasets of this 'BDFS' bank :
         DO 560 IKR=1,NBDF
            KBDFS=KROW(JBDFS,IKR)
C
C Check if the INPUT tape TAPIN exists , and if it's unique :
C
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TPPI)
            IF (TPPI(1:6).NE.TAPIN(1:6))   GO TO 540
            IF (IW(KBDFS+JBDFFN).NE.IFLIN) GO TO 540
            IF (IW(KBDFS+JBDFDF).NE.0) GO TO 540
            NPI=IW(KBDFS+JBDFNP)
            NRI=IW(KBDFS+JBDFNR)
            CALL BKPOIN(LECDAF,'BSET',NPI,JBSET)
            IF (JBSET.LE.0) GO TO 920
            KBSET=KROW(JBSET,NRI)
            IDAIN=IW(KBSET+JBSEWD)
C is there already a dataset found on TAPIN ?
C if yes , keep the more recent one and discard the oldest :
            IF (IMCIN.NE.0) THEN
               IF (IDAIN.LT.IDROI) THEN
                  IW(KBDFS+JBDFDF)=1
                  NBKSCR=NBKSCR+1
                  WRITE ( LWRDBG , 1107) TAPIN,IKK,IKR,NPI,NRI,IDAIN,
     +                                   IMCIN,NBDIN,INPIN,INRIN,IDROI
                  GO TO 560
               ELSE
                  CALL BKPOIN(LECDAF,'BDFS',IMCIN,JBDFO)
                  IF (JBDFO.LE.0) GO TO 920
                  KBDFO=KROW(JBDFO,NBDIN)
                  IW(KBDFO+JBDFDF)=1
                  WRITE ( LWRDBG , 1108) TAPIN,IKK,IKR,NPI,NRI,IDAIN,
     +                                   IMCIN,NBDIN,INPIN,INRIN,IDROI
                  NBKSCR=NBKSCR+1
                  GO TO 530
               ENDIF
            ENDIF
C Store the parameters of the INPUT dataset for TAPIN :
 530        IMCIN=IKK
            INPIN=NPI
            INRIN=NRI
            IDROI=IDAIN
            NBDIN=IKR
            GO TO 560
C Check for the copy tape TAPOU : if there was already a dataset on it ,
C it must be marked as to be erased from the database UNLESS IT'S
C a master dataset - in that case , there is a problem somewhere !
 540        CALL ALSTIN(IW(KBDFS+JBDFTC),2,TPPO)
            IF (TPPO(1:6).NE.TAPOU(1:6))   GO TO 560
            IF (IW(KBDFS+JBDFFN).NE.IFLOU) GO TO 560
            IF (IW(KBDFS+JBDFDF).NE.0) GO TO 560
            NPOLD=IW(KBDFS+JBDFNP)
            NROLD=IW(KBDFS+JBDFNR)
C Check if it is a MASTER dataset . If yes : issue a WARNING and cancel
            IF (IW(KBDFS+JBDFCO).EQ.0) THEN
               WRITE ( LWRDBG,1109 ) TAPOU,IKK,IKR
               IF (IBAUTO.EQ.0) PRINT 1109,TAPOU,IKK,IKR
               GO TO 930
            ENDIF
C Mark the dataset as to be discarded from the SCANBOOK database :
            IW(KBDFS+JBDFDF)=1
            CALL BKMODI('BSET',INPIN,0,LBSETA,IERM)
            WRITE ( LWRDBG,1104) TAPOU,IKK,IKR
            WRITE ( LWRDBG,1105 ) NPOLD,NROLD
            NBKSCR=NBKSCR+1
C End of loops :
 560     CONTINUE
 590  CONTINUE
C-----------------------------------------------------------------------
C If TAPIN not found in the database , issue an error message and quit :
      IF (IMCIN*INPIN.EQ.0) GO TO 910
C Create a line in the appropriate 'BDFS' bank for this copy :
 700  CALL VZERO(ITAB,MAXIN)
      DO 715 IS=JBDFTC,JBDFCO-1
 715  ITAB(IS)=INTCHA('    ')
      ITAB(JBDFTC)=ITPOU(1)
      ITAB(JBDFTC+1)=ITPOU(2)
      ITAB(JBDFCO)=1
      ITAB(JBDFNP)=INPIN
      ITAB(JBDFNR)=INRIN
      ITAB(JBDFFN)=IFLOU
      CALL BKFILB('BDFS',IMCIN,ITAB,LBDFSA,IBDFO,IER)
      IF (IER.EQ.2) GO TO 920
      WRITE ( LWRDBG,1106 ) INPIN,INRIN,IBDFO
      CALL BKMODI('BDFS',IMCIN,0,LBDFSA,IER)
      CALL BKMODI('BSET',INPIN,0,LBSETA,IER)
      IF (IER.NE.0) GO TO 920
 800  CONTINUE
C-----------------------------------------------------------------------
C Transmit infos for TMS Database update in a temporary bank 'BCAR' :
      CALL VZERO(ITAB,MAXIN)
      DO 850 IK=JBCAVS,JBCAWN-1
 850  ITAB(IK)=INTCHA('    ')
C Build the datasetname to be given to TMS :
      CALL ALINST(TAPOU,ITAB(JBCAVS),NN2)
      CALL BKPOIN(LECDAF,'BSET',INPIN,JBSET)
      IF (JBSET.LE.0) GO TO 920
      KBSET=KROW(JBSET,INRIN)
      CALL ALSTIN(IW(KBSET+JBSEAD),JBSEAU-JBSEAD,DSNIN)
      DSNOU='CP'//DSNIN(1:18)
C Modify user name , date of reservation , datasetname :
      IF ( INDEX(NAMUS,'COP').NE.0) NAMUS='ALPROD'
      CALL ALINST(NAMUS,ITAB(JBCAON),NN3)
      CALL ALINST(IDAT,ITAB(JBCARD),NN2)
      CALL ALINST(ITIM,ITAB(JBCART),NN2)
      CALL ALINST(DSNOU,ITAB(JBCADN),NNB)
C Find the cartridge name for the true master dataset  :
      IBTAP=IW(KBSET+JBSEBT)
      CALL BKPOIN(LECDAF,'BTPN',INPIN,JBTAP)
      IF (JBTAP.LE.0) GO TO 920
      KBTAP=KROW(JBTAP,IBTAP)
      CALL ALSTIN(IW(KBTAP+JBTPVS),JBTPFO-JBTPVS,MASTR)
      IF (MASTR.NE.TAPIN) TAPIN=MASTR
C Modify the comment :
      COMEN=' '
      COMEN='COPY OF '//TAPIN
      CALL ALINST(COMEN,ITAB(JBCACM),MM)
      ITAB(JBCARF)=2
C Book/enlarge the intermediate bank 'BCAR' , NR=1000
      CALL BKFILB('BCAR',1000,ITAB,LBCARA,LROWD,IERB)
      IF (IERB.EQ.2) GO TO 920
      CALL BKMODI('BCAR',NROU,0,LBCARA,IER)
      IF (IER.NE.0) GO TO 920
      WRITE ( LWRDBG , 1103 ) TAPIN,TAPOU
      NMODIF=NMODIF+1
      NBDFDO=NBDFDO+1
      GO TO 999
C-----------------------------------------------------------------------
C Process   errors :
C Syntax error in BSYST cards file :
C
 900  IVAL=1
      MESG=' ******* Error in BKSYSG : Invalid syntax '//
     +     ' in INPUT file ! *******'
      IF (IBAUTO.EQ.0) PRINT 1102,MESG(1:LNBLNK(MESG))
      WRITE (LWRDBG,1102) MESG(1:LNBLNK(MESG))
      IER=2
      GO TO 950
C Input data set not known from the Bookkeeping :
 910  IVAL=0
      MESG=' ******* Error in BKSYSG : input dataset '//
     +     ' NOT in ALEBOOK DATABASE *******'
      IF (IBAUTO.EQ.0) PRINT 1102,MESG(1:LNBLNK(MESG))
      WRITE (LWRDBG,1102) MESG(1:LNBLNK(MESG))
      IER=3
      GO TO 950
C not enough space to book banks
 920  IVAL=0
      MESG=' Error in BKSYSG : no space to book banks'
      IER=1
      GO TO 950
C Try to copy on a MASTER dataset :
 930  IVAL=0
      MESG=' ******* Error in BKSYSG : try to copy on a MASTER '//
     +     'dataset *******'
      IER=2
C
 950  CALL BKMESG(INFO,IVAL,MESG)
C
 999  RETURN
C-----------------------------------------------------------------------
 1102 FORMAT (/1X,100(1H*)/7X,'+++ ',2X,A80/1X,100(1H*))
 1103 FORMAT (7X,'+++ BKSYSG : Tapes updated : ',2(2X,A8)/)
 1104 FORMAT (14X,'+++ Warning !!! Output cartridge ',2X,A8,' had ',
     +        'already a dataset on BDFS NR,NROW =',2I8)
 1105 FORMAT (25X,'+++ NPER,NROW of old dataset =',2I9)
 1106 FORMAT (25X,'+++ NPER,NROW of new dataset =',2I9,' New row in ',
     +        ' BDFS =',I9)
 1107 FORMAT (14X,'+++ Warning !!! New entry found for INPUT cartridge',
     +        2X,A8,' BDFS NP,NROW =',2I8/,29X,'BSET NP,NR,date =',3I9,
     +        /,18X,' -- Previous entry had BDFS NP,NROW =',2I8/,29X,
     +        'BSET NP,NR,date =',3I9/35X,' +++ This new entry is the ',
     +        'oldest : it will be DISCARDED !')
 1108 FORMAT (14X,'+++ Warning !!! New entry found for INPUT cartridge',
     +        2X,A8,' BDFS NP,NROW =',2I8/,29X,'BSET NP,NR,date =',3I9,
     +        /,18X,' -- Previous entry had BDFS NP,NROW =',2I8/,29X,
     +        'BSET NP,NR,date =',3I9/35X,' +++ The previous entry is ',
     +        'the oldest : it will be DISCARDED !')
 1109 FORMAT (/1X,100(1H*)/4X,' +++ Warning !!  Tape ',2X,A8,' has',
     +        ' a MASTER DATASET on IMCDAT,NROW=',2I8/20X,'It will ',
     +        ' not be FREED please check carefully with ALPROD',
     +        ' or ALREPRO',/1X,100(1H*))
      END
      SUBROUTINE BKSYSRED(TAPIN,TAPOU,IER)
C ----------------------------------------------------------------------
CKEY UPDABOOK TMS
C! Fills bank 'BCAR' for a full Redwood copy for further TMS work
C  J. Boucrot 25 - Feb - 1998
C Called by BKSYSD                      from BOOKLIB
C Calls BKCHKT,BKGTMS,BKFILB,BKMODI     from BOOKLIB
C Calls ALINST                          from ALEPHLIB
C Input argument :
C TAPIN  = Origin tape name
C TAPOU  = Copy   tape name
C Output argument :
C   IER  = 0  if all OK
C        = 1  if there was no room to update the 'BCAR' bank
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
      CHARACTER*(*) TAPIN,TAPOU
      CHARACTER COMEN*60,DSETN*20,OWNER*12,OUTXT*80
      INTEGER BKINCA,ITAB(MAXIN)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IER=0
C Only CERN Multifile tapes are to be considered here:
      CALL BKCHKT(TAPOU,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0.OR.ICERN.EQ.0.OR.IMULT.EQ.0) GO TO 999
C Initialisations :
      OWNER='ALPROD      '
      DSETN=' '
      CALL VZERO(ITAB,MAXIN)
      DO 10 IKS=JBCAVS,JBCAWN-1
 10   ITAB(IKS)=INTCHA('    ')
      ITAB(JBCARF)=10
C Get the binary tag of TAPIN to put it for TAPOU:
      CALL BKGTMS(TAPIN,3,IRC,OUTXT)
      IF (IRC.EQ.-1) GO TO 999
      IF (IRC.EQ.0) THEN
         WRITE ( LWRDBG,1011)  TAPIN,IRC
         GO TO 999
      ENDIF
      DSETN=OUTXT(6:25)
C Now build the comment:
      COMEN=' '
      COMEN(1:7)='Copy of'
      COMEN(10:15)=TAPIN(1:6)
C Put the TAPE, comment, DSETN and owner in ITAB:
      CALL ALINST(TAPOU,ITAB(JBCAVS),NBDS)
      CALL ALINST(COMEN,ITAB(JBCACM),NNCO)
      CALL ALINST(DSETN,ITAB(JBCADN),NNCA)
      CALL ALINST(OWNER,ITAB(JBCAON),NNOW)
C Now store the infos on TAPE in the temporary bank BCAR,NR=1000 :
      CALL BKFILB('BCAR',1000,ITAB,LBCARA,NOU,IEOU)
      IF (IEOU.EQ.2) GO TO 910
      CALL BKMODI('BCAR',1000,0,LBCARA,IER)
      GO TO 999
C NO roo for 'BCAR' bank:
 910  IER=1
C
 999  RETURN
 1011 FORMAT (/' !! Warning !!  Tape ',2X,A6,' NOT known from TMS ',
     +         ' IRC =',I8,' in BKSYSRED ***')
      END
      SUBROUTINE BKS4BU(IMODE,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Updates SICAL luminosity for 4-bunch runs
C  stores informations in bank 'BS4B'
C  J. Boucrot  11-Nov-1994
C  Called from BKOFJU,BKMODD                         from BOOKLIB
C  Calls BKFPER,BKPOIN,BKS4DK                        from BOOKLIB
C  Calls AUBOS,GETS4B                                from ALEPHLIB
C  Input argument :
C    IMODE = 1  if information read from SICAL expert file
C    IMODE = 2  if information read from bank 'SLUM'
C  Output argument  :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      PARAMETER ( NONL = 100 )
      COMMON / SIBHA / NRUSIC,ILUQSI,NBHASI,SLUSIC,BACKSI,BTEWSI
      INTEGER N4BU(4)
      REAL X4BU(4),X4BA(4)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      INOLU=0
      ILUQ=0
      NBUN=0
      MR4BP=-1
      MR4BD=-1
      JBLAS=IW(NAMIND('BLAS'))
      IF (JBLAS.EQ.0) GO TO 900
      NR4BP=ITABL(JBLAS,1,JBLAP4)
      NR4BD=ITABL(JBLAS,1,JBLAD4)
      CALL VZERO(N4BU,4)
      CALL VZERO(X4BU,4)
      CALL VZERO(X4BA,4)
      IF (IMODE.EQ.2) GO TO 40
C the first record was already read in BKMODD :
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C
C IMODE = 1 : read the input BMODTLUM file :
C Decode the information of lumi :
C
 30   CALL BKS4DK(NRUN,ILUQ,N4BU,X4BU,X4BA,IERK)
      IF (IERK.EQ.1) GO TO 800
      IF (IERK.EQ.2) GO TO 900
      IF (ILUQ.LE.0) GO TO 30
C This run must have at least 2 significant bunches :
      DO 35 IK=1,4
 35   IF (N4BU(IK).GT.0.AND.X4BU(IK).GT.0.) NBUN=NBUN+1
      IF (NBUN.LE.1) GO TO 30
      GO TO 60
C
C IMODE = 2 : get informations from the 'SLUM' bank from LBOKLUZ0 file :
C
 40   NRUN=NRUSIC
      CALL GETS4B(NRUN,IFOUN,ILUQ,NBUN,N4BU,X4BU,X4BA)
C This run must have at least 2 significant bunches :
      IF (IFOUN.NE.2.OR.NBUN.LE.1) GO TO 800
      ILUQ=1
C Find in which 'B4SB' bank this new value must be stored :
 60   CONTINUE
      CALL BKFPER(NRUN,0,NPER)
      IF (IMODE.EQ.1.AND.NPER.LE.0) GO TO  30
      IF (IMODE.EQ.2.AND.NPER.LE.0) GO TO  800
      CALL BKPOIN(LECDAF,'BS4B',NPER,JBS4B)
      IF (JBS4B.LT.0) GO TO 900
      IF (JBS4B.EQ.0) GO TO 90
      NS4B=LROWS(JBS4B)
      IF (NS4B.LE.0) GO TO 90
      IOLD=0
C
      DO 80 IRO=1,NS4B
         IF (ITABL(JBS4B,IRO,JBS4RN).NE.NRUN) GO TO 80
C If this run was already in 'BS4B' , this is an update :
C store the new , modified informations :
         KRUO=KROW(JBS4B,IRO)
         IW(KRUO+JBS4RN)=NRUN
         IW(KRUO+JBS4LQ)=ILUQ
         DO 70 IK=1,4
            IW(KRUO+3)=N4BU(IK)
            RW(KRUO+4)=X4BU(IK)
            RW(KRUO+5)=X4BA(IK)
            KRUO=KRUO+3
 70      CONTINUE
         IOLD=1
         GO TO 81
 80   CONTINUE
 81   IF (IOLD.EQ.1) GO TO 600
C
C This run was not yet known in BS4B : increase the bank
C and store the info
C
 90   IOLR=0
      IF (JBS4B.EQ.0) THEN
         LENB=LBS4BA*NONL+LMHLEN
      ELSE
         IOLR=LROWS(JBS4B)
         IF (LFRROW(JBS4B).GT.1) GO TO 410
         LENB=IW(JBS4B)+LBS4BA*NONL
      ENDIF
C Book or enlarge 'BS4B' if needed :
      CALL AUBOS('BS4B',NPER,LENB,JBS4B,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      IW(JBS4B+LMHCOL)=LBS4BA
 410  IW(JBS4B+LMHROW)=IOLR+1
C
      LRO=LROWS(JBS4B)
      KRUO=KROW(JBS4B,LRO)
      IW(KRUO+JBS4RN)=NRUN
      IW(KRUO+JBS4LQ)=ILUQ
         DO 470 IK=1,4
            IW(KRUO+3)=N4BU(IK)
            RW(KRUO+4)=X4BU(IK)
            RW(KRUO+5)=X4BA(IK)
            KRUO=KRUO+3
 470     CONTINUE
C
 600  WRITE ( LWRDBG , 1101 ) NRUN,N4BU,X4BU
      NMODIF=NMODIF+1
      INOLU=INOLU+1
C Update BLAS numbers , if needed :
      KBLAS=KROW(JBLAS,1)
      IF (ILUQ.EQ.1) THEN
         MR4BP=MAX0(MR4BP,NRUN)
         IF (MR4BP.GT.NR4BP) IW(KBLAS+JBLAP4)=MR4BP
      ENDIF
      IF (ILUQ.EQ.2) THEN
         MR4BD=MAX0(MR4BD,NRUN)
         IF (MR4BD.GT.NR4BD) IW(KBLAS+JBLAD4)=MR4BP
      ENDIF
C go to next records for IMODE = 1 :
      IF (IMODE.EQ.1) GO TO 30
C
 800  CONTINUE
C If any modif done , book bank 'BADB' to trigger BKLUFI execution :
      IF (INOLU.LE.0) GO TO 999
      CALL AUBPRS('BS4B')
      CALL AUBOS('BADB',1,0,JBADB,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      GO TO 999
C
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/2X,'=== Subroutine BKS4BU ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1101 FORMAT (7X,'+++ BKS4BU UPDATE RUN, Bhabs 4 Bunch =',5I8/,
     +        7X,'+++ BKS4BU UPDATE SICAL Lumi 4 Bunch =',4F9.5)
      END
      SUBROUTINE BKS4DK(NRUN,ILUQ,N4BU,X4BU,X4BA,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads the SICAL luminosity file for 4-bunch runs
C  J. Boucrot  21-Jun-1996
C  Called from BKS4BU                                from BOOKLIB
C  Output arguments :
C    NRUN  = Run number
C    ILUQ  = Sical lumi status
C    N4BU  = list of number of Bhabhas per bunch
C    X4BU  = list of lumis per bunches
C    X4BA  = list of backgrounds per bunch
C     IER  = 0 if all OK
C          = 1 if end-of-file
C          = 2 if read error
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      INTEGER N4BU(4)
      REAL X4BU(4),X4BA(4)
      CHARACTER INFO*132
      DATA IPASS / 0 /
C-----------------------------------------------------------------------
      IER=0
      NRUN=0
      ILUQ=0
      CALL VZERO(N4BU,4)
      CALL VZERO(X4BU,4)
      CALL VZERO(X4BA,4)
      IREC=0
      IPASS=IPASS+1
      IF (IPASS.EQ.1) THEN
         REWIND (LECTXT)
         READ (LECTXT, '(A)')  INFO
      ENDIF
      INFO=' '
C This routine has to read 5 successive records on the Sical lumi file:
 5    READ ( LECTXT, '(A)' , END=800, ERR=900 ) INFO
      IREC=IREC+1
      IF (IREC.GT.1) GO TO 40
C The first record contains the run number and the Lumi status :
 30   READ ( INFO , 1001 ) NRUN,ILUQ
      GO TO 50
C The following records contain the # of Bhabhas, the lumi and backgroun
 40   I=IREC-1
      READ ( INFO , 1002 ) N4BU(I),X4BU(I),X4BA(I)
 50   IF (IREC.GE.5) GO TO 999
      GO TO 5
C  End of file read :
 800  IER=1
      GO TO 999
C  Read error :
 900  IER=2
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (2X,I5,1X,I2)
 1002 FORMAT (1X,I5,2(2X,F8.5))
      END
      SUBROUTINE BKSYSM(MESG,TYPE)
C-----------------------------------------------------------------------
CKEY UPDABOOK TOOL
C! Sends a warning file to a Bookkeeping System Manager
C J.Boucrot      20-Jun-1989
C Called from BKCLOD or BKWDAF                            from BOOKLIB
C Calls BKPOIN                                            from BOOKLIB
C Calls ALSTIN                                            from ALEPHLIB
C Calls VMCMS  ( IBM only )                               from GENLIB
C Input arguments :
C   MESG  =  Message to be sent
C   TYPE  =  'BOOK' if message to be sent to a Bookkeeping Manager
C   TYPE  =  'TAPE' if message to be sent to a Tape Manager
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
      SAVE
       CHARACTER*(*) MESG
       CHARACTER TYPE*4,PRVL*8,LOGN*12,BOKM*4,TAPM*4
       CHARACTER FIDEF*80,MSEN*100,MCOP*132
       CHARACTER*17 FILMG(2)
       CHARACTER*4  BKTP(2)
       DATA FILMG /' WARNING ALEBOOK ',' WARNING TAPEBOOK' /
       DATA BKTP  / 'BKSM' , 'TAPM' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Do nothing if no 'BNAM' bank available :
       CALL BKPOIN(0,'BNAM',ICOMPB,JBNAM)
       IF (JBNAM.LE.0) GO TO 999
       NBNAM=LROWS(JBNAM)
       IF (NBNAM.EQ.0) GO TO 999
       ISOR=1
       IF (TYPE.EQ.'TAPE') ISOR=2
C Open and write the message file
 999   RETURN
 1001  FORMAT (' Time is ',2(2X,A8),' User is : ',2X,A12 /
     +         ' Routine BKSYSM called for Type = ',2X,A4 )
 1002  FORMAT (' Message to System Manager : ',2X,A80)
       END
      SUBROUTINE BKTADUP(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Read numfiles.cerntaps and create tobecopied.cerntaps
C  Author  J.Boucrot  26-Jan-1998
C Called from BKFTAP                       from BOOKLIB
C OUTPUT argument :
C   IER = 1 if pb with a file ; = 0 otherwise
C----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER FNOL*60,FDUP*60,LINE*80,LINO*40,TOCOP*14
      DATA TOCOP / 'To be   copied' /
C----------------------------------------------------------------------
      IER=0
      IPROD=1
      IF (INDEX(ALS_TEMP,'test').gt.0) IPROD=0
      ITOCO=0
C Open the numfiles.cerntaps file:
      FNOL=' '
      FNOL=ALS_TEMP(1:ILTEMP)//'numfiles.cerntaps'
      FNOL=FNOL(1:LNBLNK(FNOL))
      OPEN ( LECSEQ , FILE = FNOL , STATUS = 'OLD' , ERR = 901 )
      REWIND (LECSEQ )
C
C At least 1 tape to be copied.
C Erase the previous file tobecopied.cerntaps
C then open a new one for writing
C
      FDUP=' '
      FDUP=ALS_TEMP(1:ILTEMP)//'tobecopied.cerntaps'
      FDUP=FDUP(1:LNBLNK(FDUP))
      call system(' rm -f '//FDUP)
      OPEN ( LWRMGR , FILE = FDUP , STATUS = 'NEW' , ERR = 999)
      LINO=' List of tapes ready to be copied :'
      WRITE (LWRMGR , '(A)') LINO
      WRITE (LWRDBG,1001) LINO
 1001 FORMAT (/30X,'==== Subroutine BKTADUP ==== : ',2X,A40)
C
C Read the file numfiles.cerntaps :
C
 10   READ ( LECSEQ , '(A)' , END = 100 , ERR = 901 ) LINE
      IF (LINE(1:1).EQ.'=') GO TO 10
      IF (INDEX(LINE,TOCOP).EQ.0) GO TO 10
C Build the output line to be written
      ITOCO=ITOCO+1
      LINO=' '
      LINO=' '//LINE(3:8)//' with '//LINE(11:14)//' files'
      WRITE (LWRMGR , '(A)') LINO
      WRITE (LWRDBG, '(A)' ) LINO
      GO TO 10
C Finished : close files and quit
 100  CLOSE (LECSEQ)
      CLOSE (LWRMGR)
C IF production run AND tapes to be copied, send a mail
C to the tapes manager:
      IF (IPROD.EQ.0.OR.ITOCO.EQ.0) GO TO 999
      CALL BKTADUS(ITOCO)
      GO TO 999
C Error:
 901  IER=1
 999  RETURN
      END
      SUBROUTINE BKTADUS(ICOP)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Send a mail to the Tapes manager for redwood duplications
C  Author  J.Boucrot  12-Feb-1998
C Called from BKTADUP                      from BOOKLIB
C Input  argument :
C  ICOP = nb of redwoods to be copied
C----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      CHARACTER FDUS*60,STMES*80,LINO*80
C----------------------------------------------------------------------
      If (ICOP.LE.0) GO TO 999
      STMES=' '
      STMES=' Date is : '//CDATIM//' ;  Time is : '//CSETIM
C
C At least 1 tape to be copied.
C Erase the previous file tobecopied.cerntaps
C then open a new one for writing
C
      FDUS=' '
      FDUS=ALS_TEMP(1:ILTEMP)//'mail.to_tape_manager'
      FDUS=FDUS(1:LNBLNK(FDUS))
      call system(' rm -f '//FDUS)
      OPEN ( LWRUUU , FILE = FDUS , STATUS = 'NEW' , ERR = 999)
      LINO=STMES
      WRITE (LWRUUU , '(A)') LINO
      LINO=' '
      WRITE (LINO(2:4), '(I3)' )  ICOP
      LINO(8:30)= 'Tapes have to be copied'
      WRITE (LWRUUU , '(A)') LINO
      LINO=' '
      LINO= ' See list on file '//
     +      '/afs/cern.ch/aleph/reference/book/tobecopied.cerntaps'
      WRITE (LWRUUU , '(A)') LINO
C Finished : close file and send mail
      CLOSE (LWRUUU)
      call system('Mail -s Tapes_to_be_copied '//
     + ' Michelle.Marin@cern.ch < '//FDUS(1:LNBLNK(FDUS)))
C
 999  RETURN
      END
      SUBROUTINE BKTALO(VSN,NROW,LOCAT,ILAB)
C----------------------------------------------------------------------
CKEY TOOL/INTERNAL
C! Finds the TMS location of cartridge VSN
C  Author  J.Boucrot  27-Mar-1991
C Called from various routines                from  BOOKLIB
C Calls BKCHKT,BKPOIN,BKSSTR                  from  BOOKLIB
C Input arguments :
C  VSN  =  Aleph Cartridge name ( CH*6 )  If not given , NROW must be #
C  NROW =  Row number of cartridge in bank 'BDFS' , NR = IMCDAT ( if VSN
C          not given )
C Output arguments :
C  LOCAT = TMS location of the cartridge ( at least CH*9)
C        = 'Unknown '  if not found
C  ILAB  = Homelab # corresponding to this location
C        = 0 if not found
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      CHARACTER*(*) LOCAT
      CHARACTER VSN*6,TAPN*8,LOCBD*4,CHAINT*4
      INTEGER ITPL(2)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      LOCAT='Unknown  '
      ILAB=0
      IF (IMCDAT.LE.0.OR.IMCDAT.GT.2) GO TO 999
      IF (VSN.EQ.' '.OR.NROW.GT.0) GO TO 100
C Special patch for CERN Redwoods:
      IF (VSN(1:2).EQ.'Y1'.OR.VSN(1:2).EQ.'R0') THEN
         ILAB=1
         LOCAT='STK_ACS '
         GO TO 999
      ENDIF
C VSN was given as input :
      CALL BKCHKT(VSN,ICERN,IMULT,IDLT,IEROR)
      IF (IEROR.NE.0) GO TO 100
      CALL PROPT5ST(VSN,IMULT,1,IMCD,NRIN)
      IF (NRIN.LE.0) GO TO 999
C NROW was given as input
 100  NRIN=NROW
 110  CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
      IF (JBDFS.LE.0) GO TO 999
      KBDFS=KROW(JBDFS,NRIN)
      IF (KBDFS.LE.0) GO TO 999
      CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPN)
      IF (TAPN(1:2).EQ.'Y1'.OR.TAPN(1:2).EQ.'R0') THEN
           ILAB=1
         LOCAT='STK_ACS '
         GO TO 999
      ENDIF
C Get location code from 'BDFS'  :
 115  LOCBD=CHAINT(IW(KBDFS+JBDFLO))
      IF (LOCBD.EQ.' ') GO TO 999
      IF (LOCBD.EQ.'REST') THEN
         IVAL=19
         LOCAT=TMSLAB(IVAL)
         GO TO 300
      ENDIF
      IF (LOCBD(1:1).EQ.'1') THEN
         IVAL=16
         LOCAT=TMSLAB(IVAL)
         GO TO 300
      ENDIF
C Find the full location name :
      IVAL=0
      DO 200 ISE=1,NTMSLI
         IF (INDEX(TMSLIB(ISE),LOCBD(1:3)).EQ.0) GO TO 200
         IVAL=ISE
         LOCAT=TMSLAB(ISE)
         GO TO 300
 200  CONTINUE
 300  IF (IVAL.EQ.0) GO TO 999
C Find the Homelab code :
      ILAB=IHOLAB(IVAL)
 999  RETURN
      END
      SUBROUTINE BKTANA(NAMT,NAMLA,TNAT,TLABL,IHOME,IEROR)
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Determines provenance and nature of tape NAMT
C  J. Boucrot  18 - Mar - 1996
C Called from BKCHHO or BKFRTM or PRBFIL
C Calls CLTOU                                  from KERNLIB
C Calls ALSTIN,BKINCA                          from BOOKLIB
C Input argument :
C    NAMT  : Name of tape/cartridge
C Output arguments :
C   NAMLA = Name of Aleph Homelab
C   TNAT  = Nature of tape :
C           P round tape  C 3480 cartridge   D  DLT
C           E Exabyte     L 3490 cartridge
C   TLABL = Label for this tape :
C           S Standard Label    A  ANSI Label   N = Unlabelled
C   IHOME = Homelab number in the BKINSC / BKLABS/ convention
C           101 for CERN MCarlo tapes
C   IEROR = 0 if all OK , = 1 if NOT an official ALEPH tape
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
      SAVE
      INTEGER BKINCA
      EXTERNAL CHAINT
      CHARACTER*6 NAMT,NAMO
      CHARACTER NAMLA*8,TNAT*1,TLABL*1,CT*1,CHAINT*4,TAPKA*4,TAPRE*2
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IEROR=1
      IHOME=0
      NAMLA=' '
      TLABL=' '
      TNAT=' '
      JBTHO=IW(NAMIND('BTHO'))
      IF (JBTHO.LE.0) GO TO 999
      NAMO=NAMT
      CALL CLTOU(NAMO)
C The last 4 characters must be integer numbers :
      DO 15 I=3,6
         CT=NAMO(I:I)
         IF (ICHAR(CT).LT.ICHAR('0')) GO TO 999
         IF (ICHAR(CT).GT.ICHAR('9')) GO TO 999
 15   CONTINUE
      TAPRE=NAMO(1:2)
      ITIN=BKINCA(NAMO(3:6))
C Look for this tape in bank  'BTHO' :
      DO 100 IK=1,LROWS(JBTHO)
         KBTHO=KROW(JBTHO,IK)
         TAPKA=CHAINT(IW(KBTHO+JBTHTA))
         IF (TAPKA(1:2).NE.TAPRE) GO TO 100
         IF (ITIN.LT.IW(KBTHO+JBTHFI))  GO TO 100
         IF (ITIN.GT.IW(KBTHO+JBTHLA))  GO TO 100
         CALL ALSTIN(IW(KBTHO+JBTHNL),2,NAMLA)
         TNAT=TAPKA(3:3)
         TLABL=TAPKA(4:4)
         IHOME=IW(KBTHO+JBTHHO)
C Florida DLT copies of LEP1 data are on AR2000 -> AR2999
          IF (TAPRE.EQ.'AR'.AND.(ITIN.GE.2000.AND.ITIN.LT.3000))
     +        IHOME=6
         IEROR=0
         GO TO 999
 100  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE BKTASK(IPRV,IER)
C ----------------------------------------------------------------------
CKEY STEER
C! Find tasks to be performed  , from bank 'BTSK'
C  Called from BKINAL
C  Calls ACARD1,ACARD2,BKINCA,ALSTIN                from ALEPHLIB
C  Calls BKKYIN                                     from BOOKLIB
C  Calls CLTOU                                      from KERNLIB
C  J. Boucrot   10-May-1989
C Modified: Helge Meinhard  10-Sep-1992   UNIX version
C  Input : bank 'BTSK' , read from input BOS data cards ( Mandatory ! )
C                this data card defines the tasks to be performed ;
C                either built by the exec , or provided by the user
C  Output :
C IPRV = authorization level to perform the required task
C IER  = 0 if all OK , = 2 if no task defined
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      INTEGER ACARD1,ACARD2,BKINCA
      CHARACTER PARM1*10,PARM2*10,TSKFL*4,CTSFL*3,PARM60*60
      CHARACTER SPAR*80,MSG1*80,MSG2*80,KEY*20,PARAM*20
C ----------------------------------------------------------------------
      IER=2
      IPRV=1
      TIMNAN=TIMNAM
      TSKFL=' '
C
C Find user's login name in bank 'BUSR' :
C
      JBUSR=IW(NAMIND('BUSR'))
      IF (JBUSR.NE.0) CALL ALSTIN(IW(JBUSR+1),IW(JBUSR),USERLG)
C ---------- No upper case translation on UNIX machines ---------------
C Look for 'BNDC' card to decode the computer node name :
      JBNDC=IW(NAMIND('BNDC'))
      IF (JBNDC.NE.0) CALL ALSTIN(IW(JBNDC+1),IW(JBNDC),PRONOD)
C
C Task = ALBOOK/ALPROD/ALCOPY  : check if a data card BFOR is present :
C
      IF (IW(NAMIND('BFOR')).GT.0.OR.IW(NAMIND('BOOK')).GT.0) THEN
         IBCOPY=1
         TSKFL='COPY'
         IER=0
         GO TO 1
      ENDIF
C
C All other tasks :
C Check if the data card 'BTSK' has been read , and was provided
C with arguments :
C Exemples of Syntax :   BTSK  'SCANBOOK = n'    or 'SEAR=100'
C
      IF (ACARD1('BTSK').EQ.0) GO TO 900
      NPAR=1
      IF (ACARD2(NPAR,PARM1).EQ.0) GO TO 900
      CALL CLTOU(PARM1)
C Argument found : fill corresponding variables in /BKTSKC/
      TSKFL=PARM1(1:4)
      IF (TSKFL.EQ.'UPDA') IBUPDA=1
      IF (TSKFL.EQ.'JSMR') IBMAKJ=1
      IF (TSKFL.EQ.'COPY') IBCOPY=1
      IF (TSKFL.EQ.'RTMS') ITMSRC=1
      IF (TSKFL.EQ.'LISF') IBLIST=1
      IF (TSKFL.EQ.'SPLI') IBSPLI=1
      IF (TSKFL.EQ.'BSQL') IBKSQL=1
      IF (TSKFL(1:1).EQ.'S') THEN
         CALL BKKYIN(NPAR,IOK,KEY,PARAM)
         IF (IOK.EQ.1) IDSEAR=BKINCA(PARAM)
      ENDIF
      ICHK=IBUPDA+IBMAKJ+IBCOPY+IDSEAR+ITMSRC+IBLIST+IBSPLI+IBKSQL
      IF (ICHK.LE.0) GO TO 920
      IKEYOK=IKEYOK+1
C Set the debug flag if the data cards 'BDBG' is present :
C
 1    IF (IW(NAMIND('BDBG')).NE.0) IDEBUG=1
C Special case of  ALSOFT  tasks :
      IF (IBUPDA.GT.0.OR.ITMSRC.EQ.1.OR.IBMAKJ.EQ.1.OR.IBSPLI.EQ.1.
     +    OR.IBLIST.EQ.1.OR.IBKSQL.EQ.1) THEN
         IBKINT=0
         IBPRUS=2
         USFNAM=' '
         IPRV=8
         IER=0
         GO TO 999
      ENDIF
C
C-----------------------------------------------------------------------
C Determine if interactive dialogue or batch job :
C Look for 'BKAR' data card which tells the name of the user's BOS
C input CARDS FILE , if any  :
      IF (ACARD1('BKAR').EQ.0)  GO TO 3
      IF (ACARD2(1,PARM60).EQ.0) GO TO 3
C ---------- No upper case translation on UNIX machines ---------------
      CARDSF=PARM60(1:(LNBLNK(PARM60)))
      IND = ICFNBL(CARDSF,1,80)
      IF (IND .NE. 1) CARDSF = CARDSF(IND:)
      IND = INDEX(CARDSF,'.')
      IF (IND .NE. 0) CARDSF(IND:) = ' '
 3    CONTINUE
C Look for 'BNDC' card to decode the computer node name :
      JBNDC=IW(NAMIND('BNDC'))
      IF (JBNDC.NE.0) CALL ALSTIN(IW(JBNDC+1),IW(JBNDC),PRONOD)
C
C Don't redefine IBKINT for X11 ; define it for other modes of running
      IF (IBKINT.EQ.-1) GO TO 10
      IF (IBCOPY.EQ.0) THEN
         IBKINT=1
         IF (CARDSF.EQ.' ') IBKINT=2
         IF (IDSEAR.GT.6)   IBKINT=2
         LWRERR=LWRUSR
      ENDIF
 10   IER=0
C-----------------------------------------------------------------------
C Check if another BTSK data card was given by mistake :
 30   IF (ACARD1('BTSK').EQ.0) GO TO 999
      MSG1=' +++ BTASK +++ WARNING !!! 2 Tasks defined'//
     +     ' The second is ignored  +++'
      CALL BKMESG(MSG1,0,' ')
      IF (IBKINT.NE.0) WRITE (LWRINT,1001) MSG1
      GO TO 999
C-----------------------------------------------------------------------
C  Error message :
C No task defined for this job !
C
 900  MSG2=' +++ Error in BKTASK : no task defined for this job ++'
      IMS=0
      GO TO 950
C Unknown task defined for this job !
C
 920  MSG2=' +++ Error in BKTASK : unknown task defined ++'
      IMS=0
 950  MSG1=' +++ JOB  ABORTED +++'
      IF (IBKINT.NE.0) THEN
         WRITE (LWRINT , 1001 ) MSG1
         WRITE (LWRINT , 1001 ) MSG2
 1001    FORMAT (1X,A80)
      ENDIF
      CALL BKMESG(MSG1,IMS,MSG2)
C
 999  RETURN
      END
      SUBROUTINE BKTASP(IFAIL)
C----------------------------------------------------------------------
CKEY STEER
C! Write Informations on the TTAPES SPY at the end of UPDABOOK
C  Author J.Boucrot 20-Apr-1991
C Called from BKWSEQ                                      from BOOKLIB
C Calls AUBOS,AUBPRS,ALSTIN,BKINCA                        from ALEPHLIB
C  Output argument :
C       IFAIL = 0    IF ALL OK
C             = 1    IF SPY file cannot be opened
C             = 2    IF no room for intermediate BOS bank
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      PARAMETER ( NFATA = 20  , LBKZY = 3 )
      CHARACTER VSN*8,TAPE1*6,TAPE2*8
      CHARACTER VLOC*4,TASK*4,TAP1*4,TAP2*4,CHAR*1,TAPFR*2
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IFAIL=0
      IATT=ICHAR('A')
      IF (IBUPDA.EQ.0.AND.ITMSRC.EQ.0) GO TO 999
      IF (IW(NAMIND('NOWR')).NE.0) GO TO 999
      TASK='MOD '
      VLOC='CERN'
C OPEN and read the TTAPES SPY file :
      CALL BKOPFI(IEROR)
      IF (IEROR.NE.0) GO TO 910
C Decode the temporary 'BCAR' bank :
      JBCAR=NLINK('BCAR',1000)
      IF ( JBCAR.LE.0) GO TO 999
      NBCAR=LROWS(JBCAR)
      WRITE ( LWRDBG,1005) NBCAR
C
C Loop on all elements of this 'BCAR' bank :
C build intermediate 'BCAR' banks :
C
      DO 30 IDAR=1,NBCAR
         KBCAR=KROW(JBCAR,IDAR)
         IF (IW(KBCAR+JBCAWN).NE.100) GO TO 30
         CALL ALSTIN(IW(KBCAR+JBCAVS),JBCAVI-JBCAVS,VSN)
         CALL BKCHKT(VSN,ICERN,IMULT,IDLT,IEROR)
         IF (IEROR.NE.0) GO TO 30
C Look if intermediate bank 'BCAR' exists ; if not , book it
         NR=ICHAR(VSN(2:2))-IATT+1
         JBKAR=NLINK('BCAR',NR)
         IF (JBKAR.EQ.0) THEN
            LENKA=LMHLEN+LBCARA*NBCAR
            CALL AUBOS('BCAR',NR,LENKA,JBKAR,IGARB)
            IF (IGARB.EQ.2) GO TO 920
            IW(JBKAR+LMHCOL)=LBCARA
            IW(JBKAR+LMHROW)=0
         ENDIF
C Copy info into this bank :
         IW(JBKAR+LMHROW)=IW(JBKAR+LMHROW)+1
         NRR=LROWS(JBKAR)
         KBKAR=KROW(JBKAR,NRR)
         CALL UCOPY(IW(KBCAR+JBCAVS),IW(KBKAR+JBCAVS),LBCARA)
 30   CONTINUE
C Compress and sort these banks :
      CALL AUBPRS('BCAR')
      JNCAR=NAMIND('BCAR')+1
 40   JNCAR=IW(JNCAR-1)
      IF (JNCAR.EQ.0) GO TO 60
      NFAM=IW(JNCAR-2)
      IF (NFAM.EQ.1000) GO TO 40
      NRO=LROWS(JNCAR)
      IF (NRO.LE.1) GO TO 40
      CALL BKSORT('BCAR',NFAM,JBCAVS,IERF)
      IF (IERF.NE.0) GO TO 920
      GO TO 40
 60   CONTINUE
C-----------------------------------------------------------------------
C Now loop again on intermediate 'BCAR' banks and build 'BKZY' banks :
      JNCAR=NAMIND('BCAR')+1
 100  JNCAR=IW(JNCAR-1)
      IF (JNCAR.EQ.0) GO TO 300
      NR=IW(JNCAR-2)
      IF (NR.EQ.1000) GO TO 100
C Look if intermediate bank 'BKZY' exists ; if not , book it
      JBKZY=NLINK('BKZY',NR)
      IF (JBKZY.EQ.0) THEN
         LENZY=LMHLEN+LBKZY*NBCAR
         CALL AUBOS('BKZY',NR,LENZY,JBKZY,IGARB)
         IF (IGARB.EQ.2) GO TO 920
         IW(JBKZY+LMHCOL)=LBKZY
         IW(JBKZY+LMHROW)=0
      ENDIF
C Loop on all cartridges in this bank :
      NTAPS=LROWS(JNCAR)
      DO 200 IK=1,NTAPS
         KBCAR=KROW(JNCAR,IK)
         CALL ALSTIN(IW(KBCAR+JBCAVS),JBCAVI-JBCAVS,VSN)
C Store the current tape :
         ITAPI=BKINCA(VSN(3:6))
         ICARF=IW(KBCAR+JBCARF)
         NBKZY=LROWS(JBKZY)
         IF (NBKZY.EQ.0) THEN
            IW(JBKZY+LMHROW)=1
            KBKZY=KROW(JBKZY,1)
            IW(KBKZY+1)=ITAPI
            IW(KBKZY+2)=ITAPI
            IW(KBKZY+3)=IW(KBCAR+JBCARF)
         ELSE
            ISAME=0
            DO 120 IN=1,NBKZY
               KBKZY=KROW(JBKZY,IN)
               ICAO=IW(KBKZY+3)
               IF (ITAPI.EQ.(1+IW(KBKZY+2)).AND.ICAO.EQ.ICARF) THEN
                  IW(KBKZY+2)=ITAPI
                  ISAME=1
               ENDIF
 120        CONTINUE
            IF (ISAME.EQ.1) GO TO 130
            IW(JBKZY+LMHROW)=IW(JBKZY+LMHROW)+1
            NTZY=LROWS(JBKZY)
            KNKZY=KROW(JBKZY,NTZY)
            IW(KNKZY+1)=ITAPI
            IW(KNKZY+2)=ITAPI
            IW(KNKZY+3)=IW(KBCAR+JBCARF)
 130        CONTINUE
         ENDIF
 200  CONTINUE
      GO TO 100
C all banks processed :
 300  CONTINUE
C-----------------------------------------------------------------------
C Now edit the result on the SPY file :
      CALL AUBPRS('BKZY')
      JKZY=NAMIND('BKZY')+1
 400  JKZY=IW(JKZY-1)
      IF (JKZY.EQ.0) GO TO 500
      NKZ=LROWS(JKZY)
      IPER=IW(JKZY-2)
      INR=IATT+IPER-1
      TAPFR='A'//CHAR(INR)
      DO 350 ISZ=1,NKZ
            KZY=KROW(JKZY,ISZ)
            NT1=IW(KZY+1)
            NT2=IW(KZY+2)
            NTAP=NT2-NT1+1
            CALL BKCARI(NT1,4,TAP1)
            CALL BKCARI(NT2,4,TAP2)
            TAPE1=TAPFR//TAP1
            TAPE2=TAPFR//TAP2
            TASK='MOD '
            IF (IW(KZY+3).EQ.100)   TASK='FREE'
            IF (IW(KZY+3).EQ.10000) TASK='SCR '
          IF (IW(KZY+3).EQ.500) THEN
             WRITE ( LWRSPY,1010 ) USERLG,CDATIM,CSETIM,TASK,VLOC,NTAP,
     +                             TAPE1,TAPE2
             WRITE ( LWRDBG,1010 ) USERLG,CDATIM,CSETIM,TASK,VLOC,NTAP,
     +                             TAPE1,TAPE2
             GO TO 350
          ENDIF
            WRITE ( LWRSPY,1007) USERLG,CDATIM,CSETIM,TASK,VLOC,NTAP,
     +                           TAPE1,TAPE2
            WRITE ( LWRDBG,1007) USERLG,CDATIM,CSETIM,TASK,VLOC,NTAP,
     +                           TAPE1,TAPE2
 350  CONTINUE
      GO TO 400
 500  CONTINUE
C
      IF (ITMKOD.NE.0) THEN
         WRITE ( LWRSPY,1009) USERLG,CDATIM,CSETIM,TASK,VLOC,ITMKOD
         WRITE ( LWRDBG,1009) USERLG,CDATIM,CSETIM,TASK,VLOC,ITMKOD
      ENDIF
      IF (IBAUTO.EQ.0) PRINT 1008
      WRITE (LWRDBG,1008)
      GO TO 999
C No SPY file :
 910  IFAIL=1
      GO TO 999
C No room for intermediate bank 'BKZY' :
 920  IFAIL=2
 999  RETURN
C----------------------------------------------------------------------
 1005 FORMAT (/22X,'=== Subroutine BKTASP === Starting with ',
     +            ' NBCAR =',I9)
 1007 FORMAT (T1,A12,T14,A8,T23,A8,T32,A4,T37,A4,T46,I4,T51,
     +        'cartridges from',T67,A6,T74,'to',T78,A6,T102,'executed')
 1009 FORMAT (T1,A12,T14,A8,T23,A8,T32,A4,T37,A4,T102,
     +        'failed TMS error ',T119,I3)
 1008 FORMAT (/22X,'=== Subroutine BKTASP === File TTAPES SPY ',
     +            ' updated')
 1010 FORMAT (T1,A12,T14,A8,T23,A8,T32,A4,T37,A4,T46,I4,T51,
     +        'cartridges from',T67,A6,T74,'to',T78,A6,T86,
     +        '* Detected by ALSOFT : TAPES was NOT used !')
      END
      SUBROUTINE BKTIMC(DAYSC)
C-----------------------------------------------------------------------
C! Builds the time-dependant part of Bookkeeping filenames
CKEY ALBOOK  DSNAME TIME / INTERNAL
C  J. Boucrot       28-Sep-1988    modified  09-May-1989
C Calls DATIMH,UHTOC                                    from KERNLIB
C Calls BKTIMN                                          from ALEPHLIB
C  Output = DAYSC  11-DIGIT character name built as follows :
C     * 2 digits for the year .
C     * then a point (on VAX) or a blank ( on IBM ) as separator
C     * 3 digits for the day # ( from 1 to 365 or 366 )
C     * 5 digits for the second # in the day ( 1 to 86400 )
C-----------------------------------------------------------------------
      SAVE
C-- ALCONS ----
      REAL PI, TWOPI, PIBY2, PIBY3, PIBY4, PIBY6, PIBY8, PIBY12
      REAL RADEG, DEGRA
      REAL CLGHT, ALDEDX
      INTEGER NBITW, NBYTW, LCHAR
      PARAMETER (PI=3.141592653589)
      PARAMETER (RADEG=180./PI, DEGRA=PI/180.)
      PARAMETER (TWOPI = 2.*PI , PIBY2 = PI/2., PIBY4 = PI/4.)
      PARAMETER (PIBY6 = PI/6. , PIBY8 = PI/8.)
      PARAMETER (PIBY12= PI/12., PIBY3 = PI/3.)
      PARAMETER (CLGHT = 29.9792458, ALDEDX = 0.000307)
      PARAMETER (NBITW = 32 , NBYTW = NBITW/8 , LCHAR = 4)
       CHARACTER*8 NDD,NTT
       DIMENSION DD(2),TT(2)
       CHARACTER*11 DAYSC
C-----------------------------------------------------------------------
C Call the timing routine : for the moment being , only DATIMH returns
C the precise timing with the seconds , but in Hollerith variables ...
       CALL DATIMH(DD,TT)
       CALL UHTOC(DD,LCHAR,NDD,8)
       CALL UHTOC(TT,LCHAR,NTT,8)
C
C Extract the timing informations :
C
       READ (NDD(7:8) , '(I2)' )  IYEAR
       READ (NDD(4:5) , '(I2)' )  IMONT
       READ (NDD(1:2) , '(I2)' )  IDAY
C
       READ (NTT(1:2) , '(I2)' )  IHOUR
       READ (NTT(4:5) , '(I2)' )  IMINU
       READ (NTT(7:8) , '(I2)' )  ISEC
C
C Build the time-dependant part of the name :
C
       CALL BKTIMN(IYEAR,IMONT,IDAY,IHOUR,IMINU,ISEC,DAYSC)
C
 999   RETURN
       END
      SUBROUTINE BKTIMN(IYEAR,IMONT,IDAY,IHOUR,IMINU,ISEC,DAYSC)
C-----------------------------------------------------------------------
C! Auxiliary to BKTIMC
CKEY ALBOOK  DSNAME TIME / INTERNAL
C  J. Boucrot       28-Sep-1988    modified  15-Dec-1988
C Calls BKCARI                                          from ALEPHLIB
C  Input parameters : precise timing parameters
C     IYEAR  =  2 last digits of the year
C     IMONT  =  month number ( between 1 and 12 )
C     IDAY   =  day number in the month ( between 1 and 31)
C     IHOUR  =  hour number in the day
C     IMINU  =  minute number in the hour
C     ISEF   =  second number in the minute
C  Output = DAYSC  11-DIGIT character name built as follows :
C     * 2 digits for the year .
C     * then a point (on VAX) or a blank ( on IBM ) as separator
C     * 3 digits for the day # in the year ( from 1 to 365 or 366 )
C     * 5 digits for the second # in the day ( 1 to 86400 )
C-----------------------------------------------------------------------
       SAVE
       PARAMETER ( IFYEA=1 , ILYEA=2 , ILPOI=3 , IPDAY=4 )
       PARAMETER ( ILDAY = 6 , IPSEC = 7 , ILSEC = 11 )
       CHARACTER*1 SEPAR(3)
       CHARACTER*2 CYEAR
       CHARACTER*3 CDAY
       CHARACTER*5 CSEC
       CHARACTER*11 DAYSC
       INTEGER   JDNYE(12),JDBIS(12)
       CHARACTER*4 CHAINT
       DATA SEPAR / ' ' , '.' , '.' /
       DATA JDNYE /0,31,59,90,120,151,181,212,243,273,304,334/
       DATA JDBIS /0,31,60,91,121,152,182,213,244,274,305,335/
C-----------------------------------------------------------------------
C Year
       CALL BKCARI(IYEAR,2,CYEAR)
       DAYSC(IFYEA:ILYEA)=CYEAR
C
       INDC=2
       DAYSC(ILPOI:ILPOI)=SEPAR(INDC)
C
C Day in the year :
C
       IBISS=0
       IF (MOD(IYEAR,4).EQ.0) IBISS=1
       IF (IBISS.EQ.1) JDAY=IDAY+JDBIS(IMONT)
       IF (IBISS.EQ.0) JDAY=IDAY+JDNYE(IMONT)
       CALL BKCARI(JDAY,3,CDAY)
       DAYSC(IPDAY:ILDAY)=CDAY
C Second in the day :
       KSEC=3600*IHOUR+60*IMINU+ISEC
       CALL BKCARI(KSEC,5,CSEC)
       DAYSC(IPSEC:ILSEC)=CSEC
C
 999   RETURN
       END
      SUBROUTINE BKTLEP(NRUF,ELEP,TOLER,IOK)
C ----------------------------------------------------------------------
CKEY TOOL/USER
C! Find if run NRUF has LEP energy ELEP within tolerance TOLER
C Called from USER
C Calls BKFPER,BKPOIN                            from  BOOKLIB
C  Input arguments :
C  NRUF  =  Run NUmber
C  ELEP  = LEP energy in Gev
C  TOLER = tolerance on LEP energy ( in Gev )
C Output arguments :
C  IOK   = 1 if run OK , 0 if not
C Used banks :  'BRUC' , in which the ONLINE Logbook content is stored
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C ----------------------------------------------------------------------
      IOK=0
      MINER=NINT(1000.*TOLER)
      IF (MINER.LE.0) MINER=ITOLER
      IF (ISYEAR.EQ.1999.AND.ENGLEP.GE.200.) MINER=1000
C Find Aleph Bookkeeping period , then 'BRUC' :
      CALL BKFPER(NRUF,0,NPER)
      IF (NPER.LE.0) GO TO 999
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 999
      NRUC=LROWS(JBRUC)
      IELEP=0
      IRUN=0
      DO 25 IS=1,NRUC
         NRUN=ITABL(JBRUC,IS,JBRURN)
         IF (NRUN.NE.NRUF) GO TO 25
         IRUN=NRUN
         IELEP=ITABL(JBRUC,IS,JBRUTE)
         GO TO 30
 25   CONTINUE
 30   IF (IRUN.EQ.0.OR.IELEP.EQ.0) GO TO 999
C Run found : test LEP energy :
      IELSE=NINT(1000.*ELEP)
      IF (IABS(IELSE-IELEP).GT.MINER) GO TO 999
 50   IOK=1
C
 999  RETURN
      END
      SUBROUTINE BKTOLSET
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Redefines standard LEP energy tolerances
C  J. Boucrot 12-Sep-1997
C  Called from BKPGVAL                        from BOOKLIB
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      DATA IYEAL / 1996 /
      DATA IRL2,IRL97,ERL2  / 1000 , 500 , 1. /
      DATA IRL1, ERL1       / 250  , .25 /
      DATA IRL99,ERL99      / 2000 , 2.  /
C-----------------------------------------------------------------------
      IF (ISYEAR.LT.1989.OR.ISYEAR.GT.2001) GO TO 999
C LEP 1 Runs : standard tolerances as defined by default
      IF (ISYEAR.LT.IYEAL) THEN
         ITOLER=IRL1
         IROUND=IRL1
         EROUND=ERL1
C LEP 1.5 runs : tolerances as for LEP 2 runs:
         IF (ISYEAR.EQ.1995.AND.ILP195.EQ.0) THEN
            ITOLER=IRL2-1
            IROUND=IRL2
            EROUND=ERL2
         ENDIF
C LEP 2 Runs : tolerances to group energies by 1 GeV slices
      ELSE
         ITOLER=IRL2-1
         IROUND=IRL2
         EROUND=ERL2
         IF (ISYEAR.EQ.1997) ITOLER=IRL97-1
         IF (IENV97.EQ.1) THEN
            ITOLER=ITOL97
            IROUND=ITOL97
            EROUND=TOLE97
         ENDIF
         IF (ISYEAR.EQ.1999) THEN
            ITOLER=IRL99
            IROUND=IRL99
            EROUND=ERL99
         ENDIF
      ENDIF
C
 999  RETURN
      END
      SUBROUTINE BKUNFI(TAPE)
C ----------------------------------------------------------------------
C! Gets input tape name from 'FILI' card
CKEY ALBOOK FILE / INTERNAL
C  J. Boucrot        01-Dec-1994
C  Called from BKFTCA                           from BOOKLIB
C  Calls BKEXFI                                 from BOOKLIB
C  Calls ALSTIN                                 from ALEPHLIB
C  Input bank needed :  'FILI'  ( from BOS data cards )
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      COMMON / TAPEFIL / IFILTA
      INTEGER BKINCA
      CHARACTER TAPE*8,CARDF*80,SUBF*80,FILEX*9
C ----------------------------------------------------------------------
C Check if there is a 'FILI' data card
C
      TAPE=' '
      CARDF=' '
      SUBF=' '
      FILEX=' '
      JFILI=IW(NAMIND('FILI'))
      IF (JFILI.EQ.0) GO TO 999
      NDAFI=IW(JFILI)
      IF (NDAFI.LE.0) GO TO 999
C Translate into character string :
      CALL ALSTIN(IW(JFILI+1),NDAFI,CARDF)
      CALL CLTOU(CARDF)
      LN=LNBLNK(CARDF)
      IF (LN.EQ.0) GO TO 999
C
C Is it a 'FILI' card with 'CART ABXXXX.YY' syntax ?
C
      ICART=INDEX(CARDF,'CART ')
      IF (ICART.EQ.0) GO TO 100
      IDSL=INDEX(CARDF,'.SL ')
      IF (IDSL.EQ.0) IDSL=INDEX(CARDF,'.AL ')
      IF (IDSL.EQ.0) IDSL=INDEX(CARDF,'.UL ')
      IF (IDSL.EQ.0) IDSL=INDEX(CARDF,'.NL ')
      IF (IDSL.EQ.0) GO TO 999
      SUBF=CARDF(ICART+4:IDSL-1)
      LL=LNBLNK(SUBF)
      ITAP=ICFNBL(SUBF,1,LL)
      IF (ITAP.LE.0) GO TO 999
      IDOT=INDEX(SUBF,'.')
      IF (IDOT.LE.0) GO TO 999
      TAPE=SUBF(ITAP:IDOT-1)
      FILEX=SUBF(IDOT+1:LL)
      IFILTA=BKINCA(FILEX)
      IF (IFILTA.LE.MAXBD) THEN
         CALL BKEXFI(3,TAPE(1:6),IFILTA,IER)
         IF (IER.EQ.0) TAPE=AXBDFS
      ENDIF
      GO TO 999
C
C Is it a 'FILI' card with 'ABXXXXYY.EDIR' syntax ?
C
 100  IEDIR=INDEX(CARDF,'.EDIR')
      IF (IEDIR.EQ.0) GO TO 999
      LSUB=IEDIR-1
      SUBF(1:)=CARDF(1:LSUB)
      ICUT=0
      ISUB=LNBLNK(SUBF)
      ISLA=INDEXB(SUBF,'/')
      IF (ISLA.GT.0) THEN
         ICUT=ISLA+1
         GO TO 110
      ENDIF
      IDDO=INDEXB(SUBF,':')
      IF (IDDO.GT.0) THEN
         ICUT=IDDO+1
      ENDIF
 110  IF (ICUT.EQ.0) GO TO 999
      ICONT=ISUB-ICUT
      IF(ICONT.GT.8) GO TO 999
      TAPE(1:ICONT)=SUBF(ICUT:ISUB)
C
 999  RETURN
      END
      SUBROUTINE BKUNXF
C-----------------------------------------------------------------------
CKEY STEER
C! Initialisation of alsoft UNIX file pathnames ( prod or test )
C  J. Boucrot  05-Oct-1995
C  Completely rewritten 14-Dec-1998 for afs
C  Called from BKUPDF or BKRTMS                 from BOOKLIB
C  Calls GETENV                                 from ALEPHLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      SAVE
      CHARACTER*18 PR_STAT,PR_RQF,PR_TEMP,TST_STAT,TST_RQF,TST_TEMP
      CHARACTER*18 PR_REFR,TST_REFR,PR_FILEL,TST_FILEL
      CHARACTER  FIDEF*80,NAMFE*20,MAIND*30
      DATA NAMFE / 'filestop.errorfor   ' /
      DATA  PR_STAT  / '/prod/status/     ' /
      DATA  PR_RQF   / '/prod/rqfiles/    ' /
      DATA  PR_TEMP  / '/prod/temp/       ' /
      DATA  PR_REFR  / '/prod/references/ ' /
      DATA  PR_FILEL  / '/prod/filelist/  ' /
      DATA  TST_STAT / '/test/status/     ' /
      DATA  TST_RQF  / '/test/rqfiles/    ' /
      DATA  TST_TEMP / '/test/temp/       ' /
      DATA  TST_REFR / '/test/references/ ' /
      DATA  TST_FILEL / '/test/filelist/  ' /
C-----------------------------------------------------------------------
      MAIND=' '
      CALL GETENV('HOME',MAIND)
      LMD=LNBLNK(MAIND)
C
C Check if data card 'BTST' is present : if yes , it's a test run
C if not , it's a production run .
C
      IBTST=IW(NAMIND('BTST'))
      IF (IBTST.EQ.0) THEN
         ALS_STAT=MAIND(:LMD)//PR_STAT
         ALS_RQF =MAIND(:LMD)//PR_RQF
         ALS_TEMP=MAIND(:LMD)//PR_TEMP
         ALS_REFR=MAIND(:LMD)//PR_REFR
         ALS_FILEL=MAIND(:LMD)//PR_FILEL
      ELSE
         ALS_STAT=MAIND(:LMD)//TST_STAT
         ALS_RQF =MAIND(:LMD)//TST_RQF
         ALS_TEMP=MAIND(:LMD)//TST_TEMP
         ALS_REFR=MAIND(:LMD)//TST_REFR
         ALS_FILEL=MAIND(:LMD)//TST_FILEL
      ENDIF
      ILSTAT=LNBLNK(ALS_STAT)
      ILERQF=LNBLNK(ALS_RQF)
      ILTEMP=LNBLNK(ALS_TEMP)
      ILREFR=LNBLNK(ALS_REFR)
      ILFILEL=LNBLNK(ALS_FILEL)
C
C Remove the filestop file , if any , when starting an UPDABOOK job :
C
      IF (IBUPDA.GT.0) THEN
         FIDEF=' '
         FIDEF=ALS_STAT(1:ILSTAT)//NAMFE(1:LNBLNK(NAMFE))
         FIDEF=FIDEF(1:LNBLNK(FIDEF))
         CALL SYSTEM(' rm -f '//FIDEF)
      ENDIF
 999  RETURN
      END
      SUBROUTINE BKUPBB(IERB)
C-----------------------------------------------------------------------
CKEY STEER
C! Updates banks from reference files
C  J. Boucrot              19-Mar-1996
C Called from BKUPDF or BKSPLI                         from BOOKLIB
C Calls BDROP,BGARB                                    from BOS77
C Calls AUBOS                                          from ALEPHLIB
C  Output argument :
C   IERB  = 0 if all OK
C         = 1 if no room for banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-----------------------------------------------------------------------
      IERB=0
C
C If a bank 'RTHO' was read in BKADRI , replace 'BTHO' by it :
C
      IF (IBUPDA.EQ.0.AND.ITMSRC.EQ.0) GO TO 100
      JRTHO=NLINK('RTHO',1)
      IF (JRTHO.GT.0) THEN
         CALL BDROP(IW,'BTHO')
         CALL BGARB(IW)
         NWTHO=IW(JRTHO)
         CALL AUBOS('BTHO',1,NWTHO,JBTHO,IGARB)
         IF (IGARB.EQ.2) GO TO 901
         CALL UCOPY(IW(JRTHO+1),IW(JBTHO+1),NWTHO)
      ENDIF
C
C If a bank 'RPHY' was read in BKADPY , replace 'BPHY' by it :
C
 100  IF (IBUPDA.EQ.0) GO TO 200
      JRPHY=NLINK('RPHY',1)
      IF (JRPHY.GT.0) THEN
         CALL BDROP(IW,'BPHY')
         CALL BGARB(IW)
         NWPHY=IW(JRPHY)
         CALL AUBOS('BPHY',1,NWPHY,JBPHY,IGARB)
         IF (IGARB.EQ.2) GO TO 901
         CALL UCOPY(IW(JRPHY+1),IW(JBPHY+1),NWPHY)
      ENDIF
C
C If a bank 'RDAD' was read in BKADSD , replace 'BDAD' by it :
C
 200  IF (IBUPDA.EQ.0.AND.IBSPLI.EQ.0) GO TO 999
      JRDAD=NLINK('RDAD',1)
      IF (JRDAD.GT.0) THEN
         CALL BDROP(IW,'BDAD')
         CALL BGARB(IW)
         NWDAD=IW(JRDAD)
         CALL AUBOS('BDAD',1,NWDAD,JBDAD,IGARB)
         IF (IGARB.EQ.2) GO TO 901
         CALL UCOPY(IW(JRDAD+1),IW(JBDAD+1),NWDAD)
      ENDIF
      GO TO 999
C No room for banks :
 901  IERB=1
C
 999  RETURN
      END
      SUBROUTINE BKUPDA(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Processes all "Request files" received from ALSOFT reader
C   On first pass ( IBUPDA=1) all files but BSYST/BCOP are processed
C   On second pass , all files with name    BSYST/BCOP are processed
C J. Boucrot  07-12-1988
C UNIX Version 06-Oct-1995
C Modification 23-03-1998 for new BCOP strategy
C Called from BKUPDF                                    from BOOKLIB
C Calls BREAD,BUNIT                                     from BOSLIB
C Calls BKOFJU,BKBOKD,BKEXAA,BKEXAB,BKMODD,BKSYSD       from BOOKLIB
C Calls AOPEN,ACLOSE                                    from ALEPHLIB
C Calls EPCLOS,EPDROP                                   from GENLIB
C  Output argument :
C   IER = 0  all OK
C   IER = 1  unable to open one of the Request Files
C   IER = 2  error duuring closing of file after reading
C   IER = 3  no room to book/extend BOS banks during updating
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      DIMENSION BLIN(10000)
      CHARACTER LTXT*2,FIL3*3,FORM*4,NAME*25
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER*80 MVM,MESG,INFO,FINA
      LOGICAL PASSN
      PASSN(NAME)=NAME(2:4).EQ.'SYS'.OR.NAME(1:4).EQ.'BCOP'
C-----------------------------------------------------------------------
      INFO=' '
      MESG=' '
C Define the 'T' list as containing all Bookkeeping banks
      CALL BLIST(IW,'T=','0')
      CALL BLIST(IW,'T=',LISBKB)
      IF (IBUPDA.EQ.1) WRITE (LWRDBG,1100)
      IF (IBUPDA.EQ.1.AND.IBAUTO.EQ.0) PRINT 1100
C
C Loop on all new Request files :
C
      DO 100 NFIL=1,NFILRQ
         IOPF=0
C On Pass 1 , all files but 'BSYS' or 'BCOP'   are processed :
         IF (IBUPDA.EQ.1.AND.PASSN(NAMRQF(NFIL)))       GO TO 100
C On Pass 2 , ONLY files WITH 'BSYS' or 'BCOP' are processed :
         IF (IBUPDA.EQ.2.AND..NOT.PASSN(NAMRQF(NFIL)))  GO TO 100
         FORM='TEXT'
C Decode the nature of this file ( from letter 2,3,4 of the filename ) :
         FIL3=NAMRQF(NFIL)(2:4)
C Open the current file on LECTXT:
         IF (FORM.EQ.'TEXT') THEN
               FINA=' '
               FINA=ALS_RQF(1:ILERQF)//NAMRQF(NFIL)
               FINA=FINA(1:LNBLNK(FINA))
               OPEN ( LECTXT , FILE = FINA , STATUS = 'OLD' ,
     +                ACCESS = 'SEQUENTIAL' , FORM= 'FORMATTED' )
               IOPF=1
               IF (FIL3.EQ.'BOK') CALL BUNIT(LECTXT,FORM,80)
               LUNIN=LECTXT
         ENDIF
         ICURFI=NFIL
C
C Read the BOS banks from the file ( if the file contains BOS banks ! )
C
 10      IF (FIL3.EQ.'BOK') CALL BREAD(IW,LUNIN,'R',*10,*90)
C
C Branch according to the nature of the Reques File :
C Files sent by FALCON with JSUM,JEDS,LUMI,SLUM banks :
         IF (NAMRQF(NFIL)(1:5).EQ.'LBOKL') THEN
            CALL BKOFJU(2,IER)
            IF (IER.NE.0) GO TO 930
            GO TO 80
         ENDIF
C  Files from data production jobs :
C
         IF (FIL3.EQ.'BOK') THEN
            CALL BKBOKD(IERD)
            IF (IERD.NE.0) GO TO 930
C
C   Online Logbook , Luminosity update , KINGAL directory ,
C   Falcon I run summary , Data Run_quality , Scratch of datasets :
C
         ELSEIF (FIL3.EQ.'MOD'.OR.FIL3.EQ.'SCR') THEN
            IERM=0
C All other 'MOD' or 'SCR' files :
            IF (INDEX(NAMRQF(NFIL),'JSUMR').NE.0) THEN
               CALL BKMODD(1,IERM)
            ELSE
               CALL BKMODD(0,IERM)
            ENDIF
 20         IF (IERM.EQ.1) GO TO 930
            GO TO 80
C
C   Files from ALPROD / ALCOPY / ALBOOK concerning cartridges :
C
         ELSEIF (FIL3.EQ.'SYS') THEN
            IERS=0
            CALL BKSYSD(IERS)
            IF (IERS.EQ.1) GO TO 930
         ELSEIF (FIL3.EQ.'COP') THEN
            CALL BKREDCOP(IERC)
            IF (IERC.EQ.1) GO TO 910
         ENDIF
 80      WRITE  ( INFO(1:30) , '(A30)' )  NAMRQF(NFIL)
         WRITE  ( LWRFLI , '(A80)' )  INFO
C
C   Now close/rewind the file and go to the next one , if any  :
C
 90      IF (FORM.EQ.'EPIO') THEN
            CALL EPCLOS(LECRQF,BLIN,IERC)
            CALL EPDROP(LECRQF,IERD)
            IF (IERC+IERD.NE.0) GO TO 920
            CLOSE(LECRQF)
         ELSE
            IF (INDEX(NAMRQF(NFIL),'JSUMR').NE.0) THEN
               CALL ACLOSE(LECCAR,IERC)
            ELSE
               REWIND(LECTXT)
               IF (IOPF.EQ.1) CLOSE ( LECTXT )
            ENDIF
         ENDIF
C
 100  CONTINUE
      IER=0
      WRITE (LWRDBG,1101) IBUPDA
      IF (IBAUTO.EQ.0) PRINT 1101,IBUPDA
      GO TO 999
C-----------------------------------------------------------------------
C Processing of errors :
C
 910  IER=1
      MESG=' ++ Error in BKUPDA : unable'//
     +     ' to open a Request file'
      LM=LNBLNK(MESG)
      CALL BKMESG(NAMRQF(NFIL),NFIL,MESG(1:LM))
       GO TO 999
 920  IER=2
      MESG=' ++ Error in BKUPDA : unable'//
     +     ' to close a Request file'
      LM=LNBLNK(MESG)
      CALL BKMESG(NAMRQF(NFIL),NFIL,MESG(1:LM))
      GO TO 999
 930  IER=3
      MESG=' ++ Fatal Error in BKUPDA : No room'//
     +     ' to book banks for Request file'
      LM=LNBLNK(MESG)
      CALL BKMESG(NAMRQF(NFIL),NFIL,MESG(1:LM))
C
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (/22X,'=== BKUPDA ===   : Start processing',
     +        ' all the Request Files')
 1101 FORMAT (/22X,'=== BKUPDA ===   : End of processing',
     +        ' for pass ',I6/)
      END
      SUBROUTINE BKUPDF(IER)
C-----------------------------------------------------------------------
CKEY UPDATE FILPROC
C! Steering for the Updating of the ALEBOOK Database on CERNVM
C J. Boucrot  07-12-1988  - Modified many times since
C UNIX version : 05-Oct-1995
C Called from BKDOAL                                      from BOOKLIB
C Calls BKRMCP,BKINTI,BKINRQ,BKSTLO,BKREAK,BKPRLI,BKNEWP  from BOOKLIB
C Calls BKBPLI,BKBYEA,BKUPDA,BKCLMC,BKCLEA,BKEXNR,BKBDFS  from BOOKLIB
C Calls BKBDAT,BKAATC,BKLUFI,PRLASR,BKUTMS,BKAALO,BKBMCL  from BOOKLIB
C Calls BKVEHO,BKBRK7,BKMBYT,BKVLOC,BKRQFV,BKERRF,BKBSCL  from BOOKLIB
C Calls BKUNXF,BKUPBB                                     from BOOKLIB
C Calls AUBOS                                             from ALEPHLIB
C Calls BDROP,BGARB,BKFMT                                 from BOSLIB
C Calls VMCMS                                             from GENLIB
C  Output argument :
C  IER >= 1 if any error happened ; = 0 if all OK
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      SAVE
      CHARACTER BLA*40,INFO*80,MSG*80
      PARAMETER ( NCOPR = 100 )
      CHARACTER*6 COPYTODO,COPYDONE,COPYTP
      COMMON / REDCOPS / COPYTODO(NCOPR),COPYDONE(NCOPR),COPYTP(NCOPR)
      COMMON / IREDCOP / NCOPYOK,NTOCOPY,NFITODO(NCOPR)
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER*80  UPDBGOUT,RECFLPR,UPDOUT,NOUPDTOD,FINA,FIDEF
      DATA BLA / 'Files successfully processed by UPDABOOK' /
C-----------------------------------------------------------------------
      IER=0
      IF (IW(NAMIND('BAUT')).GT.0) IBAUTO=1
      IF (IBUPDA.GT.2) GO TO 999
      IF (IBUPDA.EQ.2) GO TO 10
C-----------------------------------------------------------------------
C General initialisations on first pass :
C
       UPDBGOUT=' '
       UPDBGOUT=ALS_STAT(1:ILSTAT)//'updabook.debugout'
       UPDBGOUT=UPDBGOUT(1:LNBLNK(UPDBGOUT))
       RECFLPR =' '
       RECFLPR =ALS_STAT(1:ILSTAT)//'reqfiles.procok'
       RECFLPR =RECFLPR(1:LNBLNK(RECFLPR))
       CALL SYSTEM(' rm -f '//UPDBGOUT)
       CALL SYSTEM(' rm -f '//RECFLPR)
       NOUPDTOD=' '
       NOUPDTOD=ALS_STAT(1:ILSTAT)//'noupdate_today'
       NOUPDTOD=NOUPDTOD(1:LNBLNK(NOUPDTOD))
       CALL SYSTEM(' rm -f '//NOUPDTOD)
       FINA=' '
       FINA=ALS_TEMP(1:ILTEMP)//'rawlist.update'
       FINA=FINA(1:LNBLNK(FINA))
       CALL SYSTEM(' rm -f '//FINA)
       FIDEF=' '
       FIDEF=ALS_TEMP(1:ILTEMP)//'ttapes.spyadd'
       FIDEF=FIDEF(1:LNBLNK(FIDEF))
       CALL SYSTEM(' rm -f '//FIDEF)
      FIDEF=' '
      FIDEF=ALS_TEMP(1:ILTEMP)//'dbas.bank'
      FIDEF=FIDEF(1:LNBLNK(FIDEF))
      CALL SYSTEM('rm -f '//FIDEF)
C Open the output debug file :
       OPEN ( LWRDBG , FILE = UPDBGOUT , STATUS = 'NEW' , ERR = 901 )
C Open the no_update file :
       OPEN ( LWRRQU , FILE = NOUPDTOD , STATUS = 'NEW' , ERR = 901 )
C If 'BAUT' asked , put the standard output on UPDOUT :
       IF (IBAUTO.NE.0) THEN
          UPDOUT=' '
          UPDOUT=ALS_TEMP(1:ILTEMP)//'updabook.output'
          UPDOUT=UPDOUT(1:LNBLNK(UPDOUT))
          CALL SYSTEM(' rm -f '//UPDOUT)
          OPEN ( IW(6)  , FILE = UPDOUT , STATUS = 'NEW' , ERR = 901 )
       ENDIF
C
C If banks 'RPHY' or 'RDAD' or 'RTHO' were read in BKADMI , update the "
C
      CALL BKUPBB(IERB)
      IF (IERB.NE.0) GO TO 901
C
C Read the files created by the exec to transmit the time of the old DBA
C and the timing of the write access to the Bookkeep disk :
C
      CALL BKINTI(IER)
      IF (IER.NE.0) GO TO 901
C
C Read the file created by the exec to transmit the Request file names :
C check which files are really new and store their names in / BK
C
      CALL BKINRQ(IER)
C
      IF (NFILRQ.LE.0) GO TO 950
      IF (IER.NE.0) GO TO 902
C
C Open the file containing the list of successfully processed Request fi
C
       OPEN ( LWRFLI , FILE = RECFLPR  , STATUS = 'NEW' , ERR = 901 )
      INFO=BLA//' on '//CDATIM//' '//CSETIM
      WRITE ( LWRFLI , '(A80)' ) INFO
C
C  'BDFS' and 'BOFS' banks must be found in the database before 1st pass
C
      IF (IW(NAMIND('BDFS')).EQ.0) GO TO 901
C Save the TMS locations from 'BDFS' into temporary bank 'BLOT' :
      CALL BKSTLO(IER)
      IF (IER.NE.0) GO TO 902
C
C Read the LISTE files on ALSOFT 192 and store the corresponding banks :
C
C KINGENER LISTE for KINGAL codes and RANMAR seeds per labs :
      CALL BKREAK(IER)
      IF (IER.NE.0) GO TO 902
C PROCESS LISTE for all various processings and reprocessings :
      CALL BKPRLI(IER)
      IF (IER.NE.0) GO TO 902
C PERIODS LISTE for all periods of data taking :
      CALL BKNEWP(IER)
      IF (IER.NE.0) GO TO 902
C PARTICLE LISTE for all particles codes for MC productions :
      CALL BKBPLI(IER)
      IF (IER.NE.0) GO TO 902
C RUNYEAR LISTE for all years and run number range definitions :
      CALL BKBYEA(IER)
      IF (IER.NE.0) GO TO 902
C
C Read MCarlo 1997 description file
C
      CALL BKMC97(IER)
      IF (IER.NE.0) GO TO 902
C-----------------------------------------------------------------------
C Process all the Request files accepted in BKINRQ for this pass :
C
 10   CALL BKUPDA(IER)
      IF (IER.NE.0) GO TO 903
      IF (NBDFDO.EQ.NBDFOL) GO TO 15
      CALL BGARB(IW)
      NBDFOL=NBDFDO
C
 15   IF (IBUPDA.NE.2) GO TO 800
C-----------------------------------------------------------------------
C END of second pass ; general cleanup and updating before saving :
C
C Cleanup all scratched datasets :
C Systematic checks for production jobs only
      IF (IW(NAMIND('BTST')).GT.0) GO TO 16
      CALL BKCLMC(IER)
      IF (IER.NE.0) GO TO 904
C Clean up all copies of Master datasets :
C       CALL BKCLMDAT(IERL)
      IF (IERL.NE.0) GO TO 904
 16   CONTINUE
      IERC=0
      CALL BKCLEA(IERC)
      IF (IERC.NE.0) GO TO 905
C
C The 'BDFS' and 'BOFS' banks must be updated :
C
      CALL BKMCDA(NCHDA,NCHMC)
      IF (NCHDA.GT.0) THEN
         CALL BKBDFS(1,IER)
         IF (IER.NE.0) GO TO 904
C          CALL BKDLTMAS(1,IER)
C          IF (IER.NE.0) GO TO 904
      ENDIF
      IF (NCHMC.GT.0) THEN
         CALL BKBDFS(2,IER)
         IF (IER.NE.0) GO TO 904
C          CALL BKDLTMAS(2,IER)
C          IF (IER.NE.0) GO TO 904
      ENDIF
C Verify integrity ans consistency of master banks:
      CALL BKVEFN(IERFN)
      IF (IERFN.NE.0) GO TO 904
      CALL BKVERBP(IERBP)
      IF (IERBP.NE.0) GO TO 904
C store the timing of the disk access in 'BDAT' :
      IERD=0
      CALL BKBDAT(IERD)
      IF (IERD.NE.0) GO TO 904
      IERR=0
C Check if all RAW data are correctly stored in 'BDFS' for the current y
C and for 'PERF' and 'MAYB' runs :
      CALL BKAATC(0,1)
C build the new  RLUM and LFIL banks :
      CALL BKLUFI(IERR)
      IF (IERR.GE.2) GO TO 904
C Printout of the last runs from this update :
      CALL PRLASR(LWRDBG,2)
C Update the Aleph TMS database with all changes from this run :
      CALL BKUTMS(ITMS)
C Update the locations of 'AA' tapes :
      CALL BKAALO(IER)
      IF (IER.NE.0) GO TO 909
C Create the bank 'BMCL' for MCarlo statistics for SCANBOOK :
      IF (NCHDA+NCHMC.GT.0) THEN
         CALL BKBMCL(IER)
         IF (IER.NE.0) GO TO 909
         CALL BKBSCL(IER)
         IF (IER.NE.0) GO TO 909
      ENDIF
C Call the routine which checks the Homelabs copies of Real data :
      CALL BKVEHO(1,1,IERV)
      IF (IERV.NE.0) GO TO 909
C Create the bank 'BRK7' and write it on file BRK7FILE UPDATE :
      IF (NCHDA.EQ.0) GO TO 17
      CALL BKBRK7(IER1)
      IF (IER1.NE.0) GO TO 909
C Call the routine which builds the file BKMBYT :
 17   IF ((NCHDA+NCHMC+NCOPYOK+NTOCOPY).GT.0) THEN
         CALL BKMBYT(IER)
         IF (IER.EQ.1) GO TO 909
      ENDIF
C Once a week , crosscheck the SCANBOOK tape locations vs TMS locations
      CALL BKVLOC(IER)
      IF (IER.NE.0) GO TO 909
C Update the file summarising the KSEC files:
      IF (NCHMC.GT.0) THEN
          CALL BKRKSEIN(IERK)
          IF (IERK.EQ.1) GO TO 909
      ENDIF
 20   IF (NMODIF.EQ.0) GO TO 950
       CALL SYSTEM(' rm -f '//NOUPDTOD)
      CALL BKWSBOS('Updabook')
C
 800  IBUPDA=IBUPDA+1
      GO TO 999
C-----------------------------------------------------------------------
C Error handling : give an appropriate STOP code # which will be treated
C accordingly by the Exec :
C
 901  CALL BKERRF('UPDABOOK','BKUPDF',101)
      STOP 101
C
 902  IF (IER.EQ.1) GO TO 999
      CALL BKERRF('UPDABOOK','BKUPDF',102)
      STOP 102
C
 903  CALL BKERRF('UPDABOOK','BKUPDF',103)
      STOP 103
C
 904  CALL BKERRF('UPDABOOK','BKUPDF',104)
      STOP 104
C
 905  CALL BKERRF('UPDABOOK','BKUPDF',105)
      STOP 105
C
 909  CALL BKERRF('UPDABOOK','BKUPDF',109)
      STOP 109
C
 950  CALL BKERRF('UPDABOOK','BKUPDF',150)
      STOP 150
C
 999  RETURN
      END
      SUBROUTINE BKUPLE(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads special file of LEP ENERGY Updates
C  stores informations in bank 'BRUC'
C  J. Boucrot  29-Mar-1990   - Modified 15-May-1990 for LEP fills
C New mod 16-jun-1995 for new file format
C  Called from BKMODD
C  Calls BKPOIN,BKELEP                             from BOOKLIB
C  Calls AUBOS                                       from ALEPHLIB
C  Output arguments :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER INFO*132
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      INOLU=0
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 900
      LBP=LROWS(JBPER)
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 900
      KBLAS=KROW(JBLAS,1)
      MRUVN=-1
      NRULEP=IW(KBLAS+JBLALE)
      NPERS=0
      JBPER=IW(NAMIND('BPER'))
      IF (JBPER.GT.0) NPERS=LROWS(JBPER)
C the first record was already read in BKMODD :
      IREC=1
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C-----------------------------------------------------------------------
C Read the input file :
C
 5    READ ( LECTXT, '(A132)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
C This line contains LEP Energy updates for one run
      READ ( INFO , 1002 ) IRUN,LFILL,EBELU
      IBELU=NINT(2.*EBELU)
C Don't  accept weird energies :
      IF (IBELU.LE.50000.OR.IBELU.GT.250000) THEN
         WRITE ( LWRDBG,1200) NRUN,IBELU
         GO TO 5
      ENDIF
      WRITE ( LWRDBG , 1102 ) IRUN,LFILL,IBELU
C Find the current run IN BANK BRUC :
      CALL BKELEP(IRUN,EL,IFILL,BM,IDE,NEV,KBRUC)
      IF (KBRUC.LE.0) GO TO 5
      IW(KBRUC+JBRUTE)=IBELU
      IW(KBRUC+JBRUFL)=1
      IF (IFILL.NE.LFILL) THEN
         WRITE (LWRDBG,1105) LFILL,IFILL
         IW(KBRUC+JBRULF)=LFILL
      ENDIF
      MRUVN=MAX0(IRUN,MRUVN)
      WRITE ( LWRDBG , 1103 ) IRUN,IBELU,MRUVN
      NMODIF=NMODIF+1
      LENBOK=LENBOK+1
      INOLU=INOLU+1
C
      GO TO 5
C-----------------------------------------------------------------------
C Update last verified run flag , if necessary :
 800  CONTINUE
      IF (MRUVN.GT.0.AND.NRULEP.GT.0.AND.MRUVN.GT.NRULEP) THEN
         IW(KBLAS+JBLALE)=MRUVN
         WRITE ( LWRDBG , 1104 ) MRUVN
      ENDIF
C If any modif done , book bank 'BADB' to trigger BKLUFI execution :
      IF (INOLU.LE.0) GO TO 999
      CALL AUBOS('BADB',1,0,JBADB,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      GO TO 999
C
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1002 FORMAT (1X,I5,4X,I4,4X,F9.2)
 1100 FORMAT (/2X,'=== Subroutine BKUPLE ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1102 FORMAT (7X,'+++ BKUPLE Update LEP energy : RUN,fill,Mev =',3I8)
 1103 FORMAT (14X,'+++ BKUPLE LEP energy updated , RUN  = ',3I9)
 1104 FORMAT (11X,'+++ BKUPLE NRULEP updated (LEP energy) :',I6)
 1105 FORMAT (21X,'>>> BKUPLE Modif LFILL new , old =',2I6)
 1200 FORMAT (21X,'>>> BKUPLE ERROR on LEP Energy : NRUN,ENERGY =',2I6)
      END
      SUBROUTINE BKUPPG(INFI)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads special file of Physics Groups RUN_QUALITY Updates
C  stores informations in bank 'BRUC'
C  J. Boucrot  04-Apr-1991
C  Modified 18-Jul-1997 for new LEP II PHYS Groups
C  Called from BKMODD
C  Calls BKELEP                                    from BOOKLIB
C  Calls BTEST,IBSET,IBCLR,ICHAR                   from KERNLIB
C  Calls BKINCA                                    from ALEPHLIB
C Input argument :
C  INFI = first line on input file (contains Group keyword)
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      SAVE
      PARAMETER ( NTK = 12 )
      INTEGER BKINCA,LIRUN(NTK)
      LOGICAL BTEST
      CHARACTER*(*) INFI
      CHARACTER INFO*132,LASCA*4,CC*1,RURU*6
      CHARACTER*8 MODST(2)
      DATA MODST  / 'ACCEPTED' , 'REJECTED' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      ILINE=1
      IGROU=0
      ISTRU=-1
      IMORU=0
      WRITE (LWRDBG,1001) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1001,ICURFI,NAMRQF(ICURFI)
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 999
      KBLAS=KROW(JBLAS,1)
      LASRO=IW(KBLAS+JBLALO)
      IFIRO=LISLFI(1)
C
C Find the Physics Group :
C Example of Syntax of first line : Physics Tools Group EW
C
      IGRR=0
      DO 5 IK=1,NGROUF
         IF (INDEX(INFI,KEYWPH(IK)).NE.0) THEN
            IGROU=IK
            IGRR=IK
            GO TO 8
         ENDIF
 5    CONTINUE
C Unknown Group -> QUIT
 8    IF (IGRR.EQ.0) THEN
         WRITE ( LWRDBG,1999 )
         IF (IBAUTO.EQ.0) PRINT 1999
         GO TO 999
      ENDIF
C
C Read the input file :
C
 10   READ ( LECTXT, '(A132)' , END=800 , ERR=999 ) INFO
      CALL CLTOU(INFO)
      ILINE=ILINE+1
      IF (INDEX(INFO,'===').NE.0) GO TO 10
      IF (INDEX(INFO,'***').NE.0) GO TO 10
      IF (INFO.EQ.' ') GO TO 10
      IF (INDEX(INFO,'RUNS').EQ.0) GO TO 15
      IF (INDEX(INFO,'SRUN').GT.0) GO TO 15
C Find which status ( Accepted or Rejected ) for the following runs :
C Example of syntax of line: Runs Accepted
      IF (INDEX(INFO,MODST(1)).GT.0)  ISTRU=1
      IF (INDEX(INFO,MODST(2)).GT.0)  ISTRU=2
      WRITE (LWRDBG,2000) IGROU,GROUPH(IGROU),MODST(ISTRU)
      GO TO 10
C Get the list of runs for the current line :
 15   IF (IGROU.LE.0) GO TO 10
      CALL VZERO(LIRUN,NTK)
      ISRU=INDEX(INFO,'SRUN')
      IF (ISRU.GT.0) INFO(ISRU:ISRU+3)='    '
      LN=LNBLNK(INFO)
      IWO=0
      RURU=' '
      IR=0
      DO 100 IB=1,LN
         CC=INFO(IB:IB)
         IF (CC.EQ.' ') THEN
            RURU=' '
            IWO=0
            GO TO 100
         ENDIF
         IF (ICHAR(CC).LT.ICHAR('0').OR.ICHAR(CC).GT.ICHAR('9')) THEN
            WRITE ( LWRDBG , 2002) CC,ILINE,INFO(1:LN)
            GO TO 10
         ENDIF
         IWO=IWO+1
         RURU(IWO:IWO)=CC
         IF (IB.GT.1.AND.IB.LT.LN.AND.INFO(IB+1:IB+1).EQ.' ') GO TO 50
         IF (IB.LT.LN.AND.INFO(IB+1:IB+1).NE.' ') GO TO 100
 50      IRUN=BKINCA(RURU)
         IF (IRUN.LT.IFIRO.OR.IRUN.GT.LASRO) THEN
            WRITE (LWRDBG,2003) IRUN,ILINE,INFO(1:LN)
            GO TO 80
         ENDIF
         IR=IR+1
         IF (IR.LE.NTK) LIRUN(IR)=IRUN
C check this run :
         CALL BKELEP(IRUN,ELEP,IFIL,B,ID,NL,KBRUC)
         IF (KBRUC.LE.0) GO TO 100
         IWPHY=IW(KBRUC+JBRUBR)
C Clear the bit " OK for this physics group " for run IRUN :
         IF (ISTRU.EQ.2) IW(KBRUC+JBRUBR)=IBCLR(IWPHY,IGROU-1)
         IF (BTEST(IWPHY,IGROU-1))  GO TO 100
         IMORU=IMORU+1
C Set the bit " OK for this physics group " for run IRUN :
         IF (ISTRU.EQ.1) THEN
            IF (BTEST(IWPHY,0)) THEN
               PRINT 2004,IRUN
               WRITE ( LWRDBG,2004) IRUN
            ENDIF
            IW(KBRUC+JBRUBR)=IBSET(IWPHY,IGROU-1)
         ENDIF
 80      IWO=0
         RURU=' '
 100  CONTINUE
      WRITE (LWRDBG,2001) LIRUN
 110  GO TO 10
C End of file :
 800  CONTINUE
C
C If any modif done , book bank 'BADB' to trigger BKLUFI execution :
      IF (IMORU.LE.0)  GO TO 999
      CALL AUBOS('BADB',1,0,JBADB,IGARB)
      LENBOK=LENBOK+IMORU
      NMODIF=NMODIF+IMORU
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/2X,'=== Subroutine BKUPPG ===  : Start processing',
     +        ' Request File',I5,2X,A25)
 1999 FORMAT (/9X,' *** WARNING !! Unknown Physics Group !!')
 2000 FORMAT (/7X,' --- Physics Group  =',I6,2X,A20,5X,
     +        'The runs listed below will be : ',2X,A8)
 2001 FORMAT (15X,'Runs read =',12I6)
 2002 FORMAT (4X, ' >>> Incorrect data read : faulty character =',2X,
     +        A1,' in line ',I5,/' Line read =',2X,A110)
 2003 FORMAT (4X, ' >>> Incorrect run number given = ',I8,
     +          ' in line ',I5,/' Line read =',2X,A110)
 2004 FORMAT (9X, ' >>> WARNING in BKUPPG : run = ',I8,' accepted for',
     +          ' analysis , marked as DUCK in database !!')
      END
      SUBROUTINE BKUPRQ(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads special file of RUN QUALITY Updates
C  stores informations in bank 'BRUC'
C  J. Boucrot  29-Mar-1990   - Modified 15-May-1990
C  Called from BKMODD
C  Calls BKFPER,BKPOIN,BKBLAN                      from BOOKLIB
C  Calls BKFILL,AUBOS                              from ALEPHLIB
C  Output arguments :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      SAVE
      PARAMETER ( NONL = 100 )
      INTEGER ITAB(MAXIN)
      LOGICAL BTEST
      CHARACTER*80 VARCH(MAXCH)
      CHARACTER INFO*80
      CHARACTER*4 QUAL,QULIS(4),QBLA
      DATA QULIS / '????' , 'PERF' , 'MAYB' , 'DUCK' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 900
      LBP=LROWS(JBPER)
      MRUVN=-1
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 900
      KBLAS=KROW(JBLAS,1)
C Get the last run # with Run_Qual info :
      NRURQ=IW(KBLAS+JBLARQ)
C the first record was already read in BKMODD :
      IREC=1
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C
C Read the input file :
C
 5    READ ( LECTXT, '(A80)' , END=800 , ERR=900 ) INFO
      IREC=IREC+1
C-----------------------------------------------------------------------
C This file contains RUN_QUALITY updates for 1 or several runs :
C
 30   IQUAL=-2
      DO 40 IQQ=1,4
         IF (INDEX(INFO,QULIS(IQQ)).EQ.0) GO TO 40
         IQUAL=IQQ-2
         GO TO 45
 40   CONTINUE
 45   IF (IQUAL.LE.-2) GO TO 5
      IF (IQUAL.LT.-1.OR.IQUAL.GT.2) IQUAL=-1
      IQPHY=-1
      IF (IQUAL.GE.0) IQPHY=2-IQUAL
C  read NRUN and QUALifier fron Run_Managers :
      READ ( INFO , 1001 )  NRUN,QUAL
      CALL BKFPER(NRUN,0,NPER)
      IF (NPER.LE.0) GO TO 5
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LT.0) GO TO 900
      IF (JBRUC.EQ.0) GO TO 5
      NRUC=LROWS(JBRUC)
      IF (NRUC.LE.0) GO TO 5
      IOLD=0
      MRUVN=MAX0(MRUVN,NRUN)

      DO 80 IRO=1,NRUC
         IF (ITABL(JBRUC,IRO,JBRURN).NE.NRUN) GO TO 80
C If this run was already in 'BRUC' , this is an update :
C store the new , modified informations :
         KRUO=KROW(JBRUC,IRO)
         IQLOL=IW(KRUO+JBRUCS)
         IF (IQLOL.GE.-1) THEN
            IQUOL=(1+IQLOL)/10
         ELSE
            IQUOL=-1
         ENDIF
         ILUOL=IQLOL-10*IQUOL
         IF (IQUAL.NE.IQUOL) IW(KRUO+JBRUCS)=ILUOL+10*IQUAL
C update bitmap for run_quality :
         IF (QUAL.EQ.'DUCK') IW(KRUO+JBRUBR)=0
         IOLBR=IW(KRUO+JBRUBR)
         IF (BTEST(IOLBR,0).AND.(QUAL.EQ.'PERF'.OR.QUAL.EQ.'MAYB'))
     +   THEN
            IW(KRUO+JBRUBR)=IBCLR(IOLBR,0)
            DO 75 IKZ=4,NGROUF
               IF (CHOIPH(IKZ).NE.' ')
     +            IW(KRUO+JBRUBR)=IBSET(IW(KRUO+JBRUBR),IKZ-1)
 75         CONTINUE
         ENDIF
         IF (BTEST(IOLBR,1).AND.(QUAL.EQ.'PERF'.OR.QUAL.EQ.'DUCK'))
     +      IW(KRUO+JBRUBR)=IBCLR(IOLBR,1)
         IF (BTEST(IOLBR,2).AND.(QUAL.EQ.'MAYB'.OR.QUAL.EQ.'DUCK'))
     +      IW(KRUO+JBRUBR)=IBCLR(IOLBR,2)
         IOLBR=IW(KRUO+JBRUBR)
         IF (IQPHY.GE.0) IW(KRUO+JBRUBR)=IBSET(IOLBR,IQPHY)
         IOLD=1
         QBLA=QUAL
         WRITE ( LWRDBG , 1101 ) NRUN,IQUAL,QBLA
         NMODIF=NMODIF+1
         LENBOK=LENBOK+1
 80   CONTINUE
 450  CONTINUE
      GO TO 5
C
 800  CONTINUE
C Update the last run with Run_Qual information in BLAS :
      IF (MRUVN.GT.NRURQ) IW(KBLAS+JBLARQ)=MRUVN
      GO TO 999
C
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (1X,I8,3X,A4)
 1002 FORMAT (I5,2X,I6)
 1100 FORMAT (/2X,'=== Subroutine BKUPRQ === : Start processing',
     +        ' Request File',I5,2X,A25)
 1101 FORMAT (7X,'+++ BKUPRQ Update Run_Qual , Run , IQUAL =',2I8,2X,A4)
      END
      SUBROUTINE BKUPZ0(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK FILPROC
C! Reads special file of Z0 with XLUMOK Updates
C  stores informations in bank 'BRUC'
C  J. Boucrot  08-Feb-1995
C  Called from BKMODD
C  Calls BKPOIN                                    from BOOKLIB
C  Calls AUBOS                                       from ALEPHLIB
C  Output arguments :
C    IER  =  1 if no room to book banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER INFO*132
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      INOLU=0
C the first record was already read in BKMODD :
      IREC=1
      WRITE (LWRDBG,1100) ICURFI,NAMRQF(ICURFI)
      IF (IBAUTO.EQ.0) PRINT 1100,ICURFI,NAMRQF(ICURFI)
C-----------------------------------------------------------------------
C Read the input file :
C
 5    READ ( LECTXT, '(A132)' , END=600 , ERR=900 ) INFO
      IREC=IREC+1
C This line contains Z0 # with XLUMOK update for run IRUN :
      READ ( INFO , 1002 ) IRUN,NZOLD,NZOK
      WRITE ( LWRDBG , 1102 ) IRUN,NZOLD,NZOK
      CALL BKFPER(IRUN,0,IPER)
      IF (IPER.LE.0) GO TO 550
      CALL BKPOIN(LECDAF,'BRUC',IPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 550
      LBB=LROWS(JBRUC)
C Loop on all runs of this fill in 'BRUC' , update the Z0 NUMBER :
      DO 540 IBB=1,LBB
         KBRUC=KROW(JBRUC,IBB)
         IF (IW(KBRUC+JBRURN).NE.IRUN) GO TO 540
         IW(KBRUC+JBRUNZ)=NZOK
         NMODIF=NMODIF+1
         LENBOK=LENBOK+1
         INOLU=INOLU+1
 540  CONTINUE
 550  CONTINUE
      GO TO 5
C-----------------------------------------------------------------------
C If any modif done , book bank 'BADB' to trigger BKLUFI execution :
 600  IF (INOLU.LE.0) GO TO 999
      CALL AUBOS('BADB',1,0,JBADB,IGARB)
      IF (IGARB.EQ.2) GO TO 900
      GO TO 999
C
 900  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1002 FORMAT (10X,I5,45X,I4,3X,I4)
 1100 FORMAT (/2X,'=== Subroutine BKUPZ0 ===   : Start processing',
     +        ' Request File',I5,2X,A25)
 1102 FORMAT (7X,'+++ BKUPZ0 Update Z0 RUN , old , new =',3I8)
      END
      SUBROUTINE BKUTMS(ITMS)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEERING
C!  Updates the TMS database according to modifications
C   stored in the temporary 'BCAR' bank :
C   Author J. Boucrot   21-Jan-1991  -
C   Modified 15-May-1991 for 'AA' tapes
C   Modified 10-Jan-1992 for new ALGET_UU EXEC
C  UNIX Version 10-Oct-1995
C Called from BKUPDF or BKRTMS                        from BOOKLIB
C Calls  BKGTMS,BKPTMS,BKSYSM,BKFRTM,BKDACI           from BOOKLIB
C Calls  ALSTIN,BKCARI                                from ALEPHLIB
C Calls BUNIT,BWRSB,BWRITE                            from BOSLIB
C  Output argument :
C   ITMS = 0 if all OK
C   ITMS = 1 if at least one TMS modification failed
C   ITMS = -1 if TMS unavailable ( the UPDABOOK job must be aborted )
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( NTOTA = 3000 , MINH = 4 )
      CHARACTER*8 VSN,DATRA,TIMRA,TAPLI(NTOTA)
      CHARACTER COMEN*60,ALDSN*20,OWNER*12,INSTI*12,LOCAT*12
      CHARACTER OUTXT*80,NWBIN*30,MESG*80,MSG*80,OWNIN*12,OWNOU*12
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
       ITMS=0
       IF (IW(NAMIND('NOTM')).GT.0) GO TO 999
       MESG=' '
       ITMKOD=0
C Decode the temporary 'BCAR' bank :
       JBCAR=NLINK('BCAR',1000)
      IF (JBCAR.LE.0) GO TO 999
       NBCAR=LROWS(JBCAR)
       WRITE ( LWRDBG,1008) NBCAR
       IF (IBAUTO.EQ.0) PRINT 1008,NBCAR
       IMODI=0
       INOWR=IW(NAMIND('NOWR'))
       IF (INOWR.GT.0) THEN
          IF (IBAUTO.EQ.0) PRINT 1009
          WRITE (LWRDBG,1009)
       ENDIF
       DO 5 II=1,NTOTA
 5     TAPLI(II)=' '
       NTOK=0
C-----------------------------------------------------------------------
C Loop on all elements of the 'BCAR' bank :
       DO 80 IDAR=1,NBCAR
          KBCAR=KROW(JBCAR,IDAR)
          IF (IW(KBCAR+JBCAWN).EQ.100) GO TO 80
          IF (IW(KBCAR+JBCARF).EQ.500) GO TO 80
          CALL ALSTIN(IW(KBCAR+JBCAVS),JBCAVI-JBCAVS,VSN)
          WRITE ( LWRDBG,1010) VSN
          DO 22 IS=1,NTOK
             IF (VSN(1:6).EQ.TAPLI(IS)(1:6)) GO TO 80
  22      CONTINUE
          IF (NTOK.GT.NTOTA) GO TO 23
          NTOK=NTOK+1
          TAPLI(NTOK)=VSN
  23      CONTINUE
          CALL ALSTIN(IW(KBCAR+JBCAIN),JBCAPD-JBCAIN,INSTI)
          CALL ALSTIN(IW(KBCAR+JBCAON),JBCARD-JBCAON,OWNER)
          CALL ALSTIN(IW(KBCAR+JBCALO),JBCAMN-JBCALO,LOCAT)
          CALL ALSTIN(IW(KBCAR+JBCACM),JBCADN-JBCACM,COMEN)
          CALL ALSTIN(IW(KBCAR+JBCADN),JBCAWN-JBCADN,ALDSN)
          IRFLA=IW(KBCAR+JBCARF)
C Tape to be FREED by TMS :
          IF (IRFLA.EQ.100) THEN
             CALL BKFRTM(VSN,IERFR)
             IF (IERFR.EQ.-1) GO TO 900
             IF (IERFR.EQ.1) ITMS=1
C set the flag telling that TMS operation was done :
             IF (IERFR.EQ.0) IW(KBCAR+JBCAWN)=100
             GO TO 80
          ENDIF
C Tape to be SCRATCHED by TMS :
          IF (IRFLA.EQ.10000) THEN
             CALL BKPTMS(VSN,9,' ',IRS)
             IF (IRS.EQ.2) GO TO 900
             IF (IRS.EQ.1) THEN
                ITMS=1
                IF (IBAUTO.EQ.0) PRINT 1021,VSN
                WRITE ( LWRDBG,1021) VSN
             ENDIF
C set the flag telling that TMS operation was done :
             IF (IRS.EQ.0) IW(KBCAR+JBCAWN)=100
             GO TO 80
          ENDIF
C
C For CERN tapes, only full multifile tapes (with IRFLA = 10)
C have to be processed here (with the exception of RAW data):
C
      IF (VSN(1:2).EQ.'AR') GO TO 40
      CALL BKCHKT(VSN(1:6),ICERN,IMULT,IDLT,IEROR)
      IF (ICERN.NE.0.AND.IMULT.NE.0) THEN
         IF (IRFLA.NE.10) GO TO 80
      ENDIF
 40   CONTINUE
C
C First get from TMS the binary tag
C containing the institute and Aleph DSN , if any :
C
          IMODI=IMODI+1
          OUTXT=' '
          CALL BKGTMS(VSN,3,IRC,OUTXT)
          IF (IRC.EQ.-1) GO TO 900
          IF (IRC.EQ.0) THEN
             IF (IBAUTO.EQ.0) PRINT 1011,VSN,IRC
             WRITE ( LWRDBG,1011)  VSN,IRC
             ITMS=1
             GO TO 80
          ENDIF
C Modify the binary tag with the new Aleph DSN :
          NWBIN=' '
          NWBIN(1:4)=OUTXT(1:4)
          NWBIN(6:25)=ALDSN
          IRB=0
          IF (INOWR.EQ.0) CALL BKPTMS(VSN,1,NWBIN,IRB)
          IF (IRB.EQ.2) GO TO 900
          IF (IRB.EQ.1) THEN
             IF (IBAUTO.EQ.0) PRINT 1012,VSN
             WRITE ( LWRDBG,1012)  VSN
             ITMS=1
             GO TO 80
          ENDIF
C
C Then get from TMS the Text tag and modify it
C with the new comment to be stored by TMS :
C
          OUTXT=' '
          CALL BKGTMS(VSN,4,IRC,OUTXT)
          IF (IRC.EQ.-1) GO TO 900
          IF (IRC.EQ.0) THEN
             IF (IBAUTO.EQ.0) PRINT 1011,VSN,IRC
             WRITE ( LWRDBG,1011)  VSN,IRC
             ITMS=1
             GO TO 80
          ENDIF
C Modify the Text tag with the new comment :
          IRT=0
          IF (INOWR.EQ.0) CALL BKPTMS(VSN,2,COMEN,IRT)
          IF (IRT.EQ.2) GO TO 900
          IF (IRT.EQ.1) THEN
             IF (IBAUTO.EQ.0) PRINT 1014,VSN
             WRITE ( LWRDBG,1014)  VSN
             ITMS=1
             GO TO 80
          ENDIF
C
C New TMS owner : eiher put it as transmitted by 'BCAR' for ALPROD/ALREP
C and On Line , or get the IBM_UUU for other owners :
C
          IF (VSN(1:2).EQ.'AA'.OR.VSN(1:2).EQ.'AR') OWNER='ALEPHONL    '
          IF (OWNER.EQ.'ALPROD'.OR.OWNER.EQ.'ALEPHONL'.OR.OWNER.EQ.
     +        'ALREPRO') GO TO 50
C For other owners , one has to get their UUU$NN account name :
      OWNIN=OWNER
      CALL BKUTOW(OWNIN,OWNOU)
      IF (OWNOU.EQ.' ') GO TO 60
      OWNER=OWNOU
 50       IRO=0
          IF (INOWR.EQ.0) CALL BKPTMS(VSN,3,OWNER,IRO)
          IF (IRO.EQ.2) GO TO 900
          IF (IRO.EQ.1) THEN
             IF (IBAUTO.EQ.0) PRINT 1015,VSN
             WRITE ( LWRDBG,1015)  VSN
             ITMS=1
          ENDIF
C This tape must now be protected against any WRITE :
 60       IRW=0
          IF (INOWR.EQ.0) CALL BKPTMS(VSN,4,' ',IRW)
          IF (IRW.EQ.2) GO TO 900
          IF (IRW.EQ.1) THEN
             IF (IBAUTO.EQ.0) PRINT 1016,VSN
             WRITE ( LWRDBG,1016)  VSN
             ITMS=1
             GO TO 80
          ENDIF
C
C Set the protection on Access Control Group to the standard value
C for WRITTEN cartridges :
C
 70       IRP=0
          IF (INOWR.EQ.0) CALL BKPTMS(VSN,6,' ',IRP)
          IF (IRP.EQ.2) GO TO 900
          IF (IRP.EQ.1) THEN
             IF (IBAUTO.EQ.0) PRINT 1017,VSN
             WRITE ( LWRDBG,1017)  VSN
             ITMS=1
             GO TO 80
          ENDIF
C Specific to Online RAW tapes in VAX Native format : tell TMS that
C these cartridges have an AL ( ASCII ) label instead of SL label :
C For 'AR' Raw DLT's written fron 1995 onwards : only the master ones ,
C the vault , have to be put as 'AL' in TMS :
         IF (VSN(1:2).EQ.'AR')  THEN
            IF (INDEX(COMEN,'COPY').GT.0) GO TO 75
            GO TO 72
         ENDIF
C AX Exabytes from AA tapes have also ASCII label :
          IF (VSN(1:2).EQ.'AX'.AND.INDEX(COMEN,'AA').GT.0) GO TO 72
         IF (VSN(1:2).NE.'AA') GO TO 75
 72       IRL=0
          IF (INOWR.EQ.0) CALL BKPTMS(VSN,8,' ',IRL)
          IF (IRL.EQ.2) GO TO 900
          IF (IRL.EQ.1) THEN
             IF (IBAUTO.EQ.0) PRINT 1022,VSN
             WRITE ( LWRDBG,1022)  VSN
             ITMS=1
             GO TO 80
          ENDIF
C For 'AA' Raw Tapes , modify their library ( " Location" ) to AA_VAULT
C when they have been written since more than MINH hours :
          IF (VSN(1:2) .NE.'AA') GO TO 75
          CALL DATIME(IDATN,ITIMN)
          IHOUN=ITIMN/100
          IVAUL=0
          CALL ALSTIN(IW(KBCAR+JBCARD),JBCART-JBCARD,DATRA)
          CALL ALSTIN(IW(KBCAR+JBCART),JBCACM-JBCART,TIMRA)
          CALL BKDACI(1,DATRA,TIMRA,IDATR,ITIMR)
          IHOUR=ITIMR/10000
          IF (IDATR.EQ.IDATN.AND.IHOUN.GT.IHOUR+MINH) IVAUL=1
          IF (IDATN.GT.IDATR+1) IVAUL=1
          IF (IDATN.EQ.IDATR+1) THEN
             IHOUN=IHOUN+24
             IF (IHOUN.GT.IHOUR+MINH) IVAUL=1
          ENDIF
          IF (IVAUL.EQ.0) GO TO 75
          IRZ=0
          IF (INOWR.EQ.0) CALL BKPTMS(VSN,10,' ',IRZ)
          IF (IRZ.EQ.2) GO TO 900
          IF (IRZ.EQ.1) THEN
             IF (IBAUTO.EQ.0) PRINT 1023,VSN
             WRITE ( LWRDBG,1023)  VSN
             ITMS=1
             GO TO 80
          ENDIF
C Set the flag telling that all TMS operations were successful for this
 75       IW(KBCAR+JBCAWN)=100
C
 80    CONTINUE
 800   CONTINUE
       IWBCA=IW(NAMIND('WBCA'))
       IF (IWBCA.GT.0.OR.ITMS.EQ.1) GO TO 910
       GO TO 999
C-----------------------------------------------------------------------
C A problem occured with TMS , OR the data card 'WBCA' was present :
C  the BCAR bank has to be saved on file BCARTMS RESCUESQ on ALSOFT 191
C
 900   ITMS=-1
       WRITE (LWRDBG,1018)
       IF (IBAUTO.EQ.0) PRINT 1018
       MESG=' -- Failure In BKUTMS : TMS service was Unavailable --'
       CALL BKSYSM(MESG,'BOOK')
C save the bank 'BCAR' , NR=1000 on file in BOS CARDS format :
 910   CONTINUE
       IF (ITMS.EQ.1) THEN
          MESG=' -- Failure In BKUTMS : at least 1 operation NOT OK -'
          CALL BKSYSM(MESG,'BOOK')
       ENDIF
       IF (ITMSRC.EQ.1) THEN
           IF (IBAUTO.EQ.0) PRINT 1019
           WRITE ( LWRDBG,1019)
           GO TO 999
       ELSE
          IF (IBAUTO.EQ.0) PRINT 1020
          WRITE ( LWRDBG,1020)
      MSG=' '
      MSG=ALS_TEMP(1:ILTEMP)//'bcartms.rescuesq'
      MSG=MSG(1:LNBLNK(MSG))
      CALL SYSTEM(' rm -f '//MSG)
      CALL AOPENW(LWRTMS,MSG,'CARD','DISK',IER)
      IF (IER.NE.0) GO TO 999
          CALL BWRSB(IW,LWRTMS,'BCAR',1000)
          CALL BWRITE(IW,LWRTMS,'0')
          CLOSE (LWRTMS)
       ENDIF
 999   RETURN
C-----------------------------------------------------------------------
 1008 FORMAT ( /2X,' === Subroutine  BKUTMS ===  Start Updating TMS ',
     +         'Database , Number of Tapes =',I8)
 1009 FORMAT (15X,' ++  TEST version ! No TMS update will be done !')
 1010 FORMAT (/7X,' >> Start debug of TMS commands for tape ',2X,A8)
 1011 FORMAT (/' !! Warning !!  Tape ',2X,A6,' NOT known from TMS ',
     +         ' IRC =',I8)
 1012 FORMAT (/' !! Warning !!  BINARY TAG for Tape =',2X,A6,
     +         ' NOT MODIFIED by TMS')
 1014 FORMAT (/' !! Warning !!  TEXT TAG for Tape =',2X,A6,
     +         ' NOT MODIFIED by TMS')
 1015 FORMAT (/' !! Warning !!  OWNER for Tape =',2X,A6,
     +         ' NOT MODIFIED by TMS')
 1016 FORMAT (/' !! Warning !!  Tape =',2X,A6,' NOT disabled',
     +         ' for WRITE by TMS')
 1017 FORMAT (/' !! Warning !!  Tape =',2X,A6,' Prot. Group ',
     +         ' NOT MODIFIED by TMS')
 1018 FORMAT (/' !! Warning !!  TMS Service Unavailable in',
     +         ' subroutine BKUTMS !!!')
 1019 FORMAT (/2X,70(1H*)/3X,'Job RESCUETMS Failed !!!          ',
     +        /8X,'You will have to run again ALUPDATE RESCUETMS',
     +        /2X,70(1H*)/)
 1020 FORMAT (/2X,70(1H*)/3X,'Bank BCAR saved in file BCARTMS RESCUESQ',
     +        /8X,'You will have to run ALUPDATE with option RESCUETMS',
     +        /2X,70(1H*)/)
 1021 FORMAT (/' !! Warning !!  Tape =',2X,A6,' NOT scratched by TMS')
 1022 FORMAT (/' !! Warning !!  Label of Tape =',2X,A6,
     +        ' NOT set to AL by TMS')
 1023 FORMAT (/' !! Warning !!  Library of Tape =',2X,A6,
     +        ' NOT set to AA_VAULT by TMS')
       END
      SUBROUTINE BKUTOW(OWNIN,OWNOU)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEERING
C!  Auxiliary to BKUTMS
C Author J. Boucrot 10-Oct-1995 - Modified 29-MAr-1996 for ypcat UNIX
C Rewritten with 2 arguments 16-Dec-1997
C Called from BKUTMS                                  from BOOKLIB
C Calls  SYSTEM                                       from GENLIB
C Input argument :
C   OWNIN = tape owner's name
C Output argument :
C   OWNOU = UUU of UUU$NN  name in output
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER OWNIN*12,UUU*12,UUFIL*18,UUNAM*80,VLU*2,MSG*80
      CHARACTER FINA*90,OWWN*13,OWNOU*12
      LOGICAL LEX
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-----------------------------------------------------------------------
      IF ( OWNIN.EQ.' ') GO TO 999
      UUU=' '
      owwn=' '
      OWNOU=' '
C On UNIX , create the temporary file containing the uuu$nn information
      FINA=' '
      FINA=ALS_TEMP(1:ILTEMP)//'uuuname.temporar'
      FINA=FINA(1:LNBLNK(FINA))
      CALL SYSTEM(' rm -f '//FINA)
      CALL CUTOL(OWNIN)
      OWWN=OWNIN(1:lnblnk(OWNIN))//':'
      CALL SYSTEM(' grep -F -h '//OWNIN(1:LNBLNK(OWNIN))//
     +            ' /etc/account > '//FINA)
C Open the temporary file just written :
      INQUIRE ( FILE = FINA , EXIST = LEX )
      IF (.NOT.LEX) GO TO 999
      OPEN ( LWRSRU , FILE = FINA , STATUS = 'OLD' , ERR = 999 )
C Read it :
      REWIND LWRSRU
      IOKNA=0
 50   READ ( LWRSRU , '(A)' , ERR = 999 , END = 60) UUNAM
      if (index(uunam,owwn(1:lnblnk(owwn))).gt.0) then
        iokna=1
        go to 60
      endif
      go to 50
 60   CLOSE (LWRSRU)
      if (iokna.eq.0) go to 999
C OWNIN found in CERN logins list: decode UUU$NN :
 70   IDOL=INDEX(UUNAM,'$')
      IF (IDOL.GT.3) THEN
         UUU(1:3)=UUNAM(IDOL-3:IDOL-1)
      ENDIF
      IF (UUU.NE.' '.AND.UUU.NE.'2') THEN
         OWNOU=UUU
         CALL CLTOU(OWNOU)
      ENDIF
      CALL SYSTEM(' rm -f'//FINA)
 999  RETURN
      END
      SUBROUTINE BKUXCI( CHDAT, IDATE, ITIME )
C----------------------------------------------------------------------
C! Convert UNIX ls -l date into integer date and time
C!
C!    Author:     H. Meinhard       06-Nov-1992
C!
C!    Input:      - CHDAT     /C*12 date as given by ls -l
C!    Output:     - IDATE     /I    date: yymmdd
C!                - ITIME     /I    time: hhmmss
C!
C!    Description
C!    ===========
C!    Unix times in ls -l are specified using two different formats,
C!    each of which is allowed as input. Examples are
C!          Mar 20  1992
C!          Sep 27 03:16
C!    Clearly, in the first case, time is meaningless, and gets set to
C!    -1. IDATE is set to -1 in case of errors.
C----------------------------------------------------------------------
      CHARACTER CHDAT*(*), CHMON(12)*3
      DATA      CHMON / 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
     +                  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' /
C----------------------------------------------------------------------
      IDATE = -1
      ITIME = -1
      IMON = 0
      DO 300 JMON = 1, 12
        IF (CHDAT(1:3) .EQ. CHMON(JMON)) IMON = JMON
  300 CONTINUE
      IF (IMON .NE. 0) THEN
        READ (CHDAT(5:6),'(I2)') IDAY
        IF (CHDAT(8:8) .EQ. ' ') THEN
C first format with year
          READ (CHDAT(11:12),'(I2)') IYEAR
          IDATE = IYEAR*10000 + IMON*100 + IDAY
        ELSE
C second format with time
          READ (CHDAT(8:9),'(I2)') IHOUR
          READ (CHDAT(11:12),'(I2)') IMIN
          CALL DATIME(KD,KT)
          KK=KD/10000
          IF (KK.GT.10) THEN
             KYEAR=KK
          ELSE
             KYEAR=100+KK
          ENDIF
          KMON  = MOD(KD/100,100)
          IYEAR = KYEAR
          IF (IMON .GT. KMON) IYEAR = IYEAR - 1
          IDATE = IYEAR*10000 + IMON*100 + IDAY
          ITIME = IHOUR*10000 + IMIN*100
        END IF
      END IF
      END
      SUBROUTINE BKVARS(LPARS)
C-----------------------------------------------------------------------
CKEY ALBOOK RUN HEADER / INTERNAL
C Called to store internal Bookkeeping parameters
C J. Boucrot   28-Oct-1989
C Called from various ALBOOK routines
C Parameters from LPARS are filled into LPAROU in /BKFILS/
C  ( see definition in the description of /BKFILS/)
C-----------------------------------------------------------------------
      SAVE
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
      INTEGER LPARS(NFILMX)
C-----------------------------------------------------------------------
      NIN=0
      DO 10 I=1,NFILMX
         IF (LPARS(I).EQ.0) GO TO 10
         NIN=NIN+1
         LPAROU(I)=LPARS(I)
 10   CONTINUE
      IF (NIN.GT.0) NPAROU=1
 999  RETURN
      END
      SUBROUTINE BKVEFN(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK VERIF
C! Verifies File Numbers and tape names in BDFS,BPRO,BTPN
C J.Boucrot 06 Feb 1998
C Called from BKUPDF                  from BOOKLIB
C Calls ALSTIN                        from ALEPHLIB
C Calls BKCHKT                        from BOOKLIB
C Output argument :
C  IER = 1 if problem with banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      character tape*8,FTAP*2,FTPN*8
      integer bkinca
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      WRITE (LWRDBG,1001)
C loop on imcd:
      DO 800 IMCD=1,2
         JBDFS=NLINK('BDFS',IMCD)
         IF (JBDFS.LE.0) GO TO 900
         NBDFS=LROWS(JBDFS)
C
         DO 500 IBDFS=1,NBDFS
            KBDFS=KROW(JBDFS,IBDFS)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
            NPER=IW(KBDFS+JBDFNP)
            NROW=IW(KBDFS+JBDFNR)
C Checks on 'BDFS' :
            NFIL=IW(KBDFS+JBDFFN)
            FTAP=TAPE(7:8)
            IFTAP=0
            INEW=0
            CALL BKCHKT(TAPE,ICERN,IMULT,IDLT,IERT)
            IF (IERT.NE.0) GO TO 500
C Old tapes convention : set file # to 1
            IF (FTAP.EQ.'  '.AND.IMULT.EQ.0) THEN
               IFTAP=1
               IF (NFIL.NE.IFTAP)  WRITE (LWRDBG,1002) TAPE,NFIL,IFTAP
               GO TO 100
            ENDIF
C AXBDFS tape convention:
            IF (FTAP.NE.'  '.AND.IMULT.GT.0) THEN
               INEW=1
               IFTAP=BKINCA(FTAP)
               IF (NFIL.NE.IFTAP) WRITE (LWRDBG,1002) TAPE,NFIL,IFTAP
               GO TO 100
            ENDIF
C File number > 99 :
            IF (FTAP.EQ.'  '.AND.IMULT.GT.0) THEN
               INEW=2
               IFTAP=NFIL
            ENDIF
C
C Now check 'BPRO' for Master datsets only:
C
 100        IF (IW(KBDFS+JBDFCO).NE.0) GO TO 500
            JBSET=NLINK('BSET',NPER)
            IF (JBSET.LE.0) GO TO 900
            KBSET=KROW(JBSET,NROW)
            IBPRO=IW(KBSET+JBSEBP)
            IF (IBPRO.LE.0) GO TO 200
            JBPRO=NLINK('BPRO',NPER)
            IF (JBPRO.LE.0) GO TO 900
            KBPRO=KROW(JBPRO,IBPRO)
            IFILDD=IW(KBPRO+JBPRDD)
            IF (IFILDD.NE.IFTAP) WRITE (LWRDBG,1004) TAPE,IFTAP,IFILDD
C
C Now check tape name in 'BTPN':
C
 200        IBTPN=IW(KBSET+JBSEBT)
            IF (IBTPN.LE.0) GO TO 500
            JBTPN=NLINK('BTPN',NPER)
            IF (JBTPN.LE.0) GO TO 900
            KBTPN=KROW(JBTPN,IBTPN)
            CALL ALSTIN(IW(KBTPN+JBTPVS),2,FTPN)
            IF (FTPN.NE.TAPE) WRITE (LWRDBG,1006) TAPE,FTPN
 500     CONTINUE
 800  CONTINUE
      GO TO 999
C Problem with banks:
 900  IER=1
 999  RETURN
C--------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKVEFN === : start verifying',
     +        ' files/tapes in BDFS,BPRO,BTPN')
 1002 FORMAT (3X,'** BKVEFN ** Anomaly BDFS tape,file,JBDFFN =',
     +        2x,a8,2i6)
 1004 FORMAT (3X,'** BKVEFN ** Anomaly BPRO tape,file,JBPRDD =',
     +        2x,a8,2i6)
 1006 FORMAT (3X,'** BKVEFN ** Anomaly BTPN tapes BDFS,BTPN =',
     +        2(2x,a8))
      END
      SUBROUTINE BKVEHO(IMCDA,ICHOI,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK VERIF
C! Verifies or lists the Homelab copies of ALEPH cartridges
C  J. Boucrot        19-Oct-1991
C Called from BKUPDF (UPDABOOK) or BKSEAR (SCANBOOK)       from BOOKLIB
C Calls BKPOIN,BKPRLV,BKCHHO                               from BOOKLIB
C Calls ALSTIN,BKINCA                                      from ALEPHLIB
C Input arguments :
C  IMCDA = 1 for real data ,  = 2 for Monte-Carlo
C  ICHOI = 1 verification : display only missing copies
C        = 2 general printout of all cartridges
C Output argument :
C  IER   = 1 if no room for BOS banks ;  = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      PARAMETER ( NMXCO = 10 )
      INTEGER NPMIN(2),LPOHO(5),NLABI(4),LISDA(4),IFAIL(4)
      INTEGER LDSHO(NMXCO),LMIHO(NMXCO),LCRHO(NMXCO),LICOP(NLABS)
      INTEGER LMIMC(NMXCO),LILAB(NLABS),BKINCA
      CHARACTER*8 TAPLI(NMXCO),TAPNA,TAPMA
C Define the first period to be tested :
      DATA NPMIN / 15 , 1000 /
C Number of LABS requiring copies for POT,DST,MINI,MCarlo :
      DATA NLABI / 1 , 7 , 4 , 9 /
C List of INADAT corresponding to POT,DST,MINI,POT MCarlo :
      DATA LISDA / 3 , 4 , 5 , 3 /
C
C All following numbers refer to the Homelab rank in /CLISTL/
C see routine BKINSC for more details :
C
C List of Homelabs for POT  copies - MASTER = CERN AB
      DATA LPOHO / 1 , 4*0 /
C List of Homelabs for DST  copies - MASTER = CERN AB
      DATA LDSHO / 1 , 2 , 3 , 4 , 5 , 6 , 8 , 3*0 /
C List of Homelabs for MINI copies - MASTER = CERN AB
      DATA LMIHO /  5 , 6 , 8 , 12 , 6*0 /
C List of Homelabs for MCARLO Copies - Master may be anything !
      DATA LMIMC / 1 , 11 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 0 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Various initializations :
      IER=0
      IF (IBUPDA.GT.0) GO TO 999
      IMISC=0
      IMAS=0
      ISAVE=IMCDAT
      IMCDAT=IMCDA
      IF (ICHOI.EQ.1.AND.IMCDA.EQ.2) GO TO 999
      ILOMI=1
      ILOMX=3
      IF (IMCDA.EQ.2) THEN
         ILOMI=4
         ILOMX=4
      ENDIF
      CALL VZERO(IFAIL,4)
      IF (IBAUTO.EQ.0) PRINT 1000
      LOUT=LWRDBG
      IF (IDSEAR.EQ.8) LOUT=LWRUSR
      WRITE ( LOUT,1000)
C
      CALL BKPOIN(LECDAF,'BDFS',IMCDA,JBDFS)
      IF (JBDFS.LE.0) GO TO 920
      NBDFS=LROWS(JBDFS)
      NPEMI=NPMIN(IMCDA)
      IF (ICHOI.EQ.2.AND.IMCDA.EQ.1) NPEMI=1
      ILOPE=0
C-----------------------------------------------------------------------
C Loop on all categories defined for this IMCDA :
C
      DO 800 ICATE=ILOMI,ILOMX
         INADA=LISDA(ICATE)
         NLABO=NLABI(ICATE)
         CALL VZERO(LILAB,NLABS)
C Define list of labs to be scanned :
         IF (IMCDA.EQ.2) THEN
            CALL UCOPY(LMIMC(1),LILAB(1),NLABO)
         ELSE
            IF (ICATE.EQ.1) CALL UCOPY(LPOHO(1),LILAB(1),NLABO)
            IF (ICATE.EQ.2) CALL UCOPY(LDSHO(1),LILAB(1),NLABO)
            IF (ICATE.EQ.3) CALL UCOPY(LMIHO(1),LILAB(1),NLABO)
         ENDIF
         IF (IMCDA.EQ.1.AND.ICHOI.EQ.2) THEN
            WRITE ( LOUT,1001) DNADAT(INADA)
            WRITE ( LOUT,1002) ( CLISTL(LILAB(K)),K=1,NLABO)
            WRITE ( LOUT,1003)
         ENDIF
C Loop on all 'BDFS' rows :
         DO 700 IBDF=1,NBDFS
            KBDFS=KROW(JBDFS,IBDF)
            NPEM=IW(KBDFS+JBDFNP)
            IF (IMCDA.EQ.2.AND.NPEM.NE.IOLPE) THEN
               IF (ICHOI.EQ.2) THEN
                  WRITE ( LOUT,2001) DNADAT(INADA),NPEM
                  WRITE ( LOUT,1002) ( CLISTL(LILAB(K)),K=1,NLABO)
                  WRITE ( LOUT,1003)
               ENDIF
               IOLPE=NPEM
            ENDIF
            IF (NPEM.LT.NPEMI) GO TO 700
            IF (IW(KBDFS+JBDFCO).NE.0) GO TO 700
            NROM=IW(KBDFS+JBDFNR)
C This is a master dataset : get its nature from the 'BSET' bank :
            CALL BKPOIN(LECDAF,'BSET',NPEM,JBSET)
            IF (JBSET.LE.0) GO TO 920
            KBSET=KROW(JBSET,NROM)
         IF (MOD(IW(KBSET+JBSEND),10).NE.INADA) GO TO 700
C Check on the dataset creation date :
            IDAY=IW(KBSET+JBSEWD)
            IF (ISDATE.EQ.0) GO TO 200
            IF (ISDATL.GT.0) GO TO 180
            IF (ISDATE.GT.0.AND.IDAY.LT.ISDATE) GO TO 700
            IF (ISDATE.LT.0.AND.IDAY.GT.IABS(ISDATE)) GO TO 700
            GO TO 200
 180        IF (IDAY.LT.ISDATE.OR.IDAY.GT.ISDATL) GO TO 700
 200        CONTINUE
C It must be a LAST processing for REAL data :
            IF (IMCDA.NE.1) GO TO 350
            NFRU=IW(KBSET+JBSEFR)
            NLRU=IW(KBSET+JBSELR)
            IDAY=IW(KBSET+JBSEWD)
            CALL BKPRLV(DNADAT(INADA),NFRU,0,0,ILV,IFD,ILD,IERB)
            IF (NLRU.NE.NFRU) THEN
               CALL BKPRLV(DNADAT(INADA),NLRU,0,0,ILV,IFD,ILD,IERA)
               IF (IERB.NE.0.AND.IERA.NE.0) GO TO 700
            ELSE
               IF (IERB.NE.0) GO TO 700
            ENDIF
            IF (IDAY.LT.IFD.OR.IDAY.GT.ILD) GO TO 700
 350        CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPMA)
            IF (IMCDA.EQ.1.AND.TAPMA(1:2).NE.'AB') THEN
               WRITE (LOUT,1006) TAPMA
               IMAS=IMAS+1
               GO TO 700
            ENDIF
C Now loop on all possible copies of this master dataset :
            NCOPS=0
            CALL VZERO(LICOP,NLABS)
            DO 385 IK=1,NMXCO
 385        TAPLI(IK)=' '
            DO 600 ICO=1,NMXCO
               NBDF=IBDF+ICO
               KBDFN=KROW(JBDFS,NBDF)
               IF (IW(KBDFN+JBDFNP).NE.NPEM) GO TO 610
               IF (IW(KBDFN+JBDFNR).NE.NROM) GO TO 610
               IF (IW(KBDFN+JBDFCO).NE.1)    GO TO 610
C This is a copy of TAPMA : decode its name and find the Homelab :
               CALL ALSTIN(IW(KBDFN+JBDFTC),2,TAPNA)
               DO 500 LAB=1,NLABO
C loop on all Homelabs asking copies for these data :
                  JLAB=LILAB(LAB)
                  CALL BKCHHO(TAPNA,ICE,IHOME,IMU,IEX,IDL,I34,IERC)
                  IF (IERC.EQ.0.AND.JLAB.EQ.MOD(IHOME,100)) THEN
                     LICOP(JLAB)=LICOP(JLAB)+1
                     IF (LICOP(JLAB).GT.1) THEN
                        WRITE ( LOUT,1007) TAPMA,TAPLI(LAB),TAPNA
                        GO TO 500
                     ENDIF
                     NCOPS=NCOPS+1
                     TAPLI(LAB)=TAPNA
                  ENDIF
 500           CONTINUE
 600        CONTINUE
C Check that all labs have their copy ; otherwise print a warning :
 610        CONTINUE
            IF ( ICHOI.EQ.2) THEN
               WRITE ( LOUT,1004) TAPMA,(TAPLI(IIK),IIK=1,NLABO)
            ELSE
               IF (NCOPS.NE.NLABO) THEN
                  IF (INADA.EQ.4.AND.TAPLI(1).EQ.' '.AND.NCOPS.EQ.
     +                NLABO-1) GO TO 650
                  IFAIL(ICATE)=IFAIL(ICATE)+1
                  IMISC=IMISC+1
                  IF (IFAIL(ICATE).EQ.1) THEN
                     WRITE ( LOUT,1005) DNADAT(INADA)
                     WRITE ( LOUT,1002) (CLISTL(LILAB(K)),K=1,NLABO)
                     WRITE ( LOUT,1003)
                  ENDIF
                  WRITE ( LOUT,1004) TAPMA,(TAPLI(IIK),IIK=1,NLABO)
 650              CONTINUE
               ENDIF
            ENDIF
C
 700     CONTINUE
 800  CONTINUE
      IF (IMISC*IMAS.EQ.0) GO TO 999
      IF (IBAUTO.EQ.0.AND.ICHOI.EQ.1) PRINT 1008,IMISC,IMAS
      GO TO 999
C No room for banks :
 920  IER=1
 999  IMCDAT=ISAVE
      RETURN
C-----------------------------------------------------------------------
 1000 FORMAT (/22X,'=== Subroutine BKVEHO === : Start verifying ',
     +        ' Homelabs copies')
 1001 FORMAT (//22X,66(1H*)/,22X,'*  Start of listing of ALL Homelabs',
     +        ' Copies for DATA = ',2X,A4,' *'/22X,66(1H*))
 1002  FORMAT (//1X,130(1H-)/T3,'MASTER',T11,1H|,T34,
     +        ' COPIES for the Homelabs',/,
     +        ' dataset', T11,1H|,9(2X,A10))
 1003 FORMAT (1X,130(1H-))
 1004 FORMAT (2X,A6,T11,1H|,9(2X,A8,2X))
 1005 FORMAT (/15X,'>>>  At least 1 missing copy detected for Data =',
     +        2X,A4)
 1006 FORMAT (20X,'** Warning !! Master dataset on tape',2X,A8,
     +        ' is NOT on an ABxxxx tape !!')
 1007 FORMAT (20X,' **  Warning !! Two copies of ',2X,A8,' found for',
     +        ' the same Homelab :',2(2X,A8))
 1008 FORMAT (25X,'A Total of ',I4,' Missing copies and ',I4,
     +        ' abnormal Master Datasets have been found')
 2001 FORMAT (//22X,66(1H*)/,22X,'*  Start of listing of ALL Homelabs',
     +        ' Copies for MCarlo ',2X,A4,5X,1H*,/,22X,'*     KINGAL ',
     +        'Generator =',I6,35X,1H*,/22X,66(1H*))
      END
      SUBROUTINE BKVERAL(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Auxiliary to BKSEXQ : verifications before SCANBOOK execution
C  J. Boucrot 23-Sep-1996
C  Called from BKSEXQ                               from BOOKLIB
C  Calls BKVRX11,BKDASEL                            from BOOKLIB
C Output argument :
C   IER = 1 if problems which imply to stop execution
C       = 0 if all OK
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- DATPROC ----
      PARAMETER ( NPROC = 4 )
      COMMON / DATPROC / NPROCD(NPROC),IFIDAC(NPROC),ILADAC(NPROC),
     +                   IJUVRC(NPROC),IMNVRC(NPROC),ICOVRC(NPROC),
     +                   IJUSLC(NPROC)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
C-- RSLEP1 ----
      PARAMETER (NSL1 = 5 )
      CHARACTER RSELEP1*10,PHYKL1*200
      COMMON / LEP1RS / IRSLEP1
      COMMON / CEP1RS / RSELEP1(NSL1),PHYKL1(NSL1)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IDSEAR.GE.8) GO TO 999
      LU=LWRINT
C If X11 running :  verification of run/year compatibility
      IF (IBKINT.LE.0) THEN
         CALL BKVRX11(IER)
         IF (IER.NE.0) GO TO 905
      ENDIF
C Verify IDSEAR
      IF (IDSEAR.LT.1.OR.IDSEAR.EQ.6) THEN
         IF (IBKINT.EQ.2) WRITE (LU,1000) IDSEAR
         WRITE ( LWRUSR,1000) IDSEAR
         GO TO 905
      ENDIF
C Verify IMCDAT :
      IF (IDSEAR.NE.8.AND.(IMCDAT.LE.0.OR.IMCDAT.GT.2)) THEN
         IF (IBKINT.EQ.2) WRITE (LU,1001) IMCDAT
         WRITE ( LWRUSR,1001) IMCDAT
         GO TO 905
      ENDIF
      IF (IMCDAT.EQ.2.AND.IGEOYR.GE.1997.AND.INIP97.EQ.0) THEN
         INIP97=1
      ENDIF
      IF (IMCDAT.EQ.2.AND.IGEOYR.LT.1997) INIP97=0
      IF (IMCDAT.EQ.2.AND.INIP97.GT.0) THEN
         CODM97=' '
         CKEY97=' '
         IF (KINCOD.LE.0.OR.IROW97.LE.0) GO TO 10
         NR=KINCOD+NCY*(IGEOYR-IYERF)
         JBKM7=NLINK('BKM7',NR)
         IF (JBKM7.EQ.0) GO TO 10
         KBKM7=KROW(JBKM7,IROW97)
         CALL ALSTIN(IW(KBKM7+JBKMDE),LBKM7A-JBKMDE+1,CODM97)
         CALL ALSTIN(IW(KBKM7+JBKMKW),JBKMDE-JBKMKW,CKEY97)
 10      CONTINUE
      ENDIF
C Verify IDASEL and IALISE , define them if necessary :
      IF (IDSEAR.NE.5.AND.IDSEAR.NE.3) CALL BKDASEL
C NO FILI flag for Option 5 :
      IF (IDSEAR.EQ.5) IWFILI=0
      IF (IMCDAT.EQ.2) GO TO 50
C Verify if year of data taking correctly defined :
      IF (ISYEAR.LE.0) CALL BKVYEAR(IERY)
C Define which Physics groups are active for the present year:
      CALL BKPGVAL
C-----------------------------------------------------------------------
C For 1994 POT/DSTs, DLT tapes only :
      IF ((SELDAT.EQ.'P'.OR.SELDAT.EQ.'D').AND.ISYEAR.EQ.1994.
     +     AND.IDSEAR.EQ.1) IDLDAT=1
C If RAW real data selected, define flags for FILICARDs printout :
C ( flags IDLCRW,IRAWD1,IRAWD2,IRAWAA of / BKKEYS / )
      IF (IDASEL.EQ.2.AND.IDSEAR.EQ.1) THEN
C Raw data of 1995 sq are on DLT only, with 1 dataset per file :
         IF (ISYEAR.GE.1995) THEN
            IDLCRW=1
            IRAWD1=1
         IF (ISORLE.NE.0) ISORLE=0
         IF (IBPRUS.EQ.2) IBPRUS=3
         ENDIF
C Raw data of 1991/94 are on AA or DLT, with 1 run per file :
         IF (ISYEAR.GE.1991.AND.ISYEAR.LE.1994) THEN
            IF (IDLCRW.EQ.1) THEN
               IRAWD2=1
            ELSE
               IF (IEPRAW.EQ.0) IRAWAA=1
            ENDIF
         ENDIF
C Raw data of 1989/90 are on AA only, with 1 run per file :
         IF (ISYEAR.GE.1989.AND.ISYEAR.LE.1990) THEN
            IRAWAA=1
         ENDIF
      ENDIF
C POTs and DSTs of data for years 1995 sq are only on DLTs
      IF (IDSEAR.EQ.1.AND.ISYEAR.GE.1995.and.
     +   (IDASEL.EQ.3.OR.IDASEL.EQ.4)) IDLDAT=1
C----------------------------------------------------------------------
C Special verifications for Option 2 : only POTs allowed
      IF (IDSEAR.EQ.2) THEN
         SELDAT='P'
         IDASEL=3
         IMCDAT=1
      ENDIF
C-----------------------------------------------------------------------
C IF MINI or NANO selected, put automatically the correct version number
C for the selection ( real data only ! ) :
C
      IF (SELDAT.EQ.'M'.OR.SELDAT.EQ.'N') THEN
         IKOD=1
         IF (LASTPR.EQ.1) IKOD=2
         IF (LASTPR.EQ.2) IKOD=3
         IF (LASTPR.EQ.0) IKOD=4
         IF (SELDAT.EQ.'M') THEN
            IMINPR=IMNVRC(IKOD)
            IF (IMINPR.LE.0.OR.IBKINT.EQ.-1) GO TO 50
            IF (IBKINT.EQ.2) WRITE ( LU,1002) IMINPR
            WRITE ( LWRUSR,1002) IMINPR
         ENDIF
         IF (SELDAT.EQ.'N') THEN
            INANPR=IMNVRC(IKOD)
            IF (IBKINT.EQ.2) WRITE ( LU,1003) INANPR
            WRITE ( LWRUSR,1003) INANPR
         ENDIF
      ENDIF
 50   CONTINUE
C-----------------------------------------------------------------------
C Set SELFOR correctly :
      IF (IMCDAT.EQ.1) THEN
         SELFOR='EPIO'
         IF (SELDAT.EQ.'R') THEN
            SELCAT='  '
            IF (IDSEAR.EQ.1.AND.IEPRAW.EQ.0) SELFOR='NATV'
         ENDIF
      ENDIF
      GO TO 999
C Error somewhere :
 905  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1000 FORMAT(/' >> Undefined search option : ',I3,' ==> ABORT !!')
 1001 FORMAT(/' >> Undefined IMCDAT option : ',I3,' ==> ABORT !!')
 1002 FORMAT(/' >> Datasets will be selected with MINI version ',I3)
 1003 FORMAT(/' >> Datasets will be selected with NANO version ',I3)
      END
       SUBROUTINE BKVERBP(IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Checks if all OK for BDFS and BPRO file #
C  J. Boucrot 26-Nov-1997
C Called from BKUPDF                  from  BOOKLIB
C Calls ALSTIN,BKINCA                 from ALEPHLIB
C Output arguments:
C IER = 1 if problem with banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      integer ibla(2),BKINCA
      character tap*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      NERRS=0
      IER=0
      IVEROL=0
      WRITE (LWRDBG,1001)
C
C Check BDFS file #:
C
      DO 100 IMCD=1,2
         JBDFS=NLINK('BDFS',IMCD)
         IF (JBDFS.LE.0) then
           iverol=1
           GO TO 900
         endif
         DO 50  IBDFS=1,LROWS(JBDFS)
            KBDFS=KROW(JBDFS,IBDFS)
            NPER=IW(KBDFS+JBDFNP)
            NROW=IW(KBDFS+JBDFNR)
            nfil=IW(KBDFS+JBDFFN)
            if (nfil.gt.nfidl.or.nfil.lt.0) then
               call alstin(iw(kbdfs+jbdftc),2,tap)
               write (lwrdbg,1005) imcd,ibdfs,nper,nrow,tap,nfil
               iverol=iverol+1
            endif
 50      continue
 100  continue
C
C Check 'BPRO' file #:
C
      JBPRO=NAMIND('BPRO')+1
 200  JBPRO=IW(JBPRO-1)
      IF (JBPRO.EQ.0) GO TO 500
      NPER=IW(JBPRO-2)
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.LE.0) GO TO 200
      JBTPN=NLINK('BTPN',NPER)
      IF (JBTPN.LE.0) GO TO 200
C Loop on all BPRO rows:
      DO 300 IBPRO=1,LROWS(JBPRO)
         KBPRO=KROW(JBPRO,IBPRO)
         IFPRO=IW(KBPRO+JBPRDD)
         if (IfPRO.LT.NFIDL.AND.IFPRO.GE.0) GO TO 300
C ANOMALOUS FILE #:
         IBTPN=-1
         IBSOK=-1
         DO 250 IBSET=1,LROWS(JBSET)
            KBSET=KROW(JBSET,IBSET)
            IF (IW(KBSET+JBSEBP).NE.IBPRO) GO TO 250
            IBTPN=IW(KBSET+JBSEBT)
            IBSOK=IBSET
            GO TO 260
 250     CONTINUE
 260     CONTINUE
         IF (IBSOK.LE.0) THEN
            write (lwrdbg,1006) nper,IBPRO,IFPRO,IBSOK,IBTPN
            iverol=iverol+1
            GO TO 300
         ELSE
            kbtpn=krow(jbtpn,ibtpn)
            call alstin(iw(kbtpn+jbtpvs),2,tap)
            write (lwrdbg,1007) nper,ibpro,ifpro,ibset,tap
            iverol=iverol+1
         ENDIF
 300  CONTINUE
C next 'BPRO' bank:
      GO TO 200
c
 500  CONTINUE
C-----------------------------------------------------------------------
C Now verify the discard flags in 'BSET' :
C
      JBSET=NAMIND('BSET')+1
 600  JBSET=IW(JBSET-1)
      IF (JBSET.EQ.0) GO TO 800
      NPER=IW(JBSET-2)
      JBTPN=NLINK('BTPN',NPER)
      IF (JBTPN.LE.0) GO TO 600
C Loop on all BSET rows:
      DO 700 IBSET=1,LROWS(JBSET)
         KBSET=KROW(JBSET,IBSET)
         IDFLA=IW(KBSET+JBSEDF)
         IF (IDFLA.EQ.0) GO TO 700
         IBTPN=IW(KBSET+JBSEBT)
         KBPTN=KROW(JBTPN,IBTPN)
         call alstin(iw(kbtpn+jbtpvs),2,tap)
         write (lwrdbg,2006) nper,IBset,Idfla,IBtpn,IBTPN,tap
 700  continue
      go to 600
C finished:
 800  if (iverol.gt.0) then
         write (lwrdbg,2010) iverol
         nerrs=iverol
      endif
      GO TO 999
C Error in banks:
 900  IER=1
 999  RETURN
C ----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKVERBP === : start verifying',
     +        ' banks BDFS,BPRO AND BSET')
 1005 FORMAT (2x,'** BKVERBP ** Error on JBDFFN Imcd,bdfs,per,row,=',
     +           4i9,' --> tape,nfil =',2x,a8,i9)
 1006 FORMAT (5x,'** BKVERBP ** Error on BPRO file # NPER,IBPRO,',
     +        'IFPR,IBSOK,TPN=',5i8,/10x,'--> NO BSET or BTPN ROW !!')
 1007 FORMAT (5x,'** BKVERBP ** Error on BPRO file # nper,ipbro,',
     +        'file,ibset,=',4i9,/10x,' --> TAPE =',2x,a8)
 2006 FORMAT (5x,'** BKVERBP ** Error on BSET File # NPER,IBSET,',
     +        'IDFL,IBTPN,TPN=',5i8,2x,a8,
     +        /10x,' --> Discard flag is ON  !!')
 2010 FORMAT (/22X,' >>>>>>>  BKVERBP Total of ',i7,' errors !!')
      END
      SUBROUTINE BKVFIYE(LU,INUS,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Decodes and verifies user's input for fill selection
C J. Boucrot  21-09-1996   Modified for X11 13-10-1997
C Modified for new BKFPFI 15-10-1998
C Called from BKSRUN                                     from  BOOKLIB
C Calls AUBOS,BKINCA                                     from ALEPHLIB
C Calls BKFIYE,BKFPFI,BKFISR,PRWARNX11                   from  BOOKLIB
C Calls INTSOR                                           from  KERNLIB
C Input arguments :
C    LU   = unit for user's dialogue
C   INUS  = user's input string to define fills
C  Output argument  :
C           IER = 0  all OK
C               = 1  error in the user's input
C               = 2  no room to book/enlarge bank 'SRUN'
C  Common variables defined in this routine :
C     ISRUNF,ISRUNL,ISYEAR  in / BKKEYS /
C  The SFIL bank is filled from the user's input fills
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
      CHARACTER SEPT*1,SEPR*1,TEXT*80
      CHARACTER*(*) INUS
      INTEGER BKINCA,LISFI(NDSMX)
      DATA SEPT,SEPR  / '/' , ',' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C
      IER=0
      CALL CLTOU(INUS)
      IF (INUS.EQ.' ' ) GO TO 910
      NFOUN=0
      CALL VZERO(LISFI,NDSMX)
      JBLAS=NLINK('BLAS',1)
      IF (JBLAS.EQ.0) GO TO 920
      KBLAS=KROW(JBLAS,1)
      LASFI=IW(KBLAS+JBLALF)
C-----------------------------------------------------------------------
C Range of fills :
      INNUS=INDEX(INUS,SEPT)
      IF (INNUS.NE.0) THEN
         IFILF=BKINCA(INUS(1:INNUS-1))
         ISFLL=BKINCA(INUS(INNUS+1:LNBLNK(INUS)))
         IF (ISFLL.LT.IFILF) GO TO 901
         IF (IFILF.LE.0.OR.IFILF.GT.LASFI) GO TO 901
         IF (ISFLL.LE.0.OR.ISFLL.GT.LASFI) GO TO 901
C Check that fills don't span over more than 1 year :
         CALL BKFIYE(LU,IFILF,ISFLL,IRBAD)
         IF (IRBAD.NE.0) GO TO 910
C Check that these fills exsit really;
C if not, replace them by the next ones:
         CALL BKFPFI(IFILF,IFFNW,NP1,NRMI1,NRMX1,IBRRC,IER1)
         CALL BKFPFI(ISFLL,IFLNW,NP2,NRMI2,NRMX2,IBRRC,IER2)
         IF (IER1.EQ.1.OR.IER2.EQ.1) GO TO 910
         IFILF=IFFNW
         ISFLL=IFLNW
C Define ISRUNF,ISRUNL :
         ISRUNF=NRMI1
         ISRUNL=NRMX2
C Book and Fill bank SFIL :
         CALL AUBOS('SFIL',0,2,JSFIL,IGARB)
         IF (IGARB.EQ.2) GO TO 920
         IW(JSFIL+1)=IFILF
         IW(JSFIL+2)=-ISFLL
         GO TO 480
      ENDIF
C-----------------------------------------------------------------------
C List of Fills :
      INLIS=INDEX(INUS,SEPR)
      LOUT=LNBLNK(INUS)
      IF (INLIS.EQ.0) THEN
         IN1=1
         IN2=LOUT
         GO TO 300
      ENDIF
      IN1=1
      IN2=INLIS-1
 300  CONTINUE
      NFLU=BKINCA(INUS(IN1:IN2))
C Check if this fill exists; if not skip it:
      CALL BKFPFI(NFLU,NFFN,NP,NRMI,NRMX,IBRRC,IERF)
      IF (IERF.NE.0) GO TO 350
      NFOUN=NFOUN+1
      IF (NFOUN.GT.NDSMX) GO TO 400
      LISFI(NFOUN)=NFLU
 350  IF (IN2.GE.LOUT) GO TO 400
      IN1=IN1+INLIS
      INLIS=INDEX(INUS(IN1:LOUT),SEPR)
      IN2=IN1+INLIS-2
      IF (INLIS.EQ.0) IN2=LOUT
      GO TO 300
C
C Sort the list by increasing run # , then fill SFIL :
C
 400  IF (NFOUN.EQ.0) GO TO 901
      CALL INTSOR(LISFI,NFOUN)
      IFILF=LISFI(1)
      ISFLL=LISFI(NFOUN)
      IF (ISFLL.LT.IFILF) GO TO 901
      IF (IFILF.LE.0.OR.IFILF.GT.LASFI) GO TO 901
      IF (ISFLL.LE.0.OR.ISFLL.GT.LASFI) GO TO 901
C Check that fills don't span over more than 1 year :
      CALL BKFIYE(LU,IFILF,ISFLL,IRBAD)
      IF (IRBAD.NE.0) GO TO 910
C Define ISRUNF,ISRUNL :
      CALL BKFPFI(IFILF,NP1,NRMI1,NRMX1,IBRRC,IER1)
      CALL BKFPFI(ISFLL,NP2,NRMI2,NRMX2,IBRRC,IER2)
      ISRUNF=NRMI1
      ISRUNL=NRMX2
C Book/fill bank SFIL :
      CALL AUBOS('SFIL',0,NFOUN,JSFIL,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      CALL UCOPY(LISFI(1),IW(JSFIL+1),NFOUN)
C-----------------------------------------------------------------------
C Build now the 'SRUN' bank from 'SFIL' :
 480  CALL BKFISR(IERS)
      IF (IERS.GT.0) GO TO 920
      GO TO 999
C-----------------------------------------------------------------------
C incorrect input
C For X11 execution, open a warning window :
 901  IF (IBKINT.NE.-1) GO TO 910
      TEXT=' '
      TEXT='Incorrect Fill selection !'
      CALL PRWARNX11(TEXT)
 910  IER=1
      GO TO 999
C No room for bank 'SRUN' :
 920  IER=2
C
 999  RETURN
      END
      SUBROUTINE BKVLOC(IER)
C----------------------------------------------------------------------
C CKEY UPDABOOK UPDADBS
C! Compares TMS and SCANBOOK locations ; updates the SCANBOOK ones
C  Author  J.Boucrot  04-Nov-1991
C  Modified 26-Apr-1996 : execute only on UNIX , only on Sunday
C Called from BKUPDF                                  from  BOOKLIB
C Calls ALSTIN                                        from  ALEPHLIB
C Calls CALDAT                                        from  GENLIB
C Calls BKGTMS,BKCARI                                 from  BOOKLIB
C Output argument :
C    IER = 0 if all OK , = 1 if no room for banks
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      SAVE
      CHARACTER TAPIN*8,CHREP*119,DAY*2,YMD*6
      CHARACTER TMTX*14,TMLOC*4,SCALOC*4,CHAINT*4,SEPLO*1,MESG*80
      INTEGER ISSEL(8),ITAB(MAXIN)
      DATA SEPLO / '_' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      IKGT=0
      IMODT=0
C Run this routine once a week , only on  Sunday :
      CALL VZERO(ISSEL,8)
      CALL DATIME(IDATN,ITIMN)
      CALL BKCARI(IDATN,6,YMD)
      CHREP=' '
      CHREP(75:80)=YMD
      CALL CALDAT(9,CHREP,ISSEL,IRETC)
      IF (IRETC.NE.0) GO TO 999
      DAY=CHREP(118:119)
      IF (DAY.NE.'SU') THEN
         IF (IBAUTO.EQ.0) PRINT 1001
         WRITE ( LWRDBG , 1001)
         GO TO 999
      ENDIF
 5    CONTINUE
C----------------------------------------------------------------------
C Loop on all 'BDFS' banks :
      DO 900 IB=1,2
         IMODS=0
         JBDFS=NLINK('BDFS',IB)
         IF (JBDFS.EQ.0) GO TO 920
         NBDFS=LROWS(JBDFS)
         WRITE ( LWRDBG,1002)   IB,NBDFS
         IF (IBAUTO.EQ.0) PRINT 1002,IB,NBDFS
C Loop on all datasets in this BDFS bank :
         DO 800 IBD=1,LROWS(JBDFS)
            KBDFS=KROW(JBDFS,IBD)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPIN)
C IF this is a tape from CERN families , don't check it :
            CALL BKCHKT(TAPIN,ICERN,IMULT,IDLT,IEROR)
            IF (ICERN.NE.0) GO TO 800
C Don't verify tapes not coming from IN2P3 Lyon :
           IF (TAPIN(1:2).NE.'AF'.AND.
     +         TAPIN(1:2).NE.'AL'.AND.TAPIN(1:2).NE.'Y2') GO TO 800
C Other cartridges : get their TMS location and their SCANBOOK location
            TMTX =' '
            CALL BKGTMS(TAPIN(1:6),6,IFOUN,TMTX)
            IF (IFOUN.NE.1) GO TO 800
            IKGT=IKGT+1
            IF (IBAUTO.EQ.0.AND.MOD(IKGT,100).EQ.0)
     +         PRINT 1006,IKGT,IMODS
            INOLO=INDEX(TMTX,SEPLO)
            IF (INOLO.EQ.0) GO TO 800
            TMLOC=' '
            SCALOC=' '
            TMLOC=TMTX(INOLO+1:INOLO+4)
            SCALOC=CHAINT(IW(KBDFS+JBDFLO))
            IF (SCALOC.EQ.TMLOC) GO TO 800
C Issue a warning and change the SCANBOOK location :
            WRITE ( LWRDBG,1003) IBD,TAPIN,TMTX,TMLOC,SCALOC
            IW(KBDFS+JBDFLO)=INTCHA(TMLOC)
            IMODS=IMODS+1
C Write a row in the 'BCAR', NR = 1000 bank to record this change :
          CALL VZERO(ITAB,MAXIN)
          DO 120 IKS=JBCAVS,JBCAWN-1
 120      ITAB(IKS)=INTCHA('    ')
          CALL UCOPY(IW(KBDFS+JBDFTC),ITAB(JBCAVS),2)
          ITAB(JBCARF)=500
          ITAB(JBCAWN)=100
          CALL BKFILB('BCAR',1000,ITAB,LBCARA,NROU,IEOU)
          IF (IEOU.EQ.2) GO TO 920
          CALL BKMODI('BCAR',1000,0,LBCARA,IER)
 800     CONTINUE
         WRITE ( LWRDBG,1007)   IB,IMODS
         IF (IBAUTO.EQ.0) PRINT 1007,IB,IMODS
         NMODIF=NMODIF+1
         IMODT=IMODT+IMODS
C
 900  CONTINUE
      WRITE ( LWRDBG,1008)  IKGT,IMODT
      IF (IBAUTO.EQ.0) PRINT 1008,IKGT,IMODT
      GO TO 999
C----------------------------------------------------------------------
C errors :
C No room for banks :
 920  IER=1
      MESG=' +++ Error in BKVLOC  : no room for banks'
 950  IVAL=0
      CALL BKMESG(' ',IVAL,MESG)
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (/22X,'=== Subroutine BKVLOC === : not executed today')
 1002 FORMAT (/22X,'=== Subroutine BKVLOC === : starts for BDFS = ',
     +           I3,'  NBDFS = ',I8)
 1003 FORMAT (5X,'-- IBD,TAPE =',I8,2X,A8,
     +        ' TMTAG,LOC,SCALOC =',2X,A12,2(2X,A4))
 1006 FORMAT ( ' --- TMS Locations processed =',I9,6X,'>> NMODIFS =',I8)
 1007 FORMAT (/22X,'=== END of BKVLOC  for IMCDAT =',I8,' IMODS =',I9)
 1008 FORMAT (/22X,'=== END of BKVLOC  TMS Calls , Modifs Total =',2I8)
      END
      SUBROUTINE BKVRCD(NPER,ISET,IMOD,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Check the 'BSET' of 1994 for faulty DST comments
C  J. Boucrot 09-Dec-1994
C Called from BKCLVR                    from BOOKLIB
C Calls ALSTIN,ALINST                   from ALEPHLIB
C    Input arguments:
C  NPER = Period of data taking
C  ISET = Row in BSET bank
C   Output arguments:
C IMOD = 1  if COMMENT modified
C  IER = 1  if pb with banks
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
      PARAMETER ( NRUT = 100 )
      INTEGER BKINCA,LIRUB(NRUT),LIRUC(NRUT),LICO(20)
      CHARACTER COMEN*80,DANA*4,CRUN*5,TAPE*8,COMNW*80
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IMOD=0
      CALL VZERO(LIRUB,NRUT)
      CALL VZERO(LIRUC,NRUT)
      DO 10 ICO=1,20
 10   LICO(ICO)=INTCHA('    ')
      NRUB=0
      NRUC=0
C Find pointers :
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.EQ.0) GO TO 900
      KBSET=KROW(JBSET,ISET)
C Nature of data from 'BSET' :
      NADA=IW(KBSET+JBSEND)
      IF (NADA.NE.3.AND.NADA.NE.4) GO TO 999
      DANA=DNADAT(NADA)
C Tape name :
      IBTAP=IW(KBSET+JBSEBT)
      IF (NPER.EQ.0) THEN
         JBTAP=NLINK('BTAP',NPER)
      ELSE
         JBTAP=NLINK('BTPN',NPER)
      ENDIF
      IF (JBTAP.EQ.0) GO TO 900
      KBTAP=KROW(JBTAP,IBTAP)
      CALL ALSTIN(IW(KBTAP+JBTPVS),2,TAPE)
C Pointers to 'BRLI' and list of runs from 'BRLI' :
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      IF (IBRL1.EQ.0.OR.IBRL2.EQ.0) GO TO 999
      JBRLI=NLINK('BRLI',NPER)
      IF (JBRLI.EQ.0) GO TO 900
      DO 100 IBRLI=IBRL1,IBRL2
         KBRLI=KROW(JBRLI,IBRLI)
         NRUB=NRUB+1
         LIRUB(NRUB)=IW(KBRLI+JBRLRN)
 100  CONTINUE
C Comment from 'BSPF' :
      IBSPF=IW(KBSET+JBSEBS)
      JBSPF=NLINK('BSPF',NPER)
      IF (JBSPF.EQ.0) GO TO 900
      KBSPF=KROW(JBSPF,IBSPF)
      CALL ALSTIN(IW(KBSPF+JBSPCO),20,COMEN)
      CALL CLTOU(COMEN)
      INDA=INDEX(COMEN,'OF RUNS')
C Special treatment for 1995 Data POTs and DST's written on DLTs :
      IF (TAPE(1:2).NE.'AS'.OR.NPER.GT.1000) GO TO 110
      IPROB=1
      IF (NRUB.LE.11) GO TO 500
      COMNW=' '
      COMNW=DANA(1:3)//' of 22 runs from Run       to Run '
      WRITE ( COMNW(8:9) , '(I2)' )  NRUB
      CALL INTSOR(LIRUB,NRUB)
      WRITE ( COMNW(25:29) , '(I5)' )  LIRUB(1)
      WRITE ( COMNW(38:42) , '(I5)' )  LIRUB(NRUB)
      GO TO 610
 110  CONTINUE
C Incorrect global comment :
      IF (COMEN(1:3).NE.DANA(1:3)) THEN
         WRITE ( LWRDBG,1012) NPER,ISET,TAPE,DANA,COMEN(1:LNBLNK(COMEN))
         GO TO 999
      ENDIF
      IF (INDA.EQ.0) THEN
         WRITE ( LWRDBG,1022) NPER,ISET,TAPE,COMEN(1:LNBLNK(COMEN))
         GO TO 999
      ENDIF
C Now extract list of runs from comment :
      ILRR=LNBLNK(COMEN)-(INDA+6)
      NLRUS=ILRR/6
      IF (NLRUS.EQ.0) THEN
         WRITE ( LWRDBG,1022) NPER,ISET,TAPE,COMEN(1:LNBLNK(COMEN))
         GO TO 999
      ENDIF
      ISTART=INDA+8
      DO 200 INR=1,NLRUS
         CRUN=COMEN(ISTART:ISTART+4)
         IF (CRUN.EQ.' '.OR.LNBLNK(CRUN).NE.5) THEN
            WRITE ( LWRDBG,1032 ) NPER,ISET,TAPE,INR,CRUN,COMEN
            GO TO 190
         ENDIF
         NRUC=NRUC+1
         LIRUC(NRUC)=BKINCA(CRUN)
 190     ISTART=ISTART+6
 200  CONTINUE
C
C Now compare the list of runs from 'BRLI' and from the comment :
C
      IPROB=0
      IF (NRUB.NE.NRUC) THEN
         WRITE ( LWRDBG,1042 ) NPER,ISET,TAPE,NRUB,NRUC,COMEN
         IPROB=1
         GO TO 500
      ENDIF
      IF (NRUB.GT.15) THEN
      WRITE ( LWRDBG,1062 ) NPER,ISET,TAPE,(LIRUB(KK),KK=1,NRUB),
     +                      COMEN
         GO TO 999
      ENDIF
      DO 300 IR=1,NRUB
         IF (LIRUB(IR).EQ.LIRUC(IR))  GO TO 300
         WRITE ( LWRDBG,1052 ) NPER,ISET,TAPE,IR,COMEN,
     +                        (LIRUB(KK),KK=1,NRUB)
         IPROB=1
         GO TO 500
300   CONTINUE
500   IF (IPROB.EQ.0) GO TO 999
C
C One has to build the new comment from the LIRUB list :
C
      COMNW=' '
      COMNW=DANA(1:3)//' of runs'
      LNB=LNBLNK(COMNW)
      ISTART=LNB+2
      DO 600 IRR=1,NRUB
         WRITE (COMNW(ISTART:ISTART+4) , '(I5)' ) LIRUB(IRR)
         ISTART=ISTART+6
 600  CONTINUE
C Modify the comment in the 'BSPF' bank according to 'BRLI' :
 610  CONTINUE
      CALL ALINST(COMNW,LICO(1),IBIDE)
      CALL UCOPY(LICO(1),IW(KBSPF+JBSPCO),20)
      IFRUN=IW(KBSET+JBSEFR)
      ILRUN=IW(KBSET+JBSELR)
      WRITE ( LWRDBG,1072) IFRUN,ILRUN,COMNW
      IMOD=1
      GO TO 999
C Missing bank
 900  IER=1
 999  return
C-----------------------------------------------------------------------
 1012 FORMAT (/' ++ 1012 Period,Iset,Tape,data =',2i6,2x,a8,2x,a4/,
     +        10x,' >>> Comment :',2x,a80)
 1022 FORMAT (/' ++ 1022 Period,Iset,Tape =',2i6,2x,a8/10x,
     +        ' >>> ANOMALOUS comment :',2x,a80)
 1032 FORMAT (/' ++ 1032 Period,Iset,Tape =',2i6,2x,a8/10x,
     +        ' INR,CRUN =',I5,2X,A5,/10X,' @@ COMMENT =',2X,A80)
 1042 FORMAT (/' 1042 ++ Period,Iset,Tape =',2i6,2x,a8,' NRUB,NRUC=',
     +        2I6,/10X,' @@ COMMENT =',2X,A80)
 1052 FORMAT (/' 1052 ++ Period,Iset,Tape ,IR =',2i6,2x,a8,I6,
     +         /10X,'@@ COMMENT =',2X,A80,
     +         /10X,'*** LIRUB =',10I11)
 1062 FORMAT (/' ++ Period,Iset,Tape =',2i6,2x,a8/10x,' ** LIRUB  ',
     +        'HAS TOO MANY RUNS !',15I6,/10X,' @@ COMMENT =',2X,A80)
 1072 FORMAT (5X,' ===> COMMENT MODIFIED ! IFRUN,ILRUN BSET =',2I6,
     +        /10X,' >>> NEW COMMENT =',2X,A80)
      end
      SUBROUTINE BKVRDLT(IBD,IDL)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Looks if a CERN dataset has a copy on DLT
C J. Boucrot  28-02-1997
C Called from BKSTODAT                           from  BOOKLIB
C Calls  BKCHHO                                  from  BOOKLIB
C Calls  ALSTIN                                  from  ALEPHLIB
C Input argument :
C  IBD  = row of dataset in bank BDFS
C Output argument :
C   IDL = 1 if datasets found on DLT
C       = 0 otherwise or if the dataset is already a DLT
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER*8 TAPIN,TAPCO
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IDL=0
      IDCOP=0
      IF (IMCDAT.LT.1.OR.IMCDAT.GT.2) GO TO 999
      JBDFS=NLINK('BDFS',IMCDAT)
      KBDFS=KROW(JBDFS,IBD)
      ICOP=IW(KBDFS+JBDFCO)
C Check if the present dataset is a DLT:
      CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPIN)
      CALL BKCHHO(TAPIN,ICERN,IHOML,IMULT,IEXA,IDLT,I3490,IEROR)
      IF (IDLT.EQ.2.AND.ICERN.NE.IMCDAT) ICERN=IMCDAT
C If it's a Master DLT, quit; otherwise check if the master itself is a
      IF (ICERN.EQ.IMCDAT.AND.IDLT.GT.0) THEN
         IF (ICOP.NE.0) THEN
            IF (IDLT.EQ.1) GO TO 800
            IDCOP=1
            GO TO 50
         ELSE
            GO TO 999
         ENDIF
      ENDIF
C
C This dataset is not a DLT, or is a copy on DLT :
C try all neighbouring tapes with same NPER,NROW :
C
 50   NBDFS=LROWS(JBDFS)
      IBDF1=MAX0(1,IBD-10)
      IBDF2=MIN0(NBDFS,IBD+10)
      NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      IDLO=0
      DO 100 LBD=IBDF1,IBDF2
         IF (LBD.EQ.IBD) GO TO 100
         KBD=KROW(JBDFS,LBD)
         IF (IW(KBD+JBDFNP).NE.NPER) GO TO 100
         IF (IW(KBD+JBDFNR).NE.NROW) GO TO 100
         CALL ALSTIN(IW(KBD+JBDFTC),2,TAPCO)
         CALL BKCHHO(TAPCO,ICERC,IHOMC,IMULC,IEXC,IDLC,I3490,IEROR)
         IF (IEROR.NE.0) GO TO 100
         IF (IMCDAT.EQ.2.AND.ICERC.EQ.2.AND.IDLC.EQ.1) IDLO=1
         IF (IMCDAT.EQ.1.AND.ICERC.EQ.1.AND.IDLC.EQ.1) IDLO=1
C A DLT copy exists, the present dataset is not one: SKIP
         IF (IDLO.EQ.1) THEN
            IF (IDCOP.EQ.0) THEN
               GO TO 800
            ELSE
C The master dataset is itself a DLT whereas the present dataset is a co
C on DLT: SKIP
               IF (IW(KBD+JBDFCO).EQ.0) GO TO 800
            ENDIF
         ENDIF
 100  CONTINUE
      GO TO 999
C A DLT copy has been found:
 800  IDL=1
 999  RETURN
      END
      SUBROUTINE BKVRFIRU(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Verifies user's input from cards for run/fill/year selection
C J. Boucrot  04-11-1996   modified 15-10-1998
C Called from BKRUCA                                     from  BOOKLIB
C Calls AUBOS,BKINCA                                     from ALEPHLIB
C Calls BKFIYE,BKFPFI,BKVYEAR,BKRUYE                     from  BOOKLIB
C  Output argument  :
C           IER = 0  all OK
C               = 1  error in the user's input
C  Common variables defined in this routine :
C     ISRUNF,ISRUNL,ISYEAR  in / BKKEYS /
C     IRUNSL,IFILSL,IYEASL  in / BKKEYS /
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
C Fills :
      JSFIL=IW(NAMIND('SFIL'))
      IF (JSFIL.GT.0) THEN
         IFILSL=1
         IFILF=IW(JSFIL+1)
         NFILF=IW(JSFIL)
         IF (NFILF.EQ.1) THEN
            ISFLL=IFILF
         ELSE
            ISFLL=IABS(IW(JSFIL+NFILF))
         ENDIF
         IF (ISFLL.LT.IFILF) GO TO 910
C Check that fills don't span over more than 1 year :
         CALL BKFIYE(LU,IFILF,ISFLL,IRBAD)
         IF (IRBAD.NE.0) GO TO 910
C Check the existence of IFILF,ISFLL :
         CALL BKFPFI(IFILF,IFFNW,NP1,NRMI1,NRMX1,IBRRC,IER1)
         CALL BKFPFI(ISFLL,IFLNW,NP2,NRMI2,NRMX2,IBRRC,IER2)
         IF (IER1.EQ.1.OR.IER2.EQ.1) GO TO 910
         IF (IFILF.EQ.ISFLL.AND.IFFNW.NE.IFILF) GO TO 910
C Define ISRUNF,ISRUNL :
         ISRUNF=NRMI1
         ISRUNL=NRMX2
      ENDIF
C Runs :
      JSRUN=IW(NAMIND('SRUN'))
      IF (JSRUN.GT.0) THEN
         IRUNSL=1
         ISRUNF=IW(JSRUN+1)
         NSRUN=IW(JSRUN)
         IF (NSRUN.EQ.1) THEN
            ISRUNL=ISRUNF
         ELSE
            ISRUNL=IABS(IW(JSRUN+NSRUN))
         ENDIF
      ENDIF
C Year :
      IF (IRUNSL.EQ.0.AND.IFILSL.EQ.0) THEN
         IYEASL=1
         CALL BKVYEAR(IERY)
         IF (IERY.NE.0) GO TO 910
      ENDIF
C Verifications :
      IF (ISRUNF.GT.NRUMAX) GO TO 910
      IF (ISRUNL.LT.ISRUNF) GO TO 910
      CALL BKRUYE(LWRUSR,IRBAD)
      IF (IRBAD.NE.0) GO TO 910
      GO TO 999
C Error :
 910  IER=1
 999  RETURN
      END


      SUBROUTINE BKVRUYE(LU,INUS,IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Decodes and verifies user's input for run selection
C J. Boucrot  21-09-1996    Mod for X11 13-10-1997
C Called from BKSRUN                                     from  BOOKLIB
C Calls AUBOS,BKINCA                                     from ALEPHLIB
C Calls BKRUYE,PRWARNX11                                 from  BOOKLIB
C Calls INTSOR                                           from  KERNLIB
C Input arguments :
C    LU   = unit for user's dialogue
C   INUS  = user's input string to define runs
C  Output argument  :
C           IER = 0  all OK
C               = 1  error in the user's input
C               = 2  no room to book/enlarge bank 'SRUN'
C  Common variables defined in this routine :
C     ISRUNF,ISRUNL,ISYEAR  in / BKKEYS /
C  The SRUN bank is filled from the user's input runs
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
      CHARACTER SEPT*1,SEPR*1,TEXT*80
      CHARACTER*(*) INUS
      INTEGER BKINCA,LISRU(NDSMX)
      DATA SEPT,SEPR  / '/' , ',' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C
      IER=0
      CALL CLTOU(INUS)
      NFOUN=0
      CALL VZERO(LISRU,NDSMX)
      JBLAS=NLINK('BLAS',1)
      IF (JBLAS.EQ.0) GO TO 920
      KBLAS=KROW(JBLAS,1)
      LASRD=IW(KBLAS+JBLALO)
C Range of runs :
      INNUS=INDEX(INUS,SEPT)
      IF (INNUS.NE.0) THEN
         ISRUNF=BKINCA(INUS(1:INNUS-1))
         IF (ISRUNF.GT.LASRD.OR.ISRUNF.LT.LRUNMC) GO TO 901
         ISRUNL=BKINCA(INUS(INNUS+1:LNBLNK(INUS)))
         IF (ISRUNL.LT.ISRUNF) GO TO 901
         IF (ISRUNL.GT.LASRD) ISRUNL=LASRD
         IF (ISRUNL.LT.LRUNMC) GO TO 901
C Check that runs don't span over more than 1 year :
         CALL BKRUYE(LU,IRBAD)
         IF (IRBAD.EQ.1) GO TO 910
         CALL AUBOS('SRUN',0,2,JSRUN,IGARB)
         IF (IGARB.EQ.2) GO TO 920
         IW(JSRUN+1)=ISRUNF
         IW(JSRUN+2)=-ISRUNL
         CALL AUBOS('SRUI',0,2,JSRUI,IGARB)
         IF (IGARB.EQ.2) GO TO 920
         IW(JSRUI+1)=ISRUNF
         IW(JSRUI+2)=-ISRUNL
         GO TO 999
      ENDIF
C List of runs :
      INLIS=INDEX(INUS,SEPR)
      LOUT=LNBLNK(INUS)
      IF (INLIS.EQ.0) THEN
         IN1=1
         IN2=LOUT
         GO TO 30
      ENDIF
      IN1=1
      IN2=INLIS-1
 30   CONTINUE
      NRLU=BKINCA(INUS(IN1:IN2))
      IF (NRLU.LT.NRUMIN) GO TO 35
      NFOUN=NFOUN+1
      IF (NFOUN.GT.NDSMX) GO TO 40
      LISRU(NFOUN)=NRLU
 35   IF (IN2.GE.LOUT) GO TO 40
      IN1=IN1+INLIS
      INLIS=INDEX(INUS(IN1:LOUT),SEPR)
      IN2=IN1+INLIS-2
      IF (INLIS.EQ.0) IN2=LOUT
      GO TO 30
C
C Sort the list by increasing run # , then fill SRUN :
C
 40   IF (NFOUN.EQ.0) GO TO 901
      CALL INTSOR(LISRU,NFOUN)
      ISRUNF=LISRU(1)
      IF (ISRUNF.LT.LRUNMC.OR.ISRUNF.GT.LASRD) GO TO 901
      ISRUNL=LISRU(NFOUN)
      IF (ISRUNL.LT.ISRUNF) GO TO 901
      IF (ISRUNL.LT.LRUNMC) GO TO 901
      IF (ISRUNL.GT.LASRD) ISRUNL=LASRD
C Check that runs don't span over more than 1 year :
      CALL BKRUYE(LU,IRBAD)
      IF (IRBAD.EQ.1) GO TO 910
      CALL AUBOS('SRUN',0,NFOUN,JSRUN,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      CALL UCOPY(LISRU(1),IW(JSRUN+1),NFOUN)
      CALL AUBOS('SRUI',0,NFOUN,JSRUI,IGARB)
      IF (IGARB.EQ.2) GO TO 920
      CALL UCOPY(LISRU(1),IW(JSRUI+1),NFOUN)
      GO TO 999
C-----------------------------------------------------------------------
C incorrect input :
C For X11 execution, open a warning window :
 901  IF (IBKINT.NE.-1) GO TO 910
      TEXT=' '
      TEXT='Incorrect run selection !'
      CALL PRWARNX11(TEXT)
 910  IER=1
      GO TO 999
C No room for bank 'SRUN' :
 920  IER=2
C
 999  RETURN
      END
      SUBROUTINE BKVRX11(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Auxiliary to BKVERAL : verifications before X11 execution
C  J. Boucrot 23-Sep-1996
C  Called from BKVERAL                              from BOOKLIB
C  Calls BKVYEAR,BKRUYE,BKFIYE                      from BOOKLIB
C Output argument :
C   IER = 1 if problems which imply to stop execution
C       = 0 if all OK
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      COMMON / RSELX11 / IRFLX11,ISRUF11,ISRUL11,ISYEA11
C-----------------------------------------------------------------------
      IER=0
      LU=LWRUSR
      IF (IDSEAR.EQ.8) IMCDAT=0
      IF (IDSEAR.EQ.2) IDASEL=3
      IF (IMCDAT.EQ.1) ISELPA=-1
      IF (IMCDAT.EQ.2) IDSEAR=4
      IF (IMCDAT.EQ.2.AND.ILABCH.LE.0) ILABCH=1
      IF (IDSEAR.EQ.5.AND.IB1RUN.GT.0) THEN
         IDASEL=0
         SELDAT='A'
         ILABCH=-1
      ENDIF
      IF (IDASEL.GT.0.AND.IDASEL.LE.8) SELDAT=DNADAT(IDASEL)(1:1)
      IF (IDSEAR.EQ.4.AND.IMCDAT.NE.2) THEN
         WRITE (LU,1001) IDSEAR,IMCDAT
         GO TO 900
      ENDIF
      IF (IMCDAT.EQ.2.AND.IWFILI.EQ.0) IWFILI=2
        CALL BKPHY11
      IF (IDSEAR.EQ.4.OR.IDSEAR.EQ.5) GO TO 999
C Fill common /DATX11/ if needed :
      CALL BKINPROC
C Selection was done on Year :
      IF (IYEASL.NE.0) THEN
         IF (ISYEAR.LT.LISYEA(1).OR.ISYEAR.GT.LISYEA(NTOYEA-1)) THEN
            WRITE (LU,1002)  ISYEAR
            GO TO 900
         ENDIF
      ENDIF
C Selection was done on RUNS :
        IF (IRFLX11.GT.0) THEN
         ISYEAR=ISYEA11
         ISRUNF=ISRUF11
         ISRUNL=ISRUL11
         GO TO 999
      ENDIF
C Verify consistency runs/year :
      IF (IRUNSL.NE.0.OR.IFILSL.NE.0) THEN
         CALL BKRUYE(LU,IRBAD)
         IF (IRBAD.NE.0) GO TO 900
      ENDIF
      GO TO 999
C Error found :
 900  IER=1
C Raw LEP1: make sure to define flags correctly
 999  CONTINUE
      IF (ISYEAR.LE.1990) THEN
         IDLCRW=0
         IRAWAA=1
         IRAWD2=0
         IRAWD1=0
      ELSE
         IRAWAA=0
         IDLCRW=1
         IF (ISYEAR.GE.1995) THEN
            IRAWD1=1
            IRAWD2=0
         ELSE
            IRAWD1=0
            IRAWD2=1
         ENDIF
      ENDIF
      RETURN
 1001 FORMAT (/' ==> Wrong combination IDSEAR,IMCDAT =',2I7)
 1002 FORMAT (/' ==> Wrong year of data taking  =',I7)
      END
      SUBROUTINE BKVYEAR(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Defines ISYEAR from ISRUNF,L or vice-versa
C J. Boucrot  23-09-1996
C Called from BKSRUN,BKCASI,BKRUCA        from BOOKLIB
C Calls AUBOS                             from ALEPHLIB
C Output argument :
C    IER = 0 if all OK
C        = 1 if no room for BOS banks , or ISYEAR wrong
C Variables verified ir defined in this routine :
C   ISYEAR,ISRUNF,ISRUNL     in /BKKEYS/
C Bank built : 'SRUN'
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-----------------------------------------------------------------------
      IER=0
C Define ISYEAR if not yet done , from ISRUNF and ISRUNL
      IF (ISYEAR.GT.0) THEN
          IF (IBKINT.NE.-1) THEN
             GO TO 600
          ELSE
             IF (IYEASL.NE.0) GO TO 600
          ENDIF
      ENDIF
      DO 500 IZ=1,NTOYEA
         IF (ISRUNF.LT.LISFRU(IZ).OR.ISRUNF.GE.LISFRU(IZ+1)) GO TO 500
         ISYEAR=LISYEA(IZ)
         GO TO 999
 500  CONTINUE
      GO TO 999
C-----------------------------------------------------------------------
C Define ISRUNF and ISRUNL from ISYEAR , if necessary :
 600  IF (IBKINT.EQ.1.AND.(ISRUNF.GT.0.OR.ISRUNL.GT.0)) GO TO 999
      IYOK=0
      DO 700 IZ=1,NTOYEA-1
         IF (ISYEAR.NE.LISYEA(IZ)) GO TO 700
         IYOK=1
         ISRUNF=LISFRU(IZ)
         ISRUNL=LISFRU(IZ+1)-1
         IF (ISYEAR.EQ.1995) THEN
            IF (ILP195.EQ.1) ISRUNL=MXLRU1
            IF (ILP195.EQ.0) ISRUNF=MXLRU1+1
         ENDIF
         IF (IW(NAMIND('SRUN')).GT.0) GO TO 999
         CALL AUBOS('SRUN',0,2,JSRUN,IGARB)
         IF (IGARB.EQ.2) GO TO 900
         IW(JSRUN+1)=ISRUNF
         IW(JSRUN+2)=-ISRUNL
         GO TO 999
 700  CONTINUE
      IF (IYOK.EQ.0) GO TO 900
      GO TO 999
C ----------------------------------------------------------------------
C No room for BOS banks :
 900  IER=1
C
 999  RETURN
      END
      SUBROUTINE BKWRIT
C ----------------------------------------------------------------------
C! Writes a Bookkeeping description file
CKEY ALBOOK WRITE / INTERNAL
C  J. Boucrot                     2-Nov-1988
C  Modified J. Boucrot 25-Jun-1996 for UNIX
C  Modified J. Boucrot 17-Jan-1999 for BKWRKSEC
C Called from BKENJO                                from BOOKLIB
C Calls BLIST,BWRITE                                from BOS77
C Calls BKWRKSEC                                    from BOOKLIB
C Calls AUBPRS                                      from ALEPHLIB
C Calls system                                      from GENLIB
C  Purpose :
C   Writes the Bookkeeping production output file , on the
C   on Fortran unit LBOORL defined by BKOPEN
C   On UNIX, send the Bookkeeping file by mail to alsoft
C   and if necessary write the information on KSEC for MCarlo datasets
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER USER*12
C-----------------------------------------------------------------------
C Check if the output unit is defined
      IF (LBOORL.LE.0) GO TO 999
C Write the informations concerning the 'KSEC' bank, if needed:
      CALL BKWRKSEC
C
C Clear 'T' list and put ALL bookkeeping banks on it :
C
      CALL BLIST(IW,'T=','0')
      CALL BLIST(IW,'T=',LISBKB)
      CALL AUBPRS('T')
C
C Write the Bookkeeping banks on unit LBOORL :
C
      CALL BWRITE(IW,LBOORL,'T')
      CALL BWRITE(IW,LBOORL,'0')
C
C On UNIX machines , execute the command cp_als to send the Bookkeeping
C to the reader of the Bookkeeping account on CERNVM
      CLOSE (LBOORL)
C Don't send and remove the bookkeeping file for TEST jobs in ALBOOK :
      IF (IW(NAMIND('BTST')).GT.0) GO TO 999
      USER=' '
      USER=USERLG(1:LNBLNK(USERLG))
      CALL CLTOU(USER)
C Do not send files created by alprod/alrepro on UNIX :
      IF (INDEX(USER,'ALPROD').GT.0.OR.
     +    INDEX(USER,'ALREPR').GT.0)   GO TO 999
      CALL SYSTEM('Mail -s '//NAMBKF(:LNBLNK(NAMBKF))//
     +  ' alsoft@aloha.cern.ch < '//NAMBKF(:LNBLNK(NAMBKF)))
C
 999  RETURN
      END
      SUBROUTINE BKWRKSEC
C ----------------------------------------------------------------------
C! Writes a file describing the KSEC informations
CKEY ALBOOK WRITE / INTERNAL
C  J. Boucrot                  17-Jan-1999
C Called from BKWRIT                                from BOOKLIB
C Calls BKEXFI,BKCTIM                               from BOOKLIB
C Calls ALSTIN                                      from ALEPHLIB
C Calls system                                      from GENLIB
C  Purpose :
C   Write the information on KSEC for MCarlo datasets
C ----------------------------------------------------------------------
      SAVE
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- KSECJJ ----
      PARAMETER(JKSEGI=1,JKSEGV=2,JKSEGN=3,JKSEAN=4,JKSEGX=5,JKSEGE=6,
     +          JKSEAX=7,JKSEAE=8,LKSECA=8)
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      PARAMETER ( IFAGA = 1000 , NSPKC = 100000 )
      COMMON / KSECDA / IKINSEC,IKINVSN,IEVNTAC,XSECTAC,XSECERR
      CHARACTER USER*12,TAPE*8,TAP*6,COMM*80,TAPFI*10,LINE*100
      CHARACTER MAINDIR*44,FILOU*80,CL1*40,CLA*46,CLB*48,CL2*94,CL3*52
      DATA MAINDIR / '/afs/cern.ch/user/a/albook/public/ksecfiles/'  /
      DATA CL1 / '* Tape_file#    Comment from production ' /
      DATA CLA / '* Kincod Data Year  Run  Energy  Rmar1  Rmar2 ' /
      DATA CLB / ' Kinver Galver Julver  Minver DBASver  Date proc' /
      DATA CL3 /'* KSEC Events  Cross-Section nb  Cross-Section error'/
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      CL2=CLA//CLB
C Check if there was a 'KSEC' bank in this processing:
      IF (IKINSEC.LE.0) GO TO 999
C Check if the job is run for albook:
      USER=' '
      USER=USERLG(1:LNBLNK(USERLG))
      CALL CLTOU(USER)
      IF (INDEX(USER,'ALBOOK').EQ.0) GO TO 999
C Check if the Bookkeeping banks are present :
      JBSET=NLINK('BSET',0)
      IF (JBSET.LE.0) GO TO 999
      JBSPF=NLINK('BSPF',0)
      IF (JBSPF.LE.0) GO TO 999
      JBPRO=NLINK('BPRO',0)
      IF (JBPRO.LE.0) GO TO 999
      JBTAP=NLINK('BTAP',0)
      IF (JBTAP.LE.0) GO TO 999
C Extract the quantities needed from 'BSPF':
      KBSPF=KROW(JBSPF,1)
      IKINBS=ITABL(JBSPF,1,JBSPKC)
      IF (IKINBS.NE.IKINSEC) GO TO 999
      IRANM1=ITABL(JBSPF,1,JBSPFR)
      IRANM2=MOD(ITABL(JBSPF,1,JBSPSR),NSPKC)
       CALL BKY2K(IW(KBSPF+JBSPRG),100,IGEOM)
      CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMM)
C Extract the quantities needed from 'BSET':
      KBSET=KROW(JBSET,1)
      IRUNBK=IW(KBSET+JBSEFR)
      IENGY =IW(KBSET+JBSEBN)
      INADA=IW(KBSET+JBSEND)
      INDAT=MOD(INADA,10)
C Find the date of processing :
      CALL BKCTIM(NAMBKF(7:17),IYEA,IMON,IDAY,IHOU,IMIN,ISEC)
      IDATE=IDAY+100*IMON+10000*IYEA
C Extract the quantities needed from 'BPRO':
      KBPRO=KROW(JBPRO,1)
      IPVER=IW(KBPRO+JBPRVN)
      IGAJU=IW(KBPRO+JBPRCV)
      IJULV=IGAJU/IFAGA
      IGAVER=IGAJU-IFAGA*IJULV
      IJUVER=IJULV
      IF (INDAT.EQ.3.OR.INDAT.EQ.4) IJUVER=IPVER
      IMIVER=0
      IF (INDAT.EQ.5) IMIVER=IPVER
      IDBAS=IW(KBPRO+JBPRDN)
      IFILT=IW(KBPRO+JBPRDD)
      IF (IFILT.LE.0) GO TO 999
C Extract the quantities needed from 'BTAP':
      KBTAP=KROW(JBTAP,1)
      CALL ALSTIN(IW(KBTAP+JBTAVS),2,TAPE)
      TAP=TAPE(1:6)
C Build the tape_file name :
      CALL BKEXFI(3,TAP,IFILT,IER)
      IF (IER.NE.0) GO TO 999
      TAPFI=AXEDNW
C-----------------------------------------------------------------------
C All OK ; open the output file :
C
      filou=' '
      filou=maindir//tapfi(1:lnblnk(tapfi))//'.ksecout'
      ll=lnblnk(filou)
      call system(' rm -f '//filou(1:ll))
      open (lwruuu, file=filou, status='NEW')
      rewind (lwruuu)
C First two lines: tape and comment:
      LINE =' '
      LINE=CL1(1:LNBLNK(CL1))
      WRITE (LWRUUU, '(A100)' ) LINE
      WRITE (LWRUUU,1001) TAPFI,COMM
C Two further lines: informations on dataset:
      LINE =' '
      LINE=CL2(1:LNBLNK(CL2))
      WRITE (LWRUUU, '(A100)' ) LINE
      WRITE (LWRUUU,1002) IKINBS,DNADAT(INDAT),IGEOM,IRUNBK,IENGY,
     +                    IRANM1,IRANM2,IKINVSN,IGAVER,IJUVER,IMIVER,
     +                    IDBAS,IDATE
C Two last lines : infos from KSEC :
      LINE =' '
      LINE=CL3(1:LNBLNK(CL3))
      WRITE (LWRUUU, '(A100)' ) LINE
      WRITE (LWRUUU,1003) IEVNTAC,XSECTAC,XSECERR
      CLOSE (LWRUUU)
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (2X,A10,4X,A80)
 1002 FORMAT (1X,I5,3X,A4,2(1X,I4),2X,I6,
     +        2(2X,I5),3X,I5,3X,I4,2X,I5,4X,I4,
     +        4X,I4,5X,I6)
 1003 FORMAT (2X,I6,8X,F10.6,10X,F10.6)
      END
      SUBROUTINE BKWRVX
C----------------------------------------------------------------------
CKEY LISTSCAN / VAX
C! Write ALWS file RUNFILES.LIST  ( ALWS Only )
C  Author  J. Boucrot 20-Sep-1993
C  Called from BKLISF
C  Calls AUBPRS,ALSTIN                                   from ALEPHLIB
C  Calls BKSORT                                          from BOOKLIB
C----------------------------------------------------------------------
 999  RETURN
 1001 FORMAT (A)
      END
      SUBROUTINE BKWSBOS(NAME)
C----------------------------------------------------------------------
C CKEY STEER
C! Writes a file for control of some BOS statistics
C  Author  J.Boucrot  17-Aug-1999
C Called from BKUPDF,BKLISF,BKSQLA        from  BOOKLIB
C  Input  argument :
C  NAME = name of process being run
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      PARAMETER ( NFTA = 50 )
      CHARACTER*(*) NAME
      CHARACTER FNPR*80
C-----------------------------------------------------------------------
C Open the output file :
      FNPR=' '
      FNPR=ALS_TEMP(1:ILTEMP)//NAME(1:LNBLNK(NAME))//'.bossurvey'
      FNPR=FNPR(1:LNBLNK(FNPR))
      CALL SYSTEM(' rm -f '//FNPR)
      OPEN ( LWRTMP , FILE = FNPR , STATUS = 'NEW' , ERR = 999 )
      WRITE (LWRTMP,1001) name(1:lnblnk(name)),iw(12)
      WRITE (LWRTMP,1002) (IW(KK),KK=38,50)
      CLOSE (LWRTMP)
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (' === BKWSBOS for',2x,a10,' --> BOS array =',i12)
 1002 FORMAT ('     Nb of drops =',I6,' Nb of BGARB,WGARB =',2i6/
     +        '     Histo of space used =',10i6)
      END
      SUBROUTINE BKWSEQ(LUN,IFAIL)
C----------------------------------------------------------------------
CKEY STEER
C! Write Bookkeeping banks on SEQ EPIO FILE
C  Author J.Boucrot 30-Aug-1989
C  Modified  AM. Lutz  30-MAR-1990  - simplified 06-Mar-1992
C  UNIX Version 06-Oct-1995
C Called from BKCLOD                                      from BOOKLIB
C Calls AOPENW,ACLOSE,KALREC,AUBPRS                       from ALEPHLIB
C Calls BWRITE,BGARB,BDROP,BUNIT                          from BOSLIB
C Calls BKSYSM,BKINFM,BKSORT,BKTASP                       from BOOKLIB
C Calls VMCMS                                             from GENLIB
C  Input argument :
C   LUN  = FORTRAN unit to write this SEQ
C  Output argument :
C       IFAIL = 0    IF ALL OK
C             = 1    IF SEQ file cannot be opened
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER FMS*90,FNOU*20,DSK*1,DFWRI*5,MESG*80,JNAM*14
      CHARACTER AUX*40,LISTB*120,YENO*1,VLOC*8,TASK*4,CODE*8
      CHARACTER*80 FIOU,FICO
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IFAIL=0
      MESG=' '
      IF (IW(NAMIND('NOWR')).NE.0) GO TO 1000
C Drop all unused banks which may be present :
      CALL BDROP(IW,'BRUNBRLNBFDSBNAMBTFIRUNF')
      CALL BGARB(IW)
      MESG='  '
      LOU=0
      DSK=' *'
      CALL BKINFM
      LISTB ='BPROBRLIBSETBSPFBTPNBDATBPERBRUCBDFSBOFS'//
     +       'BKLIBRANBLPRBLASBMCLBPHYBDADBPLIBYEABSLU'//
     +       'BKMCBKMDBKMNBDRQBS4BBSCLBTHOBKM7BRDL    '
      IF(NMODIF.EQ.0) GO TO 999
      CALL AUBPRS(LISTB)
C Define units and names :
      IF (LUN.EQ.LECDAF) THEN
         LOU=LWRSEQ
         DFWRI='BOOK '
         DSK=DSMODA
      ENDIF
      IF (LOU.EQ.0) GO TO 999
C
C Open the SEQ file for writing in EPIO   format :
C
      FMS=' '
      FMS=ALS_TEMP(1:ILTEMP)//'alebook.outseq'
      FMS=FMS(1:LNBLNK(FMS))
      CALL AOPENW(LOU,FMS,'EPIO','DISK',IER)
      IF (IER.NE.0) THEN
         MESG='Cannot open the SEQ file'
         IFAIL=1
         GO TO 999
      ENDIF
C-----------------------------------------------------------------------
C Sort the 'BRUC' banks by increasing run numbers :
      JBRUC=NAMIND('BRUC')+1
 200  JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 201
      INPER=IW(JBRUC-2)
      CALL BKSORT('BRUC',INPER,JBRURN,IERS)
      IF(IERS.EQ.2) THEN
         MESG=' Not enough space for work banks in BKSORT'
         IFAIL=10
         GO TO 999
      ENDIF
      GO TO 200
 201  CONTINUE
C Sort the 'BSLU' banks by increasing run numbers :
      JBSLU=NAMIND('BSLU')+1
 300  JBSLU=IW(JBSLU-1)
      IF (JBSLU.EQ.0) GO TO 301
      INPER=IW(JBSLU-2)
      CALL BKSORT('BSLU',INPER,JBSLRN,IERS)
      IF(IERS.EQ.2) THEN
         MESG=' Not enough space for work banks in BKSORT'
         IFAIL=10
         GO TO 999
      ENDIF
      GO TO 300
 301  CONTINUE
C Sort the 'BDRQ' banks by increasing run numbers :
      JBDRQ=NAMIND('BDRQ')+1
 400  JBDRQ=IW(JBDRQ-1)
      IF (JBDRQ.EQ.0) GO TO 401
      INPER=IW(JBDRQ-2)
      CALL BKSORT('BDRQ',INPER,JBDRRN,IERS)
      IF(IERS.EQ.2) THEN
         MESG=' Not enough space for work banks in BKSORT'
         IFAIL=10
         GO TO 999
      ENDIF
      GO TO 400
 401  CONTINUE
C Write all banks on the output SEQ file :
      LENB=LNBLNK(LISTB)
      LISTB=LISTB(1:LENB)
      CALL BWRITE(IW,LOU,LISTB)
      CALL BWRITE(IW,LOU,'0')
      CALL ACLOSE(LOU,IER)
C
C Rename the old .epio file as .oldepio file ( backup ) :
C
      CALL SYSTEM(' mv '//ALS_TEMP(1:ILTEMP)//'alebook.epio '//
     +                    ALS_TEMP(1:ILTEMP)//'alebook.oldepio')
C
C Rename the new .outseq file as epio file ( new database ) :
C
      CALL SYSTEM(' mv '//ALS_TEMP(1:ILTEMP)//'alebook.outseq '//
     +                    ALS_TEMP(1:ILTEMP)//'alebook.epio')
C
 999  CONTINUE
C If necessary , send a message to the appropriate manager :
      LE=LNBLNK(MESG)
      IF (LE.NE.0) CALL BKSYSM(MESG,DFWRI)
C
C For the UPDABOOK job , update the TTAPES SPY file :
C
      IF (IBUPDA.GT.0.AND.IFAIL.EQ.0) THEN
         CALL BKTASP(IEROR)
         IF (IBAUTO.EQ.0) PRINT 1008
         WRITE (LWRDBG,1008)
         CALL BOSTA
C Copy the output debug file onto another one for security :
         CLOSE (LWRDBG)
         FIOU=' '
         FICO=' '
         FIOU=ALS_STAT(1:ILSTAT)//'updabook.debugout'
         FICO=ALS_STAT(1:ILSTAT)//'updabook'//TIMNAN
         CALL SYSTEM(' cp '//FIOU(1:LNBLNK(FIOU))//' '//FICO)
      ENDIF
 1000 RETURN
 1008 FORMAT (/22X,'=== Subroutine BKWSEQ === Writing of files',
     +            ' terminated',/)
      END
      SUBROUTINE BKWSPL(NDBAS,IFAIL)
C----------------------------------------------------------------------
CKEY SPLIDBAS
C! Write Bookkeeping banks of a given year on a BOS CARDS file
C  Author J.Boucrot 27-Feb-1992
C  UNIX Version 06-Oct-1995
C Called from BKSPLI                                      from BOOKLIB
C Calls AOPENW,ACLOSE,AUBPRS                              from ALEPHLIB
C Calls BWRITE,BGARB,BDROP,BWRSB                          from BOSLIB
C Calls BKSYSM,BKSORT,BKTASP                              from BOOKLIB
C Calls VMCMS                                             from GENLIB
C  Input argument :
C  NDBAS = Year database number ( in /BKFILU/ ) to be written
C  Output argument :
C       IFAIL = 0    if ALL OK
C             = 1    if file cannot be opened / written
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      PARAMETER ( NLUIN = 20 , NLUST = 40 )
      CHARACTER FMS*90,FNOUP*20,OLBA*4,OLNOW*4,AUX*40,BANKN*4,FNOUE*20
      CHARACTER*80 MSG,MESG,LININ,LINOU
      CHARACTER*100 LISTB
      CHARACTER*25 FORMB(8)
      DATA FORMB / ' BPRO $FMT 2I,(5A,6I)    ' ,
     +             ' BRLI $FMT (I)           ' ,
     +             ' BSET $FMT 2I,(7A,14I)  ' ,
     +             ' BSPF $FMT 2I,(20A,4I)   ' ,
     +             ' BTPN $FMT 2I,(3A,I)     ' ,
     +             ' BKMC $FMT 2I,(2A,I)     ' ,
     +             ' BKMD $FMT (I)           ' ,
     +             ' BKMN $FMT 2I,(64A)      ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IFAIL=1
      IF (NDBAS.LE.0.OR.NDBAS.GT.NDBTOT) GO  TO 999
      MESG=' '
      CALL BGARB(IW)
      MESG='  '
      LISBKB=BANDBS(NDBAS)
      CALL AUBPRS(LISBKB)
      LOU = NLUIN+NDBAS-1
C
C Open the BOS CARDS FILE :
C
      FMS=' '
      FMS=ALS_TEMP(1:ILTEMP)//PERDBS(NDBAS)//'.boscards'
      FMS=FMS(1:LNBLNK(FMS))
         CALL CUTOL(FMS)
      CALL AOPENW(LOU,FMS,'CARD','DISK',IER)
      IF (IER.NE.0) THEN
         MESG='Cannot open the '//PERDBS(NDBAS)//' BOSCARDS file'
         GO TO 999
      ENDIF
      CALL BUNIT(LOU,'TEXT',80)
C-----------------------------------------------------------------------
C Sort the 'BRUC' banks before writing them on ALEBROOT :
      IF (NDBAS.NE.1) GO TO 201
      JBRUC=NAMIND('BRUC')+1
 200  JBRUC=IW(JBRUC-1)
      IF (JBRUC.EQ.0) GO TO 201
      INPER=IW(JBRUC-2)
      CALL BKSORT('BRUC',INPER,JBRURN,IERS)
      IF(IERS.EQ.2) THEN
         MESG=' Not enough space for work banks in BKSORT'
         IFAIL=10
         GO TO 999
      ENDIF
      GO TO 200
 201  CONTINUE
      CALL BGARB(IW)
C-----------------------------------------------------------------------
      LENB=LNBLNK(LISBKB)
      LISTB=LISBKB(1:LENB)
C For the ROOT database , write all banks altogether :
      IF (NDBAS.EQ.1) THEN
         CALL BWRITE(IW,LOU,LISBKB)
         NWRI=10
         GO TO 301
      ENDIF
C Write in turn all banks for the current Year Database :
      NBKWR=LENB/4
      IP1=1
      IP2=4
      NWRI=0
      DO 300 KN=1,NBKWR
         BANKN=LISTB(IP1:IP2)
         IF (BANKN.EQ.' ') GO TO 301
C Implicit loop on all NRs for this bank :
         JBANK=NAMIND(BANKN)+1
 280     JBANK=IW(JBANK-1)
         IF (JBANK.EQ.0) GO TO 290
         ISAVE=IW(JBANK-1)
         NPR=IW(JBANK-2)
         IF (NPR.LT.NPERMI(NDBAS).OR.NPR.GT.NPERMX(NDBAS)) GO TO 280
         CALL BWRSB(IW,LOU,BANKN,NPR)
         NWRI=NWRI+1
C above statement to overcome the ugly RAZ of pointer in BWRSB :
         IW(JBANK-1)=ISAVE
         GO TO 280
C go to next bank in the list :
 290     IP1=IP1+4
         IP2=IP2+4
 300  CONTINUE
 301  IF (NWRI.EQ.0) GO TO 302
      CALL BWRITE(IW,LOU,'0')
 302  CALL BGARB(IW)
      IF (NWRI.EQ.0) THEN
         IF (IBAUTO.EQ.0) PRINT 1009,NDBAS
         WRITE ( LWRDBG,1009 ) NDBAS
         GO TO 999
      ENDIF
C-----------------------------------------------------------------------
C Now the BOS CARDS FILE must be edited to erase the unwanted ENDQ
C and put the $FMT 's :
C
      LOUP = NLUST+NDBAS-1
      FMS=' '
      FMS=ALS_TEMP(1:ILTEMP)//PERDBS(NDBAS)//'.newcards'
      FMS=FMS(1:LNBLNK(FMS))
      CALL CUTOL(FMS)
      CALL AOPENW(LOUP,FMS,'CARD','DISK',IER)
      IF (IER.NE.0) THEN
         MESG='Cannot open the '//PERDBS(NDBAS)//' NEWCARDS file'
         GO TO 999
      ENDIF
C Read the BOSCARDS file :
      REWIND (LOU)
      IOUP=0
      OLBA='!!!!'
      LINOU=' '
 400  IOUP=IOUP+1
      READ ( LOU , 1003 , END = 450 , ERR = 450 )  LININ
C first lines :
      IF (IOUP.EQ.1) THEN
         LINOU=' * START OF TEXT-RECORD'
         WRITE ( LOUP , 1003 ) LINOU
         LINOU=FORMB(1)
         WRITE ( LOUP , 1003 ) LINOU
         OLBA=LISBKB(1:4)
      ENDIF
      OLNOW=LININ(2:5)
      IF (OLNOW.EQ.'ENDQ') GO TO 400
C format of new bank :
      IF (OLNOW.NE.OLBA.AND.INDEX(LISBKB,OLNOW).GT.0) THEN
         IPO1=5
         IPO2=8
         DO 420 IKO=2,NBKWR
            IF (LISBKB(IPO1:IPO2).NE.OLNOW) GO TO 410
            LINOU=FORMB(IKO)
            WRITE ( LOUP , 1003 ) LINOU
            OLBA=OLNOW
            GO TO 430
 410        IPO1=IPO1+4
            IPO2=IPO2+4
 420     CONTINUE
 430     CONTINUE
      ENDIF
C copy current line :
      LINOU=LININ
      WRITE ( LOUP , 1003 ) LINOU
      GO TO 400
C end of file : put an 'ENDQ' :
 450  LINOU=' ENDQ '
      WRITE ( LOUP , 1003 ) LINOU
C Erase the temporary BOSCARDS file , then close the NEWCARDS one :
      CALL ACLOSE(LOU,IERA)
      IF (IERA.NE.0) GO TO 999
      MSG=ALS_TEMP(1:ILTEMP)//PERDBS(NDBAS)//'.boscards'
      MSG=MSG(1:LNBLNK(MSG))
      CALL CUTOL(MSG)
      CALL SYSTEM(' rm -f '//MSG)
      REWIND (LOUP )
      CALL ACLOSE(LOUP,IERB)
      IF (IERB.NE.0) GO TO 999
      IF (IBAUTO.EQ.0) PRINT 1008,PERDBS(NDBAS)
      WRITE ( LWRDBG,1008 ) PERDBS(NDBAS)
      IFAIL=0
C-----------------------------------------------------------------------
 999  RETURN
 1003 FORMAT (A80)
 1008 FORMAT (/22X,'=== Subroutine BKWSPL === : Writing of database',2X,
     +            A8,' terminated',/)
 1009 FORMAT (/22X,'=== Subroutine BKWSPL === : No banks found for ',
     +            ' NDBAS =',I8)
      END
      SUBROUTINE BKY2K(IWORD,ISCAL,IYE2K)
C----------------------------------------------------------------------
C CKEY TOOL
C! returns a Y2K-compliant 4-digit year
C  Author  J.Boucrot  27-Aug-1999
C Called from many places                 from  BOOKLIB
C INPUT arguments :
C  IWORD = word containing the year to decode yymm or yymmdd
C  ISCAL = 100 if yymm, 10000 if yymmdd
C OUTPUT argument :
C  IYE2K = 4-digit year
C----------------------------------------------------------------------
      PARAMETER ( IBEG = 89 , IVIN = 1900 , IY2K = 2000 )
C-----------------------------------------------------------------------
      IYE2K=-1
      IYEA=IWORD/ISCAL
      IF (IYEA.LT.0.OR.IYEA.GE.100) GO TO 999
      IF (IYEA.GE.IBEG) THEN
         IYE2K=IVIN+IYEA
      ELSE
         IYE2K=IY2K+IYEA
      ENDIF
C
 999  RETURN
      END
      SUBROUTINE DIRUFIYE(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display runs and fill/year information
C J. Boucrot  29-11-1996
C Called from BKSRUN,BKFIYE                       from  BOOKLIB
C Calls  BKCLDX11                                 from  BOOKLIB
C   Input argument  :
C    LU   = Fortran unit to print messages
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
C Display the list of known years/fills/runs :
      IF (IBKINT.NE.-1) THEN
         WRITE ( LU , 1001 )
         WRITE ( LU , 1007 )
      ELSE
         CALL BKCLDX11
      ENDIF
      IF (IBKINT.EQ.-1) GO TO 200
C
C Printout for interactive dialogue :
C
      DO 100 IR=1,NTOYEA-1
         IF (LISYEA(IR).NE.1995) WRITE (LU,1009)
     +      LISYEA(IR),LISFRU(IR),LISFRU(IR+1)-1,
     +      LISTFF(IR),LISTFF(IR+1)-1
C If Year = 1995 , display limits for LEP 1 and LEP 1.5 runs/fills :
         IF (LISYEA(IR).EQ.1995) THEN
            WRITE (LU,1010) LISFRU(IR),MXLRU1,LISTFF(IR),MXLFI1
            WRITE (LU,1110) MXLRU1+1,LISFRU(IR+1)-1,
     +                      MXLFI1+1,LISTFF(IR+1)-1
         ENDIF
 100  CONTINUE
      WRITE (LU,1001)
      GO TO 999
C
C output for X11 :
C
 200  CONTINUE
      DO 300 IR=1,NTOYEA-1
         NLINX11=NLINX11+1
         WRITE (XLIN11(NLINX11),1009)
     +          LISYEA(IR),LISFRU(IR),LISFRU(IR+1)-1,
     +          LISTFF(IR),LISTFF(IR+1)-1
C If Year = 1995 , display limits for LEP I and LEP 1.5 run/fills
         IF (LISYEA(IR).EQ.1995) THEN
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1010)
     +             LISFRU(IR),MXLRU1,LISTFF(IR),MXLFI1
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1110)
     +             MXLRU1+1,LISFRU(IR+1)-1,
     +             MXLFI1+1,LISTFF(IR+1)-1
         ENDIF
 300  CONTINUE
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT(/)
 1007 FORMAT ('  ===   You find below the LIST of existing ',
     +          ' YEARS and Run/Fill Ranges  ==='//,
     +        16x,'Year   First run    Last run  First fill',
     +        '   Last fill')
 1009 format(5x,5i12)
 1010 format(4x,'LEP 1    1995',4i12)
 1110 format(4x,'LEP 1.5  1995',4i12)
      END
      SUBROUTINE DISGALVR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the GALEPH version and dataset #
C  J. Boucrot 10-Sep-1996
C Called from INIGALPR                            from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) THEN
         IF (NTOGAS.EQ.0) GO TO 999
         WRITE (LU,1004)
         WRITE (LU,1005) (IGALIS(KK),KK=1,NTOGAS)
         WRITE (LU,1100) (IGANBS(II),II=1,NTOGAS)
      ELSE
         CALL BKCLDX11
         DO 100 II=1,NTOGAS
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1105) IGALIS(II),IGANBS(II)
 100     CONTINUE
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1004 FORMAT ('   List of GALEPH version numbers and datasets #  :')
 1005 FORMAT (5X,'Versions : ',10I5)
 1100 FORMAT (5X,'Datasets : ',10I5)
 1105 FORMAT (5X,2I6)
      END
      SUBROUTINE DISGALJU(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the GALEPH, JULIA and MINI vers and dtsets for X11
C  J. Boucrot 28-Oct-1996
C Called from user
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
      IF (NTODTS.EQ.0) GO TO 999
      IF (IBKINT.NE.-1) THEN
         WRITE (LU,1004)
         DO 100 KK=1,NTODTS
            WRITE (LU,1008) (NUMDTS(JJ,KK),JJ=1,4)
 100     CONTINUE
      ELSE
         CALL BKCLDX11
         DO 200 II=1,NTODTS
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1108) (NUMDTS(JJ,II),JJ=1,4)
 200     CONTINUE
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1004 FORMAT ('   GALEPH   JULIA    MINI   Numbers of datasets')
 1008 FORMAT (5X,3I8,5X,I6)
 1108 FORMAT (3X,3I8,5X,I6)
      END
      SUBROUTINE DISHOMLA(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the list of Homelabs
C  J. Boucrot 10-Sep-1996
C Called from BKSRSI,BKSRIN1,BKSRIN4              from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
C
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.4.OR.IDSEAR.EQ.8) THEN
C Display group of labs :
            IF (IBKINT.NE.-1) THEN
               WRITE (LU,1001)
               WRITE (LU,2006)
            ELSE
               CALL BKCLDX11
            ENDIF
            I=-1
 100        I=I+2
            IF (I.GT.NLABOK) GO TO 120
            IF (IBKINT.NE.-1) THEN
               WRITE (LU,2007) I,CLISTL(I),I+1,CLISTL(I+1)
            ELSE
               NLINX11=NLINX11+1
               WRITE (XLIN11(NLINX11),2007) I,CLISTL(I),I+1,CLISTL(I+1)
            ENDIF
            GO TO 100
 120        CONTINUE
      ENDIF
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/)
 2006 FORMAT (' == List of Homelabs codes and names :')
 2007 FORMAT (I6,2X,':',1X,A20,I6,2X,':',1X,A20)
      END
      SUBROUTINE DISJULVR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the JULIA version and dataset #
C  J. Boucrot 10-Sep-1996
C Called from INIGALPR                            from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) THEN
         IF (NTOJUS.EQ.0) GO TO 999
         WRITE (LU,1005)
         WRITE (LU,1006) (JULISS(KK),KK=1,NTOJUS)
         WRITE (LU,1100) (JULNBS(II),II=1,NTOJUS)
      ELSE
         CALL BKCLDX11
         DO 100 II=1,NTOJUS
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1105) JULISS(II),JULNBS(II)
 100     CONTINUE
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1005 FORMAT ('   List of JULIA  version numbers and datasets #  :')
 1006 FORMAT (5X,'Versions : ',10I5)
 1100 FORMAT (5X,'Datasets : ',10I5)
 1105 FORMAT (5X,2I6)
      END
      SUBROUTINE DISKINCO(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the KINGAL codes and dataset #
C  J. Boucrot 10-Sep-1996
C Called from BKSRSI                              from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) THEN
         IF (NPRESK.EQ.0) THEN
            IF (IBKINT.EQ.2) WRITE (LU,1025) IGEOYR
            GO TO 999
         ENDIF
         WRITE (LU,1001)
         WRITE (LU,1002) CLISTL(ILABCH)
         WRITE (LU,1003) IGEOYR
         WRITE (LU,1001)
         WRITE (LU,1021)
         WRITE (LU,1022)
      ELSE
         CALL BKCLDX11
      ENDIF
      IF (NPRESK.EQ.0) GO TO 999
      DO 200 IR=1,NPRESK
         IKIN=LIPRESK(IR)
         NTOK=0
         DO 100 IKK=1,NDAT
            NTOK=NTOK+LISTKINS(IKK,IKIN)
 100     CONTINUE
         IF (NTOK.EQ.0) GO TO 200
         IF (IBKINT.NE.-1) THEN
            WRITE (LU,1023) KINCODL(IKIN),KINNAMES(IKIN),
     +            (LISTKINS(KU,IKIN),KU=1,5),LISTKINS(7,IKIN)
         ELSE
            NLINX11=NLINX11+1
            IF (NLINX11.GT.NMX11) GO TO 999
            WRITE (XLIN11(NLINX11),1023) KINCODL(IKIN),KINNAMES(IKIN),
     +            (LISTKINS(KU,IKIN),KU=1,5),LISTKINS(7,IKIN)
         ENDIF
 200  CONTINUE
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/)
 1002 FORMAT (' ++ Number of existing MCARLO Datasets for Homelab =',
     +           2X,A20)
 1003 FORMAT(9X,'and for YEAR = ',I6)
 1021 FORMAT ('  KINGAL code -  ALEPH  name -',10X,'Number of datasets')
 1022 FORMAT (34X,'   KIN  RAW  POT  DST  MINI NANO')
 1023 FORMAT (5X,I6,8X,A8,7X,6I5)
 1025 FORMAT (/' *** No datasets available for Year =',i6,' !!')
      END
      SUBROUTINE DISMINVR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the MINI version and dataset #
C  J. Boucrot 10-Sep-1996
C Called from BKSRSI                              from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) THEN
         WRITE (LU,1024)
         WRITE (LU,1025) (MILISS(KK),KK=1,NTOMIS)
         WRITE (LU,1100) (MINNBS(II),II=1,NTOMIS)
      ELSE
         CALL BKCLDX11
         DO 100 II=1,NTOMIS
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1105) MILISS(II),MINNBS(II)
 100     CONTINUE
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1024 FORMAT ('   List of MINI version numbers and datasets #  :')
 1025 FORMAT (5X,'Versions : ',10I5)
 1100 FORMAT (5X,'Datasets : ',10I5)
 1105 FORMAT (5X,2I7)
      END
      SUBROUTINE DISNANVR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Displays NANO version number and dataset #
C  J. Boucrot 10-Sep-1996
C Called from BKSRSI                              from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) THEN
         WRITE (LU,1025)
         WRITE (LU,1026) (NALISS(KK),KK=1,NTONAS)
         WRITE (LU,1100) (NANNBS(II),II=1,NTONAS)
      ELSE
         CALL BKCLDX11
         DO 100 II=1,NTONAS
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1105) NALISS(II),NANNBS(II)
 100     CONTINUE
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1025 FORMAT ('   List of NANO version numbers and datasets #  :')
 1026 FORMAT (5X,'Versions : ',10I5)
 1100 FORMAT (5X,'Datasets : ',10I5)
 1105 FORMAT (5X,2I7)
      END
      SUBROUTINE DISNGLEP(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display LEP Energies for current selections
C  J. Boucrot 10-Sep-1996
C Called from BKSRIN4,BKSRIN1,BKSRIN3             from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
      CHARACTER*16 XN197,XN297
      CHARACTER*8 XN197_11,XN297_11
      DATA XN197_11,XN297_11 / '130->136' , '181->184' /
      DATA XN197,XN297 / '130000 -> 136000' , '181000 -> 184000' /
C-----------------------------------------------------------------------
      IF (IBKINT.EQ.-1) THEN
         CALL BKCLDX11
         CALL BKLEPL
         IF (NLEPSF.LE.0) GO TO 999
         GO TO 10
      ENDIF
C Display all LEP energies for the present selections, if necessary :
C
      IF (ENGLEP.GT.0..OR.NLEPSF.LE.1) GO TO 999
      IF (IMCDAT.EQ.1.AND.(ISYEAR.EQ.1992.OR.ISYEAR.EQ.1994)) GO TO 999
 10   CONTINUE
C
C Display the list to the user and ask for input :
C
C Standard SCANBOOK:
      IF (IBKINT.NE.-1) THEN
         IF (IMCDAT.EQ.1.AND.ISYEAR.EQ.1997) THEN
            WRITE (LU,2001)
            DO 50 IV=1,NLEPSF
               WRITE (LU,2002) IV,ILEPEN(IV)
 50         CONTINUE
            WRITE (LU,2003) NLEPSF+1,XN197
            WRITE (LU,2003) NLEPSF+2,XN297
         ELSE
            WRITE (LU ,1001 )
            WRITE (LU ,1002 ) (ILEPEN(IS),IS=1,NLEPSF)
         ENDIF
C X11 version:
      ELSE
         DO 100 IS=1,NLEPSF
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),1003 ) ILEPEN(IS)
 100     CONTINUE
         IF (IMCDAT.EQ.1.AND.ISYEAR.EQ.1997) THEN
            NLINX11=NLINX11+1
            XLIN11(NLINX11)=XN197_11
            NLINX11=NLINX11+1
            XLIN11(NLINX11)=XN297_11
         ENDIF
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (' List of available LEP nominal energies ( in MEV ) :')
 1002 FORMAT (10I8)
 1003 FORMAT (I8)
 2001 FORMAT (' Choice for LEP energies in 1997 (in MEV) :')
 2002 FORMAT (2x,i3,' : ',I8)
 2003 FORMAT (2x,i3,' : ',A16)
      END
      SUBROUTINE DISPARKO(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the Particle codes and datasets # for MCarlo datsets
C  J. Boucrot 10-Sep-1996
C Called from BKSRSI                              from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-----------------------------------------------------------------------
      IF (IBKINT.EQ.-1) CALL BKCLDX11
      IF (IMCDAT.NE.2) GO TO 999
      IF (INIP97.NE.0) GO TO 999
      IF (NTOPARK.EQ.0) GO TO 999
      IF (IBKINT.NE.-1) THEN
         WRITE (LU,1006) (IPARLIS(KK),PARKODS(KK),KK=1,NTOPARK)
      ELSE
         DO 100 KK=1,NTOPARK
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),2010) PARKODS(KK)
 100     CONTINUE
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1006 FORMAT ('   List of possible PARTICLE codes / names  :',
     +            3(/2X,4(I4,1X,A12))/)
 2006 FORMAT ('   List of possible PARTICLE codes / names  :')
 2007 FORMAT (6(1X,I3,9X))
 2008 FORMAT (6(1X,A12))
 2010 FORMAT (A12)
      END
      SUBROUTINE DISPAR97(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the special selections for 1997 MCarlo datsets
C  J. Boucrot 10-Jun-1997 - modified 02-Mar-1998
C Called from BKSRSI                              from BOOKLIB
C Calls  BKCLDX11,BKN97MC,BKDBSX11,BKCHKR         from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      CHARACTER*12 KEYKODS(NTKM7)
      CHARACTER*60 BLAKODS(NTKM7)
      INTEGER NPOTS(NTKM7),NMINS(NTKM7)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      NKOMX=NTKM7
      IF (IBKINT.EQ.-1) THEN
         CALL BKCLDX11
         CALL BKDBSX11(IER1)
      ENDIF
      IF (IMCDAT.NE.2) GO TO 999
      IF (INIP97.EQ.0) GO TO 999
      NR=KINCOD+NCY*(IGEOYR-IYERF)
      JBKM7=NLINK('BKM7',NR)
      IF (JBKM7.LE.0) GO TO 999
      NTOK=LROWS(JBKM7)
      IF (NTOK.GT.NKOMX) GO TO 999
      DO 50 II=1,NKOMX
         KEYKODS(II)=' '
         BLAKODS(II)=' '
         NPOTS(II)=0
         NMINS(II)=0
 50   CONTINUE
      CALL BKCHKR
      ISAVE=IROW97
C Make the list of keys and contents:
      DO 100 IBKM7=1,NTOK
         KBKM7=KROW(JBKM7,IBKM7)
         CALL ALSTIN(IW(KBKM7+JBKMKW),JBKMDE-JBKMKW,KEYKODS(IBKM7))
         CALL ALSTIN(IW(KBKM7+JBKMDE),LBKM7A-JBKMDE+1,BLAKODS(IBKM7))
         IROW97=IBKM7
         CALL BKN97MC(NPOTS(IBKM7),NMINS(IBKM7))
 100  CONTINUE
      IROW97=ISAVE
C Now display the list on the screen:
      IF (IBKINT.NE.-1) THEN
         WRITE (LU,1005) KINCOD,IGEOYR
         WRITE (LU,1006)
         DO 200 KK=1,NTOK
            WRITE (LU,1007) NPOTS(KK),NMINS(KK),KK,BLAKODS(KK)
 200     CONTINUE
      ELSE
         NLINX11=NLINX11+1
         WRITE (XLIN11(NLINX11),2006)
         DO 300 KK=1,NTOK
            NLINX11=NLINX11+1
            WRITE (XLIN11(NLINX11),2007) NPOTS(KK),NMINS(KK),
     +                                   BLAKODS(KK)
 300     CONTINUE
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1005 FORMAT (3X,'List of special conditions for generator =',I5,
     +        ', year = ',i5,/3x,'with number of POT and MINI',
     +        ' datasets :'/)
 1006 FORMAT (' POTS MINIS Condition #  Condition explanation :')
 1007 FORMAT (I5,1X,I5,3X,I5,6X,A60)
 2006 FORMAT (' POTS MINIs Condition explanation :')
 2007 FORMAT (I5,1X,I3,3X,A60)
      END
      SUBROUTINE DISPOTS
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display the number of Impatient Stream files found
C  J. Boucrot 06-Feb-1997  - modified 10-09-1997
C Called from BKDVER                              from BOOKLIB
C Calls  BKCLDX11                                 from BOOKLIB
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
      CHARACTER*4 PROCS(2)
      DATA PROCS  / 'Test' , 'Last' /
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) GO TO 999
      CALL BKCLDX11
C Standard impatient stream files:
      LASTPR=1
      CALL BKFINDFI(2,NFOUN,IER)
      IF (NFOUN.GT.0) THEN
         NLINX11=NLINX11+1
         WRITE (XLIN11(NLINX11),1100) PROCS(2),NFOUN
      ENDIF
 999  RETURN
C-----------------------------------------------------------------------
 1100 FORMAT (3X,A4,7X,I4,T60,'No')
      END
      SUBROUTINE DISPROCC(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Display processing levels
C  J. Boucrot 19-Sep-1996
C Called from BKSRPR                            from BOOKLIB
C Calls  BKCLDX11                               from BOOKLIB
C  Input argument :
C  LU = logical unit for the display
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATPROC ----
      PARAMETER ( NPROC = 4 )
      COMMON / DATPROC / NPROCD(NPROC),IFIDAC(NPROC),ILADAC(NPROC),
     +                   IJUVRC(NPROC),IMNVRC(NPROC),ICOVRC(NPROC),
     +                   IJUSLC(NPROC)
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
      CHARACTER*3 YENO(2)
      CHARACTER*8 PROCS(4)
      DATA PROCS /' Test ', ' Last ', 'Previous' , ' Old ' /
      DATA YENO / 'Yes' , 'No ' /
C-----------------------------------------------------------------------
      IF (IBKINT.EQ.-1) CALL BKCLDX11
      IF (IDASEL.EQ.0.OR.IDASEL.GT.7) GO TO 999
      IMINA=0
      IF (IDASEL.EQ.5.OR.IDASEL.EQ.7) IMINA=1
      IF (IBKINT.EQ.-1) GO TO 20
C Header on user's screen :
      IF (IMINA.EQ.0) THEN
         WRITE ( LU,1001)
         WRITE ( LU,2001)
      ELSEIF (IDASEL.EQ.5) THEN
         WRITE ( LU,1002)
         WRITE ( LU,2002)
      ELSEIF (IDASEL.EQ.7) THEN
         WRITE ( LU,1003)
         WRITE ( LU,2003)
      ENDIF
      WRITE ( LU,1005)
 20   CONTINUE
C
C Loop on all processing levels ( max = 4 ) :
C
      DO 100 IK=1,NPROC
         IF (NPROCD(IK).EQ.0) GO TO 100
         IF (IBKINT.EQ.-1) THEN
            NLINX11=NLINX11+1
            WRITE ( XLIN11(NLINX11),1102) PROCS(IK),NPROCD(IK),
     +                       IFIDAC(IK),ILADAC(IK),
     +                       IJUVRC(IK),IMNVRC(IK),YENO(ICOVRC(IK))
            GO TO 100
         ENDIF
         IF (IMINA.EQ.0) THEN
            WRITE ( LU,1101) PROCS(IK),NPROCD(IK),IFIDAC(IK),
     +                       ILADAC(IK),IJUVRC(IK),YENO(ICOVRC(IK))
         ELSE
            WRITE ( LU,1102) PROCS(IK),NPROCD(IK),IFIDAC(IK),
     +                       ILADAC(IK),
     +                       IJUVRC(IK),IMNVRC(IK),YENO(ICOVRC(IK))
         ENDIF
 100  CONTINUE
      IF (IBKINT.NE.-1) WRITE ( LU,1110 )
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (T2,'Processing',T16,'# of',T25,'Dates of',T42,'JULIA',
     +                        T52,'Complete')
 2001 FORMAT (T3,'Level',T14,'Datasets',
     +        T25,'Processing',T42,'vers. #',        T52,'Processing ?')
 1002 FORMAT (T2,'Processing',T16,'# of',T25,'Dates of',T42,'JULIA',
     +        T52,'MINI',     T59,'Complete')
 2002 FORMAT (T3,'Level',T14,'Datasets',
     +        T25,'Processing',T42,'vers. #',T52,'vers.',
     +        T59,'Processing ?')
 1003 FORMAT (T2,'Processing',T16,'# of',T25,'Dates of',T42,'JULIA',
     +        T52,'NANO',     T59,'Complete')
 2003 FORMAT (T3,'Level',T14,'Datasets',
     +        T25,'Processing',T42,'vers. #',T52,'vers.',
     +        T59,'Processing ?')
 1005 FORMAT (T1,71(1H-))
 1101 FORMAT (T3,A8,T16,I4,T24,I6,T31,'->',T34,I6,T44,I3,T55,A3)
 1102 FORMAT (T3,A8,T16,I4,T24,I6,T31,'->',T34,I6,T44,I3,T53,I3,T62,A3)
 1110 FORMAT (/)
      END
      SUBROUTINE GETLOCNUM(TLOC,ILOC)
C-----------------------------------------------------------------------
CKEY UPDABOOK STEER
C! Gives the TMS location order
C  J. Boucrot 25-Sep-1997
C Called from BKFIRAR,BKFINDAR,PRDATAR            from BOOKLIB
C    Input argument :
C TLOC = 4-letter code for location
C   Output argument :
C ILOC = order of location in TMSLIB
C-----------------------------------------------------------------------
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      character tloc*4,tlib*5,TLL*4
C-----------------------------------------------------------------------
      TLL=TLOC
      CALL CLTOU(TLL)
      ILOC=0
      DO 100 IL=1,NTMSLI
         TLIB=TMSLIB(IL)
         CALL CLTOU(TLIB)
         IF (INDEX(TLIB,TLL).EQ.0) GO TO 100
         ILOC=IHOLAB(IL)
         GO TO 999
 100  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE INENGLEP(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the LEP Energy
C  J. Boucrot 10-Sep-1996 - from old MACRLEP
C  Called from BKSRSI,BKSRIN1                          from BOOKLIB
C  Calls BKRDCH                                        from BOOKLIB
C  Calls BKINCA                                        from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    ENGLEP          from / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER LET6*6
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Don't ask for choice if not needed :
      IF (ENGLEP.GT.0..OR.NLEPSF.LE.1) GO TO 999
      IF (IMCDAT.EQ.1.AND.(ISYEAR.EQ.1994.OR.ISYEAR.EQ.1992)) GO TO 999
      IF (IMCDAT.EQ.2.AND.(IGEOYR.EQ.1994.OR.IGEOYR.EQ.1992)) GO TO 999
C
C Ask for LEP energy : standard input
C
      IF (IMCDAT.EQ.1.AND.ISYEAR.EQ.1997) GO TO 500
 5    WRITE (LU,*) ' If you want to select ONLY a given LEP energy '
      WRITE (LU,*) '    --> please type one of the above values '
      WRITE (LU,*) ' <CR> = NO selection on LEP energy'
      IF (IMCDAT.EQ.1.AND.IDSEAR.NE.3)
     +   WRITE (LU,*) '    --> you can ask later for FILICARDS sorted',
     +                     ' by LEP energies'
      CALL BKRDCH(LECINT,0,LET6)
      CALL CLTOU(LET6)
      IF (LET6(1:1).EQ.'Q') GO TO 900
      IF (LET6.EQ.' ') GO TO 999
      IGLEP=BKINCA(LET6)
C verify the validity of the user's input :
      IKLOK=0
      DO 57 ILS=1,NLEPSF
         IF (IGLEP.EQ.ILEPEN(ILS)) THEN
            IKLOK=1
            GO TO 58
         ENDIF
 57   CONTINUE
 58   IF (IKLOK.EQ.0) GO TO 5
      ENGLEP=FLOAT(IGLEP)/1000.
      GO TO 800
C 1997 data : special input
 500  WRITE (LU,1001) NLEPSF+2
      WRITE (LU,*) ' <CR> = NO selection on LEP energy'
      CALL BKRDCH(LECINT,0,LET6)
      CALL CLTOU(LET6)
      IF (LET6(1:1).EQ.'Q') GO TO 900
      IF (LET6.EQ.' ') GO TO 999
      IGLE=BKINCA(LET6)
      IF (IGLE.LE.0.OR.IGLE.GT.NLEPSF+2) GO TO 500
      IF (IGLE.LE.NLEPSF) THEN
         ENGLEP=FLOAT(ILEPEN(IGLE))/1000.
      ELSE
         IF (IGLE.EQ.NLEPSF+1) ENGLEP=ENG197
         IF (IGLE.EQ.NLEPSF+2) ENGLEP=ENG297
         IENV97=1
      ENDIF
 800  IKEYOK=IKEYOK+1
      GO TO 999
C The user has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (' Please select one of the above values 1...',I2)
      END
      SUBROUTINE INIBOPT5(LU,INUS)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the search option of SCANBOOK in Option 5
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN5                                  from BOOKLIB
C  Calls BKRDCH                                         from BOOKLIB
C  Calls BKINCA                                         from ALEPHLIB
C  Input argument :
C   LU  = Fortran unit for the interactive dialogue
C Output argument :
C  INUS = User's answer
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER LET6*6
      CHARACTER*(*) INUS
C-----------------------------------------------------------------------
C Option 5
C Choice : all infos on a given run or Cartridge :
C
      IF (IDSEAR.NE.5) GO TO 999
 11   WRITE (LU,*) '   Type the run #  or the Cartridge #  '
      WRITE (LU,*) '   or a list of cartridges separated with commas'
      WRITE (LU,*) '      ( e.g.  :  AC0001,AD0001,AG0001  )'
      WRITE (LU,*) '   or a range of cartridges , e.g. : AB0001/AB0100'
      WRITE (LU,*) '   or a DLT file number e.g. AS1234.5'
      CALL BKRDCH(LECINT,0,INUS)
      CALL CLTOU(INUS)
      LET6=INUS(1:6)
      IF (LET6(1:1).EQ.'Q') GO TO 900
      IF (LET6.EQ.' ') GO TO 11
 800  IKEYOK=IKEYOK+1
      GO TO 999
C
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
      GO TO 999
 999  RETURN
      END
      SUBROUTINE INIBPRUS(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the print level of SCANBOOK in the interactive dialogue
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN                                  from BOOKLIB
C  Calls BKRDCH                                        from BOOKLIB
C  Calls BKINCA                                        from ALEPHLIB
C  Input argument :
C   LU = Fortran unit for the interactive dialogue
C Common variable defined in this routine for the search :
C    IBPRUS            in / BKFILU /
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LETC*1
      INTEGER BKINCA
C-----------------------------------------------------------------------
C For IDSEAR = 1,4,7 only :   ask for print level
      IF (IDSEAR.NE.1.AND.IDSEAR.NE.4.AND.IDSEAR.NE.7) GO TO 999
      WRITE (LU,1001)
      WRITE (LU,*) ' Possible printout levels are :'
      IF (IDSEAR.NE.1)
     +    WRITE (LU,*) ' 1 - Simple list of cartridges'
      IF (IDSEAR.EQ.1)
     +    WRITE (LU,*) ' 1 - Special RAW data printout for FALCON '
      WRITE (LU,*) ' 2 - Normal output ( default) '
      WRITE (LU,*) ' 3 - very detailed output'
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.4)
     +   WRITE (LU,*) ' 6 - Special for survey of Homelabs copies'//
     +                ' from CERN'
      IF (IDSEAR.EQ.4)
     +   WRITE (LU,*) ' 7 - Special for CERN copies of Homelabs MCprods'
 7    CONTINUE
      IF (IDSEAR.EQ.1) THEN
         WRITE (LU,*) ' Please type your choice 1/2/3/6 , <CR> = 2'
      ELSE IF (IDSEAR.EQ.4) THEN
         WRITE (LU,*) ' Please type your choice 1/2/3/6/7 , <CR> = 2'
      ELSE
         WRITE (LU,*) ' Please type your choice 1/2/3 , <CR> = 2'
      ENDIF
      CALL BKRDCH(LECINT,3,LETC)
      CALL CLTOU(LETC)
      IF (LETC(1:1).EQ.'Q') GO TO 900
      IF (LETC.EQ.' ') GO TO 999
      IBPRUS=BKINCA(LETC)
      IF (IBPRUS.LT.1.OR.IBPRUS.GT.7) GO TO 7
      IKEYOK=IKEYOK+1
      GO TO 999
C
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
      END
      SUBROUTINE INIBTQSE(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the tracking quality for 1992 data
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN1,BKSRIN3                          from BOOKLIB
C  Calls BKRDCH                                         from BOOKLIB
C  Calls BKINCA                                         from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    IBTQSE            in / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER LET2*2
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Selection on Tracking Quality ( 1992 Data , LAST processing ) :
C
 510  IF (ISYEAR.NE.1992.OR.LASTPR.NE.1) GO TO 999
      IF (IBPRUS.EQ.6) GO TO 999
 520  WRITE (LU,1012)
      CALL BKRDCH(LECINT,0,LET2)
      IF (LET2(1:1).EQ.'Q') GO TO 900
      IF (LET2.EQ.' ') GO TO 800
      IBTQSE=BKINCA(LET2)
      IF (IBTQSE.LT.-2.OR.IBTQSE.GT.2) GO TO 520
 800  IKEYOK=IKEYOK+1
      GO TO 999
C The user has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1012 FORMAT (' Do you want to select data on Tracking Quality ?'/,
     +        '        Please type  :'/,
     + /2X,'0   to select ONLY data without any TPC short',/1X,
     +'-1   to select ONLY data with TPC short successfully corrected',
     +/2X,'1   to select data with TPC OK or TPC short successfully ',
     +'corrected',/1X,'-2   to select ONLY data with TPC short and ',
     +'residual tracking problem',/2X,'<CR> :  ALL DATA ( NO ',
     +'selection on tracking quality )'/)
      END
      SUBROUTINE INIDSEAR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the search option of SCANBOOK in the interactive dialogue
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN                                  from BOOKLIB
C  Calls BKRDCH                                        from BOOKLIB
C  Calls BKINCA                                        from ALEPHLIB
C  Input argument :
C   LU = Fortran unit for the interactive dialogue
C Common variable defined in this routine for the search :
C    IDSEAR            in / BKTSKC /
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER LETC*1
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Display the list of options :
C
 2    WRITE (LU,*) '               List of available options :'
C     WRITE (LU,1001)
      WRITE (LU,*) ' 1 -->   List of RAW/POT/DST/MINI/NANO Real Data',
     +             ' cartridges'
      WRITE (LU,*) '              with creation of FILI cards'
      IF (ICERCO.EQ.1)  THEN
         WRITE (LU,*) ' 2 -->   List of POT Run files on Disks '
         WRITE (LU,*) '              ("Impatient Stream": most recent',
     +                ' data)'
      ENDIF
      WRITE (LU,*) ' 3 -->   Informations on RUNS already taken ',
     +                       ' (Real Data) : '
      WRITE (LU,*) '              Energy, LEP Fills, NZ0s, Lumi, ',
     +                            'Run_Quality'
      WRITE (LU,*) ' 4 -->   List of RAW/POT/MINI/NANO MCarl Cartridges'
      WRITE (LU,*) '              with creation of FILI cards'
      WRITE (LU,*) ' 5 -->   All available informations on a Run '
      WRITE (LU,*) '              or on given Cartridge(s)'
      IF (ICERCO.EQ.1)
     +   WRITE (LU,*) ' 7 -->   List of RAW/POT Selected Data for '//
     +                     'alignment and calibration '
      WRITE (LU,*) ' 8 -->   Global statistics on cartridges '//
     +                      'available for all processings'
      WRITE (LU,1001)
      WRITE (LU,*) ' Please type your choice 1 to 8     ----> '
C
      CALL BKRDCH(LECINT,3,LETC)
      CALL CLTOU(LETC)
      IF (LETC(1:1).EQ.'Q') GO TO 900
      IF (LETC.EQ.' ') GO TO 2
      IDSEAR=BKINCA(LETC)
      IF (IDSEAR.LE.0.OR.IDSEAR.GT.8) GO TO 2
C
 800  IKEYOK=IKEYOK+1
      GO TO 999
C
C The User has aborted the interactive dialogue :
C
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
      END
      SUBROUTINE INIGALPR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the GALEPH/JULIA version number
C  J. Boucrot 10-Sep-1996
C  Called from BKSRSI                                      from BOOKLIB
C  Calls BKRDCH,DISGALVR,DISJULVR,INIPRGVR                 from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variables defined in this routine for the search :
C    IGALPR,ISEED1,ISEED2  in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
      CHARACTER LET5*5,LET1*1,LET6*6
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Ask for Other selections :
 800  WRITE (LU,*) '              More selections ? '
      WRITE (LU,*) ' GALEPH Version # , JULIA Version # , RANMAR Seeds'
      WRITE (LU,*) '       Please answer Y/N   <CR> = No '
      CALL BKRDCH(LECINT,2,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Q') GO TO 900
      IF (LET1.NE.'Y') GO TO 850
C-----------------------------------------------------------------------
C ASK for Selection on GALEPH Version Number :
      IF (NTOGAS.EQ.0) GO TO 810
 820  WRITE (LU,1001)
      WRITE (LU,*) ' ++ Selection on GALEPH Program Version #  ?'
      CALL DISGALVR(LU)
      WRITE (LU,*) '    <CR> = NO SELECTION - otherwise type  :'
      WRITE (LU,*) '      N  if you want all versions starting with N'
      WRITE (LU,*) '    - N  if you want ONLY version # N'
      CALL BKRDCH(LECINT,0,LET5)
      CALL CLTOU(LET5)
      IF (LET5(1:1).EQ.'Q') GO TO 900
      IF (LET5.EQ.' ') GO TO 810
      IGALE=BKINCA(LET5)
      IGG=IABS(IGALE)
      IF (IGG.GT.0.AND.IUCOMP(IGG,IGALIS,NTOGAS).EQ.0) GO TO 820
      IGALPR=IGALE
      IF (IGG.GT.0) IKEYOK=IKEYOK+1
C-----------------------------------------------------------------------
C ASK for Selection on JULIA Version Number :
 810  IF (NTOJUS.EQ.0) GO TO 830
      CALL DISJULVR(LU)
      CALL INIPRGVR(LU)
      IF (ISCQUI.NE.0) GO TO 900
C-----------------------------------------------------------------------
C Ask for selection on Ranmar Seeds :
 830  WRITE (LU,*) ' ++ Selection on Ranmar Seeds ?'
      WRITE (LU,*) ' Type Seed 1, <CR> = no selection on Ranmar seeds'
      CALL BKRDCH(LECINT,3,LET6)
      CALL CLTOU(LET6)
      IF (LET6(1:1).EQ.'Q') GO TO 900
      IF (LET6.EQ.' ') GO TO 850
      ISEED1=BKINCA(LET6)
      WRITE (LU,*) ' Type Seed 2, <CR> = no selection on Ranmar seed 2'
      CALL BKRDCH(LECINT,3,LET6)
      CALL CLTOU(LET6)
      IF (LET6(1:1).EQ.'Q') GO TO 900
      IF (LET6.EQ.' ') GO TO 850
      ISEED2=BKINCA(LET6)
 850  GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
      GO TO 999
 999  RETURN
 1001 FORMAT (/)
      END
      SUBROUTINE INIGEOYR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose Galeph Year of Geometry
C  J. Boucrot 10-Sep-1996
C  Called from BKSRSI
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    IGEOYR                 in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LET4*4
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Selection on GALEPH Geometry ( given by Year ) - MANDATORY !! -
C
 10   WRITE ( LU,1001)
      WRITE (LU,*) ' ++ Selection on Galeph Year of Geometry ?'
      WRITE (LU,*) '    Please  type Year # - e.g. 1996'
      CALL BKRDCH(LECINT,3,LET4)
      CALL CLTOU(LET4)
      IF (LET4(1:1).EQ.'Q') GO TO 900
      IF (LET4.EQ.' ') GO TO 10
      IGEOYR=BKINCA(LET4)
      IF (IGEOYR.LT.LISYEA(1).OR.IGEOYR.GT.LISYEA(NTOYEA-1)) GO TO 10
      IKEYOK=IKEYOK+1
      IF (IGEOYR.GE.1997) INIP97=1
      GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
      END
      SUBROUTINE INIGRLEP(LUN,IFLAG,GROU,KEYS,NOK)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Auxiliary to INIRUNQ
C  J. Boucrot 26-Nov-1997
C  Called from INIRUNQ
C Input arguments:
C      LUN = Fortran unit for the user dialogue
C    IFLAG = 1 for LEP1 Phys Groups
C    IFLAG = 2 for LEP2 Phys Tools, = 3 for LEP2 Phys Groups
C     GROU = list of names of tools or groups
C     KEYS = list of keywords
C Output argument:
C      NOK = number of valid groups found
C Common variable defined in this routine for the search :
C                  IGRLEP                in  / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER*20 GROU(NGPHY)
      CHARACTER*2  KEYS(NGPHY)
      DATA IYEAL,IYEAN / 1997 , 1998 /
C-----------------------------------------------------------------------
C For a possible selection on Phys. Groups or Phys. Tools, define IGRLEP
      IF (ISYEAR.LT.IYEAL) THEN
         IGRLEP=1
      ELSE
         IGRLEP=IFLAG
         IF (ISYEAR.GE.IYEAN.AND.IFLAG.EQ.2) IGRLEP=4
      ENDIF
C Define the keys and groups to be displayed:
      NOK=0
      DO 70 IIV=1,NGROUF
         IF (LEPSGR(IGRLEP,IIV).EQ.0) GO TO 70
         NOK=NOK+1
         GROU(NOK)=GROUPH(IIV)
         KEYS(NOK)=KEYWPH(IIV)
 70   CONTINUE
      DO 72 IIU=NOK+1,NGROUF
         KEYS(IIU)=' '
         GROU(IIU)=' '
 72   CONTINUE
C Display the list of groups on request :
      IF (LUN.LE.0.OR.NOK.LE.0) GO TO 999
      IF (IGRLEP.EQ.1) WRITE (LUN,1021)
      IF (IGRLEP.EQ.2) WRITE (LUN,1022)
      IF (IGRLEP.EQ.3) WRITE (LUN,1023)
      ILOOP=1+NOK/3
      DO 660 IG=1,ILOOP
         IS=1+3*(IG-1)
         IF (GROU(IS).EQ.' ') GO TO 660
         WRITE (LUN,1030) (GROU(IIS)(1:18),IIS=IS,IS+2)
 660  CONTINUE
C
 999  RETURN
C-----------------------------------------------------------------------
 1021 FORMAT ('        List of existing LEP1 Physics Groups:')
 1022 FORMAT ('        List of existing LEP2 Physics Tools :')
 1023 FORMAT ('        List of existing LEP2 Physics Groups:')
 1030 FORMAT (8X,3(A18,3X))
      END
      SUBROUTINE INIJULSL(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the selection on date,processing or JULIA version
C  J. Boucrot 10-Sep-1996
C  Called from BKSRPS                                   from BOOKLIB
C  Calls BKRDCH                                         from BOOKLIB
C  Calls BKINCA                                         from ALEPHLIB
C Input argument :
C    LU = Unit for the user dialogue
C Common variables defined in this routine for the search :
C           IJULSL,IDATSL,IPROSL  in  / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
      CHARACTER LET20*20
      INTEGER BKINCA
C-----------------------------------------------------------------------
C ASK for Selection on processing or date or ALL :
C
      IF (SELCAT.EQ.'R'.OR.IMCDAT.EQ.2) GO TO 999
      IF (IDSEAR.EQ.6) THEN
         IPROSL=1
         GO TO 999
      ENDIF
 400  WRITE (LU,*) ' Selection of Real data on JULIA processing :'
      WRITE (LU,*) '         You may reply :'
      WRITE (LU,*) '  P  to make further selection on Processing Levels'
      IF (IBPRUS.EQ.6) GO TO 405
      IF (IDSEAR.NE.2) WRITE (LU,*) '  A  to get ALL',
     +    ' DATA from ALL processings'
      WRITE (LU,*) '  J  to select on the JULIA VERSION NUMBER'
      IF (IDSEAR.NE.2) WRITE (LU,*) '  D to select on the date of',
     +                               ' JULIA processing'
 405  CONTINUE
      WRITE (LU,*)
     + ' Please type your answer , <CR> = Further selections on',
     + ' processings'
      CALL BKRDCH(LECINT,0,LET20)
      CALL CLTOU(LET20)
      IF (LET20(1:1).EQ.'Q') GO TO 900
      IF (LET20(1:1).EQ.'P'.OR.LET20(1:1).EQ.' ') THEN
         IPROSL=1
         GO TO 999
      ENDIF
      IF (LET20(1:1).EQ.'A') THEN
         IMINPR=0
         INANPR=0
         LASTPR=0
         GO TO 999
      ENDIF
      IF (LET20(1:1).EQ.'J') THEN
         IJULSL=1
         GO TO 999
      ENDIF
      IF (LET20(1:1).EQ.'D') THEN
         IDATSL=1
         GO TO 999
      ENDIF
      GO TO 400
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
      END
      SUBROUTINE INILABCH(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the Homelab
C  J. Boucrot 10-Sep-1996
C  Called from BKSRSI,BKSRIN1                        from BOOKLIB
C  Calls BKRDCH                                      from BOOKLIB
C  Calls BKINCA                                      from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    ILABCH            in / BKLABS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER LET2*2
      INTEGER BKINCA
C-----------------------------------------------------------------------
C ILABCH has been set by default to NLABDF in BKSEIN
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.4.OR.IDSEAR.EQ.8) THEN
         SELMAG='T'
      ILABCH=NLABDF
C Choose the lab or group of labs :
 120        IF (IMCDAT.EQ.1.OR.IBPRUS.EQ.6) WRITE (LU,2008)
     +          NLABOK,CLISTL(NLABDF)
            IF (IDSEAR.EQ.8.OR.(IMCDAT.EQ.2.AND.IBPRUS.NE.6))
     +          WRITE ( LU,2009) NLABOK,CLISTL(NLABDF)
            CALL BKRDCH(LECINT,0,LET2)
            CALL CLTOU(LET2)
            IF (LET2(1:1).EQ.'Q') GO TO 900
            IF (LET2.EQ.' ') GO TO 140
            ILABCH=BKINCA(LET2)
            IF (ILABCH.LT.0.AND.IMCDAT.EQ.1.AND.IDSEAR.NE.8) GO TO 120
            IF (ILABCH.LT.0.AND.IMCDAT.EQ.2)  GO TO 120
            IF (ILABCH.EQ.0.OR.ILABCH.GT.NLABOK) GO TO 120
C choice is OK :
 140        SELPOT=CTAPSL(ILABCH)
            SELCAT=SELPOT
            SELMAG='C'
      ENDIF
C
 800  IKEYOK=IKEYOK+1
      GO TO 999
C The user has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
C-----------------------------------------------------------------------
 2006 FORMAT ('   Please choose the institute or group of institutes:',
     +       /' WARNING !!! You will get ALL cartridges attributed',
     +        ' to your Homelab',/' irrespective of their physical',
     +        ' location ')
 2008 FORMAT ('  Please type your choice : 1....',2X,I2,' <CR> =',
     +            2X,A20)
 2009 FORMAT (/'  Please type your choice : 1....',2X,I2,/,
     +         '      <CR>  =  ',2X,A20)
      END
      SUBROUTINE INIMINPR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the MINI version number
C  J. Boucrot 10-Sep-1996
C  Called from BKSRSI,BKSRIN4                               from BOOKLIB
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    IMINPR                 in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LET5*5
      INTEGER BKINCA
C-----------------------------------------------------------------------
 860  WRITE (LU,*) ' Selection on the MINI Version # ? '
      WRITE (LU,*) ' Please Type the MINI Version # e.g. = 10 '
      WRITE (LU,*) '     -1 = NO SELECTION  '
      WRITE (LU,1013) MINLAS
      CALL BKRDCH(LECINT,0,LET5)
      IF (LET5(1:1).EQ.'Q') GO TO 900
      IF (LET5.EQ.' ') THEN
         IMINPR=MINLAS
         GO TO 999
      ENDIF
      IMINPR=BKINCA(LET5)
      IF (IMINPR.LT.0) THEN
         IMINPR=0
         GO TO 999
      ENDIF
      IF (IMINPR.LT.6.OR.IMINPR.GT.20) GO TO 860
      GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
C-----------------------------------------------------------------------
 1013 FORMAT ('     <CR> = Last Version : ',I6)
      END
      SUBROUTINE ININANPR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the NANO version number
C  J. Boucrot 10-Sep-1996
C  Called from BKSRSI,BKSRIN4                               from BOOKLIB
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    INANPR                 in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LET5*5
      INTEGER BKINCA
C-----------------------------------------------------------------------
 870  WRITE (LU,*) ' Selection on the NANO Version # ? '
      WRITE (LU,*) ' Please Type the NANO Version # e.g. = 111'
      WRITE (LU,1013) NANLAS
      WRITE (LU,*) '     -1 = NO SELECTION  '
      CALL BKRDCH(LECINT,0,LET5)
      IF (LET5(1:1).EQ.'Q') GO TO 900
      IF (LET5.EQ.' ') THEN
         INANPR=NANLAS
         GO TO 999
      ENDIF
      INANPR=BKINCA(LET5)
      IF (INANPR.LT.0) THEN
         INANPR=0
         GO TO 999
      ENDIF
      IF (INANPR.LT.100.OR.INANPR.GT.1000) GO TO 870
      GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1013 FORMAT ('     <CR> = Last Version : ',I6)
      END
      SUBROUTINE INIPRGVR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the JULIA Version number
C  J. Boucrot 10-Sep-1996
C  Called from INIGALPR,BKSRPS                             from BOOKLIB
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = Unit for the user dialogue
C Common variable defined in this routine for the search :
C    IPRGVR                 in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
      CHARACTER LET5*5
      INTEGER BKINCA
C-----------------------------------------------------------------------
C ASK for Selection on JULIA Version Number :
 100  WRITE (LU,1001)
      WRITE (LU,*) ' ++ Selection on JULIA Version #   :'
      WRITE (LU,*) '    <CR> = NO SELECTION - otherwise type  :'
      WRITE (LU,*) '      N  if you want all versions starting with N'
      WRITE (LU,*) '    - N  if you want ONLY version # N'
      CALL BKRDCH(LECINT,0,LET5)
      CALL CLTOU(LET5)
      IF (LET5(1:1).EQ.'Q') GO TO 900
      IF (LET5.EQ.' ') GO TO 999
      IJULE=BKINCA(LET5)
      IJJ=IABS(IJULE)
      IF (IJJ.GT.0.AND.IUCOMP(IJJ,JULISS,NTOJUS).EQ.0) GO TO 810
      IPRGVR=IJULE
      IF (IJJ.GT.0) IKEYOK=IKEYOK+1
      GO TO 999
 810  WRITE (LU,1002)
      GO TO 100
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
 1002 FORMAT (' Incorrect JULIA version number !')
      END
      SUBROUTINE INIPRONL(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the special printout level for Option 3
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN3                                  from BOOKLIB
C  Calls BKRDCH,BKHOMV                                  from BOOKLIB
C  Calls BKINCA                                         from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    IPRONL            in / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER LET1*1
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Special choice for Option = 3 ( Run informations )
      IPRONL=1
 5    WRITE (LU,*) '           List of available displays :'
      WRITE (LU,*) '  1 -  Energy, Events, Lumi, Offline Run_Quality',
     +             '          for all selected runs '
      WRITE (LU,*) '  2 -  List of RUNS for various LEP energies'
      WRITE (LU,*) '  3 -  Detector conditions , from Online',
     +             '           for all selected runs '
      WRITE (LU,*) '  4 -  List of LEP FILLS with Luminosity',
     +             '           for all selected runs '
      WRITE (LU,*) '  Please type your choice 1/2/3/4 , <CR> = 1'
      CALL BKRDCH(LECINT,3,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Q') GO TO 900
      IF (LET1.EQ.' ') GO TO 10
      IPRONL=BKINCA(LET1)
      IF (IPRONL.LE.0.OR.IPRONL.GT.4) GO TO 5
 10   IF (ISYEAR.EQ.1992) THEN
         IDASEL=3
         LASTPR=1
      ENDIF
 800  IKEYOK=IKEYOK+1
      GO TO 999
C The user has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
      END
      SUBROUTINE INIPSROU(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose if IRUN cards to be generated instead of SRUN cards
C J. Boucrot  21-09-1996
C Called from BKSRIN1,BKSRIN3                    from  BOOKLIB
C Calls BKRDCH                                   from  BOOKLIB
C Input parameter :
C    LU   = unit for the user's dialogue
C Common Variable defined in this routine for the search :
C   IPSROU       in / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER LET1*1
C-----------------------------------------------------------------------
C Ask for IRUN cards :
      IF (IMCDAT.EQ.2) GO TO 999
      WRITE (LU,*) ' Do you want to generate IRUN cards'
      WRITE (LU,*) ' instead of SRUN cards'
      WRITE (LU,*) ' for the runs you have selected ? '
      WRITE (LU,*) '      Answer  Y/N               <CR>  =  NO'
      CALL BKRDCH(LECINT,2,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Q') GO TO 900
      IF (LET1.EQ.'Y') IPSROU=10
 10   GO TO 999
C
C User abort :
 900  ISCQUI=1
C
 999  RETURN
      END
      SUBROUTINE INIRFIYE(LU,MODE,INUS)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the run or fill range, or list
C J. Boucrot  21-09-1996
C Called from BKSRUN                              from  BOOKLIB
C Calls BKRDCH                                    from  BOOKLIB
C Input parameter :
C    LU   = unit for the user's dialogue
C   MODE  = 'RUNS' to choose runs , 'FILLS' to choose fills
C  Output argument  :
C   INUS  = user's input string
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER SEPT*1,SEPR*1
      CHARACTER*(*)  INUS,MODE
      DATA SEPT,SEPR  / '/' , ',' /
C-----------------------------------------------------------------------
C
      IRU=0
      CALL CLTOU(MODE)
      IF (MODE(1:1).EQ.'R') IRU=1
C Selection on run # :
C
      IF (IRU.EQ.0) GO TO 100
 18   WRITE (LU,*) '  N1 / N2          :  Select Runs N1 to N2 included'
      WRITE (LU,*) '  N1,N2,N3,...,Nk  :  Select runs N1,N2,N3, ... Nk'
 20   CALL BKRDCH(LECINT,0,INUS)
      CALL CLTOU(INUS)
      IF (INUS(1:1).EQ.'Q') GO TO 900
      IF (INUS.EQ.' ') GO TO 18
      INSET=INDEX(INUS,SEPT)
      INSER=INDEX(INUS,SEPR)
      IF (INSET.EQ.0.AND.INSER.EQ.0.AND.LNBLNK(INUS).LT.4) THEN
         WRITE (LU,*) ' ---- Unrecognizable input , please type again'
         GO TO 18
      ENDIF
      GO TO 999
C Selection on LEP Fill # :
C
 100  WRITE (LU,*) '  N1 / N2         :  Select Fills N1 to N2 included'
      WRITE (LU,*) '  N1,N2,N3,...,Nk :  Select Fills N1,N2,N3, ... Nk'
 200  CALL BKRDCH(LECINT,0,INUS)
      CALL CLTOU(INUS)
      IF (INUS(1:1).EQ.'Q') GO TO 900
      IF (INUS.EQ.' ') GO TO 100
      INSET=INDEX(INUS,SEPT)
      INSER=INDEX(INUS,SEPR)
      IF (INSET.EQ.0.AND.INSER.EQ.0.AND.LNBLNK(INUS).LT.3) THEN
         WRITE (LU,*) ' ---- Unrecognizable input , please type again'
         GO TO 100
      ENDIF
      GO TO 999
C
C User abort :
 900  ISCQUI=1
C
 999  RETURN
      END
      SUBROUTINE INIROW97(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the Nature of Special 1997 MCarlo generators:
C  J. Boucrot 10-Jun-1997
C  Called from INISELPA                                    from BOOKLIB
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    IROW97                 in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
      CHARACTER LET3*3
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C ASK for Selection on SPECIAL Particle identifier :
      JBKM7=NLINK('BKM7',KINCOD)
      IF (JBKM7.LE.0) GO TO 999
      NTM=LROWS(JBKM7)
 500  WRITE (LU,1001)
      WRITE (LU,*) ' ++ Selection on Special generator conditions ?'
      WRITE (LU,*) '             Please  type  :'
      WRITE (LU,*) '      N  if you want ONLY datasets with condition',
     +                       ' # N in the above list'
      WRITE (LU,*) '    <CR> : All datasets, no selections'
      CALL BKRDCH(LECINT,0,LET3)
      CALL CLTOU(LET3)
      IF (LET3(1:1).EQ.'Q') GO TO 900
      IF (LET3.EQ.' ') THEN
         IROW97=0
         GO TO 999
      ENDIF
      IROW97=BKINCA(LET3)
      IF (IROW97.LE.0) GO TO 790
      IKEYOK=IKEYOK+1
      GO TO 999
 790  WRITE (LU,1002)
      GO TO 500
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT(/)
 1002 FORMAT (' -- Incorrect selection !')
      END
      SUBROUTINE INIRUNQ(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the Run_Quality
C  J. Boucrot 10-Sep-1996 - Modified for LEP2 groups 11-Sep-1997
C  Called from BKSRUN
C  Calls BKRDCH,INIGRLEP                                   from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variables defined in this routine for the search :
C    ISELPH,ISPERF,IPHYGR,PHYKEY  in  / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LET58*58,LET1*1,LET2*2
      CHARACTER*20 GROK(NGPHY)
      CHARACTER*2 KEYK(NGPHY)
      INTEGER BKINCA
      DATA IYEAL / 1997 /
C-----------------------------------------------------------------------
C Ask for user's requests on run quality :
C
 100  IMX=4
      WRITE (LU,*) ' Selection on Run_Quality. Do you want to select:'
      WRITE (LU,*) ' 1 - ALL Runs '
      WRITE (LU,*) ' 2 - PERF or MAYB runs  '
      WRITE (LU,*) ' 3 - Only PERF Runs'
      IF (ISRUNF.LT.LISFRU(2).AND.ISRUNL.LT.LISFRU(2)) GO TO 700
      IF (ISYEAR.LT.IYEAL) THEN
         WRITE (LU,*) ' 4 - PERF/MAYB Runs + selections by'//
     +                   '  LEP1 Physics GROUPS'
         CALL INIGRLEP(LU,1,GROK,KEYK,NOK)
      ELSE
         WRITE (LU,*) ' 4 - PERF/MAYB Runs + selections by LEP2'//
     +                ' Physics TOOLS'
         CALL INIGRLEP(LU,2,GROK,KEYK,NOK)
C
         IF (NL2GRO.GT.0) THEN
            IMX=5
            WRITE (LU,*) ' 5 - PERF/MAYB Runs + selections by'//
     +                   ' LEP2 Physics GROUPS'
            CALL INIGRLEP(LU,3,GROK,KEYK,NOK)
         ENDIF
      ENDIF
C
C The user makes his choice now:
 700  WRITE (LU,1010) IMX
      CALL BKRDCH(LECINT,3,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Q') GO TO 900
      ISELPH=1
      IF (LET1.EQ.' ') GO TO 999
      IREP=BKINCA(LET1)
      IF (IREP.EQ.1) ISELPH=0
      IF (IREP.EQ.3) ISPERF=1
      IF (IREP.EQ.0.OR.IREP.GT.IMX) GO TO 100
      IF (IREP.GE.1.AND.IREP.LE.3) GO TO 999
      CALL INIGRLEP(0,IREP-2,GROK,KEYK,NOK)
C-----------------------------------------------------------------------
C More selections on Physics Groups or Physics Tools:
 705  IF (IGRLEP.EQ.1) WRITE (LU,1021)
      IF (IGRLEP.EQ.2.OR.IGRLEP.EQ.4) WRITE (LU,1022)
      IF (IGRLEP.EQ.3) WRITE (LU,1023)
      ILOOP=1+NOK/3
      DO 750 IG=1,ILOOP
         IS=1+3*(IG-1)
         IF (GROK(IS).EQ.' ') GO TO 750
         WRITE (LU,1001) (KEYK(IIS),GROK(IIS)(1:18),IIS=IS,IS+2)
 750  CONTINUE
      WRITE (LU,1002) KEYK(1),KEYK(NOK)
      IF (IGRLEP.EQ.1) WRITE (LU,1003)
      IF (IGRLEP.EQ.2.OR.IGRLEP.EQ.4) WRITE (LU,2003)
      CALL BKRDCH(LECINT,0,LET58)
      CALL CLTOU(LET58)
      LET2=LET58(1:2)
      IF (LET2.EQ.'Q') GO TO 900
      IF (LET2.EQ.' ') GO TO 705
      LL=LNBLNK(LET58)
      IF (IGRLEP.EQ.3.AND.LL.GT.2) GO TO 705
C Two-letters code given: Check if it's OK
      IF (LL.EQ.2) THEN
         IREP=0
         DO 760 IKO=4,NGROUF
            IF (LEPSGR(IGRLEP,IKO).EQ.0) GO TO 760
            IF (LET2.NE.KEYWPH(IKO)) GO TO 760
            IREP=IKO
            GO TO 765
 760     CONTINUE
 765     IF (IREP.LE.3.OR.IREP.GT.NGROUF) GO TO 705
         IPHYGR=IREP
         SELPHY=LET2
      ELSE
         PHYKEY=LET58(1:LL)
         IF (INDEX(PHYKEY,'.AND.').EQ.0.AND.INDEX(PHYKEY,'.OR.').EQ.0)
     +      GO TO 705
      ENDIF
      IKEYOK=IKEYOK+1
      GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (3(3X,A2,' - ',A18))
 1002 FORMAT ('  ---> Please type your choice :',1X,A2,'...',A2)
 1003 FORMAT('      or a simple combination of 2 or more groups ',
     +      /'         e.g. :  EW.AND.HH.AND.HM   or :   SS.OR.SH ',
     +      /'           or :  EA.AND..NOT.EW ')
 1010 FORMAT (/'  ---> Please type your choice 1...',I1,' <CR> = 2',
     +             ' (PERF/MAYB Runs) ')
 1021 FORMAT (/'  PERF/MAYB runs: Additional selections from LEP1',
     +         '  Physics Groups:')
 1022 FORMAT (/'  PERF/MAYB runs: Additional selections from LEP2',
     +         '  Physics Tools :')
 1023 FORMAT (/'  PERF/MAYB runs: Additional selections from LEP2',
     +         '  Physics Groups:')
 2003 FORMAT('       or a simple combination of 2 or more Tools',
     +      /'         e.g. :  EF.AND.EI.AND.MI   or :   EI.OR.MI ',
     +      /'           or :  EF.AND..NOT.MI ')
      END
      SUBROUTINE INISDATE(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the date of datasets processing
C  J. Boucrot 10-Sep-1996
C  Called from BKSRPR                                from BOOKLIB
C  Calls BKRDCH,BKSDATE                              from BOOKLIB
C Input argument :
C    LU = Unit for the user dialogue
C Common variables defined in this routine for the search :
C    ISDATE,ISDATL                in  / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
      CHARACTER LET20*20
C-----------------------------------------------------------------------
C Selection on date of RAW data taking or on date of processing :
      IF (IDATSL.EQ.0.AND.SELDAT.NE.'R') GO TO 999
      IF (SELDAT.EQ.'R') THEN
         WRITE (LU,*) ' Selection on date of data taking ?'
      ELSE
         WRITE (LU,*) ' Select data on date of processing ?'
      ENDIF
      WRITE (LU,*) '          Please reply :'
      WRITE (LU,*) ' > yymmdd        to select AFTER  date yymmdd'
      WRITE (LU,*) ' < yymmdd        to select BEFORE date yymmdd'
      WRITE (LU,*)
     + '   yymmdd/YYMMDD to select BETWEEN yymmdd and YYMMDD'
      WRITE (LU,*)
     + ' Please type your answer ,   <CR> = NO SELECTION on date'
 310  CALL BKRDCH(LECINT,0,LET20)
      CALL CLTOU(LET20)
      IF (LET20(1:1).EQ.'Q') GO TO 900
C defaults :
      IF (LET20(1:1).EQ.'A'.OR.LET20(1:1).EQ.' ') GO TO 999
C selection :
 315  CALL BKISDATE(LET20,IER)
      IF (IER.NE.0) GO TO 345
      GO TO 999
C
 345  WRITE (LU,*) ' Invalid date given , retype it '
      GO TO 310
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
      END
      SUBROUTINE INISELPA(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the Nature of Special Particle for MC datasets
C  J. Boucrot 10-Sep-1996
C  Called from BKSRSI                                      from BOOKLIB
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    ISELPA                 in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
      CHARACTER LET3*3
      INTEGER BKINCA
C-----------------------------------------------------------------------
C ASK for Selection on SPECIAL Particle identifier :
      IF (INIP97.NE.0) GO TO 999
      IF (NTOPARK.EQ.0) GO TO 999
 500  WRITE (LU,1001)
      WRITE (LU,*) ' ++ Selection on Special Particle Identifier ?'
      WRITE (LU,*) '             Please  type  :'
      WRITE (LU,*) '      N  if you want ONLY datasets with particle N'
      WRITE (LU,*) '     -1  if you want ALL POSSIBLE datasets '
      WRITE (LU,*) '    <CR> : ONLY datasets WITHOUT special particles'
      CALL BKRDCH(LECINT,0,LET3)
      CALL CLTOU(LET3)
      IF (LET3(1:1).EQ.'Q') GO TO 900
      IF (LET3.EQ.' ') THEN
         ISELPA=0
         GO TO 999
      ENDIF
      ISELPA=BKINCA(LET3)
      IF (ISELPA.LT.-1.OR.ISELPA.GT.400) GO TO 790
      IF (ISELPA.GT.0.AND.IUCOMP(ISELPA,IPARLIS,NTOPARK).EQ.0) GO TO 790
      IKEYOK=IKEYOK+1
      GO TO 999
 790  WRITE (LU,1002)
      GO TO 500
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
 1002 FORMAT (' -- Incorrect Particle code !')
      END
      SUBROUTINE INISORLE(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose if FILI cards have to be sorted by LEP energy
C J. Boucrot  21-09-1996
C Called from BKSRIN1,BKSRIN3                    from  BOOKLIB
C Calls BKRDCH                                   from  BOOKLIB
C Input parameter :
C    LU   = unit for the user's dialogue
C Common Variable defined in this routine for the search :
C   ISORLE       in / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      CHARACTER LET1*1
C-----------------------------------------------------------------------
      IF (IMCDAT.EQ.2.OR.ENGLEP.GT.0.) GO TO 999
      IF (IB1RUN.GT.0.OR.ISYEAR.EQ.1992.OR.ISYEAR.EQ.1994) GO TO 999
      IF (IRAWD1.EQ.1) GO TO 999
C
C Ask if FILI cards have to be generated SORTED by LEP Energy :
C
      IF (IDSEAR.LE.2) THEN
         WRITE (LWRINT,*) '  FILI cards sorted by LEP energies ?'
      ELSE IF (IPSROU.EQ.1.AND.IMCDAT.EQ.1) THEN
         WRITE (LWRINT,*) '  SRUN cards sorted by LEP energies ?'
      ELSE IF (IPSROU.EQ.10.AND.IMCDAT.EQ.1) THEN
         WRITE (LWRINT,*) '  IRUN cards sorted by LEP energies ?'
      ELSE
         GO TO 999
      ENDIF
      WRITE (LWRINT,*) '  Answer  Y/N    < CR> = NO  -------->'
      CALL BKRDCH(LECINT,2,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Q') GO TO 900
      IF (LET1.EQ.'Y') ISORLE=1
      GO TO 999
C
C User abort :
 900  ISCQUI=1
C
 999  RETURN
      END
      SUBROUTINE INISYEAR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the Year of data taking
C  J. Boucrot 10-Sep-1996   Modified 18-Sep-1997 for Imp. Stream
C  Called from BKSRUN
C  Calls BKRDCH,BKGYEAR                                    from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variables defined in this routine for the search :
C    ISYEAR,ILP195     in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LET1*1,YEAR*4
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Define year of last data taking:
      CALL BKGYEAR(IYEA)
      JBPER=NLINK('BPER',1)
      IDYDF=0
      IF (IDSEAR.EQ.2.OR.IDSEAR.EQ.3.AND.IYEA.GT.0) IDYDF=1
C Selection on year # :
C
 13   WRITE (LU,*) ' Please type the year number, e.g. 1995  --> '
      IF (IDYDF.GT.0) WRITE (LU,1001) IYEA
 1001 FORMAT(5X,' <CR> = ',I7)
C
 14   CALL BKRDCH(LECINT,3,YEAR)
      CALL CLTOU(YEAR)
      IF (YEAR(1:1).EQ.'Q') GO TO 910
      IF (YEAR.EQ.' ') THEN
         IF (IDYDF.GT.0) THEN
            ISYEAR=IYEA
            GO TO 20
         ELSE
            GO TO 13
         ENDIF
      ENDIF
      ISYEAR=BKINCA(YEAR)
 20   CONTINUE
C If year 1995 selected : ask if the user wants LEP1 runs only :
      IF (ISYEAR.EQ.1995) THEN
         WRITE (LU,*) ' Do you want LEP 1 runs only in 1995 ?'
         WRITE (LU,*) ' Answer Y/N       <CR> = Y '
         CALL BKRDCH(LECINT,2,LET1)
         CALL CLTOU(LET1)
         IF (LET1.EQ.'Q') GO TO 910
         IF (LET1.EQ.'Y'.OR.LET1.EQ.' ') ILP195=1
      ENDIF
C Verify is the input year is existing or not :
      IOKY=0
      DO 100 IIY=1,NTOYEA
         IF (ISYEAR.EQ.LISYEA(IIY)) THEN
            IOKY=1
            GO TO 500
         ENDIF
 100  CONTINUE
 500  IF (IOKY.EQ.0) THEN
         WRITE (LU,*) ' Error !  Non-existing year !'
         GO TO 13
      ENDIF
      IKEYOK=IKEYOK+1
      GO TO 999
C The User has aborted the interactive dialogue :
 910  ISCQUI=1
 999  RETURN
      END
      SUBROUTINE INIWFILI(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose if FILI cards have to be built with EDIRs
C J. Boucrot  21-11-1996
C Called from BKSRIN1,BKSRIN4                    from  BOOKLIB
C Calls BKRDCH                                   from  BOOKLIB
C Input parameter :
C    LU   = unit for the user's dialogue
C Common Variable defined in this routine for the search :
C   IWFILI       in / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER LET1*1
C-----------------------------------------------------------------------
C Ask if FILI cards have to be generated with or without EDIRs:
C
      IF  (IDASEL.EQ.2.OR.SELDAT.EQ.'R') GO TO 999
      WRITE (LWRINT,*) '  EVENT Directories in FILI CARDS ?'
      WRITE (LWRINT,*) '  Answer  Y/N    < CR> = Y  -------->'
      CALL BKRDCH(LECINT,2,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Q') GO TO 900
      IWFILI=2
      IF (LET1.EQ.'N') IWFILI=1
      GO TO 999
C
C User abort :
 900  ISCQUI=1
C
 999  RETURN
      END
      SUBROUTINE INKINCOD(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the KINGAL Generator code
C  J. Boucrot 10-Sep-1996
C  Called from BKSRSI                                      from BOOKLIB
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variable defined in this routine for the search :
C    KINCOD                 in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
      CHARACTER LET6*6
      INTEGER BKINCA
C-----------------------------------------------------------------------
C   Selection on Kingal code :
C
 500  WRITE (LU,1001)
      WRITE (LU,*) '  Selection on KINGAL generator ?  Please reply :'
      WRITE (LU,*) '  xxxx = KINGAL generator code '
      IF (INIP97.GT.0) GO TO 510
      WRITE (LU,*) '  or <CR> : no selection on KINGAL code '
 510  CONTINUE
      CALL BKRDCH(LECINT,1,LET6)
      CALL CLTOU(LET6)
      IF (INDEX(LET6,'Q').GT.0) GO TO 900
      IF (LET6.EQ.' '.AND.INIP97.EQ.0) GO TO 999
C
 600  KINCOD=BKINCA(LET6)
      IF (KINCOD.LE.999) THEN
         WRITE (LU,1002)
         GO TO 500
      ENDIF
C Verify the validity of the user's input :
      IKIOK=0
      DO 620 IG=1,NPRESK
         IPP=LIPRESK(IG)
         IF (KINCOD.EQ.KINCODL(IPP)) THEN
            IKIOK=1
            GO TO 630
         ENDIF
 620  CONTINUE
 630  IF (IKIOK.EQ.0) THEN
         WRITE (LU,1002)
         GO TO 500
      ENDIF
      IKEYOK=IKEYOK+1
 650  CONTINUE
      GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
 1002 FORMAT (/' -- Incorrect KINGAL code ! ')
      END
      SUBROUTINE INLASTPR(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the JULIA Level of Processing (Real data)
C  J. Boucrot 10-Sep-1996
C  Called from BKSRPS                                      from BOOKLIB
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = Unit for the user dialogue
C Common variable defined in this routine for the search :
C    LASTPR               in  / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- STATPR ----
      PARAMETER ( NVERS = 50 )
      COMMON / STATPR / IGALIS(NVERS),IGANBS(NVERS),NTOGAS,
     +                  JULISS(NVERS),JULNBS(NVERS),NTOJUS,
     +                  MILISS(NVERS),MINNBS(NVERS),NTOMIS,
     +                  NALISS(NVERS),NANNBS(NVERS),NTONAS,
     +                  NUMDTS(4,NVERS),NTODTS
C-- DATPROC ----
      PARAMETER ( NPROC = 4 )
      COMMON / DATPROC / NPROCD(NPROC),IFIDAC(NPROC),ILADAC(NPROC),
     +                   IJUVRC(NPROC),IMNVRC(NPROC),ICOVRC(NPROC),
     +                   IJUSLC(NPROC)
      CHARACTER LET20*20
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Ask for level of JULIA processing :
 500  IF (IPROSL.EQ.0) GO TO 999
      WRITE (LU,1001)
      WRITE (LU,*) ' Selection of JULIA processing level :'
      WRITE (LU,*) '         You may reply :'
      IF (NPROCD(1).GT.0)
     +   WRITE (LU,*) '  T  to select the TEST Julia ReProcessing'
      IF (NPROCD(2).GT.0)
     +   WRITE (LU,*) '  L  to select the LAST Julia processing'
      IF (NPROCD(3).GT.0)
     +   WRITE (LU,*) '  P  to select the PREVIOUS Julia Reprocessing'
      IF (IBPRUS.NE.6.AND.NPROCD(4).GT.0)
     +   WRITE (LU,*) '  O  to select the OLD  Julia   Processing'
      WRITE (LU,*)
     + ' Please type your answer , <CR> = LAST available processing'
      CALL BKRDCH(LECINT,0,LET20)
      CALL CLTOU(LET20)
      IF (LET20(1:1).EQ.'Q') GO TO 900
      LASTPR=1
      IF (LET20(1:1).EQ.'P') LASTPR=2
      IF (LET20(1:1).EQ.'T') LASTPR=100
      IF (LET20(1:1).EQ.'O') LASTPR=0
      GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
 1001 FORMAT (/)
      END
      SUBROUTINE INNADATA(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose the Nature of Data
C  J. Boucrot 10-Sep-1996
C  Called from BKSRIN1,BKSRIN4                          from BOOKLIB
C  Calls BKRDCH,BKHOMV,BKDASEL                          from BOOKLIB
C  Calls BKINCA                                         from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variables defined in this routine for the search :
C    IDLDAT,IDLCRW,IEPRAW   in   / BKKEYS /
C    SELDAT,IALISE in /BKKEYS/ ; IDASEL in /BKFILU/  from BKDASEL
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER LET1*1,LET6*6
      INTEGER BKINCA
C-----------------------------------------------------------------------
      IPASS=0
C Define which category of datasets : RAW,POT,KIN,DST,MINI,NANO ?
C
      IF (SELDAT.NE.' ') GO TO 85
 65   WRITE (LU,*) ' Selection on Kind of Data ? '
      IF (IDSEAR.EQ.7) THEN
         WRITE (LU,*) ' R for RAW , P for POT '
         GO TO 70
      ENDIF
      WRITE (LU,*) ' R for RAW , P for POT , D for DST ,' ,
     +                ' M for MINI , N for NANO'
 70   CALL BKRDCH(LECINT,2,LET6)
      CALL CLTOU(LET6)
      IF (LET6(1:1).EQ.'Q') GO TO 900
      IF (IMCDAT.EQ.2.AND.LET6.EQ.'D') THEN
         WRITE (LU,*) ' ===>  Wrong selection : no DST for MCARLO !!'
         GO TO 65
      ENDIF
      IF (IMCDAT.EQ.2.AND.LET6.EQ.' '.AND.IDSEAR.NE.6) THEN
         SELDAT='A'
         GO TO 80
      ENDIF
      IF (IMCDAT.EQ.2.AND.INDEX('KRPMN',LET6(1:1)).EQ.0) GO TO 65
      IF (IMCDAT.EQ.1.AND.INDEX('RPDMN',LET6(1:1)).EQ.0) GO TO 65
      SELDAT=LET6(1:LNBLNK(LET6))
      IF (IDSEAR.EQ.7.AND.INDEX('RP',LET6(1:1)).EQ.0) GO TO 65
 80   IKEYOK=IKEYOK+1
 85   CONTINUE
      IF (IDSEAR.EQ.7) GO TO 800
C If POTs are required at CERN, ask for confirmation from the user:
      IF (ILABCH.NE.1.OR.IPASS.NE.0.OR.LET6(1:1).NE.'P') GO TO 100
      IPASS=1
      WRITE (LU,*) ' **************************************************'
      WRITE (LU,*) ' * Are you sure that you really need to use POTs? *'
      IF (IMCDAT.EQ.2) GO TO 90
      WRITE (LU,*) ' * DSTs  will give you the same results           *'
      WRITE (LU,*) ' * but will take far less space on staging disks! *'
 90   WRITE (LU,*) ' * Please confirm your choice or make another one *'
      WRITE (LU,*) ' **************************************************'
      WRITE (LU,*) ' '
      GO TO 65
 100  IF (IMCDAT.EQ.2) GO TO 800
C Ask for copies of RAW Data on DLTs for 1991 -> 1994 data :
      IF (SELDAT.EQ.'R'.AND.(ISYEAR.GE.1991.AND.ISYEAR.LE.1994)) THEN
         WRITE (LU,*) ' Do you want DLT Raw Tape copies only ?'
         WRITE (LU,*) ' Answer Y/N <CR> = Yes'
         CALL BKRDCH(LECINT,2,LET1)
         CALL CLTOU(LET1)
         IF (LET1.EQ.'Q') GO TO 900
         IDLCRW=1
         IF (LET1.EQ.'N') IDLCRW=0
      ENDIF
      IF (SELDAT.EQ.'R'.AND.ISYEAR.EQ.1994) THEN
C Ask for copies of  RAWs on EPIO cartridges for 1994 data :
         IF (IDLCRW.EQ.0) THEN
            WRITE (LU,*) ' Do you want EPIO Raw Tape copies only ?'
            WRITE (LU,*) '  Answer Y/N  <CR> = NO '
            CALL BKRDCH(LECINT,2,LET1)
            CALL CLTOU(LET1)
            IF (LET1.EQ.'Q') GO TO 900
            IF (LET1.EQ.'Y') THEN
               SELFOR='EPIO'
               IEPRAW=1
            ENDIF
         ENDIF
      ENDIF
 800  IKEYOK=IKEYOK+1
C Define the search flags IDASEL and IALISE :
      CALL BKDASEL
      GO TO 999
C The user has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
      END
      SUBROUTINE INYARUFI(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Choose data selection on Year,Runs or Fills
C  J. Boucrot 10-Sep-1996
C  Called from BKSRUN
C  Calls BKRDCH                                            from BOOKLIB
C  Calls BKINCA                                            from ALEPHLIB
C Input argument :
C    LU = unit for the user dialogue
C Common variables defined in this routine for the search :
C    IYEASL,IRUNSL,IFILSL   in   / BKKEYS /
C-----------------------------------------------------------------------
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER LET1*1
      INTEGER BKINCA
C-----------------------------------------------------------------------
C Read the user's selection :
 10   WRITE (LU,*) ' Selection on Run Numbers or Year of Data Taking ?'
      WRITE (LU,*) '       Please type :'
      WRITE (LU,*) '  R           : selection on run number(s)'
      WRITE (LU,*) '  F           : selection on LEP Fill number(s)'
      WRITE (LU,*) '  Y  or <CR>  : selection on Year of data taking'
 12   CALL BKRDCH(LECINT,0,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Q') GO TO 900
      IF (LET1.EQ.' '.OR.LET1.EQ.'Y') IYEASL=1
      IF (LET1.EQ.'R') IRUNSL=1
      IF (LET1.EQ.'F') IFILSL=1
      IF (IYEASL+IRUNSL+IFILSL.EQ.0) GO TO 10
      IKEYOK=IKEYOK+1
      GO TO 999
C The User has aborted the interactive dialogue :
 900  ISCQUI=1
 999  RETURN
      END
      SUBROUTINE PRBFIL(ICAT,IBD)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Builds the FILI CARDs for datasets
C  Author J.Boucrot 10-Nov-1990
C  Completely rewritten 24-Oct-1996
C Called from PRFILICA,PRFILIRA,PRFILISO,PROPT2,PRMCASET  from BOOKLIB
C Calls  UH1TOC                                           from GENLIB
C Calls  ALSTIN,BKCARI,BKINCA                             from ALEPHLIB
C Calls  BKTALO,BKCHHO,BKTANA,BKEXFI,BKDATSIZ,BKFIRAR     from BOOKLIB
C Calls  BKFIDAR                                          from BOOKLIB
C  Input arguments :
C  ICAT = 1 for run files
C       = 2 for RAW cartridges or DLTs, "AA-type"
C       = 3 for RAW DLTs, 1995 and after
C       = 4 for standard Cartridges or DLTs
C   IBD = row of dataset in IBDSEL
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      COMMON / PRBFAA / NRUNAA,NPOSAA
      INTEGER ITB(2),ITM(2)
      CHARACTER QUOT*1,FNAM*16,COMMC*80,COMT*80,FIRR*5,FIRAR*5
      CHARACTER SDNAM*7,TYP*4,FORMA*4,RUNR*6,FINU*2
      CHARACTER TAPFI*10,TAPNU*6,TAPNA*6,TAPE*8,TAPLO*9
      CHARACTER NAMLA*8,TNAT*1,TLABL*1,SEPC*1
      INTEGER BKINCA
      character fcard*132,fcaco*132,keyol*12,keynw*12,com97*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER PWFIL*80,PWEVD*80,PWEVT*80
      DATA HQUOT  / 1H' /
      DATA SEPC,FIRAR  / '.'  , '.U.  ' /
      DATA KEYOL / '????????????' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C General initialisations :
      IF (IWFILI.LE.0.OR.IDSEAR.EQ.5) GO TO 999
      IFLACF=1
      CALL UH1TOC(HQUOT,QUOT,1)
      IF (ICAT.EQ.2) GO TO 250
      IEDIR=IEDSEL(IBD)
      IF (IWFILI.EQ.1) IEDIR=0
      FCARD=' '
      NRUN=LISRUSEL(IBD)
      IF (ICAT.EQ.3) NRUN=NRUNAA
      CALL BKCARI(NRUN,6,RUNR)
      PWFIL='/aleph/pots/'
      PWEVD = ALEDIR(:ILEDIR)//'/'
      PWEVT = ALEDIR(:ILEDIR)//'/'
      IED=INDEX(PWEVD,'edir')
      IF (IED.GT.0) THEN
         PWFIL=PWEVD
         PWFIL(IED:IED+3)='pots'
      ENDIF
C-----------------------------------------------------------------------
C FILI CARDS for so-called "RUN" files :
      IF (ICAT.NE.1) GO TO 200
C without EDIR :
      IF (IEDIR.EQ.0) THEN
         FCARD='FILI '//QUOT//PWFIL(1:LNBLNK(PWFIL))//
     +          DNADAT(IDASEL)(1:1)//'0'//RUNR//'.EPIO | EPIO'
C with EDIR :
      ELSE
         IF (LASTPR.EQ.100) THEN
            FCARD='FILI '//QUOT//PWEVT(1:LNBLNK(PWEVT))//
     +             DNADAT(IDASEL)(1:1)//'0'//RUNR//'.EDIR | EDIR'
         ELSE
            FCARD='FILI '//QUOT//PWEVD(1:LNBLNK(PWEVD))//
     +             DNADAT(IDASEL)(1:1)//'0'//RUNR//'.EDIR | EDIR'
         ENDIF
      ENDIF
      IFLACF=0
      GO TO 850
C-----------------------------------------------------------------------
C FILI for cartridges . Get some pointers and tape name :
C
 200  IF (ICAT.GT.4) GO TO 999
      JBDFS=NLINK('BDFS',IMCDAT)
      IF (JBDFS.EQ.0) GO TO 999
      KBDFS=KROW(JBDFS,IBDSEL(IBD))
      CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
      TAPNA=TAPE(1:6)
      NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      IFINU=IW(KBDFS+JBDFFN)
      IF (IFINU.LE.0) IFINU=1
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.EQ.0) GO TO 900
      KBSET=KROW(JBSET,NROW)
C Verify that this is a known ALEPH tape :
      CALL BKCHHO(TAPNA,ICERN,IHOML,IMULT,IEXA,IDLT,I3490,IERB)
      IF (IERB.NE.0) GO TO 999
      TAPNU=TAPNA
      CALL CLTOU(TAPNU)
      IFLACF=0
C FILI CARD replaced by a Warning if the current tape is Archived :
      TAPLO=' '
      CALL BKTALO(TAPNU,0,TAPLO,ILAB)
      CALL CLTOU(TAPLO)
      IF (ILAB.GT.0.AND.INDEX(TAPLO,'ARCHIV').GT.0) THEN
         FCARD='**** Warning : tape '//TAPNU//' is archived !'
         GO TO 950
      ENDIF
C No FILICARD for 'AM' copies - exception : special 'RAM' datasets for R
      IF (IW(KBDFS+JBDFCO).EQ.1.AND.TAPNA(1:2).EQ.'AM'.
     +    AND.ILABCH.NE.5)  GO TO 999
C Get type of label TLABL from database :
      CALL BKTANA(TAPNU,NAMLA,TNAT,TLABL,IHOM,IERT)
C Take care of Multifile tapes with file # ( BDFS syntax ) :
      TAPFI=' '
      CALL BKEXFI(3,TAPNA,IFINU,IER)
      TAPFI=AXFILI
 210  CONTINUE
C Format , type and tape label :
      FORMA='EPIO'
      IF (IDSEAR.EQ.1.AND.IDASEL.EQ.2.AND.IEPRAW.EQ.0) FORMA='NATI'
      TYP='CART'
      SDNAM='ALDATA'
      IF (IMCDAT.EQ.2.AND.IW(KBSET+JBSEND).EQ.1) SDNAM='KINDATA'
C-----------------------------------------------------------------------
C  FILI CARDS for RAW NATIVE data , 'AA' type :
 250  IF (ICAT.NE.2) GO TO 300
C Special syntax for 'AA' RAW tapes :
      IF (IRAWAA.EQ.1.AND.ISYEAR.LE.1994) THEN
         CALL BKFIRAA(TAPNU,ILOC,TLABL,RUNR)
         IF (ILOC.LE.0) THEN
            IFLACF=0
            FCARD='**** Warning : tape '//TAPNU//' is archived !'
            GO TO 950
         ENDIF
         FCARD='FILI '//QUOT//'R0'//RUNR//'.NAT | NATI | CART '//
     +          TAPNU//'.U.'//TLABL//'L '
      ENDIF
C Special syntax for 'AR' RAW DLTS copied from 'AA'tapes :
      IF (IRAWD2.EQ.1.AND.ISYEAR.LE.1994) THEN
         CALL BKFIRAR(TAPNU,ILOC,TLABL,RUNR,FIRR)
         IF (ILOC.LE.0) THEN
            IFLACF=0
            FCARD='**** Warning : tape '//TAPNU//' is archived !'
            GO TO 950
         ENDIF
         FCARD='FILI '//QUOT//'R0'//RUNR//'.NAT | NATI | CART '//
     +          TAPNU(1:LNBLNK(TAPNU))//FIRR(1:LNBLNK(FIRR))//
     +          TLABL//'L '
      ENDIF
      IFLACF=0
      GO TO 800
C-----------------------------------------------------------------------
C  FILI CARDS for RAW NATIVE DLTs of 1995 and after :
 300  IF (ICAT.NE.3) GO TO 400
      CALL BKFIDAR(NPOSAA,FIRR)
      IF (TAPNA(1:2).EQ.'AR'.AND.IRAWD1.EQ.1.AND.ISYEAR.GE.1995) THEN
         FCARD='FILI '//QUOT//'R0'//RUNR//'.NAT | NATI | CART '//
     +          TAPNU(1:LNBLNK(TAPNU))//FIRR(1:LNBLNK(FIRR))//
     +          TLABL//'L '
      ENDIF
      GO TO 800
C-----------------------------------------------------------------------
C  FILI CARDS for all other types of cartridges or DLTs :
 400  IF (ICAT.NE.4) GO TO 999
C Build FILI CARD for a cartridge accessed through its EDIR :
      IF (IEDIR.EQ.1) THEN
         IF (IMULT.GT.0) THEN
            CALL BKEXFI(3,TAPE(1:6),IFINU,IERAX)
            IF (IERAX.EQ.0.AND.IDLT.GT.0) TAPFI=AXEDNW(1:LNBLNK(AXEDNW))
         ELSE
            TAPFI=TAPNU//'   '
         ENDIF
         CALL CUTOL(TAPFI)
         LEVDK=LNBLNK(PWEVD)
         FCARD='FILI '//QUOT//PWEVD(1:LEVDK)//TAPFI(1:LNBLNK(TAPFI))//
     +         '.edir | EDIR'
C Build FILI CARD for a cartridge NOT accessed through its EDIR :
      ELSE
         IF (INDEX(TAPFI,SEPC).EQ.0) TAPFI=TAPNU//'.1'
         FCARD='FILI '//QUOT//SDNAM(1:LNBLNK(SDNAM))//'|'//FORMA//
     +         '|'//TYP//' '//TAPFI(1:LNBLNK(TAPFI))//SEPC//TLABL//'L '
      ENDIF
C-----------------------------------------------------------------------
C Add '-s SIZE' parameter for files greater than 200 Mbytes :
C ( ONLY for cartridges or DLTs NOT accessed through EDIRs )
 800  IF (ICAT.LE.2.OR.IEDIR.NE.0) GO TO 850
      CALL BKDATSIZ(NPER,KBSET,MBYT)
      LL=LNBLNK(FCARD)
      IF (MBYT.GT.200) THEN
         FCARD=FCARD(1:LL)//' -s '
         LIL=INDEX(FCARD,'-s')
         WRITE ( FCARD(LIL+3:LIL+5) , '(I3)' ) MBYT
      ENDIF
C Add a ' at the end of the FILICARD :
 850  LL=LNBLNK(FCARD)
      IF (LL.EQ.0.OR.IFLACF.EQ.1) GO TO 999
      FCARD=FCARD(1:LL)//QUOT
C-----------------------------------------------------------------------
C Add a comment to explain what is on cartridges :
 900  LL=LNBLNK(FCARD)
      COMMC=' '
      IF (ICAT.EQ.1) THEN
         CALL BKELEP(NRUN,ELEP,IFIL,BM,ID,NV,JBR)
         COMMC=DNADAT(IDASEL)//' Run                 Gev'
         IF (JBR.LE.0) COMMC=DNADAT(IDASEL)//
     +                       ' Run          Energy not yet known'
         WRITE (COMMC(11:16) ,1003) NRUN
         IF (JBR.GT.0) WRITE (COMMC(19:24),1004) ELEP
         GO TO 920
      ENDIF
      IF (ICAT.NE.4) GO TO 950
      IF (IDASEL.EQ.2.AND.IMCDAT.EQ.1.AND.IDSEAR.NE.7) GO TO 950
      IBSPF=IW(KBSET+JBSEBS)
      JBSPF=NLINK('BSPF',NPER)
      IF (JBSPF.EQ.0) GO TO 900
      KBSPF=KROW(JBSPF,IBSPF)
      CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMT)
C Truncate the comment as much as possible :
      CALL CLTOU(COMT)
      IF (IDSEAR.EQ.7.OR.IMCDAT.EQ.2.OR.IDASEL.GE.5) THEN
         COMMC=COMT
         GO TO 920
      ENDIF
      IRU=INDEX(COMT,'RUNS')
      COMMC=COMT(1:4)//' '//COMT(IRU:LNBLNK(COMT))
 920  ILOL=LL+3
      ILCO=132-ILOL
      ILG=MIN0(80,ILCO)
      FCARD=FCARD(1:LL)//' ! '//COMMC(1:ILG)
C
C Write the FILI card :
C
 950  LL=LNBLNK(FCARD)
      IF (IFLACF.EQ.1.OR.LL.LE.0) GO TO 999
      WRITE (LWRFIL,1002) FCARD(1:LL)
C ------------------------------------------------------------------
C Add a comment to explain some LEP II MCarlo keywords :
      IF (IMCDAT.NE.2.OR.IGEOYR.LT.IYERF) GO TO 999
      IF (IROW97.GT.0) GO TO 999
      LO=LNBLNK(KEYOL)
      IBSPF=IW(KBSET+JBSEBS)
      IF (IBSPF.LE.0) GO TO 999
      JBSPF=NLINK('BSPF',NPER)
      IF (JBSPF.LE.0) GO TO 999
      KBSPF=KROW(JBSPF,IBSPF)
      CALL PRMC97(NPER,KBSPF,KEYNW,COM97)
      LK=LNBLNK(KEYNW)
      LC=LNBLNK(COM97)
      IF (LK.EQ.0.OR.LC.EQ.0.) GO TO 999
      IF (KEYNW(1:LK).EQ.KEYOL(1:LO)) GO TO 999
C new keyword : print explanation
      KEYOL=' '
      KEYOL=KEYNW
      FCACO=' '
      FCACO='****==> Explanation of keyword '//KEYNW(1:LK)//
     +      ' in the above comment : '//COM97(1:LC)
      LF=LNBLNK(FCACO)
      WRITE (LWRFIL,1002) FCACO(1:LF)
C
 999  RETURN
 1002 FORMAT (A)
 1003 FORMAT (I6)
 1004 FORMAT (F6.2)
      END
      SUBROUTINE PRBHEA(LUN)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout summary of datasets search
C  Author  J. Boucrot 07-Jul-1989
C Called from BKSEAR                                  from BOOKLIB
C Calls  PRLASR                                       from BOOKLIB
C Input parameters :
C   LUN = Fortran unit onto which to print
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
      COMMON / SELSET / JBPNTS,NFDSET,NLDSET,NFEVSL,NLEVSL
      CHARACTER SELD*5,SELM*4,CH1*1,LINE*72
      CHARACTER*15 SELC(2)
      CHARACTER*11 SELDM(4)
      CHARACTER*8 NDD,NTT
      DIMENSION DD(2),TT(2)
      CHARACTER*28 BLATR(4)
      DATA BLATR / 'ONLY TPC Short with Problems',
     +             'ONLY data with TPC Short OK ',
     +             'NO TPC short                ',
     +             'ALL  data incl TPC Short OK ' /
      DATA SELD,SELM / 'KRPDM' , 'DTCE' /
      DATA SELC / ' REAL DATA     ',' SIMULATED DATA' /
      DATA SELDM /'  DISK FILE','  TAPE     ','  CARTRIDGE',
     +            '  EXABYTE  '/
C----------------------------------------------------------------------
      IF (IDSEAR.GE.8) GO TO 999
      CALL DATIMH(DD,TT)
      CALL UHTOC(DD,4,NDD,8)
      CALL UHTOC(TT,4,NTT,8)
      IF (LUN.EQ.LWRUSR) THEN
         WRITE (LWRUSR,1019) SCAVER,NDD,NTT
         IF (IBKINT.EQ.-1) WRITE (LWRUSR,1119)
         IF (IBKINT.EQ.2.AND.NBREDO.GT.0.AND.CARDSF.NE.' ')
     +       WRITE ( LWRUSR , 1023 )
         IF (IBKINT.EQ.2.AND.NBREDO.EQ.0.AND.CARDSF.EQ.' ')
     +       WRITE ( LWRUSR , 1023 )
         IF (NBREDO.EQ.0.AND.CARDSF.NE.' ')
     +       WRITE ( LWRUSR , 1024 )   CARDSF(1:LNBLNK(CARDSF))
      ENDIF
C
      WRITE (LUN,1001)
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,*) ' ** Summary of SCANBOOK  search selections   *'
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,1001)
      IF (IPRONL.EQ.1) WRITE (LUN,1002)
      IF (IPRONL.EQ.2) WRITE (LUN,1003)
      IF (IDSEAR.EQ.2) WRITE (LUN,1004) OPSYST(1:3)
      IF (IB1RUN.GE.NRUMIN.AND.NTAPKY.EQ.0) WRITE (LUN,1005) IB1RUN
      IF (IDSEAR.EQ.5.AND.NTAPKY.EQ.1) WRITE (LUN,1006) LISTAP(1)
      WRITE (LUN,1000) MOD(IBPRUS,10)
      LINE=' ++ Selection on the kind of data   : '//SELC(IMCDAT)
      WRITE (LUN,*) LINE
C
      IF (SELDAT.NE.'A'.AND.SELDAT.NE.' ') THEN
         LINE=' ++ Selection on the nature of data :  '
         LN=LNBLNK(SELDAT)
         DO 5 I=1,LN
            CH1=SELDAT(I:I)
            IK=INDEX(SELD,CH1)
            IF (IK.EQ.0) GO TO 5
            LINE=LINE(1:LNBLNK(LINE))//DNADAT(IK)
 5       CONTINUE
         WRITE (LUN,*) LINE
       ENDIF
C
      IF (SELMAG.NE.'A'.AND.SELMAG.NE.' ') THEN
         LINE=' ++ Selection on Magnetic device    :  '
         LN=LNBLNK(SELMAG)
         DO 6 K=1,LN
            CH1=SELMAG(K:K)
            IKK=INDEX(SELM,CH1)
            IF (IKK.EQ.0) GO TO 6
            LINE=LINE(1:LNBLNK(LINE))//SELDM(IKK)
 6       CONTINUE
         WRITE (LUN,*) LINE
       ENDIF
C
       IF (ENGLEP.GT.0.)  WRITE (LUN,1011) ENGLEP
       IF (ISPHYS.NE.0)   WRITE (LUN,1012) ISPHYS
       IF (LASTPR.EQ.1.AND.IMCDAT.EQ.1.AND.IDSEAR.EQ.1) THEN
          WRITE (LUN,1034)
          GO TO 10
       ENDIF
       IF (LASTPR.EQ.2.AND.IMCDAT.EQ.1.AND.IDSEAR.EQ.1) THEN
          WRITE (LUN,1036)
          GO TO 10
       ENDIF
       IF (LASTPR.GE.100) THEN
          IF (LASTPR.EQ.100)  WRITE (LUN,1037)
          IF (LASTPR.EQ.1000) WRITE (LUN,1038)
          GO TO 10
       ENDIF
       IF (ISDATL.GT.0) THEN
          WRITE (LUN,1031) ISDATE,ISDATL
          GO TO 10
       ENDIF
       IF (ISDATE.LT.0) WRITE (LUN,1032) ISDATE
       IF (ISDATE.GT.0) WRITE (LUN,1033) ISDATE
 10    CONTINUE
       IF (IMCDAT.EQ.1.AND.ISYEAR.GT.0) WRITE (LUN,1035) ISYEAR
C
       JBSFI=IW(NAMIND('SFIL'))
       IF (JBSFI.GT.0) THEN
          NSFI=IW(JBSFI)
          IF (IW(JBSFI+NSFI).LT.0) THEN
             WRITE (LUN,1049) IW(JBSFI+1),IABS(IW(JBSFI+2))
          ELSE
             WRITE (LUN,1050) (IW(JBSFI+KK),KK=1,NSFI)
          ENDIF
          GO TO 16
       ENDIF
C
       JBSRU=IW(NAMIND('SRUN'))
       IF (JBSRU.GT.0) THEN
          NSRU=IW(JBSRU)
          IF (IW(JBSRU+NSRU).LT.0) GO TO 15
          WRITE (LUN,1018) (IW(JBSRU+KK),KK=1,NSRU)
          GO TO 16
       ENDIF
 15    IF (ISRUNF.GT.NRUMIN.OR.(ISRUNF.GT.1.AND.IMCDAT.EQ.2))
     +     WRITE (LUN,1014) ISRUNF,ISRUNL
 16    CONTINUE
       IF (ISPERF.EQ.1) THEN
          WRITE (LUN,1021)
          GO TO 17
       ENDIF
       IF (ISELPH.NE.0.AND.IMCDAT.EQ.1)   WRITE (LUN,1020)
       IF (IPHYGR.GE.4.AND.IPHYGR.LE.NGROUF) WRITE (LUN,1022)
     +     KEYWPH(IPHYGR),GROUPH(IPHYGR)
      IF (PHYKEY.NE.' ') WRITE (LUN,1028) PHYKEY(1:58)
 17    IF (SELCAT.NE.' '.AND.SELFOR.EQ.' ')
     +     WRITE (LUN,1017) SELCAT
       IF (SELCAT.NE.' '.AND.SELFOR.NE.' ')
     +     WRITE (LUN,1027) SELCAT,SELFOR
       IF (KINCOD.NE.0)   WRITE (LUN,1015) KINCOD
      IF (CODM97.NE.' ') WRITE (LUN,1051) CODM97
       IF (ISEED1.NE.0)   WRITE (LUN,1016) ISEED1,ISEED2
       IF (IPRGVR.NE.0)   WRITE (LUN,1041) IPRGVR
       IF (IMINPR.GT.0)   WRITE (LUN,1045) IMINPR
       IF (INANPR.GT.0)   WRITE (LUN,1046) INANPR
       IF (IMCDAT.EQ.1.AND.LASTPR.EQ.1.AND.IBTQSE.NE.2) THEN
          I=IBTQSE+3
          WRITE (LUN,1047) BLATR(I)
       ENDIF
       IF (IGALPR.NE.0)   WRITE (LUN,1042) IGALPR
       IF (IGEOYR.NE.0)   WRITE (LUN,1043) IGEOYR
       IF (ISELPA.NE.0)   WRITE (LUN,1044) ISELPA
       IF (IZASKD.GT.0) WRITE ( LUN,1048 ) IZASKD
       WRITE (LUN,1001)
C
       IF (LUN.EQ.LWRUSR) CALL PRLASR(LUN,0)
 999   RETURN
C
C----------------------------------------------------------------------
 1000 FORMAT ('  ++ Print level requested           : ',I5)
 1001 FORMAT (/)
 1002 FORMAT ('  ++ Printing of Informations on RUNS',
     +        ' requested  ++ '/)
 1003 FORMAT ('  ++ Printing of List of RUNS for various',
     +        ' LEP energies  ++ '/)
 1004 FORMAT ('  ++ Printing of Disk Files on ',2X,A3,'   ++ '/)
 1005 FORMAT ('  ++ Printing of ALL INFO on run ',I8,'    ++ '/)
 1006 FORMAT ('  ++ Printing of ALL INFO on Cartridge ',2X,A6,
     +        '    ++ '/)
 1011 FORMAT ('  ++ Selection on LEP energy (Gev)   : ',2X,F8.3)
 1012 FORMAT ('  ++ Selection on Physics Flag       : ',2X,I6)
 1014 FORMAT ('  ++ Selection on Run Numbers        : ',2X,2I8)
 1015 FORMAT ('  ++ Selection on KINCAL code        : ',2X,I6)
 1016 FORMAT ('  ++ Selection on RANMAR seeds       : ',2X,2I8)
 1017 FORMAT ('  ++ Selection on Aleph Tape Categ.  : ',1X,A2)
 1018 FORMAT ('  ++ Selection on Run Numbers        : ',2X,12I6/,
     +           41X,12I6)
 1019 FORMAT (/' *** SCANBOOK ',A4,'  - RUN  of',2X,A8,' at',2X,A8/)
 1020 FORMAT ('  ++ Selection on GOOD RUNS requested ')
 1021 FORMAT ('  ++ Selection on "PERF" RUNS requested ')
 1022 FORMAT ('  ++ Selection on Physics Group = ',2X,A2,2X,A20)
 1023 FORMAT (/'  ++ Selection done from Interactive Dialogue')
 1024 FORMAT (/'  ++ Selection from File :',2X,A40)
 1027 FORMAT ('  ++ Selection on Aleph Tape Categ.  : ',1X,A2,
     +           4X,A4)
 1028 FORMAT ('  ++ Selection on Physics Group = ',2X,A58)
 1029 FORMAT ('         on VAX node :  ',2X,A6)
 1031 FORMAT ('  ++ Selection on Processing Date    : ',2X,'BETWEEN',
     +           I8,' AND',I8)
 1032 FORMAT ('  ++ Selection on Processing Date    : ',2X,'BEFORE',I8)
 1033 FORMAT ('  ++ Selection on Processing Date    : ',2X,' AFTER',I8)
 1034 FORMAT ('  ++ Selection of LAST JULIA reprocessing')
 1035 FORMAT ('  ++ Selection on Year of Data Taking: ',2X,I8)
 1036 FORMAT ('  ++ Selection of OLD  JULIA reprocessing')
 1037 FORMAT ('  ++ Selection of JULIA TEST Reprocessing')
 1038 FORMAT ('  ++ Selection of COMPLETE SET of datasets')
 1041 FORMAT ('  ++ Selection on JULIA   Version #  : ',2X,2I8)
 1042 FORMAT ('  ++ Selection on GALEPH  Version #  : ',2X,2I8)
 1043 FORMAT ('  ++ Selection on GALEPH  Year Geom  : ',2X,2I8)
 1044 FORMAT ('  ++ Selection on Special Particle   : ',2X,2I8)
 1045 FORMAT ('  ++ Selection on MINI    Version #  : ',2X,2I8)
 1046 FORMAT ('  ++ Selection on NANO    Version #  : ',2X,2I8)
 1047 FORMAT ('  ++ Selection on Tracking Quality   : ',2X,A28)
 1048 FORMAT ('  ++ Selection on # of Z0s           : ',2X,I8)
 1049 FORMAT ('  ++ Selection on LEP Fill Numbers   : ',2X,2I6)
 1050 FORMAT ('  ++ Selection on LEP Fill Numbers   : ',2X,12I6/,
     +           41X,12I6)
 1051 FORMAT ('  ++ Special MC 97 selection         : ',2X,A60)
 1119 FORMAT (' *** X11 Version running ***')
C
      END
      SUBROUTINE PRCARD
C ----------------------------------------------------------------------
CKEY STEER
C! Prints on output the datacards to rerun a job
C  J. Boucrot   10-Jan-1990
C  Modified  AM. Lutz      30-MAR-1990
C Modified: Helge Meinhard  02-Sep-1992   UNIX version
C  Largely rewritten 25-June-1990 for new syntax of SCANBOOK cards
C  Calls BKCARI,BKINCA                              from ALEPHLIB
C  Calls UH1TOC                                     from KERNLIB
C  Called from BKCLOD                               from BOOKLIB
C ----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      PARAMETER ( NTAPL = 8 )
      PARAMETER ( NSTR6 = 11 , NSTR5 = 13 , NRMX = 9999 )
      CHARACTER QUOT*1,VBAR*3,CARD*72,LET10*10
      CHARACTER CARD1*72,CARD2*72,BLAN6*6,LET7*7
      CHARACTER DDA*4,ALL*4,YEA*4,RUQ*5,HOM*8,CARD3*120
      CHARACTER*3 YENO(2)
      CHARACTER LET1*1,LET2*2,LET3*3,LET4*4,LET5*5,LET6*6
      INTEGER BKINCA
      DATA HQUOT / 1H' /
      DATA ALL /'All ' /
      DATA YENO / 'Yes' , 'No ' /
      DATA VBAR ,BLAN6 / ' | ' , '      ' /
C ----------------------------------------------------------------------
      IF (IBKINT.NE.2)   GO TO 999
      CARD=' '
      CALL UH1TOC(HQUOT,QUOT,1)
C
C Build the general data cards ( either for TAPES or SCANBOOK )
C
      WRITE (LWRUSR,1001)
      IF (IDSEAR.NE.0) THEN
         WRITE (LWRUSR,1021)
         WRITE (LWRUSR,1022)
      ENDIF
C Build the 'BTSK' data card
      CARD='BTSK '//QUOT
      IF (IDSEAR.GT.0) THEN
         IDD=IDSEAR
         IF (IDSEAR.EQ.6.AND.IMCDAT.EQ.1) IDD=1
         IF (IDSEAR.EQ.6.AND.IMCDAT.EQ.2) IDD=4
         CALL BKCARI(IDD,1,LET1)
         CARD=CARD(1:LNBLNK(CARD))//'SCANBOOK = '//LET1
      ENDIF
      CARD=CARD(1:LNBLNK(CARD))//QUOT
      WRITE (LWRUSR,1003) CARD
C ----------------------------------------------------------------------
C Build data cards after a SCANBOOK job without input cards:
      IF (IDSEAR.LE.0) GO TO 999
C SCIN  data card :
C
      IDA=0
      DDA=ALL
C Nature of data :
      DO 5 IOK=1,NNDAT
         IF (SELDAT(1:1).NE.DNADAT(IOK)(1:1)) GO TO 5
         DDA=DNADAT(IOK)
         GO TO 6
 5    CONTINUE
 6    CARD='SCIN '//QUOT//' Nature_of_Data = '//DDA//VBAR
C LEP Energy :
      IF (ENGLEP.LE.0.) THEN
         CARD=CARD(1:LNBLNK(CARD))//' LEP_Energy = '//ALL//VBAR
      ELSE
         IELEP=NINT(1000.*ENGLEP)
         WRITE ( LET6 , '(I6)' )  IELEP
         CARD=CARD(1:LNBLNK(CARD))//' LEP_Energy = '//LET6//VBAR
      ENDIF
      CARD=CARD(1:LNBLNK(CARD))//QUOT
      WRITE (LWRUSR,1003) CARD
C Run_Quality :
      IF (IMCDAT.EQ.2) GO TO 15
      CARD='     '//QUOT//' Run_Qual = '
      IF (PHYKEY.NE.' ') THEN
         CARD=CARD(1:LNBLNK(CARD))//' '//
     +   PHYKEY(1:LNBLNK(PHYKEY))//VBAR//QUOT
         GO TO 12
      ENDIF
      IF (ISPERF.EQ.0.AND.ISELPH.EQ.1.AND.IPHYGR.EQ.0) THEN
         CARD=CARD(1:LNBLNK(CARD))//' PERFMAYB'//VBAR//QUOT
         GO TO 12
      ENDIF
      RUQ=ALL//' '
      IF (ISPERF.EQ.1) RUQ='PERF '
      IF (IPHYGR.GT.0.AND.IPHYGR.LE.NGROUF) RUQ=KEYWPH(IPHYGR)//'   '
      CARD=CARD(1:LNBLNK(CARD))//' '//RUQ//VBAR//QUOT
 12   WRITE (LWRUSR,1003) CARD
C Year :
 15   IF (ISYEAR.LE.0) THEN
         YEA=ALL
      ELSE
         WRITE ( YEA  , '(I4)' )  ISYEAR
      ENDIF
      CARD='     '//QUOT//' YEAR = '//YEA//VBAR
C Homelab :
      IF (IDSEAR.NE.1.AND.IDSEAR.NE.4.AND.IDSEAR.NE.8) GO TO 18
      IF (ILABCH.EQ.0) GO TO 18
      HOM='All'
      IF (ILABCH.GT.0) HOM=CLISTL(ILABCH)(1:8)
      CARD=CARD(1:LNBLNK(CARD))//' Homelab = '//HOM//VBAR
C Format of data :
 18   IF (IMCDAT.EQ.2.OR.(SELDAT.NE.'R'.AND.SELDAT.NE.'P')) GO TO 20
      CARD=CARD(1:LNBLNK(CARD))//QUOT
      WRITE (LWRUSR,1003) CARD
      LET4=ALL
      IF (SELFOR(1:1).EQ.'N'.OR.SELFOR(1:1).EQ.'E') LET4=SELFOR
      CARD='     '//QUOT//' Format = '//LET4//VBAR
C
 20   LL=LNBLNK(CARD)
      INN=INDEXB(CARD,'|')
      CARD=CARD(1:INN-1)//QUOT
      WRITE (LWRUSR,1003) CARD
      IF (IDSEAR.EQ.8) THEN
         CARD=' '
         LET1=' '
         CALL CSETDI(IMCDAT,LET1,1,1)
         CARD='OPT8 '//LET1
         WRITE ( LWRUSR,1003) CARD
         GO TO 700
      ENDIF
C
C ----------------------------------------------------------------------
C MNAN Data Card : MINI / NANO Version Number :
      ISPPR=0
      IF (IMINPR.GT.0) THEN
         ISPPR=ISPPR+1
         WRITE ( LET3 , '(I3)' )  IMINPR
         CARD='MNAN '//QUOT//' MINI_Version = '//LET3//QUOT
      ENDIF
      IF (INANPR.GT.0) THEN
         ISPPR=ISPPR+1
         WRITE ( LET3 , '(I3)' )  INANPR
         CARD='MNAN '//QUOT//' NANO_Version = '//LET3//QUOT
      ENDIF
      IF (ISPPR.GT.0) WRITE (LWRUSR,1003) CARD
C TRKQ Data Card : Selection on Tracking Quality :
      ISTRK=0
      IF (IBTQSE.NE.2) THEN
         ISTRK=ISTRK+1
         WRITE ( LET3 , '(I3)' )  IBTQSE
         CARD='TRKQ '//QUOT//' TPC_Shorts = '//LET3//QUOT
      ENDIF
      IF (ISTRK.GT.0) WRITE (LWRUSR,1003) CARD
C SDL1 Data Card : Selected LEP I datasets of 1995 required :
      IF (ILP195.NE.0) THEN
         CARD='SDL1 '//'  ! LEP I data of 1995 required'
         WRITE (LWRUSR,1003) CARD
      ENDIF
C Write a 'SDLT' card when necessary :
      IF (IDLDAT.NE.0.OR.IDLCRW.NE.0.OR.IDLRAW.NE.0) THEN
         CARD=' '
         CARD(1:4)='SDLT'
         WRITE ( LWRUSR,1003) CARD
      ENDIF
C PROC  data card :
C
      IF (IDSEAR.EQ.3) GO TO 50
      IOPRO=0
      CARD='PROC '//QUOT
      IF (IDSEAR.GE.2.AND.IDSEAR.LE.4.AND.LASTPR.NE.100) GO TO 25
      IF (IDSEAR.EQ.1.AND.SELDAT.EQ.'R') GO TO 25
      IF (LASTPR.GE.100) THEN
         LET4='TEST'
         IF (LASTPR.EQ.1000) LET4='COMP'
         GO TO 21
      ENDIF
      IF (LASTPR.LT.0.OR.LASTPR.GT.2) GO TO 25
      IF (LASTPR.EQ.0.AND.IPRGVR.GT.0.AND.IMCDAT.EQ.1) THEN
         LET4(1:1)='J'
         CALL BKCARI(IPRGVR,3,LET3)
         LET4(2:4)=LET3
         GO TO 21
      ENDIF
      IF (LASTPR.EQ.0) LET4='ALL '
      IF (LASTPR.EQ.1) LET4='LAST'
      IF (LASTPR.EQ.2) LET4='OLD '
 21   IOPRO=IOPRO+1
      CARD=CARD(1:LNBLNK(CARD))//' Julia_Processing = '//LET4//VBAR
 25   CONTINUE
C Dates of processing :
      IF (ISDATE.NE.0) THEN
      IOPRO=IOPRO+1
      WRITE ( LET6 , '(I6)' )  IABS(ISDATE)
         IF (ISDATE.LT.0) THEN
            CARD=CARD(1:LNBLNK(CARD))//' Before = '//LET6//VBAR
         ELSE
            CARD=CARD(1:LNBLNK(CARD))//' After = '//LET6//VBAR
         ENDIF
      ENDIF
      IF (ISDATL.NE.0) THEN
      IOPRO=IOPRO+1
         WRITE ( LET6 , '(I6)' )  IABS(ISDATL)
         CARD=CARD(1:LNBLNK(CARD))//' Before = '//LET6//VBAR
      ENDIF
      IF (IOPRO.EQ.0) GO TO 50
      INN=INDEXB(CARD,'|')
      CARD=CARD(1:INN-1)//QUOT
      WRITE (LWRUSR,1003) CARD
C ----------------------------------------------------------------------
C MCAR  data card :
C
 50   IF (IMCDAT.NE.2) GO TO 90
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.3.OR.IDSEAR.EQ.5) GO TO 90
C KINGAL Code :
      IF (KINCOD.EQ.0) LET4=ALL
      IF (KINCOD.GT.0) WRITE ( LET4 , '(I4)' ) KINCOD
      CARD='MCAR '//QUOT//' KINCOD = '//LET4//VBAR
C Ranmar seeds :
      IF (ISEED1.GT.0) THEN
         WRITE ( LET4 , '(I4)' ) ISEED1
         CARD=CARD(1:LNBLNK(CARD))//' Ranm1 = '//LET4//VBAR
      ENDIF
      IF (ISEED2.GT.0) THEN
         WRITE ( LET5 , '(I5)' ) ISEED2
         CARD=CARD(1:LNBLNK(CARD))//' Ranm2 = '//LET5//VBAR
      ENDIF
C Special Particle code :
      IF (ISELPA.NE.0) THEN
         WRITE ( LET3 , '(I3)' ) ISELPA
         CARD=CARD(1:LNBLNK(CARD))//' Part = '//LET3//VBAR
      ENDIF
C Program Version , GALEPH year of geometry  , GALEPH version :
      IF (IPRGVR+IGEOYR+IGALPR.EQ.0) THEN
         INN=INDEXB(CARD,'|')
         CARD=CARD(1:INN-1)//QUOT
         WRITE (LWRUSR,1003) CARD
         GO TO 90
      ELSE
         CARD=CARD(1:LNBLNK(CARD))//QUOT
         WRITE (LWRUSR,1003) CARD
      ENDIF
      CARD='     '//QUOT
      IF (IPRGVR.NE.0) THEN
         WRITE ( LET4 , '(I4)' )  IPRGVR
         CARD=CARD(1:LNBLNK(CARD))//' Julia_Vers = '//LET4//VBAR
      ENDIF
      IF (IGALPR.NE.0) THEN
         WRITE ( LET4 , '(I4)' )  IGALPR
         CARD=CARD(1:LNBLNK(CARD))//' Galeph_Vers = '//LET4//VBAR
      ENDIF
      IF (IGEOYR.GT.0) THEN
         WRITE ( LET4 , '(I4)' ) IGEOYR
         CARD=CARD(1:LNBLNK(CARD))//' Galeph_Geom = '//LET4//VBAR
      ENDIF
      INN=INDEXB(CARD,'|')
      CARD=CARD(1:INN-1)//QUOT
      WRITE (LWRUSR,1003) CARD
C ----------------------------------------------------------------------
C SCOU  data card :
C
 90   IBPR=MOD(IBPRUS,10)
      WRITE ( LET1 , '(I1)' )  IBPR
C printout level :
      CARD='SCOU '//QUOT//' Printout_Level = '//LET1//VBAR
      IF (IDSEAR.EQ.3) THEN
         IF (IPSROU.EQ.0) GO TO 98
         CARD=CARD(1:LNBLNK(CARD))//QUOT
         WRITE (LWRUSR,1003) CARD
         GO TO 95
      ENDIF
C FILI Cards asked :
      IF (IWFILI.GT.0) THEN
         LET3=YENO(1)
      ELSE
         LET3=YENO(2)
      ENDIF
      CARD=CARD(1:LNBLNK(CARD))//' FILI_Cards = '//LET3//VBAR
      IF (IWFILI.GE.2) THEN
         LET3=YENO(1)
      ELSE
         LET3=YENO(2)
      ENDIF
      CARD=CARD(1:LNBLNK(CARD))//' EDIR = '//LET3//VBAR
      CARD=CARD(1:LNBLNK(CARD))//QUOT
      IF (IPSROU.EQ.0) GO TO 99
      WRITE (LWRUSR,1003) CARD
C Option to write SRUN data cards :
 95   IF (IPSROU.GT.0) THEN
         LET3=YENO(1)
      ELSE
         LET3=YENO(2)
      ENDIF
      IF (IPSROU.EQ.1) THEN
         CARD='     '//QUOT//' SRUN_Cards = '//LET3//VBAR
      ELSE IF (IPSROU.EQ.10) THEN
         CARD='     '//QUOT//' IRUN_Cards = '//LET3//VBAR
      ENDIF
C Cards sorted by LEP energy :
      IF (IWFILI+IPSROU.LE.0) GO TO 98
      IF (ISORLE.GT.0) THEN
         LET3=YENO(1)
      ELSE
         LET3=YENO(2)
      ENDIF
      CARD=CARD(1:LNBLNK(CARD))//' Sorted_by_ENERGY = '//LET3//VBAR
C For Option 3 , category of printout choosen :
 98   IF (IDSEAR.NE.3) GO TO 99
      WRITE ( LET1 , '(I1)' ) IPRONL
      CARD=CARD(1:LNBLNK(CARD))//' Opt3_Display = '//LET1//VBAR
C
 99   INN=INDEXB(CARD,'|')
      CARD=CARD(1:INN-1)//QUOT
      WRITE (LWRUSR,1003) CARD
C ----------------------------------------------------------------------
C Special 1997 energy grouping for 130/136 or 182/184 GeV
      IF (IENV97.GT.0) THEN
         CARD=' '
         WRITE (LET2, '(I1)' ) IENV97
         CARD='EG97 '//LET2(1:LNBLNK(LET2))//' ! 1997 Energy grouping'
         WRITE (LWRUSR,1003) CARD
      ENDIF
C Special 1997 MCarlo selections:
      IF (INIP97.GT.0.AND.IROW97.GT.0) THEN
         CARD=' '
         WRITE (LET2, '(I2)' ) IROW97
         CARD='MC97 '//LET2(1:LNBLNK(LET2))//' ! Special MC sel.'
         IF (CODM97.NE.' ') CARD=CARD(1:LNBLNK(CARD))//' : '//
     +                           CODM97(1:LNBLNK(CODM97))
         WRITE (LWRUSR,1003) CARD
      ENDIF
C ----------------------------------------------------------------------
C SRUN data card , coming from SRUN bank :
      JSFIL=IW(NAMIND('SFIL'))
      IF (JSFIL.GT.0) GO TO 400
      JSRUN=IW(NAMIND('SRUN'))
      IF (JSRUN.EQ.0) GO TO 400
      NSRUN=IW(JSRUN)
      IF (NSRUN.LE.0) GO TO 400
C Only a run range :
      IF (NSRUN.EQ.2.AND.IW(JSRUN+2).LT.0) THEN
         WRITE ( LWRUSR , 1041 ) IW(JSRUN+1),IW(JSRUN+2)
         GO TO 400
      ENDIF
C List of runs given :
      NSTRU=NSTR5
      DO 100 IRR=1,NSRUN
         IF (IW(JSRUN+IRR).GT.NRMX) THEN
            NSTRU=NSTR6
            GO TO 110
         ENDIF
100   CONTINUE
110   ISTAR=1
      NLINS=1+NSRUN/NSTRU
      DO 200 ILIN=1,NLINS
         ISTOP=ISTAR+NSTRU-1
         ISTOP=MIN0(ISTOP,NSRUN)
         IF (ILIN.EQ.1) THEN
            IF (NSTRU.EQ.NSTR5) WRITE (LWRUSR,1042)
     +         (IW(JSRUN+KK),KK=ISTAR,ISTOP)
            IF (NSTRU.EQ.NSTR6) WRITE (LWRUSR,1043)
     +         (IW(JSRUN+KK),KK=ISTAR,ISTOP)
         ELSE
            IF (NSTRU.EQ.NSTR5) WRITE (LWRUSR,1044)
     +         (IW(JSRUN+KK),KK=ISTAR,ISTOP)
            IF (NSTRU.EQ.NSTR6) WRITE (LWRUSR,1045)
     +         (IW(JSRUN+KK),KK=ISTAR,ISTOP)
         ENDIF
         ISTAR=ISTAR+NSTRU
 200  CONTINUE
C ----------------------------------------------------------------------
C SFIL data card , coming from SFIL bank :
 400  NSFIL=IW(JSFIL)
      IF (NSFIL.LE.0) GO TO 440
C Only a Fill range :
      IF (NSFIL.EQ.2.AND.IW(JSFIL+2).LT.0) THEN
         WRITE ( LWRUSR , 1051 ) IW(JSFIL+1),IW(JSFIL+2)
         GO TO 440
      ENDIF
C List of fills given :
      NSTRU=NSTR5
      DO 410 IRR=1,NSFIL
         IF (IW(JSFIL+IRR).GT.NRMX) THEN
            NSTRU=NSTR6
            GO TO 412
         ENDIF
410   CONTINUE
412   ISTAR=1
      NLINS=1+NSFIL/NSTRU
      DO 420 ILIN=1,NLINS
         ISTOP=ISTAR+NSTRU-1
         ISTOP=MIN0(ISTOP,NSFIL)
         IF (ILIN.EQ.1) THEN
            IF (NSTRU.EQ.NSTR5) WRITE (LWRUSR,1052)
     +         (IW(JSFIL+KK),KK=ISTAR,ISTOP)
            IF (NSTRU.EQ.NSTR6) WRITE (LWRUSR,1053)
     +         (IW(JSFIL+KK),KK=ISTAR,ISTOP)
         ELSE
            IF (NSTRU.EQ.NSTR5) WRITE (LWRUSR,1044)
     +         (IW(JSFIL+KK),KK=ISTAR,ISTOP)
            IF (NSTRU.EQ.NSTR6) WRITE (LWRUSR,1045)
     +         (IW(JSFIL+KK),KK=ISTAR,ISTOP)
         ENDIF
         ISTAR=ISTAR+NSTRU
 420  CONTINUE
C ----------------------------------------------------------------------
C Generate the 'BTLI' data card :
C Lists of contiguous tapes :
C
 440  CONTINUE
      IF (IDSEAR.NE.5.OR.NTAPKY.LE.0) GO TO 700
      IJUMT=0
C Special syntax if Exabyte with file number as input :
      IF (IDSEAR.EQ.5.AND.NTAPKY.EQ.1.AND.IAXFLN.GT.0) THEN
         CARD='BTLI '//QUOT//AXFILI//QUOT
         IF (LISTAP(1)(7:8).EQ.'  ')
     +       CARD = 'BTLI '//QUOT//LISTAP(1)(1:6)//QUOT//'    '
         WRITE ( LWRUSR,1003) CARD
         GO TO 700
      ENDIF
      IF (NTAPKY.LT.2) GO TO 470
      ITOLD=BKINCA(LISTAP(1)(3:6))
      DO 450 ITP=2,NTAPKY
         ITNEW=BKINCA(LISTAP(ITP)(3:6))
         IF (ITNEW-ITOLD.NE.1) IJUMT=1
         ITOLD=ITNEW
 450  CONTINUE
C
 470  CONTINUE
      IF (IJUMT.EQ.0.AND.NTAPKY.GT.1) THEN
         CARD='BTLI '//QUOT//LISTAP(1)//VBAR//'TO'//VBAR//
     +         LISTAP(NTAPKY)//QUOT
         WRITE (LWRUSR,1003) CARD
         GO TO 700
      ENDIF
C
C Lists of non-contiguous VSN's :
C
      CARD1='BTLI '//QUOT
      CARD2='XXXXXX'
      NTOK=0
      IWRIT=0
      CARD=CARD1
      DO 472 ITK=1,NTAPKY
         NTOK=NTOK+1
         CARD=CARD(1:LNBLNK(CARD))//LISTAP(ITK)(1:6)//VBAR
         IF (ITK.EQ.NTAPKY)
     +      CARD=CARD(1:LNBLNK(CARD)-1)//QUOT
         IF (NTOK.NE.NTAPL) GO TO 472
         IWRIT=IWRIT+1
         IF (IWRIT.NE.1) CARD(1:6)=BLAN6
         WRITE (LWRUSR,1003) CARD
         CARD=CARD2
         NTOK=0
 472  CONTINUE
      IF (IWRIT.GE.1) CARD(1:6)=BLAN6
      WRITE (LWRUSR,1003) CARD
 700  CONTINUE
      CARD='ENDQ'
      WRITE (LWRUSR,1003) CARD
C
 999  RETURN
C ----------------------------------------------------------------------
 1001 FORMAT (//2X,68(1H*)/12X,
     +  'Next time you can obtain the same output '//5X,
     +  '  1 - by cataloguing the data cards below on a file :')
 1021 FORMAT (5X,'           e.g.   mycards.file   ')
 1022 FORMAT (/5X,'  2 - then by typing the command :',
     + ' " SCANBOOK mycards.file "'/)
 1003 FORMAT (A72)
 1011 FORMAT (6X,4I6)
 1041 FORMAT ('SRUN ',2I8)
 1042 FORMAT ('SRUN ',13I5)
 1043 FORMAT ('SRUN ',11I6)
 1044 FORMAT (5X,13I5)
 1045 FORMAT (5X,11I6)
 1051 FORMAT ('SFIL ',2I8)
 1052 FORMAT ('SFIL ',13I5)
 1053 FORMAT ('SFIL ',11I6)
C
      END
      SUBROUTINE PRCHKRU
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of warnings on FILICARD file for Real Data
C  Author  J.Boucrot  2-Dec-1996
C Called from PRDATSET                            from BOOKLIB
C Calls BKFPER,BKPOIN,BKRUOK                      from BOOKLIB
C----------------------------------------------------------------------
       PARAMETER ( MINER = 100000 )
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
C This routine is called only for real data on restrictive conditions
C to avoid useless annoying warnings :
      ICHKP=IW(NAMIND('CHKP'))
      IF (ICHKP.GT.0) GO TO 5
      IF (IWFILI.LE.0.OR.IWFILI.GT.2) GO TO 999
      IF (IMCDAT.NE.1) GO TO 999
      IF (NTOTRUNS.LE.0.OR.IDSEAR.NE.1) GO TO 999
      IF (IDSEAR.EQ.7) GO TO 999
      IF (IDSEAR.EQ.1.AND.IDASEL.EQ.2.AND.IEPRAW.NE.0) GO TO 999
      IF (LASTPR.NE.1) GO TO 999
 5    NRUFI=ISRUNF
      NRULA=ISRUNL
C
C Loop on all runs , find periods
C
      IFRUN=NRUFI-1
 10   IFRUN=IFRUN+1
      CALL BKFPER(IFRUN,0,NPER)
      IF (NPER.LE.0) GO TO 200
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 200
      ILRUN=ITABL(JBPER,NPER,JBPELR)
      LRUN=MIN0(NRULA,ILRUN)
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 150
C
C Loop on runs in 'BRUC' , check if they are OK for run #
C
      NRUC=LROWS(JBRUC)
      IF (NRUC.LE.0) GO TO 150
      DO 100 IRUC=1,NRUC
         IRUN=ITABL(JBRUC,IRUC,JBRURN)
         IF (IRUN.LT.IFRUN.OR.IRUN.GT.LRUN) GO TO 100
C no checks for LEP II calibration runs, unless explicitely asked :
         IELEP=ITABL(JBRUC,IRUC,JBRUTE)
         IF (ISYEAR.GE.1996.AND.ENGLEP.LT.0.) THEN
            IF (ICHKP.EQ.0.AND.IELEP.LT.MINER) GO TO 100
         ENDIF
         CALL BKRUOK(IRUN,IPHY,IOK)
         IF (IOK.NE.0) GO TO 100
         IF (LASTPR.EQ.1.AND.IBTQSE.NE.2) THEN
            CALL BKPRLV(DNADAT(IDASEL),IRUN,0,0,ILV,IFD,ILD,IERP)
            IF (IERP.NE.0) GO TO 100
         ENDIF
C check for Lep energy :
         IF (ENGLEP.LT.0.) GO TO 50
         IF (ISYEAR.EQ.1999.AND.ENGLEP.GT.0.) GO TO 100
         IELSE=NINT(1000.*ENGLEP)
         IF (IABS(IELSE-IELEP).GT.ITOLER) GO TO 100
C Check for date :
 50      IF (ISDATE.EQ.0) GO TO 60
         IDTE=ITABL(JBRUC,IRUC,JBRUWD)
         IF (ISDATL.GT.0) THEN
             IF (IDTE.LT.ISDATE.OR.IDTE.GT.ISDATL) GO TO 100
             GO TO 60
         ENDIF
         IF (ISDATE.LT.0.AND.IDTE.GT.ISDATE) GO TO 100
         IF (ISDATE.GT.0.AND.IDTE.LT.ISDATE) GO TO 100
C Run OK  : check if it was in the datasets written on FILICARDS :
 60      NFOUN=IUCOMP(IRUN,LISALRUN,NTOTRUNS)
         IF (NFOUN.EQ.0) WRITE ( LWRFIL,1001) IRUN
         IF (NFOUN.EQ.0.AND.ICHKP.GT.0) WRITE (LWRUSR,1001) IRUN
 100  CONTINUE
C Next period , if any :
 150  IF (ILRUN.GE.NRULA) GO TO 200
      IFRUN=ILRUN
      GO TO 10
C----------------------------------------------------------------------
 200  GO TO 999
 999  RETURN
 1001 FORMAT ( '**** Warning !! Selected Run ',I7,' not found on ',
     +         ' above tapes !')
      END
      SUBROUTINE PRDATA(IBD)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of Cartridge Datasets in SCANBOOK
C  Author J.Boucrot 17-Nov-1990
C Called from PRDATSET                        from BOOKLIB
C Calls PRLEV1,PRLEV2,PRLEV4                  from BOOKLIB
C  Input argument :
C   IBD  = Row number of dataset in bank BDFS , NR = IMCDAT
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      COMMON / LEV2HE / IHEADF
C-----------------------------------------------------------------------
      IBPR=MOD(IBPRUS,10)
      IHEADF=0
C Print datasets on tape/cartridges :
C
C Level 1  :
      IF (IBPR.EQ.1) THEN
         CALL PRLEV1(IBD)
      ENDIF
C Level 2 :
      IF (IBPR.EQ.2) THEN
         CALL PRLEV2(2,IBD)
      ENDIF
C Level 3:
      IF (IBPR.EQ.3) THEN
         CALL PRLEV2(3,IBD)
      ENDIF
C Level 4  :
      IF (IBPR.GE.4) THEN
         CALL PRLEV4(IBD)
      ENDIF
C
 999  RETURN
      END
      SUBROUTINE PRDATAA(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print datasets on AA RAWs from Selection keywords
C   Author   J. Boucrot   01-OCT-1997
C Called from PRDATSET                          from  BOOKLIB
C Calls BKRUAA,PRFIHEAD,PRBFIL                  from  BOOKLIB
C Calls ALSTIN                                  from  ALEPHLIB
C   All selected datasets are in / IAALIS /
C   and have been filled during the dataset search
C  Output argument :
C    IER   =  1 if problem with banks
C          =  0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      CHARACTER TAPAA*8,TLCAA*9
      CHARACTER*4 PFMB(4)
C Common to communicate the results to the printout routine
      PARAMETER (NAAMX = 4000)
      COMMON / IAALIS /  IAACUR,LAAPER(NAAMX),LAAROW(NAAMX)
      LOGICAL BTEST
      DATA PFMB / '????' , 'DUCK' , 'MAYB' , 'PERF' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (NTOTRUNS.LE.0) GO TO 999
C Print header :
      WRITE (LWRUSR,1001)
      WRITE (LWRUSR,1002)
      WRITE (LWRUSR,1003)
      WRITE (LWRUSR,1002)
      IF (IBPRUS.GT.10) THEN
         WRITE (LWRINT,1001)
         WRITE (LWRINT,1002)
         WRITE (LWRINT,1003)
         WRITE (LWRINT,1002)
      ENDIF
C Write header of FILICARD file:
      IF (IWFILI.GT.0) CALL PRFIHEAD
C Loop on all runs found:
      DO 600 NTT=1,NTOTRUNS
         JBRUC=NLINK('BRUC',LAAPER(NTT))
         IF (JBRUC.LE.0) GO TO 900
         KBRUC=KROW(JBRUC,LAAROW(NTT))
         CALL ALSTIN(IW(KBRUC+JBRUVS),2,TAPAA)
         IRUN=IW(KBRUC+JBRURN)
         CALL BKRUAA(IRUN,TAPAA,IFILE,IEROR)
         IF (IEROR.NE.0) IFILE=0
         IDAY=IW(KBRUC+JBRUWD)
         NEVT=IW(KBRUC+JBRUEV)
         ENGL=0.001*FLOAT(IW(KBRUC+JBRUTE))
         IBFMB=0
         IBR=IW(KBRUC+JBRUBR)
         DO 300 II=1,3
            IF (BTEST(IBR,II-1)) THEN
               IBFMB=II+1
               GO TO 350
            ENDIF
 300     CONTINUE
 350     CONTINUE
C Find tape location from last word of 'BRUC' bank:
         ILOC=NINT(RW(KBRUC+JBRUVL))
         TLCAA=' '
         IF (ILOC.LE.0.OR.ILOC.GT.NTMSLI) ILOC=3
         TLCAA=TMSLAB(ILOC)
C
         WRITE (LWRUSR,1010) TAPAA,IFILE,TLCAA,IRUN,PFMB(IBFMB),
     +                       IDAY,NEVT,ENGL
         IF (IBPRUS.GT.10)
     +      WRITE (LWRINT,1010) TAPAA,IFILE,TLCAA,IRUN,PFMB(IBFMB),
     +                          IDAY,NEVT,ENGL
C Write the FILICARD for this run, if requested:
         IF (IWFILI.GT.0) THEN
            IAACUR=NTT
            CALL PRBFIL(2,0)
         ENDIF
 600  CONTINUE
      GO TO 999
C Problem with banks:
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/1X,' *** AA RAW DATA cartridges ***'//)
 1002 FORMAT (1X,76(1H-))
 1003 FORMAT (T4,'Tape',T10,1H|,T12,'File',T17,1H|,T19,'Location',
     +        T29,1H|,T32,'Run',T38,1H|,T41,'Run',T47,1H|,T50,'Date',
     +        T56,1H|,T58,'Nevts',T65,1H|,T68,'LEP Eng',T76,1H|,/
     +        T10,1H|,T17,1H|,T29,1H|,T31,'Number',T38,1H|,
     +        T40,'Status',T47,1H|,T49,'yymmdd',T56,1H|,T65,1H|,
     +        T70,'GeV',T76,1H|)
 1010 FORMAT (2X,A6,T10,1H|,T12,I4,T17,1H|,T19,A9,T29,1H|,T31,I6,
     +        T38,1H|,T41,A4,T47,1H|,T49,I6,T56,1H|,T58,I6,
     +        T65,1H|,T68,F6.2,T76,1H|)
      END
      SUBROUTINE PRDATAR(IER)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print datasets on AR RAW DLTs of 1991-1994 from Selection keywords
C   Author   J. Boucrot   01-OCT-1997
C Called from PRDATSET                          from  BOOKLIB
C Calls BKELEP,PRFIHEAD,PRBFIL,GETLOCNUM        from  BOOKLIB
C Calls ALSTIN                                  from  ALEPHLIB
C   All selected datasets are in / IARLIS /
C   and have been filled during the dataset search
C  Output argument :
C    IER   =  1 if problem with banks
C          =  0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BRDLJJ ----
      PARAMETER(JBRDTC=1,JBRDLO=3,JBRDFN=4,JBRDRN=5,LBRDLA=5)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      CHARACTER TAPAR*8,TLCAR*9,TLOC*4,CHAINT*4
      CHARACTER*4 PFMB(4)
C Common to communicate the results to the printout routine
      PARAMETER (NAAMX = 4000)
      COMMON / IARLIS /  IARCUR,LARROW(NAAMX)
      LOGICAL BTEST
      DATA PFMB / '????' , 'DUCK' , 'MAYB' , 'PERF' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (NTOTRUNS.LE.0) GO TO 999
      JBRDL=NLINK('BRDL',ISYEAR)
      IF (JBRDL.LE.0) GO TO 900
C Print header :
      WRITE (LWRUSR,1001)
      WRITE (LWRUSR,1002)
      WRITE (LWRUSR,1003)
      WRITE (LWRUSR,1002)
      IF (IBPRUS.GT.10) THEN
         WRITE (LWRINT,1001)
         WRITE (LWRINT,1002)
         WRITE (LWRINT,1003)
         WRITE (LWRINT,1002)
      ENDIF
C Write header of FILICARD file:
      IF (IWFILI.GT.0) CALL PRFIHEAD
C Loop on all runs found:
      DO 600 NTT=1,NTOTRUNS
         KBRDL=KROW(JBRDL,LARROW(NTT))
C Get quantities to be printed from bank 'BRDL':
         IRUN=IW(KBRDL+JBRDRN)
         CALL ALSTIN(IW(KBRDL+JBRDTC),2,TAPAR)
         IFILE=IW(KBRDL+JBRDFN)
         TLOC=CHAINT(IW(KBRDL+JBRDLO))
         CALL GETLOCNUM(TLOC,ILOC)
         TLCAR=TMSLAB(ILOC)
C Quantities to be printed from bank 'BRUC' :
         IBFMB=0
         NEVT=0
         ENGL=-1.
         CALL BKELEP(IRUN,ENGL,IFIL,BM,IDE,NEVT,KBRUC)
         IF (KBRUC.LE.0) GO TO 350
         IDAY=IW(KBRUC+JBRUWD)
         IBR=IW(KBRUC+JBRUBR)
         DO 300 II=1,3
            IF (BTEST(IBR,II-1)) THEN
               IBFMB=II+1
               GO TO 350
            ENDIF
 300     CONTINUE
 350     CONTINUE
C
         WRITE (LWRUSR,1010) TAPAR,IFILE,TLCAR,IRUN,PFMB(IBFMB),
     +                       IDAY,NEVT,ENGL
         IF (IBPRUS.GT.10)
     +      WRITE (LWRINT,1010) TAPAR,IFILE,TLCAR,IRUN,PFMB(IBFMB),
     +                          IDAY,NEVT,ENGL
C Write the FILICARD for this run, if requested:
         IF (IWFILI.GT.0) THEN
            IARCUR=NTT
            CALL PRBFIL(2,0)
         ENDIF
 600  CONTINUE
      GO TO 999
C Problem with banks:
 900  IER=1
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/1X,'*** AR DLT copies of 1991/1994 RAW Data ***'//)
 1002 FORMAT (1X,76(1H-))
 1003 FORMAT (T4,'Tape',T10,1H|,T12,'File',T17,1H|,T19,'Location',
     +        T29,1H|,T32,'Run',T38,1H|,T41,'Run',T47,1H|,T50,'Date',
     +        T56,1H|,T58,'Nevts',T65,1H|,T68,'LEP Eng',T76,1H|,/
     +        T10,1H|,T17,1H|,T29,1H|,T31,'Number',T38,1H|,
     +        T40,'Status',T47,1H|,T49,'yymmdd',T56,1H|,T65,1H|,
     +        T70,'GeV',T76,1H|)
 1010 FORMAT (2X,A6,T10,1H|,T12,I4,T17,1H|,T19,A9,T29,1H|,T31,I6,
     +        T38,1H|,T41,A4,T47,1H|,T49,I6,T56,1H|,T58,I6,
     +        T65,1H|,T68,F6.2,T76,1H|)
      END
      SUBROUTINE PRDATSET(IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Steering of REAL dataset printout and FILICARD writing
C  Author  J. Boucrot 03-Oct-1996
C Called from PRDSET                                  from BOOKLIB
C Calls BKCOMRUN,BKELEP,BKSTORUN,PRDATAA,PRDATAR      from BOOKLIB
C Calls PRDATA,PRFIHEAD,PRFILICA,PRFILIRA,PRFILISO    from BOOKLIB
C Calls ALSTIN                                        from ALEPHLIB
C Calls SORTZV,IUCOMP                                 from GENLIB
C Output argument :
C     IER = 0  All OK
C     IER = 1  if problem with banks
C     IER = 2  if too many runs found
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      PARAMETER ( MAXAA = 15 , NRUSE = 3000 , MAXRA = 100 )
      INTEGER LISRU(NRUSE),LISAA(MAXAA),LISRA(MAXRA)
      CHARACTER COMEN*80,TAPE*8,TAPOL*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      IF (IMCDAT.NE.1.OR.NDATFOUN.LE.0) GO TO 999
C Special search for 'AA' tApe RAW datasets of LEP1 :
      IF (IDASEL.EQ.2.AND.IRAWAA.EQ.1) THEN
         CALL PRDATAA(IER)
         GO TO 999
      ENDIF
C Special search for RAW datasets of 1994 and before copied on DLTs :
      IF (IDASEL.EQ.2.AND.IRAWD2.EQ.1) THEN
         CALL PRDATAR(IER)
         GO TO 999
      ENDIF
      IDOUB=0
      IFILO=0
      JBDFS=NLINK('BDFS',IMCDAT)
      IF (JBDFS.EQ.0) GO TO 990
      IAATY=0
      IF (IDASEL.EQ.2.AND.(IRAWAA.NE.0.OR.IRAWD2.NE.0)) IAATY=1
      IRAWD=0
      IF (IDASEL.EQ.2.AND.IRAWD1.NE.0) IRAWD=1
C Sort the list of datasets found, in increasing order of 1st runs:
      CALL SORTZV(LISRUSEL,LISORTRU,NDATFOUN,-1,0,0)
C Define the flag IWARN to put a warning in case of duplicate datasets:
C not if FILI sorted by energies, or if ALL Julia processings asked :
      IWARN=0
      IF (ISORLE.EQ.0.AND.LASTPR.GT.0.AND.IDSEAR.NE.7) IWARN=1
      IF (IW(NAMIND('CHKP')).GT.0) IWARN=1
C
C Loop on datasets : print them , build the list by energy if needed :
C
      DO 500 IRR=1,NDATFOUN
         IDS=LISORTRU(IRR)
         IBDFS=IBDSEL(IDS)
         NFRU=LISRUSEL(IDS)
C get all necessary pointers :
         KBDFS=KROW(JBDFS,IBDFS)
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.EQ.0) GO TO 990
         KBSET=KROW(JBSET,NROW)
         JBRLI=NLINK('BRLI',NPER)
         IF (JBRLI.EQ.0) GO TO 990
         IBRL1=IW(KBSET+JBSEBA)
         IBRL2=IW(KBSET+JBSEBR)
         IBSPF=IW(KBSET+JBSEBS)
         JBSPF=NLINK('BSPF',NPER)
         IF (JBSPF.EQ.0) GO TO 990
         KBSPF=KROW(JBSPF,IBSPF)
C Check if first run of dataset is OK :
         NFRR=IW(KBSET+JBSEFR)
         IF (NFRR.NE.NFRU) THEN
            WRITE (LWRUSR,1001) NFRR,NFRU,IRR,IDS,NPER,NROW
            NFRU=NFRR
         ENDIF
         NLRU=IW(KBSET+JBSELR)
         CALL VZERO(LISRU,NRUSE)
         NRUDA=0
         NRAA=0
         CALL VZERO(LISAA,MAXAA)
         CALL VZERO(LISRA,MAXRA)
C Only 1 run in the dataset :
      IF (IRAWD2.NE.0) GO TO 100
         IF (IRAWD.EQ.1.OR.(NLRU.NE.NFRU)) GO TO 100
         NRUDA=1
         LISRU(NRUDA)=NFRU
         IF (IAATY.EQ.1) THEN
            NRAA=1
            LISAA(NRAA)=NFRU
         ENDIF
         GO TO 300
C Several runs in dataset. Case of 'AA-type' RAW data :
 100     IF (IAATY.EQ.1) THEN
            CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
            CALL BKCOMRUN(COMEN,NFRU,LISAA,NRAA)
            IF (NRAA.LE.0) GO TO 500
            IPRAA=1
            NRUDA=NRAA
            CALL UCOPY(LISAA,LISRU,NRUDA)
            GO TO 300
         ENDIF
C Several runs in dataset. Case of datasets with 'BRLI' description
 200     IF (IBRL1.LE.0.OR.IBRL2.LE.0) GO TO 400
         DO 250 IBRLI=IBRL1,IBRL2
            KBRLI=KROW(JBRLI,IBRLI)
            NRUN=IW(KBRLI+JBRLRN)
            NRAA=NRAA+1
         IF (NRUN.LT.ISRUNF.OR.NRUN.GT.ISRUNL) GO TO 250
            IF (IRAWD.EQ.1) LISRA(NRAA)=NRUN
            NRUDA=NRUDA+1
            IF (NRUDA.GT.NRUSE) GO TO 980
            LISRU(NRUDA)=NRUN
 250     CONTINUE
C Check if duplicate runs somewhere, store in lists  ;
 300     IF (NRUDA.LE.0) GO TO 400
         DO 350 NRR=1,NRUDA
            NRUN=LISRU(NRR)
            IND=IUCOMP(NRUN,LISALRUN,NTOTRUNS)
            IF (IND.GT.0.AND.IWARN.NE.0) THEN
C run already found : print a warning if necessary :
               IBDOL=LISALBDF(IND)
               KBDOL=KROW(JBDFS,IBDOL)
               CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPE)
               CALL ALSTIN(IW(KBDOL+JBDFTC),2,TAPOL)
               IF (IDSEAR.EQ.1) THEN
                  WRITE (LWRUSR,1010) NRUN,TAPE,TAPOL
                  WRITE (LWRFIL,1010) NRUN,TAPE,TAPOL
               ENDIF
               IDOUB=1
               GO TO 350
            ENDIF
C store this run in / DATAFOUN / :
            CALL BKSTORUN(IBDFS,NRUN,IERB)
            IF (IERB.GT.0) GO TO 980
 350     CONTINUE
C printout of dataset content on unit LWRUSR :
 400     CALL PRDATA(IBDFS)
C printout of header on FILICARD file :
         IF (IWFILI.LE.0) GO TO 500
         IFILO=IFILO+1
         IF (IFILO.EQ.1) CALL PRFIHEAD
         IF (ISORLE.NE.0) GO TO 500
C If needed, write FILI card(s) for this dataset
         IF (IAATY.EQ.0.AND.IRAWD.EQ.0) THEN
            CALL PRFILICA(IDS)
         ENDIF
         IF (IRAWD.EQ.1) THEN
            IF (NRAA.GT.0) CALL PRFILIRA(3,LISRA,NRAA)
         ENDIF
         IF (IAATY.EQ.1) THEN
            IF (NRAA.GT.0) CALL PRFILIRA(2,LISAA,NRAA)
         ENDIF
 500  CONTINUE
C Sort the list of all runs ( needed for PRSRUN and PRFILISO ) :
      IF (NTOTRUNS.LE.0) GO TO 999
      CALL SORTZV(LISALRUN,LISALSOR,NTOTRUNS,-1,0,0)
C-----------------------------------------------------------------------
C Now printout of FILI cards for sorted runs
      IF (ISORLE.EQ.0.OR.IWFILI.LE.0) GO TO 999
      CALL PRFILISO
      GO TO 999
C Too many datasets found :
 980  IER=2
      GO TO 999
C Problem with banks :
 990  IER=1
 999  CALL PRCHKRU
      RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (' ++ IN PRDATSET ERROR NFRR,NFRU =',2I8,
     +        ' == IRR,IDS,NPER,NROW =',4I8)
 1010 FORMAT ('**** Warning !! Run ',I6,' on ',2X,A8,' already on',
     +        ' tape',2X,A8,' above ****')
 1020 FORMAT ('**** Warning !! At least one duplicated run ! '/,
     +        5X,'See your FILICARD file for details')
      END
      SUBROUTINE PRDLTR(DLTNA)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print DLT RAW TAPES for FALCON
C  Author  J.Boucrot 20-Jun-1995
C Called from PRLEV1                          from BOOKLIB
C Calls  PRDLRW                               from BOOKLIB
C Calls  ALSTIN,BKINCA                        from ALEPHLIB
C Input argument :
C  DLTNA = DLT tape name
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      CHARACTER DLTNA*6,COMEN*80,RURU*6,CC*1
      INTEGER BKINCA
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IF (NFIDLT.LE.0) GO TO 999
      NFIL=0
      JBDFS=NLINK('BDFS',1)
      IF (JBDFS.LE.0) GO TO 999
C Loop on all DLT datasets :
      DO 100 IKK=1,NFIDLT
         IK=LISORD(IKK)
         IBDFS=LISBDF(IK)
         KBDFS=KROW(JBDFS,IBDFS)
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.LE.0) GO TO 100
         KBSET=KROW(JBSET,NROW)
C For all datasets : decode run numbers from comment :
         JBSPF=NLINK('BSPF',NPER)
         IF (JBSPF.EQ.0) GO TO 100
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
         LN=LNBLNK(COMEN)
         IRU=INDEX(COMEN,'RUN')
         IF (IRU.EQ.0) GO TO 100
         RURU=' '
         IWO=0
         IR=0
         IMR=IRU+4
C Decode in turn each run number in comment :
         DO 50 IB=IMR,LN
            CC=COMEN(IB:IB)
            IF (CC.EQ.' ') THEN
               RURU=' '
               IWO=0
               GO TO 50
            ENDIF
            IF (ICHAR(CC).LT.ICHAR('0').OR.ICHAR(CC).GT.ICHAR('9'))
     +          GO TO 100
            IWO=IWO+1
            RURU(IWO:IWO)=CC
            IF (IB.GT.IMR.AND.IB.LT.LN.AND.COMEN(IB+1:IB+1).EQ.' ')
     +         GO TO 30
            IF (IB.LT.LN.AND.COMEN(IB+1:IB+1).NE.' ') GO TO 50
 30         NRUN=BKINCA(RURU)
            NFIL=NFIL+1
            CALL BKRUOK(NRUN,IPHYS,IER)
            IF (IER.NE.0) GO TO 50
            CALL PRDLRW(DLTNA,NFIL,NRUN)
            IWO=0
            RURU=' '
 50      CONTINUE
 100  CONTINUE
 999  RETURN
      END
      SUBROUTINE PRDLRW(TAPIN,IFIR,IRUN)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINTOUT
C! Auxiliary to PRDLTR
C  J. Boucrot 22-Jun-1995
C  Called from PRDLTR                         froM BOOKLIB
C    Input arguments:
C  TAPIN = tape name
C  IFIR  = file number on tape
C  IRUN  = run number on file
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER TAPIN*6,INFO*132
C-----------------------------------------------------------------------
      INFO=' '
      INFO=TAPIN//';'
      IF (IRUN.LT.10000) WRITE ( INFO(17:20) , '(I4)' ) IRUN
      IF (IRUN.GE.10000) WRITE ( INFO(16:20) , '(I5)' ) IRUN
      IF (IFIR.LT.10)    WRITE ( INFO(8:8)   , '(I1)' ) IFIR
      IF (IFIR.GE.10.AND.IFIR.LE.99) WRITE ( INFO(8:9) ,'(I2)' ) IFIR
      IF (IFIR.GE.100) WRITE ( INFO(8:10) ,'(I3)' ) IFIR
      IF (IFIR.LT.10)    WRITE ( INFO(13:13) , '(I1)' ) IFIR
      IF (IFIR.GE.10.AND.IFIR.LE.99) WRITE ( INFO(12:13),'(I2)' ) IFIR
      IF (IFIR.GE.100) WRITE ( INFO(12:14),'(I3)' ) IFIR
      WRITE ( LWRUSR,1001) INFO(1:LNBLNK(INFO))
1001  FORMAT (A)
      END
      SUBROUTINE PRDSET(IOPT,ISOPT,NFOUN,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Steering of dataset search and printout
C  Author  J. Boucrot 15-Nov-1990
C Completely rewritten 02-Oct-1996
C Called from BKSEXQ                                  from BOOKLIB
C Calls PRLEV6,PRLEV7,BKCHKR,BKFINDED,BKFINDTA        from BOOKLIB
C Calls BKRDCH,PRDATSET,PRMCASET                      from BOOKLIB
C Input arguments :
C   IOPT  = 0 Processing  with user dialogue
C         = 1 No user dialogue , output directly on LWRUSR file
C  ISOPT  = Local SCANBOOK option ( may be different from IDSEAR)
C Output arguments :
C   NFOUN = number of datasets found
C     IER = 0  All OK
C     IER = 1  if no room for BOS banks
C     IER = 2  if no room for LISTFILE ( IBM ) or no LISTFILE ( VAX )
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      PARAMETER ( NLIN3 = 25 , NLIMC = 4 ,  MINF = 10 )
      CHARACTER LET1*1
C----------------------------------------------------------------------
      IER=0
      NFOUN=0
C Printout of Homelab verifications , if required :
      IF (IBPRUS.EQ.6) THEN
         CALL PRLEV6(NFOUN,IER)
         GO TO 60
      ENDIF
C Printout of verification of Homelabs MC copies at CERN , if required :
      IF (IBPRUS.EQ.7) THEN
         CALL PRLEV7(NFOUN,IER)
         GO TO 60
      ENDIF
C-----------------------------------------------------------------------
C Perform the search of datasets :
C First define the limits in BDFS bank :
      IF (IDSEAR.NE.5.OR.NTAPKY.EQ.0) CALL BKCHKR
C Search the LISTFILE of all Cartridges EDIR files :
      CALL BKFINDED(NEDIR,IER)
      IF (IER.NE.0) GO TO 990
C Call the search of datasets on cartridges :
      CALL BKFINDTA(NCART,IER)
      IF (IER.NE.0) GO TO 990
      NFOUN=NDATFOUN
C-----------------------------------------------------------------------
C Warning on the end-of-search ( IF interactive dialogue ) :
      IF (IBKINT.LT.2) GO TO 80
      IF (IDSEAR.EQ.5.AND.NTAPKY.GT.1)  GO TO 100
      IF (IDSEAR.EQ.5.AND.IB1RUN.GT.0) GO TO 100
 60   WRITE ( LWRUSR,1001)
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' *     End of SCANBOOK Database search  :  *'
      WRITE (LWRUSR,1002) NFOUN
      WRITE (LWRUSR,*)  ' * have been found matching your requests  *'
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,1001)
      IF (IB1RUN.GT.1.AND.NFOUN.LE.MINF) IBPRUS=3
      WRITE (LWRINT,1001)
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' *     End of SCANBOOK Database search  :  *'
      WRITE (LWRINT,1002) NFOUN
      WRITE (LWRINT,*)  ' * have been found matching your requests  *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
      IF (IBPRUS.EQ.6.OR.IBPRUS.EQ.7) GO TO 999
C Warning on the number of output lines on screen :
 80   IF (NFOUN.LE.0) GO TO 100
      NLINS=NFOUN+12
      IF (IBPRUS.EQ.3) NLINS=NLIN3*NFOUN
      IF (IBPRUS.EQ.2.AND.IMCDAT.EQ.2) NLINS=NLIMC*NFOUN
      IF (IBKINT.LT.2) GO TO 100
      WRITE (LWRINT,1003) NLINS
      ITERM=0
      WRITE (LWRINT,*) '  Do you want these lines on your screen?'
      WRITE (LWRINT,*) '  Answer  Y/N    < CR> = NO  -------->'
      CALL BKRDCH(LECINT,2,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Y') IBPRUS=IBPRUS+10
 100  IF (NFOUN.LE.0) GO TO 999
C-----------------------------------------------------------------------
C Printout of datasets :
C
      IF (IMCDAT.EQ.1) THEN
         CALL PRDATSET(IERD)
         IF (IERD.NE.0) GO TO 990
      ELSE
         CALL PRMCASET(IERM)
         IF (IERM.NE.0) GO TO 990
      ENDIF
 200  CONTINUE
      GO TO 999
C Too many datasets found :
 990  IER=1
 999  IF (IDSEAR.NE.5) CALL PRWINX11(NFOUN,NLINS)
      CALL BDROP(IW,'BTNA')
      RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/)
 1002 FORMAT (2X,'*',6X,I4,7X,'Datasets',16X,'*')
 1003 FORMAT (' *** The output will consist of ',I6,' lines')
 1010 FORMAT (' Do you want to generate FILI cards',
     +       ' for these datasets ?')
      END
      SUBROUTINE PRELEP(ITRM,NFOUN,LISRU,LISPR,LISRO)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print list of RUNS for given LEP energies
C  Author  J.Boucrot 22-Nov-1989
C Called from PRONLG                          from BOOKLIB
C Calls BKFPER,BKPOIN,BKDAIC                  FROM BOOKLIB
C Input arguments :
C  ITRM  = 1 if printout required on terminal , = 0 otherwise
C  NFOUN =   Number of runs found from user's selection
C  LISRU =   List of addresses of sorted runs in BRUC bank
C  LISPR =   List of BRUC bank numbers for selected runs
C  LISRO =   List of ROW # in BRUC banks for selected runs
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      COMMON/PARPRI/IFIRTA,IFIRDI,IFIRS1,IFIRS2,NC,NL,NLPR,ISTER,ITERM
C
      PARAMETER ( NRMAX = 3500 , ETOL = 0.01 )
      PARAMETER ( NRUL = 400 , NESEL = 15 , NRUFR = 36 )
      CHARACTER*8 CDAT1,CDAT2,CTIM
      CHARACTER*14 IMSG(2)
      INTEGER LISRU(*),LISPR(*),LISRO(*)
      INTEGER LRUDI(NRUL,NESEL),LEPER(NESEL),NRUDI(NESEL)
      INTEGER NURUN(NRMAX)
      REAL ERUDI(NESEL)
      DATA IMSG / 'LEP energies  ' , 'Runs selected ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
C Find the list of LEP energies to be scanned :
C
      ITOOM=0
      IF (NFOUN.LE.0) GO TO 999
      IF (NFOUN.GT.NRMAX) THEN
         ITOOM=2
         GO TO 900
      ENDIF
      ILEPS=0
      IF (ENGLEP.GT.0.) ILEPS=NINT(1000.*ENGLEP)
      NLMIN=1
      NLMAX=NLEPSF
      IF (ILEPS.GT.0) THEN
         DO 10 I=1,NLEPSF
            IF (IABS(ILEPEN(I)-ILEPS).GT.ITOLER) GO TO 10
            NLMIN=I
            NLMAX=I
            GO TO 11
 10      CONTINUE
 11      CONTINUE
      ENDIF
C Print general header :
      WRITE ( LWRUSR,1001)
      WRITE ( LWRUSR,1002)
      WRITE ( LWRUSR,1001)
      IF (ITRM.EQ.0) GO TO 20
      WRITE ( LWRINT,1001)
      WRITE ( LWRINT,1002)
      WRITE ( LWRINT,1001)
 20   CONTINUE
C
C Store the list of all selected run numbers in NURUN :
C
      DO 40 IRU=1,NFOUN
C Find run number from bank 'BRUC' :
         CALL BKPOIN(LECDAF,'BRUC',LISPR(IRU),JBRUC)
         IF (JBRUC.LE.0) GO TO 40
         ISR=LISRU(IRU)
         IF (ISR.LE.0) GO TO 40
         IKH=LISRO(ISR)
         IRUN=ITABL(JBRUC,IKH,JBRURN)
         NURUN(IRU)=IRUN
 40   CONTINUE
C----------------------------------------------------------------------
C Loop on all LEP energies and print data :
C
      DO 800 IEN=NLMIN,NLMAX
         IECMS=ILEPEN(IEN)
         ECMS=0.001*FLOAT(IECMS)
         CALL VZERO(NRUDI,NESEL)
         CALL VZERO(ERUDI,NESEL)
         CALL VZERO(LEPER,NESEL)
         CALL VZERO(LRUDI,NRUL*NESEL)
         NRDIS=0
         NRERG=0
         IFORM=4
         WRITE ( LWRUSR,1003)
         IF (ITRM.EQ.1) WRITE ( LWRINT,1003)
C
C loop on all runs :
C
         DO 200 IRR=1,NFOUN
            IRUN=NURUN(IRR)
            CALL BKELEP(IRUN,ELEP,IFI,BM,ID,NE,JP)
            IELEP=NINT(1000.*ELEP)
            NPER=LISPR(IRR)
            IF (IABS(IELEP-IECMS).GT.ITOLER) GO TO 200
            IF (NRERG.EQ.0) GO TO 150
            INEW=0
            DO 100 ISOL=1,NRERG
               IF (ABS(ELEP-ERUDI(ISOL)).LT.ETOL.AND.
     +             NPER.EQ.LEPER(ISOL)) INEW=ISOL
 100        CONTINUE
            IF (INEW.GT.0) GO TO 180
C Build the tables to be printed :
 150        NRERG=NRERG+1
            IF (NRERG.GT.NESEL) THEN
               ITOOM=1
               GO TO 900
            ENDIF
            NRUDI(NRERG)=0
            ERUDI(NRERG)=ELEP
            LEPER(NRERG)=NPER
            INEW=NRERG
 180        NRUDI(INEW)=NRUDI(INEW)+1
            IF (NRUDI(INEW).GT.NRUL) THEN
               ITOOM=2
               GO TO 900
            ENDIF
            LRUDI(NRUDI(INEW),INEW)=IRUN
            IF (IRUN.GE.10000) IFORM=5
 200     CONTINUE
C
C Now print the tables :
C NRURR = Number of runs to be printed per line
C
         NRURR=NRUFR/(1+IFORM)
         DO 400 IDER=1,NRERG
            NRUER=NRUDI(IDER)
            NLINS=1+NRUER/NRURR
            IPER=LEPER(IDER)
            CALL BKPOIN(LECDAF,'BPER',1,JBPER)
            IF (JBPER.LE.0) GO TO 999
C get 1st and last day of period  :
            IDAT1=ITABL(JBPER,IPER,JBPEFD)
            IDAT2=ITABL(JBPER,IPER,JBPELD)
            CALL BKDAIC(1,IDAT1,0,CDAT1,CTIM)
            CALL BKDAIC(1,IDAT2,0,CDAT2,CTIM)
            ELEPX=ERUDI(IDER)
            IWOK=MIN0(NRURR,NRUER)
C Write 1st line :
            IF (IFORM.EQ.4) WRITE ( LWRUSR,1004) ECMS,ELEPX,
     +               CDAT1,CDAT2,(LRUDI(IK,IDER),IK=1,IWOK)
            IF (IFORM.EQ.5) WRITE ( LWRUSR,1005) ECMS,ELEPX,
     +               CDAT1,CDAT2,(LRUDI(IK,IDER),IK=1,IWOK)
            IF (ITRM.EQ.0) GO TO 310
            IF (IFORM.EQ.4) WRITE ( LWRINT,1004) ECMS,ELEPX,
     +               CDAT1,CDAT2,(LRUDI(IK,IDER),IK=1,IWOK)
            IF (IFORM.EQ.5) WRITE ( LWRINT,1005) ECMS,ELEPX,
     +               CDAT1,CDAT2,(LRUDI(IK,IDER),IK=1,IWOK)
 310        CONTINUE
C Write all other lines , if any :
            IF (NLINS.EQ.1) GO TO 350
            IKMIN=NRURR+1
            DO 330 ILIN=2,NLINS
               ILEFT=NRUER-IKMIN+1
               IF (ILEFT.LE.0) GO TO 350
               IKMAX=IKMIN+MIN0(ILEFT,NRURR)-1
               IF (IFORM.EQ.4) WRITE ( LWRUSR,1014)
     +                         (LRUDI(II,IDER),II=IKMIN,IKMAX)
               IF (IFORM.EQ.5) WRITE ( LWRUSR,1015)
     +                         (LRUDI(II,IDER),II=IKMIN,IKMAX)
               IF (ITRM.EQ.0) GO TO 320
               IF (IFORM.EQ.4) WRITE ( LWRINT,1014)
     +                         (LRUDI(II,IDER),II=IKMIN,IKMAX)
               IF (IFORM.EQ.5) WRITE ( LWRINT,1015)
     +                         (LRUDI(II,IDER),II=IKMIN,IKMAX)
 320           CONTINUE
               IKMIN=IKMAX+1
 330        CONTINUE
 350        CONTINUE
C end of loop on runs :
 400     CONTINUE
C end of loop on LEP energies :
 800  CONTINUE
C
      GO TO 999
C Printout aborted :
 900  WRITE (LWRUSR,1006) IMSG(ITOOM)
      IF (ITRM.EQ.1) WRITE (LWRINT,1006) IMSG(ITOOM)
C
 999  RETURN
C----------------------------------------------------------------------
C all formats :
 1001 FORMAT (1X,79(1H-))
 1002 FORMAT (T3,'Nominal',T11,1H|,T13,'Exact',T21,1H|,T23,
     +        'Period of Data Taking',T44,1H|,T47,'List of Runs',/
     +        T3,'Energy',T11,1H|,T13,'Energy',T21,1H|,T28,
     +        'DD/MM/YY',T44,1H|)
 1003 FORMAT (T11,1H|,T21,1H|,T44,1H|)
 1004 FORMAT (T3,F7.3,T11,1H|,T13,F7.3,T21,1H|,T23,A8,T32,'to',
     +        T35,A8,T44,1H|,T45,7I5)
 1005 FORMAT (T3,F7.3,T11,1H|,T13,F7.3,T21,1H|,T23,A8,T32,'to',
     +        T35,A8,T44,1H|,T45,6I6)
 1006 FORMAT (/1X,12(1H*),' Printout aborted : Too many',2X,A14)
 1014 FORMAT (T11,1H|,T21,1H|,T44,1H|,T45,7I5)
 1015 FORMAT (T11,1H|,T21,1H|,T44,1H|,T45,6I6)
      END
      SUBROUTINE PRFARO(ITRM,NFOUN,LISRU,LISPR,LISRO)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print RAW TAPES for FALCON
C  Author  J.Boucrot 02-Dec-1993
C  Modified for Exabytes  J. Boucrot  31-Jul-1994
C Called from PRRDAT                          from BOOKLIB
C Calls  BKPOIN,BKFPER                        from BOOKLIB
C Calls  ALSTIN                               from ALEPHLIB
C Input arguments :
C  ITRM  = 1 if printout required on terminal , = 0 otherwise
C  NFOUN =   Number of runs found from user's selection
C  LISRU =   List of addresses of sorted runs in BRUC bank
C  LISPR =   List of BRUC bank numbers for selected runs
C  LISRO =   List of ROW # in BRUC banks for selected runs
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      PARAMETER ( NRAR = 3500 )
      COMMON / RAWRU / LISRAR(NRAR) , NTORA
      INTEGER LISRU(*),LISPR(*),LISRO(*)
      CHARACTER INFO*132,TAPE*8,AXTAP*6,SCOL*1,AXX*4
      DATA SCOL / ';' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IF (NFOUN.LE.0) GO TO 999
C Print general header :
      WRITE ( LWRUSR,1010)
      IF (ITRM.EQ.1) WRITE ( LWRINT,1010)
      INFO=' '
      TAPE=' '
      NTORA=0
      CALL VZERO(LISRAR,NRAR)
      JBEXA=IW(NAMIND('BEXA'))
      JBXLI=IW(NAMIND('BXLI'))
      WRITE ( LWRUSR,1100)
C----------------------------------------------------------------------
C Loop on all runs found and print the content :
C
      DO 800 IRU=1,NFOUN
C Find run number from bank 'BRUC' :
         CALL BKPOIN(LECDAF,'BRUC',LISPR(IRU),JBRUC)
         IF (JBRUC.LE.0) GO TO 800
         ISR=LISRU(IRU)
         IF (ISR.LE.0) GO TO 800
         NBRUC=LROWS(JBRUC)
         IKH=LISRO(ISR)
         KBRUC=KROW(JBRUC,IKH)
         IRUN=IW(KBRUC+JBRURN)
         NTORA=NTORA+1
         IF (NTORA.GT.NRAR) THEN
            WRITE ( LWRUSR,1018) NTORA,IRUN
            GO TO 10
         ENDIF
         LISRAR(NTORA)=IRUN
 10      CONTINUE
         CALL ALSTIN(IW(KBRUC+JBRUVS),2,TAPE)
C
C One has to find which "file" contains IRUN
C
         IFIR=0
         NBRMI=MAX0(1,IKH-100)
         NBRMX=MIN0(NBRUC,IKH+100)
         INFO=' '
         DO 20 IBRR=NBRMI,NBRMX
            KBRR=KROW(JBRUC,IBRR)
            IF (IW(KBRR+JBRUVS).NE.IW(KBRUC+JBRUVS))      GO TO 20
            IF (IW(KBRR+JBRUVS+1).NE.IW(KBRUC+JBRUVS+1))  GO TO 20
            IFIR=IFIR+1
            IF (IW(KBRR+JBRURN).NE.IRUN) GO TO 20
               INFO=' '
               INFO=TAPE(1:6)//SCOL
               IF (IRUN.LT.10000) WRITE ( INFO(17:20) , '(I4)' ) IRUN
               IF (IRUN.GE.10000) WRITE ( INFO(16:20) , '(I5)' ) IRUN
               IF (IFIR.LT.10)    WRITE ( INFO(8:8)   , '(I1)' ) IFIR
               IF (IFIR.GE.10)    WRITE ( INFO(8:9)   , '(I2)' ) IFIR
               IF (IFIR.LT.10)    WRITE ( INFO(13:13) , '(I1)' ) IFIR
               IF (IFIR.GE.10)    WRITE ( INFO(12:13) , '(I2)' ) IFIR
C write this line :
               WRITE ( LWRUSR,1035) INFO(1:LNBLNK(INFO))
               IF (ITRM.EQ.1) WRITE ( LWRINT,1035) INFO(1:LNBLNK(INFO))
         GO TO 800
 20      CONTINUE
 800  CONTINUE
 999  RETURN
C----------------------------------------------------------------------
C all formats :
 1010 FORMAT (//' ==== Printout of RAW data Tapes/Runs for FALCON'/)
 1018 FORMAT ('* Warning !! Too many runs in PRFARO :',I9,' Run ',I9,
     +        ' will not be stored in LISRAR')
 1023 FORMAT ('* Warning !! Too many runs on tape ! Run,Itot =',2i9)
 1035 FORMAT (A)
 1100 FORMAT (/1X,'==== Printout of AA Tapes content only :'//
     +        22(1H-)/,T3,'AA',T9,1H|,T14,1H|,T17,'Run',
     +        T22,1H|/,T1,'File #',T9,'|file|',T22,1H|/,22(1H-)/)
      END
      SUBROUTINE PRFIHEAD
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Open FILI cards file and write header on it
C  Author J.Boucrot 21-Mar-1990
C  completely rewritten 02-Oct-1996
C Called from PRDATSET                            from BOOKLIB
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
      CHARACTER MSG*90,FINAM*80,SEPD*1
      CHARACTER*28 BLATR(4)
      DATA BLATR / 'ONLY TPC Short with Problems',
     +             'ONLY data with TPC Short OK ',
     +             'ONLY data WITHOUT TPC shorts',
     +             'ALL  data incl TPC Short OK ' /
      DATA SEPD   / '.' /
C-----------------------------------------------------------------------
      IER=0
      IF ( IWFILI.LE.0) GO TO 999
C Name of the output FILI CARDS file :
      FINAM=' '
      LLD=INDEX(CARDSF,SEPD)
      IF (IBKINT.EQ.-1) LLD=0
      IF (LLD.EQ.0) THEN
         FINAM=CARDSF(1:LNBLNK(CARDSF))
      ELSE
         FINAM=CARDSF(1:LLD-1)
      ENDIF
      IF (FINAM.EQ.' ') FINAM='SCANBOOK'
      LB=INDEX(FINAM,' ')
      IF (LB.GT.0) FINAM=FINAM(1:LB-1)
      FINAM=FINAM(1:LNBLNK(FINAM))
C Define the new FILICARD file if interactive dialogue :
      MSG=CARDSF(:LNBLNK(CARDSF))//'.filicard'
      OPEN ( LWRFIL , FILE = MSG , FORM = 'FORMATTED' ,
     +       STATUS = 'NEW' , ERR = 999 )
 9    CONTINUE
      FICARD=FINAM(1:LNBLNK(FINAM))//'.filicard'
      WRITE ( LWRFIL , 1021 )  CDATIM,CSETIM
      IF (ISORLE.NE.0.AND.IMCDAT.EQ.1.AND.IDSEAR.NE.2)
     +    WRITE (LWRFIL,1017)
      IF (IMCDAT.EQ.1.AND.IBTQSE.NE.2) THEN
         I=IBTQSE+3
         WRITE (LWRFIL,1018)  BLATR(I)
      ENDIF
      IF (IDSEAR.EQ.7) THEN
      IF (IDASEL.EQ.2.AND.IMCDAT.EQ.1.AND.IEPRAW.EQ.0.AND.ISVAXC.EQ.0)
     +    WRITE (LWRFIL,1030)
      ENDIF
      IF (IDSEAR.EQ.2) WRITE (LWRFIL,1027)
      IF ( IBKINT.GE.1) WRITE (LWRINT,1022) FINAM(:LNBLNK(FINAM))
      IF (IMCDAT.EQ.2.AND.IGEOYR.GE.1997.AND.INIP97.EQ.1.AND.
     +    IROW97.GT.0)   THEN
         IKK=0
         DO 100 IKL=1,NTOKNAM
            IF (KINCODL(IKL).NE.KINCOD) GO TO 100
            IKK=IKL
            GO TO 101
 100     CONTINUE
 101     IF (IKK.LE.0) GO TO 999
         WRITE (LWRFIL,1040) KINCOD,KINNAMES(IKK),CKEY97,
     +                       CODM97(1:LNBLNK(CODM97))
      ENDIF
C
 999  RETURN
C-----------------------------------------------------------------------
 1021 FORMAT ('****** === FILICARD File generated on ',2X,A8,' at',
     +        2X,A8)
 1016 FORMAT ('******  Done on computer = ',2X,A8,' for Homelab =',
     +        1X,A15,' *****')
 1017 FORMAT (73(1H*),/6(1H*),2X,'WARNING !!',T25,'PLEASE DO NOT USE ',
     +        'THIS FILE BLINDLY !!!',T69,5(1H*),/6(1H*),
     + ' Some files or cartridges may appear SEVERAL TIMES below',
     + T69,5(1H*),/6(1H*),
     + ' since they may contain runs from different energies !!',
     + T69,5(1H*),/6(1H*),
     + ' To avoid double counting , please use only the FILI CARDS',
     + T69,5(1H*),/6(1H*),
     + T23,'for a GIVEN energy',T69,5(1H*),/6(1H*),
     + ' in conjunction with the SRUN CARDS for the SAME energy',
     + T69,5(1H*),/73(1H*))
 1018 FORMAT (73(1H*),/6(1H*),2X,'WARNING !!',T25,'PLEASE DO NOT USE ',
     +        'THIS FILE BLINDLY !!!',T69,5(1H*),/6(1H*),
     + ' You have selected data with following Tracking Quality : ',
     + T69,5(1H*),/6(1H*),T20,A28,T69,5(1H*)/6(1H*),
     + ' Some cartridges may contain runs with different qualities ',
     + T69,5(1H*),/6(1H*),
     + ' Please use the SRUN CARDS generated in this SCANBOOK run ',
     + T69,5(1H*),/73(1H*))
 1022 FORMAT (/' ==== FILI data cards written on file ',2X,A,
     +         '.filicard'/)
 1027 FORMAT (73(1H*),/6(1H*),2X,'WARNING !!',T25,'FILI CARDS for ',
     +        'Impatient Stream POTs ',T69,5(1H*),/6(1H*),
     + ' Use them only for the most recent files (highest run #)',
     + T69,5(1H*),/6(1H*),
     + ' since the oldest files may be erased without warning !',
     + T69,5(1H*),/6(1H*),
     + ' For the oldest runs, better use only the FILI CARDS',
     + T69,5(1H*),/6(1H*),
     + ' generated by SCANBOOK Option 1 for POTs written on DLTs',
     + T69,5(1H*),/73(1H*))
 1030 FORMAT (6(1H*),'  WARNING !! RAW data are in VAX NATIVE format'/,
     +        6(1H*),'  They can be read on DEC machines only !')
 1040 FORMAT ('**** Event Generator =',I4,2x,A8,' Keyword =',2x,A12/
     +        '**** Keyword meaning =',1x,A60)
      END
      SUBROUTINE PRFILICA(IBD)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! FILI CARD printout for standard cartridges or DLTs
C  Author J.Boucrot 04-Oct-1996
C Called from PRDATSET,PRMCD1                     from BOOKLIB
C Calls  PRBFIL                                   from BOOKLIB
C Calls  IUCOMP                                   from GENLIB
C  Input arguments :
C   IBD = rank of dataset in IBDSEL
C-----------------------------------------------------------------------
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-----------------------------------------------------------------------
      IF (IWFILI.LE.0) GO TO 999
      ICAT=4
      IF (IMCDAT.EQ.1) THEN
         IF (ISYEAR.GE.1995.AND.IRAWD1.EQ.1.AND.IDASEL.EQ.2) ICAT=3
      ENDIF
      CALL PRBFIL(ICAT,IBD)
 999  RETURN
      END
      SUBROUTINE PRFILIRA(ICAT,LISRA,NRA)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! FILI CARD printout for RAW tapes
C  Author J.Boucrot 04-Oct-1996
C Called from PRDATSET                            from BOOKLIB
C Calls  PRBFIL                                   from BOOKLIB
C Calls  IUCOMP                                   from GENLIB
C  Input arguments :
C  ICAT = 2 if "AA" - type datasets, = 3 if DLT 1995 and after
C LISRA = List of runs on dataset
C   NRA = number of runs
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      COMMON / PRBFAA / NRUNAA,NPOSAA
      INTEGER LISRA(*)
C-----------------------------------------------------------------------
      IF (NRA.LE.0.OR.IWFILI.LE.0) GO TO 999
      IF (ICAT.LT.2.OR.ICAT.GT.3) GO TO 999
      DO 500 NR=1,NRA
         NRUN=LISRA(NR)
         IF (NRUN.LE.0) GO TO 500
         IND=IUCOMP(NRUN,LISALRUN,NTOTRUNS)
         IF (IND.EQ.0) GO TO 500
         IBB=LISALBDF(IND)
         IDD=IUCOMP(IBB,IBDSEL,NDATFOUN)
         IF (IDD.LE.0) GO TO 500
C Check if LEP energy is OK for this run:
         IF (ENGLEP.GT.0.) THEN
            ITOLER=999
            TOLER=0.001*FLOAT(ITOLER)
            CALL BKTLEP(NRUN,ENGLEP,TOLER,ILOK)
            IF (ILOK.EQ.0) GO TO 500
         ENDIF
         NRUNAA=NRUN
         NPOSAA=0
         IF (ICAT.EQ.3) NPOSAA=NR
         CALL PRBFIL(ICAT,IDD)
 500  CONTINUE
 999  RETURN
      END
      SUBROUTINE PRFILISO
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! FILI CARD printout for Cartridges or DLTs Sorted by energy
C  Author J.Boucrot 04-Oct-1996
C Called from PRDATSET                            from BOOKLIB
C Calls  PRBFIL                                   from BOOKLIB
C Calls  IUCOMP                                   from GENLIB
C  Input arguments :
C   IBD = rank of dataset in IBDSEL
C-----------------------------------------------------------------------
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      COMMON / PRBFAA / NRUNAA,NPOSAA
      INTEGER IFIPR(NTODT)
C-----------------------------------------------------------------------
      IF (ISORLE.EQ.0) GO TO 999
      IBOLD=-1
      ICAT=4
      IF (IDSEAR.EQ.2) ICAT=1
      IF (IDASEL.EQ.2.AND.(IRAWAA.NE.0.OR.IRAWD2.NE.0)) ICAT=2
      IF (IDASEL.EQ.2.AND.IRAWD1.EQ.1) ICAT=3
C Loop on all LEP energies :
      DO 800 ILL=1,NLEPSF
         IELEP=ILEPEN(ILL)
         ELEP=0.001*FLOAT(IELEP)
         WRITE (LWRFIL,1015) ELEP
         CALL VZERO(IFIPR,NTODT)
         NPRFI=0
         IBOLD=-1
C Loop on all runs of all datasets :
         DO 500 NRR=1,NTOTRUNS
            IVAL=LISALSOR(NRR)
            IRVR=LISALRUN(IVAL)
            IBDF=LISALBDF(IVAL)
            ILPR=LISENGLP(IVAL)
            IF (ILPR.NE.IELEP) GO TO 500
C print the FILI card if it's the 1st time for this dataset :
            IF (IDSEAR.EQ.2) THEN
               CALL PRBFIL(ICAT,IVAL)
               GO TO 500
            ENDIF
            IF (IRAWD2.EQ.0.AND.IBDF.EQ.IBOLD) GO TO 500
            IBOLD=IBDF
            IKR=IUCOMP(IBDF,IBDSEL,NDATFOUN)
            IF (IKR.LE.0) GO TO 500
            IFIFI=IUCOMP(IBDF,IFIPR,NPRFI)
            IF (IRAWD2.EQ.0.AND.IFIFI.GT.0) GO TO 500
            NPRFI=NPRFI+1
            IFIPR(NPRFI)=IBDF
            IF (ICAT.EQ.2) NRUNAA=IRVR
            IF (ICAT.EQ.3) THEN
               NRUNAA=IRVR
               CALL BKRDLFI(IKR,IRVR,NPOS)
               IF (NPOS.GT.0) NPOSAA=NPOS
            ENDIF
            CALL PRBFIL(ICAT,IKR)
 500     CONTINUE
 800  CONTINUE
 999  RETURN
 1015 FORMAT ('*** ===  FILI CARDS for LEP energy = ',F8.2,' GEV',
     +        ' === ***')
      END
      SUBROUTINE PRFILL(ITRM,NFOUN,LISRU,LISPR,LISRO)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print LEP Fills Properties for the selected RUNS
C  Author  J.Boucrot 02-Jun-1992
C  Add printout of Z0s  15-Sep-1992 J.Boucrot
C  Add SICAL Lumi       23-Aug-1993 J.Boucrot
C Called from PRRDAT                          from BOOKLIB
C Calls  BKPOIN,BKFPER                        from BOOKLIB
C Input arguments :
C  ITRM  = 1 if printout required on terminal , = 0 otherwise
C  NFOUN =   Number of runs found from user's selection
C  LISRU =   List of addresses of sorted runs in BRUC bank
C  LISPR =   List of BRUC bank numbers for selected runs
C  LISRO =   List of ROW # in BRUC banks for selected runs
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
      PARAMETER ( MAXRF = 50 , MAXLI = 5 )
      CHARACTER*2 BLLUM(3)
      CHARACTER*4 BSLUM(3)
      INTEGER LISRU(*),LISPR(*),LISRO(*)
      INTEGER LIRUF(MAXRF)
      DOUBLE PRECISION XLUTO,RLUFI,XLUFI,XLUFS,SLUFI,XLUTS
      DATA BLLUM  / 'Un' , 'Pr' , 'OK' /
      DATA BSLUM  / 'Unkn' , 'Prov' , ' OK ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IF (NFOUN.LE.0) GO TO 999
      MINSI=MINSIC
C Find the last run # with definitive LUMI :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 999
      LASOK=ITABL(JBLAS,1,JBLALU)
C SICAL or not SICAL ?
      ISIOK=0
      JBSLU=IW(NAMIND('BSLU'))
      IF (JBSLU.GT.0.AND.ISRUNL.GE.MINSI) ISIOK=1
C Print general header :
      WRITE ( LWRUSR,1010)
      IF (ISIOK.EQ.0) WRITE ( LWRUSR,1001)
      IF (ISIOK.EQ.0) WRITE ( LWRUSR,1002)
      IF (ISIOK.EQ.0) WRITE ( LWRUSR,1001)
      IF (ISIOK.EQ.1) WRITE ( LWRUSR,2001)
      IF (ISIOK.EQ.1) WRITE ( LWRUSR,2002)
      IF (ISIOK.EQ.1) WRITE ( LWRUSR,2001)
      IF (ITRM.EQ.0) GO TO 20
      WRITE ( LWRINT,1010)
      IF (ISIOK.EQ.0) WRITE ( LWRINT,1001)
      IF (ISIOK.EQ.0) WRITE ( LWRINT,1002)
      IF (ISIOK.EQ.0) WRITE ( LWRINT,1001)
      IF (ISIOK.EQ.1) WRITE ( LWRINT,2001)
      IF (ISIOK.EQ.1) WRITE ( LWRINT,2002)
      IF (ISIOK.EQ.1) WRITE ( LWRINT,2001)
 20   CONTINUE
      NTOK=0
      CALL VZERO(LIRUF,MAXRF)
      IFILO=-1
      NRFIL=0
      IDATR=1000000
      ISTLU=100
      ENGY=-1.
      XLUFI=0.
      XLUTO=0.
      RLUFI=-1.
      NLUZ=0
      NZTOT=0
      NBFIL=0
      NZBES=0
      NLLBS=0
      NLSBS=0
      XLUFS=0.
      XLUTS=0.
      SLUTO=0.
      SLUFI=0.
C----------------------------------------------------------------------
C Loop on all runs found and print the content :
C
      DO 80 IRU=1,NFOUN
C Find run number from bank 'BRUC' :
         CALL BKPOIN(LECDAF,'BRUC',LISPR(IRU),JBRUC)
         IF (JBRUC.LE.0) GO TO 80
         ISR=LISRU(IRU)
         IF (ISR.LE.0) GO TO 80
         IKH=LISRO(ISR)
         IRUN=ITABL(JBRUC,IKH,JBRURN)
         NTOK=NTOK+1
C get all quantities to be printed :
         ILEP=ITABL(JBRUC,IKH,JBRUTE)
         IFIL=ITABL(JBRUC,IKH,JBRULF)
         IDTO=ITABL(JBRUC,IKH,JBRUWD)
         ELEP=0.001*FLOAT(ILEP)
         RLUM=RTABL(JBRUC,IKH,JBRULU)
         NZRU=ITABL(JBRUC,IKH,JBRUNZ)
         ICS=ITABL(JBRUC,IKH,JBRUCS)
C Determine if LUMI is unknown , provisional or definitive :
 30      IF (ICS.GE.-1) THEN
            IQUAL=(1+ICS)/10
         ELSE
            IQUAL=-1
         ENDIF
         ILUM=ICS-10*IQUAL
         ICRS=ILUM+2
         IF (ILUM.LT.0.OR.ILUM.GT.1.OR.RLUM.LE.0.) ICRS=1
         IF (RLUM.GT.0.) ICRS=2
         IF (IRUN.LE.LASOK.AND.RLUM.GT.0.AND.ILUM.EQ.1) ICRS=3
C Get SICAL lumi , and SICAL lumi status , if any
         IRUS=0
         XSIC=0.
         ISIC=4
         IF (ISIOK.EQ.0) GO TO 45
         CALL BKFPER(IRUN,0,NPRU)
         IF (NPRU.LE.0) GO TO 45
         CALL BKPOIN(LECDAF,'BSLU',NPRU,JBSLU)
         IF (JBSLU.LE.0) GO TO 45
         DO 40 ISL=1,LROWS(JBSLU)
            IF (ITABL(JBSLU,ISL,JRSLRN).NE.IRUN) GO TO 40
            IRUS=ISL
            GO TO 41
 40      CONTINUE
 41      IF (IRUS.EQ.0) GO TO 45
         KBSLU=KROW(JBSLU,IRUS)
         ISIC=1+IW(KBSLU+JRSLLQ)
         XSIC=RW(KBSLU+JRSLLU)
 45      CONTINUE
C Now check if one begins a new fill or continues an old one :
         IF (IFIL.NE.IFILO.AND.NTOK.GT.1) THEN
            IF (NRFIL.LE.0) GO TO 60
            IF (ISTLU.LE.0.OR.ISTLU.GT.3) ISTLU=1
            IF (XLUFI.LT.0.) XLUFI=0.
            IF (NLUZ.LT.0) NLUZ=0
            IF (ISTSI.LE.0.OR.ISTSI.GT.3) ISTSI=1
            IF (XLUFS.LT.0.) XLUFS=0.
C write first line :
            MIWR=MIN0(MAXLI,NRFIL)
            IF (ISIOK.EQ.1) GO TO 47
            WRITE ( LWRUSR , 1011 ) IFILO,IDATR,ENGY,XLUFI,NLUZ,
     +      BLLUM(ISTLU),(LIRUF(KK),KK=1,MIWR)
            IF ( ITRM.NE.0)
     +      WRITE ( LWRINT , 1011 ) IFILO,IDATR,ENGY,XLUFI,NLUZ,
     +      BLLUM(ISTLU),(LIRUF(KK),KK=1,MIWR)
            GO TO 50
 47         WRITE ( LWRUSR , 2011 ) IFILO,IDATR,ENGY,NLUZ,XLUFI,
     +      BSLUM(ISTLU),XLUFS,BSLUM(ISTSI),(LIRUF(KK),KK=1,MIWR)
            IF ( ITRM.NE.0)
     +      WRITE ( LWRINT , 2011 ) IFILO,IDATR,ENGY,NLUZ,XLUFI,
     +      BSLUM(ISTLU),XLUFS,BSLUM(ISTSI),(LIRUF(KK),KK=1,MIWR)
C write end of list of runs , if needed :
 50         NTOLI=1+NRFIL/MAXLI
            IF (NTOLI.GT.1.AND.NRFIL.NE.MAXLI) THEN
               DO 55 ILI=2,NTOLI
                  NRU1=1+MAXLI*(ILI-1)
                  NRU2=MIN0(ILI*MAXLI,NRFIL)
                  IF ( ISIOK.EQ.0) WRITE ( LWRUSR , 1021 )
     +                 (LIRUF(KJ),KJ=NRU1,NRU2)
                  IF ( ISIOK.EQ.1) WRITE ( LWRUSR , 2021 )
     +                 (LIRUF(KJ),KJ=NRU1,NRU2)
                  IF (ITRM.EQ.0) GO TO 55
                  IF ( ISIOK.EQ.0) WRITE ( LWRINT , 1021 )
     +                 (LIRUF(KJ),KJ=NRU1,NRU2)
                  IF ( ISIOK.EQ.1) WRITE ( LWRINT , 2021 )
     +                 (LIRUF(KJ),KJ=NRU1,NRU2)
 55            CONTINUE
            ENDIF
C Best fills up to now :
            IF (NLUZ.GT.NZBES) THEN
               NBFIL=IFILO
               NZBES=NLUZ
            ENDIF
            IF (XLUFI.GT.RLUFI) THEN
               RLUFI=XLUFI
               NLLBS=IFILO
            ENDIF
            IF (ISIOK.EQ.1.AND.XLUFS.GT.SLUFI) THEN
               SLUFI=XLUFS
               NLSBS=IFILO
            ENDIF
C RAZ fill-dependant quantities :
            CALL VZERO(LIRUF,MAXRF)
            NRFIL=0
            IDATR=1000000
            ISTLU=100
            ENGY=-1.
            XLUFI=0.
            NLUZ=0
            IFILO=IFIL
            XLUFS=0.
            ISTSI=100
 60         CONTINUE
         ENDIF
         IF (NTOK.EQ.1) IFILO=IFIL
C Add the present run to the current fill :
         IF (IFIL.EQ.IFILO) THEN
            IDATR=MIN0(IDATR,IDTO)
            ENGY=AMAX1(ENGY,ELEP)
            ISTLU=MIN0(ISTLU,ICRS)
            XLUFI=XLUFI+DBLE(RLUM)
            NRFIL=NRFIL+1
            NLUZ=NLUZ+NZRU
            XLUTO=XLUTO+DBLE(RLUM)
            NZTOT=NZTOT+NZRU
            IF (NRFIL.LE.MAXRF) LIRUF(NRFIL)=IRUN
            IF (ISIOK.EQ.1) THEN
               XLUFS=XLUFS+DBLE(XSIC)
               XLUTS=XLUTS+DBLE(XSIC)
               ISTSI=MIN0(ISTSI,ISIC)
            ENDIF
         ENDIF
 80   CONTINUE
C----------------------------------------------------------------------
C Flush out the last fill :
      IF (NRFIL.LE.0) GO TO 160
      IF (ISTLU.LE.0.OR.ISTLU.GT.3) ISTLU=1
      IF (XLUFI.LT.0.) XLUFI=0.
      IF (NLUZ.LT.0) NLUZ=0
      IF (ISTSI.LE.0.OR.ISTSI.GT.3) ISTSI=1
      IF (XLUFS.LT.0.) XLUFS=0.
      MIWR=MIN0(MAXLI,NRFIL)
      IF (ISIOK.EQ.1) GO TO 147
      WRITE ( LWRUSR , 1011 ) IFILO,IDATR,ENGY,XLUFI,NLUZ,
     +      BLLUM(ISTLU),(LIRUF(KK),KK=1,MIWR)
      IF ( ITRM.NE.0)
     +      WRITE ( LWRINT , 1011 ) IFILO,IDATR,ENGY,XLUFI,NLUZ,
     +      BLLUM(ISTLU),(LIRUF(KK),KK=1,MIWR)
      GO TO 150
 147  WRITE ( LWRUSR , 2011 ) IFILO,IDATR,ENGY,NLUZ,XLUFI,
     +      BSLUM(ISTLU),XLUFS,BSLUM(ISTSI),(LIRUF(KK),KK=1,MIWR)
      IF ( ITRM.NE.0)
     +      WRITE ( LWRINT , 2011 ) IFILO,IDATR,ENGY,NLUZ,XLUFI,
     +      BSLUM(ISTLU),XLUFS,BSLUM(ISTSI),(LIRUF(KK),KK=1,MIWR)
C write end of list of runs , if needed :
 150  NTOLI=1+NRFIL/MAXLI
      IF (NTOLI.GT.1.AND.NRFIL.NE.MAXLI) THEN
         DO 155 ILI=2,NTOLI
            NRU1=1+MAXLI*(ILI-1)
            NRU2=MIN0(ILI*MAXLI,NRFIL)
            IF ( ISIOK.EQ.0) WRITE ( LWRUSR , 1021 )
     +           (LIRUF(KJ),KJ=NRU1,NRU2)
            IF ( ISIOK.EQ.1) WRITE ( LWRUSR , 2021 )
     +           (LIRUF(KJ),KJ=NRU1,NRU2)
            IF (ITRM.EQ.0) GO TO 155
            IF ( ISIOK.EQ.0) WRITE ( LWRINT , 1021 )
     +           (LIRUF(KJ),KJ=NRU1,NRU2)
            IF ( ISIOK.EQ.1) WRITE ( LWRINT , 2021 )
     +           (LIRUF(KJ),KJ=NRU1,NRU2)
 155     CONTINUE
      ENDIF
C The last fill may be the best one :
      IF (NLUZ.GT.NZBES) THEN
         NBFIL=IFILO
         NZBES=NLUZ
      ENDIF
      IF (XLUFI.GT.RLUFI) THEN
         RLUFI=XLUFI
         NLLBS=IFILO
      ENDIF
      IF (ISIOK.EQ.1.AND.XLUFS.GT.SLUFI) THEN
         SLUFI=XLUFS
         NLSBS=IFILO
      ENDIF
 160  CONTINUE
C Print general statistics :
      IF (NZTOT.LT.0) NZTOT=0
      IF (XLUTO.LT.0.) XLUTO=0.
      IF (ISYEAR.LE.1995) THEN
         WRITE ( LWRUSR , 1031 ) NZTOT,NBFIL,NZBES
      ELSE
         WRITE ( LWRUSR , 1131 ) NZTOT,NBFIL,NZBES
      ENDIF
      IF (XLUTO.GT.0.) WRITE ( LWRUSR , 1032 ) XLUTO,NLLBS,RLUFI
      IF (ISIOK.EQ.1.AND.XLUTS.GT.0.)
     +     WRITE ( LWRUSR , 2031 ) XLUTS,NLSBS,SLUFI
 999  RETURN
C----------------------------------------------------------------------
C all formats :
 1000 FORMAT (/)
 1001 FORMAT (1X,79(1H-))
 1002 FORMAT (T2,'Fill',T8,1H|,T10,'Date  ',T17,1H|,T21,'Exact',
     +        T27,1H|,T30,'Lumi',T36,1H|,T38,'Nevt',T44,1H|,T45,'Stat',
     +        T49,1H|,T52,'List of runs for this Fill '/
     +        T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,
     +        T30,'nb**-1',T36,1H|,T44,1H|,T46,'Lum',T49,1H|)
 1010 FORMAT (10X,' ====>  In the TABLE below :  <===='//,
     +       15X,'For  < Status of Luminosity > item :',/
     +       1X,'Prov means : Luminosity given by Julia banks '/,
     +       1X,'OK   means : Luminosity computed by LUMI Experts'/
     +       1X,'Unkn means : Luminosity NOT yet known for ALL runs'//)
 1011 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T28,F7.2,
     +        T36,1H|,T38,I5,T44,1H|,T46,A2,T49,1H|,T50,5I6)
 1021 FORMAT (T8,1H|,T17,1H|,T27,1H|,T36,1H|,T44,1H|,T49,1H|,T50,5I6)
 1031 FORMAT (//' ** General statistics :'/5X,'Total Number of Z0s =',
     +        I8/5X,'Best fill is :',I6,  '  Number of Z0s =',I8)
 1131 FORMAT (//' ** General statistics :'/5X,'Total Number of Hadronic'
     +        ,' Events =',I8/5X,'Best fill is :',I6,
     +        '  Number of Hadronic Events =',I8)
 1032 FORMAT (//' ** General LCAL statistics : **'//
     +        5X,'Total LCAL luminosity =', F10.2,' Nanobarns**-1 '/,
     +        5X,'Best fill is :',I6,'  Lumi =',F7.2,' Nb**-1  ')
 2001 FORMAT (1X,110(1H-))
 2002 FORMAT (T2,'Fill',T8,1H|,T10,'Date  ',T17,1H|,T21,'Exact',
     +        T27,1H|,T30,'NZ0',T36,1H|,T38,'LCAL',T45,1H|,T46,'Status',
     +        T53,1H|,T56,'SICAL',T64,1H|,T65,'Status',T71,1H|,
     +        T75,'List of runs for this Fill '/
     +        T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,T30,
     +        'Hadr',T36,1H|,T38,'Lumi',T45,1H|,T47,'LCAL',T53,1H|,T56,
     +        'Lumi',T64,1H|,T66,'SICAL',T71,1H|)
 2011 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T30,I5,
     +        T36,1H|,T37,F7.2,T45,1H|,T47,A4,T53,1H|,T56,F7.2,
     +        T64,1H|,T66,A4,T71,1H|,T74,5I6)
 2021 FORMAT (T8,1H|,T17,1H|,T27,1H|,T36,1H|,T45,1H|,T53,1H|,
     +        T64,1H|,T71,1H|,T74,5I6)
 2031 FORMAT (//' ** General SICAL statistics : **'//
     +        5X,'Total SICAL luminosity =',F10.2,' Nanobarns**-1 ',/
     +        5X,'Best fill is :',I6,'  Lumi =',F7.2,' Nb**-1  ')
      END
      SUBROUTINE PRINITS
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINTOUT
C! Prntout of all selection variables before search
C J. Boucrot  23-09-1996
C Called from BKVERAL                        from   BOOKLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- DATX11 ----
      PARAMETER ( NDX11 = 50 )
      CHARACTER*80 XDATX11
      COMMON / IDATX11 /  NDATX11,NPROCL,LPROCL(4)
      COMMON / CDATX11 /  XDATX11(NDX11)
C-----------------------------------------------------------------------
C General , global variables :
      LU=LWRUSR
      IF (IDEBUG.EQ.0.AND.IBKINT.NE.-1) GO TO 999
      WRITE (LU,1001) IBKINT,IDSEAR,IMCDAT,NLABDF,IBPRUS
 1001 FORMAT (/' ======= PRINITS : Debug printout of all SCANBOOK',
     +         ' search switches ========'/,
     +         5x,' --> IBKINT,IDSEAR,IMCDAT,NLABDF,IBPRUS =',5i7)
C Printouts of run/year/fill selections :
      WRITE ( LU,1111) IWFILI,IPSROU
      IF (IMCDAT.EQ.1) THEN
         WRITE (LU,1002) IYEASL,IRUNSL,IFILSL,ISYEAR,ISRUNF,ISRUNL
 1002    FORMAT (/5X,'** Run/year selection switches :'/,
     +            8X,'== IYEASL,RUN,FIL =',3I5,
     +            ' ** ISYEAR,RUNF,RUNL =',3I8)
         WRITE (LU,1003) ISELPH,ISPERF,IPHYGR,PHYKEY(1:100)
 1003    FORMAT (/8X,'** Run_Qual switches ISELPH,PERF,PHYGR =',3i6/,
     +            12x,'** PHYKEY =',2x,a100)
C 'SRUN' bank :
         IF (IDSEAR.NE.3) GO TO 100
         ISRUN=IW(NAMIND('SRUN'))
         IF (ISRUN.GT.0) THEN
           NSRUN=IW(ISRUN)
           WRITE (LU,1004) NSRUN,(IW(ISRUN+KK),KK=1,NSRUN)
 1004      FORMAT (/12X,'** SRUN BANK : NSRUN =',I6,' == Content ='/,
     +              15x,10(i6))
         ENDIF
C 'SFIL' bank :
         ISFIL=IW(NAMIND('SFIL'))
         IF (ISFIL.GT.0) THEN
           NSFIL=IW(ISFIL)
           WRITE (LU,1005) NSFIL,(IW(ISFIL+KK),KK=1,NSFIL)
 1005      FORMAT (/12X,'** SFIL BANK : NSFIL =',I6,' == Content ='/,
     +              15x,10(i6))
         ENDIF
 100     CONTINUE
      ENDIF
C Specific for IDSEAR = 3 :
      IF (IDSEAR.EQ.3) THEN
         WRITE (LU,1010) IPRONL,IBTQSE,IPSROU,ISORLE
 1010    FORMAT (/12X,'$$ Additional keys for IDSEAR = 3 :'/,
     +            15x,'IPRONL,BTQSE,PSROU,SORLE =',4i8)
      ENDIF
C Specific for IDSEAR = 1 :
      IF (IMCDAT.EQ.1.AND.(IDSEAR.EQ.6.OR.IDSEAR.EQ.1)) THEN
         WRITE (LU,1020) ENGLEP,ILABCH,IDASEL,IALISE
 1020    FORMAT (/12X,'$$ Additional keys for IDSEAR = 1 :'/,
     +            15x,'ENGLEP =',F12.3,' ILABCH,DASEL,ALISE=',3i8)
         WRITE (LU,1021) IDLDAT,IEPRAW
 1021    FORMAT (15X,'$$ Additional keys  :',
     +           ' IDLDAT,IEPRAW=',2i8)
        WRITE (LU,1022) IJULSL,IDATSL,IPROSL,IPRGVR,ISDATE,ISDATL,LASTPR
 1022    FORMAT (15X,'$$ Keys for processing selection :'/,
     +           18x,' IJULSL,DAT,PRO =',3i8/,
     +           18x,' IPRGVR,ISDATE,ISDATL,LASTPR =',4I8)
         WRITE (LU,1023) IBTQSE,IPSROU,ISORLE
      WRITE (LU,1122) NDATX11,NPROCL
 1122 FORMAT (' ===> NDATX11,NPROCL =',2I8)
      IF (NPROCL.GT.0) WRITE (LU,1123) (LPROCL(KK),KK=1,NPROCL)
 1123 FORMAT (3X,' -- LPROCL =',4I7)
 1023    FORMAT (15X,'$$ Additional keys for SRUN CARDS :'/,
     +            18x,'IBTQSE,PSROU,SORLE =',3i8)
         WRITE (LU,1024) IDLCRW,IRAWAA,IRAWD1,IRAWD2,SELFOR
 1024    FORMAT (15X,'$$ Additional keys for RAWS  :'/,
     +            18x,'IDLCRW,RAWAA,RAWD1,D2 =',4i8,
     +            ' == SELFOR =',2X,A4)
      ENDIF
C Specific for IDSEAR = 4 :
      IF (IMCDAT.EQ.2.AND.(IDSEAR.EQ.6.OR.IDSEAR.EQ.4)) THEN
         WRITE (LU,1040) ENGLEP,ILABCH,IDASEL
 1040    FORMAT (/12X,'$$ Additional keys for IDSEAR = 4 :'/,
     +            15x,'ENGLEP =',F12.3,' ILABCH,DASEL=',2i8)
         WRITE (LU,1041) IDLDAT,IDLCRW,IEPRAW
 1041    FORMAT (15X,'$$ Additional keys for DLTS :',
     +           ' IDLDAT,DLCRW,EPRAW=',3i8)
        WRITE (LU,1042) IGEOYR,KINCOD,ISELPA,IGALPR,IPRGVR,ISEED1,ISEED2
 1042   FORMAT (15X,'$$ Keys for MC selection :'/,
     +          18X,'IGEOYR,KINCOD,ISELPA =',3I8/,
     +          18X,'IGALPR,IPRGVR,ISEEDS =',4I8)
        WRITE (LU,1043) IMINPR,INANPR
 1043   FORMAT (15X,'$$ Keys for MINI/NANO :'/,
     +          18X,'IMINPR,INANPR =',2I8)
 1111 FORMAT (6X,'--> IWFILI,IPSROU =',2I8)
      ENDIF
 999  RETURN
      END
      SUBROUTINE PRIPRO
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Prints a summary for datasets by Homelab and Year in SCANBOOK
C  J. Boucrot 22-Nov-1993
C  Modified 06-Sep-1995 for CERN dataset size statistics
C  Called from BKSEAR or BKSRIN                     from BOOKLIB
C  Calls ALSTIN                                     from ALEPHLIB
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      PARAMETER ( NPROCS = 4 , NDATS = 7 , NYEMX = 20 , NKIN = 100 )
      PARAMETER ( IRMA = 100000, IYEF = 10, IYEV = 10000, IFAGA = 1000 )
      INTEGER IDAPR(NDATS+1,NPROCS,NYEMX)
      REAL SDAPR(NDATS+1,NPROCS,NYEMX),SISKI(NDATS)
      CHARACTER*8 KINLI(NKIN),PROCS(NPROCS)
      INTEGER BKINCA,KINCO(NKIN),LISKI(NDATS)
      DATA PROCS /' Test ', ' Last ', 'Previous' , ' Old ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C First printout for Real data :
C
      IAL=0
      IF (IBKINT.EQ.-1) IMCDAT=0
* ------------ Corrections for OPT 3 ------------------
      IF (IMCDAT.EQ.2) GO TO 110
      IF (INDEX(SELDAT,'R').GT.0.AND.IDSEAR.LE.6) GO TO 999
      DO 100 IHO=1,NLABOK
         IF (ILABCH.GT.0.AND.IHO.NE.ILABCH) GO TO 100
         IF (IDSEAR.EQ.8) THEN
            WRITE ( LWRUSR,1002 ) CLISTL(IHO)
         ENDIF
         CALL VZERO(IDAPR,(NDATS+1)*NPROCS*NYEMX)
C
C Loop on special 'BMCL' banks for Homelab Real data :
C
         JBMCL=NAMIND('BMCL')+1
 20      JBMCL=IW(JBMCL-1)
         IF (JBMCL.LE.0) GO TO 80
         NPM=IW(JBMCL-2)
         IF (NPM.LT.IRMA) GO TO 20
C Find year of data taking :
         IYEAR=(NPM-IRMA)/IYEF
         IF (IDSEAR.NE.8.AND.ISYEAR.NE.IYEAR) GO TO 20
         NYEA=0
         DO 25 IYY=1,NTOYEA
            IF (LISYEA(IYY).NE.IYEAR) GO TO 25
            NYEA=IYY
            GO TO 26
 25      CONTINUE
 26      IF (NYEA.EQ.0) GO TO 20
C Find processing level :
         IPROC=NPM-IRMA-IYEF*IYEAR
         IF (IPROC.LE.0.OR.IPROC.GT.NPROCS) GO TO 20
         NBMCL=LROWS(JBMCL)
C Now loop on all 'BMCL'rows and fill IDAPR :
         DO 60 IRO=1,NBMCL
            KBMCL=KROW(JBMCL,IRO)
            ILAA=IW(KBMCL+JBMCLA)
            IF (IHO.EQ.1.AND.(ILAA.EQ.10.OR.ILAA.EQ.11)) GO TO 45
            IF (ILAA.NE.IHO) GO TO 60
 45         CONTINUE
            DO 50 IKK=1,NDATS+1
               NDD=IW(KBMCL+JBMCTO+IKK-1)
               IDAPR(IKK,IPROC,NYEA)=IDAPR(IKK,IPROC,NYEA)+NDD
 50         CONTINUE
 60      CONTINUE
         GO TO 20
 80      IF (IHO.NE.1.OR.IDSEAR.NE.8) GO TO 180
C For Homelab = CERN and SCANBOOK Option 8 , store the datasets sizes :
         CALL VZERO(SDAPR,(NDATS+1)*NPROCS*NYEMX)
C Loop on special 'BSCL' banks for CERN Real data :
         JSMCL=NAMIND('BSCL')+1
120      JSMCL=IW(JSMCL-1)
         IF (JSMCL.LE.0) GO TO 180
         NPM=IW(JSMCL-2)
         IF (NPM.LT.IRMA) GO TO 120
C Find year of data taking :
         IYEAR=(NPM-IRMA)/IYEF
         NYEA=0
         DO 125 IYY=1,NTOYEA
            IF (LISYEA(IYY).NE.IYEAR) GO TO 125
            NYEA=IYY
            GO TO 126
125      CONTINUE
126      IF (NYEA.EQ.0) GO TO 120
C Find processing level :
         IPROC=NPM-IRMA-IYEF*IYEAR
         IF (IPROC.LE.0.OR.IPROC.GT.NPROCS) GO TO 120
         NSMCL=LROWS(JSMCL)
C Now loop on all 'BSCL'rows and fill SDAPR :
         DO 160 IRO=1,NSMCL
            KSMCL=KROW(JSMCL,IRO)
            ILAA=IW(KSMCL+JBMCLA)
            IF (IHO.EQ.1.AND.(ILAA.EQ.10.OR.ILAA.EQ.11)) GO TO 145
            IF (ILAA.NE.IHO) GO TO 160
145         CONTINUE
            DO 150 IKK=1,NDATS+1
               SDD=0.001*FLOAT(IW(KSMCL+JBMCTO+IKK-1))
               SDAPR(IKK,IPROC,NYEA)=SDAPR(IKK,IPROC,NYEA)+SDD
150         CONTINUE
160      CONTINUE
         GO TO 120
C
C Now perform printout for this homelab :
C
180      CONTINUE
         DO 90  I1=1,NTOYEA-1
            IF (IDSEAR.NE.8.AND.LISYEA(I1).NE.ISYEAR) GO TO 90
            IF (IDSEAR.EQ.8) WRITE ( LWRUSR,1003) LISYEA(I1)
            IF (IDSEAR.NE.8.AND.IBKINT.EQ.2.AND.ILABCH.NE.0) THEN
               WRITE ( LWRINT,1004) LISYEA(I1),CLISTL(ILABCH)
            ENDIF
            DO 85 I2=1,NPROCS
               IAL=IAL+IDAPR(1,I2,I1)
               IF (IDSEAR.EQ.8)
     +         WRITE ( LWRUSR,1005) PROCS(I2),IDAPR(1,I2,I1),
     +         (IDAPR(IJ,I2,I1),IJ=3,6),IDAPR(8,I2,I1)
               IF (IDSEAR.NE.8.AND.IBKINT.EQ.2.AND.ILABCH.NE.0)
     +         WRITE ( LWRINT,1005) PROCS(I2),IDAPR(1,I2,I1),
     +         (IDAPR(IJ,I2,I1),IJ=3,6),IDAPR(8,I2,I1)
 85         CONTINUE
 90      CONTINUE
         IF (IDSEAR.NE.8.AND.IBKINT.EQ.2.AND.ILABCH.NE.0) THEN
            WRITE ( LWRINT,1006)
         ENDIF
         IF (IDSEAR.NE.8.OR.ILABCH.NE.1) GO TO 100
C Printout of Gbytes contents for CERN only in SCANBOOK Option 8 :
         DO 190  I1=1,NTOYEA-1
            WRITE ( LWRUSR,2003) LISYEA(I1)
            DO 185 I2=1,NPROCS
               WRITE ( LWRUSR,2005) PROCS(I2),SDAPR(1,I2,I1),
     +         (SDAPR(IJ,I2,I1),IJ=3,6),SDAPR(8,I2,I1)
185         CONTINUE
190      CONTINUE
C End of loop on all Homelabs :
 100  CONTINUE
C-----------------------------------------------------------------------
C Now printout for MC   data :
C
 110  IF (IMCDAT.EQ.1) GO TO 999
      JBKIN=IW(NAMIND('BKLI'))
      IF (JBKIN.EQ.0) GO TO 999
      KKIN=LROWS(JBKIN)
      KKIN=MIN0(KKIN,NKIN)
      DO 200 IK=1,KKIN
         KBKIN=KROW(JBKIN,IK)
         KINCO(IK)=IW(KBKIN+JBKLKC)
         CALL ALSTIN(IW(KBKIN+JBKLKN),2,KINLI(IK))
 200  CONTINUE
C
C Loop on Homelabs :
C
      DO 500 IHO=1,NLABOK
         IF (ILABCH.GT.0.AND.IHO.NE.ILABCH) GO TO 500
         IF (IHO.EQ.10.OR.IHO.EQ.11) GO TO 500
         WRITE ( LWRUSR,1011 ) CLISTL(IHO)
C Loop on special 'BMCL' banks for Homelab MC   data :
         JBMCL=NAMIND('BMCL')+1
 220     JBMCL=IW(JBMCL-1)
         IF (JBMCL.LE.0) GO TO 410
         IYEAG=IW(JBMCL-2)
         IF (IYEAG.GE.IRMA.OR.IYEAG.LT.IFAGA) GO TO 220
         IF (IYEAG.EQ.LISYEA(NTOYEA)) GO TO 220
         WRITE (LWRUSR,1021) IYEAG
         CALL VZERO(LISKI,NDATS)
         NBMCL=LROWS(JBMCL)
         DO 400 IR=1,NBMCL
            KITOT=0
            KBMCL=KROW(JBMCL,IR)
            ILAA=IW(KBMCL+JBMCLA)
            IF (IHO.EQ.1.AND.ILAA.EQ.11) GO TO 380
            IF (ILAA.NE.IHO) GO TO 400
 380        KINC=IW(KBMCL+JBMCKG)
            IKIN=IUCOMP(KINC,KINCO,KKIN)
            IF (IKIN.LE.0) GO TO 400
            DO 385 IIO=1,NDATS
               KITOT=KITOT+IW(KBMCL+JBMCTO+IIO)
 385        LISKI(IIO)=LISKI(IIO)+IW(KBMCL+JBMCTO+IIO)
            IAL=IAL+KITOT
            IF (KITOT.GT.0)
     +         WRITE (LWRUSR,1023) KINCO(IKIN),KINLI(IKIN),
     +               (LISKI(KU),KU=1,5),LISKI(7)
            CALL VZERO(LISKI,NDATS)
 400     CONTINUE
         GO TO 220
C Loop on special 'BSCL' banks for CERN MC data :
 410     IF (IHO.NE.1.OR.IDSEAR.NE.8)  GO TO 500
         JSMCL=NAMIND('BSCL')+1
 420     JSMCL=IW(JSMCL-1)
         IF (JSMCL.LE.0) GO TO 500
         IYEAG=IW(JSMCL-2)
         IF (IYEAG.GE.IRMA.OR.IYEAG.LT.IFAGA) GO TO 420
         IF (IYEAG.EQ.LISYEA(NTOYEA)) GO TO 420
         WRITE (LWRUSR,2021) IYEAG
         CALL VZERO(SISKI,NDATS)
         NSMCL=LROWS(JSMCL)
         DO 450 IR=1,NSMCL
            SITOT=0.
            KSMCL=KROW(JSMCL,IR)
            ILAA=IW(KSMCL+JBMCLA)
            IF (IHO.EQ.1.AND.ILAA.EQ.11) GO TO 430
            IF (ILAA.NE.IHO) GO TO 450
 430        KINC=IW(KSMCL+JBMCKG)
            IKIN=IUCOMP(KINC,KINCO,KKIN)
            IF (IKIN.LE.0) GO TO 450
            DO 440 IIO=1,NDATS
               GBYT=0.001*FLOAT(IW(KSMCL+JBMCTO+IIO))
               SITOT=SITOT+GBYT
               SISKI(IIO)=SISKI(IIO)+GBYT
 440        CONTINUE
            IF (SITOT.GT.0.)
     +         WRITE (LWRUSR,2023) KINCO(IKIN),KINLI(IKIN),
     +               (SISKI(KU),KU=1,5),SISKI(7)
            CALL VZERO(SISKI,NDATS)
 450     CONTINUE
         GO TO 420
C End of loop on Homelabs :
 500  CONTINUE
C
 999  IF (IBKINT.EQ.2.AND.IDSEAR.EQ.8) WRITE ( LWRINT,1024) IAL
      CALL PRWINX11(IAL,0)
      RETURN
C-----------------------------------------------------------------------
 1002 FORMAT (/1X,80(1H*)/3X,' -- Start printout of Real Datasets for ',
     +        'Homelab =',2X,A20/1X,80(1H*))
 1003 FORMAT (/' ======>  Number of Datasets for Year : ',I6/,
     +         12x,'Processing',3x,' TOT  RAW  POT  DST  MINI NANO')
 1004 FORMAT (/20x,'For your information :'/,
     +         ' ======>  Year of Data Taking is : ',I6,
     +         ' for Homelab = ',2x,A20/,
     +         20X,'Present Number of Datasets :'/,
     +         12x,'Processing',3x,' TOT  RAW  POT  DST  MINI NANO')
 1005 FORMAT (12x,A8,4X,6I5)
 1006 FORMAT (/)
 1011 FORMAT (/1X,80(1H*)/3X,' -- Start printout of MCarlo Datasets ',
     +        'for Homelab =',2X,A20/1X,80(1H*))
 1021 FORMAT (/' ======>  Year of Geometry is : ',I6/,8X,
     +       'KINGAL Generator',11x,' KIN  RAW  POT  DST  MINI NANO')
 1023 FORMAT (5X,I6,8X,A8,7X,6I5)
 1024 FORMAT (/' ===> A Total of ',I7,' Datasets has been found :',
     +         ' see output')
C
 2003 FORMAT (/' ======>  Size (in Gbytes) of Datasets for Year : ',I6/,
     +         12x,'Processing',3x,'  TOT     RAW    POT    DST   ',
     +         'MINI    NANO')
 2005 FORMAT (12x,A8,4X,6F7.1)
 2021 FORMAT (/' ======>  Size (in Gbytes) of Datasets for Year : ',I6/,
     +      /8X,'KINGAL Generator',11x,'   KIN    RAW    POT    DST   ',
     +         'MINI    NANO')
 2023 FORMAT (5X,I6,8X,A8,7X,6F7.1)
      END
      SUBROUTINE PRIRUN
C -------------------------------------------------
C - F.Ranjard - 940413
C! create a IRUN data card as complement of SRUN card
C  the routine accepts only 1 SRUN bank without any
C  run range.
C  the routine does nothing if a IRUN card with list
C  of runs exists already.
C  the SRUN bank is dropped at the end.
C  the IRUN bank is written on output card file
C  Called from PRSRUN                   from BOOKLIB
C --------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      PARAMETER ( NILI = 9 )
      DATA NASRUN , NAIRUN / 0 , 0 /
C ---------------------------------------------------
C - 1st entry
      IF (NASRUN.EQ.0) THEN
         NASRUN = NAMIND('SRUN')
         NAIRUN = NAMIND('IRUN')
         CALL BKFMT ('SRUN','I')
         CALL BKFMT ('IRUN','I')
      ENDIF
C
C - next entry
C
      JSRUN = IW(NASRUN)
C if no SRUN card RETURN
      IF (JSRUN.EQ.0) GO TO 999
      LSRUN=0
      DO 10 II=1,IW(JSRUN)
         IF (IW(JSRUN+II).GT.0) THEN
            LSRUN=LSRUN+1
            GO TO 10
         ENDIF
         GO TO 11
 10   CONTINUE
 11   IF (LSRUN.EQ.0) GO TO 999
C
C - reduce the SRUN size to the real one :
      NSRUN = IW(JSRUN-2)
      CALL AUBOS ('SRUN',NSRUN,LSRUN,JSRUN,IGARB)
      IF (IGARB.EQ.2) GO TO 998
C
      JIRUN = IW(NAIRUN)
      IF (JIRUN.GT.0) THEN
C if there is a IRUN card with list of runs then RETURN
         IF (IW(JIRUN).GT.0) GOTO 999
         NIRUN = IW(JIRUN-2)
      ELSE
         NIRUN = 0
      ENDIF
      CALL AUBOS ('IRUN',NIRUN,10000,JIRUN,IGARB)
      IF (IGARB.EQ.2) GOTO 998
      IF (IGARB.EQ.1) JSRUN = IW(NASRUN)
C
C - set ignore run range before the 1st selected run
      K=0
      IF (IW(JSRUN+1).GT.1) THEN
         K=K+1
         IW(JIRUN+K) = 1
         K=K+1
         IW(JIRUN+K) = -IW(JSRUN+1)+1
      ENDIF
C
C - set ignore run ranges between the 1st and the last selected runs
      DO I=2,IW(JSRUN)
         IF (IW(JSRUN+I) .GT. IW(JSRUN+I-1)+1) THEN
            K=K+1
            IW(JIRUN+K) = IW(JSRUN+I-1)+1
            IF (IW(JSRUN+I)-1 .GT. IW(JIRUN+K)) THEN
              K=K+1
              IW(JIRUN+K) = -IW(JSRUN+I)+1
            ENDIF
         ENDIF
      ENDDO
C
C - set ignore run range after the last selected run
      K=K+1
      IW(JIRUN+K) = IW(JSRUN+IW(JSRUN))+1
      K=K+1
      IW(JIRUN+K) = -99999
C
C - reduce the IRUN size to the real one :
      CALL AUBOS ('IRUN',NIRUN,K,JIRUN,IGARB)
C
C - drop SRUN card
      JSRUN = NDROP ('SRUN',IW(JSRUN-2))
C
C - write irun card on output CARDS file
C
      NIRR=IW(JIRUN)
      NLIN=1+NIRR/NILI
      I1=1
      I2=NILI
      DO 100 IPRR=1,NLIN
         I3=MIN0(I2,NIRR)
         IF (IPRR.EQ.1) WRITE (LWRSRU, 1011) (IW(JIRUN+KK),KK=I1,I3)
         IF (IPRR.GT.1) WRITE (LWRSRU, 1012) (IW(JIRUN+KK),KK=I1,I3)
         I1=I1+NILI
         I2=I2+NILI
 100  CONTINUE
 999  RETURN
C
 998  WRITE(LWRUSR,*) ' *** PRIRUN *** NOT enough space for IRUN'
C
 1011 FORMAT ('IRUN ',9I7)
 1012 FORMAT (5X,9I7)
      END
      SUBROUTINE PRLASR(LUN,IOPT)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print the list of last known Online Runs , from bank 'BLAS'
C  J. Boucrot  13-Sep-1990
C  Called from PRBHEA,BKNEWP,BKUPDF                       from BOOKLIB
C   Input arguments :
C   LUN = Fortran unit onto which the result is printed
C  IOPT = Printout option
C       = 0 from SCANBOOK
C       = 1,2  at beginning or end of UPDABOOK respectively
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.EQ.0) GO TO 999
      KBLAS=KROW(JBLAS,1)
      WRITE ( LUN,1003)
      WRITE ( LUN,1000)
      IF (IOPT.EQ.1) WRITE ( LUN,1001)
      IF (IOPT.EQ.2) WRITE ( LUN,1002)
      IF (IOPT.GT.0.OR.(IDSEAR.GT.0.AND.IMCDAT.EQ.1))
     +    WRITE ( LUN , 1011 ) IW(KBLAS+JBLALO),IW(KBLAS+JBLALF)
      IF (IOPT.GT.0) WRITE ( LUN , 1012 ) IW(KBLAS+JBLAOU)
      IF (IOPT.GT.0.OR.IDSEAR.EQ.3) THEN
          WRITE ( LUN , 1013 ) IW(KBLAS+JBLAMA)
          WRITE ( LUN , 1014 ) IW(KBLAS+JBLARQ)
          WRITE ( LUN , 1016 ) IW(KBLAS+JBLALU)
          WRITE ( LUN , 1021 ) IW(KBLAS+JBLAP4)
          WRITE ( LUN , 1022 ) IW(KBLAS+JBLAD4)
          WRITE ( LUN , 1015 ) IW(KBLAS+JBLALE)
      ENDIF
      WRITE ( LUN,1000)
      WRITE ( LUN,1003)
C
 999  RETURN
C----------------------------------------------------------------------
 1000 FORMAT (1X,75(1H-))
 1001 FORMAT (/7X,'+++ PRLASR : Last Runs Known BEFORE UPDABOOK run')
 1002 FORMAT (/7X,'+++ PRLASR : Last Runs Known AFTER  UPDABOOK run')
 1003 FORMAT (/)
 1011 FORMAT (' *** Last run number known in the ALEBOOK Database',
     +         ' :',T70,I6/,
     +        ' *** Last fill number known in the ALEBOOK Database',
     +         ' :',T70,I6)
 1012 FORMAT (' *** Last run number updated from the Online',
     +         ' Logbook :',T70,I6)
 1013 FORMAT (' *** Last run number with provisional LUMI from',
     +         ' JULIA :',T70,I6)
 1014 FORMAT (' *** Last run number with Run_Quality determina',
     +         'tion :',T70,I6)
 1015 FORMAT (' *** Last run number for which the LEP energy',
     +         ' is verified :',T70,I6)
 1016 FORMAT (' *** Last run number with definitive LUMINOSITY',
     +         ' :',T70,I6)
 1021 FORMAT (' *** Last run number with provisional 4-Bunch Lumi',
     +         ' from JULIA :',T70,I6)
 1022 FORMAT (' *** Last run number with  definitive 4-Bunch Lumi',
     +         ' :',T70,I6)
      END
      SUBROUTINE PRLEVSND(VSN,KBDFS,VSND)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Auxiliary for printout of datasets
C  Author  J. Boucrot 27-Mar-1998
C Called from PRLEV1,PRLEV2,PRLEV6,PRLEV7,PRMCD1  from BOOKLIB
C Calls BKCHKT,BKEXFI                             from BOOKLIB
C Input arguments :
C   VSN = tape name
C KBDFS = pointer of dataset in BDFS
C Output argument :
C  VSND = tape name + file number in EDIR-style (e.g. Y12345_321)
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
      CHARACTER VSN*6,VSND*10
C----------------------------------------------------------------------
      VSND=' '
      CALL BKCHKT(VSN,ICERN,IMULT,IDLT,IERT)
      IF (IERT.NE.0) GO TO 999
C For 'AR' raw data tapes keep VSND=VSN
      IF (VSN(1:2).EQ.'AR') THEN
         VSND(1:6)=VSN
         GO TO 999
      ENDIF
C Old 3480 cartridges:
      IF (IMULT.EQ.0) THEN
         VSND(1:6)=VSN
      ELSE
C Multi-file cartridges:
         IFILE=IW(KBDFS+JBDFFN)
         CALL BKEXFI(3,VSN,IFILE,IEROR)
         IF (IEROR.ne.0) go to 999
         VSND=AXEDNW
      ENDIF
C
 999  RETURN
      END
      SUBROUTINE PRLEV1(NRP)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of datasets , level 1
C  Author  J. Boucrot 07-Jul-1989  modified 04-Oct-1996
C  Modified 25-Mar-1998 for PRLEVSND
C Called from PRDATA                                  from BOOKLIB
C Calls BKPOIN,BKISDL,PRDLTR,BKCOMRUN,PRDLRW,PRLEVSND from BOOKLIB
C Calls ALSTIN,BKINCA                                 from ALEPHLIB
C Input parameter :
C   NRP = Dataset row number in bank BDFS, NR=1
C----------------------------------------------------------------------
      SAVE DLTNA
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( NRA = 15 )
      CHARACTER TAPVS*8,LINE*72,DLTNA*6,COMT*80,VSND*10
      INTEGER BKINCA,LISRA(NRA)
      DATA DLTNA / ' ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      LINE=' '
      CALL BKPOIN(LECDAF,'BDFS',1,JBDFS)
      IF (JBDFS.LE.0) GO TO 999
      KBDFS=KROW(JBDFS,NRP)
      CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPVS)
C
C Special printout for RAW DLTs of 1995 and after :
C
      IF (IRAWD1.NE.0) THEN
         IF (TAPVS(1:6).NE.DLTNA) THEN
            DLTNA=TAPVS(1:6)
            CALL BKISDL(DLTNA,2,IDLT)
            IF (IDLT.EQ.1) CALL PRDLTR(DLTNA)
         ENDIF
         GO TO 999
      ENDIF
C
C Special printout for RAW data "AA-type" :
C
      IF (IRAWAA.NE.0.OR.IRAWD2.NE.0) THEN
         IFIL=BKINCA(TAPVS(7:8))
         IF (IFIL.EQ.0) GO TO 200
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         JBSET=NLINK('BSET',NPER)
         IF (JBSET.EQ.0) GO TO 999
         KBSET=KROW(JBSET,NROW)
         IBSPF=IW(KBSET+JBSEBS)
         JBSPF=NLINK('BSPF',NPER)
         IF (JBSPF.EQ.0) GO TO 999
         KBSPF=KROW(JBSPF,IBSPF)
         CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMT)
         NFRU=IW(KBSET+JBSEFR)
         CALL BKCOMRUN(COMT,NFRU,LISRA,NRAA)
         DO 100 IR=1,NRAA
            NRUN=LISRA(IR)
            CALL PRDLRW(TAPVS(1:6),IFIL,NRUN)
 100     CONTINUE
         GO TO 999
      ENDIF
C
C Printout for all other cartridges or DLTs :
C
 200  CONTINUE
      CALL PRLEVSND(TAPVS(1:6),KBDFS,VSND)
      LINE(2:11)=VSND
      LINE(13:17)=DNADAT(IDASEL)
      LE=LNBLNK(LINE)
      IF (LE.EQ.0) GO TO 999
      NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 999
      KBSET=KROW(JBSET,NROW)
      IRUNF=IW(KBSET+JBSEFR)
      IRUNL=IW(KBSET+JBSELR)
      LINE=LINE(1:LE)//' : Runs  '
      LE=LNBLNK(LINE)
      WRITE ( LINE(LE+1:LE+6) ,  '(I6)' ) IRUNF
      LE=LNBLNK(LINE)
      LINE=LINE(1:LE)//' to '
      LE=LNBLNK(LINE)
      WRITE ( LINE(LE+1:LE+6) ,  '(I6)' ) IRUNL
C
      WRITE (LWRUSR,*) LINE
      IF (IBPRUS.GT.10) WRITE (LWRINT,*) LINE
 999  RETURN
      END
      SUBROUTINE PRLEV2(IFLAG,NRP)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of datasets , level 2
C  Author  A.FALVARD  07-Jul-1989
C  Modified J.Boucrot 04-Oct-1996
C  Modified 25-Mar-1998 for PRLEVSND
C Called from PRDATA                                  from BOOKLIB
C Calls BKELEP,BKPOIN,PRLEV3,BKTALO,BKCHKT,PRLEVSND   from  BOOKLIB
C Calls ALSTIN                                        from ALEPHLIB
C Input arguments :
C  IFLAG  = 2 if Level 2 only , = 3 if Level 3 asked
C  NRP    = Row # in BDFS bank
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- RINFJJ ----
      PARAMETER(JRINNE=1,JRINLF=2,JRINDC=3,JRINDQ=4,JRINLE=5,JRINMC=6,
     +          JRINLN=7,JRINBX=8,JRINBY=9,JRINBZ=10,JRINLU=11,
     +          JRINNZ=12,JRINNB=13,JRINBM=14,JRINFR=15,JRINLR=16,
     +          JRINNV=17,JRINNL=18,JRINNH=19,JRINVT=20,JRINVV=21,
     +          JRINVZ=22,JRINVL=23,JRINVB=24,JRINCA=25,JRINCB=26,
     +          JRINI1=27,JRINI2=28,JRINI3=29,JRINI4=30,JRINI5=31,
     +          JRINEX=32,JRINEY=33,JRINEZ=34,JRINR1=35,JRINR2=36,
     +          JRINR3=37,JRINR4=38,JRINR5=39,LRINFA=39)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
      PARAMETER ( JBTA2=2 , NCO132 = 54 , NRUM = 500 )
      CHARACTER*4 CHAINT,FORM,NATU
      CHARACTER VSNTA*8,VSN*6,KEYW*20,DSNAM*20,COMEN*80,COMWR*80
      CHARACTER COM1*27,COM2*27,COM3*54,LOCTP*9,RTAP*8,VSND*10
      INTEGER BKINCA,LIRUM(NRUM)
      COMMON / LEV2HE / IHEADF
      DATA COM1 / 'Warning !! > 1 LEP energies' /
      DATA COM2 / 'Use Print Lev 3 to see them' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      COMEN=' '
      COMWR=' '
      COM3=COM1//' - '//COM2
      NRUMI=0
      CALL VZERO(LIRUM,NRUM)
C
C   Get pointers for BDFS row and BSET master dataset :
C
      CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
      IF (JBDFS.LE.0) GO TO 999
      KBDFS=KROW(JBDFS,NRP)
      NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 999
      KBSET=KROW(JBSET,NROW)
C Get all useful quantities to be printed :
      NAT=MOD(IW(KBSET+JBSEND),10)
      CALL ALSTIN(IW(KBDFS+JBDFTC),JBDFLO-JBDFTC,VSNTA)
      IF (NAT.EQ.2.AND.VSNTA(1:2).EQ.'AX') GO TO 999
C Prepare the tape+file name to be printed:
      CALL PRLEVSND(VSNTA(1:6),KBDFS,VSND)
      NATU=DNADAT(NAT)
      IFRUN=IW(KBSET+JBSEFR)
      IFEVT=IW(KBSET+JBSEFE)
      ILRUN=IW(KBSET+JBSELR)
      ILEVT=IW(KBSET+JBSELE)
      IDATE=IW(KBSET+JBSEWD)
      ITIME=IW(KBSET+JBSEWH)
C Get LEP energy and # of events
      IMANE=0
      NEVTS=ILEVT-IFEVT+1
      CALL BKELEP(IFRUN,ELEP,IFILL,BMAG,IDET,NEVTS,JP)
      IF (IENV97.EQ.0.AND.ENGLEP.GT.0.) ELEP=ENGLEP
C Get total # of events on dataset ; check if several LEP energies
      NEVT=0
      IBRL1=IW(KBSET+JBSEBA)
      IBRL2=IW(KBSET+JBSEBR)
      IF (IBRL1.EQ.0.OR.IBRL1.EQ.IBRL2) GO TO 6
      CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
      IF (JBRLI.EQ.0) GO TO 6
      DO 5 IRO=IBRL1,IBRL2
         IRUN=ITABL(JBRLI,IRO,JBRLRN)
         NRUMI=NRUMI+1
         IF (NRUMI.LE.NRUM) LIRUM(NRUMI)=IRUN
         NNT=ITABL(JBRLI,IRO,JBRLNE)
         NEVT=NEVT+NNT
         IF (IMANE.NE.0) GO TO 5
         CALL BKELEP(IRUN,ELEPR,IF1,BM,ID,NNT,JP)
         TOLER=FLOAT(ITOLER)/1000.
         IF (ABS(ELEP-ELEPR).GT.TOLER) IMANE=1
 5    CONTINUE
      NEVTS=NEVT
 6    CONTINUE
C  Get the tape format from 'BTPN' bank :
      ITAP1=IW(KBSET+JBSEBT)
      CALL BKPOIN(LECDAF,'BTPN',NPER,JTAP)
      IF (JTAP.EQ.0) GO TO 90
      KTAP=KROW(JTAP,ITAP1)
      FORM=CHAINT(IW(KTAP+JBTPFO))
      VSN=VSNTA(1:6)
      CALL BKTALO(VSN,NRP,LOCTP,ILAB)
C Special patch for RAW copies in EPIO format :
         IF (INDEX(VSN,'AA').GT.0) THEN
             INUM=BKINCA(VSN(3:6))
             IF (INUM.GE.8000) FORM='EPIO'
         ENDIF
C Get the comment for this dataset from 'BSPF' :
      IBSPF=IW(KBSET+JBSEBS)
      IF (IBSPF.EQ.0) GO TO 10
      CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
      IF (JBSPF.LE.0) GO TO 10
      KBSPF=KROW(JBSPF,IBSPF)
      CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
C Split the comment in several pieces if necessary :
10    CALL CLTOU(COMEN)
      NCOMS=0
      IRR=INDEX(COMEN,'RUNS')
      IF (IRR.NE.0) THEN
         COMWR=COMEN(IRR:LNBLNK(COMEN))
      ELSE
         COMWR=COMEN
      ENDIF
      LCOWR=LNBLNK(COMWR)
      LENOK=NCO132
      NCOMS=1+LCOWR/LENOK
C----------------------------------------------------------------------
C  Now printout Informations about Cartridges :
C
      IF (IFBOOK.EQ.0.OR.IHEADF.NE.0) THEN
C general header :
         WRITE (LWRUSR,106)
         IF (IBPRUS.GT.10) WRITE (LWRINT,106)
         IF (IHEADF.EQ.2) GO TO 25
         WRITE (LWRUSR,105)
         WRITE (LWRUSR,106)
         WRITE (LWRUSR,107)
         IF (NPER.GT.1000) WRITE (LWRUSR,110) NPER
         IF (IBPRUS.GT.10) THEN
            WRITE (LWRINT,105)
            WRITE (LWRINT,106)
            WRITE (LWRINT,107)
         ENDIF
C Table header :
 25      CONTINUE
         WRITE (LWRUSR,102)
         WRITE (LWRUSR,100)
         WRITE (LWRUSR,101)
         WRITE (LWRUSR,102)
         IF (IBPRUS.GT.10) THEN
            WRITE (LWRINT,102)
            WRITE (LWRINT,100)
            WRITE (LWRINT,101)
            WRITE (LWRINT,102)
         ENDIF
         IFBOOK=IFBOOK+1
       ENDIF
C Write the text for each dataset :
         IF (IDASEL.EQ.2.AND.ISYEAR.GE.1995) GO TO 39
       IF (IDASEL.LT.5.AND.NRUMI.LE.8) GO TO 39
C Special printout for MINI/NANO in 132 cols :
       NLIN=1+NRUMI/8
       DO 36 IL=1,NLIN
          NLIMI=1+8*(IL-1)
          NLIMX=MIN0(NRUMI,NLIMI+7)
          IF (IL.EQ.1) WRITE(LWRUSR,303) VSND,FORM,NATU,IDATE,LOCTP,
     *            IFRUN,ILRUN,NEVTS,ELEP,(LIRUM(KK),KK=NLIMI,NLIMX)
          IF (IL.GT.1) WRITE(LWRUSR,308) (LIRUM(KK),KK=NLIMI,NLIMX)
 36    CONTINUE
       IF (IMANE.GT.0) WRITE (LWRUSR,108) COM3
       GO TO 50
 39    CONTINUE
       WRITE(LWRUSR,103) VSND,FORM,NATU,IDATE,LOCTP,IFRUN,
     *                   ILRUN,NEVTS,ELEP,COMWR(1:NCO132)
       IF (NCOMS.GT.1) WRITE ( LWRUSR,108)
     *                 COMWR(NCO132+1:LCOWR)
       IF (IMANE.GT.0) WRITE (LWRUSR,108) COM3
       IF (IBPRUS.LT.10) GO TO 50
       WRITE(LWRINT,103) VSND,FORM,NATU,IDATE,LOCTP,IFRUN,
     *                   ILRUN,NEVTS,ELEP,COMWR(1:NCO132)
       IF (NCOMS.GT.1) WRITE ( LWRUSR,108)
     *                 COMWR(NCO132+1:LCOWR)
       IF (IMANE.GT.0) WRITE (LWRINT,108) COM3
C Print level 3 , if required :
 50    CONTINUE
       IF (IFLAG.EQ.3) CALL PRLEV3(LWRUSR,KBSET,NPER,KBDFS)
       IF (IFLAG.EQ.3.AND.IBPRUS.GT.10)
     +    CALL PRLEV3(LWRINT,KBSET,NPER,KBDFS)
C
 90   CONTINUE
C----------------------------------------------------------------------
 100  FORMAT (T4,'Tape',T13,1H|,T14,'Form',T18,1H|,T20,'Nat',T23,
     +        1H|,T26,'Date',T32,1H|,T34,'Location',T44,1H|,T46,
     +        '1st',T51,1H|,T54,'Last',T59,1H|,T61,'Nevts',T67,1H|,T69,
     +        'LEP Eng',T77,1H|,T84,'Comments')
 101  FORMAT (T13,1H|,T18,1H|,T23,1H|,T25,'YYMMDD',T32,1H|,T44,1H|,
     +        T46,'Run',T51,1H|,T54,'Run',T59,1H|,T67,1H|,T71,
     +        'Gev',T77,1H|)
 102  FORMAT (1X,131(1H-))
 103  FORMAT (1X,A10,T13,1H|,T14,A4,T18,1H|,T19,A4,T23,1H|,
     +        T25,I6,T32,1H|,T34,A9,T44,1H|,
     +        T45,I5,T51,1H|,T53,I5,T59,1H|,T60,I6,
     +        T67,1H|,T69,F6.2,T77,1H|,T79,A53)
 105  FORMAT(1X,27(1H*),' Tapes/Cartridges  ',27(1H*))
 106  FORMAT(1X,//)
 107  FORMAT(/1X, '**** AA,AB,AM cartridges are always at CERN ****'
     +       /6X,'AR,AS,AU DLTs, Y1/R0 Redwoods are always at CERN',
     +   /,6X, 'Other cartridges may have been sent to Homelabs'/)
 108  FORMAT (T13,1H|,T18,1H|,T23,1H|,T32,1H|,T44,1H|,T51,1H|,
     +        T59,1H|,T67,1H|,T77,1H|,A54)
 110  FORMAT (/1X,'***** KINGAL Code = ',I8)
 303  FORMAT (1X,A10,T13,1H|,T14,A4,T18,1H|,T19,A4,T23,1H|,
     +        T25,I6,T32,1H|,T34,A9,T44,1H|,
     +        T45,I5,T51,1H|,T53,I5,T59,1H|,T60,I6,
     +        T67,1H|,T69,F6.2,T77,1H|,T79,'RUNS',T83,8I6)
 308  FORMAT (T13,1H|,T18,1H|,T23,1H|,T32,1H|,T44,1H|,T51,1H|,
     +        T59,1H|,T67,1H|,T77,1H|,T83,8I6)
 999  RETURN
      END
      SUBROUTINE PRLEV3(LUN,JBPNT,NRP,JBDFS)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of datasets , level 3
C  Author  A.FALVARD  07-Jul-1989
C  Modified J.Boucrot 04-Oct-1996
C Called from PRDATA or PRMCD1                        from BOOKLIB
C Calls ALSTIN                                        from ALEPHLIB
C Calls BKPOIN,BKDAIC,BKELEP,PRLEVSND                 from BOOKLIB
C  Input arguments :
C    LUN =  Fortran unit for printout
C  JBPNT =  pointer to information in BSET bank
C    NRP =  period number
C  JBDFS =  pointer to information in BDFS bank
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      PARAMETER ( IFARU = 100000 , IFAGA = 1000 , IFACT=10 )
      CHARACTER CHAINT*4,PRONA*4,COMEN*80
      CHARACTER*8 TAPCO(IFACT),TAPOR,CDAT,CTIM,AUTHO
      CHARACTER*10 TAPVO(IFACT),TAPFR
      CHARACTER FCARD*132,QUOT*1,RUNN*5,FINN*2
      CHARACTER NAMLA*8,TNAT*1,TLABL*1
      DATA JRA95,HQUOT,EZ0MX  / 0 , 1H' , 98. /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      WRITE(LUN,110)
      CALL UH1TOC(HQUOT,QUOT,1)
      IFZ0=1
      NFRU=IW(JBPNT+JBSEFR)
      CALL BKELEP(NFRU,ELEP,IFI,BM,ID,NEV,JBB)
      IF (ELEP.GT.EZ0MX)  IFZ0=0
C decode all quantities to be printed :
      IDAT=IW(JBPNT+JBSEWD)
      IHOU=IW(JBPNT+JBSEWH)
      CALL BKDAIC(1,IDAT,IHOU,CDAT,CTIM)
      CALL ALSTIN(IW(JBPNT+JBSEAU),JBSEFR-JBSEAU,AUTHO)
      CALL BKPOIN(LECDAF,'BPRO',NRP,JBPRO)
      IPRO=IW(JBPNT+JBSEBP)
      JBPRO=KROW(JBPRO,IPRO)
      PRONA=CHAINT(IW(JBPRO+JBPRPN))
      IVERN=IW(JBPRO+JBPRVN)
      IGAVR=0
      IJUVR=0
      IJUV=IW(JBPRO+JBPRCV)
      IF (IJUV.GT.IFAGA) THEN
         IJUVR=IJUV/IFAGA
         IGAVR=IJUV-IFAGA*IJUVR
      ENDIF
      IALEP=IW(JBPRO+JBPRAV)
      IDABA=IW(JBPRO+JBPRDN)
C write comment for real data :
      ISPF=IW(JBPNT+JBSEBS)
      IF (ISPF.EQ.0) GO TO 3
      CALL BKPOIN(LECDAF,'BSPF',NRP,JBSPF)
      KBSPF=KROW(JBSPF,ISPF)
      CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
       CALL BKY2K(IW(KBSPF+JBSPRG),100,IGEOG)
      IF (IMCDAT.EQ.1) WRITE (LUN,99) COMEN
      IF (IMCDAT.EQ.2) WRITE (LUN,100)
3     CONTINUE
C write all other quantities :
      WRITE(LUN,102)  AUTHO,CDAT,CTIM
      INDA=MOD(IW(JBPNT+JBSEND),10)
      IF (INDA.GE.3) WRITE (LUN,103) PRONA,IVERN
      IF (IMCDAT.EQ.2) THEN
         IF (IGAVR.GT.0) WRITE ( LUN,105) IGAVR
         IF (IJUVR.GT.0) WRITE ( LUN,108) IJUVR
         IF (IGEOG.EQ.0) WRITE ( LUN,107)
         IF (IGEOG.GT.0) WRITE ( LUN,106) IGEOG
      ENDIF
      WRITE(LUN,104)  IALEP,IDABA
C Write informations concerning Master Datasets or Homelab Copies :
      CALL ALSTIN(IW(JBDFS+JBDFTC),2,TAPOR)
      ICOPY=IW(JBDFS+JBDFCO)
      NPMA=IW(JBDFS+JBDFNP)
      NRMA=IW(JBDFS+JBDFNR)
      ITOK=0
      KBDFS=JBDFS
      IF (ICOPY.EQ.0) THEN
C --- This is a Master dataset
         CALL PRLEVSND(TAPOR(1:6),KBDFS,TAPFR)
         WRITE ( LUN , 1010)  TAPFR
         DO 35 ISEC=1,IFACT
            KBDFS=KBDFS+LBDFSA
            IF (IW(KBDFS+JBDFNP).NE.NPMA) GO TO 35
            IF (IW(KBDFS+JBDFNR).NE.NRMA) GO TO 35
            IF (IW(KBDFS+JBDFCO).NE.1) GO TO 35
            ITOK=ITOK+1
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPCO(ITOK))
            CALL PRLEVSND(TAPCO(ITOK)(1:6),KBDFS,TAPVO(ITOK))
 35      CONTINUE
         IF (ITOK.GT.0) WRITE ( LUN , 1012 )  (TAPVO(KK),KK=1,ITOK)
      ELSE
C --- This is a Copy :
         DO 38  IMAS=1,IFACT
            KBDFS=KBDFS-LBDFSA
            IF (IW(KBDFS+JBDFNP).NE.NPMA) GO TO 38
            IF (IW(KBDFS+JBDFNR).NE.NRMA) GO TO 38
            IF (IW(KBDFS+JBDFCO).NE.0) GO TO 38
            ITOK=ITOK+1
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPCO(ITOK))
            CALL PRLEVSND(TAPCO(ITOK)(1:6),KBDFS,TAPVO(ITOK))
            GO TO 39
 38      CONTINUE
 39      IF (ITOK.GT.0) WRITE ( LUN , 1013 )  (TAPVO(KK),KK=1,ITOK)
      IF (ITOK.NE.0) GO TO 300
      ENDIF
C Detailed  information  on run content  :
      IBRL1=IW(JBPNT+JBSEBA)
      IBRL2=IW(JBPNT+JBSEBR)
      IF (IBRL1.EQ.0.OR.IBRL2.EQ.0) GO TO 300
      IF (IBRL1.EQ.IBRL2) GO TO 300
      CALL BKPOIN(LECDAF,'BRLI',NRP,JBRLI)
      IF (JBRLI.LE.0) GO TO 300
      IF (IFZ0.EQ.1) WRITE (LUN,1001)
      IF (IFZ0.EQ.0) WRITE (LUN,2001)
      TOTBY=0.
      NZTOT=0
C Loop on all runs in 'BRLI' :
      DO 250 IRO=IBRL1,IBRL2
         NRUN=ITABL(JBRLI,IRO,JBRLRN)
         NEVT=ITABL(JBRLI,IRO,JBRLNE)
         NBYT=ITABL(JBRLI,IRO,JBRLNB)
         RMBYT=1.E-6*FLOAT(NBYT)
         TOTBY=TOTBY+RMBYT
         NZ0=0
         IF (IMCDAT.EQ.2) THEN
            ELEP=0.001*FLOAT(IW(JBPNT+JBSEBN))
            IF (NRUN.GT.IFARU) THEN
               NRUM=NRUN/IFARU
               IEM=IFACT*(NRUN-IFARU*NRUM)
               ELEP=0.001*FLOAT(IEM)
               NRUN=NRUM
            ENDIF
            GO TO 220
         ENDIF
         CALL BKELEP(NRUN,ELEP,IFI,BM,ID,NE,JBRU)
         IF (JBRU.GT.0) NZ0=IW(JBRU+JBRUNZ)
         NZTOT=NZTOT+NZ0
 220     WRITE (LUN,1002) NRUN,NEVT,RMBYT,ELEP,NZ0
C
 250  CONTINUE
      IF (IFZ0.EQ.1) WRITE (LUN,1003) TOTBY,NZTOT
      IF (IFZ0.EQ.0) WRITE (LUN,2003) TOTBY,NZTOT
 2001 FORMAT (/' **** Debug of run content for this dataset'//
     +        '   Run #        Nevents      Length (Mbytes)',
     +        '   LEP energy   Nb of CLAS 16')
 2003 FORMAT (' Total length of information :',F10.3,' Mbytes',
     +       /' Total number of CLAS 16 :',I8)
 300  CONTINUE
C
 999  RETURN
C----------------------------------------------------------------------
  99  FORMAT(1X,'**** Real Data   Production :  ',/A80)
 100  FORMAT(1X,'**** MCarlo Data   Production ')
 102  FORMAT(' Produced by : ',A8,/' Date        : ',2X,A8,
     *       '       Time     : ',2X,A8)
 103  FORMAT (' Production Program name =',2X,A4,' Version number =',I5)
 104  FORMAT(' ALEPHLIB    : ',I4,'  DATABASE : ',I4/)
 105  FORMAT (15X,'GALEPH Version Number   = ',I8)
 106  FORMAT (15X,'GALEPH Geometry of Year = ',I8)
 107  FORMAT (15X,'GALEPH Geometry of Year = :  1989  OR 1990 ')
 108  FORMAT (15X,'JULIA Version Number   = ',I8)
 110  FORMAT(/)
 1001 FORMAT (/' **** Debug of run content for this dataset'//
     +        '   Run #        Nevents      Length (Mbytes)',
     +        '   LEP energy   Nb of Z0s')
 1002 FORMAT (1X,I6,9X,I6,6X,F12.3,8X,F7.3,6X,I6)
 1003 FORMAT (' Total length of information :',F10.3,' Mbytes',
     +       /' Total number of Z0s  :',I8)
 1010 FORMAT (/' >> The present tape : ',2X,A10,' is a MASTER DATASET'/)
 1012 FORMAT (5X,' ++  It has been copied onto the following tapes :'/,
     +        5X,10(2X,A10))
 1013 FORMAT (/' >> The present tape is the copy of a MASTER DATASET'/,
     +        10X, ' written on Tape : ',2X,A10)
 1101 FORMAT (A)
C
      END
      SUBROUTINE PRLEV4(NRP)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of datasets , level 4
C  Author  J. Boucrot 07-Jul-1989  - Modified 04-Oct-1996
C Called from PRDATA                             from BOOKLIB
C Calls  BKPOIN                                  from BOOKLIB
C Calls  ALSTIN                                  from ALEPHLIB
C Input parameter :
C    NRP  : if >0  :  Row # in 'BDFS' bank , for standard cartridges
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      SAVE
      CHARACTER COMPN*8,TAPVS*8,DSNAM*20,LINE*80,COMEN*80
      CHARACTER TAPAX*8,VSS*4
      DATA LINE / ' ' /
      DATA NROLD / 0 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IF (IFBOOK.EQ.0) THEN
         IFBOOK=1
         WRITE (LWRUSR,1002)
         WRITE (LWRUSR,1004)  USERLG
      ENDIF
      LINE=' '
      DSNAM=' '
      IF (NRP.EQ.NROLD) THEN
         GO TO 999
      ELSE
         NROLD=NRP
      ENDIF
C Get pointers :
      CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
      IF (JBDFS.LE.0) GO TO 999
      KBDFS=KROW(JBDFS,NRP)
 5    NPER=IW(KBDFS+JBDFNP)
      NROW=IW(KBDFS+JBDFNR)
      ICOP=IW(KBDFS+JBDFCO)
      IFILE=IW(KBDFS+JBDFFN)
C  Dataset name ,Tape name :
      CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPVS)
      CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
      IF (JBSET.LE.0) GO TO 999
      KBSET=KROW(JBSET,NROW)
      IF (ICOP.EQ.1) GO TO 10
      CALL ALSTIN(IW(KBSET+JBSEAD),JBSEAU-JBSEAD,DSNAM)
 10   LINE(13:32)=DSNAM
      WRITE (LINE(9:11) , '(I3)' ) IFILE
      LINE(2:7)=TAPVS(1:6)
C Flag to free the tape for TMS :
      IF (MOD(IBPRUS,10).GT.4) LINE(35:35)='F'
C Get the comment and add it to the line :
      ITSP=IW(KBSET+JBSEBS)
      IF (ITSP.EQ.0) GO TO 100
      CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
      IF (JBSPF.LE.0) GO TO 100
      KBSPF=KROW(JBSPF,ITSP)
      CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
      LINE(41:80)=COMEN(1:40)
C
 100  IF (LNBLNK(LINE).EQ.0) GO TO 999
      WRITE ( LWRUSR , '(A)' ) LINE
      IF (IBPRUS.GT.10) WRITE (LWRINT,*) LINE
 999  RETURN
C-----------------------------------------------------------------------
 1002 FORMAT (//2X,78(1H*)//3X,
     + 'If you want to scratch the following datasets from the',
     + ' SCANBOOK database :'/5X,'Please catalog the cards below',
     + ' on a file with name BSCRATCH MYCARDS '/,
     + 30X,'( BSCRATCH is MANDATORY ! )'/,
     + 5X,'then send this file',
     + ' to the alsoft server on aloha by MAIL'/)
 1004 FORMAT (1X,'SCRATCHED DATASETS : LIST SENT BY',2X,A12)
      END
      SUBROUTINE PRLEV6(NFND,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK VERIF
C! Verifies /  lists the Homelab copies of ALEPH cartridges
C  J. Boucrot        01-Jun-1993
C  Modified 01-Feb-1996 for DLTs and 3490 IN2P3 cartridges
C  Modified 25-Mar-1998 for PRLEVSND
C Called from PRDSET                                       from BOOKLIB
C Calls BKPOIN,BKCHKR,BKCHHO,BKCHKD,BKCHKT,PRLEVSND        from BOOKLIB
C Calls ALSTIN                                             from ALEPHLIB
C Output arguments :
C  NFND  = number of copies found
C  IER   = 1 if no room for BOS banks ;  = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
      PARAMETER ( NMXCO = 10 )
      CHARACTER TAPNA*8,TAPMA*8,CHAINT*4,TMSLO*4,COMEN*80
      CHARACTER TAPC*10,TAPL*10
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Various initializations :
      IER=0
      NFND=0
      ICPOK=0
      IMISS=0
      CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
      IF (JBDFS.LE.0) GO TO 920
      IF (IMCDAT.EQ.1) CALL PRBHEA(LWRUSR)
      WRITE ( LWRUSR,1000) CLISTL(ILABCH)
      CALL BKCHKR
C
C Loop on all 'BDFS' rows :
C
      DO 700 IBDF=NFDSET,NLDSET
         KBDFS=KROW(JBDFS,IBDF)
         IF (IW(KBDFS+JBDFCO).NE.0) GO TO 700
         NPEM=IW(KBDFS+JBDFNP)
         NROM=IW(KBDFS+JBDFNR)
C This is a master dataset : get its nature from the 'BSET' bank :
         CALL BKPOIN(LECDAF,'BSET',NPEM,JBSET)
         IF (JBSET.LE.0) GO TO 700
         KBSET=KROW(JBSET,NROM)
         IDAY=IW(KBSET+JBSEWD)
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPMA)
C Check if this dataset matches the user's selections :
         ISAVE=ILABCH
         ILABCH=1
         CALL BKCHKD(TAPMA,NPEM,NROM,NFRU,NLRU)
         ILABCH=ISAVE
         IF (NFRU.LE.0) GO TO 700
C Verify if the master dataset is a CERN one:
         CALL PRLEVSND(TAPMA,KBDFS,TAPC)
         CALL BKCHKT(TAPC,ICERN,IMULT,IDLT,IERC)
         IF (ICERN.EQ.0) THEN
            WRITE (LWRUSR,1006) TAPC
            GO TO 700
         ENDIF
         NFND=NFND+1
         COMEN=' '
         CALL BKPOIN(LECDAF,'BSPF',NPEM,JBSPF)
         IF (JBSPF.EQ.0) GO TO 360
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
C Now loop on all possible copies of this master dataset :
 360     NCOPS=0
         DO 600 ICO=1,NMXCO
            NBDF=IBDF+ICO
            KBDFN=KROW(JBDFS,NBDF)
            IF (IW(KBDFN+JBDFNP).NE.NPEM) GO TO 610
            IF (IW(KBDFN+JBDFNR).NE.NROM) GO TO 610
            IF (IW(KBDFN+JBDFCO).NE.1)    GO TO 610
C This is a copy of TAPMA : decode its name and find the Homelab :
            CALL ALSTIN(IW(KBDFN+JBDFTC),2,TAPNA)
C Check on Homelab asking copies for these data :
            CALL BKCHHO(TAPNA,ICE,IHOME,IMU,IEX,IDL,I34,IERC)
            IF (IERC.NE.0.OR.ILABCH.NE.MOD(IHOME,100)) GO TO 600
            CALL PRLEVSND(TAPNA,KBDFN,TAPL)
 500        NCOPS=NCOPS+1
            ICPOK=ICPOK+1
            TMSLO=CHAINT(IW(KBDFN+JBDFLO))
 550        WRITE ( LWRUSR,1007 ) TAPC,TAPL,TMSLO,IDAY,COMEN
 600     CONTINUE
 610     IF (NCOPS.EQ.0) THEN
            IMISS=IMISS+1
            TAPL=' '
            TMSLO=' '
            WRITE ( LWRUSR,1007 ) TAPC,TAPL,TMSLO,IDAY,COMEN
         ENDIF
C
 700     CONTINUE
      WRITE ( LWRUSR,1009) ICPOK
      IF (IMISS.GT.0) WRITE ( LWRUSR,1008) IMISS
      GO TO 999
C No room for banks :
 920  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1000 FORMAT (/5X,'=== Subroutine PRLEV6 === : Start verifying ',
     +        ' copies for Homelab = ',A20//1X,120(1H-)/
     +        T4,'CERN',T13,1H|,T16,'Homelab',T26,1H|,T30,'TMS',T38,1H|,
     +        T40,'Date of',T49,1H|,
     +        T48,'Comment of dataset :'/T4,'Master',T13,1H|,T17,'Copy',
     +        T26,1H|,T28,'Location',T38,1H|,T41,'writing',T49,1H|,
     +        /1X,120(1H-))
 1006 FORMAT (20X,'** Warning !! Master dataset on tape',2X,A10,
     +        ' is NOT on an CERN tape !!')
 1007 FORMAT (1X,A10,T13,1H|,T15,A10,T26,1H|,T28,A9,T38,1H|,T41,I6,
     +        T49,1H|,T51,A80)
 1008 FORMAT (/25X,'A Total of ',I4,' Missing copies have been found')
 1009 FORMAT (/25X,'A Total of ',I4,' good copies have been found')
      END
      SUBROUTINE PRLEV7(NFND,IER)
C-----------------------------------------------------------------------
CKEY UPDABOOK VERIF
C! Verifies /  lists the CERN copies of Homelabs MC prods
C  J. Boucrot        01-Feb-1996
C  Modified 25-Mar-1998 for PRLEVSND
C Called from PRDSET                                       from BOOKLIB
C Calls BKPOIN,BKCHKR,PRLEVSND                             from BOOKLIB
C Calls ALSTIN                                             from ALEPHLIB
C Output arguments :
C  NFND  = number of copies found
C  IER   = 1 if no room for BOS banks ;  = 0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
      PARAMETER ( NMXCO = 50 )
      CHARACTER TAPC*10,TAPL*10
      CHARACTER TAPNA*8,TAPMA*8,CHAINT*4,TMSLO*4,COMEN*80
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Various initializations :
      IER=0
      NFND=0
      ICPOK=0
      IMISS=0
      IF (IMCDAT.NE.2) GO TO 999
      CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
      IF (JBDFS.LE.0) GO TO 920
      CALL PRBHEA(LWRUSR)
      WRITE ( LWRUSR,1000) CLISTL(ILABCH)
      CALL BKCHKR
      NBDFS=LROWS(JBDFS)
C
C Loop on all 'BDFS' rows :
C
      DO 700 IBDF=NFDSET,NLDSET
         KBDFS=KROW(JBDFS,IBDF)
         IF (IW(KBDFS+JBDFCO).NE.1) GO TO 700
         NPEM=IW(KBDFS+JBDFNP)
         NROM=IW(KBDFS+JBDFNR)
C This is a copy dataset : get its nature from the 'BSET' bank :
         CALL BKPOIN(LECDAF,'BSET',NPEM,JBSET)
         IF (JBSET.LE.0) GO TO 700
         KBSET=KROW(JBSET,NROM)
         IDAY=IW(KBSET+JBSEWD)
         CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPMA)
C Check if this dataset matches the user's selections :
         CALL BKCHKD(TAPMA,NPEM,NROM,NFRU,NLRU)
         IF (NFRU.LE.0) GO TO 700
         CALL PRLEVSND(TAPMA,KBDFS,TAPL)
C Check if it is written on an expected tape :
         IF (ILABCH.EQ.3.AND.
     +      (TAPMA(1:2).EQ.'AL'.OR.TAPMA(1:2).EQ.'Y2')) GO TO 200
         IF (TAPMA(1:2).NE.'AV'.AND.TAPMA(1:2).NE.CTAPSL(ILABCH)) THEN
            WRITE (LWRUSR,1006) TAPL
            GO TO 700
         ENDIF
 200     COMEN=' '
         NFND=NFND+1
         CALL BKPOIN(LECDAF,'BSPF',NPEM,JBSPF)
         IF (JBSPF.EQ.0) GO TO 360
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
C Now look for the CERN master dataset :
 360     NCOPS=0
         MINCO=MAX0(1,IBDF-NMXCO)
         MAXCO=MIN0(IBDF+NMXCO,NBDFS)
         DO 600 ICO=MINCO,MAXCO
            KBDFN=KROW(JBDFS,ICO)
            IF (IW(KBDFN+JBDFNP).NE.NPEM) GO TO 600
            IF (IW(KBDFN+JBDFNR).NE.NROM) GO TO 600
            IF (IW(KBDFN+JBDFCO).NE.0)    GO TO 600
C This is a copy of TAPMA : decode its name
            CALL ALSTIN(IW(KBDFN+JBDFTC),2,TAPNA)
C Check if it is a CERN MCARLO tape :
            CALL BKCHKT(TAPNA,ICERN,IMULT,IDLT,IERT)
            IF (ICERN.EQ.0) GO TO 600
            CALL PRLEVSND(TAPNA,KBDFN,TAPC)
            NCOPS=NCOPS+1
            ICPOK=ICPOK+1
            TMSLO=CHAINT(IW(KBDFN+JBDFLO))
 550        WRITE ( LWRUSR,1007 ) TAPL,TAPC,TMSLO,IDAY,COMEN
 600     CONTINUE
 610     IF (NCOPS.EQ.0) THEN
            IMISS=IMISS+1
            TAPC=' '
            TMSLO=' '
            WRITE ( LWRUSR,1007 ) TAPL,TAPC,TMSLO,IDAY,COMEN
         ENDIF
C
 700     CONTINUE
      WRITE ( LWRUSR,1009) ICPOK
      IF (IMISS.GT.0) WRITE ( LWRUSR,1008) IMISS
      GO TO 999
C No room for banks :
 920  IER=1
 999  RETURN
C-----------------------------------------------------------------------
 1000 FORMAT (/5X,'=== Subroutine PRLEV7 === : Start verifying ',
     +        ' CERN MC copies for Homelab = ',A20//1X,120(1H-)/
     +        T4,'Homelab',T13,1H|,T16,'CERN',T26,1H|,T30,'TMS',T38,1H|,
     +        T40,'Date of',T49,1H|,T48,'Comment of dataset :'
     +        /T4,'Origin',T13,1H|,T16,'Copy',
     +        T26,1H|,T28,'Location',T38,1H|,T41,'writing',T49,1H|,
     +        /1X,120(1H-))
 1006 FORMAT (20X,'** Warning !! Origin dataset on tape',2X,A10,
     +        ' is NOT an expected tape !!')
 1007 FORMAT (1X,A10,T13,1H|,T15,A10,T26,1H|,T28,A9,T38,1H|,T41,I6,
     +        T49,1H|,T51,A80)
 1008 FORMAT (/25X,'A Total of ',I4,' Missing copies have been found')
 1009 FORMAT (/25X,'A Total of ',I4,' good copies have been found')
      END
      SUBROUTINE PRMCASET(IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Steering of Printout and FILI CARDs for MCarlo datasets
C  Author J.Boucrot 04-Oct-1996
C Called from PRDSET                            from BOOKLIB
C Calls  PRFIHEAD,PRMCD1                        from BOOKLIB
C Calls  SORTZV                                 from GENLIB
C Calls  ALSTIN                                 from ALEPHLIB
C Output argument :
C   IER = 1 if too many datasets
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
      PARAMETER ( NSETS = 500 )
      CHARACTER KINPR*8
      INTEGER LILOC(NSETS)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IER=0
      IF (IMCDAT.NE.2.OR.NDATFOUN.LE.0) GO TO 999
C Verifications for MCarlo running from CARDS input :
      IF (IBKINT.EQ.1) THEN
         CALL BKKINS(IER4)
         IF (IER4.NE.0) GO TO 999
         CALL BKLEPL
      ENDIF
      JBDFS=NLINK('BDFS',IMCDAT)
       IF (JBDFS.EQ.0) GO TO 999
C Sort the list of datasets found, in increasing order of Ranmars:
      CALL SORTZV(LISKINSL,LISORTRU,NDATFOUN,-1,0,0)
      ICAT=4
C Print the header of the FILI CARDs file on first call :
      IF (IFBOOK.EQ.0) THEN
         IFBOOK=1
         IF (IWFILI.GT.0) CALL PRFIHEAD
      ELSE
         IF (IBKINT.EQ.-1.AND.IWFILI.GT.0) CALL PRFIHEAD
      ENDIF
C Loop on all KINGAL families for this year of geometry :
      JBKLI=IW(NAMIND('BKLI'))
      IF (JBKLI.EQ.0) GO TO 999
      NKLI=LROWS(JBKLI)
      IKALL=0
      NKINN=-1
      NOLRA=0
      DO 800 IKI=1,NPRESK
         ntk=0
         IKIN=LIPRESK(IKI)
         do 5 ikk=1,ndat
            ntk=ntk+listkins(ikk,ikin)
 5       continue
         if (ntk.le.0) go to 800
         iking=kincodl(ikin)
         JBSET=NLINK('BSET',IKING)
         JBSPF=NLINK('BSPF',IKING)
         JBTPN=NLINK('BTPN',IKING)
         KINPR=' '
         DO 10 I=1,NKLI
            KBKLI=KROW(JBKLI,I)
            IF (ITABL(JBKLI,I,JBKLKC).NE.IKING) GO TO 10
            CALL ALSTIN(IW(KBKLI+JBKLKN),2,KINPR)
            GO TO 50
 10      CONTINUE
 50      IOLRA=-1
         CALL VZERO(LILOC,NSETS)
C Loop on all datasets :
         DO 500 NRR=1,NDATFOUN
            IVAL=LISORTRU(NRR)
            IBDFS=IBDSEL(IVAL)
C Check if this dataset has the right KINGAL number :
            KBDFS=KROW(JBDFS,IBDFS)
            IF (IW(KBDFS+JBDFNP).NE.IKING) GO TO 500
            IRAA=LISKINSL(IVAL)
            IF (IRAA.EQ.IOLRA) GO TO 300
C Printout KINGAL header when new KINGAL dataset found :
            IF (IKING.NE.NKINN) THEN
               NKINN=IKING
               IF (MOD(IBPRUS,10).EQ.4.OR.MOD(IBPRUS,10).EQ.5) GO TO 80
               WRITE (LWRUSR,1010) KINPR(1:6),IKING
               IF (IBPRUS.GT.10)
     +         WRITE (LWRINT,1010) KINPR(1:6),IKING
            ENDIF
C If new "family" found, print the old one and reset LILOC :
 80         IKALL=IKALL+1
            IF (IKALL.EQ.1) then
               IOLRA=IRAA
               GO TO 300
            ENDIF
            CALL PRMCD1(IKING,JBSET,JBSPF,JBTPN,NOLRA,LILOC)
            CALL VZERO(LILOC,NSETS)
            IOLRA=IRAA
            NOLRA=0
C the present dataset is stored in LILOC :
 300        NOLRA=NOLRA+1
            IF (NOLRA.GT.NSETS) GO TO 990
            LILOC(NOLRA)=IBDFS
 500     CONTINUE
         IF (NOLRA.GT.0) THEN
            CALL PRMCD1(IKING,JBSET,JBSPF,JBTPN,NOLRA,LILOC)
            NOLRA=0
         ENDIF
 800  CONTINUE
C Write the last buffer :
      IF (NOLRA.LE.0) GO TO 999
      IF (IKING.NE.NKINN) THEN
         IF (MOD(IBPRUS,10).EQ.4.OR.MOD(IBPRUS,10).EQ.5) GO TO 950
         WRITE (LWRUSR,1010) KINPR(1:6),IKING
         IF (IBPRUS.GT.10)
     +   WRITE (LWRINT,1010) KINPR(1:6),IKING
      ENDIF
 950  CALL PRMCD1(IKING,JBSET,JBSPF,JBTPN,NOLRA,LILOC)
      GO TO 999
C Too many datsets :
 990  IER=1
 999  RETURN
C
 1010 FORMAT (///1X,78(1H*)/1X,'* KINGAL generator : name ',2X,A6,
     +        ' code',I6,T79,1H*,/1X,78(1H*)/)
      END
      SUBROUTINE PRMCD1(NPER,JBSET,JBSPF,JBTAP,NUMS,LILOC)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of one MCarlo dataset family in SCANBOOK
C  Author J.Boucrot 21-Mar-1990  Modified 07-Oct-1996
C  Modified 25-Mar-1998 for PRLEVSND
C Called from PRMCASET                             from BOOKLIB
C Calls  PRLEV3,PRLEV4,BKTALO,BKPOIN,PRMCD2        from BOOKLIB
C Calls  BKCHHO,PRFILICA,PRLEVSND,PRMC97           from BOOKLIB
C Calls  ALSTIN,BKINCA                             from ALEPHLIB
C Calls  SORTZV                                    from GENLIB
C  Input arguments :
C  NPER  = KINGAL Family
C  JBSET = BOS pointer to the BSET bank for these datasets
C  JBSPF = BOS pointer to the BSPF bank for these datasets
C  JBTAP = BOS pointer to the BTAP bank for these datasets
C  NUMS  = Number of datasets found
C  LILOC = List of row # in bank BDFS , NR = 2
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- EXABYT ----
      PARAMETER ( MAXBD = 99 , MAXFI = 999)
      CHARACTER AXBDFS*8,AXFILI*10,AXVSNT*6,AXEDIR*8,AXEDNW*10
      COMMON / EXABYT / IAXFLN
      COMMON / CXABYT / AXBDFS,AXFILI,AXVSNT,AXEDIR,AXEDNW
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      PARAMETER ( NSETS = 500 ,  LENMI = 33 )
      PARAMETER ( IFAGA = 1000 , IRMA = 100000 )
      INTEGER LILOC(*),LULOC(NSETS),LDALO(NSETS),LYLOC(NSETS)
      INTEGER BKINCA,ITLA(32),ITPCE(2)
      CHARACTER RANCM*16,VSNT*8,CPCOM*20,DSNAM*20,TAPCO*8
      CHARACTER COMEN*80,COMOL*80,DSMCA*20,DSNUM*9,LOCTP*9
      CHARACTER PARNA*12,COMRU*50,TAPOR*8,TAPPA*8,TAPCE*8
      CHARACTER CK97*12,CO97*60,TAPC*10
      LOGICAL XRAT
      DATA ITLA / 11 , 5 , 2*2 , 4 , 7 , 3 , 12 , 8 , 9 , 3 , 13 , 14 ,
     +             3 , 5 , 8 , 6 , 8 , 5 , 14 , 5 , 2 , 2*3 , 8 , 3*5 ,
     +             2 , 8 , 2*14 /
      DATA COMRU / 'Warning ! More than 1 run ==> use Printout Level 3'/
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      RANCM=' '
      NRAN=0
      IBPR=MOD(IBPRUS,10)
      XRAT=IBPR.EQ.4.OR.IBPR.EQ.5
      CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
      IF (JBDFS.LE.0) GO TO 999
      JBRAN=IW(NAMIND('BRAN'))
      JBPLI=IW(NAMIND('BPLI'))
      IF (JBRAN.GT.0) NRAN=LROWS(JBRAN)
C
C Loop on natures of datasets
C
      DO 600 ICHEK=1,NNDAT
         NLOC=0
         CALL VZERO(LULOC,NSETS)
         CALL VZERO(LYLOC,NSETS)
         CALL VZERO(LDALO,NSETS)
C
C Loop on all datasets of LILOC :
C
         DO 400 I=1,NUMS
            IROW=LILOC(I)
            KBDFS=KROW(JBDFS,IROW)
            NROW=IW(KBDFS+JBDFNR)
            ICOP=IW(KBDFS+JBDFCO)
            KBSET=KROW(JBSET,NROW)
            IBSPF=IW(KBSET+JBSEBS)
            KBSPF=KROW(JBSPF,IBSPF)
            IGALV=0
            IJULV=0
            CALL BKPOIN(LECDAF,'BPRO',NPER,JBPRO)
            IF (JBPRO.GT.0) THEN
               IBPRO=IW(KBSET+JBSEBP)
               IF (IBPRO.LE.0) GO TO 40
               KBPRO=KROW(JBPRO,IBPRO)
               IJULV=IW(KBPRO+JBPRCV)/IFAGA
               IGALV=IW(KBPRO+JBPRCV)-IFAGA*IJULV
 40            CONTINUE
            ENDIF
C printout of header for this dataset family :
            IF (ICHEK.EQ.1.AND.I.EQ.1.AND.IBPR.NE.1) THEN
               ELEP=0.001*FLOAT(IW(KBSET+JBSEBN))
               IRAN1=IW(KBSPF+JBSPFR)
               IRAN2=MOD(IW(KBSPF+JBSPSR),IRMA)
               ILAB=IRAN1/100
               PARNA=' '
               IPAKO=IW(KBSPF+JBSPSR)/IRMA
               IF (IPAKO.GT.0.AND.JBPLI.GT.0) THEN
                  DO 50 IKP=1,LROWS(JBPLI)
                     KBPLI=KROW(JBPLI,IKP)
                     IF (IW(KBPLI+JBPLPC).NE.IPAKO) GO TO 50
                     CALL ALSTIN(IW(KBPLI+JBPLPN),JBPLPC-JBPLPN,PARNA)
                     GO TO 51
 50               CONTINUE
 51               CONTINUE
               ENDIF
               NRUN=IW(KBSET+JBSEFR)
               IKTES=0
               IKLAB=0
               IF (NRAN.EQ.0) GO TO 101
               DO 100 IK=1,NRAN
                  IF (IK.NE.ILAB) GO TO 100
                  KBRAN=KROW(JBRAN,IK)
                  CALL ALSTIN(IW(KBRAN+JBRAIN),
     +                        JBRANI-JBRAIN,RANCM)
                  IKLAB=ITLA(IK)
                  IKTES=IK
                  GO TO 101
 100           CONTINUE
 101           IF (RANCM.EQ.' ') RANCM='UNKNOWN'
C Look for an  "origin" tape , if possible :
               TAPOR=' '
               TAPCE=' '
               CALL VZERO(ITPCE,2)
               DO 200 IKR=IROW-25,IROW+100
                  KBDD=KROW(JBDFS,IKR)
                  NSRO=IW(KBDD+JBDFNR)
                  IF (NSRO.NE.NROW) GO TO 200
                  IF (IW(KBDD+JBDFNP).NE.NPER) GO TO 200
                  IF (IW(KBDD+JBDFCO).EQ.0) THEN
                     CALL ALSTIN(IW(KBDD+JBDFTC),2,TAPPA)
                     IF (TAPPA(1:2).EQ.'AM') THEN
                        TAPCE=TAPPA
                        ITPCE(1)=IW(KBDD+JBDFTC)
                        ITPCE(2)=IW(KBDD+JBDFTC+1)
                     ENDIF
                  ENDIF
                  KBSDD=KROW(JBSET,NSRO)
                  IF (IW(KBSDD+JBSEND).GT.3) GO TO 200
                  CALL ALSTIN(IW(KBDD+JBDFTC),2,TAPPA)
                  CALL BKCHHO(TAPPA,ICE,IHOME,IMU,IEX,IDL,I34,IERC)
                  IF (IERC.NE.0.OR.IKLAB.NE.MOD(IHOME,100)) GO TO 200
                  TAPOR=TAPPA
                  IF (TAPOR.NE.' '.AND.TAPCE.NE.' ') GO TO 201
 200           CONTINUE
 201           CONTINUE
               IF (XRAT) GO TO 250
               IF (TAPOR.EQ.' ') WRITE (LWRUSR,1002) ELEP,IRAN1,IRAN2,
     +                                               NRUN,RANCM
               IF (TAPOR.NE.' ') WRITE (LWRUSR,2002) ELEP,IRAN1,IRAN2,
     +                                               NRUN,RANCM,TAPOR
               IF (TAPCE.NE.' ') THEN
                  IMINA=0
                  IF (IDASEL.GE.5) IMINA=1
                  CALL PRMCD2(ITPCE,IMINA,NRUN,IRAN1,IRAN2,IGALV,IJULV,
     +                        NPER)
               ELSE
                  IF (IGALV.GT.0) WRITE ( LWRUSR,1005) IGALV,IJULV
               ENDIF
               IF (IPAKO.GT.0.AND.PARNA.NE.' ') WRITE ( LWRUSR , 1009 )
     +                                         IPAKO,PARNA
               IF (INIP97.NE.0) THEN
                  CALL PRMC97(NPER,KBSPF,CK97,CO97)
                  IF (CK97.NE.' ')
     +                WRITE (LWRUSR,1019) CK97,CO97
               ENDIF
 250        CONTINUE
            ENDIF
C now store the datasets pointers in table LULOC :
            IF (IW(KBSET+JBSEND).NE.ICHEK) GO TO 400
            NLOC=NLOC+1
            IF (NLOC.GT.NSETS) GO TO 450
            LULOC(NLOC)=IROW
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,VSNT)
            LDALO(NLOC)=BKINCA(VSNT(3:8))
 400     CONTINUE
C
C Sort these Mcarlo datasets by increasing date and print them :
C
 450    IF (NLOC.EQ.0) GO TO 600
        CALL SORTZV(LDALO,LYLOC,NLOC,-1,0,0)
C
        DO 500 IPR=1,NLOC
           IKL=LYLOC(IPR)
           LRO=LULOC(IKL)
           KBDF=KROW(JBDFS,LRO)
           IF (XRAT) THEN
              CALL PRLEV4(LRO)
              GO TO 500
           ENDIF
C prepare printout :
           MROW=IW(KBDF+JBDFNR)
           KBSET=KROW(JBSET,MROW)
           IBSPF=IW(KBSET+JBSEBS)
           KBSPF=KROW(JBSPF,IBSPF)
C Print header for cartridges :
           IF (IPR.EQ.1.AND.IBPR.NE.1) THEN
              WRITE (LWRUSR,1003)
              IF (IBPRUS.GT.10) WRITE ( LWRINT,1004)
           ENDIF
           NRUD=0
           NADAT=IW(KBSET+JBSEND)
C Compute number of events in the dataset :
           IBRL1=IW(KBSET+JBSEBA)
           IBRL2=IW(KBSET+JBSEBR)
           NEVTS=IW(KBSET+JBSELE)-IW(KBSET+JBSEFE)
           IF (IBRL1.EQ.0.OR.IBRL2.EQ.0) GO TO 475
           CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
           IF (JBRLI.LE.0) GO TO 475
           NEVT=0
           DO 470 IRO=IBRL1,IBRL2
              KBRLI=KROW(JBRLI,IRO)
              NEVT=NEVT+IW(KBRLI+JBRLNE)
              NRUD=NRUD+1
 470       CONTINUE
           NEVTS=NEVT
 475       CONTINUE
           IDATE=IW(KBSET+JBSEWD)
           CALL ALSTIN(IW(KBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
           CALL ALSTIN(IW(KBDF+JBDFTC),2,VSNT)
           CALL PRLEVSND(VSNT(1:6),KBDF,TAPC)
           IF (IBPR.EQ.1) THEN
              WRITE (LWRUSR,1015) TAPC,COMEN
              IF (IBPRUS.GT.10) WRITE (LWRINT,1015) TAPC,COMEN
              GO TO 500
           ENDIF
C Get the location of the tape :
           CALL BKTALO(' ',LRO,LOCTP,ILAB)
C Put a warning on the output , if the present dataset is the copy
C of another one :
           IF (IW(KBDF+JBDFCO).EQ.0) GO TO 490
           IBTAP=IW(KBSET+JBSEBT)
           IF (IBTAP.EQ.0) GO TO 500
           KBTPC=KROW(JBTAP,IBTAP)
           CALL ALSTIN(IW(KBTPC+JBTPVS),JBTPFO-JBTPVS,TAPCO)
           COMOL=COMEN
           COMEN='Copy of '//TAPCO//' '//COMOL(1:64)
 490       CONTINUE
C printout on FILI CARDs file :
           LLR=IUCOMP(LRO,IBDSEL,NDATFOUN)
           IF (LLR.GT.0) CALL PRFILICA(LLR)
C printout on Output file :
           WRITE (LWRUSR,1006) DNADAT(NADAT),TAPC,LOCTP,NEVTS,
     +                         IDATE,COMEN
           IF (NRUD.GT.1.AND.MOD(IBPRUS,10).NE.3)
     +         WRITE ( LWRUSR , 1010 )  COMRU
           IF (MOD(IBPRUS,10).EQ.3) CALL PRLEV3(LWRUSR,KBSET,NPER,KBDF)
           IF (IBPRUS.LT.10) GO TO 500
           LENC=LNBLNK(COMEN)
           LENN=2*LENMI
           WRITE (LWRUSR,1007) DNADAT(NADAT),TAPC,LOCTP,NEVTS,
     +                         IDATE,COMEN(1:LENMI)
           IF (LENC.GT.LENMI) WRITE (LWRINT,1008) COMEN(LENMI+1:LENN)
           IF (MOD(IBPRUS,10).EQ.3) CALL PRLEV3(LWRINT,KBSET,NPER,KBDF)
C
 500    CONTINUE
C
        IF (XRAT.OR.IBPR.EQ.1) GO TO 600
        WRITE (LWRUSR,1011)
        IF (IBPRUS.LT.10) GO TO 600
        WRITE (LWRINT,1012)
 600  CONTINUE
C
 999  RETURN
C
C----------------------------------------------------------------------
 1002 FORMAT (//'  -------->    Summary of Production Conditions for',
     +        ' the datasets listed below :   <--------',
     +        //' +++ LEP energy is :',F10.3,' Gev  -  RANMAR seeds  ='
     +         ,2I12,/T5,' Run Number =',I6,
     +          T25,' ==  Production done by Lab = ',2X,A16)
 1003 FORMAT (/1X,120(1H-)/T1,'Nat',T5,1H|,T8,'Tape',T16,1H|,T18,'Loca'
     +       ,'tion',T28,1H|,T30,'Nevts',T37,1H|,T39,'Date ',T45,1H|,
     +        T47,'Comment',/1X,110(1H-))
 1004 FORMAT (/1X,79(1H-)/T1,'Nat',T5,1H|,T8,'Tape',T16,1H|,T18,'Locat'
     +       ,'tion',T28,1H|,T30,'Nevts',T37,1H|,T39,'Date ',T45,1H|,
     +        T47,'Comment',/1X,79(1H-))
 1005 FORMAT (5X,'GALEPH Version # =',I5,5X,'JULIA Version # =',I5)
 1006 FORMAT (T1,A4,T5,1H|,T6,A10,T16,1H|,T18,A9,T28,1H|,T30,I6,T37,
     +        1H|,T39,I6,T45,1H|,T47,A80)
 1007 FORMAT (T1,A4,T5,1H|,T6,A10,T16,1H|,T18,A9,T28,1H|,T30,I6,T37,
     +        1H|,T39,I6,T45,1H|,T47,A33)
 1008 FORMAT (T5,1H|,T16,1H|,T28,1H|,T37,1H|,T45,1H|,T47,A33)
 1009 FORMAT (5X,' ===> Special particle code # =',I3,7X,
     +       'Name of particle :',2X,A12)
 1010 FORMAT (T5,1H|,T14,1H|,T26,1H|,T35,1H|,T43,1H|,T45,A50)
 1011 FORMAT (1X,110(1H-))
 1012 FORMAT (1X,79(1H-))
 1015 FORMAT(T2,A10,T13,1H!,T15,A60)
 1019 FORMAT (5X,' ===> Production conditions for these datasets :'/,
     +        11X,'Keyword in comment:',2X,A12,' Explanation:',2X,A60)
 2002 FORMAT (//'  -------->    Summary of Production Conditions for',
     +        ' the datasets listed below :   <--------',
     +        //' +++ LEP energy is :',F10.3,' Gev  -  RANMAR seeds  ='
     +         ,2I12,/T5,' Run Number =',I6,
     +          T25,' ==  Production done by Lab = ',2X,A16,
     +          ' ==  Original production on : ',2X,A8)
C
      END
      SUBROUTINE PRMCD2(ITPCE,IMINA,IRUN,IRAN1,IRAN2,IGALV,IJULV,NPER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of MCarlo dataset comments in SCANBOOK
C  Author J.Boucrot 15-Dec-1993
C Called from PRMCD1                            from BOOKLIB
C Calls  ALSTIN                                 from ALEPHLIB
C  Input arguments :
C  ITPCE = Integer representation of master dataset tape
C  IMINA = 1 if MINI or NANO selected , = 0 otherwise
C  IRUN  = First run number on dataset
C  IRAN1 = First RANMAR Seed of dataset
C  IRAN2 = 2nd   RANMAR Seed of dataset
C  IGALV = GALEPH version number from SCANBOOK database
C  IJULV = JULIA  version number from SCANBOOK database
C  NPER  = KINGAL Family
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      INTEGER ITPCE(2)
      CHARACTER SPECI*16,ZZ*240,TAPMC*8
      CHARACTER*80 ZNOT(3)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
C Check if the input tape is in the 'BKMC' bank :
      IOKP=0
      IPASS=0
      JBKMC=NLINK('BKMC',NPER)
      IF (JBKMC.EQ.0) GO TO 999
 10   IBKMD=0
      DO 100 IPC=1,LROWS(JBKMC)
         KBKMC=KROW(JBKMC,IPC)
         IF (IW(KBKMC+JBKMVS).NE.ITPCE(1)) GO TO 100
         IF (IW(KBKMC+JBKMVS+1).NE.ITPCE(2)) GO TO 100
         IBKMD=IW(KBKMC+JBKMMD)
         CALL ALSTIN(ITPCE,2,TAPMC)
         GO TO 101
 100  CONTINUE
 101  IF (IBKMD.EQ.0) GO TO 400
C
C Verify if the dataset is the same , then take values from the 'BKMD' b
C
      JBKMD=NLINK('BKMD',NPER)
      IF (JBKMD.EQ.0) GO TO 999
      KBKMD=KROW(JBKMD,IBKMD)
      IF (IW(KBKMD+JBKMIY).NE.IGEOYR) GO TO 400
      JULVB=IW(KBKMD+JBKMJV)/100
      IF (JULVB.NE.IJULV) GO TO 400
      IGAVB=IW(KBKMD+JBKMGV)/100
      IF (IGAVB.NE.IGALV) GO TO 400
      JULCO=IW(KBKMD+JBKMJV)-100*JULVB
      IGACO=IW(KBKMD+JBKMGV)-100*IGAVB
      VJUL=FLOAT(JULVB)+0.01*FLOAT(JULCO)
      VGAL=FLOAT(IGAVB)+0.01*FLOAT(IGACO)
      XSECT=0.001*FLOAT(IW(KBKMD+JBKMXS))
      NEVTS=IW(KBKMD+JBKMNE)
      IBKMN=IW(KBKMD+JBKMMN)
C-----------------------------------------------------------------------
C Now perform the printouts :
C Printout the exact Galeph , Julia version numbers , and X-section :
      WRITE ( LWRUSR,1003) VGAL,VJUL
      IF (IBPRUS.GT.10) WRITE ( LWRINT,1003) VGAL,VJUL
      WRITE ( LWRUSR,1007) NEVTS
      IF (IBPRUS.GT.10) WRITE ( LWRINT,1007) NEVTS
      IF (XSECT.GT.0.) THEN
         WRITE ( LWRUSR,1004) XSECT
         IF (IBPRUS.GT.10) WRITE ( LWRINT,1004) XSECT
      ENDIF
C Printout of comments , if any :
      IF (IBKMN.LE.0) GO TO 400
      JBKMN=NLINK('BKMN',NPER)
      IF (JBKMN.EQ.0) GO TO 400
      SPECI=' '
      ZZ=' '
      DO 250 IK=1,3
 250  ZNOT(IK)=' '
      KBKMN=KROW(JBKMN,IBKMN)
      CALL ALSTIN(IW(KBKMN+JBKMSP),JBKMNO-JBKMSP,SPECI)
      CALL ALSTIN(IW(KBKMN+JBKMNO),LBKMNA-JBKMNO+1,ZZ)
C Write the special comment for photon-photon generators :
      IF (SPECI.NE.' ' ) THEN
         WRITE ( LWRUSR,1005) SPECI
         IF (IBPRUS.GT.10) WRITE ( LWRINT,1005) SPECI
      ENDIF
C Write the comments from the MCPRODS STATUS file :
      LNOTE=LNBLNK(ZZ)
      IF (LNOTE.EQ.0) GO TO 300
       INOTE=1+(LNOTE-1)/80
      ZNOT(1)=ZZ(1:80)
      IF (INOTE.GE.2) ZNOT(2)=ZZ(81:160)
      IF (INOTE.EQ.3) ZNOT(3)=ZZ(161:240)
      WRITE ( LWRUSR,1006) (ZNOT(KK),KK=1,INOTE)
      IF (IBPRUS.GT.10) WRITE ( LWRINT,1006) (ZNOT(KK),KK=1,INOTE)
 300  IOKP=1
C
 400  IF (IMINA.EQ.1.AND.IOKP.EQ.0.AND.IPASS.EQ.0) GO TO 500
      GO TO 999
C-----------------------------------------------------------------------
C If this was a MINI or a NANO and nothing was found , try to find
C comments from a mother POT :
 500  IPASS=1
      CALL VZERO(ITPCE,2)
      JBDFS=NLINK('BDFS',2)
      IF (JBDFS.EQ.0) GO TO 999
      JBSET=NLINK('BSET',NPER)
      IF (JBSET.EQ.0) GO TO 999
      JBSPF=NLINK('BSPF',NPER)
      IF (JBSPF.EQ.0) GO TO 999
      IPOT=0
C Try to find a mother POT :
      DO 600 IBDFS=1,LROWS(JBDFS)
         KBDFS=KROW(JBDFS,IBDFS)
         IF (IW(KBDFS+JBDFNP).NE.NPER) GO TO 600
         IBSET=IW(KBDFS+JBDFNR)
         KBSET=KROW(JBSET,IBSET)
         IF (IW(KBSET+JBSEFR).NE.IRUN) GO TO 600
         IF (MOD(IW(KBSET+JBSEND),10).NE.3) GO TO 600
         IBSPF=IW(KBSET+JBSEBS)
         KBSPF=KROW(JBSPF,IBSPF)
         IF (IW(KBSPF+JBSPFR).NE.IRAN1) GO TO 600
         IF (MOD(IW(KBSPF+JBSPSR),100000).NE.IRAN2) GO TO 600
         ITPCE(1)=IW(KBDFS+JBDFTC)
         ITPCE(2)=IW(KBDFS+JBDFTC+1)
         CALL ALSTIN(ITPCE,2,TAPMC)
         IF (TAPMC(1:2).NE.'AM') GO TO 600
         IPOT=1
         GO TO 610
 600  CONTINUE
 610  IF (IPOT.EQ.1) GO TO 10
C
 999  RETURN
C-----------------------------------------------------------------------
 1003 FORMAT (5X,' ===> GALEPH Version # = ',F6.2,5X,
     +        'JULIA Version # = ',F6.2)
 1004 FORMAT (5X,' ===> Generated Cross Section for this Dataset =',
     +        F9.3,2X,'nanobarns')
 1005 FORMAT (5X,' ===> Specification for this Dataset :',2X,A16)
 1006 FORMAT (5X,' ===> Comments from MCPROD STATUS for this dataset :'
     +        ,3(/11X,A80))
 1007 FORMAT (5X,' ===> Total number of Generated events for this ',
     +        'Dataset =',I8)
      END
      SUBROUTINE PRMC97(NPER,JBSPF,CK97,CO97)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Find special keywords for 1997 MC datasets
C   Author   J. Boucrot  18-Jun-1997
C Called from PRMCD1                                  from  BOOKLIB
C Calls ALSTIN                                        from  ALEPHLIB
C   All user selection keywords are in / BKKEYS /
C Input  arguments :
C   NPER   =  BSET bank number of the dataset
C  JBSPF   =  pointer to informations in BSPF for this dataset
C Output arguments :
C    CK97  =  keyword , from 'BKM7' bank
C    CO97  =  explanation of the  keyword , from 'BKM7' bank
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      CHARACTER COMEN*80,KRAK*12,KRCO*12
      CHARACTER*(*) CK97,CO97
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      CK97=' '
      CO97=' '
C A selection was already active: take the keywords in /BKKEYS/ :
      IF (IROW97.LE.0) GO TO 100
      CK97=CKEY97
      CO97=CODM97
      GO TO 999
C No selection: decode the dataset comment and find the keywords:
 100  NR=NPER+NCY*(IGEOYR-IYERF)
      JBKM7=NLINK('BKM7',NR)
      IF (JBKM7.LE.0) GO TO 999
      CALL ALSTIN(IW(JBSPF+JBSPCO),JBSPKC-JBSPCO,COMEN)
      CALL CLTOU(COMEN)
C Look for all selected 1997 MC keywords of this generator in this comme
      DO 200 IBKM7=1,LROWS(JBKM7)
         KBKM7=KROW(JBKM7,IBKM7)
         CALL ALSTIN(IW(KBKM7+JBKMKW),JBKMDE-JBKMKW,KRAK)
         CALL CLTOU(KRAK)
         INDKR=INDEX(COMEN,KRAK(1:LNBLNK(KRAK)))
         IF (INDKR.EQ.0) GO TO 200
C keyword must be the right one :
         KRCO=' '
         ILKR=0
         DO 170 II=1,12
            IF (COMEN(INDKR+II:INDKR+II).EQ.' ') GO TO 180
            ILKR=ILKR+1
 170     CONTINUE
 180     IF (ILKR.EQ.0) GO TO 200
         KRCO=COMEN(INDKR:INDKR+ILKR)
         CALL CLTOU(KRCO)
         IF (KRAK(1:LNBLNK(KRAK)).NE.KRCO(1:LNBLNK(KRCO))) GO TO 200
C keyword found:
         CK97=KRAK
         CALL ALSTIN(IW(KBKM7+JBKMDE),LBKM7A-JBKMDE+1,CO97)
         GO TO 999
 200  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE PRONLG(ITRM,NFOUN,LISRU,LISPR,LISRO)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout comments of Online Logbook
C  Author  J.Boucrot  2-Oct-1989
C  Completely rewritten : J. Boucrot 2-Jun-1994 for new Det. Run_Q
C Called from BKSLIS                          from BOOKLIB
C Calls ALSTIN                                from ALEPHLIB
C Calls BKFPER,BKPOIN                         from BOOKLIB
C Calls BTEST                                 from KERNLIB
C Input parameters :
C  IOPT  = 0 Normal processing  with user dialogue
C        = 1 No user dialogue , output directly on LWRUSR file
C   NRUN1 = First run number for which the print is required
C         = 0  : all available runs are printed
C   NRUN2 = Last run number ; if = 0 only run NRUN1 is printed
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*18 DETEC,PATER,PATT
      CHARACTER VSN*6,TRTYP*8,LET1*1,TAP*8
      CHARACTER DET94*24,DRUQ*24,DEF94*24,DPAT*12
      LOGICAL BTEST
      INTEGER LISPR(*),LISRO(*),LISRU(*)
      DATA DETEC  / 'V I T E H S L B Si' /
      DATA PATER  / '                  ' /
      DATA DET94  / 'V I T E H S L t D R     ' /
      DATA DEF94  / '? ? ? ? ? ? ? ? ? ?     ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IF (NFOUN.EQ.0) GO TO 999
      IRU94=MIRU94
C Determine if current display will contain runs of 1994 and after :
      IF94=1
      IF (ISRUNF.LT.IRU94.AND.ISRUNL.LT.IRU94) IF94=0
C Loop on all selected runs :
      DO 800 IRR=1,NFOUN
         IF (IRR.EQ.1) THEN
C write header before first data :
            IF (IF94.EQ.0) THEN
               WRITE (LWRUSR,1001)
               IF (ITRM.EQ.1) WRITE (LWRINT,1001)
            ELSE
               WRITE (LWRUSR,1100)
               WRITE (LWRUSR,1101)  DET94
               IF (ITRM.EQ.1) THEN
                  WRITE (LWRINT,1100)
                  WRITE (LWRINT,1101) DET94
               ENDIF
            ENDIF
C Write the run content :
         ENDIF
         CALL BKPOIN(LECDAF,'BRUC',LISPR(IRR),JBRUC)
         ISR=LISRU(IRR)
         IF (ISR.LE.0) GO TO 800
         IKH=LISRO(ISR)
         IF (IKH.LE.0) GO TO 800
         KBRUC=JBRUC+LMHLEN+LBRUCA*(IKH-1)
         CALL ALSTIN(IW(KBRUC+JBRUVS),JBRUTT-JBRUVS,TAP)
         VSN=TAP(1:6)
         IF (VSN.EQ.' '.OR.VSN.EQ.'NO TAP') VSN='??????'
         CALL ALSTIN(IW(KBRUC+JBRUTT),JBRULF-JBRUTT,TRTYP)
         NRUN=IW(KBRUC+JBRURN)
         IDAT=IW(KBRUC+JBRUWD)
         ITIM=IW(KBRUC+JBRUWH)
         NEVT=IW(KBRUC+JBRUEV)
         ELEP=0.001*FLOAT(IW(KBRUC+JBRUTE))
         IFIL=IW(KBRUC+JBRULF)
         IBIPA=IW(KBRUC+JBRUDC)
         IAMP=IW(KBRUC+JBRUMC)
         FAMP=0.1*FLOAT(IAMP)
C Build the detector pattern for data taken before 1994 :
         IF (IF94.EQ.1) GO TO 120
         PATT=PATER
         DO 100 INB=1,10
            IF (BTEST(IBIPA,INB)) THEN
               ISS=2*(INB-2)-1
               PATT(ISS:ISS)='X'
            ENDIF
 100     CONTINUE
         GO TO 400
C Build the detector pattern for data taken in 1994 and after :
 120     DRUQ=DEF94
         CALL BKPOIN(LECDAF,'BDRQ',LISPR(IRR),JBDRQ)
         IF (JBDRQ.LE.0) GO TO 400
         DO 200 IBDRQ=1,LROWS(JBDRQ)
            KBDRQ=KROW(JBDRQ,IBDRQ)
            IF (IW(KBDRQ+JBDRRN).NE.NRUN) GO TO 200
            CALL ALSTIN(IW(KBDRQ+JBDRDP),LBDRQA-JBDRRN,DPAT)
            DO 150 IK=1,12
               IDD=1+2*(IK-1)
 150        DRUQ(IDD:IDD)=DPAT(IK:IK)
            GO TO 400
 200     CONTINUE
C WRITE for 132 cols:
 400  CONTINUE
         IF (IF94.EQ.1) GO TO 500
         WRITE (LWRUSR,1011) DETEC
         WRITE (LWRUSR,1010) NRUN,VSN,ELEP,IFIL,IDAT,ITIM,NEVT,PATT,
     +                       TRTYP,FAMP
         IF (ITRM.EQ.0) GO TO 800
         WRITE (LWRINT,1011) DETEC
         WRITE (LWRINT,1010) NRUN,VSN,ELEP,IFIL,IDAT,ITIM,NEVT,PATT,
     +                       TRTYP,FAMP
         GO TO 800
 500     WRITE (LWRUSR,1110) NRUN,VSN,ELEP,IFIL,IDAT,ITIM,NEVT,DRUQ,
     +                       TRTYP,FAMP
         IF (ITRM.EQ.0) GO TO 800
         WRITE (LWRINT,1110) NRUN,VSN,ELEP,IFIL,IDAT,ITIM,NEVT,DRUQ,
     +                       TRTYP,FAMP
 800  CONTINUE
C
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (/1X,106(1H-)/,
     +       T3,'NRUN',T9,1H|,T12,' RAW',T18,1H|,T20,'LEP Eng',
     +       T28,1H|,T31,'LEP',T35,1H|,T37,'Date and Time',T51,1H|,
     +       T54,'Nevts',T60,1H|,T62,
     +       'Detector Conditions',T84,1H|,T87,'Trigger',T95,1H|,
     +       T97,'Magnet',T107,1H|/,
     +       T9,1H|,T12,'TAPE',T18,1H|,T23,'Gev',T28,1H|,T31,'Fill',
     +       T35,1H|,T37,'YYMMDD',T44,
     +       'hhmmss',T51,1H|,T60,1H|,T65,'X = Detector ON',T84,1H|,
     +       T87,'  Type',T95,1H|,T97,'(Amps)',T107,1H|/1X,106(1H-))
 1010 FORMAT (T2,I6,T9,1H|,T11,A6,T18,1H|,T20,F6.2,T28,1H|,
     +       T30,I4,T35,1H|,T37,I6,T44,
     +       I6,T51,1H|,T54,I5,T60,1H|,T62,A18,T84,1H|,T86,A8,
     +       T95,1H|,T97,F6.1,T107,1H|)
 1011 FORMAT (T9,1H|,T18,1H|,T28,1H|,T35,1H|,
     +       T51,1H|,T60,1H|,T62,A18,T84,1H|,
     +       T95,1H|,T107,1H|)
 1100 FORMAT (/3X,'===>  For data taken in 1994 onwards :'/,
     +       9X,'the Detector Run_Quality is given in this order :'/,
     +       9X,'Vdet Itc Tpc Ecal Hcal Sical Lcal trigger Daq Run_',
     +       'Coordinator'/,9X,'For each detector : D for DUCK'/,
     +       29X,'M for MAYB'/,29X,'P for PERF'//)
 1101 FORMAT (/1X,110(1H-)/,
     +       T3,'NRUN',T9,1H|,T12,' RAW',T18,1H|,T20,'LEP Eng',
     +       T28,1H|,T31,'LEP',T35,1H|,T37,'Date and Time',T51,1H|,
     +       T54,'Nevts',T60,1H|,T62,
     +       'Detector Run_Quality',T88,1H|,T91,'Trigger',T99,1H|,
     +       T101,'Magnet',T111,1H|/,
     +       T9,1H|,T12,'TAPE',T18,1H|,T23,'Gev',T28,1H|,T31,'Fill',
     +       T35,1H|,T37,'YYMMDD',T44,
     +       'hhmmss',T51,1H|,T60,1H|,T62,A24,T88,1H|,
     +       T91,'  Type',T99,1H|,T101,'(Amps)',T111,1H|/1X,110(1H-))
 1110 FORMAT (T2,I6,T9,1H|,T11,A6,T18,1H|,T20,F6.2,T28,1H|,
     +       T30,I4,T35,1H|,T37,I6,T44,
     +       I6,T51,1H|,T54,I5,T60,1H|,T62,A24,T88,1H|,T90,A8,
     +       T99,1H|,T101,F6.1,T111,1H|)
      END
      SUBROUTINE PROPT2(NFOUN,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! FILI CARD printout for Run Files
C  Author J.Boucrot 04-Oct-1996
C Called from BKSEXQ                            from BOOKLIB
C Calls  PRBFIL,BKFINDFI,PRFILISO               from BOOKLIB
C Calls  SORTZV                                 from GENLIB
C Output arguments :
C  NFOUN = number of datasets found
C    IER = 0  :  all OK
C        = 1  :  too many files found
C        = 2  :  LISTFILE not found
C-----------------------------------------------------------------------
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-----------------------------------------------------------------------
      IER=0
      NFOUN=0
      IF (IDSEAR.NE.2) GO TO 999
C  Read the LISTFILE of all EDIR files :
      CALL BKFINDFI(1,NFOUN,IER)
      IF (IER.NE.0.OR.NFOUN.LE.0) GO TO 999
      WRITE ( LWRUSR,1001)
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' *     End of SCANBOOK Database search  :  *'
      WRITE (LWRUSR,1002) NFOUN
      WRITE (LWRUSR,*)  ' * have been found matching your requests  *'
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,1001)
      IF (IBKINT.NE.2) GO TO 80
      WRITE (LWRINT,1001)
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' *     End of SCANBOOK Database search  :  *'
      WRITE (LWRINT,1002) NFOUN
      WRITE (LWRINT,*)  ' * have been found matching your requests  *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
C Open the FILI CARDs file and write header :
 80   IF (IWFILI.GT.0) CALL PRFIHEAD
C Sort the runs found in increasing order :
 100  CONTINUE
      IF (ISORLE.EQ.0) THEN
         CALL SORTZV(LISRUSEL,LISORTRU,NDATFOUN,-1,0,0)
      ELSE
         CALL SORTZV(LISALRUN,LISALSOR,NTOTRUNS,-1,0,0)
      ENDIF
      ICAT=1
C If sorting by LEP energy, call special routine :
      IF (ISORLE.GT.0) THEN
         CALL PRFILISO
         GO TO 999
      ENDIF
C No sorting : loop on all files found :
      DO 200 I=1,NDATFOUN
         IRR=LISORTRU(I)
         CALL PRBFIL(ICAT,IRR)
 200  CONTINUE
 999  CALL PRWINX11(NFOUN,0)
      RETURN
 1001 FORMAT (/)
 1002 FORMAT (2X,'*',6X,I4,7X,'Files',19X,'*')
      END
      SUBROUTINE PROPT3(IOPT,NRUN1,NRUN2,NFOUN)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of informations for Option 3 of SCANBOOK
C  Author  J.Boucrot  2-Oct-1989
C Modified: Helge Meinhard  04-Sep-1992   UNIX version
C Called from BKSEXQ or PROPT5                    from BOOKLIB
C Calls ALSTIN                                    from ALEPHLIB
C Calls BKFPER,BKPOIN,PRPHYS,PRONLG,BKRUOK        from BOOKLIB
C Calls PRELEP,PRFILL,BKSTORUN                    from BOOKLIB
C Calls SORTZV                                    from KERNLIB
C Input parameters :
C  IOPT  = 0 Normal processing  with user dialogue
C        = 1 No user dialogue , output directly on LWRUSR file
C   NRUN1 = First run number for which the print is required
C         = 0  : all available runs are printed
C   NRUN2 = Last run number ; if = 0 only run NRUN1 is printed
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
      PARAMETER ( NRMAX = 5000 )
      CHARACTER LET1*1
      INTEGER LISPR(NRMAX) , LISRO(NRMAX)
      INTEGER LISRU(NRMAX),NUMRU(NRMAX),ITEMP(NRMAX)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      CALL VZERO(LISPR,NRMAX)
      CALL VZERO(LISRO,NRMAX)
      NFOUN=0
C Check input arguments :
      IPROK=0
      IALL=0
      NRUFI=NRUN1
      NRULA=NRUN2
      IF (NRUN2.EQ.0) NRULA=NRUN1
      IF (NRUN1.LE.NRUMIN) THEN
         NRUFI=1
         NRULA=999999
         IALL=1
      ENDIF
      NSRUN=0
      JSRUN=IW(NAMIND('SRUN'))
      IF (JSRUN.GT.0.AND.IW(JSRUN+IW(JSRUN)).GT.0) NSRUN=IW(JSRUN)
C----------------------------------------------------------------------
C Loop on all runs , find periods
C
      IFRUN=NRUFI-1
 10   IFRUN=IFRUN+1
      CALL BKFPER(IFRUN,0,NPER)
      IF (NPER.LE.0) GO TO 200
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.LE.0) GO TO 200
      ILRUN=ITABL(JBPER,NPER,JBPELR)
      LRUN=MIN0(NRULA,ILRUN)
      CALL BKPOIN(LECDAF,'BRUC',NPER,JBRUC)
      IF (JBRUC.LE.0) GO TO 150
C
C Loop on runs in 'BRUC' , check if they are OK for run #
C
      NRUC=LROWS(JBRUC)
      IF (NRUC.LE.0) GO TO 150
      DO 100 IRUC=1,NRUC
         IRUN=ITABL(JBRUC,IRUC,JBRURN)
         IF (IRUN.LT.IFRUN.OR.IRUN.GT.LRUN) GO TO 100
         IF (JSRUN.GT.0.AND.NSRUN.GT.0) THEN
            IF (IUCOMP(IRUN,IW(JSRUN+1),NSRUN).EQ.0) GO TO 100
         ENDIF
         CALL BKRUOK(IRUN,IPHY,IOK)
         IF (IOK.NE.0) GO TO 100
         IF (LASTPR.EQ.1.AND.IBTQSE.NE.2) THEN
            CALL BKPRLV(DNADAT(IDASEL),IRUN,0,0,ILV,IFD,ILD,IERP)
            IF (IERP.NE.0) GO TO 100
         ENDIF
C check for Lep energy :
         IF (ENGLEP.LT.0.) GO TO 50
         IELEP=ITABL(JBRUC,IRUC,JBRUTE)
         IELSE=NINT(1000.*ENGLEP)
         IF (IABS(IELSE-IELEP).GT.ITOLER) GO TO 100
C Check for date :
 50      IF (ISDATE.EQ.0) GO TO 60
         IDTE=ITABL(JBRUC,IRUC,JBRUWD)
         IF (ISDATL.GT.0) THEN
             IF (IDTE.LT.ISDATE.OR.IDTE.GT.ISDATL) GO TO 100
             GO TO 60
         ENDIF
         IF (ISDATE.LT.0.AND.IDTE.GT.ISDATE) GO TO 100
         IF (ISDATE.GT.0.AND.IDTE.LT.ISDATE) GO TO 100
C Run OK  : store period and row :
 60      NFOUN=NFOUN+1
         IF (NFOUN.GT.NRMAX) GO TO 920
         LISPR(NFOUN)=NPER
         LISRO(NFOUN)=IRUC
C Store also in / DATAFOUN / for subsequent use in PRSRUN :
         CALL BKSTORUN(0,IRUN,IERB)
 100  CONTINUE
C Next period , if any :
 150  IF (ILRUN.GE.NRULA) GO TO 200
      IFRUN=ILRUN
      GO TO 10
C----------------------------------------------------------------------
C Edition of results :
C
 200  IF (NFOUN.EQ.0) GO TO 910
C Sort the datasets in ascending order of  run numbers :
C
      CALL VZERO(NUMRU,NRMAX)
      CALL VZERO(LISRU,NRMAX)
      CALL VZERO(ITEMP,NRMAX)
      IPOLD=LISPR(1)
      NRPER=0
      NTOPR=1
C Loop on all datasets :
      DO 280 ISS=1,NFOUN
         NPER=LISPR(ISS)
         IF (NPER.NE.IPOLD) GO TO 240
 230     CALL BKPOIN(LECDAF,'BRUC',LISPR(ISS),JBRUC)
         IF (JBRUC.LE.0) GO TO 280
         NRPER=NRPER+1
         NUMRU(NRPER)=ITABL(JBRUC,LISRO(ISS),JBRURN)
         IF (ISS.EQ.NFOUN) GO TO 240
         IPOLD=NPER
         GO TO 280
C new period :
 240     CONTINUE
         CALL SORTZV(NUMRU,ITEMP,NRPER,-1,0,0)
         CALL UCOPY(ITEMP(1),LISRU(NTOPR),NRPER)
         DO 250 IJ=1,NRPER
            KK=NTOPR+IJ-1
            LISRU(KK)=LISRU(KK)+NTOPR-1
 250     CONTINUE
         IF (ISS.EQ.NFOUN.AND.NTOPR.GE.NFOUN) GO TO 290
         NTOPR=NTOPR+NRPER
         CALL VZERO(NUMRU,NRMAX)
         CALL VZERO(ITEMP,NRMAX)
         NRPER=0
         GO TO 230
C
 280  CONTINUE
 290  CONTINUE
C
      ITRM=1
      IF (IOPT.EQ.1.OR.IBKINT.LT.2) THEN
         ITRM=0
         GO TO 300
      ENDIF
C compute estimated number of lines for output
      NLINS=10+NFOUN
      IF (IPRONL.EQ.2) NLINS=20+NFOUN/7
      IF (IPRONL.EQ.3) NLINS=10+2*NFOUN
C ask if printout on terminal required :
C
      WRITE (LWRINT,1001)
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,*)  ' *      End of search on RUNS   :          *'
      WRITE (LWRINT,1015) NFOUN
      WRITE (LWRINT,*)  ' * have been found matching your requests  *'
      WRITE (LWRINT,*)  ' *******************************************'
      WRITE (LWRINT,1001)
      WRITE (LWRUSR,1001)
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' *      End of search on RUNS   :          *'
      WRITE (LWRUSR,1015) NFOUN
      WRITE (LWRUSR,*)  ' * have been found matching your requests  *'
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,1001)
      IF (NFOUN.EQ.0) GO TO 910
C
C  Option to write the output also on the screen :
C
      ITRM=0
      WRITE (LWRINT,1014) NLINS
      WRITE (LWRINT,*) '  Do you want these lines on your screen?'
      WRITE (LWRINT,*) '  Answer  Y/N    < CR> = NO  -------->'
      CALL BKRDCH(LECINT,2,LET1)
      CALL CLTOU(LET1)
      IF (LET1.EQ.'Y') ITRM=1
C
 300  CONTINUE
      IF (ITRM.GE.0) THEN
      LUN=LWRUSR
      WRITE (LUN,1001)
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,*) ' ** Printout of RUN Informations             *'
      WRITE (LUN,1002)  NRUFI,NRULA
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,1001)
      ENDIF
      IF (ITRM.EQ.1) THEN
      LUN=LWRINT
      WRITE (LUN,1001)
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,*) ' ** Printout of RUN Informations             *'
      WRITE (LUN,1002)  NRUFI,NRULA
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,1001)
      ENDIF
C----------------------------------------------------------------------
C Sort the list of runs by increasing run number :
      CALL SORTZV(LISALRUN,LISALSOR,NTOTRUNS,-1,0,0)
C Printout of results :
      IF (IPRONL.EQ.1.OR.IB1RUN.GT.0) THEN
C Properties of runs useful for Physics :
         CALL PRPHYS(ITRM,NFOUN,LISRU,LISPR,LISRO)
      ENDIF
C List of runs for given LEP energies :
      IF (IPRONL.EQ.2) THEN
         CALL PRELEP(ITRM,NFOUN,LISRU,LISPR,LISRO)
      ENDIF
      IF (IPRONL.EQ.3.OR.IB1RUN.GT.0) THEN
C Informations from Online Logbook
         CALL PRONLG(ITRM,NFOUN,LISRU,LISPR,LISRO)
      ENDIF
C List of LEP FILLS for the selected runs :
      IF (IPRONL.EQ.4) THEN
         CALL PRFILL(ITRM,NFOUN,LISRU,LISPR,LISRO)
      ENDIF
      GO TO 999
C
 910  WRITE (LWRUSR,1001)
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' * No information available                *'
      WRITE (LWRUSR,*)  ' * for these selected runs  . Sorry !      *'
      WRITE (LWRUSR,*)  ' *******************************************'
      GO TO 999
C
 920  WRITE (LWRUSR,1001)
      WRITE (LWRUSR,*)  ' *******************************************'
      WRITE (LWRUSR,*)  ' * Too many runs found !                   *'
      WRITE (LWRUSR,*)  ' * Please try again with more selections   *'
      WRITE (LWRUSR,*)  ' *******************************************'
 999  IF (IDSEAR.EQ.3) CALL PRWINX11(NFOUN,0)
      RETURN
C-----------------------------------------------------------------------
C
 1001 FORMAT (/)
 1002 FORMAT ( '  ** from Run ',I6 ,' to Run ' , I6 ,10X,'  *')
 1015 FORMAT (2X,'*',6X,I4,7X,'   Runs   ',14X,'*')
 1014 FORMAT (' *** The output will consist of ',I6,' lines')
      END
      SUBROUTINE PROPT5(NFOUN,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Steering of dataset printout for Option = 5
C  Author  J. Boucrot 14-Nov-1990
C  Completely rewritten 05-Mar-1992 for Split Year databases
C  Completely rewritten 01-Aug-1996 for Multifile tapes
C Called from BKSEXQ
C Calls BKCHKT,BKISDL,BKNPDB,BKSSTR,BKLEPL,BKOPDA     from BOOKLIB
C Calls BKFDAB,PRUNMC,PRDSET,PRRDAT,PRLEV2            from BOOKLIB
C Output arguments :
C   NFOUN = number of datasets found
C     IER = 0  All OK
C     IER = 1  if no room for BOS banks
C     IER = 2  if no room for LISTFILE ( IBM ) or no LISTFILE ( VAX )
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- DLTFILES ----
      PARAMETER ( NFIDL = 999  )
      CHARACTER*8 TAPDLT
      COMMON / ITSDLT / NFIDLT,IMCDLT,LISBDF(NFIDL),LISORD(NFIDL),
     +                  LISFIL(NFIDL),LISPDL(NFIDL)
      COMMON / TAPSDL / TAPDLT(NFIDL)
      PARAMETER ( NDBS = 10 )
      INTEGER LIPTA(NTPMX),LIBDF(NTPMX),LIMCD(NTPMX)
      INTEGER LISDB(NDBS),ITAP(2),BKINCA
      CHARACTER*8 NAMB,TAPN,OLTA,TALOC(NTPMX)
         CHARACTER TEXTX11*80
      COMMON / LEV2HE / IHEADF
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      ITOK=0
      NFOUN=0
      NNOT=0
      IF (IDSEAR.NE.5) GO TO 999
      IBPRUS=3
      IF (NTAPKY.LE.0) GO TO 600
      CALL VZERO(LIPTA,NTPMX)
      CALL VZERO(LIBDF,NTPMX)
      CALL VZERO(LIMCD,NTPMX)
      CALL VZERO(LISDB,NDBS)
      NDBUS=0
C
C Loop on all cartridges :
C
      DO 200 I=1,NTAPKY
         TAPN=LISTAP(I)
         IFTAP=0
         CALL BKCHKT(TAPN,ICERN,IMULT,IDLT,IEROR)
         IF (IEROR.NE.0) GO TO 110
         IFILE=BKINCA(LISDSN(I))
C Special printout if RAW data of 1989 -> 1994
         CALL PROPT5RW(TAPN,IFOUN)
         IF (IFOUN.GT.0) THEN
            ITOK=ITOK+IFOUN
            NFOUN=NFOUN+IFOUN
            GO TO 200
         ENDIF
C Multifile DLT or 3490 to be expanded :
         IF (IMULT.GT.0.AND.TAPN(7:8).EQ.'  '.AND.IFILE.EQ.0) THEN
            CALL BKISDL(TAPN,2,IDLL)
            IF (NFIDLT.EQ.0) GO TO 110
            NFOUN=NFOUN+1
            IFTAP=1
            DO 80 IDL=1,NFIDLT
               CALL BKNPDB(LISPDL(LISORD(IDL)),NDB)
               IF (NDB.LE.0) GO TO 80
               ITOK=ITOK+1
               IF (ITOK.GT.NTPMX) THEN
                  WRITE (LWRUSR,1003) ITOK
                  GO TO 910
               ENDIF
               LIPTA(ITOK)=NDB
               LIMCD(ITOK)=IMCDLT
               LIBDF(ITOK)=LISBDF(LISORD(IDL))
               IND=IUCOMP(NDB,LISDB,NDBUS)
               IF (IND.EQ.0) THEN
                  NDBUS=NDBUS+1
                  LISDB(NDBUS)=NDB
               ENDIF
 80         CONTINUE
C Tape with 1 single file ( e.g. 3480 ) , or 1 file of a DLT/3490 ,
C or AR RAW DLT of 1995 onwards :
         ELSE
         CALL PROPT5ST(TAPN,IMULT,IFILE,IMCD,NROK)
         IF (IMCD.EQ.0.OR.NROK.EQ.0) GO TO 110
            IFTAP=1
            JBDFS=NLINK('BDFS',IMCD)
            KBDFS=KROW(JBDFS,NROK)
            NPER=IW(KBDFS+JBDFNP)
            CALL BKNPDB(NPER,NDB)
            IF (NDB.LE.0) GO TO 110
            ITOK=ITOK+1
            IF (ITOK.GT.NTPMX) THEN
               WRITE (LWRUSR,1003) ITOK
               GO TO 910
            ENDIF
            NFOUN=NFOUN+1
            LIPTA(ITOK)=NDB
            LIMCD(ITOK)=IMCD
            LIBDF(ITOK)=NROK
            IND=IUCOMP(NDB,LISDB,NDBUS)
            IF (IND.EQ.0) THEN
               NDBUS=NDBUS+1
               LISDB(NDBUS)=NDB
            ENDIF
            GO TO 200
         ENDIF
C Tape not found in the database :
 110  IF (IFTAP.EQ.0) THEN
         WRITE (LWRUSR,1001) LISTAP(I)
         NNOT=NNOT+1
         IF (IBKINT.EQ.-1.AND.NNOT.EQ.1) THEN
            TEXTX11='Tape '//LISTAP(I)//' not found !'
            CALL PRWARNX11(TEXTX11)
         ENDIF
      ENDIF
 200  CONTINUE
C
C Now loop on all databases and print in turn the right debugs :
C
      IF (NFOUN.EQ.0) GO TO 999
      IF (NDBUS.EQ.0) GO TO 500
      DO 400 NDB=1,NDBUS
         NUDB=LISDB(NDB)
         CALL BKOPDA(PERDBS(NUDB),IERL)
         IF (IERL.NE.0) GO TO 400
         ISAVE=IBPRUS
         IBPRUS=2
         WRITE (LWRUSR,1010)
         DO 250 IKL=1,ITOK
            IF (LIPTA(IKL).NE.NUDB) GO TO 250
            IMCDAT=LIMCD(IKL)
            IF (IKL.EQ.1) IHEADF=1
            IF (IKL.GT.1) IHEADF=0
            CALL PRLEV2(IBPRUS,LIBDF(IKL))
 250     CONTINUE
         IBPRUS=ISAVE
         IHEADF=2
         WRITE (LWRUSR,1011)
         DO 300 IKK=1,ITOK
            IF (LIPTA(IKK).NE.NUDB) GO TO 300
            IMCDAT=LIMCD(IKK)
            CALL PRLEV2(IBPRUS,LIBDF(IKK))
 300     CONTINUE
 400  CONTINUE
 500  CONTINUE
      IF (IBKINT.EQ.2) WRITE ( LWRINT, 1004 ) ITOK
      IF (IBKINT.EQ.-1) NFOUN=ITOK
      GO TO 999
C----------------------------------------------------------------------
C All available info on a given run :
 600     SELMAG='A'
         IF (SELDAT.EQ.' ') SELDAT='A'
         ISRUNF=IB1RUN
         ISRUNL=IB1RUN
C MCarlo run :
         IF (IB1RUN.GT.0.AND.IB1RUN.LE.LRUNMC) THEN
            IMCDAT=2
            IFAKFA=0
            CALL PRUNMC(NFOUN,IER)
            GO TO 999
         ENDIF
C Real data run:
         IF (IB1RUN.GT.LRUNMC.AND.IMCDAT.EQ.1) THEN
         CALL BKLEPL
      IF (IBKINT.EQ.-1) THEN
         IYEASL=0
         CALL BKVYEAR(IER)
      ENDIF
C Find the run in the Online Logbook ; quit if not found :
         CALL PROPT3(1,ISRUNF,0,NFOUN)
         IF (NFOUN.LE.0) GO TO 999
C Find disk files containing this run :
         CALL BKFDAB(IB1RUN,0,NR,NAMB,IER1)
         IF (IER1.NE.0) GO TO 999
         CALL BKOPDA(NAMB,IERL)
         IF (IERL.NE.0) GO TO 999
         IOPT=0
      NREFR=0
         CALL PRDSET(IOPT,2,NFOUN,IER)
         IF (ISCQUI.GT.0.OR.IER.NE.0) GO TO 999
      NREFR=NREFR+1
C Find Cartridges containing this run :
         IOPT=1
         CALL PRDSET(IOPT,1,NFOUN,IER)
         IF (ISCQUI.GT.0.OR.IER.NE.0) GO TO 999
      NREFR=NREFR+1
      IF (IBKINT.EQ.2) WRITE ( LWRINT , 1002 ) IB1RUN
      ENDIF
      GO TO 999
C Too many datasets :
 910  IER=1
C
 999  CALL PRWINX11(NFOUN,0)
      RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/' ****   Tape ',2X,A8,' NOT found in the database !'/)
 1002 FORMAT (/5X,'>>>>> Several References found for run ',I7/,
     +        11X,'See the details on the OUTPUT file <<<<<'/)
 1003 FORMAT (/' ****   PROPT5 : Too many datasets = ',I5/,
     +        11X,'Please resubmit with less input tapes<<<<'/)
 1004 FORMAT (/5X,'>>>>> ',I6,' datasets found for this input'/,
     +        11X,'See the details on the OUTPUT file <<<<<'/)
 1010 FORMAT (/5X,'***** PROPT5 Printout Summary *****'/)
 1011 FORMAT (/5X,'***** PROPT5 Detailed Printout*****'/)
      END
      SUBROUTINE PROPT5RW(TAPE,IFFOU)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print datasets on AA/AR RAWs for Option 5
C   Author   J. Boucrot   03-OCT-1997
C Called from PROPT5                             from  BOOKLIB
C Calls BKAARU,PRFINDAA,PRDATAA,PRDATAR,BKSTORUN from  BOOKLIB
C Calls ALSTIN,BKINCA                            from  ALEPHLIB
C Input argument :
C   TAPE   =  input tape to be printed
C  Output argument :
C   IFFOU  =  1 or more if datasets found
C          =  0 otherwise
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BRDLJJ ----
      PARAMETER(JBRDTC=1,JBRDLO=3,JBRDFN=4,JBRDRN=5,LBRDLA=5)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
      CHARACTER TAPE*8,TAPAR*8
      PARAMETER ( NRAA = 20 )
      INTEGER BKINCA,IARFL(2),IARCE(2),LIRU(NRAA)
C Common to communicate the results to the printout routine
      PARAMETER (NAARX = 4000)
      COMMON / IARLIS /  IARCUR,LARROW(NAARX)
      DATA  IARFL  /  2001  ,  2138 /
      DATA  IARCE  /  3029  ,  3138 /
      DATA  IAANA  /  8000 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IFFOU=0
C Find if the tape is a LEP1 RAW of 1989 -> 1994 :
      IAA=0
      IAR=0
      IANUM=BKINCA(TAPE(3:6))
      IF (TAPE(1:2).EQ.'AA'.AND.IANUM.LT.IAANA) THEN
         IAA=1
         ILABCH=1
      ENDIF
      IF (TAPE(1:2).EQ.'AR') THEN
         IF (IANUM.GE.IARFL(1).AND.IANUM.LE.IARFL(2)) THEN
            IAR=1
            ILABCH=13
         ENDIF
         IF (IANUM.GE.IARCE(1).AND.IANUM.LE.IARCE(2)) THEN
            IAR=1
            ILABCH=1
         ENDIF
      ENDIF
      IF (IAA.EQ.0.AND.IAR.EQ.0) GO TO 999
      IDASEL=2
      IWFILI=0
      ENGLEP=-1.
      ISELPH=0
C
C Printout for an 'AA' tape :
C
      IF (IAA.EQ.1) THEN
         CALL BKAARU(TAPE,0,0,LIRU,NRRU,IEROR)
         IF (NRRU.LE.0.OR.IEROR.GT.0) GO TO 999
         ISRUNF=LIRU(1)
         ISRUNL=LIRU(NRRU)
         IRAWAA=1
         CALL BKFINDAA(NFOUN,IERAA)
         IF (IERAA.NE.0) GO TO 999
         IFFOU=IFFOU+NFOUN
         CALL PRDATAA(IER)
         NTOTRUNS=0
         CALL VZERO(LISALRUN,NTODT)
         GO TO 999
      ENDIF
C
C Printout of the content of a full 'AR' tape:
C
      IF (IAR.EQ.0) GO TO 999
      IRAWD2=1
      JBRDL=NAMIND('BRDL')+1
 100  JBRDL=IW(JBRDL-1)
      IF (JBRDL.EQ.0) GO TO 300
      ISYEAR=IW(JBRDL-2)
      NYEA=0
      DO 200 IBRDL=1,LROWS(JBRDL)
         KBRDL=KROW(JBRDL,IBRDL)
         CALL ALSTIN(IW(KBRDL+JBRDTC),2,TAPAR)
         IF (TAPAR(1:6).NE.TAPE(1:6)) GO TO 200
         IRUN=IW(KBRDL+JBRDRN)
         CALL BKSTORUN(0,IRUN,IERU)
         LARROW(NTOTRUNS)=IBRDL
         NYEA=NYEA+1
 200  CONTINUE
      IF (NYEA.GT.0) GO TO 300
      GO TO 100
C Tape found, print it
 300  IF (NTOTRUNS.LE.0) GO TO 999
      IFFOU=IFFOU+NYEA
      CALL PRDATAR(IER)
      NTOTRUNS=0
      CALL VZERO(LISALRUN,NTODT)
C
 999  RETURN
      END
      SUBROUTINE PROPT5ST(TAPE,IMUL,IFILE,IMCD,IROW)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Finds TAPE with file IFILE in BDFS banks
C  Author  J. Boucrot 04-Feb-1998
C Called from PROPT5                               from BOOKLIB
C Calls ALSTIN                                     from ALEPHLIB
C Input  arguments :
C    TAPE = tape name (6 chars)
C    IMUL = 1 if multifile device , = 0 otherwise
C   IFILE = file number on tape on multifile device
C Output arguments :
C   IMCD  = 1 for data , 2 for MCarlo
C   IROW  = BDFS , NR = IMCD row number of dataset
C         = if not found
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
      CHARACTER TAPE*6,TAPB*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IROW=0
      IMCD=0
      DO 500 IMC=1,2
         JBDFS=NLINK('BDFS',IMC)
         IF (JBDFS.EQ.0) GO TO 999
         NBDFS=LROWS(JBDFS)
         DO 300 IBDFS=1,NBDFS
            KBDFS=KROW(JBDFS,IBDFS)
            CALL ALSTIN(IW(KBDFS+JBDFTC),2,TAPB)
            IF (TAPB(1:6).NE.TAPE) GO TO 300
            IF (IMUL.GT.0.AND.IFILE.GT.0) THEN
               IF (IW(KBDFS+JBDFFN).NE.IFILE) GO TO 300
            ENDIF
            IMCD=IMC
            IROW=IBDFS
            GO TO 999
 300     CONTINUE
 500  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE PRPERS(LUN)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print the list of periods
C  J. Boucrot  04-Dec-1989
C  Called from BKSEAR
C  Calls BKFPER,BKPOIN,BKDAIC                             from BOOKLIB
C  Calls ALSTIN                                           from ALEPHLIB
C   Input argument :
C   LUN = Fortran unit onto which the result is printed
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
      CHARACTER COMP*40,CDAT1*8,CDAT2*8,CTIM*8
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.EQ.0) GO TO 999
      WRITE ( LUN,1002)
      WRITE ( LUN,1001)
      WRITE ( LUN,1002)
      NPERS=LROWS(JBPER)
      ITIM=0
C
C Loop on all periods  :
C
      DO 20 IPER=1,NPERS
         KBPER=KROW(JBPER,IPER)
         CALL ALSTIN(IW(KBPER+JBPEPA),JBPEPN-JBPEPA,COMP)
         LPER=IW(KBPER+JBPEPN)
         IFI1=IW(KBPER+JBPEFE)
         IFI2=IW(KBPER+JBPELE)
         IRU1=IW(KBPER+JBPEFR)
         IRU2=IW(KBPER+JBPELR)
         IDA1=IW(KBPER+JBPEFD)
         IDA2=IW(KBPER+JBPELD)
         CALL BKDAIC(1,IDA1,ITIM,CDAT1,CTIM)
         CALL BKDAIC(1,IDA2,ITIM,CDAT2,CTIM)
         WRITE (LUN,1003) LPER,COMP,IFI1,IFI2,IRU1,IRU2,
     +                       CDAT1,CDAT2
 20   CONTINUE
      WRITE ( LUN,1002)
C
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (T2,'Period',T25,'Comments',T56,'LEP Fills',
     +        T72,'Runs',T88,'Dates')
 1002 FORMAT (1X,99(1H-))
 1003 FORMAT (I6,T12,A40,T55,I4,T61,I4,T68,I5,T74,I5,
     +        T82,A8,T91,A8)
      END
      SUBROUTINE PRPHYS(ITRM,NFOUN,LISRU,LISPR,LISRO)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print RUN Physics Properties
C  Author  J.Boucrot 07-Dec-1989  Modified 03-Mar-1990
C  Modified 25-May-1991 for Physics Groups Selections
C  Modified 15-Jan-1993 for SICAL Lumi printout
C  Modified 17-Jun-1994 for new RUN_QUAL for 1994
C  Modified 21-Sep-1995 for LEP II running
C Called from PRRDAT                          from BOOKLIB
C Calls  BKPOIN,BKFPER,PR4BUN,PRPHY2          from BOOKLIB
C Calls  ALSTIN                               from ALEPHLIB
C Input arguments :
C  ITRM  = 1 if printout required on terminal , = 0 otherwise
C  NFOUN =   Number of runs found from user's selection
C  LISRU =   List of addresses of sorted runs in BRUC bank
C  LISPR =   List of BRUC bank numbers for selected runs
C  LISRO =   List of ROW # in BRUC banks for selected runs
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
      PARAMETER ( NOLCA = 20000 )
      CHARACTER*11 TWARN(3)
      CHARACTER*4 BLLUM(4),BLQUA(4)
      CHARACTER*2 PHG(NGPHY)
      CHARACTER DET94*24,DRUQ*24,DEF94*24,DPAT*12
      INTEGER LISRU(*),LISPR(*),LISRO(*)
      INTEGER NZTOT(NLEPE),NBATO(NLEPE),IWARN(NLEPE),IWARZ(NLEPE)
      INTEGER NBASI(NLEPE),IWARS(NLEPE),NRUZ0(NLEPE),NRULC(NLEPE)
      INTEGER NRUSI(NLEPE),NZ0LC(NLEPE),NZ0SI(NLEPE)
      DOUBLE PRECISION ZLUTO(NLEPE),ZLUSI(NLEPE),ZLULC,ZLUSC
      LOGICAL BTEST
      DATA BLLUM  / 'Unkn' , 'Prov' , 'OK  ' ,'Undf' /
      DATA BLQUA  / '????' , 'DUCK' , 'MAYB' , 'PERF' /
      DATA TWARN / 'Definitive ' , 'Provisional' , 'Undefined  ' /
      DATA DET94  / 'V I T E H S L t D R     ' /
      DATA DEF94  / '? ? ? ? ? ? ? ? ? ?     ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IRU94=MIRU94
      NR4BU=MIR4BU
      MINSI=MINSIC
      MAXSI=MXLRU1
C If High Energy runs in 1995 and after , special printout needed :
      IF (ISRUNF.GE.MAXSI.OR.ENGLEP.GT.100.) THEN
         CALL PRPHY2(ITRM,ISRUNF,NFOUN,LISRU,LISPR,LISRO)
         GO TO 999
      ENDIF
C Various initialisations :
C
      IF (NFOUN.LE.0) GO TO 999
      IRBAL=0
      IRBAS=0
C Determine if current display will contain runs of 1994 and after :
      IF94=1
      IF (IW(NAMIND('BDRQ')).EQ.0) IF94=0
      IF (ISRUNF.LT.IRU94.AND.ISRUNL.LT.IRU94) IF94=0
C Find the last run # with definitive LUMI :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 999
      LASOK=ITABL(JBLAS,1,JBLALU)
C Find if SICAL printout requested :
      ISIOK=0
      JBSLU=IW(NAMIND('BSLU'))
      IF (ISRUNL.GE.MINSI.AND.JBSLU.GT.0.AND.ENGLEP.LT.100.) ISIOK=1
C Find if LCAL printout requested :
      ILCOK=1
      IF (ISRUNF.GE.NOLCA)  ILCOK=0
C Find if 4-bunch printout is necessary :
      IF4BU=0
      IF (ISRUNL.GT.NR4BU) IF4BU=1
C Print general header :
      CALL PRPHYW(1,LWRUSR)
      IF (IF94.EQ.1) WRITE (LWRUSR,1012)
      WRITE ( LWRUSR,1001)
      IF (IF94.EQ.1) THEN
         WRITE (LWRUSR,1013) DET94
         WRITE (LWRUSR,1001)
         GO TO 10
      ENDIF
      IF (ISIOK.EQ.0.OR.ILCOK.EQ.0)  WRITE ( LWRUSR,1002)
      IF (ISIOK.EQ.1.AND.ILCOK.EQ.1) WRITE ( LWRUSR,2002)
      WRITE ( LWRUSR,1001)
 10   IF (ITRM.EQ.0) GO TO 20
      IF (IF94.EQ.1) WRITE (LWRINT,1012)
      CALL PRPHYW(1,LWRINT)
      WRITE ( LWRINT,1001)
      IF (IF94.EQ.1) THEN
         WRITE (LWRINT,1013) DET94
         WRITE (LWRINT,1001)
         GO TO 20
      ENDIF
      IF (ISIOK.EQ.0.OR.ILCOK.EQ.0)  WRITE ( LWRINT,1002)
      IF (ISIOK.EQ.1.AND.ILCOK.EQ.1) WRITE ( LWRINT,2002)
      WRITE ( LWRINT,1001)
 20   CONTINUE
      DO 25 II=1,NLEPE
         NZTOT(II)=0
         NBATO(II)=0
         IWARN(II)=0
         ZLUSI(II)=0.
         IWARS(II)=0
         NBASI(II)=0
         IWARZ(II)=0
         NRUSI(II)=0
         NRULC(II)=0
         NRUZ0(II)=0
         NZ0LC(II)=0
         NZ0SI(II)=0
         ZLUTO(II)=0.
 25   CONTINUE
      IRLHE=0
C----------------------------------------------------------------------
C Loop on all runs found and print the content :
C
      DO 80 IRU=1,NFOUN
C Find run number from bank 'BRUC' :
         CALL BKPOIN(LECDAF,'BRUC',LISPR(IRU),JBRUC)
         IF (JBRUC.LE.0) GO TO 80
         ISR=LISRU(IRU)
         IF (ISR.LE.0) GO TO 80
         IKH=LISRO(ISR)
         IRUN=ITABL(JBRUC,IKH,JBRURN)
         IF (IRUN.GT.MAXSI) THEN
            IRLHE=IRUN
            GO TO 90
         ENDIF
C get all quantities to be printed :
         INOM=ITABL(JBRUC,IKH,JBRUNE)
         ILEP=ITABL(JBRUC,IKH,JBRUTE)
         IDTO=ITABL(JBRUC,IKH,JBRUWD)
         ENOM=0.001*FLOAT(INOM)
         ELEP=0.001*FLOAT(ILEP)
         NLEPO=NINT(ELEP/EROUND)
         ILEPR=NLEPO*IROUND
         ENOM=0.001*FLOAT(ILEPR)
         NEVT=ITABL(JBRUC,IKH,JBRUEF)
         IF ( NEVT.LE.0) NEVT=ITABL(JBRUC,IKH,JBRUEV)
         NZHA=ITABL(JBRUC,IKH,JBRUNZ)
         NBHA=ITABL(JBRUC,IKH,JBRUNB)
         RLUM=RTABL(JBRUC,IKH,JBRULU)
         IF (RLUM.LT.0.) RLUM=0.
C Determine run_quality :
         ICS=ITABL(JBRUC,IKH,JBRUCS)
         IPH=ITABL(JBRUC,IKH,JBRUBR)
         IPQUA=1
         DO 28 IP=1,3
            IF (BTEST(IPH,IP-1)) THEN
               IPQUA=IP+1
               GO TO 30
            ENDIF
 28      CONTINUE
C Determine if LUMI is unknown , provisional or definitive :
 30      IF (ICS.GE.-1) THEN
            IQUAL=(1+ICS)/10
         ELSE
            IQUAL=-1
         ENDIF
         ILUM=ICS-10*IQUAL
         ICRS=ILUM+2
         IF (ILUM.LT.0.OR.ILUM.GT.1.OR.RLUM.LE.0.) ICRS=1
         IF (RLUM.GT.0.) ICRS=2
         IF (IRUN.LE.LASOK.AND.RLUM.GT.0.AND.ILUM.EQ.1) ICRS=3
         IF (ICRS.LE.1) IRBAL=1
C Physics groups for which this run is ACCEPTED :
         CALL PRPHYZ(IPH,PHG)
C Get SICAL lumi , and lumi status , if any
         IRUS=0
         XSIC=0.
         NBSIC=0
         ISIC=4
         IF (IRUN.LT.MINSI) GO TO 45
         CALL BKFPER(IRUN,0,NPRU)
         IF (NPRU.LE.0) GO TO 45
         CALL BKPOIN(LECDAF,'BSLU',NPRU,JBSLU)
         IF (JBSLU.LE.0) GO TO 45
         DO 40 ISL=1,LROWS(JBSLU)
            IF (ITABL(JBSLU,ISL,JRSLRN).NE.IRUN) GO TO 40
            IRUS=ISL
            GO TO 41
 40      CONTINUE
 41      IF (IRUS.EQ.0) GO TO 45
         KBSLU=KROW(JBSLU,IRUS)
         ISIC=1+IW(KBSLU+JRSLLQ)
         NBSIC=IW(KBSLU+JRSLNB)
         XSIC=RW(KBSLU+JRSLLU)
         IF (XSIC.LT.0.) XSIC=0.
 45      CONTINUE
         IF (ISIC.EQ.4.OR.NBSIC.LT.0.OR.XSIC.EQ.0.) IRBAS=1
C Build the detector pattern for data taken in 1994 and after :
         IF (IF94.EQ.0) GO TO 55
         DRUQ=DEF94
         CALL BKPOIN(LECDAF,'BDRQ',LISPR(IRU),JBDRQ)
         IF (JBDRQ.LE.0) GO TO 55
         DO 50 IBDRQ=1,LROWS(JBDRQ)
            KBDRQ=KROW(JBDRQ,IBDRQ)
            IF (IW(KBDRQ+JBDRRN).NE.IRUN) GO TO 50
            CALL ALSTIN(IW(KBDRQ+JBDRDP),LBDRQA-JBDRRN,DPAT)
            DO 48  IK=1,12
               IDD=1+2*(IK-1)
 48         DRUQ(IDD:IDD)=DPAT(IK:IK)
            GO TO 55
 50      CONTINUE
 55      CONTINUE
C write the informations :
         IF (IF94.EQ.0) GO TO 61
C printout for year 1994 and after :
         WRITE ( LWRUSR,1014) IRUN,IDTO,ELEP,NEVT,NZHA,NBSIC,
     +         XSIC,BLLUM(ISIC),BLQUA(IPQUA),(PHG(KI),KI=1,11),DRUQ
         IF (ITRM.EQ.0) GO TO 75
         WRITE ( LWRINT,1014) IRUN,IDTO,ELEP,NEVT,NZHA,NBSIC,
     +         XSIC,BLLUM(ISIC),BLQUA(IPQUA),(PHG(KI),KI=1,11),DRUQ
         GO TO 75
C printout for years before 1994 :
 61      IF (ISIOK.EQ.0) GO TO 70
         IF (ILCOK.EQ.1) GO TO 65
         WRITE ( LWRUSR,1011) IRUN,IDTO,ELEP,NEVT,NZHA,NBSIC,
     +         XSIC,BLLUM(ISIC),BLQUA(IPQUA),(PHG(KI),KI=1,10)
         IF (ITRM.EQ.0) GO TO 75
         WRITE ( LWRINT,1011) IRUN,IDTO,ELEP,NEVT,NZHA,NBSIC,
     +         XSIC,BLLUM(ISIC),BLQUA(IPQUA),(PHG(KI),KI=1,10)
         GO TO 75
 65      WRITE ( LWRUSR,2011) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,
     +         RLUM,BLLUM(ICRS),NBSIC,XSIC,BLLUM(ISIC),
     +         BLQUA(IPQUA),(PHG(KI),KI=1,10)
         IF (ITRM.EQ.0) GO TO 75
         WRITE ( LWRINT,2011) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,
     +         RLUM,BLLUM(ICRS),NBSIC,XSIC,BLLUM(ISIC),
     +         BLQUA(IPQUA),(PHG(KI),KI=1,10)
         GO TO 75
 70      WRITE ( LWRUSR,1011) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,
     +         RLUM,BLLUM(ICRS),BLQUA(IPQUA),(PHG(KI),KI=1,10)
         IF (ITRM.EQ.0) GO TO 75
         WRITE ( LWRINT,1011) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,
     +         RLUM,BLLUM(ICRS),BLQUA(IPQUA),(PHG(KI),KI=1,10)
C store the accumulated statistics per LEP energy :
 75      IF (ISELPH.LE.0) GO TO 80
         NLI=IUCOMP(ILEPR,ILEPEN,NLEPSF)
         IF (NLI.LE.0) GO TO 80
         IF (ICRS.LE.2) IWARN(NLI)=1
         ZLUTO(NLI)=ZLUTO(NLI)+DBLE(RLUM)
         NRUZ0(NLI)=NRUZ0(NLI)+1
         IF (IRUN.GT.LASOK) IWARZ(NLI)=1
         IF (NLI.LE.0) GO TO 80
         IF (NZHA.GT.0)    NZTOT(NLI)=NZTOT(NLI)+NZHA
         IF (ICRS.LT.2.AND.ISIC.LT.2) GO TO 80
         IF (NBHA.GT.0) THEN
            NBATO(NLI)=NBATO(NLI)+NBHA
            NRULC(NLI)=NRULC(NLI)+1
            IF (NZHA.GT.0) NZ0LC(NLI)=NZ0LC(NLI)+NZHA
         ENDIF
         IF (ISIOK.EQ.1.AND.(ISIC.EQ.2.OR.ISIC.EQ.3)) THEN
            IF (ISIC.EQ.2) IWARS(NLI)=1
            ZLUSI(NLI)=ZLUSI(NLI)+DBLE(XSIC)
            IF (NBSIC.GT.0) THEN
               NBASI(NLI)=NBASI(NLI)+NBSIC
               NRUSI(NLI)=NRUSI(NLI)+1
               IF (NZHA.GT.0) NZ0SI(NLI)=NZ0SI(NLI)+NZHA
            ENDIF
         ENDIF
 80   CONTINUE
C----------------------------------------------------------------------
C Print statistics per LEP energy :
C
 90   IF (NLEPSF.LE.0.OR.ISELPH.LE.0) GO TO 400
      WRITE ( LWRUSR,1020)
      IF (ITRM.NE.0) WRITE ( LWRINT,1020)
C Number of Hadronic Z0s :
      NTOZZ=0
      DO 100 ILEP=1,NLEPSF
         IF (NZTOT(ILEP).LE.0) GO TO 100
         NTOZZ=NTOZZ+NZTOT(ILEP)
         ELEP=0.001*FLOAT(ILEPEN(ILEP))
         KK=IWARZ(ILEP)+1
         WRITE (LWRUSR,1022) ELEP,NRUZ0(ILEP),
     +                       NZTOT(ILEP),TWARN(KK)
         IF (ITRM.EQ.0) GO TO 100
         WRITE (LWRINT,1022) ELEP,NRUZ0(ILEP),
     +                       NZTOT(ILEP),TWARN(KK)
 100  CONTINUE
      WRITE ( LWRUSR,1023) NTOZZ
      IF (ITRM.NE.0) WRITE ( LWRINT,1023) NTOZZ
C LCAL Luminosity :
      IF (ILCOK.EQ.0) GO TO 210
      WRITE ( LWRUSR,2021)
      IF (ITRM.NE.0) WRITE ( LWRINT,2021)
      ZLULC=0.
      DO 200 ILEP=1,NLEPSF
         IF (NZTOT(ILEP).LE.0) GO TO 200
         ZLULC=ZLULC+ZLUTO(ILEP)
         ELEP=0.001*FLOAT(ILEPEN(ILEP))
         KK=IWARN(ILEP)+1
         IF (NBATO(ILEP).LE.0) KK=3
         WRITE (LWRUSR,2022) ELEP,NRULC(ILEP),NBATO(ILEP),ZLUTO(ILEP),
     +                       TWARN(KK),NZ0LC(ILEP)
         IF (ITRM.EQ.0) GO TO 200
         WRITE (LWRINT,2022) ELEP,NRULC(ILEP),NBATO(ILEP),ZLUTO(ILEP),
     +                       TWARN(KK),NZ0LC(ILEP)
 200  CONTINUE
      WRITE ( LWRUSR,2023) ZLULC
      IF (ITRM.NE.0) WRITE ( LWRINT,2023) ZLULC
      IF (IRBAL.EQ.1) WRITE ( LWRUSR , 2024 )
C SICAL Luminosity :
 210  IF (ISIOK.EQ.0) GO TO 400
      WRITE ( LWRUSR,3021)
      IF (ITRM.NE.0) WRITE ( LWRINT,3021)
      ZLUSC=0.
      DO 300 ILEP=1,NLEPSF
         IF (NZTOT(ILEP).LE.0) GO TO 300
         ZLUSC=ZLUSC+ZLUSI(ILEP)
         ELEP=0.001*FLOAT(ILEPEN(ILEP))
         KK=IWARS(ILEP)+1
         IF (NBASI(ILEP).LE.0) KK=3
         WRITE (LWRUSR,2022) ELEP,NRUSI(ILEP),NBASI(ILEP),ZLUSI(ILEP),
     +                       TWARN(KK),NZ0SI(ILEP)
         IF (ITRM.EQ.0) GO TO 300
         WRITE (LWRINT,2022) ELEP,NRUSI(ILEP),NBASI(ILEP),ZLUSI(ILEP),
     +                       TWARN(KK),NZ0SI(ILEP)
 300  CONTINUE
      WRITE ( LWRUSR,2023) ZLUSC
      IF (ITRM.NE.0) WRITE ( LWRINT,2023) ZLUSC
      IF (IRBAS.EQ.1.AND.ISIOK.EQ.1) WRITE ( LWRUSR , 3025 )
C Perform 4-bunch printout if necessary :
 400  IF (IF4BU.EQ.1) CALL PR4BUN(NFOUN,LISRU,LISPR,LISRO)
C
C 1995 runs with High Energy ( LCAL Lumi only ) requested : special prin
      IF (IRLHE.EQ.0) GO TO 999
      CALL PRPHY2(ITRM,IRLHE,NFOUN,LISRU,LISPR,LISRO)
 999  RETURN
C----------------------------------------------------------------------
C all formats :
 1000 FORMAT (/)
 1001 FORMAT (1X,125(1H-))
 1002 FORMAT (T3,'Run',T8,1H|,T10,'Date  ',T17,1H|,T21,'Exact',
     +        T27,1H|,T29,'Number of Events :',T47,1H|,T48,
     +        'Luminosity',T58,1H|,T65,'Status   of   '/
     +        T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,
     +        T29,'Total Z->Had  Bhab',T47,1H|,T50,'nb**-1',
     +        T58,1H|,T60,'Lumi',T65,'RunQ',T78,'Physics Group ',
     +        'Selections :')
 1011 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T28,I6,T36,I4,
     +        T42,I4,T47,1H|,T50,F7.3,T58,1H|,T60,A4,T65,A4,T72,
     +        20(A2,1X))
 1012 FORMAT (/3X,'===>  For data taken in 1994 onwards :'/,
     +       9X,'the Detector Run_Quality is given in this order :'/,
     +       9X,'Vdet Itc Tpc Ecal Hcal Sical Lcal trigger Daq Run_',
     +       'Coordinator'/,9X,'For each detector : D for DUCK'/,
     +       29X,'M for MAYB'/,29X,'P for PERF'//)
 1013 FORMAT (T3,'Run',T8,1H|,T10,'Date  ',T17,1H|,T21,'Exact',
     +        T27,1H|,T29,'Number of Events :',T47,1H|,T48,
     +        'SICAL Lumi',T58,1H|,T65,'Status   of   ',
     +        T105,1H|,T107,'Detector Run_Quality'/,
     +        T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,
     +        T29,'Total Z->Had  Bhab',T47,1H|,T50,'nb**-1',
     +        T58,1H|,T60,'Lumi',T65,'RunQ',T73,'Physics Group ',
     +        'Selections :',T105,1H|,T107,A24)
 1014 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T28,I6,T36,I4,
     +        T42,I4,T47,1H|,T50,F7.3,T58,1H|,T60,A4,T65,A4,T72,
     +        11(A2,1X),T105,1H|,T107,A24)
 1020 FORMAT (// ' ** General statistics for above GOOD RUNS :'//,
     +       10X,' ====>  In the TABLE below :  <===='//,
     +       15X,'For  < Status of Z0 -> Hadr > item :',/
     +       1X,'Provisional : CLAS 16 events from Julia on FALCON'/,
     +       1X,'Definitive  : CLAS 16 + XLUMOK -> final numbers'//,1X,
     +       60(1H-)/T2,'Nominal LEP',T15,1H|,T17,'Number of',T28,1H|,
     +       T30,'Number of',T42,1H|,T44,'Status of '/
     +       T2,'Energy (Gev)',T15,1H|,T17,'Good Runs',
     +       T28,1H|,T30,'Z0 -> Hadr',T42,1H|,T44,'Z0 -> Hadrons',
     +       /1X,60(1H-))
 1021 FORMAT (T2,'Nominal LEP',T15,1H|,T17,'Number of',T28,1H|,
     +        T30,'Number of',T42,1H|,T44,'Luminosity',T54,1H|,
     +        T56,'Comment'/T2,'Energy (Gev)',T15,1H|,T17,'Z0 -> Hadr',
     +        T28,1H|,T30,'Bhabhas',T42,1H|,T46,'nb**-1',T54,1H|,
     +        T56,'on Luminosity')
 1022 FORMAT (T2,F7.3,T15,1H|,T17,I7,T28,1H|,T30,I7,T42,1H|,T44,A11)
 1023 FORMAT (/' ***** Grand Total = ',I8,' Hadronic Z0s for this',
     +         ' selection *****'/)
 2002 FORMAT (T3,'Run',T8,1H|,T10,'Date  ',T17,1H|,T21,'Exact',
     +        T27,1H|,T29,'Nb of Evts',T40,1H|,T44,'LCAL  ',
     +        'Luminosity',T61,1H|,T64,'SICAL Luminosity',T82,1H|,
     +        T89,'Status of',/
     +        T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,
     +        T29,'Total ZHad',T40,1H|,T42,'NBhab  nb**-1 stat',
     +        T61,1H|,T63,'NBhab  nb**-1 stat',T82,1H|,
     +        T84,'RunQ',T91,'Physics Group Selections :')
 2011 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T28,I6,T35,I4,
     +        T40,1H|,T42,I4,T47,F7.3,T56,A4,T61,1H|,T62,I5,T69,F7.3,
     +        T77,A4,T82,1H|,T84,A4,T91,10(A2,1X))
 2021 FORMAT (/1X,88(1H-)/T2,'Nominal LEP',T15,1H|,T17,'Number of',
     +        T28,1H|,T39,'LCAL   Luminosity',T70,1H|,T74,'Number of',
     +        /T2,'Energy (Gev)',T15,1H|,T17,'Good Runs',T28,1H|,
     +        T32,'N Bhabhas',T47,'nb**-1',T58,'Status',T70,1H|,
     +        T74,'Z0 -> Hadrons', /1X,88(1H-))
 2022 FORMAT (T2,F7.3,T15,1H|,T17,I7,T28,1H|,T32,I7,T44,F9.3,T56,A11,
     +        T70,1H|,T72,I7)
 2023 FORMAT (/' *****  Grand Total Lumi = ',F9.3,' nb**-1  for this',
     +         ' selection  *****'/)
 2024 FORMAT (/1X,'====> WARNING !! At least 1 run with UNKNOWN LCAL',
     +        ' Luminosity <===='/12X,'The totals given above for ',
     +        ' LCAL may be meaningless !'/)
 3021 FORMAT (/1X,88(1H-)/T2,'Nominal LEP',T15,1H|,T17,'Number of',
     +        T28,1H|,T39,'SICAL  Luminosity',T70,1H|,T74,'Number of',
     +        /T2,'Energy (Gev)',T15,1H|,T17,'Good Runs',T28,1H|,
     +        T32,'N Bhabhas',T47,'nb**-1',T58,'Status',T70,1H|,
     +        T74,'Z0 -> Hadrons', /1X,88(1H-))
 3025 FORMAT (/1X,'====> WARNING !! At least 1 run with UNKNOWN SICAL',
     +        ' Luminosity <===='/12X,'The totals given above for ',
     +        ' SICAL may be meaningless !'/)
      END
      SUBROUTINE PRPHYW(IMODE,LUN)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Auxiliary to PRPHYS and PRPHY2
C  J. Boucrot 27-Mar-1997
C  Called from PRPHYS,PRPHY2                        from BOOKLIB
C  Input arguments:
C  IMODE = 1 for LEP 1 runs, 2 for LEP 2 runs
C   LUN  = logical unit for the output
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      INTEGER LIOK(NGPHY)
C-----------------------------------------------------------------------
      CALL VZERO(LIOK,NGPHY)
C
      NOK=0
      DO 200 IIG=4,NGROUF
         IF (IPGVAL(IIG).EQ.0) GO TO 200
         NOK=NOK+1
         LIOK(NOK)=IIG
 200  CONTINUE
C
      IF (IMODE.EQ.1) WRITE (LUN,1001)
      IF (IMODE.EQ.2) WRITE (LUN,1002)
      IF (IMODE.EQ.1) WRITE (LUN,1005)
      IF (IMODE.EQ.2) WRITE (LUN,1006)
      WRITE (LUN,1010) (KEYWPH(LIOK(J)),GROUPH(LIOK(J)),J=1,NOK)
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/10X,'****** Luminosity Printout for LEP 1 runs *****')
 1002 FORMAT (/10X,'****** Luminosity Printout for LEP 2 runs *****')
 1005 FORMAT (/10X,' ====>  In the TABLE below :  <===='//,
     +       15X,'For  < Status of Luminosity > item :',/
     +       1X,'Prov means : Luminosity given by Julia banks    '/,
     +       1X,'Unkn means : Luminosity NOT yet known for ALL runs'/,
     +       1X,'OK   means : Luminosity computed by LUMI Experts'//,
     +       15X,'For  < Status of Physics Group Selection > item :')
 1006 FORMAT (/10X,' ====>  In the TABLE below :  <===='//,
     +       15X,'For  < Status of Luminosity > item :',/
     +       1X,'Prov means : Luminosity given by Julia banks    '/,
     +       1X,'Unkn means : Luminosity NOT yet known for ALL runs'/,
     +       1X,'OK   means : Final Luminosity from  LUMI Experts'//,
     +       15X,'For  < Status of Physics Tools Selection > item :')
 1010 FORMAT (/3(5X,A2,' : ',2X,A20))
      END
      SUBROUTINE PRPHYW2(LUN)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Auxiliary to PRPHY2 : Print infos for LEP 2 Physics Groups
C  J. Boucrot 12-Sep-1997
C  Called from PRPHY2                        from BOOKLIB
C  Input argument :
C   LUN  = logical unit for the output
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      INTEGER LIOK(NGPHY)
      LOGICAL BTEST
      CHARACTER BLA*100
C-----------------------------------------------------------------------
      CALL VZERO(LIOK,NGPHY)
C
      NOK=0
      DO 200 IIG=4,NGROUF
         IF (IPGVAL(IIG).EQ.0) GO TO 200
         NOK=NOK+1
         LIOK(NOK)=IIG
 200  CONTINUE
C Print the meaning of the keywords of Physics Groups:
      WRITE (LUN,1002)
      WRITE (LUN,1010) (KEYWPH(LIOK(J)),GROUPH(LIOK(J)),J=1,NOK)
C Print the list of Physics Tools activated for each Physics Group:
      WRITE (LUN,1021)
      DO 300 NNG=1,NOK
         LLK=LIOK(NNG)
         LLW=LNBLNK(KEYGL2(LLK))
         LLM=MIN0(LLW,100)
         BLA=' '
         BLA=KEYGL2(LLK)(1:LLM)
         WRITE (LUN,1022) KEYWPH(LLK),BLA
 300  CONTINUE
C
 999  RETURN
C-----------------------------------------------------------------------
 1002 FORMAT (/10X,'****** Printout for LEP 2 Physics Groups *****')
 1010 FORMAT (/10X,' ====>  In the TABLE below :  <===='//,
     +       15X,'For  < Status of Luminosity > item :',/
     +       1X,'Prov means : Luminosity given by Julia banks    '/,
     +       1X,'Unkn means : Luminosity not yet computed        '/,
     +       1X,'OK   means : Luminosity computed by LUMI Experts'//,
     +       15X,'For  < Status of Physics Group Selection > item :',/
     +       3(5X,A2,' : ',2X,A20))
 1021 FORMAT (/10X,' ====> List of conditions on LEP 2 Physics Tools',
     +        ' for each Physics Group :'/,
     +        2X,'Group',20X,'Conditions on LEP 2 Physics Tools'/)
 1022 FORMAT (4X,A2,5X,A100)
      END
      SUBROUTINE PRPHYZ(IPH,PHG)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Auxiliary to PRPHYS and PRPHY2
C  J. Boucrot 27-Mar-1997
C  Called from PRPHYS,PRPHY2                        from BOOKLIB
C  Input argument:
C   IPH  = bit pattern of accepted Phys. Groups for the present run
C Output argument:
C   PHG  = list of Phys. groups accepted for this run
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*2 PHG(NGPHY)
      LOGICAL BTEST
C-----------------------------------------------------------------------
      DO 30 II=1,NGPHY
 30   PHG(II)=' '
C
      NORD=0
      DO 200 IIG=4,NGROUF
         IF (IPGVAL(IIG).EQ.0) GO TO 200
         NORD=NORD+1
         IPG=IIG-3
         IF (BTEST(IPH,IPG+2)) PHG(NORD)=KEYWPH(IIG)
 200  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE PRPHYZ2(IPH,PHG)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Auxiliary to PRPHY2 for LEP2 Physics Groups
C  J. Boucrot 12-Sep-1997
C  Called from PRPHY2                         from BOOKLIB
C  Calls BKGPHYG                              from BOOKLIB
C  Input argument:
C   IPH  = bit pattern of accepted Phys. Groups for the present run
C Output argument:
C   PHG  = list of Phys. groups accepted for this run
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER*2 PHG(NGPHY)
      CHARACTER PHYSAV*200
C-----------------------------------------------------------------------
      PHYSAV=PHYKEY
      DO 30 II=1,NGPHY
 30   PHG(II)=' '
C
      NORD=0
      DO 200 IIG=4,NGROUF
         if (ipgval(iig).eq.0) go to 200
         NORD=NORD+1
         PHYKEY=' '
         PHYKEY=KEYGL2(IIG)
         CALL BKPHYG(IPH,IOK)
         IF (IOK.EQ.0) PHG(NORD)=KEYWPH(IIG)
 200  CONTINUE
C
      PHYKEY=PHYSAV
 999  RETURN
      END
      SUBROUTINE PRPHY2(ITRM,NFRUN,NFOUN,LISRU,LISPR,LISRO)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print RUN Physics Properties for LEP II runs
C  Author  J.Boucrot 21-Sep-1995
C  Modified for VDET Lumi 03-Mar-1998
C Called from PRPHYS                          from BOOKLIB
C Calls  BKPOIN,BKFPER                        from BOOKLIB
C Calls  PRPHYW,PRPHYW2,PRPHYZ,PRPHYZ2        from BOOKLIB
C Calls  ALSTIN                               from ALEPHLIB
C Input arguments :
C  ITRM  = 1 if printout required on terminal , = 0 otherwise
C  NFRUN =   First run to be printed out by this routine
C  NFOUN =   Number of runs found from user's selection
C  LISRU =   List of addresses of sorted runs in BRUC bank
C  LISPR =   List of BRUC bank numbers for selected runs
C  LISRO =   List of ROW # in BRUC banks for selected runs
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*11 TWARN(3)
      CHARACTER*4 BLLUM(4),BLQUA(4)
      CHARACTER*2 PHG(NGPHY)
      CHARACTER DET94*24,DRUQ*24,DEF94*24,DPAT*12
      CHARACTER*10 XN97(2)
      INTEGER LISRU(*),LISPR(*),LISRO(*)
      INTEGER NZTOT(NLEPE),NBATO(NLEPE),IWARN(NLEPE),IWARZ(NLEPE)
      INTEGER NRUZ0(NLEPE),NRULC(NLEPE),NZ0LC(NLEPE)
      DOUBLE PRECISION ZLUTO(NLEPE),ZLULC,ZLUVD(NLEPE),ZLULD
      LOGICAL BTEST
      DATA XN97   / '130 -> 136' , '181 -> 184' /
      DATA BLLUM  / 'Unkn' , 'Prov' , 'OK  ' ,'Undf' /
      DATA BLQUA  / '????' , 'DUCK' , 'MAYB' , 'PERF' /
      DATA TWARN  / 'Definitive ' , 'Provisional' , 'Undefined  ' /
      DATA DET94  / 'V I T E H S L t D R     ' /
      DATA DEF94  / '? ? ? ? ? ? ? ? ? ?     ' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
C Various initialisations :
C
      IRBAL=0
      IRBAS=0
      MAXSI=MXLRU1
      IF (NFOUN.LE.0.OR.NFRUN.LT.MAXSI) GO TO 999
      IF (IBKINT.NE.2) CALL BKLEPL
C Find the last run # with definitive LUMI :
      CALL BKPOIN(LECDAF,'BLAS',1,JBLAS)
      IF (JBLAS.LE.0) GO TO 999
      LASOK=ITABL(JBLAS,1,JBLALU)
C Print general header :
      IF (IGRLEP.EQ.2.OR.IGRLEP.EQ.4.OR.NL2GRO.EQ.0)
     +    CALL PRPHYW(2,LWRUSR)
      IF (IGRLEP.EQ.3.AND.NL2GRO.GT.0) CALL PRPHYW2(LWRUSR)
      WRITE (LWRUSR,1012)
      WRITE (LWRUSR,1001)
      IF (ISYEAR.LT.1997) THEN
         WRITE (LWRUSR,1013) DET94
      ELSE
         WRITE (LWRUSR,1113) DET94(1:19)
      ENDIF
      WRITE (LWRUSR,1001)
      IF (ITRM.EQ.0) GO TO 20
      WRITE (LWRINT,1012)
      IF (IGRLEP.EQ.2.OR.IGRLEP.EQ.4.OR.NL2GRO.EQ.0)
     +    CALL PRPHYW(2,LWRUSR)
      IF (IGRLEP.EQ.3.AND.NL2GRO.GT.0) CALL PRPHYW2(LWRINT)
      WRITE (LWRINT,1001)
      WRITE (LWRUSR,1001)
      IF (ISYEAR.LT.1997) THEN
         WRITE (LWRINT,1013) DET94
      ELSE
         WRITE (LWRINT,1113) DET94
      ENDIF
      WRITE (LWRINT,1001)
 20   CONTINUE
      DO 25 II=1,NLEPE
         NZTOT(II)=0
         NBATO(II)=0
         IWARN(II)=0
         IWARZ(II)=0
         NRULC(II)=0
         NRUZ0(II)=0
         NZ0LC(II)=0
         ZLUTO(II)=0.
         ZLUVD(II)=0.
 25   CONTINUE
C----------------------------------------------------------------------
C Loop on all runs found and print the content :
C
      DO 80 IRU=1,NFOUN
C Find run number from bank 'BRUC' :
         CALL BKPOIN(LECDAF,'BRUC',LISPR(IRU),JBRUC)
         IF (JBRUC.LE.0) GO TO 80
         ISR=LISRU(IRU)
         IF (ISR.LE.0) GO TO 80
         IKH=LISRO(ISR)
         IRUN=ITABL(JBRUC,IKH,JBRURN)
         IF (IRUN.LT.NFRUN) GO TO 80
C get all quantities to be printed :
         INOM=ITABL(JBRUC,IKH,JBRUNE)
         ILEP=ITABL(JBRUC,IKH,JBRUTE)
         IDTO=ITABL(JBRUC,IKH,JBRUWD)
         ENOM=0.001*FLOAT(INOM)
         ELEP=0.001*FLOAT(ILEP)
         NLEPO=NINT(ELEP/EROUND)
         ILEPR=NLEPO*IROUND
         IF (ISYEAR.GE.1999.AND.ILEPR.LT.100000) ILEPR=91000
         ENOM=0.001*FLOAT(ILEPR)
         NEVT=ITABL(JBRUC,IKH,JBRUEF)
         IF ( NEVT.LE.0) NEVT=ITABL(JBRUC,IKH,JBRUEV)
         NZHA=ITABL(JBRUC,IKH,JBRUNZ)
         NBHA=ITABL(JBRUC,IKH,JBRUNB)
         RLUM=RTABL(JBRUC,IKH,JBRULU)
         IF (RLUM.LT.0.) RLUM=0.
C Determine run_quality :
         ICS=ITABL(JBRUC,IKH,JBRUCS)
         IPH=ITABL(JBRUC,IKH,JBRUBR)
         IPQUA=1
         DO 28 IP=1,3
            IF (BTEST(IPH,IP-1)) THEN
               IPQUA=IP+1
               GO TO 30
            ENDIF
 28      CONTINUE
C Determine if LUMI is unknown , provisional or definitive :
 30      IF (ICS.GE.-1) THEN
            IQUAL=(1+ICS)/10
         ELSE
            IQUAL=-1
         ENDIF
         ILUM=ICS-10*IQUAL
         ICRS=ILUM+2
         IF (ILUM.LT.0.OR.ILUM.GT.1.OR.RLUM.LE.0.) ICRS=1
         IF (RLUM.GT.0.) ICRS=2
         IF (IRUN.LE.LASOK.AND.RLUM.GT.0.AND.ILUM.EQ.1) ICRS=3
         IF (ICRS.LE.1) IRBAL=1
C Physics groups for which this run is ACCEPTED :
      IF (IGRLEP.EQ.2.OR.IGRLEP.EQ.4.OR.NL2GRO.EQ.0)
     +    CALL PRPHYZ(IPH,PHG)
         IF (IGRLEP.EQ.3.AND.NL2GRO.GT.0) CALL PRPHYZ2(IPH,PHG)
C Build the detector pattern for data taken in 1994 and after :
         DRUQ=DEF94
         CALL BKPOIN(LECDAF,'BDRQ',LISPR(IRU),JBDRQ)
         IF (JBDRQ.LE.0) GO TO 55
         DO 50 IBDRQ=1,LROWS(JBDRQ)
            KBDRQ=KROW(JBDRQ,IBDRQ)
            IF (IW(KBDRQ+JBDRRN).NE.IRUN) GO TO 50
            CALL ALSTIN(IW(KBDRQ+JBDRDP),LBDRQA-JBDRRN,DPAT)
            DO 48  IK=1,12
            IF (ISYEAR.GE.1998.AND.IK.EQ.1) GO TO 48
            IR=IK
            IF (ISYEAR.GE.1998) IR=IK-1
            IDD=1+2*(IR-1)
            DRUQ(IDD:IDD)=DPAT(IK:IK)
 48      CONTINUE
            GO TO 55
 50      CONTINUE
 55      CONTINUE
C write the informations :
         RLVD=0.
         IF (ISYEAR.GE.1997) GO TO 60
         WRITE ( LWRUSR,1014) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,
     +         RLUM,BLLUM(ICRS),BLQUA(IPQUA),(PHG(KI),KI=1,11),DRUQ
         IF (ITRM.EQ.0) GO TO 75
         WRITE ( LWRINT,1014) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,
     +         RLUM,BLLUM(ICRS),BLQUA(IPQUA),(PHG(KI),KI=1,11),DRUQ
         GO TO 75
 60      RLVD=RTABL(JBRUC,IKH,JBRUVL)
         WRITE ( LWRUSR,1114) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,RLUM,
     +         RLVD,BLLUM(ICRS),BLQUA(IPQUA),(PHG(KI),KI=1,11),
     +         DRUQ(1:19)
         IF (ITRM.EQ.0) GO TO 75
         WRITE ( LWRINT,1114) IRUN,IDTO,ELEP,NEVT,NZHA,NBHA,RLUM,
     +         RLVD,BLLUM(ICRS),BLQUA(IPQUA),(PHG(KI),KI=1,11),
     +         DRUQ(1:19)
C store the accumulated statistics per LEP energy :
 75      IF (ISELPH.LE.0) GO TO 80
         IF (IENV97.NE.0) THEN
            NLI=1
            GO TO 77
         ENDIF
         NLI=IUCOMP(ILEPR,ILEPEN,NLEPSF)
         IF (NLI.LE.0) GO TO 80
 77      IF (ICRS.LE.2) IWARN(NLI)=1
         ZLUTO(NLI)=ZLUTO(NLI)+DBLE(RLUM)
         ZLUVD(NLI)=ZLUVD(NLI)+DBLE(RLVD)
         NRUZ0(NLI)=NRUZ0(NLI)+1
         IF (IRUN.GT.LASOK) IWARZ(NLI)=1
         IF (NLI.LE.0.OR.ICRS.LT.2) GO TO 80
         IF (NZHA.GT.0)    NZTOT(NLI)=NZTOT(NLI)+NZHA
         IF (NBHA.GT.0) THEN
            NBATO(NLI)=NBATO(NLI)+NBHA
            NRULC(NLI)=NRULC(NLI)+1
            IF (NZHA.GT.0) NZ0LC(NLI)=NZ0LC(NLI)+NZHA
         ENDIF
 80   CONTINUE
C----------------------------------------------------------------------
C Print statistics per LEP energy :
C
      IF (NLEPSF.LE.0.OR.ISELPH.LE.0) GO TO 999
      WRITE ( LWRUSR,1020)
      IF (ITRM.NE.0) WRITE ( LWRINT,1020)
C Number of qqbar events:
      NTOZZ=0
      NLENG=NLEPSF
      IBL97=0
      IF (IENV97.NE.0) THEN
         NLENG=1
         IBL97=1
         IF (ENGLEP.EQ.ENG297) IBL97=2
      ENDIF
C
      DO 100 ILEP=1,NLENG
         IF (NZTOT(ILEP).LE.0) GO TO 100
         NTOZZ=NTOZZ+NZTOT(ILEP)
         ELEP=0.001*FLOAT(ILEPEN(ILEP))
         KK=IWARZ(ILEP)+1
         IF (IBL97.NE.0) GO TO 90
         WRITE (LWRUSR,1022) ELEP,NRUZ0(ILEP),
     +                       NZTOT(ILEP),TWARN(KK)
         IF (ITRM.EQ.0) GO TO 100
         WRITE (LWRINT,1022) ELEP,NRUZ0(ILEP),
     +                       NZTOT(ILEP),TWARN(KK)
         GO TO 100
 90      WRITE (LWRUSR,1032) XN97(IBL97),NRUZ0(ILEP),
     +                       NZTOT(ILEP),TWARN(KK)
         IF (ITRM.EQ.0) GO TO 100
         WRITE (LWRINT,1032) XN97(IBL97),NRUZ0(ILEP),
     +                       NZTOT(ILEP),TWARN(KK)
 100  CONTINUE
      WRITE ( LWRUSR,1023) NTOZZ
      IF (ITRM.NE.0) WRITE ( LWRINT,1023) NTOZZ
C LCAL Luminosity :
      IF (ISYEAR.LT.1997) THEN
         WRITE ( LWRUSR,2021)
         IF (ITRM.NE.0) WRITE ( LWRINT,2021)
      ELSE
         WRITE ( LWRUSR,2121)
         IF (ITRM.NE.0) WRITE ( LWRINT,2121)
      ENDIF
      ZLULC=0.
      ZLULD=0.
      DO 200 ILEP=1,NLENG
         IF (NZTOT(ILEP).LE.0) GO TO 200
         ZLULC=ZLULC+ZLUTO(ILEP)
         ZLULD=ZLULD+ZLUVD(ILEP)
         ELEP=0.001*FLOAT(ILEPEN(ILEP))
         KK=IWARN(ILEP)+1
         IF (NBATO(ILEP).LE.0) KK=3
         IF (IBL97.NE.0) GO TO 190
         IF (ISYEAR.GE.1997) GO TO 180
         WRITE (LWRUSR,2022) ELEP,NRULC(ILEP),NBATO(ILEP),ZLUTO(ILEP),
     +                       TWARN(KK),NZ0LC(ILEP)
         IF (ITRM.EQ.0) GO TO 200
         WRITE (LWRINT,2022) ELEP,NRULC(ILEP),NBATO(ILEP),ZLUTO(ILEP),
     +                       TWARN(KK),NZ0LC(ILEP)
         GO TO 200
 180         WRITE (LWRUSR,2122) ELEP,NRULC(ILEP),NBATO(ILEP),
     +            ZLUTO(ILEP),TWARN(KK),NZ0LC(ILEP),ZLUVD(ILEP)
         IF (ITRM.EQ.0) GO TO 200
         WRITE (LWRINT,2122) ELEP,NRULC(ILEP),NBATO(ILEP),
     +            ZLUTO(ILEP),TWARN(KK),NZ0LC(ILEP),ZLUVD(ILEP)
         GO TO 200
 190     IF (ISYEAR.GE.1997) GO TO 195
         WRITE (LWRUSR,2032) XN97(IBL97),NRULC(ILEP),NBATO(ILEP),
     +                       ZLUTO(ILEP),TWARN(KK),NZ0LC(ILEP)
         IF (ITRM.EQ.0) GO TO 200
         WRITE (LWRINT,2032) XN97(IBL97),NRULC(ILEP),NBATO(ILEP),
     +                       ZLUTO(ILEP),TWARN(KK),NZ0LC(ILEP)
         GO TO 200
 195     WRITE (LWRUSR,2132) XN97(IBL97),NRULC(ILEP),NBATO(ILEP),
     +            ZLUTO(ILEP),TWARN(KK),NZ0LC(ILEP),ZLUVD(ILEP)
         IF (ITRM.EQ.0) GO TO 200
         WRITE (LWRINT,2132) XN97(IBL97),NRULC(ILEP),NBATO(ILEP),
     +            ZLUTO(ILEP),TWARN(KK),NZ0LC(ILEP),ZLUVD(ILEP)
 200  CONTINUE
      IF (ISYEAR.LT.1997) THEN
          WRITE ( LWRUSR,2023) ZLULC
          IF (ITRM.NE.0) WRITE ( LWRINT,2023) ZLULC
      ELSE
          WRITE ( LWRUSR,2123) ZLULC,ZLULD
          IF (ITRM.NE.0) WRITE ( LWRINT,2123) ZLULC,ZLULD
      ENDIF
      IF (IRBAL.EQ.1) WRITE ( LWRUSR , 2024 )
C
 999  RETURN
C----------------------------------------------------------------------
C all formats :
 1000 FORMAT (/)
 1001 FORMAT (1X,129(1H-))
 1012 FORMAT (/3X,'===> Detector Run_Quality given in thes order :'/,
     +       9X,'Vdet Itc Tpc Ecal Hcal Sical Lcal trigger Daq Run_',
     +       'Coordinator'/,9X,'For each detector : D for DUCK'/,
     +       29X,'M for MAYB'/,29X,'P for PERF'//)
 1013 FORMAT (T3,'Run',T8,1H|,T10,'Date  ',T17,1H|,T21,'Exact',
     +        T27,1H|,T29,'Number of Events :',T47,1H|,T48,
     +        'LCAL Lumi ',T58,1H|,T65,'Status   of   ',
     +        T105,1H|,T107,'Detector Run_Quality'/,
     +        T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,
     +        T29,'Total  Hadr  Bhab',T47,1H|,T50,'nb**-1',
     +        T58,1H|,T60,'Lumi',T65,'RunQ',T73,'Physics Tools ',
     +        'Selections :',T105,1H|,T107,A24)
 1014 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T28,I6,T36,I4,
     +        T42,I4,T47,1H|,T50,F7.3,T58,1H|,T60,A4,T65,A4,T72,
     +        11(A2,1X),T105,1H|,T107,A24)
 1113 FORMAT (T3,'Run',T8,1H|,T10,'Date  ',T17,1H|,T21,'Exact',
     +        T27,1H|,T29,'Number of Events :',T47,1H|,T48,
     +        'LCAL Lumi',T58,1H|,T59,'LCAL Lumi',
     +        T69,1H|,T76,'Status   of   ',
     +        T109,1H|,T111,'Detector Run_Quality'/,
     +        T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,
     +        T29,'Total  Hadr  Bhab',T47,1H|,T50,'nb**-1',
     +        T58,1H|,T60,'VDET OK',
     +        T69,1H|,T70,'Lumi',T75,'RunQ',T83,'Physics Tools ',
     +        'Selections :',T109,1H|,T111,A19)
 1114 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T28,I6,T36,I4,
     +        T42,I4,T47,1H|,T50,F7.3,T58,1H|,
     +        T60,F7.3,T69,1H|,T70,A4,T75,A4,T82,
     +        11(A2,1X),T109,1H|,T111,A19)
 1020 FORMAT (// ' ** General statistics for above GOOD RUNS :'//,
     +       10X,' ====>  In the TABLE below :  <===='//,
     +       15X,'For  < Status of e+ e- -> Hadrons > item :',/
     +       1X,'Provisional : CLAS 16 events from Julia on FALCON'/,
     +       1X,'Definitive  : CLAS 16 + XLUMOK -> final numbers'//,1X,
     +       60(1H-)/T2,'Nominal LEP',T15,1H|,T17,'Number of',T28,1H|,
     +       T30,'Number of',T42,1H|,T44,'Status of '/
     +       T2,'Energy (Gev)',T15,1H|,T17,'Good Runs',
     +       T28,1H|,T30,'ee -> Hadr',T42,1H|,T44,'e+ e- -> Hadrons',
     +       /1X,60(1H-))
 1021 FORMAT (T2,'Nominal LEP',T15,1H|,T17,'Number of',T28,1H|,
     +        T30,'Number of',T42,1H|,T44,'Luminosity',T54,1H|,
     +        T56,'Comment'/T2,'Energy (Gev)',T15,1H|,T17,'Z0 -> Hadr',
     +        T28,1H|,T30,'Bhabhas',T42,1H|,T46,'nb**-1',T54,1H|,
     +        T56,'on Luminosity')
 1022 FORMAT (T2,F7.3,T15,1H|,T17,I7,T28,1H|,T30,I7,T42,1H|,T44,A11)
 1023 FORMAT (/' ***** Grand Total = ',I8,' Hadronic events for this',
     +         ' selection *****'/)
 1032 FORMAT (T2,A10,T15,1H|,T17,I7,T28,1H|,T30,I7,T42,1H|,T44,A11)
 2021 FORMAT (/1X,88(1H-)/T2,'Nominal LEP',T15,1H|,T17,'Number of',
     +        T28,1H|,T39,'LCAL   Luminosity',T70,1H|,T74,'Number of',
     +        /T2,'Energy (Gev)',T15,1H|,T17,'Good Runs',T28,1H|,
     +        T32,'N Bhabhas',T47,'nb**-1',T58,'Status',T70,1H|,
     +        T74,'e+ e- -> Hadrons', /1X,88(1H-))
 2121 FORMAT (/1X,102(1H-)/T2,'Nominal LEP',T15,1H|,T17,'Number of',
     +        T28,1H|,T39,'LCAL   Luminosity',T70,1H|,T74,'Number of',
     +        T90,1H|,T92,'Luminosity',
     +        /T2,'Energy (Gev)',T15,1H|,T17,'Good Runs',T28,1H|,
     +        T32,'N Bhabhas',T47,'nb**-1',T58,'Status',T70,1H|,
     +        T74,'e+ e- -> Hadrons', T90,1H|,T93,'VDET OK',
     +        /1X,102(1H-))
 2022 FORMAT (T2,F7.3,T15,1H|,T17,I7,T28,1H|,T32,I7,T43,F10.3,T56,
     +        A11,T70,1H|,T72,I7)
 2122 FORMAT (T2,F7.3,T15,1H|,T17,I7,T28,1H|,T32,I7,T43,F10.3,T56,
     +        A11,T70,1H|,T72,I7,T90,1H|,T92,F10.3)
 2023 FORMAT (/' *****  Grand Total Lumi = ',F10.3,' nb**-1  for this',
     +         ' selection  *****'/)
 2123 FORMAT (/' *****  Grand Total Lumi = ',F10.3,' ; with VDET OK: ',
     +         F10.3,' nb**-1  for this selection *****'/)
 2024 FORMAT (/1X,'====> WARNING !! At least 1 run with UNKNOWN LCAL',
     +        ' Luminosity <===='/12X,'The totals given above for ',
     +        ' LCAL may be meaningless !'/)
 2032 FORMAT (T2,A10,T15,1H|,T17,I7,T28,1H|,T32,I7,T43,F10.3,T56,A11,
     +        T70,1H|,T72,I7)
 2132 FORMAT (T2,A10,T15,1H|,T17,I7,T28,1H|,T32,I7,T43,F10.3,T56,A11,
     +        T70,1H|,T72,I7,T90,1H|,T92,F10.3)
      END
      SUBROUTINE PRPROC(LUN)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print the list of Real Data processings , from bank 'BLPR'
C  J. Boucrot  11-Sep-1990
C  Called from BKSEAR
C  Calls BKFPER,BKPOIN,BKDAIC                             from BOOKLIB
C  Calls ALSTIN                                           from ALEPHLIB
C   Input argument :
C   LUN = Fortran unit onto which the result is printed
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      CALL BKPOIN(LECDAF,'BLPR',1,JBLPR)
      IF (JBLPR.EQ.0) GO TO 999
      WRITE ( LUN,1000)
      WRITE ( LUN,1002)
      WRITE ( LUN,1001)
      WRITE ( LUN,1002)
      NLPRS=LROWS(JBLPR)
C
C Loop on all processings :
C
      DO 20 IPER=1,NLPRS
         KBLPR=KROW(JBLPR,IPER)
         NADAT=IW(KBLPR+JBLPNT)
         WRITE (LUN,1003) DNADAT(NADAT),(IW(KBLPR+KK),KK=JBLPFR,JBLPJV)
 20   CONTINUE
      WRITE ( LUN,1002)
C
 999  RETURN
C----------------------------------------------------------------------
 1000 FORMAT (/7X,'+++ PRPROC : Debug of JULIA processings'/)
 1001 FORMAT (T3,'Nature',T14,'First',T24,'Last',T34,'First',
     +        T44,'Last',T56,'Reprocessing',T74,'Tracking',T87,'JULIA',
     +        /T3,'of Data',T15,'Run',T25,'Run',T35,'Day',T45,'Day',
     +        T58,'Level',T74,'quality',T87,'Version')
 1002 FORMAT (1X,100(1H-))
 1003 FORMAT (T4,A4,T14,I6,T24,I6,T34,I6,T44,I6,T60,I3,T74,I4,T86,I6)
      END
      SUBROUTINE PRPSLS(LINE,FILE,DATE,SIZE)
C----------------------------------------------------------------------
C! Parse a line of the output of the UNIX ls -l / ls -o command
C!
C!    Author:     H. Meinhard       07-Sep-1992
C!
C!    Input:      - LINE    /C*(*)  line of ls -l output
C!    Output:     - FILE    /C*(*)  file name (without directory,
C!                                  without links)
C!                - DATE    /C*12   file creation date
C!                - SIZE    /C*9    file size in bytes
C!    Called by:  - BKLISF,PRVXLI                         from BOOKLIB
C!    Calls:      - LNBLNK,ICNEXT,INDEXB                  from KERNLIB
C----------------------------------------------------------------------
      CHARACTER LINE*(*),FILE*(*),DATE*12,SIZE*9
C Common for the CERNLIB M432 package
      COMMON /SLATE/ND,NE,NF,NG,DUMMY(36)
C----------------------------------------------------------------------
      FILE = ' '
      DATE = ' '
      SIZE = ' '
      JR = LNBLNK(LINE)
      IF (JR .NE. 0) THEN
        JL = 1
        DO 300 I = 1, 4
          JX = ICNEXT(LINE,JL,JR)
          IF (JX .GT. JR) GO TO 999
          JL = NE
  300   CONTINUE
        SIZE(9-ND+1:) = LINE(JX:NE-1)
        JX = ICNEXT(LINE,JL,JR)
        IF (JX .GT. JR) GO TO 999
        JL = NE
        DATE = LINE(JX:)
        DO 310 I = 1, 3
          JX = ICNEXT(LINE,JL,JR)
          IF (JX .GT. JR) GO TO 999
          JL = NE
  310   CONTINUE
        FILE = LINE(JX:JR)
        IDAR = INDEX(FILE,' -> ')
        IF (IDAR .NE. 0) FILE = FILE(:IDAR-1)
        IDSL = INDEXB(FILE,'/')
        IF (IDSL .NE. 0) FILE = FILE(IDSL+1:)
      ENDIF
  999 CONTINUE
      END
       subroutine prspys
C -----------------------------------------------------------
CKEY SCANBOOK PRINTOUT
C Spy routine for SCANBOOK on UNIX
C Called from BKSEXQ                  from BOOKLIB
C Sends a mail to the Bookkeeping manager with spy informations
C -----------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKBOKW ----
      CHARACTER*80 NAMBKF
      CHARACTER*100 LISBKB
      CHARACTER*60 BOKVAX
      CHARACTER*8 BOKACC,BOKNOD
      CHARACTER*4 FORMBK
      CHARACTER*2 BOKMOD
      COMMON / BKUNIT / LBOORL,NCOMPB
      COMMON / BKNAMF / NAMBKF,LISBKB,BOKVAX,BOKACC,BOKNOD(2),
     +                  FORMBK,BOKMOD
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILS ----
       PARAMETER (NFILMX = 10 )
       PARAMETER (IDEVDI = 100 )
       COMMON / BKFILO / NFILOU,LISLOU(NFILMX),NADTOU(NFILMX),
     +                   ITAPOU(NFILMX),IFILOU(NFILMX),IEVDOU(NFILMX),
     +                   NCALLS(NFILMX),NBYTOT(NFILMX),NEVRUN(NFILMX)
       CHARACTER*4 FORMFI
       CHARACTER*8 VSNTAP,NODNAM,PRONOD
       CHARACTER*11 TIMNAM
       CHARACTER*17 DSETNA
       CHARACTER*50 DIRNAM,FILNAM
       COMMON / BKFILC / DIRNAM(NFILMX),FORMFI(NFILMX),NODNAM(NFILMX),
     +                   DSETNA(NFILMX),VSNTAP(NFILMX),FILNAM(NFILMX),
     +                   TIMNAM,PRONOD
      COMMON / REPARS / NPAROU,LPAROU(NFILMX)
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
       CHARACTER OUFIL*20,INFO*132,LTXT*2,COMPU*6,CCOMP*8
       CHARACTER*1 FIL(3)
       DATA OUFIL / 'BSCA              A ' /
       DATA FIL / 'X' , 'F' , 'I' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C -----------------------------------------------------------
       IER=0
       IF (IDSEAR.LT.0.OR.IDSEAR.GT.9) IDSEAR=0
       IND=INDEX(PRONOD,'.')
       CCOMP=PRONOD
       IF (IND.NE.0) CCOMP(IND:)=' '
       OUFIL(5:)=' '
       OUFIL(5:)=USERLG(1:MIN(4,LNBLNK(USERLG)))//'.'//TIMNAM(4:11)
       OPEN (LWRSPY, FILE=OUFIL, FORM='FORMATTED',STATUS='NEW')
C Build the info line 1:
       INFO=' '
       COMPU=CCOMP(1:6)
       CALL BKDACI(1,CDATIM,CSETIM,IDAT,ITIM)
       ELEP=ENGLEP
       IF (ENGLEP.LT.0.OR.ENGLEP.GT.300.) ELEP=0.
       ISELP=ISELPH
       IF (IPHYGR.GT.0) ISELP=ISELPH+100*IPHYGR
       IFI=IBKINT+1
       IF (IBKINT.EQ.-1) IFI=1
       nfoun=ndatfoun
       if (idsear.eq.3) nfoun=ntotruns
C WRITE IT:
       WRITE (INFO,1001) USERLG(1:8),IDAT,ITIM,COMPU,
     +       FIL(IFI),IDSEAR,SELDAT(1:1),ELEP,KINCOD,
     +       ISYEAR,ISELP,ILABCH,IWFILI,IPSROU,ISORLE,IPRONL,
     +       NFOUN,IFAIL
 1001  FORMAT (1X,A8,2(1X,I6),1X,A6,2X,A1,3X,I2,3X,A1,2X,F6.2,10I7)
       WRITE (LWRSPY, '(A)') INFO(:LNBLNK(INFO))
C PHYS groups selection keyword in a separate line :
       IF (PHYKEY.EQ.' ') GO TO 100
       info=' '
       WRITE (INFO,1002) PHYKEY(1:LNBLNK(PHYKEY))
 1002  FORMAT (' Phykey =',2x,a80)
       WRITE (LWRSPY, '(A)') INFO(:LNBLNK(INFO))
C Close the spy file and send it by mail:
  100  CLOSE (LWRSPY)
       call system('Mail -s '//oufil//' boucrot@aloha.cern.ch < '//
     +             oufil)
       call system(' rm -f '//oufil)
 999   return
       end
      SUBROUTINE PRSRUN(IOPT)
C-----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Build the SRUN Data Cards for the runs selected by the user
C  J. Boucrot  04-Dec-1989 - Modified 07-Oct-1996
C  Called from BKSEXQ                                     from BOOKLIB
C  Calls BKFPER,BKPOIN,BKRUOK,BKRDCH,BKPRLV,PRIRUN        from BOOKLIB
C  Calls BKINCA,ALINST,AUBOS                              from ALEPHLIB
C  Calls CLTOU,IUCOMP,INTSOR                              from GENLIB
C Input argument :
C  IOPT = 1  Warning header printed , interactive dialogue
C       = 2  No warning , no dialogue
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
C-- DATAFOUN ----
      PARAMETER ( NTODT = 5000 )
      COMMON / DATAFOUN / NDATFOUN,NTOTRUNS,
     +                    IBDSEL(NTODT),IEDSEL(NTODT),
     +                    LISRUSEL(NTODT),LISORTRU(NTODT),
     +                    LISKINSL(NTODT),LISENGLP(NTODT),
     +                    LISALSOR(NTODT),LISALRUN(NTODT),
     +                    LISALBDF(NTODT)
C-- RSLUJJ ----
      PARAMETER(JRSLRN=1,JRSLLQ=2,JRSLNB=3,JRSLLU=4,JRSLBK=5,JRSLEW=6,
     +          LRSLUA=6)
      CHARACTER FICOM*20
      INTEGER BKINCA,ITPTA(2)
      CHARACTER INFO*132,TAPNA*8,DTES*2
      PARAMETER ( NSTR6 = 11, NSTR5 = 13, NRMX = 9999 )
      CHARACTER LET1*1,MSG*90,FINAM*80,SIRUC*9
      INTEGER LIPR(NSTR5)
      CHARACTER*10 XN197,XN297
      CHARACTER*28 BLATR(4)
      DATA BLATR / 'ONLY TPC Short with Problems',
     +             'ONLY data with TPC Short OK ',
     +             'ONLY data WITHOUT TPC shorts',
     +             'ALL  data incl TPC Short OK ' /
      DATA XN197,XN297 / '130 -> 136' , '181 -> 184' /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IF (IMCDAT.NE.1.OR.IB1RUN.NE.0.OR.IBPRUS.EQ.6) GO TO 999
      IF (NTOTRUNS.LE.0) GO TO 999
      IF (IPSROU.EQ.10) GO TO 10
      IF (IPSROU.GT.0.AND.IBKINT.LE.1) GO TO 10
      IF (IWFILI.GT.0.AND.(ISELPH.GT.0.OR.IPHYGR.GT.0)) IPSROU=1
      IF (IWFILI.GT.0.AND.IBTQSE.NE.2) IPSROU=1
 10   ILEP1=1
      IF (ISRUNL.GT.MXLRU1)  ILEP1=0
      IF (IPSROU.EQ.0) GO TO 999
      TOLER=0.001*FLOAT(ITOLER)
      FINAM=' '
      IF (CARDSF.NE.' ') FINAM=CARDSF(1:LNBLNK(CARDSF))
      IF (FINAM.EQ.' ') FINAM='SCANBOOK'
      NSRUN=0
      JSRUN=IW(NAMIND('SRUN'))
      IF (JSRUN.GT.0.AND.IW(JSRUN+IW(JSRUN)).GT.0)  NSRUN=IW(JSRUN)
C Define the new SRUNCARD file if interactive dialogue :
      SIRUC='.sruncard'
      IF (IPSROU.EQ.10)  SIRUC='.iruncard'
      MSG=CARDSF(1:LNBLNK(CARDSF))//SIRUC
      OPEN ( LWRSRU , FILE = MSG , FORM = 'FORMATTED' ,
     +       STATUS = 'NEW' , ERR = 999 )
C Write a header line on SRUNCARD file :
      IF (IPSROU.EQ.1)  WRITE ( LWRSRU , 1021)  CDATIM,CSETIM
      IF (IPSROU.EQ.10) THEN
         WRITE ( LWRSRU , 2021)  CDATIM,CSETIM
         GO TO 18
      ENDIF
      IF (IPHYGR.GE.4.AND.IPHYGR.LE.NGROUF)   THEN
         IF (IGRLEP.NE.2) WRITE (LWRSRU,1023) GROUPH(IPHYGR)
         IF (IGRLEP.EQ.2) WRITE (LWRSRU,2023) GROUPH(IPHYGR)
         GO TO 17
      ENDIF
      IF (INDEX(PHYKEY,'AND').GT.0.OR.INDEX(PHYKEY,'OR').GT.0) THEN
         IF (IGRLEP.EQ.1) WRITE (LWRSRU,1025) PHYKEY(1:58)
         IF (IGRLEP.GE.2) WRITE (LWRSRU,2025) PHYKEY(1:58)
         GO TO 17
      ENDIF
      FICOM=' ALL Runs'
      IF (ISELPH.EQ.1) FICOM='PERF or MAYB'
      IF (ISELPH.EQ.1.AND.ISPERF.EQ.1) FICOM='PERF Runs ONLY'
      WRITE ( LWRSRU,1026) FICOM
 17   CONTINUE
      IF (IMCDAT.EQ.1.AND.LASTPR.EQ.1.AND.IBTQSE.NE.2) THEN
         I=IBTQSE+3
         WRITE ( LWRSRU , 1027 ) BLATR(I)
      ENDIF
      IF (IZASKD.GT.0) WRITE ( LWRSRU,1028) IZASKD
C Write header on output file :
 18   IF (IOPT.EQ.0) GO TO 11
      LUN=LWRUSR
      WRITE (LUN,1001)
      WRITE (LUN,*) ' *********************************************'
      IF (IPSROU.NE.10) WRITE (LUN,*)
     +              ' ** Now you find below the  SRUN  card(s)    *'
      IF (IPSROU.EQ.10) WRITE (LUN,*)
     +              ' ** Now you find below the  IRUN  card(s)    *'
      WRITE (LUN,*) ' ** for all the RUNS you have selected    :  *'
      WRITE (LUN,*) ' *********************************************'
      WRITE (LUN,1001)
 11   CONTINUE
C-----------------------------------------------------------------------
C For IRUN card , drop existing 'SRUN' bank and book a new one :
      IF (IPSROU.EQ.10) THEN
         CALL BDROP(IW,'SRUN')
         CALL AUBOS('SRUN',0,NTODT,JSRUN,IGARB)
         IF (IGARB.EQ.2) GO TO 999
         NSRUN=0
      ENDIF
      IPSR=0
C-----------------------------------------------------------------------
C
C loop on all LEP energies , and then on all selected RUNS :
C
      IOK97=0
      DO 650 ILE=1,NLEPSF
         ELEP=0.001*FLOAT(ILEPEN(ILE))
         IF (ENGLEP.GT.0.) THEN
            TOLL=TOLER
            IF (ISYEAR.EQ.1999.AND.ENGLEP.GE.200.) TOLL=1.
            IF (ABS(ELEP-ENGLEP).GT.TOLL) GO TO 650
         ENDIF
         IF (ISORLE.EQ.0.AND.ILE.GT.1.AND.IENV97.EQ.0.AND.
     +       ENGLEP.LT.0.) GO TO 660
         IOK97=IOK97+1
         IF (IOK97.EQ.1.AND.IENV97.EQ.1) THEN
            IF (ENGLEP.EQ.ENG197) WRITE (LWRSRU,1016) XN197
            IF (ENGLEP.EQ.ENG297) WRITE (LWRSRU,1016) XN297
         ENDIF
         IF (IOK97.GT.1.AND.IENV97.EQ.1) GO TO 660
C
C Loop on all runs and find the selected ones :
C
      NRUPR=0
      NALRU=0
      NRUOK=0
      NZ0SL=0
      NZERG=0
      ZLUCA=0.
      IZFIN=0
      IFL6=0
      NSTRU=NSTR5
      CALL VZERO(LIPR,NSTR5)
      IF (LASRUR.LE.0) LASRUR=ISRUNL
C
      CALL BKPOIN(LECDAF,'BPER',1,JBPER)
      IF (JBPER.EQ.0) GO TO 999
      NPERS=LROWS(JBPER)
C loop on all periods :
      DO 20 IPER=1,NPERS
         IRUF=ITABL(JBPER,IPER,JBPEFR)
         IRUL=ITABL(JBPER,IPER,JBPELR)
         IF (IRUF.LT.ISRUNF.AND.IRUL.LT.ISRUNF) GO TO 20
         IF (IRUF.GT.ISRUNL.AND.IRUL.GT.ISRUNL) GO TO 20
         CALL BKPOIN(LECDAF,'BRUC',IPER,JBRC)
         IF (JBRC.LE.0) GO TO 20
         NRUS=LROWS(JBRC)
C loop on all runs of period IPER in 'BRUC' :
         DO 15 IRUS=1,NRUS
            KRUC=KROW(JBRC,IRUS)
            IRUN=IW(KRUC+JBRURN)
            IF (IRUN.LE.0) GO TO 15
            IF (IRUN.GT.LASRUR) GO TO 15
C Verify that this run is in selected datasets :
            IND=IUCOMP(IRUN,LISALRUN,NTOTRUNS)
            IF (IND.EQ.0) GO TO 15
C check on LEP energy , if required :
            IF (ISORLE.EQ.0.AND.ENGLEP.LT.0.) GO TO 12
            IERUN=IW(KRUC+JBRUTE)
            IF (IENV97.EQ.1) THEN
               IELAV=NINT(1000.*ENGLEP)
               IF (IABS(IELAV-IERUN).GT.ITOLER) GO TO 15
               GO TO 12
            ENDIF
            IF (IABS(IERUN-ILEPEN(ILE)).GT.ITOLER) GO TO 15
            ILMIN=999999
            IOKR=-1
            DO 133 ILL=1,NLEPSF
               IDIF=IABS(IERUN-ILEPEN(ILL))
               ILMIX=MIN0(ILMIN,IDIF)
               IF (ILMIX.LT.ILMIN) IOKR=ILL
               ILMIN=ILMIX
 133        CONTINUE
            IF (IOKR.NE.ILE) GO TO 15
C This run is OK : put it in the output list
 12         NRUOK=NRUOK+1
            NALRU=NALRU+1
            IF (NALRU.EQ.1.AND.ISORLE.EQ.1) THEN
               WRITE (LWRUSR,1015) ELEP
               WRITE (LWRSRU,1015) ELEP
            ENDIF
            LIPR(NRUOK)=IRUN
            IF (IRUN.GT.NRMX) THEN
               IFL6=1
               NSTRU=NSTR6
            ENDIF
C Fill 'SRUN' bank for IRUN printout :
            IF (IPSROU.EQ.10.AND.JSRUN.GT.0) THEN
               IPSR=IPSR+1
               IW(JSRUN+IPSR)=IRUN
               GO TO 15
            ENDIF
            NZZRU=IW(KRUC+JBRUNZ)
            NZERG=NZERG+NZZRU
            ZLULU=0.
            IF (IRUN.LT.MINSIC.OR.IRUN.GT.MXLRU1) THEN
               ZLULU=RW(KRUC+JBRULU)
            ELSE
               CALL BKPOIN(LECDAF,'BSLU',IPER,JBSLU)
               IF (JBSLU.LE.0) GO TO 41
               DO 40 ISL=1,LROWS(JBSLU)
                  IF (ITABL(JBSLU,ISL,JRSLRN).NE.IRUN) GO TO 40
                  ZLULU=RTABL(JBSLU,ISL,JRSLLU)
                  GO TO 41
 40            CONTINUE
 41            CONTINUE
            ENDIF
            ZLUCA=ZLUCA+ZLULU
            IF (IZFIN.NE.0) GO TO 30
            IF (IZASKD.GT.0) THEN
                NZ0SL=NZ0SL+NZZRU
                IF (NZ0SL.GE.IZASKD) IZFIN=1
            ENDIF
            IF (NRUOK.LT.NSTRU) GO TO 15
C printout :
            NRUPR=NRUPR+1
            IF (NRUPR.EQ.1) THEN
               IF (IFL6.EQ.0) WRITE (LWRUSR,1002) (LIPR(KK),KK=1,NSTRU)
               IF (IFL6.EQ.1) WRITE (LWRUSR,1012) (LIPR(KK),KK=1,NSTRU)
               IF (IFL6.EQ.0) WRITE (LWRSRU,1002) (LIPR(KK),KK=1,NSTRU)
               IF (IFL6.EQ.1) WRITE (LWRSRU,1012) (LIPR(KK),KK=1,NSTRU)
            ELSE
               IF (IFL6.EQ.0) WRITE (LWRUSR,1003) (LIPR(KK),KK=1,NSTRU)
               IF (IFL6.EQ.1) WRITE (LWRUSR,1013) (LIPR(KK),KK=1,NSTRU)
               IF (IFL6.EQ.0) WRITE (LWRSRU,1003) (LIPR(KK),KK=1,NSTRU)
               IF (IFL6.EQ.1) WRITE (LWRSRU,1013) (LIPR(KK),KK=1,NSTRU)
            ENDIF
            NRUOK=0
            CALL VZERO(LIPR,NSTRU)
 15      CONTINUE
 20   CONTINUE
 30   CONTINUE
C
C final printout , if necessary :
C
      IF (IPSROU.EQ.10.OR.NRUOK.EQ.0) GO TO 640
      IF (NRUPR.EQ.0) THEN
         IF (IFL6.EQ.0) WRITE (LWRUSR,1002) (LIPR(KK),KK=1,NRUOK)
         IF (IFL6.EQ.1) WRITE (LWRUSR,1012) (LIPR(KK),KK=1,NRUOK)
         IF (IFL6.EQ.0) WRITE (LWRSRU,1002) (LIPR(KK),KK=1,NRUOK)
         IF (IFL6.EQ.1) WRITE (LWRSRU,1012) (LIPR(KK),KK=1,NRUOK)
      ELSE
         IF (IFL6.EQ.0) WRITE (LWRUSR,1003) (LIPR(KK),KK=1,NRUOK)
         IF (IFL6.EQ.1) WRITE (LWRUSR,1013) (LIPR(KK),KK=1,NRUOK)
         IF (IFL6.EQ.0) WRITE (LWRSRU,1003) (LIPR(KK),KK=1,NRUOK)
         IF (IFL6.EQ.1) WRITE (LWRSRU,1013) (LIPR(KK),KK=1,NRUOK)
      ENDIF
C
 640     IF (IPSROU.EQ.10) GO TO 650
         IF (ISORLE.GT.0) THEN
            IF (ILEP1.EQ.1) THEN
               WRITE ( LWRSRU,1121) ELEP,NZERG
               WRITE ( LWRSRU,1122) ZLUCA
               WRITE ( LWRUSR,1122) ZLUCA
            ELSE
               WRITE (LWRSRU,1123) ELEP,ZLUCA
               WRITE ( LWRUSR,1123) ELEP,ZLUCA
            ENDIF
         ELSE
            IF (ILEP1.EQ.1) WRITE ( LWRSRU,1120) NZERG
            WRITE ( LWRSRU,1122) ZLUCA
            WRITE ( LWRUSR,1122) ZLUCA
         ENDIF
 650  CONTINUE
 660  CONTINUE
C Add a NSEQ data card at the end of the SRUNCARD file for Opt 2 and 6 :
C Special action for 'IRUN' printout :
      MSG=' '
      MSG=FINAM(1:LNBLNK(FINAM))//SIRUC
      LMSG=MIN0(20,LNBLNK(MSG))
      IF (IPSROU.EQ.10) THEN
         CALL PRIRUN
      IF (IBKINT.EQ.-1) GO TO 999
         PRINT 2022,MSG(1:LMSG)
         WRITE ( LWRUSR , 2022 ) MSG(1:LMSG)
         GO TO 999
      ENDIF
      IF (IDSEAR.EQ.1.OR.IDSEAR.EQ.2.OR.IDSEAR.EQ.6) WRITE (LWRSRU,1024)
 670  IF (IBKINT.EQ.-1) GO TO 999
      PRINT 1022,MSG(1:LMSG)
      WRITE ( LWRUSR , 1022 ) MSG(1:LMSG)
C
 999  RETURN
C-----------------------------------------------------------------------
 1001 FORMAT (/)
 1002 FORMAT ('SRUN ',13I5)
 1003 FORMAT (5X,13I5)
 1012 FORMAT ('SRUN ',11I6)
 1013 FORMAT (5X,11I6)
 1015 FORMAT ('*** ===  SRUN CARDS for LEP energy = ',F8.2,' GEV',
     +       ' === *** ')
 1016 FORMAT ('*** ===  SRUN CARDS for LEP energies ',A10,' GeV',
     +       ' === *** ')
 1021 FORMAT ('****** === SRUNCARD File generated on ',2X,A8,' at',
     +        2X,A8)
 1022 FORMAT (/' ==== SRUN data cards written on file ',2X,A20/)
 1023 FORMAT ('****** === Runs ACCEPTED by Physics Group =',2X,A20)
 1024 FORMAT ('****** === Please DO NOT REMOVE the card below ! ****'/
     +        'NSEQ')
 1025 FORMAT ('****** === Runs ACCEPTED by Phys. Group Combinations =',
     +        /,'******',6X,A58)
 1026 FORMAT ('****** === Runs ACCEPTED by RUN_QUAL =',1X,A20)
 1027 FORMAT ('***** Runs selected for the following Tracking Quality :'
     +        ,/'***** ',6X,A28)
 1028 FORMAT ('****** WARNING !! You have asked for a maximum of ',I8,
     +        ' Z0s '/,'****** The SRUN CARDS below are NOT suited',
     +        ' to analyse all data !!')
 1120 FORMAT ('***** Number of Hadronic Z0s for above runs :',
     +        I8,' ****')
 1121 FORMAT ('***** # of Hadronic Z0s for above runs at',
     +        F8.2,' Gev :',I8,' ****')
 1122 FORMAT ('***** Total Luminosity for above runs :',
     +        F8.1,' nb**-1   ****')
 1123 FORMAT ('***** Total Lumi for above runs at',
     +        F8.2,'Gev : ',F8.1,' nb**-1   ****')
 2021 FORMAT ('****** === IRUN CARD File generated on ',2X,A8,' at',
     +        2X,A8/'****** === Warning ! Runs to be IGNORED !! ******')
 2022 FORMAT (/' ==== IRUN data cards written on file ',2X,A20/)
 2023 FORMAT ('****** === Runs ACCEPTED by LEP 2 Phys. Tool =',2X,A20)
 2025 FORMAT ('****** === Runs ACCEPTED by Phys. Tools Combinations =',
     +        /,'******',6X,A58)
      END
      SUBROUTINE PRUNMC(NFOUN,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Printout of MCarlo Runs in Option 5 of SCANBOOK
C  Author  J. Boucrot 27-Aug-1993
C Called from PROPT5
C Calls BKPOIN,BKFDAB,BKOPDA,PRMCD1                   from BOOKLIB
C Calls ALSTIN                                        from ALEPHLIB
C Output arguments :
C   NFOUN = number of datasets found
C     IER = 0  All OK
C     IER = 1  if no room for BOS banks
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- SCANSL ----
      COMMON / SELSST / NFDSET,NLDSET,NB1TAP
      PARAMETER ( NLSMX = 50 , NRTMX = 500 , NCOMC = 20 )
      CHARACTER FORMSO*4,TAPNSO*8
      COMMON / PRFINC / FORMSO,TAPNSO
      COMMON / PRFIND / NLEPSO,NADASO,MBYTSO,KINGSO,LISLSO(NLSMX),
     +                  LISRSO(NLSMX),NRUNSO,LIRUSO(NRTMX),NZ0DSO,
     +                  IPRVSO,ICOMSO(NCOMC)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BJJPAR ----
C-- BDESJJ ----
      PARAMETER(JBDEBN=1,JBDENE=2,JBDENC=3,JBDELS=4,LBDESA=20)
C-- BPROJJ ----
      PARAMETER(JBPRPN=1,JBPROP=2,JBPRNN=4,JBPRVN=6,JBPRCV=7,JBPRAV=8,
     +          JBPRDN=9,JBPRDD=10,JBPRNI=11,LBPROA=11)
C-- BRLIJJ ----
      PARAMETER(JBRLRN=1,JBRLNE=2,JBRLNB=3,LBRLIA=3)
C-- BSETJJ ----
      PARAMETER(JBSEAD=1,JBSEAU=6,JBSEFR=8,JBSEFE=9,JBSELR=10,JBSELE=11,
     +          JBSEWD=12,JBSEWH=13,JBSEND=14,JBSEBN=15,JBSEDF=16,
     +          JBSEBA=17,JBSEBP=18,JBSEBR=19,JBSEBS=20,JBSEBT=21,
     +          LBSETA=21)
C-- BSPFJJ ----
      PARAMETER(JBSPCO=1,JBSPKC=21,JBSPFR=22,JBSPSR=23,JBSPRG=24,
     +          LBSPFA=24)
C-- BTAPJJ ----
      PARAMETER(JBTAVS=1,JBTAFO=3,JBTARN=4,JBTALR=5,JBTABL=6,JBTANF=7,
     +          LBTAPA=7)
C-- BTPNJJ ----
      PARAMETER(JBTPVS=1,JBTPFO=3,JBTPRN=4,LBTPNA=4)
      INTEGER LILOC(2)
      CHARACTER*8 NAMB,KINPR
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      NFOUN=0
      IF (IDSEAR.NE.5.OR.IB1RUN.LE.0.OR.IB1RUN.GT.LRUNMC) GO TO 999
      IOLKI=-1
      NDSOK=0
C Read the MCarlo database :
      CALL BKFDAB(IB1RUN,0,NR,NAMB,IER1)
      IF (IER1.NE.0) GO TO 999
      CALL BKOPDA(NAMB,IERL)
      IF (IERL.NE.0) GO TO 900
C----------------------------------------------------------------------
C Loop on all MCarlo datasets to find run IB1RUN :
C
      CALL BKPOIN(LECDAF,'BDFS',IMCDAT,JBDFS)
      IF (JBDFS.LE.0) GO TO 900
      DO 500 IBD=1,LROWS(JBDFS)
         KBDFS=KROW(JBDFS,IBD)
         NPER=IW(KBDFS+JBDFNP)
         NROW=IW(KBDFS+JBDFNR)
         CALL BKPOIN(LECDAF,'BSET',NPER,JBSET)
         IF (JBSET.LE.0) GO TO 500
         KBSET=KROW(JBSET,NROW)
         NFRU=IW(KBSET+JBSEFR)
         NLRU=IW(KBSET+JBSELR)
         IRUOK=0
C Only 1 run on the dataset :
         IF (NFRU.EQ.NLRU) THEN
            IF (NFRU.EQ.IB1RUN) IRUOK=1
         ELSE
C Multi-run dataset :
            IBRL1=IW(KBSET+JBSEBA)
            IBRL2=IW(KBSET+JBSEBR)
            CALL BKPOIN(LECDAF,'BRLI',NPER,JBRLI)
            IF (IBRL1.GT.0.AND.IBRL2.GT.0.AND.JBRLI.GT.0) THEN
               DO 10 IBR=IBRL1,IBRL2
                  NRU=ITABL(JBRLI,IBR,JBRLRN)
                  IF (NRU.EQ.IB1RUN) IRUOK=1
 10            CONTINUE
            ENDIF
         ENDIF
C Dataset found with Run OK : print it
         IF (IRUOK.EQ.0) GO TO 500
         NFOUN=NFOUN+1
C Write header for new KINGAL :
         IF (NPER.NE.IOLKI) THEN
            IOLKI=NPER
            IKIK=0
            KINPR=' '
            JBKLI=IW(NAMIND('BKLI'))
            IF (JBKLI.EQ.0) GO TO 150
            NKLI=LROWS(JBKLI)
            DO 100 I=1,NKLI
               KBKLI=KROW(JBKLI,I)
               IF (ITABL(JBKLI,I,JBKLKC).NE.NPER) GO TO 100
               CALL ALSTIN(IW(KBKLI+JBKLKN),2,KINPR)
               IKIK=1
 100        CONTINUE
 150        CONTINUE
C
            IF (IKIK.NE.0) WRITE ( LWRUSR , 1010 ) KINPR(1:6),NPER
         ENDIF
         CALL BKPOIN(LECDAF,'BSPF',NPER,JBSPF)
         IF (JBSPF.LE.0) GO TO 500
         CALL BKPOIN(LECDAF,'BTPN',NPER,JBTPN)
         IF (JBTPN.LE.0) GO TO 500
         LILOC(1)=IBD
         NSTS=1
         WRITE ( LWRUSR , 1003) NFOUN
         CALL PRMCD1(NPER,JBSET,JBSPF,JBTPN,NSTS,LILOC)
 500  CONTINUE
      IF (NFOUN.GT.0.AND.IBKINT.EQ.2) WRITE ( LWRINT , 1002 ) IB1RUN
      GO TO 999
C
 900  IER=1
C
 999  RETURN
C----------------------------------------------------------------------
 1002 FORMAT (/5X,'>>>>> Several References found for MCarlo run ',I7/,
     +        11X,'See the details on the OUTPUT file <<<<<'/)
 1003 FORMAT (//' ==> Start printing infos on dataset number :',I8)
 1010 FORMAT (///1X,78(1H*)/1X,'* KINGAL generator : name ',2X,A6,
     +        ' code',I6,T79,1H*/1X,78(1H*)/)
      END
      SUBROUTINE PRVXLI(IPASS,DISKU,BLAF,IER)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Reads - or builds if necessary - the list of VAX files
C  Author  J. Boucrot 03-Dec-1990
C Modified: Helge Meinhard  03-Sep-1992   UNIX version
C Modified 22-Sep-1997 for Impatient Stream
C Called from BKFINDED,BKFINDFI       from BOOKLIB
C Calls BKINVT,PRPSLS                 from BOOKLIB
C Calls BKCARI                        from ALEPHLIB
C Input argument :
C  IPASS  = CALL number to this routine
C Output arguments:
C   DISKU = directory name found
C   BLAF  = File name found
C     IER = 0  :  all OK
C         = 1  :  end of file found , or split file not found
C         = 2  :  read error on list of files
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTIMI ----
      CHARACTER TIMNAN*11,ACCTIM*80,CDATIM*8,CSETIM*8,TIMFVX*24
      CHARACTER*8 UPDATL,UPTIML
      COMMON / BKTIMV / IYEAOL,IMONOL,IDAYOL,IHOUOL,IMINOL,ISECOL,
     +                  IYEANW,IMONNW,IDAYNW,IHOUNW,IMINNW,ISECNW
      COMMON / CKTIMV / TIMNAN,ACCTIM,CDATIM,CSETIM,UPDATL,UPTIML,
     +                  TIMFVX
      CHARACTER INFO*80,BLAF*80,DISKU*30,YEAR*4,FLISF*60
C-- BKENV ----
      CHARACTER*80  ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK
      CHARACTER*60 ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      INTEGER   ILSTAT,   ILERQF,   ILTEMP,   ILREFR, ILFILEL
      COMMON /BKENVC/ ALDATA,ALEDIR,ALMCDA,ALMCED,ALBOOK,
     +                ALS_STAT,ALS_RQF,ALS_TEMP,ALS_REFR,ALS_FILEL
      COMMON /BKENVI/ ILDATA,ILEDIR,ILMCDA,ILMCED,ILBOOK,
     +                ILSTAT,ILERQF,ILTEMP,ILREFR,ILFILEL
      CHARACTER CTYP*3, TOTAL*6, WEDIR*6, FILE*80, SIZE*9, DATE*12
      CHARACTER FFED*100
      DATA TOTAL/'total '/, WEDIR/'/edir/'/
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IER=0
      IF (OKEDIR.NE.'YES') GO TO 950
      IF (IPASS.EQ.1) THEN
         FLISF=' '
         IF (IMCDAT.EQ.2) THEN
            FLISF=ALBOOK(:ILBOOK)//'/filelist.mcarlo'
            GO TO 8
         ENDIF
         IF (IMCDAT.EQ.1.AND.IDSEAR.EQ.2) THEN
      FFED=' '
      FFED='ls -L -o '//ALEDIR(:ILEDIR)//'/P00* > imp_stream.list'
      call system(FFED(1:LNBLNK(FFED)))
            FLISF=' '
            FLISF='imp_stream.list'
            GO TO 8
         ENDIF
C Real data on ALWS : find the right file :
         IF (IDSEAR.EQ.5) THEN
            INADA=4
         ELSE
            INADA=IDASEL
         ENDIF
         IF (INADA.LE.0) GO TO 950
C Find year of data taking :
         IYEA=0
         IF (ISYEAR.GT.0) THEN
            IYEA=ISYEAR
            GO TO 4
         ENDIF
         DO 3 IY=1,NTOYEA-1
            IF (ISRUNF.LT.LISFRU(IY).OR.ISRUNF.GT.LISFRU(IY+1)) GO TO 3
            IYEA=LISYEA(IY)
            GO TO 4
 3       CONTINUE
 4       IF (IYEA.EQ.0) GO TO 950
         CALL BKCARI(IYEA,4,YEAR)
         CTYP = DNADAT(INADA)
         CALL CUTOL(CTYP)
         FLISF = ALBOOK(:ILBOOK)//'/filelist.'//CTYP//YEAR
 8       CONTINUE
C Open the file containing the List of FILES and EDIRS  on LECTXT
         OPEN (LECTXT,STATUS='OLD',READONLY,FILE=FLISF,ERR=900)
         IF (IBKINT.EQ.2) WRITE ( LWRINT,1031)
         REWIND ( LECTXT )
      ENDIF
C Read the informations concerning disk files on the UNIX system:
 10   READ (LECTXT, '(A)', END=900, ERR=950 ) INFO
      ILD = LNBLNK(INFO)
      IF (ILD .EQ. 0) GO TO 10
C keyword for EDIRS ?
      IF (INDEX(INFO,TOTAL).NE.0) GO TO 12
      IF (INDEX(INFO,WEDIR).NE.0) GO TO 12
   12 CALL PRPSLS(INFO,FILE,DATE,SIZE)
      BLAF = FILE
      BLAF(55:) = DATE
      BLAF(70:) = SIZE
      IF (IPASS.GT.10.AND.IDSEAR.EQ.2.AND.FILE(2:3).NE.'00') GO TO 900
      DISKU=' '
      GO TO 999
C----------------------------------------------------------------------
C End of list file :
 900  IER=1
      CLOSE (LECTXT)
      if (idsear.eq.2) call system(' rm -f imp_stream.list')
      GO TO 999
C  Error on list file :
 950  IER=2
 999  RETURN
 1031 FORMAT
     +  (' ---  Processing the List of Edirs on AFS ...')
      END
      SUBROUTINE PR4BUN(NFOUN,LISRU,LISPR,LISRO)
C----------------------------------------------------------------------
CKEY SCANBOOK PRINT
C! Print RUNS with 4-bunch Luminosities
C  Author  J.Boucrot 21-Nov-1994
C Called from PRPHYS                          from BOOKLIB
C Calls  BKPOIN                               from BOOKLIB
C Input arguments :
C  NFOUN =   Number of runs found from user's selection
C  LISRU =   List of addresses of sorted runs in BRUC bank
C  LISPR =   List of BRUC bank numbers for selected runs
C  LISRO =   List of ROW # in BRUC banks for selected runs
C----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- BOKJJP ----
C-- BCARJJ ----
      PARAMETER(JBCAVS=1,JBCAVI=3,JBCALA=5,JBCATY=7,JBCALO=10,JBCAMN=13,
     +          JBCAIN=15,JBCAPD=18,JBCACO=20,JBCAON=21,JBCARD=24,
     +          JBCART=26,JBCACM=28,JBCADN=43,JBCAWN=48,JBCARF=49,
     +          LBCARA=49)
C-- BDATJJ ----
      PARAMETER(JBDADU=1,JBDATU=3,LBDATA=4)
C-- BDFSJJ ----
      PARAMETER(JBDFTC=1,JBDFLO=3,JBDFCO=4,JBDFNP=5,JBDFNR=6,JBDFDF=7,
     +          JBDFFN=8,LBDFSA=8)
C-- BKLIJJ ----
      PARAMETER(JBKLKN=1,JBKLKC=3,LBKLIA=3)
C-- BNAMJJ ----
      PARAMETER(JBNAUN=1,JBNAUL=10,JBNARF=13,LBNAMA=14)
C-- BOFSJJ ----
      PARAMETER(JBOFNP=1,JBOFOF=2,JBOFLP=3,LBOFSA=3)
C-- BPERJJ ----
      PARAMETER(JBPEPA=1,JBPEPN=11,JBPELP=12,JBPEFE=13,JBPELE=14,
     +          JBPEFR=15,JBPELR=16,JBPEFD=17,JBPELD=18,LBPERA=18)
C-- BRANJJ ----
      PARAMETER(JBRAIN=1,JBRANI=5,LBRANA=5)
C-- BRUCJJ ----
      PARAMETER(JBRUVS=1,JBRUTT=3,JBRULF=5,JBRURN=6,JBRUMC=7,JBRUWD=8,
     +          JBRUWH=9,JBRUEV=10,JBRUEF=11,JBRUTE=12,JBRUNE=13,
     +          JBRUFL=14,JBRUDC=15,JBRUNZ=16,JBRUNB=17,JBRULD=18,
     +          JBRUCS=19,JBRUBR=20,JBRULU=21,JBRUBK=22,JBRUBT=23,
     +          JBRUVL=24,LBRUCA=24)
C-- BLASJJ ----
      PARAMETER(JBLALO=1,JBLAOU=2,JBLAMA=3,JBLARQ=4,JBLALE=5,JBLALU=6,
     +          JBLALF=7,JBLAP4=8,JBLAD4=9,JBLAMI=10,JBLANA=11,
     +          LBLASA=11)
C-- BLPRJJ ----
      PARAMETER(JBLPNT=1,JBLPFR=2,JBLPLR=3,JBLPFD=4,JBLPLD=5,JBLPRL=6,
     +          JBLPTQ=7,JBLPJV=8,LBLPRA=8)
C-- BMCLJJ ----
      PARAMETER(JBMCKG=1,JBMCLA=2,JBMCTO=3,JBMCKI=4,JBMCRA=5,JBMCPO=6,
     +          JBMCDS=7,JBMCMI=8,JBMCCR=9,JBMCNA=10,JBMCOT=11,
     +          LBMCLA=11)
C-- BPHYJJ ----
      PARAMETER(JBPHKE=1,JBPHNA=2,JBPHMA=7,JBPHDF=9,LBPHYA=38)
C-- BXYZJJ ----
      PARAMETER(JBXYRN=1,JBXYB0=2,JBXYB1=3,JBXYB2=4,JBXYB3=5,JBXYB4=6,
     +          JBXYB5=7,JBXYB6=8,JBXYB7=9,JBXYB8=10,JBXYB9=11,
     +          JBXYV0=12,JBXYV1=13,JBXYV2=14,JBXYV3=15,JBXYV4=16,
     +          JBXYV5=17,JBXYV6=18,JBXYV7=19,JBXYV8=20,JBXYV9=21,
     +          JBXYPZ=22,JBXYRZ=23,LBXYZA=23)
C-- BDADJJ ----
      PARAMETER(JBDANR=1,JBDAPM=2,JBDAPX=3,JBDANB=4,JBDALB=6,LBDADA=30)
C-- BPLIJJ ----
      PARAMETER(JBPLPN=1,JBPLPC=4,JBPLAC=5,LBPLIA=5)
C-- BYEAJJ ----
      PARAMETER(JBYEYR=1,JBYEFR=2,JBYELR=3,LBYEAA=3)
C-- BKMCJJ ----
      PARAMETER(JBKMVS=1,JBKMMD=3,LBKMCA=3)
C-- BKMDJJ ----
      PARAMETER(JBKMIY=1,JBKMNE=2,JBKMXS=3,JBKMJV=4,JBKMGV=5,JBKMMN=6,
     +          LBKMDA=6)
C-- BKMNJJ ----
      PARAMETER(JBKMSP=1,JBKMNO=5,LBKMNA=64)
C-- BEXAJJ ----
      PARAMETER(JBEXAX=1,JBEXNP=2,JBEXDF=3,JBEXFX=4,JBEXLX=5,JBEXNR=6,
     +          LBEXAA=6)
C-- BXLIJJ ----
      PARAMETER(JBXLTA=1,LBXLIA=2)
C-- BDRQJJ ----
      PARAMETER(JBDRRN=1,JBDRDP=2,LBDRQA=4)
C-- BS4BJJ ----
      PARAMETER(JBS4RN=1,JBS4LQ=2,JBS4B1=3,JBS4L1=4,JBS4K1=5,JBS4B2=6,
     +          JBS4L2=7,JBS4K2=8,JBS4B3=9,JBS4L3=10,JBS4K3=11,
     +          JBS4B4=12,JBS4L4=13,JBS4K4=14,LBS4BA=14)
C-- BTHOJJ ----
      INTEGER JBTHNL,JBTHTA,JBTHFI,JBTHLA,JBTHHO,LBTHOA
      PARAMETER(JBTHNL=1,JBTHTA=3,JBTHFI=4,JBTHLA=5,JBTHHO=6,LBTHOA=6)
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKCONS ----
      PARAMETER ( MAXCH = 15  , MAXIN = 60 , NBROW = 20 )
      CHARACTER*1 DATNAT
      CHARACTER*8 OPSYST,PRNAME
      COMMON /BKCONS/ OPSYST,PRNAME,DATNAT
      COMMON /BKPPNB/ NPERPR
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*4 BLLUM(4)
      INTEGER LISRU(*),LISPR(*),LISRO(*)
      INTEGER N4BU(4)
      REAL X4BU(4)
      DATA BLLUM  / 'Unkn' , 'Prov' , 'OK  ' ,'Undf' /
      DATA NR4BU  / 30041 /
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C----------------------------------------------------------------------
      IF (NFOUN.LE.0) GO TO 999
      IRU4B=0
C
C Loop on all runs found and print the content :
C
      DO 80 IRU=1,NFOUN
C Find run number from bank 'BRUC' :
         CALL BKPOIN(LECDAF,'BRUC',LISPR(IRU),JBRUC)
         IF (JBRUC.LE.0) GO TO 80
         ISR=LISRU(IRU)
         IF (ISR.LE.0) GO TO 80
         IKH=LISRO(ISR)
         IRUN=ITABL(JBRUC,IKH,JBRURN)
         IF (IRUN.LT.NR4BU) GO TO 80
C Find 4-bunch bank BS4B , if any :
         CALL BKPOIN(LECDAF,'BS4B',LISPR(IRU),JBS4B)
         IF (JBS4B.LE.0) GO TO 80
         CALL VZERO(N4BU,4)
         CALL VZERO(X4BU,4)
         ILUQ=-1
C Find run IRUN in this bank :
         DO 60 IBS4B=1,LROWS(JBS4B)
            KBS4B=KROW(JBS4B,IBS4B)
            IF (IW(KBS4B+JBS4RN).NE.IRUN) GO TO 60
            IRU4B=IRU4B+1
C Print general header :
            IF (IRU4B.EQ.1) WRITE ( LWRUSR,1001)
            N4BU(1)=IW(KBS4B+JBS4B1)
            X4BU(1)=RW(KBS4B+JBS4L1)
            N4BU(2)=IW(KBS4B+JBS4B2)
            X4BU(2)=RW(KBS4B+JBS4L2)
            N4BU(3)=IW(KBS4B+JBS4B3)
            X4BU(3)=RW(KBS4B+JBS4L3)
            N4BU(4)=IW(KBS4B+JBS4B4)
            X4BU(4)=RW(KBS4B+JBS4L4)
            ILUQ=1+IW(KBS4B+JBS4LQ)
            GO TO 61
 60      CONTINUE
 61      IF (ILUQ.EQ.-1) GO TO 80
         IDAT=ITABL(JBRUC,IKH,JBRUWD)
         ENER=0.001*FLOAT(ITABL(JBRUC,IKH,JBRUTE))
         XLUS=VSUM(X4BU,4)
         WRITE (LWRUSR,1004) IRUN,IDAT,ENER,BLLUM(ILUQ),N4BU,X4BU,XLUS
 80   CONTINUE
C
 999  RETURN
C----------------------------------------------------------------------
 1001 FORMAT (/25X,60(1H-)/29X,'Runs with 4 bunches :  Luminosities ',
     +        'per bunch :'/25X,60(1H-)//1X,115(1H-)/
     +        T3,'Run',T8,1H|,T10,'Date  ',T17,1H|,T22,'LEP',
     +        T27,1H|,T30,'Status',T38,1H|,T45,'Number of Bhabhas',
     +        T65,1H|,T70,'Luminosity per Bunch  nb**-1',T105,1H|,T109,
     +        'Lumi'/,T8,1H|,T10,'yymmdd',T17,1H|,T20,'Energy',T27,1H|,
     +        T31,'Lumi',T38,1H|,T43,'B 1   B 2   B 3   B 4',T65,1H|,
     +        T68,'Bunch 1  Bunch 2  Bunch 3  Bunch 4',T105,1H|,
     +        T109,'Total'/1X,115(1H-))
 1004 FORMAT (I6,T8,1H|,T10,I6,T17,1H|,T19,F7.3,T27,1H|,T31,A4,T38,1H|,
     +        T40,4I6,T65,1H|,T66,4(2X,F7.3),T105,1H|,T107,F7.3)
      END
      SUBROUTINE PTO
C-----------------------------------------------------------------------
CKEY TOOL/USER
C! Subroutine to wait for any terminal input (not PF key) then return.
C  Called from User
C Modified: Helge Meinhard  03-Sep-1992   UNIX version
C-----------------------------------------------------------------------
C-- BKLUPD ----
      COMMON / BKLUPD / LECDAT,LECDFN,LECDAF,LECRQL,LECSEQ,LECKIN,
     +                  LEBCAR,LECRQF,LECTXT,LECCAR,LECVMA,LECNWP,
     +                  LECINT,LECMAK,LECPHY,LECPRO,LECXYZ,
     +                  LECPLI,LECYEA,LECFMT,LECTDR,
     +                  LWRERR,LWRSEQ,LWRFRI,LWRFRV,LWRINT,LWRTMP,
     +                  LWRUSR,LWRSPY,LWRMGR,LWRBLA,LWRFLI,LWBMBY,
     +                  LWRJSU,LWRRQU,LWRRAW,LWRINS,LWRSQP,LWRUUU,
     +                  LWRTMS,LWRDBG,LWRFIL,LWRSRU,LWBRK7,LWRCAR,
     +                  LWRFER
      CHARACTER*1 BLA
C-----------------------------------------------------------------------
      WRITE(LWRINT,*) ' *** CR to continue ***'
      READ (LECINT,'(A)',ERR=999) BLA
  999 RETURN
      END
      SUBROUTINE PRWARNX11(TEXT)
C-----------------------------------------------------------------------
CKEY  SCANBOOK X11
C! Create an ERROR WARNING window for user information in SCANX11
C Author J.Boucrot 12-Feb-1997
C Called from BKSEPR,BKFINDED,BKFINDTA,BKOPT5         from BOOKLIB
C Calls  WINX11                                       from BOOKLIB
C
C Input arguments :
C TEXT  = text of warning to be displayed
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER TEXT*(*)
C-----------------------------------------------------------------------
      IF (IBKINT.NE.-1) GO TO 999
      CALL WINX11(301,TEXT)
      CALL WINX11(999,TEXT)
 999  RETURN
      END
      SUBROUTINE PRWINX11(NFOUN,NLINS)
C-----------------------------------------------------------------------
CKEY  SCANBOOK X11
C! Create a message window for the user information in SCANX11
C Author J.Boucrot 12-Feb-1997
C Called from PROPT2,PROPT3,PROPT5,PRDSET,PRIPRO      from BOOKLIB
C Calls WINX11                                        from BOOKLIB
C
C Input arguments :
C NFOUN = number of datasets found
C NLINS = number of lines printed on logfile
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER TEXT*90,MSG*90
C-----------------------------------------------------------------------
      TEXT=' '
      IF (IBKINT.NE.-1) GO TO 999
C
C No datasets found :
C
      IF (NFOUN.EQ.0) THEN
         TEXT='Warning ! No datasets found !'
         CALL WINX11(201,TEXT)
         CALL WINX11(999,TEXT)
         GO TO 999
      ENDIF
C
C Successful running :
C
      IF (NFOUN.GT.0) THEN
         TEXT='SCANBOOK ended successfully !'
         CALL WINX11(200,TEXT)
         IF (IDSEAR.EQ.3) THEN
            WRITE (TEXT,1100) NFOUN
         ELSE
            WRITE (TEXT,1101) NFOUN
         ENDIF
         CALL WINX11(201,TEXT)
         IF (IDSEAR.GE.8) GO TO 999
C Lines on logfile:
         IF (IDSEAR.NE.2.AND.NLINS.GT.0) THEN
            WRITE (TEXT,1102) NLINS
            CALL WINX11(202,TEXT)
            MSG=' '
            MSG=CARDSF(1:LNBLNK(CARDSF))//'.output'
            WRITE (TEXT,1103) MSG
            CALL WINX11(277,TEXT)
         ENDIF
C SRUNCARD file written:
         IF (IMCDAT.EQ.1.AND.IPSROU.GT.0.AND.IPSROU.NE.10) THEN
            TEXT='SRUN CARDS file written'
            CALL WINX11(203,TEXT)
         ENDIF
C IRUNCARD file written:
         IF (IPSROU.EQ.10) THEN
            TEXT='IRUN CARDS file written'
            CALL WINX11(203,TEXT)
         ENDIF
C FILICARD file written:
         IF (IDSEAR.NE.3.AND.IWFILI.GT.0) THEN
            TEXT='FILI CARDS file written'
            CALL WINX11(204,TEXT)
         ENDIF
         CALL WINX11(999,TEXT)
      ENDIF
C
 999  RETURN
 1100 FORMAT ('Number of runs found :',I6)
 1101 FORMAT ('Number of datasets found :',I6)
 1102 FORMAT (I6,' lines written on logfile :')
 1103 FORMAT (A)
      END
      SUBROUTINE WINX11(IKOD,TEXT)
C-----------------------------------------------------------------------
CKEY  SCANBOOK X11
C! Writes a message in the SCANX11 message window
C Author J.Boucrot 12-Feb-1997
C Called from PRWINX11 and other routines
C Calls f_manip_msg_window                 from C_BOOKLIB
C
C Input arguments :
C IKOD = code from the calling routine,
C      = 999 to finish the message
C TEXT = text o be displayed (1 line at a time)
C-----------------------------------------------------------------------
      SAVE IBLA,NLIN
      CHARACTER*(*) TEXT
      DATA IBLA,NLIN / -1 , 0 /
C-----------------------------------------------------------------------
      IF (IKOD.EQ.999) GO TO 100
      IF (IKOD.NE.IBLA) THEN
         IBLA=IKOD
         NLIN=NLIN+1
      ENDIF
      IF (NLIN.EQ.1) call f_manip_msg_window(text,-1,1)
      IF (NLIN.gt.0) call f_manip_msg_window(text,1,1)
 100  IF (IKOD.EQ.999) THEN
         NLIN=0
         call f_manip_msg_window(text,0,1)
      ENDIF
 999  RETURN
      END
      SUBROUTINE RMVSP(LLIN,LLOUT,NOUT)
C----------------------------------------------------------------------
CKEY SCANX11
C! Remove spaces in a character string
C Author A.Bonissent January 1997
C Input  argument :
C   LLIN = input character stream with blanks
C Output arguments :
C  LLOUT = output character stream with blanks removed
C   NOUT = number of non-blank remaining characters
C----------------------------------------------------------------------
      CHARACTER*(*) LLIN,LLOUT
C----------------------------------------------------------------------
      NC=LEN(LLIN)
      NOUT=0
      DO 10 IC=1,NC
      IF(LLIN(IC:IC).NE.' ')THEN
         NOUT=NOUT+1
         LLOUT(NOUT:NOUT)=LLIN(IC:IC)
      ENDIF
   10 CONTINUE
      RETURN
      END
      subroutine dosearch
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Starts SCANBOOK execution from X11
C Author A.Bonissent January 1997
C Calls BKSEXQ,BKREDO                          from BOOKLIB
C Called from  C routines
C----------------------------------------------------------------------
      logical first
      data first /.true./
C----------------------------------------------------------------------
      if (first) then
        call bksexq(ier,ifail)
        call bkredo(ier)
        first = .false.
      else
        call f_newname
       endif
      return
      end
      SUBROUTINE GETENX11(VALUE)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Get the LEP Energy in X11 mode
C  J. Boucrot 05-Nov-1997
C  Called from PUSHFOR                                 from BOOKLIB
C  Calls BKTOLSET                                      from BOOKLIB
C Input argument :
C  VALUE = string read from click in energy menu
C Common variable defined in this routine for the search :
C    ENGLEP          from / BKKEYS /
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER*(*) VALUE
      CHARACTER*30 VAL
C-----------------------------------------------------------------------
      val=' '
      val=value(1:lnblnk(value))
      call cltou(val)
      IENV97=0
C Standard input = LEP energy in MeV
      IF (INDEX(VAL,'->').EQ.0) THEN
         READ (VALUE,*) ENGLEP
         ENGLEP=ENGLEP/1000.
         go to 999
      ENDIF
C Special input for 1997 groups of energies:
      IENV97=1
      IF (INDEX(VAL,'13').GT.0) THEN
         ENGLEP=ENG197
      ELSE
         ENGLEP=ENG297
      ENDIF
C Redefine the search tolerances:
      CALL BKTOLSET
C
 999  RETURN
      END
      SUBROUTINE GETGROUP(full_name,two_lett)
C-----------------------------------------------------------------------
CKEY SCANX11
C! Gives the two-letter code for a given Physics group or tool
C  J. Boucrot 27-Aug-1997
C Input arguments:
C    full_name = complete name of the Physics goup or tool
C    two_lett  = 2 letter code of the Physics goup or tool
C              = ' ' if gourp not found
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      CHARACTER*(*) full_name,two_lett
      CHARACTER GROUN*20
C-----------------------------------------------------------------------
      groun=full_name(1:20)
      call cltou(groun)
      two_lett=' '
      DO 100 KK=1,NGROUF
         IF (INDEX(GROUN,GROUPH(KK)).EQ.0) GO TO 100
         TWO_LETT=KEYWPH(KK)
         GO TO 999
 100  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE GETSMC97(CODE,IP97)
C-----------------------------------------------------------------------
CKEY SCANX11  SEARCH
C! Find the code number for special 1997 MCarlo selections
C  J. Boucrot 03-Sep-1997
C Called from pushfor                             from BOOKLIB
C Calls ALSTIN                                    from ALEPHLIB
C Calls RMVSP                                     from BOOKLIB
C Input argument :
C  CODE = text for special MC 1997 selection
C Output argument :
C  IP97 = integer code for this special MC 1997 selection
C-----------------------------------------------------------------------
C-- BCS ----
      INTEGER LMHLEN, LMHCOL, LMHROW
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2)
C
      COMMON /BCS/   IW(1000)
      INTEGER IW
      REAL RW(1000)
      EQUIVALENCE (RW(1),IW(1))
C
C-- KINSEL ----
      PARAMETER ( NKIN = 100 , NDAT = 7 )
      CHARACTER*8 KINNAMES
      CHARACTER*12 PARKODS
      COMMON / KINCHARS / KINNAMES(NKIN),PARKODS(NKIN)
      COMMON / KININT   / NTOKNAM,NTOPARK,KINCODL(NKIN),IPARLIS(NKIN),
     +                    NTOTKIN,LISTKINS(NDAT,NKIN),
     +                    NPRESK,LIPRESK(NKIN)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKM7JJ ----
      PARAMETER (JBKMKW=1,JBKMDE=4,LBKM7A=18)
C-- MASGEN ----
      PARAMETER (NMAS=20 , NTKM7=200 , NCY=10000 , IYERF=1997)
      CHARACTER*5 CMGENS
      COMMON / IMASGEN / NBMASS,LIMASS(NMAS),NGENMA,LIGENS(NMAS),
     +                   NSELROB7,LROBKM7(NTKM7),IROBKM7(NTKM7),
     +                   IROMAS(NTKM7)
      COMMON / IMASSEL / ISELMAS,ISELGEN,ISELROB7
      COMMON / CMASGEN / CMGENS(NMAS)
      CHARACTER*60 BLAKODS(NTKM7),CODLU,CODBK
      CHARACTER*(*) CODE
C-- BMACRO ----
C!    set of intrinsic functions to handle BOS banks
C - # of words/row in bank with index ID
      LCOLS(ID) = IW(ID+1)
C - # of rows in bank with index ID
      LROWS(ID) = IW(ID+2)
C - index of next row in the bank with index ID
      KNEXT(ID) = ID + LMHLEN + IW(ID+1)*IW(ID+2)
C - index of row # NRBOS in the bank with index ID
      KROW(ID,NRBOS) = ID + LMHLEN + IW(ID+1)*(NRBOS-1)
C - # of free words in the bank with index ID
      LFRWRD(ID) = ID + IW(ID) - KNEXT(ID)
C - # of free rows in the bank with index ID
      LFRROW(ID) = LFRWRD(ID) / LCOLS(ID)
C - Lth integer element of the NRBOSth row of the bank with index ID
      ITABL(ID,NRBOS,L) = IW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C - Lth real element of the NRBOSth row of the bank with index ID
      RTABL(ID,NRBOS,L) = RW(ID+LMHLEN+(NRBOS-1)*IW(ID+1)+L)
C-----------------------------------------------------------------------
      IP97=0
      NKOMX=NTKM7
      IF (INIP97.EQ.0) GO TO 999
      CALL CLTOU(CODE)
      CODLU=' '
      CALL RMVSP(CODE(13:LNBLNK(CODE)),CODLU,NNB)
      NR=KINCOD+NCY*(IGEOYR-IYERF)
      JBKM7=NLINK('BKM7',NR)
      IF (JBKM7.LE.0) GO TO 999
      NTOK=LROWS(JBKM7)
      IF (NTOK.GT.NKOMX) GO TO 999
      DO 50 II=1,NKOMX
         BLAKODS(II)=' '
 50   CONTINUE
C Make the list of codes for this Mcarlo; find IP97
      DO 100 IBKM7=1,NTOK
         KBKM7=KROW(JBKM7,IBKM7)
         CALL ALSTIN(IW(KBKM7+JBKMDE),LBKM7A-JBKMDE+1,BLAKODS(IBKM7))
         CALL CLTOU(BLAKODS(IBKM7))
         CODBK=' '
         CALL RMVSP(BLAKODS(IBKM7),CODBK,NNK)
         IF (NNK.NE.NNB) GO TO 100
         IF (INDEX(CODLU(1:NNB),CODBK(1:NNK)).EQ.0) GO TO 100
         IP97=IBKM7
         GO TO 999
 100  CONTINUE
C
 999  RETURN
      END
      SUBROUTINE LISTGROUP(LU)
C-----------------------------------------------------------------------
CKEY SCANBOOK SEARCH
C! Gives the list of Physics Groups or Physics Tools Groups
C  J. Boucrot 27-Aug-1997
C Calls  BKCLDX11                                 from BOOKLIB
C Input argument :
C    LU = unit for the user dialogue
C-----------------------------------------------------------------------
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
       CHARACTER GROUL*20
C-----------------------------------------------------------------------
      CALL BKCLDX11
      DO 100 KK=1,NGROUF
         IF (IPGVAL(KK).EQ.0) GO TO 100
         NLINX11=NLINX11+1
          GROUL=GROUPH(KK)
          CALL CUTOL(GROUL)
          WRITE (XLIN11(NLINX11),2010) GROUL
 100  CONTINUE
 999  RETURN
 2010 FORMAT (A20)
      END
      subroutine fscanbook
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Initialisation of Scanbook in SCANX11
C Author A.Bonissent January 1997
C Calls BKINAL,BKSEHE                        from BOOKLIB
C Called from  C routines
C----------------------------------------------------------------------
      CALL BKINAL(1,IER)
      CALL BKSEHE
      return
      end
      subroutine redosearch(filename)
C----------------------------------------------------------------------
CKEY SCANX11 windows
C!  Restarts SCANBOOK for a new X11 run
C Author A.Bonissent January 1997
C Calls BKNEWNAM,BKREFI,BKSEXQ,BKREDO            from BOOKLIB
C Called from  C routine newnam
C----------------------------------------------------------------------
      character *(*) filename
C----------------------------------------------------------------------
      call bknewnam(filename,ier)
      if (ier.eq.0) then
         call bkrefi(ier)
         call bksexq(ier,ifail)
         call bkredo(ier)
      endif
      return
      end
      subroutine pushfor(code,value)
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Communicatiion between X11 panels and Scanbook common blocks
C Author A.Bonissent January 1997 - modified Sept 1997
C Calls BKFIROU,BKVYEAR,DIRUFIYE,BKPRLX11,BKOPT5      from BOOKLIB
C Calls BKPKODI                                       from BOOKLIB
C Calls SETRADNAT,KINLIST,MAJSPP,MAJJVER,MAJGALJUL    from BOOKLIB
C Calls XDISPLAY,FLRNFL,RMVSP,GETSMC97,KINGOPT..      from BOOKLIB
C Calls many X11 C routines
C Called from  C routines
C----------------------------------------------------------------------
C-- DATX11 ----
      PARAMETER ( NDX11 = 50 )
      CHARACTER*80 XDATX11
      COMMON / IDATX11 /  NDATX11,NPROCL,LPROCL(4)
      COMMON / CDATX11 /  XDATX11(NDX11)
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      integer iwork(6)
      character*5 isnot
      character*2 group
      character*(*) code,value
      character*132 mycode,myvalue,locstr
C----------------------------------------------------------------------
C Change cursor to watch (reset at the end)
      call f_setwatch
      mycode=code
      myvalue=value
      call cltou(mycode)
      call cltou(myvalue)
      call f_currw('jul_proc_lev_2')
C*****************
C Temporary : always select by level
        iprosl=1
C*****************
C----------------------------------------------------------------------
C Type of menu:
      if (mycode.eq.'DATATYPE_MENU') THEN
         if (myvalue.eq.'MC DATA') then
           imcdat=2
           idsear=4
           call f_handlewidget('sel_institute',1,0)
           call f_handlewidget('frame_nature',1,0)
           call bkfirou
           call setradnat(1,1,1,-1,1,1,0)
           igeoyr=isyear
           if (igeoyr.ge.1997) inip97=1
           call kinlist
           call f_handlewidget('kingal_menu',1,0)
C if we need to remove the current selection, also need to tell scanbook
           if(idasel.eq.4)idasel=0
         endif
         if (myvalue.eq.'REAL DATA') then
           imcdat=1
           call setradnat(-1,1,1,1,1,1,0)
C if we need to remove the current selection, also need to tell scanbook
           if (idasel.eq.1) idasel=0
C Manage the nature-output window according to IDSEAR
           call f_handlewidget('frame_nature',1,0)
           if(idsear.eq.3.or.idsear.eq.5.or.idsear.eq.8.or.idsear.eq.2)
     >         call f_handlewidget('frame_nature',-1,0)
C Unmanage the kingal menu
               call f_handlewidget('kingal_menu',-1,0)
C Shrink the main window, to hide the kingal options menu
              call f_resize_main_window(-1)
         endif
      endif
C----------------------------------------------------------------------
C menu = Select institute:
C
      if (mycode.eq.'INST_SELECT_MENU') THEN
         if (myvalue.eq.'CERN')       ilabch=1
         if (myvalue.eq.'GERMANY')    ilabch=2
         if (myvalue.eq.'IN2P3')      ilabch=3
         if (myvalue.eq.'SACLAY')     ilabch=4
         if (myvalue.eq.'U. K')       ilabch=5
         if (myvalue.eq.'FLORIDA')    ilabch=6
         if (myvalue.eq.'WISCONSIN')  ilabch=7
         if (myvalue.eq.'ITALY')      ilabch=8
         if (myvalue.eq.'BEIJING')    ilabch=9
         if (myvalue.eq.'BARCELONA')  ilabch=10
         if (myvalue.eq.'COPENHAGEN') ilabch=11
         call kinlist
      endif
C----------------------------------------------------------------------
C menu = Select year:
C
      if (mycode.eq.'GEOM_YEAR_MENU'.or.mycode.eq.'RDYS_MENU') THEN
         ivalyr=0
         ilp195=0
         if (index(myvalue,'1989').ne.0) ivalyr=1989
         if (index(myvalue,'1990').ne.0) ivalyr=1990
         if (index(myvalue,'1991').ne.0) ivalyr=1991
         if (index(myvalue,'1992').ne.0) ivalyr=1992
         if (index(myvalue,'1993').ne.0) ivalyr=1993
         if (index(myvalue,'1994').ne.0) ivalyr=1994
         if (index(myvalue,'1995').ne.0)then
           ivalyr=1995
           if (index(myvalue,'LEP1').ne.0)   ilp195=1
           if (index(myvalue,'LEP1.5').ne.0) ilp195=0
         endif
         if (index(myvalue,'1996').ne.0) ivalyr=1996
         if (index(myvalue,'1997').ne.0) ivalyr=1997
         if (index(myvalue,'1998').ne.0) ivalyr=1998
         if (index(myvalue,'1999').ne.0) ivalyr=1999
         if (index(myvalue,'2000').ne.0) ivalyr=2000
         if (index(myvalue,'CURRENT_YEAR').ne.0)THEN
           call BKGYEAR(ivalyr)
           iposy = ivalyr-1987
           call f_handlewidget('geom_year_opt',4,iposy)
           call f_handlewidget('rdys_opt',4,iposy)
         endif
C MCarlo: selection of GALEPH year of geometry:
         if (mycode.eq.'GEOM_YEAR_MENU') then
           igeoyr=ivalyr
           if (igeoyr.ge.1997)then
              inip97=1
           else
              call f_resize_main_window(-1)
                 inip97=0
           endif
           call kinlist
           call f_handlewidget('kingal_menu',1,0)
         endif
C Real data: special selections for 1992 (tracking quality):
         if (mycode.eq.'RDYS_MENU') then
           isyear=ivalyr
           IYEASL=1
           call bkvyear(ier)
           call bkpgval
           if (isyear.eq.1992) then
             call f_handlewidget('frame_trkqual',1,0)
             call f_handlewidget('radio_trkqual',3,1)
           else
             call f_handlewidget('frame_trkqual',-1,0)
           endif
         endif
      endif
C----------------------------------------------------------------------
C menu = KINGAL generators:
C
      if (mycode.eq.'KINGAL_LIST') THEN
         read (myvalue,900) kincod
  900    format(5x,I6)
         read (myvalue(30:80),*) (iwork(ird),ird=1,6)
         do ird=1,6
           if (iwork(ird).eq.0) iwork(ird)=-1
           if (iwork(ird).gt.0) iwork(ird)=1
         enddo
         call setradnat
     >     (iwork(1),iwork(2),iwork(3),iwork(4),iwork(5),iwork(6),0)
         call kingopt
      endif
C----------------------------------------------------------------------
C menu = KINGAL generator options
C
      if (mycode.eq.'KINGAL_OPT_LIST') THEN
         inip97=1
         write(6,*)myvalue
         call getsmc97(myvalue,ip97)
         if(ip97.gt.0) then
            irow97=ip97
         endif
      endif
C----------------------------------------------------------------------
C menu = Select nature of data:
C
      if (mycode.eq.'RADIO_NATURE'.and.idsear.ne.3) THEN
         call f_handlewidget('edirselection',1,0)
         if (myvalue.eq.'KIN')  idasel=1
         if (myvalue.eq.'RAW')  idasel=2
         if (myvalue.eq.'POT')  idasel=3
         if (myvalue.eq.'DST')  idasel=4
         if (myvalue.eq.'MINI') idasel=5
         if (myvalue.eq.'NANO') idasel=6
        if (idasel.eq.3) call prwrpx11
         if (idasel.eq.2) then
           call f_handlewidget('jul_proc_lev',-1,0)
           call f_handlewidget('date_select',1,0)
         else
           call f_handlewidget('jul_proc_lev',1,0)
           call f_handlewidget('date_select',-1,0)
         endif
      endif
C----------------------------------------------------------------------
C menu = Select LEP energy:
C
      if (mycode.eq.'LEP_EN_MENU') THEN
         if (index(myvalue,'ANY').eq.0) then
           call getenx11(value)
           call f_handlewidget('filisorted',-2,0)
         else
           ienv97=0
           englep=-1.
           call f_handlewidget('filisorted',2,0)
         endif
         call majspp
         call majjver(0)
         call majgaljul
      endif
C----------------------------------------------------------------------
C menu = Select special particles (MCarlo):
C
      if (mycode.eq.'SPECIALPARTICLES') THEN
         if (index(myvalue,'ANY').ne.0) then
            iselpa=-1
         elseif (index(myvalue,'Q QBAR').ne.0) then
            iselpa=0
         else
            call bkpkodi(myvalue,iselpa,ier)
         endif
         call majgaljul
      endif
C----------------------------------------------------------------------
C menu = Select GALEPH/JULIA version number:
C
      if (mycode.eq.'GALJUL_LIST') THEN
        read (myvalue(4:13),*)  igalpr
        read (myvalue(14:21),*) iprgvr
        read (myvalue(22:29),*) iminpr
        if (imcdat.eq.2) then
           igalpr=-igalpr
           iprgvr=-iprgvr
        endif
      endif
C----------------------------------------------------------------------
C menu = Select EDIRs sorted by LEP energy:
C
      if (mycode.eq.'SORTEDYESNO') THEN
        if (myvalue.eq.'YES') isorle=1
        if (myvalue.eq.'NO')  isorle=0
      endif
      if (mycode.eq.'EDIR_YESNO') THEN
        if (myvalue.eq.'YES') iwfili=2
        if (myvalue.eq.'NO')  iwfili=1
      endif
C----------------------------------------------------------------------
C menu = Selection by Year,Fill or Run :
C
      if (mycode.eq.'MENU_YEARUNSEL') THEN
        iyeasl=0
        irunsl=0
        ifilsl=0
        if (myvalue.eq.'YEAR') then
           iyeasl=1
           call f_handlewidget('rd_ys',1,0)
           call f_handlewidget('fill_1',-1,0)
        else
           if (myvalue.eq.'FILL(S)') ifilsl=1
           if (myvalue.eq.'RUN(S)')  irunsl=1
           call dirufiye(0)
           call xdisplay('fill1_list',1,1)
           call f_handlewidget('rd_ys',-1,0)
           call f_handlewidget('fill_1',1,0)
        endif
        call flrnfl(myvalue)
      endif
      if(mycode.eq.'FILLRUSTR')THEN
        IYEASL=0
        ISYEAR=0
        call bkrfyx11(myvalue,ier)
      endif
C----------------------------------------------------------------------
C menu = Selection of JULIA processing level:
C
      if (mycode.eq.'JUL_PROC_LEV_2') THEN
        if (myvalue.eq.'RESET') then
          ndatx11=0
        else
          ndatx11=ndatx11+1
          xdatx11(ndatx11)=myvalue
          call bkprlx11
        endif
      endif
      if (mycode.eq.'JULPROC_MENU') then
         idatsl=0
         ijulsl=0
         iprosl=0
         if (myvalue.eq.'LEVEL')   iprosl=1
         if (myvalue.eq.'VERSION') ijulsl=1
      endif
C----------------------------------------------------------------------
C menu = Selection of Run_Quality:
C
      if (mycode.eq.'RUN_SEL_MENU') THEN
        call bkpgset
        iselph=1
        isperf=0
        iphygr=0
        if (myvalue.eq.'ALL RUNS')     iselph=0
        if (myvalue.eq.'PERF OR MAYB') isperf=0
        if (myvalue.eq.'ONLY PERF')    isperf=1
        if (myvalue.eq.'PHYS. GROUPS') iphygr=1
        if (iphygr.eq.0) then
          NCPHS=1
          phykey=' '
          call f_reset_phys_sel
          call f_handlewidget('phys_sel',-1,0)
          call f_currw('jul_proc_lev_2')
          call majjver(1)
        else
         call bkpgset
          call listgroup(6)
          call xdisplay('phys_sel_menu',3,1)
          call f_handlewidget('phys_sel',1,0)
          call f_currw('jul_proc_lev_2')
          call majjver(0)
        endif
      endif
      if(mycode.eq.'PHYS_SEL_MENU'.and.myvalue.eq.'RESET')THEN
        NCPHS=1
        phykey=' '
        call majjver(1)
      ENDIF
C----------------------------------------------------------------------
C menu = Selection of Physics Group:
C
      if (index(mycode,'->PHYSSEL').ne.0) then
         ll=index(mycode,'->')-1
         mycode=mycode(1:ll)
         isnot=' '
         call getgroup(mycode,group)
         if (index(phykey,group).gt.0) go to 999
         if(phykey.ne.' ')then
           locstr=phykey(1:LNBLNK(PHYKEY))//'.and.'
           ncphs=lnblnk(phykey)+5
           phykey=locstr
         endif
         if (index(myvalue,'BAD').gt.0) isnot='.not.'
         locstr=phykey(1:ncphs)//isnot//group
C Remove spaces in string, if needed:
         phykey=' '
         call rmvsp(locstr,phykey,nc)
         ncphs=LNBLNK(PHYKEY)
         call majjver(1)
      endif
C----------------------------------------------------------------------
C menu = Selection of SCANBOOK global option:
C
      if (mycode.eq.'RADIO_LISTOPT') then
         IDSEAR=100
         if (index(myvalue,'LIST OF REAL DATA CARTRIDGES').ne.0)
     >      IDSEAR=1
         if (index(myvalue,'INFORMATIONS ON RUNS ALREADY TAKEN').ne.0)
     >      IDSEAR=3
         if (index(myvalue,'ALL AVAILABLE INFORMATIONS ON A RUN').ne.0)
     >      IDSEAR=5
         if (index(myvalue,'LIST OF POT FILES ON DISKS').ne.0)
     >      IDSEAR=2
         if (index(myvalue,
     > 'LIST OF RAW/POT SELECTED DATA FOR ALIGNMENT AND CALIBRATION')
     >           .ne.0)IDSEAR=7
         if(index(myvalue,
     > 'GLOBAL STATISTICS ON CARTRIDGES AVAILABLE FOR ALL PROCESSINGS')
     >           .ne.0)IDSEAR=8
        call f_handlewidget('sel_institute',1,0)
        call f_handlewidget('frame_nature',1,0)
        call f_handlewidget('datatype_frame',1,0)
        call f_handlewidget('real_data_sel',1,0)
        call f_handlewidget('inforun_frame',-1,0)
        call f_handlewidget('edirselection',1,0)
C Never show the edirselection for raw data
        if(idasel.eq.2)call f_handlewidget('edirselection',-1,0)
        call f_handlewidget('run_nb_page1',-1,0)
C            setradnat(ikin,iraw,ipot,idst,imini,inano,iset)
           call setradnat(-1,1,1,1,1,1,0)
C
C Take appropriate actions for each SCANBOOK option:
C
        if (idsear.eq.3) then
          call f_handlewidget('sel_institute',-1,0)
          call f_handlewidget('frame_nature',-1,0)
          call f_handlewidget('jul_proc_lev',-1,0)
          call f_handlewidget('date_select',-1,0)
          call f_handlewidget('edirselection',-1,0)
          call f_handlewidget('inforun_frame',1,0)
          call f_handlewidget('inforun_radiobox',3,1)
        elseif (idsear.eq.5) then
          call f_handlewidget('sel_institute',-1,0)
          call f_handlewidget('frame_nature',-1,0)
          call f_handlewidget('datatype_frame',-1,0)
          call f_handlewidget('real_data_sel',-1,0)
          call f_handlewidget('fill_1',-1,0)
          call f_handlewidget('rd_ys',-1,0)
          call f_handlewidget('run_nb_page1',1,0)
        elseif (idsear.eq.7) then
          call f_handlewidget('sel_institute',-1,0)
          call f_handlewidget('datatype_frame',-1,0)
          call f_handlewidget('real_data_sel',1,0)
C              setradnat(ikin,iraw,ipot,idst,imini,inano,iset)
          call setradnat(-1,  1,   1,   -1,  -1,   -1,   0)
        elseif (idsear.eq.8) then
          call f_handlewidget('sel_institute',1,0)
          call f_handlewidget('frame_nature',-1,0)
          call f_handlewidget('datatype_frame',-1,0)
          call f_handlewidget('real_data_sel',-1,0)
          call f_handlewidget('fill_1',-1,0)
          call f_handlewidget('rd_ys',-1,0)
        elseif (idsear.eq.2) then
          call f_handlewidget('sel_institute',-1,0)
          call f_handlewidget('frame_nature',-1,0)
        endif
        if (idsear.eq.5.or.idsear.eq.8) then
           call f_setgodirect(1)
        else
           call f_setgodirect(0)
        endif
      endif
C----------------------------------------------------------------------
C menu = Selection of SCANBOOK printout level on logfile:
C
      if (mycode.eq.'RADIO_OUTPUT') then
         if (myvalue.eq.'SIMPLE LIST') IRADO=1
         if (myvalue.eq.'NORMAL OUTPUT') IRADO=1
         if (myvalue.eq.'VERY DETAILED OUTPUT') IRADO=1
         if (myvalue.eq.
     >    'SPECIAL FOR SURVEY OF HOMELAB COPIES FROM CERN') IRADO=1
      endif
C----------------------------------------------------------------------
C menu = Selection of logfile printout for Option 3:
C
      if (mycode.eq.'INFORUN_RADIOBOX') then
         if (index(myvalue,'LEP ENERGY').ne.0)                 ipronl=1
         if (index(myvalue,'LIST OF RUNS FOR VARIOUS').ne.0)   ipronl=2
         if (index(myvalue,'DETECTOR CONDITIONS').ne.0)        ipronl=3
         if(index(myvalue,'LIST OF LEP FILLS WITH LUMI').ne.0) ipronl=4
      endif
C----------------------------------------------------------------------
C menu = Selection of tracking quality for 1992 data:
C
      if (mycode.eq.'RADIO_TRKQUAL') then
         if (index(myvalue,'ONLY DATA WITHOUT').ne.0)   ibtqse=0
         if (index(myvalue,'ONLY DATA WITH TPC').ne.0)  ibtqse=-1
         if (index(myvalue,'DATA WITH TPC OK OR').ne.0) ibtqse=1
         if (index(myvalue,'ALL DATA').ne.0)            ibtqse=2
         if (index(myvalue,'ONLY DATA WITH TPC SHORT AND').ne.0)
     >      ibtqse=-2
      endif
C----------------------------------------------------------------------
C menu = Selection of a run or a cartridge ("Opt 5") :
      if (mycode.eq.'RUNNUMBER') Then
         CALL BKOPT5(myvalue,ier)
      endif
 999  call f_setnormal
      return
      end
      subroutine disppos(string,ipos)
C----------------------------------------------------------------------
CKEY SCANX11
C! Return position of string string in common dispx11
C Author A.Bonissent January 1998
C Called from  SETLEP
C Input arguments:
C  string : input character string to search for
C Output argument :
C  ipos : position in common, 0 if not found
C----------------------------------------------------------------------
      character*(*) string
      character*80 s1,s2
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
C----------------------------------------------------------------------
      call rmvsp(string,s1,n1)
      ipos=0
        do ilinx11=1,nlinx11
          ncar=80
          call rmvsp(xlin11(ilinx11)(1:ncar),s2,n2)
          if(n1.eq.n2)then
            do i=1,n1
             if(s1(i:i).ne.s2(i:i))go to 10
            enddo
            ipos=ilinx11
            go to 999
          endif
   10     continue
        enddo
  999 return
      end
      subroutine flrnfl(c)
C----------------------------------------------------------------------
CKEY SCANX11 windows
C Author A.Bonissent January 1997
C Calls DIRUFIYE                               from BOOKLIB
C Called from  PUSHFOR                         from BOOKLIB
C----------------------------------------------------------------------
      character*(*) c
      character*100 choice
C----------------------------------------------------------------------
      choice=c
      call cltou(choice)
      if (choice.eq.'YEAR') then
C not yet ....          call bkvyear(ier)
        call bkpgval
      else
        call dirufiye(6)
      endif
      return
      end
      subroutine getnx11(nlines)
C----------------------------------------------------------------------
CKEY SCANX11
C! Get the number of lines filled in the XLIN11 common block
C Author A.Bonissent September 1997
C
C Output : nlines nb lines
C----------------------------------------------------------------------
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
      nlines = nlinx11
      return
      end
      subroutine kingopt
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Get the list of special MC options for display in X11 window
C Author A.Bonissent September 1997
C Called from pushfor                    from BOOKLIB
C Calls  DISPAR97,XDISPLAY,GETNX11       from BOOKLIB
C----------------------------------------------------------------------
      call dispar97(6)
      call getnx11(nl)
      if(nl.gt.0)then
           call xdisplay('kingal_opt_list',1,1)
           call f_resize_main_window(1)
      else
           call f_resize_main_window(-1)
      endif
      return
      end
      subroutine kinlist
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Display the list of available Kingal generators and datasets
C Author A.Bonissent January 1997
C Calls BKKINS,DISKINCO                        from BOOKLIB
C Called from  PUSHFOR                         from BOOKLIB
C----------------------------------------------------------------------
      call bkkins(ier)
      call diskinco(6)
      call xdisplay('kingal_list',1,1)
      return
      end
      subroutine majgaljul
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Display the list of available Galeph and Julia versions
C Author A.Bonissent January 1997
C Calls BKDVER,DISGALJU                        from BOOKLIB
C Called from  PUSHFOR                         from BOOKLIB
C----------------------------------------------------------------------
      call bkdver(ier)
      call disgalju(6)
      call xdisplay('galjul_list',1,1)
      return
      end
      subroutine majjver(isetlep)
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Display the list of Julia versions (Real data)
C Author A.Bonissent January 1997
C Calls BKDVER,BKPRJX11                        from BOOKLIB
C Called from  PUSHFOR                         from BOOKLIB
C----------------------------------------------------------------------
      if(isetlep.eq.1)then
        call setlep
C Make the choice of sorted by lep energy possible
        call f_handlewidget('sortedyesno',2,0)
C Make 'NO' the default
        call f_handlewidget('sortedyesno_opt',4,2)
      endif
      call bkdver(ier)
      call bkprjx11
      call xdisplay('jul_proc_lev_2',1,1)
      return
      end
      subroutine majspp
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Create push buttons for all available special particles
C Author A.Bonissent January 1997
C Calls BKDVER,DISPARKO                        from BOOKLIB
C Called from  PUSHFOR                         from BOOKLIB
C----------------------------------------------------------------------
      call bkdver(ier)
      call disparko(6)
      call f_currw('specialparticles')
      call f_add_button('ANY',1)
      call f_add_button('q qbar',0)
      call xdisplay('specialparticles',2,0)
      call f_handlewidget('specpar_opt_menu',4,1)
      return
      end
      subroutine setlep
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Create push buttons for all available LEP energies
C Author A.Bonissent January 1997
C Calls BKDBSX11,DISNGLEP                      from BOOKLIB
C Called from  PUSHFOR                         from BOOKLIB
C----------------------------------------------------------------------
      call bkdbsx11(ier)
      call disnglep(6)
      call f_currw('lep_en_menu')
      call f_add_button('  ANY',1)
      call xdisplay('lep_en_menu',2,0)
      call f_handlewidget('lep_en_opt_menu',4,1)
      return
      end
      subroutine setradnat(ikin,iraw,ipot,idst,imini,inano,iset)
C----------------------------------------------------------------------
CKEY SCANX11 windows
C! Set sensitive the radio buttons of  mini, dst, raw, etc...
C Author A.Bonissent January 1997
C Called from  PUSHFOR                     from BOOKLIB
C----------------------------------------------------------------------
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
C-- BKLABS ----
      PARAMETER ( NLABS = 40 , NTMLI = 20 )
      CHARACTER CLISTL*20,CTAPSL*2,TMSLIB*5,TMSLAB*9
      COMMON / IKLABS / NLABOK,NLABDF,ILABCH,NTMSLI,IHOLAB(NTMLI)
      COMMON / CKLABS / CLISTL(NLABS),CTAPSL(NLABS),TMSLIB(NTMLI),
     +                  TMSLAB(NTMLI)
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
      dimension ibutton(6)
      character*11 button_names(6)
C----------------------------------------------------------------------
      ibutton(1)=ikin
      ibutton(2)=iraw
      ibutton(3)=ipot
      ibutton(4)=idst
      ibutton(5)=imini
      ibutton(6)=inano
      button_names(1)='kin_button'
      button_names(2)='raw_button'
      button_names(3)='pot_button'
      button_names(4)='dst_button'
      button_names(5)='mini_button'
      button_names(6)='nano_button'
      do i=1,6
        if(ibutton(i).eq.1)call f_handlewidget(button_names(i),2,0)
        if(ibutton(i).eq.-1)call f_handlewidget(button_names(i),-2,0)
        if(idasel.eq.i.and.ibutton(i).eq.-1)
     >     call f_handlewidget('radio_nature',-3,i)
      enddo
      if(iset.gt.0)call f_handlewidget('radio_nature',3,iset)
      if(iset.eq.-1)then
        call f_handlewidget('radio_nature',3,1)
        call f_handlewidget('radio_nature',-3,1)
      endif
      return
      end
      SUBROUTINE PRWRPX11
C-----------------------------------------------------------------------
CKEY  SCANBOOK X11
C! Create a message window for the POT usage in SCANX11
C Author J.Boucrot 25-Feb-1998
C Called from PUSHFOR                                 from BOOKLIB
C Calls WINX11                                        from BOOKLIB
C-----------------------------------------------------------------------
      SAVE
C-- BKFILU ----
      PARAMETER ( NRQFMX = 1000 , NNDAT = 8 , NRYEA = 15 , NGPHY = 30)
      CHARACTER*30 NAMRQF,NAMCUR,NAMRIN
      CHARACTER*80 NAMDAF,NAMSOL,NAMSNW,NAMTAP,NAMFRV,NAMERR,NAMSQB
      CHARACTER*20 DSKREQ
      CHARACTER*4  FORSQB,OKEDIR,DNADAT,SCAVER
      CHARACTER*1  FORMRQ,DSMODA
      CHARACTER*60 CARDSF,NAMLIF,NAMTDR
      CHARACTER*100 BANDBS
      CHARACTER*120 KEYGL2
      CHARACTER*6  VAXMCH
      CHARACTER*20 FICARD,GROUPH
      CHARACTER*2  KEYWPH,CHOIPH
      CHARACTER*8  MANAPH,PERDBS
      COMMON / BKNMFI / NAMRQF(NRQFMX),NAMCUR,NAMDAF,NAMSOL,
     +                  NAMSNW,NAMTAP,NAMFRV,NAMERR,DSKREQ,
     +                  NAMRIN,NAMSQB,FORSQB,OKEDIR,NAMTDR,
     +                  FORMRQ(NRQFMX),PERDBS(NRYEA),FICARD,
     +                  DSMODA,VAXMCH,CARDSF,NAMLIF,SCAVER,
     +                  DNADAT(NNDAT),GROUPH(NGPHY),KEYWPH(NGPHY),
     +                  MANAPH(NGPHY),CHOIPH(NGPHY),BANDBS(NRYEA),
     +                  KEYGL2(NGPHY)
      COMMON / BKINFO / NFILRQ,ICURFI,NOVERR,LRECBO,NRECBO,
     +                  ICOMPB,NGROUF,LISLFI(NRYEA),NBDFDO,
     +                  LISFRU(NRYEA),LISYEA(NRYEA),NTOYEA,NBDFOL,
     +                  LISTFF(NRYEA),IPGVAL(NGPHY),LEPSGR(4,NGPHY),
     +                  NL2GRO,MX94NR,
     +                  NBKSCR,NPERMI(NRYEA),NPERMX(NRYEA),NDBTOT,
     +                  LISNRB(NRYEA),NPEDMI,NPEDMX,ISVAXC
      COMMON / BKMODS / NMODIF,NSCRAD,LENBOK
      COMMON / BDIALO / IBKINT,IBPRUS,IFBOOK,IDEBUG,ITMKOD
      CHARACTER USFNAM*80,USERLG*12
      COMMON / CDIALO / USFNAM,USERLG
      COMMON / IVARLU / IFRONL,ILRONL,NRUMIN,NRUMAX,LRUNMC,NRULEP,
     +                  ITOLER,ISCQUI,IDASEL
      PARAMETER ( NLEPE = 60 )
      COMMON / LEPLIS / NLEPSF,ILEPEN(NLEPE),IROUND,EROUND
      COMMON / RUNLIM / MINSIC,MIRU94,MIR4BU,MXLFI1,MXLRU1
      COMMON / ENGY97 /  IENV97,ENG197,ENG297,ITOL97,TOLE97
      COMMON / MIVER  / MINLAS,NANLAS
C-- BKTSKC ----
      COMMON / BKTSKC / IBUPDA,IDSEAR,NBREDO,IBCOPY,IBMAKJ,ITMSRC,IFAKFA
     +                 ,IBLIST,IBAUTO,IBSPLI,IONLIN,IBKSQL
C-- BKKEYS ----
       PARAMETER (NTPMX=1000, NDSMX=500, NCPMX=5 , NDRQU = 12 )
      COMMON / BKKEYS / NTAPKY,NDSNKY,NCCOMP,ISDATE,ISDATL,IMCDAT,
     +                  ISPHYS,KINCOD,ISEED1,ISEED2,ISEED3,IKEYOK,
     +                  IPHYGR,ENGLEP,LASTPR,IGEOYR,IGALPR,ISELPA,
     +                  IMINPR,INANPR,IBTQSE,IZASKD,IZTOTC,IDTRQU,NDTRQU
      COMMON / BKPRSL / IPRONL,ISRUNF,ISRUNL,ISORLE,ISYEAR,LASRUR,
     +                  IB1RUN,ISELPH,IPSROU,IDATSL,IJULSL,IPROSL,
     +                  IRAWAA,IRAWD1,IRAWD2,IYEASL,IRUNSL,IFILSL,
     +                  IPRGVR,IWFILI,ISPERF,IDLCRW,IDLRAW,IEPRAW,
     +                  IDLDAT,ILP195,IBREDO,INIP97,IROW97,IGRLEP
      CHARACTER*6 SELDAT,SELMAG,DISKIB
      CHARACTER*12 SELCOM,SELUSR,SELRAN
      CHARACTER LISDSN*17,SELSTA*4,SELINS*30,SELCAT*2,DETRQU*1
      CHARACTER SELMAN*8,SELTIM*8,SELLOC*12,SELPHY*2,PHYKEY*200
      CHARACTER DSKSPY*1,LISTAP*8,SELPOT*2,SELFOR*4,CODM97*60,CKEY97*12
      COMMON / CKKEYS / LISTAP(NTPMX),LISDSN(NDSMX),SELCOM(NCPMX),
     +                  SELDAT,SELMAG,SELUSR,SELINS,SELSTA,SELCAT,
     +                  SELMAN,SELTIM,SELLOC,SELRAN,SELPHY,PHYKEY,
     +                  DSKSPY,DISKIB,SELPOT,SELFOR,DETRQU(NDRQU),
     +                  CODM97,CKEY97
      COMMON / SELDTS / IALISE,ICERCO,ILEP2S
      CHARACTER TEXT*90
      DATA NBROL / 0 /
C-----------------------------------------------------------------------
      TEXT=' '
      IF (IBKINT.NE.-1.OR.IDASEL.NE.3) GO TO 999
      IF (IDSEAR.EQ.7) GO TO 999
      IF (NBROL.EQ.IMCDAT) GO TO 100
      TEXT='Are you sure that you really need to use POTs ?'
      CALL WINX11(315,TEXT)
      IF (IMCDAT.EQ.2) GO TO 90
      TEXT=' DSTs  will give you the same results '
      CALL WINX11(316,TEXT)
      TEXT=' but will take far less space on staging disks !'
      CALL WINX11(317,TEXT)
      go to 95
 90   TEXT=' They take a lot of space on staging disks !'
      CALL WINX11(318,TEXT)
 95   CALL WINX11(999,TEXT)
      NBROL=IMCDAT
 100  CONTINUE
C
 999  RETURN
      END
      subroutine xdisplay(wname,iaction,ireset)
C----------------------------------------------------------------------
CKEY SCANX11
C! Display the selections which are in the Scanbook
C Author A.Bonissent January 1997
C Called from  PUSHFOR,KINLIST,SETLEP,MAJSPP  from BOOKLIB
C Called from  MAJJVER,MAJGALJUL              from BOOKLIB
C Calls C routines
C Input arguments:
C  wname   = widget name
C  iaction = 1 for a list;
C  iaction = 2 for buttons.
C  iaction = 3 for Physics groups.
C  ireset  = 1 if one wants to start from an empty menu
C----------------------------------------------------------------------
C-- DISPX11 ----
      PARAMETER ( NMX11 = 200 )
      CHARACTER*80 XLIN11
      COMMON / IDISP11 /  NLINX11
      COMMON / CDISP11 /  XLIN11(NMX11)
      character*(*) wname
C----------------------------------------------------------------------
      call f_currw(wname)
      if (nlinx11.eq.0) then
        if (iaction.eq.1) then
          call f_put_in_list('     ',1)
          call f_put_in_list('     ',0)
          call f_put_in_list('     ',0)
          call f_put_in_list
     >        ('          **************************************',0)
          call f_put_in_list
     >        ('          *        No DATASETS AVAILABLE       *',0)
          call f_put_in_list
     >        ('          **************************************',0)
        endif
      else
        icode=0
        if(ireset.eq.1)icode=1
        do ilinx11=1,nlinx11
          ncar=80
          if(iaction.eq.1)
     >       call f_put_in_list(xlin11(ilinx11)(1:ncar),icode)
          if(iaction.eq.2)
     >       call f_add_button(xlin11(ilinx11)(1:ncar),icode)
          if(iaction.eq.3)
     >       call f_add_phys_sel(xlin11(ilinx11)(1:ncar),icode)
          icode=0
        enddo
      endif
      return
      end
