      SUBROUTINE ALSEED(IRGEN,ISEED1,ISEED2)
C-----------------------------------------------------------------------
C - Author : B.Bloch-Devaux -890201
C! returns original seeds from RANMAR random generator
C
C - Structure : SUBROUTINE subprogram
C               User Entry Name :ALSEED
C               External references :RMARUT
C               Comdecks references : none
C - Input : none
C - Output : IRGEN = generator ident (3 is RANMAR)
C            ISEED1= first original seed
C            ISEED2= second original seed
C
C-----------------------------------------------------------------------
      IRGEN = 3
      CALL RMARUT(IS1,IS2,IS3)
      ISEED1 = IS1/30082
      ISEED2 = IS1 - 30082*ISEED1
      RETURN
      END
      SUBROUTINE RDMIN(ISEED)
C-----------------------------------------------------------------------
C - Author : B.Bloch-Devaux -890201
C
C!Interface from RDMIN to RMARIN (RANMAR initialization)
C   First initialization or re-initialization
C 1.-Primary initialization by using RMAR data card with two
C  arguments (ISEED1,ISEED2) which are mandatory.
C    ISEED1 must be in the range of 100 values designated for each
C collaborating institution. The range of ISEED2 is 0 <= ISEED2 <= 30081
C This allows 3008200 independent sequences per collaborating institutio
C To be coherent with latest version of RANMAR from Fred James (Jan 89)
C the 3 values to be input to RMARIN are computed from(ISEED1,ISEED2)
C 2.- Re-initialization by using RINI data card with three
C  arguments (ISEED1,ISEED2,ISEED3) which are mandatory.
C  RINI has priority over RMAR card
C  If no RINI nor RMAR card is found, default init values are used
C
C - Structure : SUBROUTINE program
C               User Entry Name :RDMIN
C               External references :NAMIND(BOS77),RMARIN
C               Comdecks references : BCS
C - Input : ISEED   dummy
C - Output : none
C
C----------------------------------------------------------------------
      INTEGER LMHLEN, LMHCOL, LMHROW  ,LBCS
      PARAMETER (LMHLEN=2, LMHCOL=1, LMHROW=2, LBCS=1000)
C
      COMMON /BCS/   IW(LBCS )
      INTEGER IW
      REAL RW(LBCS)
      EQUIVALENCE (RW(1),IW(1))
C
      INTEGER ISEED,MXSEED
      PARAMETER ( MXSEED = 30000)
C
      LOGICAL FIRST
      DATA FIRST/.TRUE./
C
      IF (FIRST) THEN
        FIRST = .FALSE.
        KRINI=IW(NAMIND('RINI'))
        IF (KRINI.LE.0) THEN
C  No reprocess required, look for initialisation
          KRMAR=IW(NAMIND('RMAR'))
          IF (KRMAR.LE.0) THEN
            WRITE(IW(6),101)
            ISEED1 = 1802
            ISEED2 = 9373
          ELSE
            LNRMAR = IW(KRMAR)
            IF (LNRMAR.LT.2) THEN
             WRITE(IW(6),102)
             CALL EXIT
            ENDIF
            ISEED1 = IW(KRMAR+1)
            ISEED2 = IW(KRMAR+2)
            WRITE (IW(6),801) ISEED1,ISEED2
            IF ( ISEED1.GT.MXSEED ) GO TO 999
            IF ( ISEED2.GT.MXSEED ) GO TO 999
          ENDIF
          IJKLI = ISEED1*30082 + ISEED2
          NTOTI = 0
          NTOTN = 0
        ELSE
C Reprocessing required
            LNRINI = IW(KRINI)
            IF (LNRINI.LT.3) THEN
             WRITE(IW(6),103)
             CALL EXIT
            ENDIF
            IJKLI = IW(KRINI+1)
            NTOTI = IW(KRINI+2)
            NTOTN = IW(KRINI+3)
        ENDIF
        WRITE (IW(6),802) IJKLI,NTOTI,NTOTN
        CALL RMARIN(IJKLI,NTOTI,NTOTN)
      ENDIF
C
      RETURN
C
 101  FORMAT(' RDMIN -- RMAR data card is missing!use defaults')
 102  FORMAT(' RDMIN -- RMAR Less than two input seeds !')
 103  FORMAT(' RDMIN -- RINI less than three input seeds for RANMAR!')
 801  FORMAT(/3X,' RANMAR Input seeds ',2I8)
 802  FORMAT(/3X,' RANMAR Input seeds RMARIN ',3I8)
 999  WRITE ( IW(6),'(1X,'' MAXIMUM  seed allowed is '',I6)') MXSEED
      CALL EXIT
      END
      FUNCTION RNDM(DUMMY)
C-----------------------------------------------------------------------
C - Author : B.Bloch-Devaux -890201
C!Interface from RNDM to RANMAR.
C act as a server of  20 numbers from one RANMAR call
C
C - Structure : REAL FUNCTION subprogram
C               User Entry Name :RNDM,RRESET
C               External references :RANMAR
C               Comdecks references : none
C - Input : DUMMY   dummy
C - Output : Real value between 0. and 1.
C
C-----------------------------------------------------------------------
      PARAMETER ( LEN = 20)
      DIMENSION RVEC(LEN)
      DATA NR/ 20/
      IF(NR.EQ.LEN) THEN
        CALL RANMAR(RVEC,LEN)
        NR=0
      ENDIF
      NR=NR+1
      RNDM=RVEC(NR)
      RETURN
      ENTRY RRESET
      NR = LEN
      RETURN
      END
      SUBROUTINE RDMOUT(ISEED)
C-----------------------------------------------------------------------
C - Author : B.Bloch-Devaux -890201
C! Interface from RDMOUT to RMARUT (RANMAR seeds ouput routine)
C
C - Structure : SUBROUTINE subprogram
C               User Entry Name :RDMOUT
C               External references :RMARUT,RRESET
C               Comdecks references : none
C - Input : none
C - Output : Array of generator seeds (integer)
C
C-----------------------------------------------------------------------
      INTEGER ISEED(*)
C
      ISEED(1)= 0
      ISEED(3)= 0
      ISEED(2)= 0
      CALL RMARUT(ISEED(1),ISEED(2),ISEED(3))
      dum =  RRESET(dum2)
      RETURN
      END
      SUBROUTINE RANMAR(RVEC,LENV)
C------------------------------------------------------------------
C!Universal random number generator proposed by Marsaglia and Zaman
C in report FSU-SCRI-87-50
C        modified by F. James, 1988 and 1989, to generate a vector
C        of pseudorandom numbers RVEC of length LENV, and to put in
C        the COMMON block everything needed to specify currrent state,
C        and to add input and output entry points RMARIN, RMARUT.
C--------------------------------------------------------------------
      DIMENSION RVEC(*)
      COMMON/RASET1/U(97),C,I97,J97
      PARAMETER (MODCNS=1000000000)
      DATA NTOT,NTOT2,IJKL/-1,0,0/
C
      IF (NTOT .GE. 0)  GO TO 50
C
C        Default initialization. User has called RANMAR without RMARIN.
      IJKL = 54217137
      NTOT = 0
      NTOT2 = 0
      KALLED = 0
      GO TO 1
C
      ENTRY      RMARIN(IJKLIN, NTOTIN,NTOT2N)
C         Initializing routine for RANMAR, may be called before
C         generating pseudorandom numbers with RANMAR. The input
C         values should be in the ranges:  0<=IJKLIN<=900 OOO OOO
C                                          0<=NTOTIN<=999 999 999
C                                          0<=NTOT2N<<999 999 999!
C To get the standard values in Marsaglia's paper, IJKLIN=54217137
C                                            NTOTIN,NTOT2N=0
      IJKL = IJKLIN
      NTOT = MAX(NTOTIN,0)
      NTOT2= MAX(NTOT2N,0)
      KALLED = 1
C          always come here to initialize
    1 CONTINUE
      IJ = IJKL/30082
      KL = IJKL - 30082*IJ
      I = MOD(IJ/177, 177) + 2
      J = MOD(IJ, 177)     + 2
      K = MOD(KL/169, 178) + 1
      L = MOD(KL, 169)
      WRITE(6,201) IJKL,NTOT,NTOT2
 201  FORMAT(1X,' RANMAR INITIALIZED: ',I10,2X,2I10)
      DO 2 II= 1, 97
      S = 0.
      T = .5
      DO 3 JJ= 1, 24
         M = MOD(MOD(I*J,179)*K, 179)
         I = J
         J = K
         K = M
         L = MOD(53*L+1, 169)
         IF (MOD(L*M,64) .GE. 32)  S = S+T
    3    T = 0.5*T
    2 U(II) = S
      TWOM24 = 1.0
      DO 4 I24= 1, 24
    4 TWOM24 = 0.5*TWOM24
      C  =   362436.*TWOM24
      CD =  7654321.*TWOM24
      CM = 16777213.*TWOM24
      I97 = 97
      J97 = 33
C       Complete initialization by skipping
C            (NTOT2*MODCNS + NTOT) random numbers
      DO 45 LOOP2= 1, NTOT2+1
      NOW = MODCNS
      IF (LOOP2 .EQ. NTOT2+1)  NOW=NTOT
      IF (NOW .GT. 0)  THEN
       WRITE (6,'(A,I15)') ' RMARIN SKIPPING OVER ',NOW
       DO 40 IDUM = 1, NTOT
       UNI = U(I97)-U(J97)
       IF (UNI .LT. 0.)  UNI=UNI+1.
       U(I97) = UNI
       I97 = I97-1
       IF (I97 .EQ. 0)  I97=97
       J97 = J97-1
       IF (J97 .EQ. 0)  J97=97
       C = C - CD
       IF (C .LT. 0.)  C=C+CM
   40  CONTINUE
      ENDIF
   45 CONTINUE
      IF (KALLED .EQ. 1)  RETURN
C
C          Normal entry to generate LENV random numbers
   50 CONTINUE
      DO 100 IVEC= 1, LENV
      UNI = U(I97)-U(J97)
      IF (UNI .LT. 0.)  UNI=UNI+1.
      U(I97) = UNI
      I97 = I97-1
      IF (I97 .EQ. 0)  I97=97
      J97 = J97-1
      IF (J97 .EQ. 0)  J97=97
      C = C - CD
      IF (C .LT. 0.)  C=C+CM
      UNI = UNI-C
      IF (UNI .LT. 0.) UNI=UNI+1.
C        Replace exact zeroes by uniform distr. *2**-24
         IF (UNI .EQ. 0.)  THEN
         UNI = TWOM24*U(2)
C             An exact zero here is very unlikely, but let's be safe.
         IF (UNI .EQ. 0.) UNI= TWOM24*TWOM24
         ENDIF
      RVEC(IVEC) = UNI
  100 CONTINUE
      NTOT = NTOT + LENV
         IF (NTOT .GE. MODCNS)  THEN
         NTOT2 = NTOT2 + 1
         NTOT = NTOT - MODCNS
         ENDIF
      RETURN
C           Entry to output current status
      ENTRY RMARUT(IJKLUT,NTOTUT,NTOT2T)
      IJKLUT = IJKL
      NTOTUT = NTOT
      NTOT2T = NTOT2
      RETURN
      END
