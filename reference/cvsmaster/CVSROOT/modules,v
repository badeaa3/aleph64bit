head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	98.03.06.14.38.57;	author flr;	state Exp;
branches;
next	1.10;

1.10
date	97.11.04.16.54.35;	author flr;	state Exp;
branches;
next	1.9;

1.9
date	97.03.25.08.42.56;	author flr;	state Exp;
branches;
next	1.8;

1.8
date	95.12.08.08.49.18;	author flr;	state Exp;
branches;
next	1.7;

1.7
date	95.12.04.12.58.18;	author flr;	state Exp;
branches;
next	1.6;

1.6
date	95.08.09.08.24.58;	author flr;	state Exp;
branches;
next	1.5;

1.5
date	95.01.16.11.25.38;	author flr;	state Exp;
branches;
next	1.4;

1.4
date	95.01.16.10.24.39;	author flr;	state Exp;
branches;
next	1.3;

1.3
date	94.12.09.14.42.34;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	94.12.08.08.16.38;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.11.58.47;	author flr;	state Exp;
branches;
next	;


desc
@@


1.11
log
@add avail in modules file
@
text
@#
# The CVS modules file
#
# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.
#

# Convenient aliases
world		-a .

# CVSROOT support; run mkmodules whenever anything changes.
CVSROOT		-i mkmodules CVSROOT
modules		-i mkmodules CVSROOT modules
loginfo		-i mkmodules CVSROOT loginfo
commitinfo	-i mkmodules CVSROOT commitinfo
rcsinfo		-i mkmodules CVSROOT rcsinfo
editinfo	-i mkmodules CVSROOT editinfo
avail           -i mkmodules CVSROOT avail

# Add other modules here...
ainc      alephlib/inc
jinc      julia/inc
ginc      galeph/inc
binc      bos77/inc
ioinc     alephio/inc
tpinc     tpcsim/inc
lkinc     look/inc
dbinc     dbslib/inc
anews     alephlib/news
jnews     julia/news
gnews     galeph/news
bnews     bos77/news
ionews    alephio/news
tpnews    tpcsim/news
lknews    look/news
dbnews    dbslib/news 
alephlib  alephlib
adedx     alephlib/dedx
aptoj     alephlib/ptoj
aprin     alephlib/prin
acomp     alephlib/comp  
aalef     alephlib/alef
julia     julia
galeph    galeph
tpcsim    tpcsim
alephio   alephio
bos77     bos77
alpha     alpha









@


1.10
log
@remove q in 1st line
@
text
@d38 1
@


1.9
log
@remove c module
@
text
@d1 1
a1 1
q#
@


1.8
log
@add sub-modules in the module list
@
text
@a67 1
c         c
@


1.7
log
@redefine bos77 and tpcsim module names
@
text
@d57 5
@


1.6
log
@nothing changed
@
text
@d1 1
a1 1
#
a47 2
tpcsim    tpcsim/F77
bos77     bos77/F77
d59 1
d61 2
@


1.5
log
@introduce module C
@
text
@d63 9
@


1.3
log
@add module definitions
@
text
@d40 1
d50 1
d58 5
@


1.2
log
@ add ginc jinc binc linc tpinc ioinc dbinc modules
@
text
@d45 11
a55 2
linc      look/inc
dbinc     dbslib/inc@


1.1
log
@initial checkin of modules
@
text
@d40 7
@
