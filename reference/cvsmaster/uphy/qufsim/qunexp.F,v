head     1.1;
branch   1.1.1;
access   ;
symbols  uphy1-0:1.1.1.1 flr:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     96.08.16.13.38.17;  author flr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.08.16.13.38.18;  author flr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE qunexp(ITRAC,NEXP,NENF,IGFL,IEBM,HMOM)
C----------------------------------------------------------------------
C! Compute the expected HCAL bit map for a muon
C
C      Author:    F.Bossi -LNF-  3/88
C      Modified for QUFSIM : Patrcik Janot -- 08 Nov 1993
C
C      Input:     ITRAC   : Track number
C      Output:    NEXP    : Numb. of expected fired planes in the road
C                 IGFL    : Geometry flag
C                         = 0  track in active zone
C                         = 1  dead zone between two barrel modules
C                         = 2  dead zone between two endcap modules
C                         = 3  barrel module notch
C                         = 4  endcap module spacer
C                         = 5  not active zone of tube
C                         = 6  first plane in thin endcap
C                         = 7  masked digital chain
C                         = -1 error condition
C                 IEBM    : Expected bit map
C                 HMOM    : Momentum along the road
C
C-----------------------------------------------------------------------
#ifndef DOC
#include "qcde.h"
#include "qhac.h"
#include "trexjj.h"
C
      COMMON/HDIGCH/MASK(36,23)
C
      EXTERNAL ALGTDB, JUNIDB
      INTEGER ALGTDB, JUNIDB
      PARAMETER(NPLH=23)
      PARAMETER(NROMX=500)
      DIMENSION FMUL(NPLH)
      COMMON/HMGCON/NBEGTU(NPLH),SPWID1(NPLH),SPWID2(NPLH)
     +              ,NOSSP1(NPLH),NOSSP2(NPLH)
      DIMENSION IBME(NPLH),IBMT(NPLH),IPOW(NPLH),HMOM(NPLH)
      DIMENSION BORD(NPLH,3),BORDS(NPLH,4),ZMX(4),ZMXS(5)
      DATA IPOW/1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,
     +          16384,32768,65536,131072,262144,524288,1048576,
     +          2097152,4194304/
      DATA ICALL/0/
#include "qmacro.h"
C
      JTREX=NLINK('TREX',ITRAC)
      NRPT=LROWS(JTREX)
C
C               load geometrical data
C
      IF(ICALL.EQ.0) THEN
         LRGEOM= JUNIDB(0)
         JDBAS=ALGTDB(LRGEOM,'HBGEHBDEHEDEHEGEHETC',krun)
         IF(JDBAS.EQ.0) THEN
            IGFL=-1
            GO TO  999
         ENDIF
         NHBGE=NAMIND('HBGE')
         JHBGE=IW(NHBGE)
         NHBDE=NAMIND('HBDE')
         JHBDE=IW(NHBDE)
         NHEDE=NAMIND('HEDE')
         JHEDE=IW(NHEDE)
         NHEGE=NAMIND('HEGE')
         JHEGE=IW(NHEGE)
         NHETC=NAMIND('HETC')
         JHETC=IW(NHETC)
C                 tube lengths for ordinary barrel modules
         ZMX(1)=RTABL(JHETC,1,12)/2.
         ZMX(2)=RTABL(JHETC,1,11)/2.
         ZMX(3)=RTABL(JHETC,1,10)/2.
         ZMX(4)=ZMX(1)
C                  tube lengths for special barrel modules
         ZMXS(1)=RTABL(JHETC,1,13)/2.
         ZMXS(2)=RTABL(JHETC,1,12)/2.
         ZMXS(3)=RTABL(JHETC,1,11)/2.
         ZMXS(4)=RTABL(JHETC,1,10)/2.
         ZMXS(5)=RTABL(JHETC,1,12)/2.
C                  barrel radius and half lenght
         RBAR=RTABL(JHBGE,1,4)
         HBLG=RTABL(JHBGE,1,6)
C                  barrel dead zones
C                  width between two barrel modules
         DWID=RTABL(JHBDE,1,10)
         DANG=ATAN2(2.*DWID,RBAR)
C                  number and position of spacers
         DO 3 IG=1,NPLH
         NBEGTU(IG)=ITABL(JHBDE,1,13+IG)
         SPWID1(IG)=RTABL(JHBDE,1,82+IG)
         SPWID2(IG)=RTABL(JHBDE,1,105+IG)
         NOSSP1(IG)=ITABL(JHBDE,1,36+IG)
         NOSSP2(IG)=ITABL(JHBDE,1,59+IG)
 3       CONTINUE
C                  end cap dead zones
C                  width between endcaps modules
         DWEC=RTABL(JHEDE,1,4)
         REEC=RTABL(JHEGE,1,11)
         DAEC=ATAN2(2.*DWEC,REEC)
C                  radius of the pole
         REPO=RTABL(JHEGE,1,10)
C                  width and distance between spacers
         SPWD=RTABL(JHEDE,1,5)
         SPDT=RTABL(JHEDE,1,6)
         XLIM = DWEC + 2.*(SPWD + SPDT)
         XMAEC=DWEC + 4.*(SPWD + SPDT)
         W8TU=RTABL(JHETC,1,5)
C           limits of the regions with different tube length
C                 in ordinary barrel modules
         DO 4 I=1,NPLH
         BORD(I,1) = DWID + 4.*W8TU
         IF(NOSSP1(I).GE.0.AND.NOSSP2(I).GE.0) THEN
             BORD(I,2) = BORD(I,1) + 4.*W8TU + SPWID1(I)
             ICK = 0
             IF((NBEGTU(I)-NOSSP2(I)).GT.1) ICK = 1
             BORD(I,3) = BORD(I,2) + FLOAT(NBEGTU(I) - 9)*W8TU +
     +                   FLOAT(ICK)*SPWID2(I)
         ELSE
             IF(NOSSP1(I).GE.0) THEN
                 IF(NOSSP1(I).LE.8) THEN
                   BORD(I,2) = BORD(I,1) + 4.*W8TU + SPWID1(I)
                   BORD(I,3) = BORD(I,2) +FLOAT(NBEGTU(I)-9)*W8TU
                 ELSEIF((NBEGTU(I)-NOSSP1(I)).GT.1) THEN
                   BORD(I,2) = BORD(I,1) + 4.*W8TU
                   BORD(I,3)=BORD(I,2)+FLOAT(NBEGTU(I)-9)*W8TU+SPWID1(I)
                 ELSE
                   BORD(I,2) = BORD(I,1) + 4.*W8TU
                   BORD(I,3)=BORD(I,2)+FLOAT(NBEGTU(I)-9)*W8TU
                 ENDIF
             ELSE
                 BORD(I,2) = BORD(I,1) + 4.*W8TU
                 BORD(I,3) = BORD(I,2) + FLOAT(NBEGTU(I) - 9)*W8TU
             END IF
         END IF
 4       CONTINUE
C               limits of regions with different tube length
C                   in barrel special modules
         DO 6 I=1,NPLH
         BORDS(I,1) = BORD(I,1) - W8TU
         BORDS(I,2) = BORD(I,1)
         BORDS(I,3) = BORD(I,2)
         BORDS(I,4) = BORD(I,3)
 6       CONTINUE
C
         ICALL=1
      ENDIF
C ---------------------------------------------------------------
      CALL vzero(ibme(1),nplh)
      CALL vzero(hmom(1),nplh)
      NEXP=0
      IGFL=0
      NENF=0
      IEBM=0
      NRLT=NRPT-10
      IF(ITABL(JTREX,NRPT,JTRELA).LT.24 .AND.
     +   (ABS(ITABL(JTREX,NRPT,JTRERG)/100).EQ.33 .OR.
     +    ABS(ITABL(JTREX,NRPT,JTRERG)/100).EQ.34)) NRLT=NRPT-9
      CALL VZERO(FMUL,NPLH)
C
C               loop over extrapol. points
      ICB = 0
      DO 60 I=1,NRPT
      IFLBN=0
C               region.module  and  plane
C                of the point
      IRGM1=ITABL(JTREX,I,JTRERG)
      IREGM=IRGM1/100
C                   hcal points
      IF(IRGM1.LE.2500) GO TO 60
      ICB = ICB + 1
      IPLA=ITABL(JTREX,I,JTRELA)
      IF(IPLA.EQ.24) GO TO 60
      IF ( icb .GT. 23 ) GOTO 60
      HMOM(ICB) = SQRT (
     .            RTABL(JTREX,I,4)**2 +
     .            RTABL(JTREX,I,5)**2 +
     .            RTABL(JTREX,I,6)**2 )
      IBME(ICB)=1
C
C Expected coordin. and multiple scattering r.m.s.
C
      XASS=RTABL(JTREX,I,JTREX3)
      YASS=RTABL(JTREX,I,JTREX3+1)
      ZASS=RTABL(JTREX,I,JTREX3+2)
      SIG=RTABL(JTREX,I,JTRERM)
C
      IARM=IABS(IREGM)
      MOD=IABS(IRGM1)-IARM*100
C
C End caps : finds coordinate in module r.f.
C
      IF(IARM.EQ.33 .OR. IARM.EQ.34) THEN
         IF(IPLA.EQ.1) THEN
               IBME(ICB)=0
               GO TO 60
         END IF
         PHIP=ATAN2(YASS,XASS)
         IF(PHIP.LT.0.)PHIP=TWOPI+PHIP
         ISES=PHIP/PIBY3+1.
         XSRL=((-1)**(ISES+1))*YASS
         IF(ISES.EQ.2.OR.ISES.EQ.5)THEN
            PHIR=PIBY3
            IF(ZASS.GT.0.)THEN
               XSRL=-XASS*SIN(PHIR)+YASS*COS(PHIR)
            ELSE
               XSRL=XASS*SIN(PHIR)+YASS*COS(PHIR)
            ENDIF
            IF(ISES.EQ.5)XSRL=-XSRL
         ENDIF
         IF((FLOAT(ISES)*PIBY3-PHIP).LT.DAEC.OR.
     +   (PHIP-FLOAT((ISES-1))*PIBY3).LT.DAEC) THEN
               IGFL=2
               NENF=NENF+1
               IBME(ICB)=0
               GO TO 40
         ENDIF
         IF(XSRL.GT.XMAEC) THEN
               IGFL=2
               NENF=NENF+1
               IBME(ICB)=0
               GOTO 40
         ENDIF
         IF(XSRL.LT.DWEC) THEN
               IGFL=2
               NENF=NENF+1
               IBME(ICB)=0
               GOTO 40
         ENDIF
         DO 10 ISP=1,4
         IF(XSRL.LE.(FLOAT(ISP)*(SPDT+SPWD)+DWEC).AND.
     +      XSRL.GE.(FLOAT(ISP)*(SPDT+SPWD)-SPWD+DWEC)) THEN
               IGFL=4
               NENF=NENF+1
               IBME(ICB)=0
               GO TO 40
         ENDIF
 10      CONTINUE
         IF((XASS**2+YASS**2).GT.(REPO**2)) THEN
           IF(IPLA.LE.8) THEN
             IGFL=6
             NENF=NENF+1
             IBME(ICB)=0
             GOTO 40
           ENDIF
         ENDIF
         IF(ZASS.GT.0.) THEN
              IF(XSRL.GT.XLIM) THEN
                   IVET = ISES + 6
              ELSE
                   IVET = ISES
              END IF
         ELSE
              IF(XSRL.GT.XLIM) THEN
                   IVET = ISES + 30
              ELSE
                   IVET = ISES + 24
              END IF
         END IF
         IF(MASK(IVET,IPLA).EQ.0) THEN
            IGFL=7
            IBME(ICB) = 0
            NENF = NENF + 1
            GO TO 40
         END IF
C
C Barrel : finds coordinate in module r.f.
C
      ELSEIF(IARM.EQ.31 .OR. IARM.EQ.32) THEN
         PHIM=FLOAT(MOD-1)*PIBY6
         PHIR=PHIM-PIBY2
         XSRL=(XASS-RBAR*COS(PHIM))*COS(PHIR)
         XSRL=XSRL+(YASS-RBAR*SIN(PHIM))*SIN(PHIR)
         IF(XSRL.GE.0.) THEN
            NMTX = MOD*2 - 2
            IF(NMTX.EQ.0) NMTX = 24
         ELSE
            NMTX = MOD*2 - 1
         END IF
         XSRL=ABS(XSRL)
C
         IF(XSRL.LE.DWID) THEN
                          IGFL=1
                          NENF=NENF+1
                          IBME(ICB)=0
                          GO TO 40
                          END IF
         XMAX=FLOAT(NBEGTU(IPLA))*W8TU+SPWID1(IPLA)+SPWID2(IPLA)+DWID
         IF(XSRL.GE.XMAX)THEN
               IGFL=1
               NENF=NENF+1
               IBME(ICB)=0
               GO TO 40
         END IF
         IF(IARM.EQ.32)THEN
              IGFL=3
              NENF=NENF+1
              IBME(ICB)=0
              GO TO 40
         ENDIF
         IVET = (NMTX + 1)/2 + 12
         IF(MASK(IVET,IPLA).EQ.0) THEN
            IGFL=7
            IBME(ICB) = 0
            NENF = NENF + 1
            GO TO 40
         END IF
         IF(NMTX.EQ.6.OR.NMTX.EQ.7) THEN
C
C Check if the extr. point is in tube active zone of barrel special
C module
C
           ZTU = ZMXS(5)
           DO 37 IA = 4,1,-1
           IF(XSRL.LT.BORDS(IPLA,IA)) ZTU = ZMXS(IA)
 37        CONTINUE
           IF(ABS(ZASS).GT.ZTU) THEN
C
C   Set flag for big notch problem in MC
C
              IF(ABS(ZTU-ZMXS(1)).LT.1.) IFLBN=1
              IGFL=3
              NENF = NENF + 1
              IBME(ICB) = 0
              GO TO 40
           END IF
         ELSE
C
C Check if the extr. point is in tube active zone of barrel ordinary
C module
C
           ZTU = ZMX(4)
           DO 38 IA = 3,1,-1
           IF(XSRL.LT.BORD(IPLA,IA)) ZTU = ZMX(IA)
 38        CONTINUE
           IF(ABS(ZASS).GT.ZTU) THEN
              IGFL=3
              NENF = NENF + 1
              IBME(ICB) = 0
              GO TO 40
           END IF
         ENDIF
      ELSE
         GO TO 60
      ENDIF
C
 40   NEXP=NEXP+1
C
 60   CONTINUE
C
      DO 85 JB=1,NPLH
   85 IEBM=IEBM+IBME(JB)*IPOW(JB)
C
  999 CONTINUE
C
      RETURN
      END
#endif
@


1.1.1.1
log
@2nd try to import uphy
@
text
@@
