head     1.1;
branch   1.1.1;
access   ;
symbols  uphy1-0:1.1.1.1 flr:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     96.08.16.13.38.18;  author flr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.08.16.13.38.19;  author flr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@        SUBROUTINE qutrex(itrac)
C-------------------------------------------------------------------
C!  Extrapolate TPC track through Ecal, Coil, Hcal
C
C Modified version of FTRACK from G. Capon, adapted for QUFSIM.
C
C Patrick Janot -- 08 Nov 1993
C!======================================================================
#ifndef DOC
#include "qcde.h"
#include "qhac.h"
#include "resolu.h"
#include "psfrjj.h"
#include "trexjj.h"
C
      COMMON/HCALG1/HT0LAY,HTSLAB,HCTGAP,HXBMIN,HXBMAX,
     + HREMIN,HREMAX,HREMED,HZEMIN,HZBMIN,HTSAMP,HTHCLE,
     + HYBMIN,HYBMAX,HZEMAX,HZBMAX
C
      COMMON /RCONDS/ FIELRC,ENERRC
C
      PARAMETER (NSTEP=26)
C
C Parametrisation of dE/dx in ECAL and coil
C
      PARAMETER (AL1=.172E-3,AL2=-8.2,AL3=1.14)
      PARAMETER (PB1=.166E-3,PB2=-6.1,PB3=4.12)
      PARAMETER (WMU=.10566, WMU2=.011164)
      DIMENSION ATFRA(9,NSTEP+4)
      DIMENSION DVE(7),DVF(7),ATIN(8)
      DIMENSION SCOO(NSTEP+4),STEP(NSTEP+4),TH2PR(NSTEP+4),R2MS(NSTEP+4)
      DIMENSION RADL(3)
      DATA RADL /2.4,8.05,2.45/
      DATA R1ECA,Z1ECA,R2ECA,Z2ECA,R1COI,R2COI
     +   / 185. , 245., 234., 297., 248.,264.7/
      DATA PCUT/0.2/
      DATA INIJO,NITER/0,4/
C
#include "qmacro.h"
#include "psfrfu.h"
C
      IF(INIJO.EQ.0) THEN
         INIJO=1
         IBON=1
         fielrc = bfield
         IF(FIELRC .LT. 0.0001) IBON=0
      ENDIF
C
      NVETT=0
C Initialize ATFRA
      DO 100 I1 =  1,  9
        DO 110 I2 =  1,  NSTEP+4
          ATFRA (I1,I2) = 0.
  110   CONTINUE
  100 CONTINUE
         CURV  = QPSFIR(itrac)
         TADIP = QPSFTL(itrac)
         PHI   = QPSFP0(itrac)
         DW    = QPSFD0(itrac)
         ZW    = QPSFZ0(itrac)
C
         RHO=1./ABS(CURV)
         PT=FIELRC*RHO*CLGHT/100000.
         THETA = ATAN2 (1.,TADIP)
         CPHI  = COS(PHI)
         SPHI  = SIN(PHI)
         CTHET = COS(THETA)
         STHET = SIN(THETA)
C
         DVF(1) =+DW*SPHI
         DVF(2) =-DW*CPHI
         DVF(3) = ZW
         DVF(4) = STHET*CPHI
         DVF(5) = STHET*SPHI
         DVF(6) = CTHET
         PPINI  = PT/STHET
         DVF(7) = PPINI
         Q     =-SIGN (1.,CURV)
C
C Select penetrating particles
C
         IF (PPINI . LT. PCUT) GO TO 999
C
C Track extrapol up to Ecal entrance
C
         CALL AUHCYL(R1ECA,Z1ECA,FIELRC,Q,DVF,DVE,ICODE)
         IF(ICODE.EQ.0) GO TO 999
      NVETT=NVETT+1
      DVE(7)=DVF(7)
      ATFRA(8,NVETT)=1500.
      CALL UCOPY(DVE,ATFRA(1,NVETT),6)
      DO 21 K=4,6
 21   ATFRA(K,NVETT)=ATFRA(K,NVETT)*DVE(7)
C
C Track extrap through Ecal in NITER = 4 steps
C
      ENE=SQRT(DVF(7)*DVF(7)+WMU2)
      DO 25 NIT=1,NITER
      R2=R1ECA+(R2ECA-R1ECA)*FLOAT(NIT)/FLOAT(NITER)
      Z2=Z1ECA+(Z2ECA-Z1ECA)*FLOAT(NIT)/FLOAT(NITER)
      CALL AUHCYL(R2,Z2,FIELRC,Q,DVE,DVF,ICODE)
      IF(ICODE.EQ.0) GO TO 999
      DIST=VDIST(DVE,DVF,3)
      BE=DVF(7)/ENE
      GA=ENE/WMU
      DEDX=DIST*PB1*(ALOG(GA*BE)-BE*BE-PB2)*PB3/BE/BE
      ENE=ENE-DEDX
      IF(ENE .LT. 1.5*WMU) GO TO 51
      DVF(7)=SQRT(ENE*ENE-WMU2)
      IF(NIT.LT.NITER) CALL UCOPY(DVF,DVE,7)
 25   CONTINUE
      NVETT=NVETT+1
      ATFRA(8,NVETT)=0.
      CALL UCOPY(DVF,ATFRA(1,NVETT),6)
      DO 22 K=4,6
 22   ATFRA(K,NVETT)=ATFRA(K,NVETT)*DVF(7)
C
C Track extrapol through coil
C Approx Zcoil=Zhcal !!, R2coil=rmax-field !!
C
      CALL AUHCYL(R1COI,HZEMIN,FIELRC,Q,DVF,DVE,ICODE)
      IF(ICODE.EQ.1) THEN
         NVETT=NVETT+1
         DVE(7)=DVF(7)
         ATFRA(8,NVETT)=2500.
         CALL UCOPY(DVE,ATFRA(1,NVETT),6)
         DO 23 K=4,6
 23      ATFRA(K,NVETT)=ATFRA(K,NVETT)*DVE(7)
C
         CALL AUHCYL(R2COI,HZEMIN,FIELRC,Q,DVE,DVF,ICOD4)
         NVETT=NVETT+1
         ATFRA(8,NVETT)=0.
         DIST=VDIST(DVE,DVF,3)
C                   correct DIST for real coil thickness
         DIST=DIST*44./16.7
         BE=DVF(7)/ENE
         GA=ENE/WMU
         DEDX=DIST*AL1*(ALOG(GA*BE)-BE*BE-AL2)*AL3/BE/BE
         ENE=ENE-DEDX
         IF(ENE .LT. 1.5*WMU) GO TO 51
         DVF(7)=SQRT(ENE*ENE-WMU2)
         CALL UCOPY(DVF,ATFRA(1,NVETT),6)
         DO 24 K=4,6
 24      ATFRA(K,NVETT)=ATFRA(K,NVETT)*DVF(7)
      ELSE
         CALL UCOPY(DVE,ATIN,6)
         GO TO 40
      ENDIF
C
C Extrapolate track up to Hcal first plane
C
      IF(ICOD4.EQ.1)THEN
         PHI1=PIBY12
         CALL AULPOL(HXBMIN,HZEMIN,PHI1,DVF,ATIN,ICODE)
         IF(ICODE.EQ.0) GO TO 999
      ELSE
         CALL UCOPY(DVF,ATIN,6)
      ENDIF
C
C Follow track in Hcal (with mag field)
C
 40   CONTINUE
      ATIN(4)=ATIN(4)*DVF(7)
      ATIN(5)=ATIN(5)*DVF(7)
      ATIN(6)=ATIN(6)*DVF(7)
      ATIN(8)=Q
      CALL HTRACK(IBON,1,ATIN,IFAIL,NVETT,ATFRA)
C
C Create TREX bank (bank NR = ITRAC )
C
 51   CONTINUE
      LEN=2+LTREXA*NVETT
      CALL AUBOS('TREX',ITRAC,LEN,JTREX,IGARB)
      IF(IGARB.EQ.2) THEN
         CALL RERROR('+++ QUTREX +++',1,'no space for TREX bank')
         GO TO 999
      ENDIF
      IW(JTREX+1)=LTREXA
      IW(JTREX+2)=NVETT
      KTREX=JTREX+2
C
C          fill TREX bank
C
      DO 50 N=1,NVETT
      CALL UCOPY(ATFRA(1,N),RW(KTREX+1),6)
      IW(KTREX+JTRERG)=NINT(ATFRA(8,N))
      IW(KTREX+JTRELA)=NINT(ATFRA(9,N))
      KTREX=KTREX+LTREXA
 50   CONTINUE
C
      SCOO(1)=0.
      CALL VZERO(R2MS,NSTEP+4)
      CALL VZERO (TH2PR,NSTEP+4)
C
C Compute steps and partial lengths of trajectory
C
      DO 60 N=1,NVETT-1
      DX=RTABL(JTREX,N+1,JTREX3)-RTABL(JTREX,N,JTREX3)
      DY=RTABL(JTREX,N+1,JTREX3+1)-RTABL(JTREX,N,JTREX3+1)
      DZ=RTABL(JTREX,N+1,JTREX3+2)-RTABL(JTREX,N,JTREX3+2)
      STEP(N)=SQRT(DX*DX+DY*DY+DZ*DZ)
      SCOO(N+1)=SCOO(N)+STEP(N)
      NMED=ITABL(JTREX,N,JTRERG)/1000
      IF(NMED.GT.0 .AND. NMED.LE.3) THEN
         PX=RTABL(JTREX,N,JTREP3)
         PY=RTABL(JTREX,N,JTREP3+1)
         PZ=RTABL(JTREX,N,JTREP3+2)
         PTOT2=PX*PX+PY*PY+PZ*PZ
         ETOT2=PTOT2+WMU2
         PIBE2=PTOT2*PTOT2/ETOT2
         CORR=1.
         IF(STEP(N).GT.0) CORR=(1.+LOG10(STEP(N)/RADL(NMED))/9.)**2
         TH2PR(N)=225.0E-6/PIBE2*STEP(N)/RADL(NMED)*CORR
      ENDIF
C
C Compute average mult. scatt. radius
C
      DO 70 I=1,N
      DVOL=SCOO(N+1)-SCOO(I+1)
      R2MS(N+1)=R2MS(N+1) + TH2PR(I)*(STEP(I)*STEP(I)/3.+
     + STEP(I)*DVOL+DVOL*DVOL)
 70   CONTINUE
C
      JROW=KROW(JTREX,N+1)
      RW(JROW+JTRERM)=SQRT(R2MS(N+1))
 60   CONTINUE
C
C For first row put ifail in place of m.s. radius !!
C
      JROW=KROW(JTREX,1)
      RW(JROW+JTRERM)=IFAIL
  999 CONTINUE
C
      RETURN
      END
#endif
@


1.1.1.1
log
@2nd try to import uphy
@
text
@@
