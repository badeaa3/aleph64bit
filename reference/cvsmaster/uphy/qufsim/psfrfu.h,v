head     1.1;
branch   1.1.1;
access   ;
symbols  uphy1-0:1.1.1.1 flr:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     96.08.16.13.38.15;  author flr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.08.16.13.38.16;  author flr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@      QPSFIR(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfir)
      QPSFTL(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsftl)
      QPSFP0(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfp0)
      QPSFD0(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfd0)
      QPSFZ0(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfz0)
      KPSFN0(i) = IW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfn0)
      QPSFQX(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfqx)
      QPSFQY(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfqy)
      QPSFQZ(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfqz)
      QPSFXV(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfxv)
      QPSFYV(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfyv)
      QPSFZV(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfzv)
      QPSFPX(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfpx)
      QPSFPY(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfpy)
      QPSFPZ(i) = RW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfpz)
      KPSFAL(i) = IW(ipsfr + lmhlen + (i-1)*lpsfra + jpsfal)
C
@


1.1.1.1
log
@2nd try to import uphy
@
text
@@
