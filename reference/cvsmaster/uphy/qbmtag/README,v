head     1.1;
branch   1.1.1;
access   ;
symbols  qbmtag_1:1.1.1.1 OSF1:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.11.25.15.01.21;  author flr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.11.25.15.01.21;  author flr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@+--------+--------+--------+--------+
|QBMTAG  |FORTRAN |TOMALIN |10/12/95|
+--------+--------+--------+--------+
QBMTAG (Q B Mass TAG)
======================
 
QBMTAG is a b tag based upon the invariant mass of the secondary vertex,
which, when combined with QIPBTAG or QVSRCH, can yield b purities of 99%
at efficiencies of 25%, using a single event hemisphere.
 
QBMTAG works by calculating in each event-half, the invariant mass of
all charged tracks which are inconsistent with the primary vertex.
In charm events, this is almost certainly less than the mass of a
typical charmed hadron, whereas in beauty events, it can be up to 5 GeV.
 
To be more precise, for each event-half, QBMTAG loops over tracks in
order of decreasing inconsistency with primary vertex, and stops when
their combined invariant mass exceeds 1.8 GeV. (i.e. The mass of a
typical charmed hadron). It then returns a tag, CLMASS, indicating the
probability that the "last track" used came from primary vertex.
 
  For a very high purity tag, CLMASS should be combined with either
QIPBTAG or QVSRCH. The optimal linear combination (together with
suggested cuts) is
 
      0.7*CLMASS - 0.3*log10(QIPBTAG) > 2.4
 or   0.7*CLMASS + 0.3*QVSRCH > 8.3
 
  In 1993, these each give b purities of 98.8 % at efficiencies of 25%,
using a single hemisphere tag. In 1992, the tagging efficiency is only
23% because the VDET efficiency was lower.
Almost identical results are obtained regardless of whether QBMTAG is
used with QIPBTAG or with QVSRCH. (Tagging efficiencies quoted
here were calculated using only events having their thrust axis in the
range ABS(COS(THETA)) < 0.7, and having at least one jet).
 
  Below is an example of how to use QBMTAG. In this example, one
can choose between using QIPBTAG or QVSRCH according to whether
METHOD = 1 or 2 respectively. A real analysis would presumably only
use one of the two algorithms.
 
  If QBMTAG is used together with QIPBTAG, then please note the
following:
  1) Insert a BNEG card in your card file so that QIPBTAG can also use
tracks with -ve impact parameters and hence give better results.
(see ALNEWS 1389 in ALEPH.OFFLINE).
  2) A few specialists might not want to do this, so that they can
use the QIPBTAG -ve tag to calculate the uds tagging efficiency.
They should know that a QBMTAG -ve tag can be calculated by calling
QBMTAG with PROBTRK replaced by NPROBTRK.
  3) The Fortran for QBMTAG includes a version of the QIPBTAG routine
BTAG_PAR, in which the cut on the maximum impact parameter of accepted
tracks was relaxed from 0.25 to 0.40 cm. Some people may prefer to run
without this modification to QIPBTAG. If they delete the modified
BTAG_PAR, they will reduce by b purity by about 0.2%.
 
      SUBROUTINE QUEVNT(QT,KT,QV,KV)
C----------------------------------------------------------------------
C Use QIPBTAG=1 or QVSRCH=2.
      PARAMETER(METHOD=1)
C Arguments used in call to QIPBTAG.
      PARAMETER (MAXTRK=400,MAXJET=40,MAXV0=20,MAXDAU=10)
      INTEGER FRF2TRK(MAXTRK),TRKJET(MAXJET)
      REAL    PROBEVT,PROBHEMI(2),PROBJET(MAXJET),PROBTRK(MAXTRK)
C Arguments used in call to QVSRCH.
      DIMENSION BPOS(3),BSIZ(3),PVTX(3),EPVTX(3),DJET(3,2),
     +BTAG(2),SVTX(3,2),ESVTX(3,2),AVTX(3,2),CAVTX(3,3,2)
C Arguments used in call to QBMTAG.
      DIMENSION CLMASS(2),CTSTAR(2),NSEC(2),LISTSC(MAXTRK,2)
C Combined tag.
      DIMENSION RESULT(2)
C
#include "qcde.h"
#include "qmacro.h"
C----------------------------------------------------------------------
C--- Event selection.
      CALL QJOPTR('EF',' ')
      CALL QJTHRU(THRUST,'THRUST',KRECO)
      ITHRUS = KPDIR('THRUST',KRECO)
      IF (ABS(QCT(ITHRUS)).GT.0.7) RETURN
C
C--- Call QIPBTAG or QVSRCH.
C
      IF (METHOD.EQ.1) THEN
        CALL QIPBTAG(IERRB,NTRACK,NJET,TRKJET,FRF2TRK,
     +               PROBTRK,PROBJET,PROBHEMI,PROBEVT)
      ELSE
C Note nominal beam position and envelope size.
        IF (XGETBP) THEN
          DO 10 I = 1,3
            BPOS(I) = QVTXBP(I)
            BSIZ(I) = SQRT(QVTSBP(I)**2 + QVTEBP(I)**2)
   10     CONTINUE
        ELSE
          BPOS(1) = QVXNOM
          BPOS(2) = QVYNOM
          BPOS(3) = QVZNOM
          BSIZ(1) = 0.002
          BSIZ(2) = 0.002
          BSIZ(3) = 2.000
        END IF
        CALL QVSRCH(BPOS,BSIZ,PVTX,EPVTX,
     +              DJET,BTAG,SVTX,ESVTX,AVTX,CAVTX,IERRB)
      END IF
C
      IF (IERRB.NE.0) RETURN
C
C--- Call mass tag.
C
      CALL QBMTAG(METHOD,NTRACK,PROBTRK,FRF2TRK,PVTX,SVTX,DJET,
     +            CLMASS,CTSTAR,NSEC,LISTSC)
C
C--- Produce combined tag for each hemisphere.
C
      IF (METHOD.EQ.1) THEN
        RESULT(1) = 0.7*CLMASS(1) - 0.3*LOG10(PROBHEMI(1))
        RESULT(2) = 0.7*CLMASS(2) - 0.3*LOG10(PROBHEMI(2))
      ELSE
        RESULT(1) = 0.7*CLMASS(1) + 0.3*BTAG(1)
        RESULT(2) = 0.7*CLMASS(2) + 0.3*BTAG(2)
      END IF
C
      END
@


1.1.1.1
log
@import 
@
text
@@
