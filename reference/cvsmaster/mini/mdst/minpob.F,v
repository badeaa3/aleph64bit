head	1.1;
branch	1.1.1;
access;
symbols
	mini202_9:1.1.1.1
	mini202_8:1.1.1.1
	mini202_7:1.1.1.1
	mini202_6:1.1.1.1
	mini202_5:1.1.1.1
	mini202_4:1.1.1.1
	mini202_2:1.1.1.1
	mini202_1:1.1.1.1
	mini202:1.1.1.1
	mini201_1:1.1.1.1
	mini104_1:1.1.1.1
	mini103_1:1.1.1.1
	mini102_7:1.1.1.1
	mini102_5:1.1.1.1
	mini102_4:1.1.1.1
	mini102_3:1.1.1.1
	mini102_2:1.1.1.1
	mini102_1:1.1.1.1
	mini102:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.08.15.11.09.39;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.15.11.09.40;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE MINPOB
C
CKEY MDST /INTERNAL
C-----------------------------------------------------------------------
C! Fill Hcal digital pattern object DPOB for Mini-DST.
C
C     Author: Stephen Haywood      22-Jan-90
C
C     Input  : PPOB bank
C     Output : DPOB bank
C
C     Called by MINDST
C-----------------------------------------------------------------------
#ifndef DOC
C
#include "bcs.h"
#include "minfac.h"
#include "ppobjj.h"
#include "dpobjj.h"
#include "bmacro.h"
C
C++   Pick up PPOB bank.
C
      KPPOB = NLINK('PPOB',0)
      IF(KPPOB.GT.0) THEN
         NPPOB = LROWS(KPPOB)
      ELSE
         NPPOB = 0
      ENDIF
      IF(NPPOB.LE.0) RETURN
C
C++   Create DPOB bank.
C
      NDPOB = NPPOB
      LEN = LMHLEN + LDPOBA * NDPOB
      CALL AUBOS('DPOB',0,LEN, KDPOB,IGARB)
      IF(IGARB.GE.2) THEN
         WRITE(IW(6),'('' MINPOB: Cannot create DPOB bank'')')
         RETURN
      ELSE IF(IGARB.NE.0) THEN
         KPPOB = NLINK('PPOB',0)
      ENDIF
      IW(KDPOB+LMHCOL) = LDPOBA
      IW(KDPOB+LMHROW) = NDPOB
C
C++   Loop over PPOB storing information in DPOB.
C
      DO 100 I=1,NPPOB
         IW(KROW(KDPOB,I)+JDPOE0) = NINT(EFACTM * RTABL(KPPOB,I,JPPODE))
  100 CONTINUE
C
C++   Add the bank to the Mini list.
C
      CALL MINLIS('DPOB')
C
      RETURN
      END
#endif
@


1.1.1.1
log
@1st release of mini under cvs
@
text
@@
