head	1.5;
access;
symbols
	alio83:1.5
	alio82:1.5
	alio81:1.5
	alio80:1.5
	alio74:1.5
	alio73:1.5
	alio72:1.5
	alio71:1.5
	alio70:1.4
	alio68:1.4
	alio69:1.4
	alio67:1.3
	alio66:1.3
	alio65:1.3
	alio64:1.3
	alio63:1.2
	alio62:1.2
	alio61:1.2
	alio60:1.2
	alephio53:1.2
	v4:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.5
date	97.11.02.13.35.34;	author flr;	state Exp;
branches;
next	1.4;

1.4
date	97.01.16.13.55.13;	author flr;	state Exp;
branches;
next	1.3;

1.3
date	96.07.19.07.05.09;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	96.03.13.14.59.59;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.52.35;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.52.36;	author flr;	state Exp;
branches;
next	;


desc
@@


1.5
log
@alephio7.1 mods for redwood and corr in bkrhab
@
text
@      SUBROUTINE ADSPOS(LUN,CRNAM,FTYP3,FDEVI,IER)
C----------------------------------------------------------------------
CKEY ALREAD UNIX DISPOSE / USER
C   Author     : T. Wildish              05-SEP-1989
C   Modified :- A.Belk CERN/EP        15-MAY-1990   Fix Vax dispose
C
C   UNIX specific, not needed for other machines
C! Dispose of output files to IBM/Vax from  UNIX
C    Inputs:
C             CRNAM    name of the file to be disposed
C             FTYP3    type of the file to be disposed
C             FDEVI    device of the file to be disposed
C             LUN      Logical unit number
C                      = 0 means dispose of files at end of job
C                      > 0 means record them for later use
C    Output:  IER      error code
C                      =  0 means OK
C                      ne 0 means error
C
C ======================================================================
#ifndef DOC
#if defined(UNIX)
C Arguments
      CHARACTER*(*) CRNAM,FTYP3,FDEVI
#include "bcs.h"
C Internal common block to the package KERNLIB M432
      COMMON /SLATE/ ND432,NE432,NF432,NG432,DUM432(36)
C Local to routine
      SAVE
      PARAMETER(NUNITS=10)
      INTEGER       LUNITS(NUNITS)
      CHARACTER*80  CHNAM(NUNITS)
      CHARACTER*5   CHTYP(NUNITS)
      CHARACTER*3   ALTYP(NUNITS)
      CHARACTER*5   CHRECL(NUNITS)
      CHARACTER*80  CHUSID(NUNITS)
      CHARACTER*30  CHDISP
      CHARACTER*20  FILOPT
      CHARACTER*20  RHOST, HOST, RUSER, USER
      INTEGER       LOPT, SYSTEM
      EXTERNAL      SYSTEM
      CHARACTER     CRDEVI*7, CID*2, UXTYP*5, CRQUOT*1, CRUSER*20
      CHARACTER*120 MSG
      CHARACTER*8 SUBR
      CHARACTER*34 CHTEMP
      DATA CRDEVI / 'DISPOSE'/
      DATA SUBR / ' ADSPOS '/
      DATA NOUT/0/
C --------------------------------------------------------------------
C
C     Lun > 0, record information
C
      IF ( LUN.GT.0 ) THEN
          IF ( NOUT.EQ.NUNITS ) THEN
             WRITE (IW(6),*) ' ***ADSPOS*** more than ',NUNITS,
     &                          ' files to dispose'
             RETURN
          END IF
          LENDEV = LNBLNK(FDEVI)
          I = INDEX(FDEVI,'DISP')
          IF ( I.EQ.0 ) RETURN
          IDISP = ICNEXT (FDEVI,I,LENDEV)
          IF (NE432 .GT. LENDEV) THEN
             CRUSER= ' '
          ELSE
             IUSER = ICNEXT (FDEVI,NE432,LENDEV)
             CRUSER= FDEVI(IUSER:NE432-1)
          ENDIF
          NOUT = NOUT+1
          LUNITS(NOUT) = LUN
          ALTYP(NOUT)  = FTYP3
          CHUSID(NOUT) = CRUSER(1:LNBLNK(CRUSER))
          NRECL        = KBYTREC (FTYP3,CRDEVI)
          CALL CSETDI (NRECL,CHRECL(NOUT),1,5)
          CHNAM(NOUT)  = CRNAM
#include "unixtyp.h"
          CHTYP(NOUT)  = UXTYP
          RETURN

      ENDIF
C
C       LUN = 0, loop over files and dispose of them
C
      CALL GETENV ('REMOTEUSER',RUSER)
      IF (RUSER.EQ.' ') CALL GETENV ('USER',RUSER)
      CALL GETENV ('REMOTEHOST',RHOST)
      LRH = LNBLNK(RHOST)
      CALL GETENV ('HOST',HOST)
      IF (RHOST.EQ.HOST) THEN
C      disable DISPOSE
         IF (HOST.EQ.'csf') THEN
            WRITE (IW(6),*) ' ***ADSPOS*** DISPOSE not avalaible on CSF'
         ENDIF
         RETURN
      ENDIF
      IDOT = INDEX(RHOST,'.')
      IF (IDOT.GT.0) THEN
         RHOST = RHOST(1:IDOT-1)
         LRH = IDOT-1
      ENDIF
C      on VAX machines add "sys$login" to the machine name
      IF (RHOST(1:2).EQ.'vx'.OR.RHOST(1:2).EQ.'al') THEN
         RHOST = RHOST(1:LRH)//'::'//'sys$login'
      ENDIF
C
      CRQUOT = ''''
C
      DO 10 I = 1, NOUT
         LFN = LNBLNK(CHNAM(I))
C      remove stem of name if present
         IST = 1
 20      CONTINUE
         INA = INDEX(CHNAM(I)(IST:LFN),'/')
         IF ( INA.NE.0 ) THEN
            IST = IST+INA
            GO TO 20
         END IF
C
         CHDISP = 'dispose'
C
C      dispose to RHOST
C      if CHUSID is not given , send it to RUSER
         USER = CHUSID(I)
         IF (USER.EQ.' ') USER = RUSER
         MSG = CHDISP(1:LNBLNK(CHDISP)+1)//CHNAM(I)(1:LFN)//
     &        ' -t'//CRQUOT//RHOST(1:LNBLNK(RHOST))//':'//
     &         CHNAM(I)(IST:LFN)//CRQUOT//
     &        ' -f '//CHTYP(I)(1:LNBLNK(CHTYP(I)))//
     &        ' -u '//USER(1:LNBLNK(USER))
#include "prmsg.h"
         ISTA =  SYSTEM (MSG(1:LNBLNK(MSG)))
C
 10   CONTINUE
C
      RETURN
C     error
 98   IER = 1
#endif
      END
#endif
@


1.4
log
@alephio68 introduce ALEPH_LINUX flag
@
text
@d128 1
a128 1
     &        ' -f '//CHTYP(I)(1:LNBLNK(CHTYP))//
@


1.3
log
@replace Call SYSTEM with IST=SYSTEM
@
text
@d41 1
@


1.2
log
@import alephio 52 from historian. Modify aclose.F to NOT call brwnd twice
for the same file. update version.h to 5.3
@
text
@d40 1
a40 1
      INTEGER       LOPT
d130 1
a130 1
         CALL SYSTEM (MSG(1:LNBLNK(MSG)))
@


1.1
log
@Initial revision
@
text
@a0 1
*DK adspos
@


1.1.1.1
log
@import alephio 4
@
text
@@
