head	1.1;
access;
symbols
	alio83:1.1
	alio82:1.1
	alio81:1.1
	alio80:1.1
	alio74:1.1
	alio73:1.1
	alio72:1.1
	alio71:1.1
	alio70:1.1
	alio68:1.1
	alio69:1.1
	alio67:1.1
	alio66:1.1
	alio65:1.1
	alio64:1.1
	alio63:1.1
	alio62:1.1
	alio61:1.1
	alio60:1.1;
locks; strict;
comment	@c @;


1.1
date	96.04.23.10.00.59;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@move alph, dbas, a part of alef and a part of c to alephio
Modified Files:
 	version.h
 Added Files:
 	adbrow.F adbrpn.F adbrun.F adbswp.F adbver.F agetdb.F agtfil.F
	albos.F aldawr.F aldtyp.F aleveh.F alfind.F alfmt.F algtbk.F
 	algtdb.F algtlu.F algtro.F algtyp.F alinst.F alk7fil.F
 	alk7fru.F alk7op.F alk7tru.F alredb.F alrune.F alrunh.F
 	alrunr.F alseed.F alstho.F alstin.F alstri.F altabl.F alvsn.F
 	aopdbs.F aublis.F aubos.F aubprs.F bkcari.F bkinca.F bkrhab.F
 	bkrhal.F bkrhaw.F bktobk.F cafiht.F chahol.F dafrds.F gtdbas.F
 	gtstup.F igtfmt.F jhocha.F julrec.F junial.F junidb.F
 	kbytrec.F loctab.F nameru.F ubpack.F uclean.F uindxs.F usbos.F
 	usgtdb.F utcblk.F utccop.F utcofo.F utwocl.F utwoex.F
Removed Files:
	noibm.F
@
text
@      INTEGER FUNCTION NAMERU (NAME,IRUN,JCOL,IROW)
C --------------------------------------------------------------
C!  get the row# of a bank which contains IRUN run number in
C   the range defined by col# JCOL and col# JCOL+1
C   ITABL(JNAME,IROW,JCOL)<= IRUN <= ITABL(JNAME,IROW,JCOL+1)
C - F.Ranjard - 931119
CKEY ALEF GET BANK DA
C
C - Input:
C             NAME   / INTE  = bank name
C             IRUN   / INTE  = run # which is looking for
C
C - Output:   NAMERU / INTE  = NAME BOS index
C                              =0 means not enough space
C                              <0 means a garbage collection occurded
C             IROW   / INTE  = row # which contains IRUN run number
C                              0 means IRUN not found
C
C ----------------------------------------------------------------
#ifndef DOC
      CHARACTER*(*) NAME
      CHARACTER*2 DIR
      INTEGER GTDBAS
      LOGICAL GREATER,SMALLER,FDBASE
#include "bcs.h"
      SAVE NCDAF, LDBAS, IPRUN, NRUN, LAST
      DATA NCDAF /0/
#include "bmacro.h"
C ----------------------------------------------------------------
C
C - 1st entry
C
      IF (NCDAF.EQ.0) THEN
        NCDAF = NAMIND('CDAF')
        LDBAS = JUNIDB(0)
        IPRUN = -1
      ENDIF
C
      NNAME = NAMIND(NAME)
      IGARB = 0
      NR = IRUN
      DIR = 'LE'
      GREATER = .FALSE.
      SMALLER = .FALSE.
      FDBASE  = .FALSE.
C
C - get NAME bank
C
      JNAME = IW(NNAME)
   40 IF (JNAME.EQ.0) THEN
C     get NAME from the data base if any
C
C     1st  check validity range of the data base for real data
        IF (IW(NCDAF).EQ.0.AND.IPRUN.NE.IRUN.AND.IRUN.GE.2001) THEN
          IPRUN = IRUN
          IGET = GTDBAS (LDBAS,IRUN)
          IF (IGET.NE.0) THEN
            NAMERU = 0
            RETURN
          ENDIF
        ENDIF
C
        NRUN = NDANR (LDBAS,NAME,DIR,NR)
        IF (NRUN.NE.0) THEN
          JNAME = MDARD (IW,LDBAS,NAME,NRUN)
          IF (JNAME.EQ.0) THEN
            IGARB=1
            CALL BGARB(IW)
            JNAME = MDARD (IW,LDBAS,NAME,NRUN)
            IF (JNAME.EQ.0) GOTO 60
          ENDIF
C           LAST is the highest element in the d.b NAME,NR=NRUN bank
          LAST = ITABL(JNAME,LROWS(JNAME),JCOL+1)
          FDBASE = .TRUE.
        ENDIF
      ENDIF
C
C - get the row # IROW  which contains the run # NR
C
      IF (JNAME.GT.0) THEN
   50   LC = LCOLS(JNAME)
        LR = LROWS(JNAME)
C
C     IF the run # IRUN is greater than the last run THEN
C        IF a NAME bank with a higher bank # exists THEN
C           use this NAME bank
C        ELSE
C           look at the data base with a IRUN greater than the LAST one
C        ENDIF
C     ELSEIF IRUN is smaller than the 1st one THEN
C        look at the data base
C     ELSE
C        find the right row # in NAME bank
C     ENDIF
C
        IF (IRUN .GT. ITABL(JNAME,LR,JCOL+1)) THEN
          IF (SMALLER .AND. FDBASE) GOTO 60
          GREATER = .TRUE.
          IF (IW(JNAME-1) .GT. 0) THEN
            JNAME = IW(JNAME-1)
            GOTO 50
          ELSE
            NR = LAST+1
            DIR = 'GE'
            JNAME = 0
            GOTO 40
          ENDIF
        ELSEIF (IRUN .LT. ITABL(JNAME,1,JCOL)) THEN
          IF (GREATER .AND. FDBASE) GOTO 60
          SMALLER = .TRUE.
          DIR = 'LE'
          JNAME = 0
          GOTO 40
        ELSE
C
          IROW = LOCTAB (IW(JNAME+LMHLEN+1),LC,LR,JCOL,IRUN)
          IF (IROW.EQ.0) THEN
C           IRUN is outside run range
            JNAME = 0
          ELSEIF (IROW.LT.0) THEN
C           IRUN is between 1st run of row # IROW and 1st run of
C           row # IROW+1
C           check that it is in the run range of row # IROW
            IROW = -IROW
            IF (IRUN.GT.ITABL(JNAME,IROW,JCOL+1)) JNAME = 0
          ENDIF
        ENDIF
      ENDIF
C
C - end
C
   60 CONTINUE
      NAMERU = JNAME
      IF (IGARB.EQ.1) NAMERU = -JNAME
      END
#endif
@
