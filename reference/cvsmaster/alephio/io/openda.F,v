head	1.4;
access;
symbols
	alio83:1.4
	alio82:1.4
	alio81:1.4
	alio80:1.4
	alio74:1.4
	alio73:1.4
	alio72:1.4
	alio71:1.4
	alio70:1.4
	alio68:1.4
	alio69:1.4
	alio67:1.4
	alio66:1.4
	alio65:1.4
	alio64:1.4
	alio63:1.4
	alio62:1.4
	alio61:1.4
	alio60:1.3
	alephio53:1.2
	v4:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	96.05.29.16.35.45;	author flr;	state Exp;
branches;
next	1.3;

1.3
date	96.05.03.14.45.15;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	96.03.13.15.01.35;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.52.31;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.52.32;	author flr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@alephio 6.1 - rewrite WRITE statment in adbver.F and openda.F to please fpp on alws
@
text
@      LOGICAL FUNCTION OPENDA(LDBAS,IVERS,IDATE)
C.---------------------------------------------------------------------
CKEY IO OPEN DA
C  F.Ranjard - 880304     modified by M.Rumpf for APOLLO sequence
C! Open DAF
C  DAF length is 1024
C  Input : LDBAS logical unit number for DAF
C  Output: OPENDA is true if the file is found
C          IVERS   = DAF version version
C          IDATE   = DAF date of last change
C  Called by USER program before any use of the D.B.
C  Calls BDADF from Boslib
C  For APOLLO ,it is assumed that a LINK ADBSCONS.DAF
C  exists on the DAF.
C.---------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "adbsjj.h"
      PARAMETER (ILNDB=1024)
      LOGICAL LEX
#include "bmacro.h"
C --------------------------------------------------------------------
      LEX = .FALSE.
      IF (LDBAS .GT. 0) THEN
         LEX=.TRUE.
#ifndef ETA
         INQUIRE (UNIT=LDBAS,EXIST=LEX,RECL=LEN)
#endif
      ENDIF
C
      IF (LEX) THEN
#if defined(ALEPH_DEC) || defined(ALEPH_SGI)
         OPEN (LDBAS,STATUS='OLD',ACCESS='DIRECT',RECL=ILNDB,READONLY)
#else
#if defined(APOLLO) || defined(ALEPH_HP)
         OPEN (LDBAS,STATUS='OLD',ACCESS='DIRECT',RECL=ILNDB,
     &         FILE='~/adbscons.daf')
#else
         OPEN (LDBAS,STATUS='OLD',ACCESS='DIRECT',RECL=ILNDB*4)
#endif
#endif
         IW(1)=2
         CALL BDABF(LDBAS,ILNDB,'    ','    ')
C
C -      get version # and date of last change of the DAF
         IND = MDARD (IW,LDBAS,'ADBS',0)
         IF (IND .EQ. 0) THEN
            IDATE = 0
            IVERS = 0
         ELSE
            IDATE = ITABL(IND,1,JADBDC)
            IVERS = ITABL(IND,1,JADBVN)
         ENDIF
         LOUT = IW(6)
         IF (LOUT .GT. 0) THEN
            WRITE (LOUT,*)' +++OPENDA+++ ADBSCONS DAF version ',IVERS,
     &      '   date of last change ',IDATE
         ENDIF
      ENDIF
C
      OPENDA = LEX
C
      END
#endif
@


1.3
log
@replace flag ${VENDOR} with ALEPH_${VENDOR}
Modified Files:
  ard/	ainqui.F algtenv.F aopen.F aopenw.F aoperd.F aoptap.F astage.F
 	awrtap.F
  pres/	cmpbu3.c cmpbu4.c cmpbu5.c dmpbl3.c dmpbl4.c dmpbl5.c dmpcop.c
 	extzv.c insv.c
  epio/ epinit.F
  inc/ 	cmphost.h ctolow.h gtchunit.h gtftyp.h
  io/ 	almach.F openda.F opendb.F opensq.F sdrsx.F sibsdr.F sxsdr.F
@
text
@d56 2
a57 2
            WRITE (LOUT,'(/1X,''+++OPENDA+++ ADBSCONS DAF version '',I5,
     &                  3X,''date of last change '',I7//)') IVERS,IDATE
@


1.2
log
@import alephio 52 from historian. Modify aclose.F to NOT call brwnd twice
for the same file. update version.h to 5.3
@
text
@d32 1
a32 1
#if defined(DEC) || defined(SGI)
d35 1
a35 1
#if defined(APOLLO) || defined(HP)
@


1.1
log
@Initial revision
@
text
@a0 1
*DK openda
d32 1
a32 1
#if defined(VAX) || defined(DEC) || defined(SGI)
@


1.1.1.1
log
@import alephio 4
@
text
@@
