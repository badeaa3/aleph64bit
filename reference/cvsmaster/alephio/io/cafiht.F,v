head	1.1;
access;
symbols
	alio83:1.1
	alio82:1.1
	alio81:1.1
	alio80:1.1
	alio74:1.1
	alio73:1.1
	alio72:1.1
	alio71:1.1
	alio70:1.1
	alio68:1.1
	alio69:1.1
	alio67:1.1
	alio66:1.1
	alio65:1.1
	alio64:1.1
	alio63:1.1
	alio62:1.1
	alio61:1.1
	alio60:1.1;
locks; strict;
comment	@c @;


1.1
date	96.04.23.10.00.37;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@move alph, dbas, a part of alef and a part of c to alephio
Modified Files:
 	version.h
 Added Files:
 	adbrow.F adbrpn.F adbrun.F adbswp.F adbver.F agetdb.F agtfil.F
	albos.F aldawr.F aldtyp.F aleveh.F alfind.F alfmt.F algtbk.F
 	algtdb.F algtlu.F algtro.F algtyp.F alinst.F alk7fil.F
 	alk7fru.F alk7op.F alk7tru.F alredb.F alrune.F alrunh.F
 	alrunr.F alseed.F alstho.F alstin.F alstri.F altabl.F alvsn.F
 	aopdbs.F aublis.F aubos.F aubprs.F bkcari.F bkinca.F bkrhab.F
 	bkrhal.F bkrhaw.F bktobk.F cafiht.F chahol.F dafrds.F gtdbas.F
 	gtstup.F igtfmt.F jhocha.F julrec.F junial.F junidb.F
 	kbytrec.F loctab.F nameru.F ubpack.F uclean.F uindxs.F usbos.F
 	usgtdb.F utcblk.F utccop.F utcofo.F utwocl.F utwoex.F
Removed Files:
	noibm.F
@
text
@      INTEGER FUNCTION CAFIHT (NCAHI,TCAHT)
C ---------------------------------------------------------------------
C - F.Ranjard - 881213
C! fill bank CAHT using bank CAHI
C  CAHT stands for a detector HiT bank known by its name-index NCAHT
C  CAHI stands for a detector HIstory bank known by its name TCAHI
C
C - Input  : NCAHI / I  = name-index of the history bank
C            TCAHT / A  = name of the HIT bank
C
C - Output : CAFIHT/ I  = index of name-bank TCAHT
C                         if 0 means not enough space
C   a work bank CKEY with index JDCKEY is created, filled and dropped.
C   if CAHT bank exists when entering the routine it is dropped.
C ------------------------------------------------------------------
#ifndef DOC
      SAVE
#include "bcs.h"
      CHARACTER*4 TCAHT, CHAINT
      PARAMETER (JHISPT=1, JHISAD=2, JHISDE=3)
      PARAMETER (JHITAD=1, JHITDE=2)
      COMMON /CKEYCO/ JDCKEY
      DATA IFI /0/
#include "bmacro.h"
C --------------------------------------------------------------------
C
      IF (IFI.EQ.0) THEN
         JDCKEY = 0
         IFI = 1
      ENDIF
C
      CAFIHT = -1
      JCAHI = IW(NCAHI)
      IF (JCAHI.EQ.0) RETURN
      NRHI = LROWS(JCAHI)
      IF (NRHI.EQ.0) RETURN
      LHIT = JHITDE + LCOLS(JCAHI)-JHISDE
C
C - Drop and then Create CAHT with NRHI rows and LHIT columns
C
      CALL BDROP (IW,TCAHT)
      CALL AUBOS (TCAHT,0,NRHI*LHIT+LMHLEN,JCAHT,IGARB)
      IF (JCAHT.EQ.0) GOTO 998
      IF (IGARB.EQ.1) JCAHI = IW(NCAHI)
      IW(JCAHT+LMHCOL) = LHIT
C
C - Sort CAHI in increasing order of tower address
C
      CALL WBANK (IW,JDCKEY,NRHI,*998)
      IW(JDCKEY-3) = INTCHA('CKEY')
      DO 1 I =1,NRHI
         IW(JDCKEY+I) = KROW(JCAHI,I) + JHISAD
 1    CONTINUE
      CALL SORTZV (IW(1),IW(JDCKEY+1),NRHI,-1,0,1)
C
C - Fill the bank, sum the energy in identical storey
C
      LASAD = -1
      DO 100 I=1,NRHI
         KCAHI = IW(JDCKEY+I) - JHISAD
         IF (IW(KCAHI+JHISAD) .NE. LASAD) THEN
            LASAD = IW(KCAHI+JHISAD)
            KCAHT = KNEXT(JCAHT)
            IW(KCAHT+JHITAD) = IW(KCAHI+JHISAD)
            K = 0
            DO 10 J = JHISDE,LCOLS(JCAHI)
               IW(KCAHT+JHITDE+K) = IW(KCAHI+J)
  10        K = K + 1
            IW(JCAHT+LMHROW) = LROWS(JCAHT) + 1
         ELSE
            K = 0
            DO 20 J = JHISDE,LCOLS(JCAHI)
               IW(KCAHT+JHITDE+K) = IW(KCAHT+JHITDE+K) + IW(KCAHI+J)
  20        K = K + 1
         ENDIF
  100 CONTINUE
C
C - Reduce length of CAHT and drop work bank
      CAFIHT = JCAHT
      CALL AUBPRS (TCAHT)
      CALL WDROP (IW,JDCKEY)
      RETURN
C
C - not enough space
 998  CAFIHT = 0
      END
#endif
@
