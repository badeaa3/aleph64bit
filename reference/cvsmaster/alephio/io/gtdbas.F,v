head	1.1;
access;
symbols
	alio83:1.1
	alio82:1.1
	alio81:1.1
	alio80:1.1
	alio74:1.1
	alio73:1.1
	alio72:1.1
	alio71:1.1
	alio70:1.1
	alio68:1.1
	alio69:1.1
	alio67:1.1
	alio66:1.1
	alio65:1.1
	alio64:1.1
	alio63:1.1
	alio62:1.1
	alio61:1.1
	alio60:1.1;
locks; strict;
comment	@c @;


1.1
date	96.04.23.10.00.43;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@move alph, dbas, a part of alef and a part of c to alephio
Modified Files:
 	version.h
 Added Files:
 	adbrow.F adbrpn.F adbrun.F adbswp.F adbver.F agetdb.F agtfil.F
	albos.F aldawr.F aldtyp.F aleveh.F alfind.F alfmt.F algtbk.F
 	algtdb.F algtlu.F algtro.F algtyp.F alinst.F alk7fil.F
 	alk7fru.F alk7op.F alk7tru.F alredb.F alrune.F alrunh.F
 	alrunr.F alseed.F alstho.F alstin.F alstri.F altabl.F alvsn.F
 	aopdbs.F aublis.F aubos.F aubprs.F bkcari.F bkinca.F bkrhab.F
 	bkrhal.F bkrhaw.F bktobk.F cafiht.F chahol.F dafrds.F gtdbas.F
 	gtstup.F igtfmt.F jhocha.F julrec.F junial.F junidb.F
 	kbytrec.F loctab.F nameru.F ubpack.F uclean.F uindxs.F usbos.F
 	usgtdb.F utcblk.F utccop.F utcofo.F utwocl.F utwoex.F
Removed Files:
	noibm.F
@
text
@      INTEGER FUNCTION GTDBAS(LBASE,KRUN)
C --------------------------------------------------------------------
C! Get name of the correct data base and open it
CKEY ALEF DBASE
C - F.Ranjard - 910308
C
C  Input  :   LBASE = data base logical unit
C             KRUN  = current run number
C
C  Ouput  :  GTDBAS = return code
C                   = 0  a correct data base has been opened
C
C     get ADBR,NR=0  which contains the setup code.
C         ADBS,NR=0  which contains the version number
C         ADBN,NR=0  which contains the name of the data base
C     Then check whether the run number has changed.
C     IF yes THEN
C       Check that the opened data base is the right one.
C     ELSE
C       call AOPDBS again which will use the setup code to open
C       the right data base
C     ENDIF
C
C--------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "adbnjj.h"
#include "adbrjj.h"
#include "adbsjj.h"
      CHARACTER*8  FNAM
      INTEGER GTSTUP
#include "bmacro.h"
C ----------------------------------------------------------------------
      IRUN = IABS (KRUN)
      IRET = 0
C
C - 1st entry
      JADBR = MDARD (IW,LBASE,'ADBR',0)
      IF (JADBR.EQ.0) THEN
          CALL ALTELL (
     &     'ALGTDB: ADBR is missing, current d.b. will be used',
     &      0,'RETURN')
      ELSE
         IDBSTP = GTSTUP ('DB',IRUN)
         JADBN  = MDARD (IW,LBASE,'ADBN',0)
         IF (JADBN.EQ.0) THEN
            CALL ALTELL (
     &        'ALGTDB: ADBN is missing, curent d.b. will be used',
     &         0,'RETURN')
         ELSE
            IVMIN = ITABL(JADBN,IDBSTP,JADBFV)
            IVMAX = ITABL(JADBN,IDBSTP,JADBLV)
            JADBS = MDARD (IW,LBASE,'ADBS',0)
            IF (JADBS.EQ.0) THEN
               CALL ALTELL (
     &         'ALGTDB: ADBS is missing, curent d.b. will be used',
     &          0,'RETURN')
            ELSE
               IVCUR = ITABL(JADBS,1,JADBVN)
               IF (IVCUR.LT.IVMIN .OR. IVCUR.GT.IVMAX) THEN
                  KADBN = KROW (JADBN,IDBSTP)
                  CALL ALSTIN (IW(KADBN+JADBFI),LADBNA-JADBFI+1,FNAM)
                  LN = LNBLNK (FNAM)
                  CALL AOPDBS (FNAM(1:LN),IRET)
                  CALL DAFRST (LBASE)
                  CALL BDROP (IW,'ADBSADBRADBN')
                  CALL BDROP (IW,'+DIS')
                  CALL ADBVER(IVERS,IDATE)
                  JADBR = MDARD (IW,LBASE,'ADBR',0)
               ENDIF
            ENDIF
         ENDIF
      ENDIF
C
      GTDBAS = IRET
C
      END
#endif
@
