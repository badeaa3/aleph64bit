head	1.1;
access;
symbols
	alio83:1.1
	alio82:1.1
	alio81:1.1
	alio80:1.1
	alio74:1.1
	alio73:1.1
	alio72:1.1
	alio71:1.1
	alio70:1.1
	alio68:1.1
	alio69:1.1
	alio67:1.1
	alio66:1.1
	alio65:1.1
	alio64:1.1
	alio63:1.1
	alio62:1.1
	alio61:1.1
	alio60:1.1;
locks; strict;
comment	@c @;


1.1
date	96.04.23.10.00.35;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@move alph, dbas, a part of alef and a part of c to alephio
Modified Files:
 	version.h
 Added Files:
 	adbrow.F adbrpn.F adbrun.F adbswp.F adbver.F agetdb.F agtfil.F
	albos.F aldawr.F aldtyp.F aleveh.F alfind.F alfmt.F algtbk.F
 	algtdb.F algtlu.F algtro.F algtyp.F alinst.F alk7fil.F
 	alk7fru.F alk7op.F alk7tru.F alredb.F alrune.F alrunh.F
 	alrunr.F alseed.F alstho.F alstin.F alstri.F altabl.F alvsn.F
 	aopdbs.F aublis.F aubos.F aubprs.F bkcari.F bkinca.F bkrhab.F
 	bkrhal.F bkrhaw.F bktobk.F cafiht.F chahol.F dafrds.F gtdbas.F
 	gtstup.F igtfmt.F jhocha.F julrec.F junial.F junidb.F
 	kbytrec.F loctab.F nameru.F ubpack.F uclean.F uindxs.F usbos.F
 	usgtdb.F utcblk.F utccop.F utcofo.F utwocl.F utwoex.F
Removed Files:
	noibm.F
@
text
@      SUBROUTINE BKTOBK (BANK1,NR1,BANK2,NR2)
C --------------------------------------------------------
CKEY ALEF BANK COPY
C - F.RANJARD - 950518
C! copy bank1,nr1 into bank2,nr2
C - Input  : BANK1  /A = input bank name
C            NR1    /I = input bank number
C            BANK2  /A = output bank name
C            NR2    /I = output bank number
C --------------------------------------------------------
#ifndef DOC
      CHARACTER*(*) BANK1, BANK2
      INTEGER NR1, NR2
      CHARACTER*196 FMT
#include "bcs.h"
C --------------------------------------------------------
C
      JBANK1 = NLINK(BANK1,NR1)
C     return if BANK1,NR1 does not exist
      IF (JBANK1.EQ.0) GOTO 999
C
C - create BANK2,NR2 with BANK1 length
C
      CALL AUBOS (BANK2,NR2,IW(JBANK1),JBANK2,IGARB)
C     return if not enough space
      IF (JBANK2.EQ.0) GOTO 999
      IF (IGARB.EQ.1) JBANK1 = NLINK(BANK1,NR1)
C
C - copy BANK1 into BANK2
C
      CALL UCOPY (IW(JBANK1+1),IW(JBANK2+1),IW(JBANK1))
C
C - set BANK2 format if necessary
C
      NBANK2 = NAMIND(BANK2)
C     if BANK2 format already set then return
      IF (IGTFMT(NBANK2).GT.0) GOTO 999
C
      NBANK1 = NAMIND(BANK1)
      ID1    = IGTFMT(NBANK1)
C     if BANK1 format not set then return
      IF (IGTFMT(NBANK1).EQ.0) GOTO 999
C
C     unpack BANK1 format, set BANK2 format
      CALL TRFMTR (FMT,LFM,IW(ID1+1),IW(ID1))
      CALL BKFMT (BANK2,FMT(1:LFM))
C
 999  CONTINUE
      END
#endif

@
