head	1.1;
access;
symbols
	alio83:1.1
	alio82:1.1
	alio81:1.1
	alio80:1.1
	alio74:1.1
	alio73:1.1
	alio72:1.1
	alio71:1.1
	alio70:1.1
	alio68:1.1
	alio69:1.1
	alio67:1.1
	alio66:1.1
	alio65:1.1
	alio64:1.1
	alio63:1.1
	alio62:1.1
	alio61:1.1
	alio60:1.1;
locks; strict;
comment	@c @;


1.1
date	96.04.23.10.00.58;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@move alph, dbas, a part of alef and a part of c to alephio
Modified Files:
 	version.h
 Added Files:
 	adbrow.F adbrpn.F adbrun.F adbswp.F adbver.F agetdb.F agtfil.F
	albos.F aldawr.F aldtyp.F aleveh.F alfind.F alfmt.F algtbk.F
 	algtdb.F algtlu.F algtro.F algtyp.F alinst.F alk7fil.F
 	alk7fru.F alk7op.F alk7tru.F alredb.F alrune.F alrunh.F
 	alrunr.F alseed.F alstho.F alstin.F alstri.F altabl.F alvsn.F
 	aopdbs.F aublis.F aubos.F aubprs.F bkcari.F bkinca.F bkrhab.F
 	bkrhal.F bkrhaw.F bktobk.F cafiht.F chahol.F dafrds.F gtdbas.F
 	gtstup.F igtfmt.F jhocha.F julrec.F junial.F junidb.F
 	kbytrec.F loctab.F nameru.F ubpack.F uclean.F uindxs.F usbos.F
 	usgtdb.F utcblk.F utccop.F utcofo.F utwocl.F utwoex.F
Removed Files:
	noibm.F
@
text
@      FUNCTION LOCTAB(ITABL,ISTEP,LENG,INDX,IVAL)
C------------------------------------------------------------------
C.    O.CALLOT   7-MAR-86
C! Locate a value in a table
C   This function is analog to LOCATI ( E106 in Kernlib ) but
C   work on two dimension array: we look for the INDXth element in
C   LENG row of ISTEP word each for position of IVAL. The
C   function value is the row number, with same conventions
C   as for LOCATI : j : ITABL(INDX,j) = IVAL
C                   0 :                    IVAL < ITABL(INDX,1)
C                  -j : ITABL(INDX,j)    < IVAL < ITABL(INDX,j+1)
C               -LENG : ITABL(INDX,LENG) < IVAL
C  -----------------------------------------------------
#ifndef DOC
      DIMENSION ITABL(ISTEP,LENG)
      PARAMETER (MINROW=20)
C
C** if small number of row, simple DO loop
C
      IF(LENG.GT.MINROW)  GO TO 200
      DO 10 I=1,LENG
        IF(IVAL.GT.ITABL(INDX,I))  GO TO 10
        IF(IVAL.EQ.ITABL(INDX,I)) THEN
          LOCTAB = I
          RETURN
        ELSE
          LOCTAB = 1-I
          RETURN
        ENDIF
   10 CONTINUE
      LOCTAB = -LENG
      RETURN
C
C** binary search in ITABL
C
  200 IND = 0
      ISTP = LENG
  210 IST2 = ( ISTP + 1 ) / 2
      IF(IST2.EQ.0) GO TO 250
      IF(IVAL.LT.ITABL(INDX,IND+IST2)) THEN
        ISTP = IST2 - 1
        GO TO 210
      ELSE IF(IVAL.GT.ITABL(INDX,IND+IST2)) THEN
        IND  = IND + IST2
        ISTP = ISTP - IST2
        GO TO 210
      ELSE
        LOCTAB = IND + IST2
        RETURN
      ENDIF
  250 LOCTAB = - IND
      RETURN
      END
#endif
@
