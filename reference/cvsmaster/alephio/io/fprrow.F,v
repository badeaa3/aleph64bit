head	1.2;
access;
symbols
	alio83:1.2
	alio82:1.2
	alio81:1.2
	alio80:1.2
	alio74:1.2
	alio73:1.2
	alio72:1.2
	alio71:1.2
	alio70:1.2
	alio68:1.2
	alio69:1.2
	alio67:1.2
	alio66:1.2
	alio65:1.2
	alio64:1.2
	alio63:1.2
	alio62:1.2
	alio61:1.2
	alio60:1.2
	alephio53:1.2
	v4:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.13.15.01.29;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.52.31;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.52.32;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import alephio 52 from historian. Modify aclose.F to NOT call brwnd twice
for the same file. update version.h to 5.3
@
text
@      SUBROUTINE FPRROW(LUN,XW,LCOL,LROW1,LROW2,IFMT,LFMT)
C --------------------------------------------------------
C - F.Ranjard - 900830     from V.Blobel FPRNN/BOS77
CKEY IO PRINT BOS BANK
C! print table using format in numeric array IFMT
C - Input:  LUN   / I = print logical unit
C           XW    / R = table to be printed
C           LCOL  / I = number of columns in the table
C           LROW1 / I = print from row# LROW1
C           LROW2 / I =       to   row# LROW2
C           IFMT  / I = array containing the BOS bank format
C           LFMT  / I = length of IFMT array
C - Output: LFMT  / I = if < 0 means that the table was not printed
C ---------------------------------------------------------
#ifndef DOC
      SAVE
      REAL XW(*)
      INTEGER IFMT(*)
      CHARACTER*131 LINE, STR*14, STR2*12, CHAINT*4
      EQUIVALENCE (IIW,WII)
      INTEGER LV(3,10)
      LOGICAL FTABL
C -------------------------------------------------------
      IF(LFMT.EQ.0) GOTO 100

*     initialize format use
*     skip format of the miniheader if there: LFMT>4
*
      IF (LFMT.EQ.4 .OR.
     &   (LFMT.EQ.6.AND.IFMT(4).EQ.10.AND.IFMT(5).EQ.12.AND.
     &    IFMT(6).EQ.0) )  THEN
C      the format is pure I
         I    =3
         ITERM=3
         NFMT = LFMT
      ELSE
C       is the format tabular : 2I,(....)?
         FTABL = IFMT(4).EQ.22.AND.IFMT(5).EQ.10.AND.IFMT(LFMT).EQ.0
         IF (FTABL) THEN
            I    =5
            ITERM=5
            NFMT = LFMT-1
         ELSE
C       the format is not tabular : use the format length as a flag
C       to tell the calling routine  that the table was not printed
            LFMT = -LFMT
            RETURN
         ENDIF
      ENDIF
      LEV=0
      N=0

*     initialize printout
*     a line is printed from XW(JA) to XW(JB)
*     there are not more than 10 words per line: JB-JA</= 9
*     IF a row has more than 1 column : LCOL>1  THEN
*        a new row starts a new line

      JA=(LROW1-1)*LCOL + 1
      NWRD = LROW2 * LCOL
      IROW = LROW1-1

*     print one line

   10 J =JA
      JB = MIN0(J+9,NWRD)
      IF (LCOL.GT.1) THEN
         IF (MOD(JA,LCOL).EQ.1) THEN
            IROW = IROW+1
            JAA = JA
         ENDIF
         IF (JB-JAA+1 .GT. LCOL) JB = JAA+LCOL-1
      ENDIF
      LINE=' '
   20 IF(N.EQ.0) GOTO 50
   30 M=MIN0(N,JB-J+1)
      N=N-M
      DO 40 L=1,M
      LL=12*(J-JA+L)+11
      IF(K.EQ.1) THEN
*        floating point format
         CALL PNVF(XW(J+L-1),STR,JS)
         IF(JS.LE.0.OR.JS.GT.12) THEN
C           WRITE(LUN,'(1X,''WRONG '',I12)') JS
            JS=12
         END IF
      ELSE IF(K.EQ.2) THEN
*        integer
         CALL PNVI(XW(J+L-1),STR,JS)
      ELSE IF(K.EQ.3) THEN
*        character
         STR=CHAINT(XW(J+L-1))
         JS=4
      ELSE IF(K.EQ.4) THEN
*        16 bit integer
         WII=XW(J+L-1)
         STR=' '
#include "iandsh.h"
         CALL PNVI(I2       ,STR2,JS)
         STR(13-JS:12)=STR2(1:JS)
         CALL PNVI(I1       ,STR2,JS)
         STR( 7-JS: 6)=STR2(1:JS)
         JS=12
      ELSE
         CALL PNVZ(XW(J+L-1),STR,JS)
      END IF
      LINE(LL-JS+1:LL)=STR(1:JS)
C
   40 CONTINUE
      J=J+M
      IF(J.LE.JB) GOTO 20
      IF (LCOL.EQ.1) THEN
         JP=MOD(JB,1000)
         CALL PNVI(JA,STR,JS)
         LINE(7-JS:6)=STR(1:JS)
         LINE(7:7)='-'
         CALL PNVI(JP,STR,JS)
         JT=MIN0(3,JS)
         LINE(11-JT:11)=STR(JS-JT+1:JS)
      ELSE
         IF (JA .EQ. JAA) THEN
            LINE(3:5) = 'row'
            CALL PNVI (IROW,STR,JS)
            LINE(11-JS:11) = STR(1:JS)
         ENDIF
      ENDIF
      WRITE(LUN,'(A)') LINE
   45 IF(JB.EQ.NWRD) GOTO 100
      JA=JB+1
      GOTO 10
*     get next format code
   50 I=I+1
      IF(I.GT.NFMT) THEN
         I=ITERM
         GOTO 50
      END IF
*     right parenthesis
      IF(IFMT(I).EQ.0) THEN
         LV(3,LEV)=LV(3,LEV)+1
         IF(LV(3,LEV).GE.LV(2,LEV)) THEN
            ITERM=LV(1,LEV)-1
            LEV=LEV-1
         ELSE
            I=LV(1,LEV)
         END IF
      ELSE
         N=IFMT(I)/10
         K=IFMT(I)-10*N
         IF(K.EQ.0) THEN
*        left parenthesis
            LEV=LEV+1
            LV(1,LEV)=I
            LV(2,LEV)=N
            LV(3,LEV)=0
         ELSE
*           format F or I or A
            IF(NFMT.NE.3) THEN
               IF(I.NE.NFMT-1)      GOTO 30
               IF(LEV.EQ.0)         GOTO 30
               IF(I.NE.LV(1,LEV)+1) GOTO 30
            END IF
            N=999999999
            GOTO 30
         END IF
      END IF
      GOTO 50

  100 RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK fprrow
@


1.1.1.1
log
@import alephio 4
@
text
@@
