head	1.2;
access;
symbols
	alio83:1.2
	alio82:1.2
	alio81:1.2
	alio80:1.2
	alio74:1.2
	alio73:1.2
	alio72:1.2
	alio71:1.2
	alio70:1.2
	alio68:1.2
	alio69:1.2
	alio67:1.2
	alio66:1.2
	alio65:1.2
	alio64:1.2
	alio63:1.2
	alio62:1.2
	alio61:1.2
	alio60:1.2
	alephio53:1.2
	v4:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.01.18.13.52.28;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.52.42;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.52.43;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@ Modified Files:
	acdarg.F afilin.F afilou.F ainqui.F amount.F aoptap.F astage.F
	awrtap.F
 Modified Files:
	cmphost.h ctolow.h gtchdecl.h version.h
 Removed Files:
	albitw.h
 Modified Files:
 	altell.F babend.F jalrec.F noibm.F opensq.F sdrsx.F sibsdr.F
	sxsdr.F
 Modified Files:
	ardnews.h news.h
 Modified Files:
	cfrvax.F cmpban.F cmpdro.F cmpin2.F cmpini.F cmplis.F cmpsum.F
	cmptoi.F cotest.F detest.F dmpban.F dmpchr.F dmpfmt.F udmper.F
@
text
@      SUBROUTINE CMPIN2(LDBUN,LIST,IER)
C-----------------------------------------------------------------------
C!    Initialisation, read data cards, get bank format from the database
CKEY PRESS CMPIN2 COMPRESS /USER
C!
C!    AUTHOR: D.Harvatis    MAR 89        F.Ranjard - 900404
C!
C!    INPUT :
C!           - LDBUN : data base logical unit number
C!           - LIST  : list of banks.
C!                     Information is read from the database only for
C!                     the banks contained in list LIST.
C!                     If the list is empty, information is read for
C!                     every bank in the TPRO bank of the database.
C!
C!    OUTPUT:
C!           - IER   : 0 Successful completion.
C!                    -1 CPRO bank not loaded from DAF file.
C!                       Compression will be possible only for banks
C!                       whose format is given through a CFMT data card.
C!                    >0 Information was read for only IER banks.
C!                       This could be either because the MAXBNK limit
C!                       was reached, or because the creation of a work
C!                       bank failed.
C!
C!    Calls : CMPTOI, AOPEN
C!            NAMIND, NDANR, MDARD, NLIST, CHAINT, INTCHA, WBANK, NDROP
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
      CHARACTER*(*)   LIST
      LOGICAL         RALL,INLIST,LOADC,CMPTOI,SWITCH,DUMMY
#include "bcs.h"
#include "cprojj.h"
      CHARACTER*4     BNAME,BNAM2,NLIST,TYP,CHAINT,SNAME,SNAM2
      CHARACTER*8     FMT
#include "cmpinf.h"
C----------------------------------------------------------------------
#include "bmacro.h"
C     initial values
      IER=0
      RALL=NLIST(IW,I,LIST).EQ.' '
      LOADC=.FALSE.
      IB = NUMBNK
C
C ============================================================
C
C - get formats from documentation  CPRO bank
C
  160 JCPRO=IW(NAMIND('CPRO'))
C     Check if already in memory
      IF (JCPRO.EQ.0) THEN
          LOADC=.TRUE.
C         find bank number
          NCPRO=NDANR(LDBUN,'CPRO','GE',0)
          JCPRO=MDARD(IW,LDBUN,'CPRO',NCPRO)
C         check if bank loaded ok
          IF (JCPRO.EQ.0) THEN
C             if not, try a garbage collection
              CALL BGARB(IW)
              JCPRO=MDARD(IW,LDBUN,'CPRO',NCPRO)
C             if still not loaded return with IER=-1
              IF (JCPRO.EQ.0) GOTO 12
          END IF
      END IF
      NRCOL=LROWS(JCPRO)
      CALL BKFMT ('CPRO','2I,(5A,I,2A)')
      IRCOL=0
C         get name of bank
   10     CONTINUE
          NCRO=1
          INAME=ITABL(JCPRO,IRCOL+NCRO,JCPRNA)
C
          IF (JNONE.NE.0) THEN
C         if there is a list of banks to NOT pack then
C            look if the current name is in the list
C            if yes skip it
             DO 9 K=1,LROWS(JNONE)
                IF (INAME.NE.ITABL(JNONE,K,1)) GOTO 9
                IRCOL = IRCOL+NCRO
                GOTO 10
   9         CONTINUE
          ENDIF
C
          BNAME=CHAINT(INAME)
          NIN=INDEX(NBNKS,BNAME)
          IF (MOD(NIN,4).NE.1) THEN
C         if the bank format was not read from a CFMT card,
C             read it from the database
C             find number of rows belonging to the same bank
  110         IF (ITABL(JCPRO,IRCOL+NCRO+1,JCPRNA).EQ.INAME) THEN
                  NCRO=NCRO+1
                  IF (IRCOL+NCRO.LE.NRCOL) GO TO 110
C                 end of bank CPRO reached
                  GO TO 111
              END IF
  111         CONTINUE
C             find number of columns
              NCOL=0
              DO 112 IFL=IRCOL+1,IRCOL+NCRO
                 NCOL = NCOL+ITABL(JCPRO,IFL,JCPRNI)
  112         CONTINUE
              IF (NCOL.GT.0) THEN
                  INLIST=.TRUE.
                  LIN=INDEX(LBNKS,BNAME)
                  IF (MOD(LIN,4).NE.1) INLIST=.FALSE.
                  IF (RALL.OR.INLIST) THEN
                      BNAM2=CHAINT(INTCHA(BNAME)+TOLOWER)
                      IF (FMTFL) CALL BKFMT(BNAM2,'B32')
                      IRANKB(IB)=IB
C
C                     create one work bank per bank name
C                     the name of the work bank is the bank name
C                     there are 2 words per column
C                     the 1st word is a code depending of the column
C                     type:
C                     CHA4=1,'G'and 'F'nocompress=2,'F'compress=3
C                     'I'=4
C                     the 2nd word is a multiplication factor:
C                      = 10**number of digits for code 3 ('F'compress)
C                      = 0. otherwise
C
                      INDEXW(IB)=0
                      CALL WBANK(IW,INDEXW(IB),2*NCOL,*11)
                      IW(INDEXW(IB)-3)=INTCHA(BNAME)
                      IC=0
                      DO 120 ICR=1,NCRO
                          LC =ITABL(JCPRO,IRCOL+ICR,JCPRNI)
                          FMT(1:4)=CHAINT(ITABL(JCPRO,IRCOL+ICR,JCPRFO))
                          IF (FMT(1:1).EQ.'A') THEN
                              DO 121 IFL=1,LC
                                 IC = IC+1
                                 IW(INDEXW(IB)+2*IC-1)=1
                                 RW(INDEXW(IB)+2*IC)=0.0
  121                         CONTINUE
                          ELSE IF (FMT(1:1).EQ.'F'.OR.FMT(1:1).EQ.'G'.
     &                      OR.FMT(1:1).EQ.'E') THEN
                        FMT(5:8)=CHAINT(ITABL(JCPRO,IRCOL+ICR,JCPRFO+1))
                              IF ((FMT(1:1).NE.'F').OR.(NOFLO)) THEN
                                  DO 122 IFL=1,LC
                                     IC = IC+1
                                     IW(INDEXW(IB)+2*IC-1)=2
                                     RW(INDEXW(IB)+2*IC)=0.0
  122                             CONTINUE
                              ELSE
                                  IPOINT=INDEX(FMT,'.')
                                  IF (IPOINT.LE.0) THEN
                                      IDIG=0
                                  ELSE
                                      IF (CMPTOI(FMT(IPOINT+1:8),IDIG))
     +                                    IDIG=0
                                  END IF
                                  DO 123 IFL=1,LC
                                     IC= IC+1
                                     IW(INDEXW(IB)+2*IC-1)=3
                                     RW(INDEXW(IB)+2*IC)=10.0**IDIG
  123                             CONTINUE
                              END IF
                          ELSE
                              DO 124 IFL=1,LC
                                 IC = IC+1
                                 IW(INDEXW(IB)+2*IC-1)=4
                                 RW(INDEXW(IB)+2*IC)=0.0
  124                         CONTINUE
                          END IF
  120                 CONTINUE
                      IB=IB+1
                      IF (IB.GT.MAXBNK) GOTO 13
                  END IF
              END IF
          END IF
          IRCOL = IRCOL+NCRO
      IF (IRCOL.LT.NRCOL) GO TO 10
      NUMBNK=IB-1
 1000 IF (LOADC) JCPRO=NDROP('CPRO',0)
      CALL WDROP (IW,JNONE)
      RETURN
C
C     creation of work bank failed, don't read any more banks,
C     set error code
   11 NUMBNK=IB-1
      IER=NUMBNK
      GO TO 1000
C
C     CPRO  doesn't exist in DAF - no compression
   12 CONTINUE
      NUMBNK=0
      IER=-1
      GO TO 1000
C
C     MAXBNK number exeeded
   13 NUMBNK=MAXBNK
      IER=NUMBNK
      GO TO 1000
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK cmpin2
@


1.1.1.1
log
@import alephio 4
@
text
@@
