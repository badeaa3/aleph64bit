head	1.1;
branch	1.1.1;
access;
symbols
	gal309_3:1.1.1.1
	gal309_2:1.1.1.1
	gal309_1:1.1.1.1
	gal309:1.1.1.1
	gal308_2:1.1.1.1
	gal308_1:1.1.1.1
	gal308:1.1.1.1
	gal307_2:1.1.1.1
	gal307_1:1.1.1.1
	gal307:1.1.1.1
	gal306_3:1.1.1.1
	gal306_2:1.1.1.1
	gal306_1:1.1.1.1
	gal306:1.1.1.1
	gal305_3:1.1.1.1
	gal305_2:1.1.1.1
	gal305_1:1.1.1.1
	gal305:1.1.1.1
	gal304_11:1.1.1.1
	gal304_10:1.1.1.1
	gal304_9:1.1.1.1
	gal304_8:1.1.1.1
	gal304_7:1.1.1.1
	gal304_6:1.1.1.1
	gal304_5:1.1.1.1
	gal304_4:1.1.1.1
	gal304_3:1.1.1.1
	gal304_2:1.1.1.1
	gal304_1:1.1.1.1
	gal304:1.1.1.1
	gal303_3:1.1.1.1
	gal303_2:1.1.1.1
	gal303_1:1.1.1.1
	v-303:1.1.1.1
	gal302_2:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	94.12.07.14.02.25;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.02.26;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@*DK italig
      SUBROUTINE ITALIG(VECI, VECO)
C.
C...ITALIG  1.01  870714  12:57                          R.Beuselinck
C.
C!  Transform hits to ITC local system (rotated chamber).
C.
C.  Input  VECI(6) /R
C.  Output VECO(6) /R
C.
C.  The elements of VECI,VECO are a position vector (x,y,z) plus
C.  a set of direction cosines (dx/x,dy/y,dz/z).
C.
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
#include "itrotc.h"
      REAL VECI(6),VECO(6)
C
      IF (ITSHFT) THEN
        DO 10 I=1,3
          VECO(I) = ROTITC(1,I)*VECI(1) +
     +              ROTITC(2,I)*VECI(2) +
     +              ROTITC(3,I)*VECI(3) - DXYZIT(I)
          VECO(I+3) = ROTITC(1,I)*VECI(4) +
     +                ROTITC(2,I)*VECI(5) +
     +                ROTITC(3,I)*VECI(6)
   10   CONTINUE
      ELSE
        DO 20 I=1,6
          VECO(I) = VECI(I)
   20   CONTINUE
      ENDIF
      END
#endif
@


1.1.1.1
log
@import galeph 300
@
text
@@
