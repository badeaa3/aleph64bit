head	1.1;
branch	1.1.1;
access;
symbols
	gal309_3:1.1.1.1
	gal309_2:1.1.1.1
	gal309_1:1.1.1.1
	gal309:1.1.1.1
	gal308_2:1.1.1.1
	gal308_1:1.1.1.1
	gal308:1.1.1.1
	gal307_2:1.1.1.1
	gal307_1:1.1.1.1
	gal307:1.1.1.1
	gal306_3:1.1.1.1
	gal306_2:1.1.1.1
	gal306_1:1.1.1.1
	gal306:1.1.1.1
	gal305_3:1.1.1.1
	gal305_2:1.1.1.1
	gal305_1:1.1.1.1
	gal305:1.1.1.1
	gal304_11:1.1.1.1
	gal304_10:1.1.1.1
	gal304_9:1.1.1.1
	gal304_8:1.1.1.1
	gal304_7:1.1.1.1
	gal304_6:1.1.1.1
	gal304_5:1.1.1.1
	gal304_4:1.1.1.1
	gal304_3:1.1.1.1
	gal304_2:1.1.1.1
	gal304_1:1.1.1.1
	gal304:1.1.1.1
	gal303_3:1.1.1.1
	gal303_2:1.1.1.1
	gal303_1:1.1.1.1
	v-303:1.1.1.1
	gal302_2:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	94.12.07.14.02.24;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.02.25;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@*DK iaprox
      SUBROUTINE IAPROX(XWI, YWI, VA, VB, VP)
C.
C...IAPROX  1.00  900426  14:54                        R.Beuselinck.
C.
C!  Find closest point to wire on track element.
C.
C.  Arguments:
C.  XWI [S,I,REAL] : X coordinate of wire.
C.  YWI [S,I,REAL] : Y coordinate of wire.
C.  VA  [V,I,REAL] : Start point on track element.
C.  VB  [V,I,REAL] : End point on track element.
C.  VP  [V,O,REAL] : Point closest to sense wire on track element.
C.
C?  The closest point to (XWI,YWI) on the line segment AB is found.
C?  This is normally the perpendicular distance to the line unless that
C?  point falls outside the limits of the given start and end points.
C?  In that case the closest of VA, VB is returned.
C.
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
      REAL XWI, YWI, VA(*), VB(*), VP(*)
      REAL ASQ, BSQ, CSQ, CFACT
C
      ASQ = (VB(1)-XWI)**2 + (VB(2)-YWI)**2
      BSQ = (VA(1)-XWI)**2 + (VA(2)-YWI)**2
      CSQ = (VB(1)-VA(1))**2 + (VB(2)-VA(2))**2
C
C--  Check whether perpendicular lies within AB.
C--
      IF (ABS(ASQ-BSQ).GT.CSQ) THEN
        IF (ASQ.LT.BSQ) THEN
          VP(1) = VB(1)
          VP(2) = VB(2)
          VP(3) = VB(3)
        ELSE
          VP(1) = VA(1)
          VP(2) = VA(2)
          VP(3) = VA(3)
        ENDIF
      ELSE
C
C--  Find the perpendicular from (XWI,YWI) to AB
C--
        CFACT = (BSQ+CSQ-ASQ)/(2.*CSQ)
        VP(1) = VA(1) + CFACT*(VB(1)-VA(1))
        VP(2) = VA(2) + CFACT*(VB(2)-VA(2))
        VP(3) = VA(3) + CFACT*(VB(3)-VA(3))
      ENDIF
      END
#endif
@


1.1.1.1
log
@import galeph 300
@
text
@@
