head	1.2;
access;
symbols
	gal309_3:1.2
	gal309_2:1.2
	gal309_1:1.2
	gal309:1.2
	gal308_2:1.2
	gal308_1:1.2
	gal308:1.2
	gal307_2:1.2
	gal307_1:1.2
	gal307:1.2
	gal306_3:1.2
	gal306_2:1.2
	gal306_1:1.2
	gal306:1.2
	gal305_3:1.2
	gal305_2:1.2
	gal305_1:1.2
	gal305:1.2
	gal304_11:1.2
	gal304_10:1.2
	gal304_9:1.2
	gal304_8:1.2
	gal304_7:1.2
	gal304_6:1.2
	gal304_5:1.2
	gal304_4:1.2
	gal304_3:1.2
	gal304_2:1.2
	gal304_1:1.2
	gal304:1.2
	gal303_3:1.2
	gal303_2:1.2
	gal303_1:1.2
	v-303:1.2
	gal302_2:1.2
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	95.06.30.07.08.58;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.02.37;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.02.38;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@release galeph 302
 Modified files:
 gadoc.doc itdoc.doc
 adinit.F adrz.F adview.F adxy.F gaxeph.F
 ecasig.F ecbook.F ecdigi.F echit.F ecirun.F ecista.F ecnami.F
 ectrig.F ecwsum.F edfilh.F edinip.F edtadj.F edtain.F edtcor.F
 edtcut.F edtdig.F edtono.F edtrgi.F edtzsu.F edwbru.F edwdgt.F
 ehbari.F ehcutg.F eprimi.F
 galeph.F qnext.F
 agbeam.F agchck.F agcoil.F agecal.F agecpm.F ageome.F aggean.F
 aghcal.F agitch.F aglcal.F agmate.F agmedi.F agmuch.F agquad.F
 agscal.F agsmba.F agtpch.F
 gstmed.F guhadr.F guphad.F gustep.F gutrak.F
 cahtra.h gmacro.h lccomc.h lcnamc.h ljjpar.h siconst.h
 sigeco.h version.h
 itmsk1.F itmsk2.F itnois.F itres.F itxtlk.F
 lcadc.F lcamp.F lcasig.F lcbhab.F lcbkpr.F lcdigi.F lcfral.F
 lchit.F lcirun.F lcnami.F lcnois.F lcpad.F lcroc.F lcsamp.F
 lcsatu.F lcshow.F lcstrt.F lctrak.F lctrdi.F lctrht.F lcwire.F
 lcwsum.F lcwtri.F
 Removed Files:
 guinti.F
 aggatt.F aggord.F
 xtrcom.h
@
text
@*DK lctrak
      SUBROUTINE LCTRAK
C--------------------------------------------------------------
C! Control m.i.p. tracking in LCal
C. - J.Dines Hansen & P.Hansen - 860417
C.                               modified by F.Ranjard - 890317
C. - Called by  LCHIT                            from this .HLB
C. - Calls      LCSTRT, LCFRAL, LCXYPA, CAHIST   from this .HLB
C.              POISSN,VSUB                      from   CERNLIB
C -----------------------------------------------
#ifndef DOC
      SAVE
      DIMENSION XOUT(3),DXIN(3),PATH(3)
      DIMENSION XYZ(3),DXYZ(3)
#include "jqcom.h"
#include "iocom.h"
#include "lccomc.h"
#include "lcnamc.h"
#include "trkcom.h"
C -------------------------------------------------------------
C - Make sure a GEANT step has been taken inside volume
      IF (ITRKEL(8) .EQ. 1)                GOTO 999
C
C - Transform trackelement into local system
      CALL LCFRAL(IFB,MODU,XYZ,XOUT,DXIN)
C
C - Find storey and layer no. where track starts
      CALL LCSTRT(ABS(XYZ(3)),ISTMN,LAYER,LMIN,ZWIRE)
C
C - Path-length must be more than one layer
      IF (ABS(XYZ(3)-XOUT(3)).LT.ZSTPLC(ISTMN)) GOTO 999
C
C - Add the track energy to run summary bank
      KWS  = IW(NALCWS)
      IF(KWS.NE.0.AND.ISTMN.EQ.1.AND.LMIN.EQ.1) THEN
         IW(KWS+LMHLEN+4+IFB) = IW(KWS+LMHLEN+4+IFB)
     &      +INT(TRKELE(8)*1000.)
      ENDIF
C
C - Find average no. of hits pr layer
      IF (TRKELE(7).LT.1.E-6 .OR. TRKELE(13).LT.1.E-6) RETURN
      EP     = TRKELE(8)/TRKELE(7)
      GABE = TRKELE(7) / TRKELE(13)
      CALL EBETHE (EP,GABE,EP1)
      EP1=AMIN1(EP1,3.3)
      AHIT     = EELALC*EP1*EP1*16.
C
C - Assuming linear motion
C - Initial direction
      DXYZ(1) = DXIN(1)
      DXYZ(2) = DXIN(2)
      DXYZ(3) = DXIN(3)
C
C - Loop over layers
      DO 200 ISTOR = ISTMN,3
       LMAX    = LCNLAY(ISTOR)
       ZSTEP   = ZSTPLC(ISTOR)
       DO 300 LAY = LMIN,LMAX
C
C - Generate NHIT hits in this plane
        CFACT  = AMAX1(ABS(DXIN(3)),0.5)
        AVHIT  = AHIT/CFACT
        CALL POISSN(AVHIT,NHIT,IER)
        IF (IER .NE. 0)                                 GOTO 998
        IF (NHIT .LE. 0)                                GOTO 310
C
C - Deposit them on the relevant tower and plane
        CALL LCXYPA(MODU,LAYER,XYZ,IPAD)
        IF (IPAD .LE. 0)                                GOTO 310
        CALL CAHIST (NALSHI,IPAD,ISTOR,NHIT)
        CALL CAHIST (NALWHI,MODU,LAYER,NHIT)
C
C - Go to the next plane
  310   STEPL = ZSTEP/ABS(DXYZ(3))
        DO 320 I = 1,3
  320   XYZ(I) = XYZ(I) + STEPL*DXYZ(I)
        IF ( ABS(XYZ(3)).GT.ABS(XOUT(3))) GOTO 999
  300  LAYER = LAYER + 1
C
C - Go to the next storey
       LMIN = 1
  200 CONTINUE
      GOTO 999
  998 WRITE(LOUTIO,9999) IER
  999 RETURN
C
 9999 FORMAT(' +++ LCTRAK +++ error in call to POISSN',I10)
C
      END
#endif
@


1.1
log
@Initial revision
@
text
@d10 1
d15 1
d33 7
d45 2
a46 13
      AHIT     = EELALC*EP1*EP1
C
C - Find direction changes per unit length
C - assuming circular motion in both phi and theta planes
      CALL VSUB(XOUT(1),XYZ(1),PATH(1),3)
      PHIP = ATAN2(PATH(2),PATH(1))
      COSP = PATH(3) / SQRT (PATH(1)**2+PATH(2)**2+PATH(3)**2)
      THEP = ACOS(COSP)
      DZOZI= ABS(PATH(3))
      PHI  = ATAN2(DXIN(2),DXIN(1))
      THE  = ACOS(DXIN(3))
      DPHDZ= 2.*(PHIP-PHI)/DZOZI
      DTHDZ= 2.*(THEP-THE)/DZOZI
d48 1
d61 1
a61 2
        CFACT  = ABS(COS(THE))
        CFACT  = AMAX1(CFACT,0.5)
d77 1
a77 7
        IF ( (XYZ(3)-XOUT(3))*SIGN(1.,PATH(3)) .GT. 0. ) GOTO 999
        THE    = THE + DTHDZ*ZSTEP
        PHI    = PHI + DPHDZ*ZSTEP
        SINTH  = SIN(THE)
        DXYZ(1) = COS(PHI)*SINTH
        DXYZ(2) = SIN(PHI)*SINTH
        DXYZ(3) = COS(THE)
@


1.1.1.1
log
@import galeph 300
@
text
@@
