head	1.8;
access;
symbols
	gal309_3:1.8
	gal309_2:1.8
	gal309_1:1.8
	gal309:1.8
	gal308_2:1.8
	gal308_1:1.8
	gal308:1.8
	gal307_2:1.8
	gal307_1:1.8
	gal307:1.8
	gal306_3:1.8
	gal306_2:1.8
	gal306_1:1.8
	gal306:1.8
	gal305_3:1.8
	gal305_2:1.8
	gal305_1:1.8
	gal305:1.8
	gal304_11:1.6
	gal304_10:1.6
	gal304_9:1.6
	gal304_8:1.6
	gal304_7:1.6
	gal304_6:1.6
	gal304_5:1.5
	gal304_4:1.5
	gal304_3:1.4
	gal304_2:1.2
	gal304_1:1.2
	gal304:1.2
	gal303_3:1.2
	gal303_2:1.2
	gal303_1:1.2
	v-303:1.2
	gal302_2:1.2
	flr:1.1.1;
locks; strict;
comment	@c @;


1.8
date	97.03.21.16.30.56;	author flr;	state Exp;
branches;
next	1.7;

1.7
date	97.03.20.08.08.44;	author flr;	state Exp;
branches;
next	1.6;

1.6
date	96.05.31.17.11.41;	author flr;	state Exp;
branches;
next	1.5;

1.5
date	96.05.28.15.44.31;	author flr;	state Exp;
branches;
next	1.4;

1.4
date	96.05.23.14.38.18;	author flr;	state Exp;
branches;
next	1.3;

1.3
date	96.05.23.12.38.02;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.06.30.07.08.55;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.02.36;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.02.37;	author flr;	state Exp;
branches;
next	;


desc
@@


1.8
log
@gal305.0 :cosmetic update to lcshow and lschit
@
text
@      SUBROUTINE LCSHOW
C--------------------------------------------------------------
C! Shower parametrisation in LCal
C. - J.Dines Hansen & P.Hansen - 860417
C.                               modified by F.Ranjard - 890317
C.                               modified by P.Hansen -  940701
C. - Sets GEANT stop flag
C.   ********************New for 94*****************************
C. - Use longitudinal parametrization:
C.     dN/dS   = (ETOT/ECRTLC)*B*(B*S)**(A-1)*exp(-B*S)/gamma(A)
C. - The P-terms are from fit to Lcal data,
C. - the DP-terms from Ecal test beam fit:
C.      A/B    = PAR1LC + DPR1LC*alog(E)
C.      1/B    = PAR2LC + DPR2LC*alog(E)    for E>0.1GeV
C.      A/B    = PAR3LC + DPR3LC*alog(E)
C.      1/B    = PAR4LC + DPR4LC*alog(E)    for E<0.1GeV
C. - Use lateral parametrization:           R in cm
C.     d(dN/dS)/dR = (dN/dS)*exp(-R/R0)/R0
C.         R0      = PAR5LC + DPR5LC*S*B/A
C. - PAR1LC is fluctuated by the relative amount PAR6LC
C. - PAR2LC is fluctuated by the relative amount PAR8LC
C. - However, these fluctuations are limited to 4sigma
C.   to avoid division by zero and gamma(zero). (PH 970320)
C. - R0     is fluctuated by the relative amount PAR7LC
C.***********************New for 96*****************************
C.                               modified my.M.N.Minard - 960527
C.   introduce geantino parametrisation.
C.
C. - Called by  LCHIT                            from this .HLB
C. - Calls      LCSTRT, LCFRAL, LCXYPA, CAHIST   from this .HLB
C.              RNDM                             from   CERNLIB
C.              POISSN                           from    GENSEC
C -----------------------------------------------
#ifndef DOC
      SAVE
      DIMENSION XIN(3),DXIN(3),XOUT(3)
      DIMENSION XYZ(3),XYAV(3)
      EXTERNAL RNDM
C
      PARAMETER (PFLUC=4.,PLOWE=0.1,PLOWX=0.001,PPOIS=16.)
C!    PFLUC = Maximum numb of sigma for parameter fluctuations
C!    PLOWE = Energy separating low and high E parametrization
C!    PLOWX = Minimum radiation length for geantino tracking
C!    PPOIS = Center of Poisson dist for smearing of Ecrit
C
#include "alcons.h"
#include "iocom.h"
#include "bcs.h"
#include "lccomc.h"
#include "lcnamc.h"
#include "capajj.h"
#include "capano.h"
      CHARACTER*4 CHAINT
      CHARACTER*4 EXNAME
#include "tmacrod.h"
#include "bmacro.h"
C -------------------------------------------------------------
C
      ETOT = TRKELE(8)
C
C- Very small energies are absorbed before entering the gas
C
      IF ( ETOT.LT.ECRTLC ) THEN
        ITRKEL(9) = NOMOR
        GO TO 999
      ENDIF
C
C
C-   Geantino enters the volume or is created in the volume
C    Deposit shower only at the first call
C    Define ISTYP = 0 (already tracked in Lcal)
C                 = 1 (Geantino parameter to be set & Lcal tracking)
C                 = 2 (Geantino from other calorimeter do Lcal tracking)
      ISTYP = -1
      JCAPA = NLINK('CAPA',ITRKEL(1))
      IF (JCAPA.EQ.0) THEN
         CALL ALTELL ('LCSHOW: no CAPA bank - STOP',9,'FATAL')
      ELSE
         ISTYP = 0
         KCAPA = JCAPA +LMHLEN
         EXNAME = CHAINT(IW(KCAPA+JCAPNA))
         TINOX0 = RW (KCAPA+JCAPTX)
         IF (EXNAME.NE.'LCAL') ISTYP =1
         IF (TINOX0.GT.PLOWX.AND.ISTYP.EQ.1) ISTYP =2
      ENDIF
C
C - Geantino already tracked
      IF (ISTYP.LE.0) GO TO 999
C
      EMNAME = 'LCAL'
      IF (ISTYP.EQ.1) THEN
C
C - Geantino is created in LCAL
C    Compute longidutinal shower parameters
        IF(ETOT.GT.PLOWE) THEN
          E1  = PAR1LC + DPR1LC*ALOG(ETOT)
          E2  = PAR2LC + DPR2LC*ALOG(ETOT)
        ELSE
          E1  = PAR3LC + DPR3LC*ALOG(ETOT)
          E2  = PAR4LC + DPR4LC*ALOG(ETOT)
        ENDIF
C    fluctuate A/B and 1/B
        CALL RANNOR(RN1,RN2)
        RN1 = AMIN1(RN1,PFLUC)
        RN1 = AMAX1(RN1,-PFLUC)
        E1 = E1*(1.+PAR6LC*RN1)
C
        CALL RANNOR(RN3,RN4)
        RN3 = AMIN1(RN3,PFLUC)
        RN3 = AMAX1(RN3,-PFLUC)
        E2 = E2*(1.+PAR8LC*RN3)
C
        A  = E1/E2
        B  = 1./E2
        EMALFA = A
        EMBETA = B
        EMALM1 = A-1.
        S0 = 0.
      ELSE
C
C - Geantino from other calorimeter
        S0 = TINOX0
        A  = EMALFA
        B  = EMBETA
      ENDIF
C
      CALL CAPSTO(ITRKEL(1))
C
C - Transform trackelement into local system
      CALL LCFRAL(IFB,MODU,XIN,XOUT,DXIN)
C - Add the track energy to run summary bank
      KWS  = IW(NALCWS)
      IF(KWS.NE.0) THEN
         IW(KWS+LMHLEN+4+IFB) = IW(KWS+LMHLEN+4+IFB)+INT(ETOT*1000.)
      ENDIF
C
C - Find storey and layer no. where shower starts
      IF(MODU.LE.2) THEN
        ZABS = -XIN(3)
      ELSE
        ZABS = XIN(3)
      ENDIF
      CALL LCSTRT(ZABS,ISTMN,LAYER,LMIN,ZWIRE)
C
C - Move starting point to preceeding wire-plane
      LAYER = LAYER - 1
      DL = (ZWIRE-ZABS)/ABS(DXIN(3))
      XIN(1) = XIN(1)+DXIN(1)*DL
      XIN(2) = XIN(2)+DXIN(2)*DL
      XIN(3) = XIN(3)+DXIN(3)*DL
C
C - Compute normalization
      ZFIR = AMAX1(ZABS,0.)-
     &       FLOAT(INT(AMAX1(ZABS,0.)/ZSTPLC(1)))*ZSTPLC(1)
      SNORM = SSTPLC(2)*ETOT*(B**A)/(ECRTLC*GAMMA(A))
      DL    = 0.
      S     = -ZFIR*SSTPLC(1)/ZSTPLC(1) + S0
      KLDWP = IW(NAMIND('LDWP'))
      KLDST = IW(NAMIND('LDST'))
C
C - Step through storeyes
      DO 300 ISTOR = ISTMN,3
         LMAX  = LCNLAY(ISTOR)
         SSTEP = SSTPLC(ISTOR)
         STEPL = ZSTPLC(ISTOR)/ABS(DXIN(3))
C
C - Step through layers
       DO 400 LAY = LMIN,LMAX
         LAYER = LAYER + 1
         S     = S  + SSTEP
         DL    = DL + STEPL
C - Number of hits in the layer
         AVHIT = SNORM*S**(A-1.)*EXP(-B*S)
         IF (AVHIT.GT.0.) THEN
            CALL POISSN(AVHIT,NHIT,IER)
         ELSE
           WRITE (LOUTIO,*)' LCSHOW: AVHIT=<0.,B,S ',AVHIT,B,S
           GOTO 999
         ENDIF
         IF (NHIT.EQ. 0)                         GOTO 400
         NWHIT = 0
C - Coordinates of shower centroid
         XYAV(1) = XIN(1) + DL*DXIN(1)
         XYAV(2) = XIN(2) + DL*DXIN(2)
         XYAV(3) = XIN(3) + DL*DXIN(3)
C - Compute radial parameter
         R0    = PAR5LC + DPR5LC*S*B/A
C - Same fluctuation in all planes
         R0    = R0*(1.+RN2*PAR7LC)
C - Loop over hits
         DO 500 IHIT = 1,NHIT
C - Choose x,y coordinates of hit
            R    = -R0*ALOG(RNDM(DUMMY))
            PHI  = RNDM(DUMMY)*TWOPI
            XYZ(1) = XYAV(1) + R*COS(PHI)
            XYZ(2) = XYAV(2) + R*SIN(PHI)
            XYZ(3) = XYAV(3)
C - Find tower address of hit
            CALL LCXYPA(MODU,LAYER,XYZ,IPAD)
C - If inside the acceptance
            IF(IPAD.EQ.0)                        GOTO 500
C - Update number of hits in this plane (if alive)
            IFALI = 1
            IF(KLDWP.GT.0) THEN
              DO 510 I=1,LROWS(KLDWP)
                IF(ITABL(KLDWP,I,4).EQ.(MODU-1)*64+LAYER) THEN
                  IFALI = 0
                  GOTO 500
                ENDIF
  510         CONTINUE
            ENDIF
            CALL POISSN(PPOIS,N16,IER)
            NWHIT = NWHIT + N16
            CALL CAHIST(NALSHI,IPAD,ISTOR,N16)
  500    CONTINUE
C - Add the hits to the wire-plane history bank
         IF (NWHIT .GT. 0) CALL CAHIST(NALWHI,MODU,LAYER,NWHIT)
  400 CONTINUE
      LMIN = 1
  300 CONTINUE
C
C - end
  999 RETURN
      END
#endif
@


1.7
log
@release galeph 305
@
text
@d22 2
d39 7
d84 1
a84 1
         IF (TINOX0.GT.0.001.AND.ISTYP.EQ.1) ISTYP =2
d95 1
a95 1
        IF(ETOT.GT.0.1) THEN
d99 2
a100 3
          EN  = AMAX1(ETOT,0.03)
          E1  = PAR3LC + DPR3LC*ALOG(EN)
          E2  = PAR4LC + DPR4LC*ALOG(EN)
d104 3
a107 8
C*1997 begin Fluctuation limits
        IF (PAR6LC*RN1.GT.0.80) THEN
           E1 = E1*1.5
        ELSEIF (PAR6LC*RN1.LT.-0.70) THEN
           E1 = E1*0.5
        ELSE
           E1 = E1*(1.+PAR6LC*RN1)
        ENDIF
d109 3
a111 8
        IF (PAR8LC*RN3.GT.0.80) THEN
           E2 = E2*1.5
        ELSEIF (PAR8LC*RN3.LT.-0.70) THEN
           E2 = E2*0.5
        ELSE
           E2 = E2*(1.+PAR8LC*RN3)
        ENDIF
C*1997 end Fluctuation limits
d212 1
a212 1
            CALL POISSN(16.,N16,IER)
@


1.6
log
@lcshow introduced in 304.3 was not correct
@
text
@d96 9
a104 1
        IF(ABS(RN1).LT.4.) E1 = E1*(1.+PAR6LC*RN1)
d106 9
a114 1
        IF(ABS(RN3).LT.4.) E2 = E2*(1.+PAR8LC*RN3)
@


1.5
log
@many corrections for gal303 were missing
@
text
@d25 1
a25 1
C.   introduce geantino parametrisation.             
a58 2
C - IF 1st entry (GSTEP=0.) in a volume RETURN
      IF (ITRKEL(8) .EQ. 1) GOTO 999 
d65 1
d68 1
a68 1
         CALL ALTELL ('LCSHOW: no CAPA bank - STOP',9,'FATAL') 
d79 1
a79 1
      IF (ISTYP.EQ.0) GO TO 999
d143 1
a143 1
      S     = -ZFIR*SSTPLC(1)/ZSTPLC(1) + S0 
@


1.4
log
@galeph 304_3: add a missing #endif in lcshow
@
text
@d12 1
a12 1
C. -  the DP-terms from Ecal test beam fit:
d23 3
a25 1
C.**************************************************************
a43 3
#include "gcmate.h"
#include "gckine.h"
#include "gctrak.h"
d51 2
a52 2
C-
C     Very small energies are absorbed before entering the gas
d59 4
a62 1
C-   Electron enters the volume or is created in the volume
d67 10
a76 12
C                 =-1 ( Capa bank missing )
      ISTYP =-1
      IF(ITRKEL(8).NE.1) THEN
        JCAPA = NLINK('CAPA',IGTRA)
        IF (JCAPA.GT.0) THEN
          ISTYP = 0
          KCAPA = JCAPA +LMHLEN
          EXNAME = CHAINT(IW(KCAPA+JCAPNA))
          TINOX0 = RW (KCAPA+JCAPTX)
          IF (EXNAME.NE.'LCAL') ISTYP =1
          IF (TINOX0.GT.0.001.AND.ISTYP.EQ.1) ISTYP =2
        ENDIF
d78 2
a80 1
      IF ( ISTYP.LT.0) GO TO 997
d82 1
a82 2
C - Compute longidutinal shower parameters
C   When geantino is creaTED IN LCAL
d84 3
d95 1
a95 2
c
c fluctuate A/B and 1/B
d105 10
a114 5
       ENDIF
       EMNAME = 'LCAL'
       S0 = 0.
       IF ( ISTYP.EQ.2) S0 = TINOX0
       CALL CAPSTO(IGTRA)
d144 1
a144 1
      S     = -ZFIR*SSTPLC(1)/ZSTPLC(1)
d157 1
a157 1
         S     = S  + SSTEP +S0
d161 6
a166 2
         CALL POISSN(AVHIT,NHIT,IER)
         IF (IER .NE. 0)                         GOTO 998
d208 2
a209 2
      GOTO 999
  998 WRITE(LOUTIO,9999) IER
a210 4
 9999 FORMAT(' +++ LCSHOW +++ error in call to POISSN',I10)
  997 WRITE(LOUTIO,9998)
      RETURN
 9998 FORMAT(' +++ LCSHOW +++ no CAPA bank created  '  )
d212 1
a212 1
#endif@


1.3
log
@extend geantino parametrisation to lcal
@
text
@d205 1
@


1.2
log
@release galeph 302
 Modified files:
 gadoc.doc itdoc.doc
 adinit.F adrz.F adview.F adxy.F gaxeph.F
 ecasig.F ecbook.F ecdigi.F echit.F ecirun.F ecista.F ecnami.F
 ectrig.F ecwsum.F edfilh.F edinip.F edtadj.F edtain.F edtcor.F
 edtcut.F edtdig.F edtono.F edtrgi.F edtzsu.F edwbru.F edwdgt.F
 ehbari.F ehcutg.F eprimi.F
 galeph.F qnext.F
 agbeam.F agchck.F agcoil.F agecal.F agecpm.F ageome.F aggean.F
 aghcal.F agitch.F aglcal.F agmate.F agmedi.F agmuch.F agquad.F
 agscal.F agsmba.F agtpch.F
 gstmed.F guhadr.F guphad.F gustep.F gutrak.F
 cahtra.h gmacro.h lccomc.h lcnamc.h ljjpar.h siconst.h
 sigeco.h version.h
 itmsk1.F itmsk2.F itnois.F itres.F itxtlk.F
 lcadc.F lcamp.F lcasig.F lcbhab.F lcbkpr.F lcdigi.F lcfral.F
 lchit.F lcirun.F lcnami.F lcnois.F lcpad.F lcroc.F lcsamp.F
 lcsatu.F lcshow.F lcstrt.F lctrak.F lctrdi.F lctrht.F lcwire.F
 lcwsum.F lcwtri.F
 Removed Files:
 guinti.F
 aggatt.F aggord.F
 xtrcom.h
@
text
@a0 1
*DK lcshow
d40 7
a49 2
C - Stop GEANT tracking for electron/positron
      ITRKEL(9)=NOMOR
d51 3
a53 2
C - Electron enters the volume or is created in the volume
      IF (ITRKEL(8).NE.1)                        GOTO 999
d55 4
a58 2
C - Transform trackelement into local system
      CALL LCFRAL(IFB,MODU,XIN,XOUT,DXIN)
d60 20
a79 2
C - Total energy of track element
      ETOT = TRKELE(8)
d81 27
a107 2
C - Very small energies are absorbed before entering the gas
      IF(ETOT.LT.ECRTLC)                         GOTO 999
d109 2
a131 18
C - Compute longidutinal shower parameters
      IF(ETOT.GT.0.1) THEN
        E1  = PAR1LC + DPR1LC*ALOG(ETOT)
        E2  = PAR2LC + DPR2LC*ALOG(ETOT)
      ELSE
        EN  = AMAX1(ETOT,0.03)
        E1  = PAR3LC + DPR3LC*ALOG(EN)
        E2  = PAR4LC + DPR4LC*ALOG(EN)
      ENDIF
c
c fluctuate A/B and 1/B
      CALL RANNOR(RN1,RN2)
      IF(ABS(RN1).LT.4.) E1 = E1*(1.+PAR6LC*RN1)
      CALL RANNOR(RN3,RN4)
      IF(ABS(RN3).LT.4.) E2 = E2*(1.+PAR8LC*RN3)
      A  = E1/E2
      B  = 1./E2
C
d150 1
a150 1
         S     = S  + SSTEP
d201 3
a204 1
#endif
@


1.1
log
@Initial revision
@
text
@d7 1
d9 17
a25 8
C. - Uses parametrization:                     S in rad.lengths
C.   longitudinal development:
C.     dN/dS   = (ETOT/ECRTLC)*E2*(E2*S)**E1*EXP(-E2*S)/GAMMA(E1+1)
C.     E1      = PAR1LC + DPR1LC*ALOG(ETOT)
C.     E2      = PAR2LC + DPR2LC*ALOG(ETOT)
C.   lateral development:                               R in cm
C.     d(dN/dS)/dR = (dN/dS)*EXP(-R/R0)/R0
C.     R0      = PAR3LC + DPR3LC*S*E2/E1
d30 1
d57 1
a57 1
      IF(ETOT.LT.ECUTLC)                         GOTO 999
d66 5
a70 1
      ZABS = ABS(XIN(3))
a71 1

d80 17
a96 3
C - Compute shower parameters
      E1  = PAR1LC + DPR1LC*ALOG(AMAX1(ETOT,0.1))
      E2  = PAR2LC + DPR2LC*ALOG(AMAX1(ETOT,0.1))
d99 3
a101 1
      SNORM = SSTPLC(2)*ETOT*E2**(E1+1.)/(ECRTLC*GAMMA(E1+1.))
d103 1
a103 1
      S     = 0.
d119 1
a119 1
         AVHIT = SNORM*S**E1*EXP(-E2*S)
d129 3
a131 1
         R0    = PAR3LC + DPR3LC*S*E2/E1
d148 4
a151 2
                IF(ITABL(KLDWP,I,4).EQ.(MODU-1)*64+LAYER)
     &          IFALI = 0
d154 3
a156 12
            NWHIT = NWHIT + IFALI
C - Add the hit to tower history bank (if alive)
            IFALI = 1
            IF(KLDST.GT.0) THEN
              DO 520 I=1,LROWS(KLDST)
                IF(ITABL(KLDST,I,4).EQ.IPAD.AND.
     &             ITABL(KLDST,I,5).EQ.ISTOR)
     &             IFALI = 0
  520         CONTINUE
            ENDIF
            IF(IPAD.GT.0.AND.IFALI.NE.0)
     &        CALL CAHIST(NALSHI,IPAD,ISTOR,1)
@


1.1.1.1
log
@import galeph 300
@
text
@@
