head	1.3;
access;
symbols
	gal309_3:1.3
	gal309_2:1.3
	gal309_1:1.3
	gal309:1.3
	gal308_2:1.3
	gal308_1:1.2
	gal308:1.2
	gal307_2:1.2
	gal307_1:1.2
	gal307:1.2
	gal306_3:1.2
	gal306_2:1.2
	gal306_1:1.2
	gal306:1.2
	gal305_3:1.2
	gal305_2:1.2
	gal305_1:1.2
	gal305:1.2
	gal304_11:1.2
	gal304_10:1.2
	gal304_9:1.2
	gal304_8:1.2
	gal304_7:1.2
	gal304_6:1.2
	gal304_5:1.2
	gal304_4:1.2
	gal304_3:1.2
	gal304_2:1.2
	gal304_1:1.2
	gal304:1.2
	gal303_3:1.2
	gal303_2:1.2
	gal303_1:1.2
	v-303:1.2
	gta302:1.1.1.1
	gal302_2:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	99.12.02.10.49.42;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.08.24.09.37.55;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.02.56;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.02.57;	author flr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@gal308_2 correct mistyping error in vdmkte
@
text
@*DK vdmkte
      SUBROUTINE VDMKTE(IVDLH,IVDHT)
C!----------------------------------------------------------------------
C! Make the small track elements for one track hit
CKEY VDET DIGITIZE
C!
C!
C!  Author         A. Bonissent 15-Jan-1994
C!
C!  Description
C!  ===========
C!  Call VDMKLA which will return array of track elements
C!  with their position and energy, Landau fluctuation included
C!
C!  fill the bank
C!
C! Input :  IVDLH  : row number in the VDLH bank which we process     I
C!          IVDHT  : VDHT hit          number                         I
C! Input :  VDLH bank
C!
C! Output : VDTE bank
C!
C-----------------------------------------------------------------------
#ifndef DOC
C
      DIMENSION XIN(3),XOUT(3),PRJ(3),TMP(3)
      PARAMETER(NDIM=50)
C Vdet dimensions
      PARAMETER (RVDMIN=6.5, RVDMAX=11.2, ZVDMAX=20.)
C size of one track element (subdivision of a track inside silicon wafer
      PARAMETER (TRESIZ=0.0010)
C
      DIMENSION XEL(3,NDIM),EEL(NDIM)
#include "vdlhjj.h"
#include "vdtejj.h"
#include "bcs.h"
      DATA NAVDLH, NAVDTE /2*0/
#include "bmacro.h"
      IF (NAVDLH.EQ.0) THEN
        NAVDLH=NAMIND('VDLH')
        NAVDTE=NAMIND('VDTE')
      ENDIF
      KVDLH=IW(NAVDLH)
      IF(KVDLH.LE.0) RETURN
      EREL  = RTABL(KVDLH,IVDLH,JVDLER)
C
C Get IVDHT just to return to caller (VDFIRW) to be passed
C  later to subsequent routines
C
      IVDHT = ITABL(KVDLH,IVDLH,JVDLHT)
C
      DO 11 IDIM=1,3
        XIN(IDIM)=RTABL(KVDLH,IVDLH,JVDLXI-1+IDIM)
        XOUT(IDIM)=RTABL(KVDLH,IVDLH,JVDLXO-1+IDIM)
 11   CONTINUE
      KVDTE=IW(NAVDTE)
      IF(KVDTE.LE.0)THEN
C
C Create bank VDTE (track elements for one hit) with reasonable size
C
        NMAX = 2*VWTHCK()*SQRT(RVDMIN**2+ZVDMAX**2)/(RVDMIN*TRESIZ)
        NDATA = LMHLEN+LVDTEA*NMAX
        CALL ALBOS('VDTE',0,NDATA,KVDTE,IGARB)
        IF(IGARB.EQ.1) KVDLH=IW(NAVDLH)
      ENDIF
      IW(KVDTE+LMHROW)=0
      IW(KVDTE+LMHCOL)=LVDTEA
C
      IF (EREL.GT..0)THEN
C-- the length of the track in silicon
       RLTOT = VDIST(XIN,XOUT,3)
C-- ideal leght of the small track elements
       RLEN = 10.0E-4
C-- PRJ is a vector pointing from xin to xout
       CALL VSUB(XOUT,XIN,PRJ,3)
C-- first element  = r-phi proj,
C-- second ellemet = z proj
C-- which projection is larger, rphi or z?
       RPRJ = MAX(ABS(PRJ(1)),ABS(PRJ(2)))
C-- number of steps, at least 1
       NSTEP = INT(RPRJ/RLEN) + 1
C-- at most NDIM
       NSTEP = MIN(NDIM,NSTEP)
C-- the step size, close to (and smaller than) RLEN, but a variable
       STEP = RLTOT/REAL(NSTEP)
C-- PRJ now is the increment vector
       CALL VSCALE(PRJ,1.0/REAL(NSTEP),PRJ,3)
C--  compute the positions of the track elements
       CALL VSCALE(PRJ,0.5,TMP,3)
       CALL VADD(XIN,TMP,XEL(1,1),3)
       DO 12 K = 2, NSTEP
        CALL VADD(XEL(1,K-1),PRJ,XEL(1,K),3)
 12    CONTINUE
       CALL VFILL(EEL, NSTEP, EREL/REAL(NSTEP))
      ENDIF
C
C Reset VDTE bank
C
      IW(KVDTE+LMHROW)=0
      NMAX = LFRROW(KVDTE)
      IF(NSTEP.GT.NMAX)THEN
        NDATA = LMHLEN+LVDTEA*NSTEP
        CALL ALBOS('VDTE',0,NDATA,KVDTE,IGARB)
        IF (IGARB.EQ.1) KVDLH=IW(NAVDLH)
      ENDIF
      IW(KVDTE+LMHROW)=NSTEP
      DO 13 ITE = 1,NSTEP
C
C Fill the bank
C
        KLINE = KROW(KVDTE,ITE)
        DO 15 IDIM=1,3
          RW(KLINE+JVDTXB-1+IDIM)=XEL(IDIM,ITE)
 15     CONTINUE
        RW(KLINE+JVDTRE)=EEL(ITE)
 13   CONTINUE
      RETURN
      END
#endif
@


1.2
log
@galeph 303/gustep: call vdhite (G.Taylor), add a modified version of geaant/gdray
introduce vdet94
@
text
@d37 1
a37 1
      DATA NAAVDLH, NAVDTE /2*0/
@


1.1
log
@Initial revision
@
text
@a23 1
C
a24 1
      SAVE NAVDLH,NAVDTE
d26 1
a26 1
      DIMENSION XIN(3),XOUT(3)
d30 1
a30 1
C size of one track element (subdivision of a track inside silicon wafer)
d37 1
a37 2
      LOGICAL FIRST
      DATA FIRST /.TRUE./
d39 1
a39 2
      IF(FIRST)THEN
        FIRST=.FALSE.
d44 1
a51 4
C Get Geant track number to be used for Landau fluctuations
C   (need particle type)
C
      ITK = ITABL(KVDLH,IVDLH,JVDLTR)
d57 1
a57 1
      IF(KVDTE.EQ.0)THEN
d64 1
d69 27
a95 1
      CALL VDMKLA(ITK,XIN,XOUT,NDIM,EREL,XEL,EEL,NSTEP)
d104 1
a104 1
        KVDLH=IW(NAVDLH)
a116 1
 999  CONTINUE
@


1.1.1.1
log
@import galeph 300
@
text
@@
