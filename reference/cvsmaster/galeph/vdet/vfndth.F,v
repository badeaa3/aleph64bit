head	1.1;
branch	1.1.1;
access;
symbols
	gal309_3:1.1.1.1
	gal309_2:1.1.1.1
	gal309_1:1.1.1.1
	gal309:1.1.1.1
	gal308_2:1.1.1.1
	gal308_1:1.1.1.1
	gal308:1.1.1.1
	gal307_2:1.1.1.1
	gal307_1:1.1.1.1
	gal307:1.1.1.1
	gal306_3:1.1.1.1
	gal306_2:1.1.1.1
	gal306_1:1.1.1.1
	gal306:1.1.1.1
	gal305_3:1.1.1.1
	gal305_2:1.1.1.1
	gal305_1:1.1.1.1
	gal305:1.1.1.1
	gal304_11:1.1.1.1
	gal304_10:1.1.1.1
	gal304_9:1.1.1.1
	gal304_8:1.1.1.1
	gal304_7:1.1.1.1
	gal304_6:1.1.1.1
	gal304_5:1.1.1.1
	gal304_4:1.1.1.1
	gal304_3:1.1.1.1
	gal304_2:1.1.1.1
	gal304_1:1.1.1.1
	gal304:1.1.1.1
	gal303_3:1.1.1.1
	gal303_2:1.1.1.1
	gal303_1:1.1.1.1
	v-303:1.1.1.1
	gal302_2:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	94.12.07.14.02.59;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.03.00;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@*DK vfndth
      SUBROUTINE VFNDTH(IMOD,THRES)
C----------------------------------------------------------------------
C!  Get clustering thresholds for one module
CKEY VDET DBASE
C!
C!  Author         A. Bonissent 15-Jan-1994
C!
C!  ===========
C! Input : IMOD module number
C! Output : THRES thresholds in 2 views
C-----------------------------------------------------------------------
C
#ifndef DOC
      SAVE VELGV,VDLCO,IVDTH
C
      DIMENSION THRES(*)
      INTEGER GTSTUP
      DIMENSION NBCLN(2),NVDCR(2),VDSLP(2),VDPAL(2),VDELC(2)
      DIMENSION MXCNO(2),MXCSI(2),VELGV(2),VDLCO(2),IOFSET(2),NBITSH(2)
      DIMENSION IVDTH(2)
#include "bcs.h"
#include "vdepjj.h"
      LOGICAL FIRST
      DATA FIRST /.TRUE./
#include "bmacro.h"
      IF(FIRST)THEN
        FIRST=.FALSE.
        CALL VFNDEL
     $     (IMOD,NBCLN,NVDCR,VDSLP,VDPAL,VDELC,
     $      MXCSI,MXCNO,VELGV,VDLCO,IOFSET,NBITSH)
        LDBAS = JUNIDB(0)
        KVDEP = MDARD (IW,LDBAS,'VDEL',0)
        KVDEP=IW(NAMIND('VDEP'))
C         acquisition threshold in counts
        IVDTH(1) = ITABL(KVDEP,1,JVDEST)
        IVDTH(2) = ITABL(KVDEP,1,JVDEST+1)
      ENDIF
      THRES(1) = VELGV(1) * VDLCO(1) * IVDTH(1)
      THRES(2) = VELGV(2) * VDLCO(2) * IVDTH(2)
      RETURN
      END
#endif
@


1.1.1.1
log
@import galeph 300
@
text
@@
