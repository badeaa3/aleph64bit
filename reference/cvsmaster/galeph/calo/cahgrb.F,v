head	1.3;
access;
symbols
	gal309_3:1.3
	gal309_2:1.2
	gal309_1:1.2
	gal309:1.2
	gal308_2:1.2
	gal308_1:1.2
	gal308:1.2
	gal307_2:1.2
	gal307_1:1.2
	gal307:1.2
	gal306_3:1.2
	gal306_2:1.2
	gal306_1:1.2
	gal306:1.2
	gal305_3:1.2
	gal305_2:1.2
	gal305_1:1.2
	gal305:1.2
	gal304_11:1.2
	gal304_10:1.2
	gal304_9:1.2
	gal304_8:1.2
	gal304_7:1.2
	gal304_6:1.2
	gal304_5:1.2
	gal304_4:1.2
	gal304_3:1.2
	gal304_2:1.2
	gal304_1:1.2
	gal304:1.2
	gal303_3:1.2
	gal303_2:1.2
	gal303_1:1.2
	v-303:1.2
	gal302_2:1.2
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	2001.06.20.06.17.17;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.06.29.16.08.38;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.01.58;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.01.59;	author flr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@galeph309_3 - check ADBS version no and last event during production
@
text
@*DK cahgrb
      SUBROUTINE CAHGRB(ENER,IFIN,XGERB,NRJDP)
C
C     Deposition of hadronic energy in ECAL
C     J.Badier  10/03/88
C     ENER  : hadronic energy to be deposited
C     IFIN  : 0  no more points to be generated
C     IFIN  : 1  points have to be generated to deposit
C                energy
C     XGERB : coordinate of generated points
C     NRDJ  : energy deposited by generated point
C     calls to   CASHAD ,POISSN , CAHTRV  ,EHDEPH
C     called from EHSHOW
C======================================================
#ifndef DOC
      SAVE
      DIMENSION XGERB(*)
#include "alcons.h"
#include "iocom.h"
#include "ehpash.h"
#include "gcmate.h"
#include "capano.h"
#include "trkcom.h"
#include "ehcond.h"
      NRJDP = 0
      IF( IFIN .EQ. 0 ) THEN
         IF( ENER .LT. . 001) GO TO 30
         IFIN = 1
C ----- Initialisation
C ----- Angle avec le module.
         CSTE = ABS( TRKELE(6) )
         CSTE = MAX ( . 01, CSTE )
         CSTE = MIN ( .99995, CSTE)
         TGTE = SQRT( 1. / CSTE **  2- 1. )
         IF ( ABS(TRKELE(3)).GT.EZMAX) TGTE =1./TGTE
C ----- Limits for generation.
         DELT = ERHMX*TGTE/GABSL
         SMIN = TINOL0 - DELT * TRKELE(9) - TRKELE(11) / GABSL
         SMAX = TINOL0 + DELT * TRKNXT(9)
C ----- Test medium type
         IF ( EMNAME.EQ.TRKVOL) THEN
           IF ( SMIN.LT.SMAXLA ) SMIN = SMAXLA
           IF ( SMAX.LT.SMAXLA ) SMAX = SMAXLA
         ENDIF
         SMAXLA = SMAX
         EMNAME = TRKVOL
C ----- Integration step.
         DDS = .5 * EDSHAD
         TDS = ETANG * EDSHAD
         ISTP = ( SMAX - SMIN ) / EDSHAD
         ISTP = ISTP + 1
C ----- Number of points per abs. len.
         CNRJ = PARGVH * DDS
C ----- First step initialisation.
         S1 = SMIN - EDSHAD
         S2 = SMIN
         NPT = 0
         INIT = 0
      ELSE
C ----- Points generation.
         IF( NPT .EQ.  0) THEN
   10       CONTINUE
            IF( ISTP .EQ.  0) GO TO 30
            ISTP = ISTP - 1
            S1 = S2
         S2 = S1 + EDSHAD
C ----- Number of points for this step.
            SP1 = S1 + TDS
            F1 = CASHAD( SP1 , INIT )
            INIT = 1
            SP2 = S2 - TDS
            F2 = CASHAD( SP2 , INIT )
            EF = CNRJ * ( F1 + F2 )
            CALL POISSN( EF , NPT , IER )
            IF( NPT .EQ.  0) GO TO 10
            RHO = F1 / ( F1 + F2 )
            RH1 = DDS / RHO
            IF (RHO .GT. 0.999) RHO = 0.999
            RH2 = DDS / ( 1. - RHO )
         ENDIF
         ALEA = RNDM(ALEA)
         IF( ALEA .LT. RHO ) THEN
            ST = S1 + RH1 * ALEA
         ELSE
            ST = S2 - RH2 * ( 1. - ALEA )
         ENDIF
         NPT = NPT - 1
         XGERB(1) = ( ST - TINOL0 ) * GABSL
         DGRB = XGERB(1) + TRKNXT(9)
C ----- Radial.
         CALL CAHTRV( DGRB , RAD )
         IF ( RAD .GT. 0. ) THEN
            PHI = TWOPI * RNDM(RAD)
            XGERB(2) = RAD * COS(PHI)
            XGERB(3) = RAD * SIN(PHI)
         ELSE
            XGERB(2)=0.
            XGERB(3)=0.
         ENDIF
C ----- Energie deposee.
      CALL EHDEPH(NRJDP)
C
      ENDIF
C
   20 CONTINUE
      RETURN
C ----- Plus de points!
   30 CONTINUE
      IFIN = 0
      GO TO 20
      END
#endif
@


1.2
log
@release galeph 302
@
text
@d33 1
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
C ------------------------------------------------------
@


1.1.1.1
log
@import galeph 300
@
text
@@
