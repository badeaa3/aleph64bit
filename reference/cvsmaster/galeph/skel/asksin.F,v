head	1.2;
access;
symbols
	gal309_3:1.2
	gal309_2:1.2
	gal309_1:1.2
	gal309:1.2
	gal308_2:1.2
	gal308_1:1.2
	gal308:1.2
	gal307_2:1.2
	gal307_1:1.2
	gal307:1.2
	gal306_3:1.2
	gal306_2:1.2
	gal306_1:1.2
	gal306:1.2
	gal305_3:1.2
	gal305_2:1.2
	gal305_1:1.2
	gal305:1.2
	gal304_11:1.2
	gal304_10:1.2
	gal304_9:1.2
	gal304_8:1.2
	gal304_7:1.2
	gal304_6:1.2
	gal304_5:1.2
	gal304_4:1.2
	gal304_3:1.2
	gal304_2:1.2
	gal304_1:1.2
	gal304:1.2
	gal303_3:1.2
	gal303_2:1.2
	gal303_1:1.2
	v-303:1.2
	gal302_2:1.2
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	95.06.30.07.13.32;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.01.45;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.01.46;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@release galeph 302
 Modified files:
 gadoc.doc itdoc.doc
 adinit.F adrz.F adview.F adxy.F gaxeph.F
 ecasig.F ecbook.F ecdigi.F echit.F ecirun.F ecista.F ecnami.F
 ectrig.F ecwsum.F edfilh.F edinip.F edtadj.F edtain.F edtcor.F
 edtcut.F edtdig.F edtono.F edtrgi.F edtzsu.F edwbru.F edwdgt.F
 ehbari.F ehcutg.F eprimi.F
 galeph.F qnext.F
 agbeam.F agchck.F agcoil.F agecal.F agecpm.F ageome.F aggean.F
 aghcal.F agitch.F aglcal.F agmate.F agmedi.F agmuch.F agquad.F
 agscal.F agsmba.F agtpch.F
 gstmed.F guhadr.F guphad.F gustep.F gutrak.F
 cahtra.h gmacro.h lccomc.h lcnamc.h ljjpar.h siconst.h
 sigeco.h version.h
 itmsk1.F itmsk2.F itnois.F itres.F itxtlk.F
 lcadc.F lcamp.F lcasig.F lcbhab.F lcbkpr.F lcdigi.F lcfral.F
 lchit.F lcirun.F lcnami.F lcnois.F lcpad.F lcroc.F lcsamp.F
 lcsatu.F lcshow.F lcstrt.F lctrak.F lctrdi.F lctrht.F lcwire.F
 lcwsum.F lcwtri.F
 muasig.F mubook.F muirun.F muunoi.F muwsum.F
 trignews.h
 siasig.F sitrak.F siwsum.F
 asasig.F asbook.F ascjob.F ascrun.F asctra.F asevst.F asfxxx.F
 asieve.F asigea.F asijob.F asimod.F asinit.F asipac.F asirun.F
 askine.F asksin.F asktrk.F aspeve.F asprun.F asread.F asredc.F
 asreve.F asrkin.F asrtyp.F asrust.F astdeb.F astgea.F astrac.F
 astrig.F aswkin.F aswrtp.F aswsum.F
 Removed Files:
 guinti.F
 aggatt.F aggord.F
 xtrcom.h
 ecalnews.h geomnews.h lcalnews.h news.h skelnews.h vdetnews.h
@
text
@*DK asksin
      SUBROUTINE ASKSIN (IDEV,ISTA,NITR,NIVX,ECMS,WEIT)
C ----------------------------------------------------------------------
C. - R.BEUSELINCK - 830623   for GALEPH 3.2
C.                                       modified by F.RANJARD - 871029
C! Generate a single track particle of a given type in a given range
C.   of momentum and cosine(theta).
C - Output arguments:
C          IDEV     = particle type
C          ISTA     = event status word  ( 0 means OK )
C          NITR     = # of generated tracks
C          NIVX     = # of generated vertices
C          ECMS     = particle momentum
C          WEIT     = event weight
C.   BKINJO(4) = particle type
C.          5    minimum value of the momentum
C.          6    maximum value of the momentum
C.          7    minimum value of cos(theta)
C.          8    maximum value of cos(theta)
C. - called by    ASKINE when TKINJO = PART             from this .HLB
C. - calls        RANNOR , RNDM                         from KERNLIB
C.                KBVERT, KBKINE                        from this .HLB
C.
C -----------------------------------------------------
#ifndef DOC
      SAVE
#include "iocom.h"
#include "jobcom.h"
#include "kincom.h"
#include "alcons.h"
#include "jqcom.h"
      EXTERNAL RNDM
      REAL VRTX(4),PLAB(4)
#include "bmacro.h"
C -----------------------------------------------------------------------------
C
C - smear vertex position
C
      CALL RANNOR(RN1,RN2)
      CALL RANNOR(RN3,DUM)
      VRTX(1)=RN1*BKINJO(1)
      VRTX(2)=RN2*BKINJO(2)
      VRTX(3)=RN3*BKINJO(3)
      VRTX(4)=0.
      NIVX = 1
      JKVOL = IW(NAKVOL)
      IW(JKVOL+LMHROW) = NIVX
      KKVOL = KROW(JKVOL,NIVX)
      IW(KKVOL+1) = INTCHA ('BPVA')
C
C - store vertex coordinates
C
      JVERT = KBVERT (NIVX,VRTX,0)
      IF (JVERT .LE. 0) THEN
         CALL ALTELL ('ASKSIN: not enough space for VERT',1,'NEXT')
      ENDIF
C
C--  generate a single track of type BKINJO(4) with suitable
C--  momentum and direction.
C--
      PMOD = BKINJO(5) + (BKINJO(6)-BKINJO(5))*RNDM(0)
      PHI  = TWOPI*RNDM(0)
      COST = BKINJO(7) + (BKINJO(8)-BKINJO(7))*RNDM(0)
      IF (RNDM(0).GT.0.5) COST = -COST
      SINT = SQRT(1. - COST**2)
      PLAB(1)=PMOD*SINT*COS(PHI)
      PLAB(2)=PMOD*SINT*SIN(PHI)
      PLAB(3)=PMOD*COST
      PLAB(4) = 0.
C
      IDEV = NINT(BKINJO(4))
      NITR = 1
      JKINE = KBKINE (NITR,PLAB,IDEV,NIVX)
      IF ( JKINE .LE. 0) THEN
         CALL ALTELL ('ASKSIN: not enough space for VERT or KINE',1,
     &                'NEXT')
      ENDIF
      WEIT = 1.
      ISTA = 0
      ECMS = PMOD
C
C - END
C
999   RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@d23 2
a24 1
C -------------------------------------------------------------------
d26 1
@


1.1.1.1
log
@import galeph 300
@
text
@@
