head	1.4;
access;
symbols
	gal309_3:1.4
	gal309_2:1.4
	gal309_1:1.4
	gal309:1.4
	gal308_2:1.4
	gal308_1:1.4
	gal308:1.4
	gal307_2:1.4
	gal307_1:1.4
	gal307:1.4
	gal306_3:1.4
	gal306_2:1.4
	gal306_1:1.4
	gal306:1.4
	gal305_3:1.4
	gal305_2:1.3
	gal305_1:1.3
	gal305:1.3
	gal304_11:1.3
	gal304_10:1.3
	gal304_9:1.3
	gal304_8:1.3
	gal304_7:1.3
	gal304_6:1.3
	gal304_5:1.3
	gal304_4:1.3
	gal304_3:1.3
	gal304_2:1.3
	gal304_1:1.3
	gal304:1.3
	gal303_3:1.3
	gal303_2:1.3
	gal303_1:1.3
	v-303:1.3
	gal302_2:1.3
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.08.22.09.02.00;	author flr;	state Exp;
branches;
next	1.3;

1.3
date	95.06.30.07.13.55;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.02.06.15.20.39;	author algal;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.01.48;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.01.49;	author flr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gal305 corr no. 3 in asgpar and aswkin to store particle with geant# > 52 and .ne. 100
@
text
@*DK aswkin
      SUBROUTINE ASWKIN
C ---------------------------------------------------------
C - F.RANJARD - 860308
C! Interface Geant3/BOS kine banks
C - Translate GEANT banks : 'VERT' and 'KINE' into similar
C   BOS banks.
C - Called by    ASEVST                       from this .HLB
C - Calls        NBANK, BLIST, NAMIND, BKFMT  from BOS77.hlb
C                ALBOS                        from this .HLB
C ----------------------------------------------------------
#ifndef DOC
#include "jqcom.h"
#include "kincom.h"
#include "gcbank.h"
#include "gcnum.h"
      SAVE AVER, IPROG
C - def. of 'VERT' parameters : header length, # of parameters
      PARAMETER (LHVE=3, LPVE=5, LEVE=LHVE+LPVE)
C - def. of 'KINE' parameters : header length, # of parameters
      PARAMETER (LHKI=3, LPKI=5, LEKI=LHKI+LPKI)
      DATA IFI/0/
#include "bmacro.h"
#include "kmacro.h"
      NUMGP(JD) = INT (GB(JD+5))
C ----------------------------------------------------------
C
C - get the alephlib version # used in KINGAL or GALEPH
      IF (IFI .EQ. 0) THEN
         IFI = 1
         CALL KIAVER (AVER,IPROG)
      ENDIF
C
C - get the PART bank
      JPART = IW(NAPART)
C
C - Translate GEANT banks 'VERT' and 'KINE' into BOS banks
C
C                                    'VERT' banks
      DO 1 I=1,NGVERT
         JV = LGB(JGVERT-I)
         IF (JV.EQ.0) GOTO 1
         NOUT = GB(JV+7)
         CALL ALBOS ('VERT',I,LEVE+NOUT,KVE,IGARB)
         IW(KVE+1) = LHVE
         IW(KVE+2) = LPVE
         IW(KVE+3) = NOUT
         KV1 = KVE + LHVE
         RW(KV1+1) = GB(JV+1)
         RW(KV1+2) = GB(JV+2)
         RW(KV1+3) = GB(JV+3)
         RW(KV1+4) = GB(JV+4)
         IW(KV1+LPVE) = GB(JV+5)
         DO 11 N=1,NOUT
            IW(KV1+LPVE+N) = GB(JV+7+N)
 11      CONTINUE
 1    CONTINUE
C                                      'KINE'
      DO 2 I=1,NGTRAC
         JK = LGB(JGKINE-I)
C        IF the Geant# .EQ. the NOtracking marker word THEN skip it
         NGP = NUMGP(JK)
         IF (NGP .EQ. NOTRKI) GOTO 2
C
         IF (JK.LE.0) GOTO 2
         NVX = GB(JK+7)+1
         CALL ALBOS ('KINE',I,LEKI+NVX,KKI,IGARB)
         IW(KKI+1) = LHKI
         IW(KKI+2) = LPKI
         IW(KKI+3) = NVX
         KK1 = KKI+LHKI
         RW(KK1+1) = GB(JK+1)
         RW(KK1+2) = GB(JK+2)
         RW(KK1+3) = GB(JK+3)
         IW(KK1+5) = NGP
C        If the Geant# > 52 then Geant# is not = Aleph#
         IF (NGP.GT.52) THEN
           DO M=1,LROWS(JPART)
            IF (NGP.EQ.ITABL(JPART,M,1)) IW(KK1+5) = M          
           ENDDO
         ENDIF
C        In the ALEPHLIB 9.0 the KINE and FKIN banks have been modified:
C        word(4) has been changed to contain mass instead of energy.
C        to be backward compatible the following test is necessary.
C        when files created with an ALEPHLIB earlier than 9.0 will have
C        disappeared only the statment IF(I.GT.NITRKI.. will be necessary.
         IF (AVER .LT. 9.0) THEN
            RW(KK1+4) = GB(JK+4)
         ELSE
            IF(I .GT. NITRKI) THEN
               RW(KK1+4) = PARMAS(IW(KK1+5))
            ENDIF
         ENDIF
         IW(KK1+6) = GB(JK+6)
         DO 21 N=2,NVX
            IW(KK1+LPKI+N) = GB(JK+6+N)
 21      CONTINUE
 2    CONTINUE
C
 999  CONTINUE
      RETURN
      END
#endif
@


1.3
log
@release galeph 302
 Modified files:
 gadoc.doc itdoc.doc
 adinit.F adrz.F adview.F adxy.F gaxeph.F
 ecasig.F ecbook.F ecdigi.F echit.F ecirun.F ecista.F ecnami.F
 ectrig.F ecwsum.F edfilh.F edinip.F edtadj.F edtain.F edtcor.F
 edtcut.F edtdig.F edtono.F edtrgi.F edtzsu.F edwbru.F edwdgt.F
 ehbari.F ehcutg.F eprimi.F
 galeph.F qnext.F
 agbeam.F agchck.F agcoil.F agecal.F agecpm.F ageome.F aggean.F
 aghcal.F agitch.F aglcal.F agmate.F agmedi.F agmuch.F agquad.F
 agscal.F agsmba.F agtpch.F
 gstmed.F guhadr.F guphad.F gustep.F gutrak.F
 cahtra.h gmacro.h lccomc.h lcnamc.h ljjpar.h siconst.h
 sigeco.h version.h
 itmsk1.F itmsk2.F itnois.F itres.F itxtlk.F
 lcadc.F lcamp.F lcasig.F lcbhab.F lcbkpr.F lcdigi.F lcfral.F
 lchit.F lcirun.F lcnami.F lcnois.F lcpad.F lcroc.F lcsamp.F
 lcsatu.F lcshow.F lcstrt.F lctrak.F lctrdi.F lctrht.F lcwire.F
 lcwsum.F lcwtri.F
 muasig.F mubook.F muirun.F muunoi.F muwsum.F
 trignews.h
 siasig.F sitrak.F siwsum.F
 asasig.F asbook.F ascjob.F ascrun.F asctra.F asevst.F asfxxx.F
 asieve.F asigea.F asijob.F asimod.F asinit.F asipac.F asirun.F
 askine.F asksin.F asktrk.F aspeve.F asprun.F asread.F asredc.F
 asreve.F asrkin.F asrtyp.F asrust.F astdeb.F astgea.F astrac.F
 astrig.F aswkin.F aswrtp.F aswsum.F
 Removed Files:
 guinti.F
 aggatt.F aggord.F
 xtrcom.h
 ecalnews.h geomnews.h lcalnews.h news.h skelnews.h vdetnews.h
@
text
@d34 3
d62 2
a63 1
         IF (NUMGP(JK) .EQ. NOTRKI) GOTO 2
d75 7
a81 1
         IW(KK1+5) = GB(JK+5)
@


1.2
log
@je nesais plus
remove include BMACRO
equivalence (NAPART,NAPAR) to cope with KMACRO
je ne sais plus
@
text
@d80 1
a80 1
            IF(I .GT. NITRKI) THEN 
@


1.1
log
@Initial revision
@
text
@d80 3
a82 1
            IF(I .GT. NITRKI) RW(KK1+4) = PARMAS(IW(KK1+5))
@


1.1.1.1
log
@import galeph 300
@
text
@@
