head	1.2;
access;
symbols
	gal309_3:1.2
	gal309_2:1.2
	gal309_1:1.2
	gal309:1.2
	gal308_2:1.2
	gal308_1:1.2
	gal308:1.2
	gal307_2:1.2
	gal307_1:1.2
	gal307:1.2
	gal306_3:1.2
	gal306_2:1.2
	gal306_1:1.2
	gal306:1.2
	gal305_3:1.2
	gal305_2:1.2
	gal305_1:1.2
	gal305:1.2
	gal304_11:1.2
	gal304_10:1.2
	gal304_9:1.2
	gal304_8:1.2
	gal304_7:1.2
	gal304_6:1.2
	gal304_5:1.2
	gal304_4:1.2
	gal304_3:1.2
	gal304_2:1.2
	gal304_1:1.2
	gal304:1.2
	gal303_3:1.2
	gal303_2:1.2
	gal303_1:1.2
	v-303:1.2
	gal302_2:1.2
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	95.06.30.07.14.47;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.02.50;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.02.51;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@release galeph 302
 Modified files:
 gadoc.doc itdoc.doc
 adinit.F adrz.F adview.F adxy.F gaxeph.F
 ecasig.F ecbook.F ecdigi.F echit.F ecirun.F ecista.F ecnami.F
 ectrig.F ecwsum.F edfilh.F edinip.F edtadj.F edtain.F edtcor.F
 edtcut.F edtdig.F edtono.F edtrgi.F edtzsu.F edwbru.F edwdgt.F
 ehbari.F ehcutg.F eprimi.F
 galeph.F qnext.F
 agbeam.F agchck.F agcoil.F agecal.F agecpm.F ageome.F aggean.F
 aghcal.F agitch.F aglcal.F agmate.F agmedi.F agmuch.F agquad.F
 agscal.F agsmba.F agtpch.F
 gstmed.F guhadr.F guphad.F gustep.F gutrak.F
 cahtra.h gmacro.h lccomc.h lcnamc.h ljjpar.h siconst.h
 sigeco.h version.h
 itmsk1.F itmsk2.F itnois.F itres.F itxtlk.F
 lcadc.F lcamp.F lcasig.F lcbhab.F lcbkpr.F lcdigi.F lcfral.F
 lchit.F lcirun.F lcnami.F lcnois.F lcpad.F lcroc.F lcsamp.F
 lcsatu.F lcshow.F lcstrt.F lctrak.F lctrdi.F lctrht.F lcwire.F
 lcwsum.F lcwtri.F
 muasig.F mubook.F muirun.F muunoi.F muwsum.F
 trignews.h
 siasig.F sitrak.F siwsum.F
 asasig.F asbook.F ascjob.F ascrun.F asctra.F asevst.F asfxxx.F
 asieve.F asigea.F asijob.F asimod.F asinit.F asipac.F asirun.F
 askine.F asksin.F asktrk.F aspeve.F asprun.F asread.F asredc.F
 asreve.F asrkin.F asrtyp.F asrust.F astdeb.F astgea.F astrac.F
 astrig.F aswkin.F aswrtp.F aswsum.F
 tpdigi.F tpgeth.F tphdif.F tphsrt.F tpirun.F tpugeo.F
 Removed Files:
 guinti.F
 aggatt.F aggord.F
 xtrcom.h
 ecalnews.h geomnews.h lcalnews.h news.h skelnews.h vdetnews.h
@
text
@*DK tpgeth
      SUBROUTINE TPGETH(ITE)
C ----------------------------------------------------------------------
C. - M.MERMIKIDES - 851206
C. - Compute intersections(hits) of charged track element ITE
C.   with padrows
C. - Banks created:
C                 TPHT  Intersections with padrows
C                 TPHE  References to track elements
C.
C. -Called from   TPHIT
C. -Calls         ALBOS
C.                BKFMT,BLIST
C -------------------------------------------------------
#ifndef DOC
      SAVE
#include "jqcom.h"
#include "jobcom.h"
#include "iocom.h"
#include "alcons.h"
#include "trkcom.h"
#include "tpgpar.h"
#include "tpgeom.h"
#include "tpgeop.h"
#include "tpnamc.h"
      DIMENSION V1(6),V2(6),XINT(6),PZINT(4)
C
#include "bmacro.h"
C
C -------------------------------------------------------------
C
C  Create TPHT and TPHE (optionally) banks on entry
C
      ITPHT = IW(NATPHT)
      IF(ITPHT.EQ.0) THEN
         CALL ALBOS ('TPHT',0,LBHT,ITPHT,IGARB)
         CALL BLIST(IW,'E+','TPHT')
         IW(ITPHT + 1) = NWPHT
         IW(ITPHT + 2) = 0
      ENDIF
C
      IF (ICTPJO(4).GT.0) THEN
         ITPHE = IW(NATPHE)
         IF(ITPHE.EQ.0) THEN
            CALL ALBOS ('TPHE',0,LBHE,ITPHE,IGARB)
C  If garbage collection occured, redefine index for 'TPHT'
            IF (IGARB.EQ.1)  ITPHT = IW(NATPHT)
            CALL BLIST(IW,'E+','TPHE')
            IW(ITPHE + 1) = NWPHE
            IW(ITPHE + 2) = 0
         ENDIF
      ENDIF
C
C  Find intersections with padrows between the 2 points
C
      R1 = SQRT(TRKELE(1)**2 + TRKELE(2)**2)
      R2 = SQRT(TRKNXT(1)**2 + TRKNXT(2)**2)
      IF(R1.GT.R2) THEN
         RS = R2
         R2 = R1
         R1 = RS
      ENDIF
C
      DO 205 IROW = 1,LTPDRO
C
         IF(TPPROW(IROW).LT.R1) GO TO 205
         IF(TPPROW(IROW).GT.R2) GO TO 205
C
C  Determine sector types and endplate according to radius
C  and volume number
C
         IF (IROW.LE.NTPDRW(1)) THEN
C  K-type
            IST = 0
            IF (ITRKEL(10).NE.2) IST = LTSECT/2
            ISL1 = IST + 1
            ISL2 = IST + LTSLOT/2
            IRS = IROW
         ELSE
C  M,W types
            IST = LTSLOT/2
            IF (ITRKEL(10).NE.2) IST = IST + LTSECT/2
            ISL1 = IST + 1
            ISL2 = IST + LTSLOT
            IRS = IROW - NTPDRW(1)
         ENDIF
C
C   Use GEANT3 routine with cubic model
C
         CALL GICYL(TPPROW(IROW),TRKELE(1),TRKNXT(1),
     *               0., TRKELE(11), 3, XINT,SINT,PZINT,IFLAG)
         IF (IFLAG.NE.1) GO TO 205
         PHIGL = PZINT(1)
         IF(PHIGL.LT.0.) PHIGL = PHIGL + TWOPI
C
         DO 19 ISLOT = ISL1,ISL2
            DPHI = TPHDIF(PHIGL,TPPHI0(ISLOT))
            IF (IENDTP(ISLOT).EQ.2) DPHI=-DPHI
            ITYP = ITPTYP(ISLOT)
            IF (ABS(DPHI).GT.TPDPHF(IRS,ITYP)) GO TO 19
            IPAD = INT((TPDPHW(IRS,ITYP)-DPHI)/TPDPHS(IRS,ITYP))+2
            GO TO 300
19       CONTINUE
C
         GO TO 205
C
C  Enter hit in BOS bank
C
300      CONTINUE
C  If no room to store next hit, increase size of bank
         IF (LFRWRD(ITPHT) .LT. LCOLS(ITPHT)) THEN
            NDATA = IW(ITPHT) + LBHTX
            CALL ALBOS ('TPHT',0,NDATA,ITPHT,IGARB)
            IF (IGARB.EQ.1) ITPHE = IW(NATPHE)
         ENDIF
C  KHT1 = Address of next free row
         KHT1 = KNEXT(ITPHT)
         IW(KHT1 + 1) = ITRKEL(1)
         IW(KHT1 + 2) = IROW*100000 + ISLOT*1000 + IPAD
         RW(KHT1 + 3) = PHIGL
         RW(KHT1 + 4) = PZINT(2)
         RW(KHT1 + 5) = PZINT(3)
         RW(KHT1 + 6) = PZINT(4)
         IW(ITPHT + 2) = IW(ITPHT + 2) + 1
C
C  Update TPHE bank if track element ref. is given
C
         IF (ITE.EQ.0) GO TO 205
C  If no room to store next hit, increase size of bank
         IF (LFRWRD(ITPHE) .LT. LCOLS(ITPHE)) THEN
            NDATA = IW(ITPHE) + LBHEX
            CALL ALBOS ('TPHE',0,NDATA,ITPHE,IGARB)
            IF (IGARB.EQ.1) ITPHT = IW(NATPHT)
         ENDIF
C  KHE1 = Address of next free row
         KHE1 = KNEXT (ITPHE)
         IW(KHE1 + 1) = ITE
         IW(ITPHE + 2) = IW(ITPHE + 2) + 1
205   CONTINUE
999   RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@d14 1
@


1.1.1.1
log
@import galeph 300
@
text
@@
