head	1.1;
branch	1.1.1;
access;
symbols
	gal309_3:1.1.1.1
	gal309_2:1.1.1.1
	gal309_1:1.1.1.1
	gal309:1.1.1.1
	gal308_2:1.1.1.1
	gal308_1:1.1.1.1
	gal308:1.1.1.1
	gal307_2:1.1.1.1
	gal307_1:1.1.1.1
	gal307:1.1.1.1
	gal306_3:1.1.1.1
	gal306_2:1.1.1.1
	gal306_1:1.1.1.1
	gal306:1.1.1.1
	gal305_3:1.1.1.1
	gal305_2:1.1.1.1
	gal305_1:1.1.1.1
	gal305:1.1.1.1
	gal304_11:1.1.1.1
	gal304_10:1.1.1.1
	gal304_9:1.1.1.1
	gal304_8:1.1.1.1
	gal304_7:1.1.1.1
	gal304_6:1.1.1.1
	gal304_5:1.1.1.1
	gal304_4:1.1.1.1
	gal304_3:1.1.1.1
	gal304_2:1.1.1.1
	gal304_1:1.1.1.1
	gal304:1.1.1.1
	gal303_3:1.1.1.1
	gal303_2:1.1.1.1
	gal303_1:1.1.1.1
	v-303:1.1.1.1
	gal302_2:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	94.12.07.14.01.55;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.01.56;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@*DK agmix
      SUBROUTINE AGMIX(N,NLIS,EPS,A,Z,W,D)
C------------------------------------------------
C! Fills density from thickness of components
C! and prepare weigth , atomic weight and atomic number
C! for subsequent use in GSMIXT
C   Input arguments
C   N     number of components
C   NLIS  array containing the material numbers
C   EPS   array of thicknesses
C   Output arguments
C   A     array of atomic weights
C   Z     array of atomic numbers
C   W     array of relative weights
C   D     density of the compound
C
C   units are cm,g/cm**3
C
C   B. Bloch-Devaux    april 30 1987
C
C-----------------------------------------------------------
#ifndef DOC
      INTEGER NLIS(*)
      REAL EPS(*),A(*),Z(*),W(*)
      REAL UBUF(20)
      INTEGER    NAM(5)
      CHARACTER NAMG*20
#include "gcbank.h"
C ----------------------------------------------------------
      D=0.
C
C  Fetch properties of requested components
C
      E=0.
      DO 10 I=1,N
        IF (GVERSN.LT.3.15) THEN
           CALL GFMATE(NLIS(I),NAM,A(I),Z(I),DENS,RADL,ABSL,UBUF,NW)
        ELSE
           CALL GFMATE(NLIS(I),NAMG,A(I),Z(I),DENS,RADL,ABSL,UBUF,NW)
        ENDIF
        W(I)=EPS(I)*DENS
        D=D+W(I)
        E=E+EPS(I)
 10   CONTINUE
C
C   Compute weigths and density
C
      DO 20 I=1,N
 20   W(I)=W(I)/D
      D=D/E
      END
#endif
@


1.1.1.1
log
@import galeph 300
@
text
@@
