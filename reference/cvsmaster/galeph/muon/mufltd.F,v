head	1.1;
branch	1.1.1;
access;
symbols
	gal309_3:1.1.1.1
	gal309_2:1.1.1.1
	gal309_1:1.1.1.1
	gal309:1.1.1.1
	gal308_2:1.1.1.1
	gal308_1:1.1.1.1
	gal308:1.1.1.1
	gal307_2:1.1.1.1
	gal307_1:1.1.1.1
	gal307:1.1.1.1
	gal306_3:1.1.1.1
	gal306_2:1.1.1.1
	gal306_1:1.1.1.1
	gal306:1.1.1.1
	gal305_3:1.1.1.1
	gal305_2:1.1.1.1
	gal305_1:1.1.1.1
	gal305:1.1.1.1
	gal304_11:1.1.1.1
	gal304_10:1.1.1.1
	gal304_9:1.1.1.1
	gal304_8:1.1.1.1
	gal304_7:1.1.1.1
	gal304_6:1.1.1.1
	gal304_5:1.1.1.1
	gal304_4:1.1.1.1
	gal304_3:1.1.1.1
	gal304_2:1.1.1.1
	gal304_1:1.1.1.1
	gal304:1.1.1.1
	gal303_3:1.1.1.1
	gal303_2:1.1.1.1
	gal303_1:1.1.1.1
	v-303:1.1.1.1
	gal302_2:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	94.12.07.14.02.41;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.02.42;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@*DK mufltd
      SUBROUTINE MUFLTD
C
C*******************************************************************************
C
C T.Wang -860118
C
C! make cross reference between digit and tracks,
C       then fill BOS bank 'MUTD'.
C       This routine is called once per event.
C
C       Input:
C         NDIGI -- the current # of digi in BOS bank 'MUDG' and 'MUDT'
C
C       Output:
C         NTRK  -- # of tracks which generate these digi
C       RETURN 1 if not enough space to book MUTD
C
C       Called by MUDGTZ
C       Calls ALBOS                   in this .HLB
C       Calls BKFMT,BLIST             in BOS
C
C*******************************************************************************
C
#ifndef DOC
      SAVE
#include "mudgpr.h"
#include "munamc.h"
#include "jobcom.h"
#include "bcs.h"
#include "iocom.h"
      INTEGER NTDI(MXTRK),ITRK(MXTRK),ITDI(MXTDI,MXTRK)
#include "bmacro.h"
C
C       Get index for BOS bank 'MUDT'
C
      KMDT1 = IW(NAMUDT)
      KMDT2 = IW(KMDT1 - 1)
      KMDT3 = IW(KMDT2 - 1)
      KMDT1 = KMDT1 + LMHLEN
      KMDT2 = KMDT2 + LMHLEN
      KMDT3 = KMDT3 + LMHLEN
      MTRK = IW(KMDT3)
C - Check local array lengths
      IF (MTRK .GT. MXTRK) GOTO 98
C
C       Cross reference for track-digi
C
      NTRK = 0
      IDG = 0
      DO 40 IT=1,MTRK
         JTRK = IW(KMDT3 + IT)
         IF( IT .GE. IW(KMDT2 + IDG + 1) )THEN
            IDG = IDG + 1
         ENDIF
         IF( NTRK .EQ.  0)GOTO 20
         DO 10 JT=1,NTRK
            IF( JTRK .EQ. ITRK(JT) )THEN
               NTDI(JT) = NTDI(JT) + 1
               IF (NTDI(JT) .GT. MXTDI) GOTO 98
               ITDI(NTDI(JT),JT) = IDG
               GOTO 30
            ENDIF
   10    CONTINUE
   20    NTRK = NTRK + 1
         ITRK(NTRK) = JTRK
         NTDI(NTRK) = 1
         ITDI(1,NTRK) = IDG
   30    CONTINUE
   40 CONTINUE
C
C       Create BOS bank 'MUTD'
C
      CALL ALBOS ('MUTD',1,NTRK+LMHLEN,JMTD1,IGAR1)
      IW(JMTD1+1) = 1
      CALL ALBOS ('MUTD',2,NTRK+LMHLEN,JMTD2,IGAR2)
      IW(JMTD2+1) = 1
      CALL ALBOS ('MUTD',3,NTRK+LMHLEN,JMTD3,IGAR3)
      IW(JMTD3+1) = 1
      CALL ALBOS ('MUTD',4,MTRK+LMHLEN,JMTD4,IGAR4)
      IW(JMTD4+1) = 1
      CALL BLIST (IW,'E+','MUTD')
      IF (IGAR1+IGAR2+IGAR3+IGAR4 .NE. 0) THEN
         JMTD1 = IW(NAMUTD)
         JMTD2 = IW(JMTD1-1)
         JMTD3 = IW(JMTD2-1)
         JMTD4 = IW(JMTD3-1)
      ENDIF
      KMTD1 = JMTD1 + LMHLEN
      KMTD2 = JMTD2 + LMHLEN
      KMTD3 = JMTD3 + LMHLEN
      KMTD4 = JMTD4 + LMHLEN
C
C       Fill BOS bank 'MUTD'
C
      IW(KMTD3 + 1) = 0
      DO 60 JT=1,NTRK
         IW(KMTD1 + JT) = ITRK(JT)
         IW(KMTD2 + JT) = NTDI(JT)
         IF( JT .NE. 1)THEN
            IW(KMTD3 + JT) = IW(KMTD3 + JT - 1) + NTDI(JT - 1)
         ENDIF
         DO 50 JDI=1,NTDI(JT)
            IW(KMTD4 + IW(KMTD3+JT) + JDI) = ITDI(JDI,JT)
   50    CONTINUE
   60 CONTINUE
      IW(KMTD1) = NTRK
      IW(KMTD2) = NTRK
      IW(KMTD3) = NTRK
      IW(KMTD4) = IW(KMTD3+NTRK) + NTDI(NTRK)
      RETURN
C
 98   CALL ALTELL ('MUFLTD: local arrays are too small',2,'RETURN')
C
      END
#endif
@


1.1.1.1
log
@import galeph 300
@
text
@@
