head	1.1;
branch	1.1.1;
access;
symbols
	tpc300_1:1.1.1.1
	tpc300:1.1.1.1
	tpc218:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	94.12.09.14.30.06;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.09.14.30.07;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@*DK tpsgnl
      SUBROUTINE TPSGNL(IWIR,NLPHIT,NTPHIT,IERR)
C--------------------------------------------------------------------
C!  Subroutine to store signals as they are generated by the avalanche
C!  on the wires and the subsequent coupling to the pads and trigger
C!  pads.
C
C  Called from:  TSTEER
C  Calls:        TPOPSG
C
C  Inputs:   PASSED:      --IWIR,   the number of the wire hit
C                         --NLPHIT, the number of long pads hit
C                         --NTPHIT, the number of trigger pads hit
C            /CHANNL/     --the avalanche size, lists of pads and
C                           trigger pads hit, and lists of signal
C                           sizes on the pads hit
C            /TPCONS/     --NTBNAS, the number of time bins in each
C                                   block of the analog signal bank
C                         --NTSCAN, the number of blocks in the full
C                                   collection time
C
C  Outputs:  BANKS:       --id INDSIG, analog signal bank, opened
C                                      in TPOPSG and filled with
C                                      signals from CHANNL.INC here
C                         --id INDREF, signal reference bank, opened in
C                                      TPINRF and filled with pointers
C                                      and time limits here
C            /TPCBOS/     --NTSGHT, the number of blocks actually used
C                                   in the signal bank
C  D. DeMille
C  M. Mermikides 31/8/86   Check also on INDSIG for opening signal bank
C  P. Janot 03/03/89   Update local indices after a WBANK call !
C--------------------------------------------------------------------
#include "bcs.h"
#include "channl.h"
#include "tpcbos.h"
#include "tpcons.h"
C
C  Find the section of the signal collection time that the
C  time bin of this hit corresponds to as well as the corresponding bin
C  number within the section
C
      MSGSC = 1 + ( IBIN1 - 1 ) / NTBNAS
      MBIN = IBIN1 - (MSGSC-1)*NTBNAS
      IERR = 0
C
C  Loop over channel types
C
      DO 999 KCHAN = 1, NCHAN
C
C  See how many channels of this type have been hit
C
         IF ( KCHAN .EQ. 1 ) THEN
            NCHHIT = 1
         ELSEIF ( KCHAN .EQ. 2 ) THEN
            NCHHIT = NLPHIT
         ELSE
            NCHHIT = NTPHIT
         ENDIF
C
C  Loop over the number of channels of this type hit
C
         DO 1 JHIT = 1, NCHHIT
C
C  Find the channel number corresponding to this hit
C
            IF ( KCHAN .EQ. 1 ) THEN
               ICHAN = IWIR
            ELSEIF ( KCHAN .EQ. 2 ) THEN
               ICHAN = NAMP(JHIT)
            ELSE
               ICHAN = NAMT(JHIT)
            ENDIF
C
C  Find the index in the reference bank for the info on this channel
C  idchn = bank index + header length + no. words/chan * (ichan-1)
C
          IDCHN = INDREF(KCHAN) + 2 + (ICHAN-1)*IW(INDREF(KCHAN)+2)
C
C  Check to see if this channel has been hit before in this
C  section of the signal collection time.
C
            IF ( IW(IDCHN+2+MSGSC) .NE. 0 ) THEN
C
C  This channel has been hit before, so just get the pointer
C
               NPNT = IW(IDCHN+2+MSGSC)
C
            ELSE
C
C  This channel not hit before.  Update the no. of channels of this type
C  hit, then get and set the pointer
C
               NTSGHT = NTSGHT + 1
               NPNT = NTSGHT
               IW(IDCHN+2+MSGSC) = NPNT
C
C  If we don't have enough room for this new signal, open or extend the
C  signal bank.  The -1 in the call says we want automatic size control.
C
               IF (INDSIG.EQ.0 .OR. NPNT .GT. IW(INDSIG+2) )
     &            CALL TPOPSG(-1,IERR)
C
               IF (IERR.EQ.1) RETURN
C
            ENDIF
C
C  Reset min and max time bins if necessary
C
            IDCHN = INDREF(KCHAN) + 2 + (ICHAN-1)*IW(INDREF(KCHAN)+2)
            IF ( IBIN1 .LT. IW(IDCHN+1) .OR. IW(IDCHN+1) .EQ. 0 )
     *         IW(IDCHN+1) = IBIN1
C
            IF ( IBIN1 .GT. IW(IDCHN+2) )
     *         IW(IDCHN+2) = IBIN1
C
C  Find the charge to be deposited
C
            IF ( KCHAN .EQ. 1 ) THEN
               NELEC = NAVELE
            ELSEIF ( KCHAN .EQ. 2 ) THEN
               NELEC = MPPUL(JHIT)
            ELSE
               NELEC = MTPUL(JHIT)
            ENDIF
C
C  Deposit charge in proper channel and time bin
C
            IDSGB = INDSIG + 2 + (NPNT-1)*IW(INDSIG+1) + MBIN
            IW(IDSGB) = IW(IDSGB) + NELEC
C
C  End loop over channel of this type hit
C
 1       CONTINUE
C
C  End loop over channel types
C
 999  CONTINUE
C
      RETURN
      END
@


1.1.1.1
log
@import tpcsim 300
@
text
@@
