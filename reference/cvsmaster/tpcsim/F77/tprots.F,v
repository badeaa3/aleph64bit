head	1.1;
branch	1.1.1;
access;
symbols
	tpc300_1:1.1.1.1
	tpc300:1.1.1.1
	tpc218:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.1
date	94.12.09.14.30.06;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.09.14.30.07;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@*DK tprots
      SUBROUTINE TPROTS(ITYPE,MISECT,LCUT)
C-----------------------------------------------------------------------
C! Rotate to the sector coordinate frame.  Check phi-acceptance
C! for first check of whether track crosses this sector.
C
C  Called from:  TPBRTK
C  Calls:        ROT (CERN)
C
C  Inputs:   PASSED:      --ITYPE,  sector type
C                         --MISECT, sector number on endplate
C            /TRAKEL/     --primary and secondary track parameters in
C                           the global frame for the track to be rotated
C            /TPGEOM/     --sector positions and phi limits of extended
C            /SCTBND/       sectors
C
C  Outputs:  PASSED:      --LCUT, flag indicating whether track comes
C                                 near sector to be rotated into
C            /TRAKEL/     --primary and secondary track parameters in th
C                           sector frame
C  D. DeMille
C-----------------------------------------------------------------------
#include "trakel.h"
#include "tpgpar.h"
#include "tpgeom.h"
#include "sctbnd.h"
#include "alcons.h"
C
      LOGICAL LCUT
C
      PHIROT = TPPHI0(MISECT)
C
C  A little trick geometry here.  alph01 and alph02 are defined as
C  angles measured counterclockwise from the global x-axis.  Now, we
C  transform them into the sector frame, where they are measured
C  clockwise from the y-axis in the range from -pi to +pi.
C  (This is done only to conform to pre-existing angle conventions;
C  now the alphas are measured in the same way as the other angles in
C  the sector frame).  Note that now alph02 < alph01.
C
      DALPHA = ALPH02 - ALPH01
      ALPH02 = PHIROT - ALPH02
      ALPH02 = AMOD(ALPH02,TWOPI)
      IF ( ABS(ALPH02) .GT. PI )
     *   ALPH02 = ALPH02 - SIGN(1.,ALPH02)*TWOPI
      ALPH01 = ALPH02 + DALPHA
C
C  Now do crude phi-cut; most tracks will be eliminated.
C
      PHILIM = PHIMAX(ITYPE)
C
      IF ( ALPH01 .LT. -PHILIM .OR. ALPH02 .GT. PHILIM ) THEN
         LCUT = .FALSE.
         RETURN
      ELSE
         LCUT = .TRUE.
      ENDIF
C
C  Passed crude phi-cut; now rotate into sector coords
C
      PHIROT = PIBY2 - PHIROT
C
      CALL ROT(X,PHIROT,X)
      CALL ROT(VECT,PHIROT,VECT)
      CALL ROT(CENT,PHIROT,CENT)
C
C  psi1 = angle ( measured counterclockwise from x-axis in a coord. sys.
C  with origin at the center of the circle defined by the x-y proj.
C  of the track ) at the beginning of the track.
C
      XDIFF = X(1) - CENT(1)
      YDIFF = X(2) - CENT(2)
      PSI1 = ATAN2( YDIFF, XDIFF )
      IF ( DELPSI .LT. 0. ) PSI1 = PSI1 + DELPSI
      PSI1 = AMOD(PSI1, TWOPI)
      IF ( PSI1 .LT. 0.0 ) PSI1 = PSI1 + TWOPI
C
      RETURN
      END
@


1.1.1.1
log
@import tpcsim 300
@
text
@@
