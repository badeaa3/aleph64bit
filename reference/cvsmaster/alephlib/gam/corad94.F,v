head	1.4;
access;
symbols
	aleph316_2:1.4
	aleph316_1:1.4
	aleph316:1.4
	aleph315_7:1.4
	aleph315_6:1.4
	aleph315_5:1.4
	aleph315_4:1.4
	aleph315_3:1.4
	aleph315_2:1.4
	aleph315_1:1.4
	aleph315:1.4
	aleph314_2:1.4
	aleph314_1:1.4
	aleph314:1.4
	aleph313_1:1.4
	aleph313:1.4
	aleph312_1:1.4
	aleph312:1.4
	aleph311_1:1.4
	aleph311:1.4
	aleph310_3:1.4
	aleph310_2:1.4
	aleph310_1:1.4
	aleph310:1.4
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.4
date	98.10.28.10.29.04;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	98.10.28.08.56.30;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.09.04.14.11.00;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.53;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.54;	author flr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@alephlib 310 4th test
@
text
@      FUNCTION CORAD94(EN,TH,PH)
C -------------------------------------------------------------
CKEY GAMPACK ECAL
C! Correct ECAL cluster energy
C - Author: M.N Minard          930406
C - Revised : M.N Minard        981810 to use EGAZ bank when available
C - Input : EN      : Energy of cluster from 4 towers
C-          TH      : Cluster theta angle (rad)
C-          PH      : Cluster PHI angle (rad)
C - Output: CORAD94 : corrected energy
C -----------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "egozjj.h"
#include "egazjj.h"
      EXTERNAL CHAINT, NAMIND
      CHARACTER*4 CHAINT
      CHARACTER*8 PRNAM
      INTEGER ALGTDB, GTSTUP
      CHARACTER DET*2,LIST*8
      PARAMETER( IDEVRM = 241 )
C
      DATA DET    / 'EC' /
      DATA LIST   / 'EGOZEGAZ' /
      DATA IFIRST / 0 / 
      DATA IROLD, IROLDI, IROLDC  / 0 , 0 , 0 /
#include "bmacro.h"
C ----------------------------------------------------------------
       IF ( IFIRST .EQ. 0) THEN 
         NAEGOZ = NAMIND('EGOZ')
         NAEGAZ = NAMIND('EGAZ')
         IF ( IW(NAMIND('OLGA')).NE.O ) IROLDC =2
       ENDIF
       CORAD94 = 1.

       
C
C- Get EGOZ, EGAZ bank from DB
#include "gtdbbk.h"
C
C
C-     New bank asked , if not there old processing
C
C-     Check data or Monte-Carlo
C
       KRUNH = IW(NAMIND('RUNH'))
       IF (KRUNH.NE.0) IROLDI = IW(KRUNH+1)
       IF (IROLDI.LT.1001) IROLDI=0
       IF(IROLDC.EQ.0.AND.IW(NAEGAZ).EQ.0.AND.IFIRST.EQ.0) THEN 
         IROLDC = 1+IROLDC
       ENDIF
C
C-     Check type database version
C
       IF (IFIRST.EQ.0) THEN
         CALL ALVERS(ALVERC)
         ILVERC = INT(ALVERC)
         CALL ADBVER(ICVERC,IDVERC)
         IF(ICVERC.LT.IDVERM) IROLDC =1
       ENDIF
C
C-     Write warning 
C
       IF (IFIRST.EQ.0) THEN
         IF (IROLDC.GE.2) THEN
           WRITE(IW(6),201) ICVERC,ILVERC
         ELSEIF(IROLDC.EQ.1.AND.IROLDI.EQ.0)THEN 
           WRITE(IW(6),202) IDVERM-1
         ELSEIF((IROLDC.EQ.0.AND.IROLDI.EQ.0).OR.IROLDI.NE.0)THEN 
           WRITE(IW(6),203) ICVERC,ILVERC
         ENDIF
         IFIRST = 1
       ENDIF
       IF(IROLDC.NE.0)THEN 
         KEGOZ = IW(NAEGOZ)
         IF (KEGOZ.EQ.0) RETURN
C
C-     LOOK FOR CORRECTION FROM EGOZ BANK
C
         NEGOZ = LROWS(KEGOZ)
         COSI = ABS(COS(TH))
         COSI = MIN (COSI,0.999999)
         IROW = 0
         DO IEGOZ = 1,NEGOZ
           IF (COSI.GE.RTABL(KEGOZ,IEGOZ,JEGOTM).AND.
     &         COSI.LT.RTABL(KEGOZ,IEGOZ,JEGOTX)) IROW=IEGOZ
         ENDDO
         GCOR = RTABL(KEGOZ,IROW,JEGOC2) *(1.-
     &        RTABL(KEGOZ,IROW,JEGOC1)/(EN**RTABL(KEGOZ,IROW,JEGOC3)))
         IF(EN.GT.RTABL(KEGOZ,IROW,JEGOC4))THEN
           CORAD94 = 1./GCOR
         ELSE
           ESU = RTABL(KEGOZ,IROW,JEGOC4)
           GCORS= RTABL(KEGOZ,IROW,JEGOC2) *(1.-
     &        RTABL(KEGOZ,IROW,JEGOC1)/(ESU**RTABL(KEGOZ,IROW,JEGOC3)))
           EIN = RTABL(KEGOZ,IROW,JEGOC5)
           GCORI= RTABL(KEGOZ,IROW,JEGOC2) *(1.-
     &        RTABL(KEGOZ,IROW,JEGOC1)/(EIN**RTABL(KEGOZ,IROW,JEGOC3)))
           GCOR1 = (1./(RTABL(KEGOZ,IROW,JEGOC4)-RTABL(KEGOZ,IROW,
     &              JEGOC5)))*(GCORS*(EN-RTABL(KEGOZ,IROW,JEGOC5))
     &              + GCORI*(RTABL(KEGOZ,IROW,JEGOC4)-EN))
           CORAD94 = 1./GCOR1
         ENDIF
       ELSE
         KEGAZ = IW(NAEGAZ)
         IF (KEGAZ.EQ.0) RETURN
C
C-     LOOK FOR CORRECTION FROM EGAZ BANK
C
         NEGAZ = LROWS(KEGAZ)
         COSI = ABS(COS(TH))
         COSI = MIN (COSI,0.999999)
         IROW = 0
         DO IEGAZ = 1,NEGAZ
           IF (COSI.GE.RTABL(KEGAZ,IEGAZ,JEGATM).AND.
     &         COSI.LT.RTABL(KEGAZ,IEGAZ,JEGATX)) IROW=IEGAZ
         ENDDO
         GCOR = (1.-RTABL(KEGAZ,IROW,JEGAC1)
     &         /(EN**RTABL(KEGAZ,IROW,JEGAC3)))
         IF(EN.GT.RTABL(KEGAZ,IROW,JEGAC4))THEN
           IF (EN.GT.RTABL(KEGAZ,IROW,JEGAC6))THEN 
             GCOR = GCOR *(1.-RTABL(KEGAZ,IROW,JEGAC2)
     &             *SQRT(EN-RTABL(KEGAZ,IROW,JEGAC6)))
           ENDIF
           CORAD94 = 1./GCOR
         ELSE
           ESU = RTABL(KEGAZ,IROW,JEGAC4)
           GCORS= (1.-
     &        RTABL(KEGAZ,IROW,JEGAC1)/(ESU**RTABL(KEGAZ,IROW,JEGAC3)))
           EIN = RTABL(KEGAZ,IROW,JEGAC5)
           GCORI= (1.-
     &        RTABL(KEGAZ,IROW,JEGAC1)/(EIN**RTABL(KEGAZ,IROW,JEGAC3)))
           GCOR1 = (1./(RTABL(KEGAZ,IROW,JEGAC4)-RTABL(KEGAZ,IROW,
     &             JEGAC5)))*(GCORS*(EN-RTABL(KEGAZ,IROW,JEGAC5))
     &            + GCORI*(RTABL(KEGAZ,IROW,JEGAC4)-EN))
           CORAD94 = 1./GCOR1
         ENDIF
       ENDIF
 201  FORMAT(//1X,'+---------------------------------------------+'/
     .       1X,'|     Gamma correction package used           |'/
     .       1X,'|     Database ',I4,' ALEPHLIB',I6,'            |'/
     .       1X,'|                                             |'/
     .       1X,'|     Gamma correction as in ALEPHLIB309      |'/
     .       1X,'+---------------------------------------------+'//)
 202  FORMAT(//1X,'+---------------------------------------------+'/
     .       1X,'|     Gamma correction package used           |'/
     .       1X,'|     Database ',I4,' ALEPHLIB 309              |'/
     .       1X,'|                                             |'/
     .       1X,'|     Gamma correction as in ALEPHLIB309      |'/
     .       1X,'|     EGAZ bank missing                       |'/
     .       1X,'+---------------------------------------------+'//)
 203   FORMAT(//1X,'+---------------------------------------------+'/
     .       1X,'|     Gamma correction package updated        |'/
     .       1X,'|     Database ',I4,' ALEPHLIB',I6,'            |'/
     .       1X,'|     EGAZ bank used for data                 |'/
     .       1X,'+---------------------------------------------+'//)


C
       RETURN
       END
#endif
@


1.3
log
@alephlib 310 4th test
@
text
@d6 1
a6 1
C - Revised : M.N Minard        981810
d21 1
a26 1
      DATA IDVERM,ILVERM/241,310/
d53 1
a53 2
C-     Check type processing/reprocessing
C
d57 1
d59 1
a59 3
         ILVERC = INT(ALVERC)
         IF(ICVERC.LT.IDVERM.OR.ILVERC.LT.ILVERM) IROLDC =1
         ENDIF
d68 1
a68 1
           WRITE(IW(6),202) IDVERM-1,ILVERM-1
a73 1

d77 1
a77 1
C 
d101 1
a101 1
     &            + GCORI*(RTABL(KEGOZ,IROW,JEGOC4)-EN))
d123 1
a123 1
     &              *SQRT(EN-RTABL(KEGAZ,IROW,JEGAC6)))
d134 1
a134 1
     &              JEGAC5)))*(GCORS*(EN-RTABL(KEGAZ,IROW,JEGAC5))
d147 1
a147 1
     .       1X,'|     Database ',I4,' ALEPHLIB',I6,'            |'/
d150 1
a150 3
     .       1X,'|     EGAZ bank missing or ALEPHLIB version   |'/
     .       1X,'|     not able to provide the last photon     |'/
     .       1X,'|     corrections                             |'/
@


1.2
log
@add missing C! for dOC
@
text
@d6 1
d15 4
d20 1
a20 1
      CHARACTER DET*2,LIST*4
d23 4
a26 3
      DATA LIST   / 'EGOZ' /
      DATA NAEGOZ / 0 /
      DATA IROLD  / 0 /
d29 5
a33 1
       IF ( NAEGOZ.EQ.0) NAEGOZ = NAMIND('EGOZ')
d35 2
d38 1
a38 1
C- Get EGCO bank from DB
a39 2
       KEGOZ = IW(NAEGOZ)
       IF (KEGOZ.EQ.0) RETURN
d41 40
d83 9
a91 9
       NEGOZ = LROWS(KEGOZ)
       COSI = ABS(COS(TH))
       COSI = MIN (COSI,0.999999)
       IROW = 0
       DO IEGOZ = 1,NEGOZ
        IF (COSI.GE.RTABL(KEGOZ,IEGOZ,JEGOTM).AND.
     &      COSI.LT.RTABL(KEGOZ,IEGOZ,JEGOTX)) IROW=IEGOZ
       ENDDO
       GCOR = RTABL(KEGOZ,IROW,JEGOC2) *(1.-
d93 5
a97 5
       IF(EN.GT.RTABL(KEGOZ,IROW,JEGOC4))THEN
          CORAD94 = 1./GCOR
       ELSE
       ESU = RTABL(KEGOZ,IROW,JEGOC4)
       GCORS= RTABL(KEGOZ,IROW,JEGOC2) *(1.-
d99 2
a100 2
       EIN = RTABL(KEGOZ,IROW,JEGOC5)
       GCORI= RTABL(KEGOZ,IROW,JEGOC2) *(1.-
d102 39
a140 4
          GCOR1 = (1./(RTABL(KEGOZ,IROW,JEGOC4)-RTABL(KEGOZ,IROW,
     &    JEGOC5)))*(GCORS*(EN-RTABL(KEGOZ,IROW,JEGOC5))
     & + GCORI*(RTABL(KEGOZ,IROW,JEGOC4)-EN))
          CORAD94 = 1./GCOR1
d142 22
@


1.1
log
@Initial revision
@
text
@d4 1
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
