head	1.3;
access;
symbols
	aleph316_2:1.3
	aleph316_1:1.3
	aleph316:1.3
	aleph315_7:1.3
	aleph315_6:1.3
	aleph315_5:1.3
	aleph315_4:1.3
	aleph315_3:1.3
	aleph315_2:1.3
	aleph315_1:1.3
	aleph315:1.3
	aleph314_2:1.3
	aleph314_1:1.3
	aleph314:1.3
	aleph313_1:1.3
	aleph313:1.3
	aleph312_1:1.3
	aleph312:1.3
	aleph311_1:1.3
	aleph311:1.3
	aleph310_3:1.3
	aleph310_2:1.2
	aleph310_1:1.1;
locks; strict;
comment	@c @;


1.3
date	98.11.18.13.51.17;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	98.11.17.18.50.27;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	98.11.13.07.48.01;	author cattanem;	state Exp;
branches;
next	;


desc
@@


1.3
log
@variable declaration fixes to xhvfix
@
text
@      SUBROUTINE XHVFIX(XHV)
CKEY XLUMOK TRIG HV /INTERNAL
C----------------------------------------------------------------------
C!   Fix HV status bits
C!   Called from XHVSTA
C!   Author   :-       B. Bloch October 98   general fix routine 
C!
C!   Inputs:           Data Base bank XHVB
C!
C!   Outputs:          logical array XHV(24)
C!
C!   Libraries required: Alephlib
C!
C!   Description:
C!     Load year dependent XHVB bank from database.
C!     Returns the High Voltage status of ALEPH according to
C!     the bit mapping. Special care is taken to repair 
C!     some run-specific cases where the normal HV bits do not reflect 
C!     the actual detector status.
C!======================================================================
#ifndef DOC
      IMPLICIT NONE
      INTEGER irun,iruno,ievt,iper,ipero,irow,iadb,ista,istup,ir,idet
      INTEGER NAXHVB,KXHVB
      LOGICAL FIRST
      SAVE FIRST,NAXHVB,iruno,ipero
#include "bcs.h"
#include "xhvbjj.h"
#include "xhvbit.h"
#include "bmacrod.h"
      LOGICAL XHV(NHVBIT)
      INTEGER ADBRUN,AGETDB,NAMIND
      EXTERNAL ADBRUN,AGETDB,NAMIND
      DATA FIRST /.TRUE./,iruno/-1/,ipero/-1/
#include "bmacro.h"
C----------------------------------------------------------------------
      IF( FIRST ) THEN
        NAXHVB = NAMIND('XHVB')
        FIRST = .FALSE.
      ENDIF
C get run,event number
      call abruev(irun,ievt)
C get which period to load, if still valid use current one
      if ( irun.ne.iruno) then
         iadb = adbrun(' ',irow,iper,irun,istup)
         if (iadb.eq.0) go to 999
         iruno = irun
         if ( iper.ne.ipero) then
            iadb = agetdb('XHVB',irun)
            if (iadb.eq.0) go to 999
            ipero = iper
         endif
      endif
      kxhvb = iw(NAXHVB)
C check if run/event is in the current list of fixes, then fix
      do 10 ir = 1,lrows(KXHVB)
         if (irun.eq.itabl(kxhvb,ir,jxhvru)) then
           if((ievt.ge.itabl(kxhvb,ir,jxhvfe)).and.(ievt.le.itabl(kxhvb,
     &        ir,jxhvle))) then
              idet = itabl(kxhvb,ir,jxhvde)
              ista = itabl(kxhvb,ir,jxhvhv)
              if (ista.eq.0) xhv(idet)= .false.
              if (ista.eq.1) xhv(idet)= .true.
            endif
         endif
 10   continue
C
 999  RETURN 
      END
#endif
@


1.2
log
@bug fix in xhvfix
@
text
@d22 5
a26 1
      SAVE FIRST,NAXVHB,iruno,ipero,lba
d30 1
d34 1
a34 1
      LOGICAL FIRST /.TRUE./,iruno/-1/,ipero/-1/
@


1.1
log
@Bug fix to getlep
@
text
@d27 2
a28 2
      INTEGER ADBRUN,ALGTDB,NAMIND
      EXTERNAL ADBRUN,ALGTDB,NAMIND
a33 1
        lba = junidb(0)
d44 1
a44 1
            iadb = algtdb(lba,'XHVB',iper)
@
