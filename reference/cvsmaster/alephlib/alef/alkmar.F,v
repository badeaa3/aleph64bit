head	1.1;
access;
symbols
	aleph316_2:1.1
	aleph316_1:1.1
	aleph316:1.1
	aleph315_7:1.1
	aleph315_6:1.1
	aleph315_5:1.1
	aleph315_4:1.1
	aleph315_3:1.1
	aleph315_2:1.1
	aleph315_1:1.1
	aleph315:1.1
	aleph314_2:1.1
	aleph314_1:1.1
	aleph314:1.1
	aleph313_1:1.1
	aleph313:1.1
	aleph312_1:1.1
	aleph312:1.1
	aleph311_1:1.1
	aleph311:1.1
	aleph310_3:1.1
	aleph310_2:1.1
	aleph310_1:1.1
	aleph310:1.1
	aleph309_1:1.1
	aleph309:1.1
	aleph308_3:1.1
	aleph308_2:1.1
	aleph308_1:1.1
	aleph308:1.1
	aleph307_6:1.1;
locks; strict;
comment	@c @;


1.1
date	98.04.01.10.34.41;	author cattanem;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Mods for Alephlib 307.6
@
text
@      INTEGER FUNCTION ALKMAR(NSEQ,NRDN,NRDN2)
C------------------------------------------------------------------
C - B.Bloch - 980313
C! Create kine event header KMAR
C - Input :  NRDN,NRDN2 = seeds for the random sequences used
C            NSEQ = number of sequences used
C - Output : ALKMAR = KMAR bank index
C                     0 means not enough space to book the bank
C
C   --------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "kmarjj.h"
      INTEGER NRDN(3),NRDN2(3)
      DATA IFI /0/
C ----------------------------------------------------------------------
C - Book the 'KMAR' bank
      CALL AUBOS ('KMAR',0,LMHLEN+NSEQ*LKMARA,JKMAR,IGARB)
      IF (JKMAR.EQ.0) GOTO 999
      IW(JKMAR+LMHCOL) = LKMARA
      IW(JKMAR+LMHROW) = NSEQ
      CALL BKFMT ('KMAR','I')
C
C - Fill 'KMAR'
      I = 1
      do j = 1,nseq
         KKMAR = JKMAR + LMHLEN + LKMARA*(J-1)
         IW(KKMAR+JKMARN) = NRDN(I)
         IW(KKMAR+JKMASR) = NRDN(I+1)
         IW(KKMAR+JKMATR) = NRDN(I+2)
         I = I + 3
      enddo
C
 999  CONTINUE
      ALKMAR = JKMAR
      RETURN
      END
#endif
@
