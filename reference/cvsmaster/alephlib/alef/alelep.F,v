head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	97.02.10.16.27.13;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.40.33;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.40.34;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@ALELEP calls ALEFIL
@
text
@      REAL FUNCTION ALELEP( IRUN )
C --------------------------------------------------------------
C - F.Ranjard - 900803
C! Returns the LEP energy for a given run
CKEY ALEF LEP ENERGY
C - Input    : IRUN    / I     = run number
C
C Modified  M.Cattaneo   10/02/1997
C Original routine superseded by ALEFIL with new calling sequence
C ------------------------------------------------------------------
#ifndef DOC
C=========================================
C +
C Declarations.
C -
      IMPLICIT NONE

      INTEGER IRUN
      INTEGER JLFIL, IROW

      REAL ALEFIL
      EXTERNAL ALEFIL
C + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
C Entry Point.
C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
C
      ALELEP = ALEFIL( IRUN, JLFIL, IROW )
C
  999 RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
      FUNCTION ALELEP(IRUN)
d3 1
a3 1
C - F.Ranjard - 900703
a6 1
C - Output   : ALELEP  / R     = LEP energy
d8 2
a9 10
C - IF (a row exists for this run in LFIL) THEN
C      ALELEP = LFIL(run,JLFILE)
C   ELSE IF montecarlo (AFID exists) THEN
C      ALELEP = AFID word(JAFIBE)
C   ELSE IF raw data (RLEP exists) THEN
C      ALELEP = RLEP word(JRLELE)*2./1000.
C   ELSE no bank
C      ALELEP = 91.2
C   ENDIF
C   IF ALELEP<50. THEN ALELEP=91.2
d12 14
a25 8
      SAVE NLFIL, NRLEP, ELEPMN, ELEPDF
#include "bcs.h"
#include "afidjj.h"
#include "rlepjj.h"
#include "lfiljj.h"
      DATA NAFID /0/
#include "bmacro.h"
C --------------------------------------------------------------------
d27 1
a27 40
C - set name-indices
      IF (NAFID .EQ. 0) THEN
         NAFID = NAMIND ('AFID')
         NLFIL = NAMIND ('LFIL')
         NRLEP = NAMIND ('RLEP')
         ELEPDF= 91.2
         ELEPMN= 50.
      ENDIF
C
C - get  the LEP energy
C
      IF (IW(NAFID) .NE. 0) THEN
C     montecarlo run
         IF (IW(NRLEP) .NE.0) THEN
            ELEP = REAL(ITABL(IW(NRLEP),1,JRLELE)) / 500.
         ELSE
            ELEP = RTABL (IW(NAFID),1,JAFIBE)
         ENDIF
      ELSE
C
C     not a montecarlo run
C     get LFIL row number for this run from data base
         JLFIL = LFILRU (IRUN,IROW)
         IF (JLFIL.EQ.0 .OR. IROW.LE.0) THEN
C        LFIL does not exist or the run does not exist
C        get RLEP from the SOR record
            IF (IW(NRLEP) .NE. 0) THEN
               ELEP = REAL(ITABL(IW(NRLEP),1,JRLELE)) / 500.
            ELSE
C           noway to find ELEP get the default value
               ELEP = ELEPDF
            ENDIF
         ELSE
C        the run exists in LFIL
            ELEP = RTABL(IABS(JLFIL),IROW,JLFILE)
         ENDIF
      ENDIF
      IF (ELEP.LT.ELEPMN) ELEP = ELEPDF
C
      ALELEP = ELEP
d29 1
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
