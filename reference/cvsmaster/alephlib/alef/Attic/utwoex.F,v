head     1.1;
branch   1.1.1;
access   ;
symbols  aleph212:1.1.1.1 ALEPH212:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     96.02.07.11.40.43;  author flr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.02.07.11.40.44;  author flr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE UTWOEX(NAMI,NUM,ICL1,ICL2,NAMO,IGARB,IER)
C ----------------------------------------------------------------------
C - J.F. Grivaz 15-03-1989
C! Extract two columns from a Tabular Bank
C - Input :
C -   NAMI  = Name of the bank from which the extraction is to be done
C -   NUM = Number of the bank from which the extraction is to be done
C -   ICL1  = First column to extract (will be column 1 in output bank)
C -   ICL2 = Second column to extract (will be column 2 in output bank)
C -   NAMO = Name of the output bank to be created (its number = NUM)
C - Output
C -   IGARB = 1 if Garbage Collection occured
C -           2 if not enough space after Garbage Collection
C -   IER = 1 if Unsuccessful
C - Calls AUBOS                                           from ALEPHLIB
C  ----------------------------------------------------------
#ifndef DOC
#include "bcs.h"
      CHARACTER*4 NAMI,NAMO
#include "bmacro.h"
C ----------------------------------------------------------------------
C
      KINDX = NLINK(NAMI,NUM)
      IF(KINDX.LE.0) GO TO 999
      NCOLS = LCOLS(KINDX)
      IF (ICL1.LE.0.OR.ICL1.GT.NCOLS) GO TO 999
      IF (ICL2.LE.0.OR.ICL2.GT.NCOLS) GO TO 999
      NROWS = LROWS(KINDX)
C
      LTOTO = NROWS*2 + LMHLEN
      CALL AUBOS(NAMO,NUM,LTOTO,KONDX,IGARB)
      IF(IGARB.GE.2) GO TO 100
      IF(IGARB.EQ.1) THEN
        KINDX = NLINK(NAMI,NUM)
        IF(KINDX.LE.0) GO TO 999
      ENDIF
C
      JINDX = KINDX + LMHLEN
      JONDX = KONDX + LMHLEN
      DO 1 I = 1,NROWS
        IW(JONDX+1) = IW(JINDX+ICL1)
        IW(JONDX+2) = IW(JINDX+ICL2)
        JINDX = JINDX + NCOLS
        JONDX = JONDX + 2
    1 CONTINUE
      IW(KONDX+1) = 2
      IW(KONDX+2) = NROWS
      GO TO 100
C
  999 CONTINUE
      IER = 1
C
  100 CONTINUE
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
