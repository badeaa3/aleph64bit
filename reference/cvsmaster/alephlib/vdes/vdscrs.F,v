head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.44.17;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.44.18;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      INTEGER FUNCTION VDSCRS (IVIEW,IROM,ISCH,IMOD,IWAF1,IROS1)
C ----------------------------------------------------------------------
CKEY VDETDES INDEX STRIP / USER
C!  Convert strip channel number to readout strip number
C - Steve Wasserbaech, October 1994
C
C - Input:
C   IVIEW  / I  View number (=1 for z, =2 for r-phi)
C   IROM   / I  Readout module
C   ISCH   / I  Strip channel number
C
C - Output:
C   VDSCRS / I  = VDOK if successful
C               = VDERR if error occurred
C   IMOD   / I  Local module index
C   IWAF1  / I  Local wafer index; if the strip channel is associate
C               with more than one readout strip, the strip with the
C               smallest IWAF is returned
C   IROS1  / I  Readout strip number
C ----------------------------------------------------------------------
#ifndef DOC
C     IMPLICIT NONE
#include "vglobl.h"
#include "vrdoco.h"
#include "vdetge.h"
C
C     Arguments:
      INTEGER IVIEW, IROM, ISCH, IMOD, IWAF1, IROS1
C
C     Local variables
      INTEGER IRET, IWFF, IDUM
C
C     External references:
      INTEGER VIMODR, VFWAFF
C
C ----------------------------------------------------------------------
C
C     Calculate IMOD; let VIMODR check the validity of IVIEW and IROM:
C
      IRET = VIMODR(IVIEW,IROM,IMOD)
C
      IF (IRET .EQ. VDERR) THEN
        VDSCRS = VDERR
C
      ELSEIF (IVIEW .EQ. VVIEWZ) THEN
C
C     z view:
C
C     Check the validity of ISCH:
        IF ((ISCH .LT. 1) .OR. (ISCH .GT. NZSROM)) THEN
          VDSCRS = VDERR
C
        ELSEIF (LZMULT) THEN
C
C     Multiplexing in the z readout--one ROM per module.
C
          IWAF1 = (ISCH-1)/NRDSTZ + 1
          IROS1 = ISCH - (IWAF1 - 1)*NRDSTZ
          VDSCRS = VDOK
C
        ELSE
C
C     No multiplexing--one ROM per wafer.
C
          IWFF = IROM
          IRET = VFWAFF(IWFF,IDUM,IWAF1)
          IROS1 = ISCH
          VDSCRS = VDOK
C
        ENDIF
C
      ELSEIF (IVIEW .EQ. VVIEWP) THEN
C
C     r-phi view:
C
C     Check the validity of ISCH:
        IF ((ISCH .LT. 1) .OR. (ISCH .GT. NPSROM)) THEN
          VDSCRS = VDERR
C
        ELSE
C
C     The r-phi view is always multiplexed (in a trivial way).
C     The strip channel number is equal to IROS, independent of
C     IWAF.
C
          IWAF1 = 1
          IROS1 = ISCH
          VDSCRS = VDOK
C
        ENDIF
C
C-----------------------------------------------------------------------
C
C     Invalid view:
C
      ELSE
C
        VDSCRS = VDERR
C
      ENDIF
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
