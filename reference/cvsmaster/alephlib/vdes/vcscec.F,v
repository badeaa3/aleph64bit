head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.44.09;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.44.10;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      INTEGER FUNCTION VCSCEC (IVIEW,ISCH1,NSCH,IECH1)
C ----------------------------------------------------------------------
CKEY VDETDES INDEX STRIP / USER
C!  Convert first strip channel in cluster to first electronics channel
C - Steve Wasserbaech, 4 November 1994
C
C   Convert first strip channel in cluster to first electronics channel.
C   This function takes the readout direction into account, i.e., the
C   strip channels and electronics channels may be numbered in the same
C   or in opposite directions.  The output of this function, IECH1,
C   is the lowest electronics channel number in the cluster.  It may
C   correspond to the first or the last strip channel in the cluster.
C
C   If ((IVIEW is valid) .and. (NSCH .gt. 0)) then
C     If ((ISCH1 is a valid strip channel) .and.
C         (ISCH1+NSCH-1 is a valid strip channel)) then
C       If (readout sign = +1) then
C         convert strip channel ISCH1 to electronics channel
C       Else
C         convert strip channel ISCH1+NSCH-1 to electronics channel
C       Endif
C     Endif
C   Endif
C
C - Input:
C   IVIEW  / I  View number (=1 for z, =2 for r-phi)
C   ISCH1  / I  First strip channel number in cluster
C   NSCH   / I  Number of channels in cluster; must be greater than zero
C
C - Output:
C   VCSCEC / I  = VDOK if successful
C               = VDERR if error occurred
C   IECH1  / I  First electronics channel number in cluster;
C               this corresponds to the *last* strip channel in the
C               cluster if the readout direction is -1.
C ----------------------------------------------------------------------
#ifndef DOC
C     IMPLICIT NONE
#include "vglobl.h"
#include "vrdoco.h"
#include "vdetge.h"
C
C     Arguments:
      INTEGER IVIEW, ISCH1, NSCH, IECH1
C
C     Local variables
      INTEGER ISCHL, NSROM, IECOR, IRET
C
C     External references:
      INTEGER VDSCEC
C
C ----------------------------------------------------------------------
C
      IF ((IVIEW .NE. VVIEWZ) .AND. (IVIEW .NE. VVIEWP)) THEN
C
C     invalid view:
        IECH1 = 0
        VCSCEC = VDERR
C
      ELSEIF (NSCH .LE. 0) THEN
C
C     invalid number of channels:
        IECH1 = 0
        VCSCEC = VDERR
C
      ELSE
C
C     The last strip channel in the cluster:
        ISCHL = ISCH1 + NSCH - 1
C
C     Check the validity of ISCH1 and ISCHL:
C
        IF (IVIEW .EQ. VVIEWZ) THEN
          NSROM = NZSROM
          IECOR = IECORZ
        ELSE
          NSROM = NPSROM
          IECOR = IECORP
        ENDIF
C
        IF ((ISCH1 .LT. 1) .OR. (ISCHL .GT. NSROM)) THEN
          IECH1 = 0
          VCSCEC = VDERR
C
        ELSE
C
          IF (IECOR .EQ. +1) THEN
            IRET = VDSCEC(IVIEW,ISCH1,IECH1)
          ELSE
            IRET = VDSCEC(IVIEW,ISCHL,IECH1)
          ENDIF
C
          VCSCEC = VDOK
C
        ENDIF
C
      ENDIF
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
