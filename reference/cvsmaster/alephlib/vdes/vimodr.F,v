head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.44.22;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.44.23;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      INTEGER FUNCTION VIMODR (IVIEW,IROM,IMOD)
C ----------------------------------------------------------------------
CKEY VDETDES INDEX / USER
C!  Calculates local module index from readout module and view
C - Steve Wasserbaech, October 1994
C - Input:
C   IVIEW  / I  View number (=1 for z, =2 for r-phi)
C   IROM   / I  Readout module
C
C - Output:
C   VIMODR / I  = VDOK if successful
C               = VDERR if error occurred
C   IMOD   / I  Local module index
C ----------------------------------------------------------------------
#ifndef DOC
C     IMPLICIT NONE
#include "vglobl.h"
#include "vzpwco.h"
#include "vgindx.h"
#include "vdetge.h"
C
C     Arguments:
      INTEGER IVIEW, IROM, IMOD
C
C ----------------------------------------------------------------------
C
      IF (IVIEW .EQ. VVIEWZ) THEN
C
C     z view:
C
        IF (LZMULT) THEN
C
C     multiplexing; one readout module per module:
C
          IF (IROM .EQ. 1) THEN
            IMOD = 1
            VIMODR = VDOK
C
          ELSEIF (IROM .EQ. IROMAX) THEN
            IMOD = 2
            VIMODR = VDOK
C
          ELSE
C
C     invalid IROM:
            IMOD = 0
            VIMODR = VDERR
C
          ENDIF
C
        ELSE
C
C     no multiplexing; one readout module per face:
C
          IF ((IROM .GE. 1) .AND. (IROM .LE. NWAFEF)) THEN
C
            IF (IROM .LE. NWAFEM) THEN
              IMOD = 1
            ELSE
              IMOD = 2
            ENDIF
            VIMODR = VDOK
C
          ELSE
C
C     invalid IROM:
            IMOD = 0
            VIMODR = VDERR
C
          ENDIF
C
        ENDIF
C
      ELSEIF (IVIEW .EQ. VVIEWP) THEN
C
C     r-phi view:
C
        IF (IROM .EQ. 1) THEN
          IMOD = 1
          VIMODR = VDOK
C
        ELSEIF (IROM .EQ. IROMAX) THEN
          IMOD = 2
          VIMODR = VDOK
C
        ELSE
C
C     invalid IROM:
          IMOD = 0
          VIMODR = VDERR
        ENDIF
C
      ELSE
C
C     invalid view:
C
        IROM = 0
        VIMODR = VDERR
C
      ENDIF
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
