head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.42.49;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.42.50;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@       SUBROUTINE EBCOCL(METH,NUST,PHOT,CORR)
C--------------------------------------------------------------------------
CKEY PHOTONS CORRECTION STOREY THRESHOLD / INTERNAL
C
C       AUTHOR :        JP Albanese - 891010
C                       R.Edgecock  - 900115
C! Compute correction between cluster energy and total energy deposited
C! in ECAL. For now, use the same idea as the original, and calculate
C! the required parameters on the first entry only. This can be modified
C! later if the thresholds start varying between modules.
C
C   Input     :    METH Option index.
C                  NUST      Number of storeys
C                  PHOT      Raw energy , stacks content ,...
C
C   Output    :    CORR      Correction factor.
C
C   Banks     Input     RUNH
C
C--------------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "runhjj.h"
      REAL CLCCOF(2,3)
      DIMENSION PHOT(*)
      INTEGER KODE(4),NREG(3)
      SAVE ISTAR,CLCCOF,IRUNKP,NRUNH
C     for safety SAVE all
      SAVE
      DATA ISTAR /0/
      DATA IRUNKP /0/
      DATA NRUNH /0/
C
      CORR = 1.
      IF( METH .EQ. 1 ) GO TO 98
C Coefficients may change between runs, so put a private run change
C check here
C
      IF (NRUNH.EQ.0) NRUNH=NAMIND('RUNH')
      KRUNH=IW(NRUNH)
      IF (KRUNH.EQ.0) THEN
         IRUNRC = 2001
      ELSE
         IRUNRC = IW(KRUNH+JRUNRN)
      ENDIF
C
      IF (IRUNKP.NE.IRUNRC) ISTAR = 0
C
      IF (ISTAR .EQ. 0) THEN
        ISTAR = 1
        IRUNKP = IRUNRC
C Find the correction coefficients
        CALL EBCLCF(CLCCOF)
      ENDIF
C
C Find out which subcomponent this cluster is in and use the appropriate
C coefficients
C
      CALL EBCDRG(PHOT(5),PHOT(6),ITRW,JFCL,KODE,NREG,IRC)
      IF (IRC.EQ.0) THEN
         ISUBC = NREG(1)
      ELSE
         ISUBC = 2
      ENDIF
C
      ENER = ABS( PHOT(1) )
      ECOCL = CLCCOF(1,ISUBC)/SQRT(ENER) + CLCCOF(2,ISUBC)
      CORR = 1. + ECOCL
   98 CONTINUE
C
       RETURN
       END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
