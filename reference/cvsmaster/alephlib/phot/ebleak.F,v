head	1.3;
access;
symbols
	aleph316_2:1.3
	aleph316_1:1.3
	aleph316:1.3
	aleph315_7:1.3
	aleph315_6:1.3
	aleph315_5:1.3
	aleph315_4:1.3
	aleph315_3:1.3
	aleph315_2:1.3
	aleph315_1:1.3
	aleph315:1.3
	aleph314_2:1.3
	aleph314_1:1.3
	aleph314:1.3
	aleph313_1:1.3
	aleph313:1.3
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.2
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.3
date	99.10.26.09.32.44;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	97.04.25.14.20.50;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.42.52;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.42.53;	author flr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@for Alephlib 313
@
text
@      SUBROUTINE EBLEAK( METH , STAC , ANGL , ECOR )
C ----------------------------------------------------------------------
C   AUTHOR   : J.Badier    15/06/89
C                          10/10/89
C!  Cluster corrected energy for longitudinal and transverse leakage.
CKEY PHOTONS LEAKAGE / INTERNAL
C
C   Input : METH        Correction option.
C           STAC(3)     Stacks content.
C           ANGL(2)     Polar and azimuthal angles in radians.
C
C   Output: ECOR        Corrected energy.
C
C   BANKS :
C     INPUT   : ECLK  Correction parameters.
C               EGTH
C     OUTPUT  : NONE
C     CREATED : NONE
C
C   Calls none.
C   Called by ECOENT
C-----------------------------------------------------
#ifndef DOC
C       The bank EGLK gives the estimated leakage as a function of the
C       logarithm of the energy with the bining define by BIN and as a
C       function of COSI /.7,.85,1./.
C             COSI = 1./ cos( incidence angle )
      PARAMETER ( KBIN = 6 , KCOS = 3 , KRAG = KCOS * 2 )
      DIMENSION STAC(*) , ANGL(*) , SLIM(6)
      DIMENSION BIN(KBIN) , PRLK(KBIN,KRAG) , BCOS(KCOS)
      DIMENSION COR(3) , BRLK(2)
C   EMIN , EMAX : Energy range. EPRG : Factor for the energy bining.
C   DCOS : cos(i) bining.
      PARAMETER( EMIN = .5 , EMAX = 150. , EPRG = 2. , DCOS = .15 )
      PARAMETER( BLK1 = 1.61 , BLK2 = .51 , BLK3 = 2.2 )
#include "egthjj.h"
#include "bcs.h"
      SAVE
      EXTERNAL NAMIND
      DATA KDEB / 0 /
#include "bmacro.h"
C
      ECOR = 1.
      IF( METH .EQ. 1 ) GO TO 98
C   First call.
      IF( KDEB .EQ. 0 ) THEN
        KECLK = IW( NAMIND('ECLK') )
        IF( KECLK .EQ. 0 ) GO TO 98
C   The PRLK content is taken into ECLK.
        DO 12 I = 1 , KRAG
          DO 11 J = 1 , KBIN
            PRLK( J , I ) = RTABL( KECLK , I , J )
   11     CONTINUE
   12   CONTINUE
C   Subcomponents theta limits from EGTH.
        KEGTH = IW(NAMIND( 'EGTH' ) )
        IF( KEGTH .EQ. 0 ) GO TO 98
        TH13 = RTABL( KEGTH , 1 , JEGTT3 )
        TH16 = RTABL( KEGTH , 1 , JEGTT6 )
        TH23 = RTABL( KEGTH , 2 , JEGTT3 )
        TH26 = RTABL( KEGTH , 2 , JEGTT6 )
C   Initialisations.
C   Bining (.5,1.,2.,......,32.,64.)
        DELT = ALOG(EPRG)
        BIN(1) = 0.
        DO 13 I = 2 , KBIN
          BIN(I) = BIN(I-1) + DELT
   13   CONTINUE
        BCOS(KCOS) = 1.
        DO 14 I = KCOS-1 , 1 , -1
          BCOS(I) = BCOS(I+1) - DCOS
   14   CONTINUE
        KDEB = 1
      ENDIF
C   Initialisation ended.
      ENER = STAC(1) + STAC(2) + STAC(3)
C   Energy out of range.
      IF( ENER .LT. EMIN .OR. ENER .GT. EMAX ) GO TO 98
      ENLG = ALOG( ENER )
C
C   Search cosinus of incidence and subdetector.
      IF( ANGL(1) .LE. TH13 ) THEN
        COSI = COS( ANGL(1) )
        IDT = KCOS - 2
      ELSE
        IF( ANGL(1) .GE. TH23 ) THEN
          COSI = - COS( ANGL(1) )
          IDT = KCOS - 2
        ELSE
          IF( ANGL(1) .LT. TH16 .OR. ANGL(1) .GT. TH26 ) GO TO 1
          COSI = SIN( ANGL(1) )
          IDT = - 2
        ENDIF
      ENDIF
C    Searches interpolation intervals.
      I0 = INT( ENLG / DELT + 1.5 )
      IF( I0 .LE. 1 ) I0 = 2
      IF( I0 .GE. KBIN ) I0 = KBIN - 1
C   Normalised distance to the bin I0.
      ECAR = ( ENLG - BIN(I0) ) / DELT
      ECA2 = ECAR ** 2
C   In this version KCOS = 3 and IC = 1 , 3 or 4 , 6 .
      I0C = 2
C
      DO 4 I = 1 , 3
        IC = I0C + IDT + I
        CM = PRLK( I0 - 1 , IC )
        C0 = PRLK( I0 , IC )
        CP = PRLK( I0 + 1 , IC )
C   Quadratic interpolation
        COR(I) = C0 + ECAR * ( .5 * ( CP - CM ) ) +
     +                ECA2 * ( .5 * ( CP + CM ) - C0 )
    4 CONTINUE
C   Quadratic interpolation coefficients.
      XCOS = ( COSI - BCOS(I0C) ) / DCOS
      XCS2 = XCOS ** 2
C   Quadratic interpolation.
      CORR = COR(2) + XCOS * ( .5 * ( COR(3) - COR(1) ) ) +
     +               XCS2 * ( .5 * ( COR(3) + COR(1) ) - COR(2) )
      IF ( CORR.LT.0) CORR=0.
      ECOR = 1. + CORR
      GO TO 98
    1 CONTINUE
      CALL EBSLIM( ANGL(1) , ANGL(2) , SLIM , IER )
      IF( IER .GT. 0 ) GO TO 98
      TOTO = SLIM(6) / ( BLK1 + BLK2 * ENLG )
      ECOR = 1. + EXP( BLK3 - TOTO )
   98 CONTINUE
      RETURN
      END
#endif
@


1.2
log
@Increase energy cuts in /phot
@
text
@d34 1
a34 1
      PARAMETER( EMIN = .5 , EMAX = 100. , EPRG = 2. , DCOS = .15 )
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
      PARAMETER( EMIN = .5 , EMAX = 64. , EPRG = 2. , DCOS = .15 )
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
