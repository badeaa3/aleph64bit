head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.43.07;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.43.08;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@       SUBROUTINE ENOL12(XL1,XL2,ECLU,THET,ESL1N,ESL2N)
C=============================================================
C!     Calculate normalised estimator for photon
C!     Author                             M.N Minard 10/02/92
CKEY PHOTONS
C!
C!     Input   XL1 : 1st longitudinal estimator
C!             XL2 : 2nd longitudinal estimator
C!             ECLU : cluster energy
C!             Thet : Theta of cluster
C!     Output  ESL1N: Normalised 1st estimator
C!             ESL2N: Normalised 2nd estimator
C!     Banks used EL1N , EL2N
C---------------------------------------------------
#ifndef DOC
      SAVE
#include "el1njj.h"
#include "el2njj.h"
#include "bcs.h"
       DIMENSION XPARM(3,2)
       CHARACTER DET*2, LIST*8
       INTEGER ALGTDB,GTSTUP
       DATA NAEL1N,NAEL2N /2*0/, IROLD/0/, DET/'EC'/, LIST/'EL1NEL2N'/
#include "bmacro.h"
C
C - 1st entry
      IF (NAEL1N.EQ.0) THEN
         NAEL1N = NAMIND('EL1N')
         NAEL2N = NAMIND('EL2N')
      ENDIF
C
C-     Access the normalisation bank
C
#include "gtdbbk.h"
       ESL1N = -99.
       ESL2N = -99.
       KEL1N = IW(NAEL1N)
       IF ( KEL1N.EQ.0) GO TO 999
       KEL2N = IW(NAEL2N)
C
C      Choose the parameters according theta range
C
       NEL1N = 0
       IF (KEL1N.NE.0) NEL1N = LROWS(KEL1N)
       DO IEL1N = 1,NEL1N
          JEL1N = KROW(KEL1N,IEL1N)
          IF (THET.GE.RW(JEL1N+JEL1MT).AND.THET.LT.RW(JEL1N+JEL1XT))THEN
             CALL UCOPY(RW(JEL1N+JEL1P1),XPARM(1,1),3)
             CALL UCOPY(RW(JEL1N+JEL1S1),XPARM(1,2),3)
          ENDIF
       ENDDO
       CALL ENOLWF(XL1,ECLU,XPARM,ESL1N)
       NEL2N = 0
       IF (KEL2N.NE.0) NEL2N = LROWS(KEL2N)
       DO IEL2N = 1,NEL2N
          JEL2N = KROW(KEL2N,IEL2N)
          IF (THET.GE.RW(JEL2N+JEL2MT).AND.THET.LT.RW(JEL2N+JEL2XT))THEN
             CALL UCOPY(RW(JEL2N+JEL2P1),XPARM(1,1),3)
             CALL UCOPY(RW(JEL2N+JEL2S1),XPARM(1,2),3)
          ENDIF
       ENDDO
       CALL ENOLWF(XL2,ECLU,XPARM,ESL2N)
 999   CONTINUE
       RETURN
       END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
