head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.43.06;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.43.07;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@       SUBROUTINE ENOF4(F4,ECLU,THET,ESF4N)
C=============================================================
C!     Calculate normalised estimator for photon
C!     Author                             M.N Minard 10/02/92
CKEY PHOTONS
C!
C!     Input    F4 : transverse estimator
C!             ECLU : cluster energy
C!             Thet : Theta of cluster
C!     Output  ESF4N: Normalised  estimator
C!     Banks used EF4N
C---------------------------------------------------
#ifndef DOC
       SAVE
#include "ef4njj.h"
#include "bcs.h"
       DIMENSION XPARM(4,2)
       CHARACTER DET*2, LIST*4
       INTEGER ALGTDB,GTSTUP
       DATA NAEF4N /0/ , IROLD/0/, DET/'EC'/, LIST/'EF4N'/
#include "bmacro.h"
C
C- 1st entry
       IF (NAEF4N.EQ.0) THEN
          NAEF4N = NAMIND('EF4N')
       ENDIF
C
C-     Access the normalisation bank
C
#include "gtdbbk.h"
       ESF4N = -99.
       KEF4N = IW(NAEF4N)
       IF ( KEF4N.EQ.0) GO TO 999
C
C      Choose the parameters according theta range
C
       NEF4N = 0
       IF (KEF4N.NE.0) NEF4N = LROWS(KEF4N)
       DO IEF4N = 1,NEF4N
          JEF4N = KROW(KEF4N,IEF4N)
          IF (THET.GE.RW(JEF4N+JEF4MT).AND.THET.LT.RW(JEF4N+JEF4XT))THEN
             CALL UCOPY(RW(JEF4N+JEF4P1),XPARM(1,1),4)
             CALL UCOPY(RW(JEF4N+JEF4S1),XPARM(1,2),4)
          ENDIF
       ENDDO
C
C      Calculate expected value and sigma
C
       EXP = XPARM(3,1)*((XPARM(1,1)+XPARM(2,1)/SQRT(ECLU))/XPARM(4,1))
       SEXP= XPARM(3,2)*((XPARM(1,2)+XPARM(2,2)/SQRT(ECLU))/XPARM(4,2))
       ESF4N = (F4-EXP)/SEXP
 999   RETURN
       END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
