head	1.1;
access;
symbols
	aleph316_2:1.1
	aleph316_1:1.1
	aleph316:1.1
	aleph315_7:1.1
	aleph315_6:1.1
	aleph315_5:1.1
	aleph315_4:1.1
	aleph315_3:1.1
	aleph315_2:1.1
	aleph315_1:1.1
	aleph315:1.1
	aleph314_2:1.1
	aleph314_1:1.1
	aleph314:1.1
	aleph313_1:1.1
	aleph313:1.1
	aleph312_1:1.1
	aleph312:1.1
	aleph311_1:1.1
	aleph311:1.1
	aleph310_3:1.1
	aleph310_2:1.1
	aleph310_1:1.1
	aleph310:1.1
	aleph309_1:1.1
	aleph309:1.1
	aleph308_3:1.1
	aleph308_2:1.1
	aleph308_1:1.1
	aleph308:1.1
	aleph307_6:1.1
	aleph307_5:1.1
	aleph307_4:1.1
	aleph307_2:1.1
	aleph307_1:1.1
	aleph307:1.1
	aleph306:1.1
	aleph305_4:1.1
	aleph305_3:1.1
	aleph305_2:1.1
	aleph305_1:1.1
	aleph305:1.1
	aleph304_5:1.1
	aleph304_4:1.1
	aleph304_3:1.1
	aleph304_2:1.1
	aleph304_1:1.1
	aleph304:1.1
	aleph303_3:1.1
	aleph303_2:1.1
	aleph303_1_mc1:1.1
	aleph303_1:1.1
	aleph303:1.1
	aleph302_9:1.1
	aleph302_8:1.1
	aleph302_7:1.1
	aleph302_6:1.1
	aleph302_5:1.1
	aleph302_4:1.1
	aleph302_3:1.1
	aleph302_2:1.1
	aleph302_1:1.1
	aleph302:1.1;
locks; strict;
comment	@c @;


1.1
date	97.03.06.11.59.12;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@1st test version aleph302
@
text
@      SUBROUTINE UF2ARC(INNER, OUTER, DBL_TRK, R_COORD,
     &  X_SMOOTH, XY_ARC)
C!  Calculate arc-length along track to reach coordinates
#ifndef DOC
      INTEGER INNER, OUTER
      DOUBLE PRECISION R_COORD(*), X_SMOOTH(5,*), XY_ARC(*)

      DOUBLE PRECISION OMEGA_TRK,D0_TRK,PHI0_TRK,TANL_TRK,Z0_TRK
      DOUBLE PRECISION DBL_TRK(5)

#include "uftcom.h"

      DOUBLE PRECISION RADIUS, CS, SS, RSFI, RCFI
      DOUBLE PRECISION EPS
      PARAMETER (EPS = 1.0D-15)

C  Load local variables

      OMEGA_TRK = DBL_TRK(1)
      TANL_TRK = DBL_TRK(2)
      PHI0_TRK = DBL_TRK(3)
      D0_TRK = DBL_TRK(4)
      Z0_TRK = DBL_TRK(5)

C  Use preliminary fit for initial smoothed state vector
C  The jacobians will be computed at these positions

      CS  = DCOS(PHI0_TRK)*(1.D0-D0_TRK*OMEGA_TRK)
      SS  = DSIN(PHI0_TRK)*(1.D0-D0_TRK*OMEGA_TRK)
      DO I = OUTER, INNER
        RADIUS = R_COORD(I)
        XY_ARC(I)    = 2.D0/OMEGA_TRK*DASIN( 0.5D0*OMEGA_TRK*
     +     DSQRT(DABS((RADIUS**2-D0_TRK**2)/(1.D0-OMEGA_TRK*D0_TRK))) )
        X_SMOOTH(2,I) = Z0_TRK  + XY_ARC(I)*TANL_TRK
        X_SMOOTH(3,I) = PHI0_TRK  + OMEGA_TRK*XY_ARC(I)
        CALL UBA2PI(X_SMOOTH(3,I))
        X_SMOOTH(4,I) = DATAN( TANL_TRK )
        X_SMOOTH(5,I) = OMEGA_TRK
        RSFI = - DCOS(PHI0_TRK+OMEGA_TRK*XY_ARC(I)) + CS
        RCFI = + DSIN(PHI0_TRK+OMEGA_TRK*XY_ARC(I)) - SS +
     +                                  RADIUS*OMEGA_TRK
        IF (DABS(RCFI).LT.EPS) RCFI = DSIGN(EPS, RCFI)
        X_SMOOTH(1,I) = 2.D0 * DATAN2( RSFI, RCFI )
        CALL UBA2PI(X_SMOOTH(1,I))
        X_SMOOTH(1,I) = RADIUS * X_SMOOTH(1,I)
      ENDDO

      RETURN
      END

#endif
@
