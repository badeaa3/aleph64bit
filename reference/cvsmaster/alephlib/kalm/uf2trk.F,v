head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.1
	aleph312:1.1
	aleph311_1:1.1
	aleph311:1.1
	aleph310_3:1.1
	aleph310_2:1.1
	aleph310_1:1.1
	aleph310:1.1
	aleph309_1:1.1
	aleph309:1.1
	aleph308_3:1.1
	aleph308_2:1.1
	aleph308_1:1.1
	aleph308:1.1
	aleph307_6:1.1
	aleph307_5:1.1
	aleph307_4:1.1
	aleph307_2:1.1
	aleph307_1:1.1
	aleph307:1.1
	aleph306:1.1
	aleph305_4:1.1
	aleph305_3:1.1
	aleph305_2:1.1
	aleph305_1:1.1
	aleph305:1.1
	aleph304_5:1.1
	aleph304_4:1.1
	aleph304_3:1.1
	aleph304_2:1.1
	aleph304_1:1.1
	aleph304:1.1
	aleph303_3:1.1
	aleph303_2:1.1
	aleph303_1_mc1:1.1
	aleph303_1:1.1
	aleph303:1.1
	aleph302_9:1.1
	aleph302_8:1.1
	aleph302_7:1.1
	aleph302_6:1.1
	aleph302_5:1.1
	aleph302_4:1.1
	aleph302_3:1.1
	aleph302_2:1.1
	aleph302_1:1.1
	aleph302:1.1;
locks; strict;
comment	@c @;


1.2
date	99.10.26.09.32.25;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	97.03.06.11.59.13;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@for Alephlib 313
@
text
@      SUBROUTINE UF2TRK(TRK_IN, DBL_TRK, *)
C!  Initialize input track and check constraints for Kalman filter
C!
C! Modified: D.Smith 991025 Double precision fixes for Linux
C!
#ifndef DOC
      REAL TRK_IN(5)
      DOUBLE PRECISION OMEGA_TRK,D0_TRK,PHI0_TRK,TANL_TRK,Z0_TRK
      DOUBLE PRECISION DBL_TRK(5)

#include "uftcom.h"

C protect against unphysical tracks

      IF(TRK_IN(1)*TRK_IN(4).GT.1.) RETURN 1

C check curvature

      OMEGA_TRK = DBLE(TRK_IN(1))
      IF ( FIXED_OME ) OMEGA_TRK = DBLE(OME_FIX)
      IF ( OMEGA_TRK .EQ. 0D0 ) OMEGA_TRK = .0000001D0

C convert track params to DOUBLE

      TANL_TRK = DBLE(TRK_IN(2))
      PHI0_TRK  = DBLE(TRK_IN(3))
      D0_TRK  = DBLE(TRK_IN(4))
      Z0_TRK  = DBLE(TRK_IN(5))

C apply constraints if applicable

      IF ( FIXED_TANL ) TANL_TRK = DBLE(TANL_FIX)
      IF ( FIXED_P ) OMEGA_TRK = DSIGN(1.D0,OMEGA_TRK)
     &  /(DBLE(ROVERP*P_FIX)) *
     +  DSQRT(1D0+TANL_TRK*TANL_TRK)

C Load output values

      DBL_TRK(1) = OMEGA_TRK
      DBL_TRK(2) = TANL_TRK
      DBL_TRK(3) = PHI0_TRK
      DBL_TRK(4) = D0_TRK
      DBL_TRK(5) = Z0_TRK

      RETURN
      END
#endif
@


1.1
log
@1st test version aleph302
@
text
@d3 3
d21 1
a21 1
      IF ( OMEGA_TRK .EQ. 0. ) OMEGA_TRK = .0000001D0
d35 1
a35 1
     +  DSQRT(1.+TANL_TRK*TANL_TRK)
@

