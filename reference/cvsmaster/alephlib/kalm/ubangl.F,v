head	1.3;
access;
symbols
	aleph316_2:1.3
	aleph316_1:1.3
	aleph316:1.3
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.1
	aleph302_5:1.1
	aleph302_4:1.1
	aleph302_3:1.1
	aleph302_2:1.1
	aleph302_1:1.1
	aleph302:1.2;
locks; strict;
comment	@c @;


1.3
date	2000.12.04.09.25.10;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	97.04.16.08.17.54;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	97.03.06.11.59.11;	author flr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@alephlib 316 second test
@
text
@      SUBROUTINE UBA2PI(PHI)
C! Bound an angle in the range 0 -> 2pi
C! Modified 2000-12-04  M.Cattaneo :
C!                      Bound angle by taking MOD, instead of DO loop!
#ifndef DOC
      DOUBLE PRECISION PHI
#include "uftcom.h"

      IF( PHI .LT. 0.D0) THEN
        PHI = TWO_PI + MOD( PHI, TWO_PI )
      ELSE IF( PHI .GT. TWO_PI ) THEN
        PHI = MOD( PHI, TWO_PI )
      ENDIF
C
      RETURN
C
      ENTRY UBAPI(PHI)
C! Bound an angle in the range -pi -> pi

      IF( PHI .LT. 0.D0) THEN
        PHI = TWO_PI + MOD( PHI, TWO_PI )
      ELSE IF( PHI .GT. TWO_PI ) THEN
        PHI = MOD( PHI, TWO_PI )
      ENDIF
      IF ( PHI .GT. ONE_PI ) PHI = PHI - TWO_PI

      RETURN
C
      ENTRY UBAPI2(PHI)
C! Bound an angle in the range -pi/2 -> pi/2

      IF ( PHI .GT. HALF_PI ) PHI = PHI - ONE_PI
      IF ( PHI .LT.-HALF_PI ) PHI = PHI + ONE_PI

      RETURN
C
      END
#endif
@


1.2
log
@aleph302_7 : corr in kalm
@
text
@d3 2
d9 5
a13 6
      DO WHILE(PHI.LT.0.D0)
        PHI = PHI + TWO_PI
      ENDDO
      DO WHILE(PHI.GT.TWO_PI)
        PHI = PHI - TWO_PI
      ENDDO
d20 5
a24 6
      DO WHILE(PHI.LT.0.D0)
        PHI = PHI + TWO_PI
      ENDDO
      DO WHILE(PHI.GT.TWO_PI)
        PHI = PHI - TWO_PI
      ENDDO
a25 1
      IF ( PHI .LT.-ONE_PI ) PHI = PHI + TWO_PI
@


1.1
log
@1st test version aleph302
@
text
@d25 2
a26 2
      IF ( PHI .GT. PI ) PHI = PHI - TWO_PI
      IF ( PHI .LT.-PI ) PHI = PHI + TWO_PI
d33 2
a34 2
      IF ( PHI .GT. HALF_PI ) PHI = PHI - PI
      IF ( PHI .LT.-HALF_PI ) PHI = PHI + PI
@
