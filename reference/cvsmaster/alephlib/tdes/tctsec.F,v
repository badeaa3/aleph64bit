head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.2
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	97.05.12.13.40.22;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.43.35;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.43.36;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@correct for transverse drift velocity
@
text
@      SUBROUTINE TCTSEC(ISLOT,RG,PHIG,ZG,RS,RPHIS,ZS)
C
C-----------------------------------------------------------------------
C! Transform coordinates to TPC sector frame,
C! including associated alignment corrections
C!
C!     Author:    R. Johnson 20-3-88
C!     Modified:  R. Johnson 15-4-88
C!
C!     Input:
C!         - ISLOT    /I     Sector number
C!         - RG       /R     Radius in global frame
C!         - PHIG     /R     Phi in global frame
C!         - ZG       /R     Z in global frame
C!     Output:
C!         - RS       /R     Radius in sector frame
C!         - RPHIS    /R     R*Phi in sector frame
C!         - ZS       /R     Z in sector frame
C!
C!----------------------------------------------------------------------
#ifndef DOC
      SAVE
C
#include "alcons.h"
#include "tpgpar.h"
#include "tpgeom.h"
#include "talign.h"
C
      DIMENSION X(3),XS(3)
C
C++   Convert to cartesion coordinates
C
      X(1)=RG*COS(PHIG)
      X(2)=RG*SIN(PHIG)
      X(3)=ZG
C
C++   Correct for transverse drift velocity; unfortunately we need the
C++   drift length to do this...make an approximation.  The worst case
C++   z displacement of a sector due to rotation observed in the data is
C++   50cm * 1mr = 500um, which is much less than the typical drift length.
C++   Any imprecision is then a second order effect, since it will be a
C++   small error in the drift length multiplied by a small angle.
C
      XS(3) = DGLTOS(3,ISLOT)
      DO J = 1,3
        XS(3) = XS(3) + AGLTOS(3,J,ISLOT)*X(J)
      ENDDO
      X(1) = X(1) + XS(3) * ASTOGL(1,3,ISLOT)
      X(2) = X(2) + XS(3) * ASTOGL(2,3,ISLOT)
C
C++   Make a rotation followed by a translation
C
      DO 200 I=1,3
        XS(I)=DGLTOS(I,ISLOT)
        DO 100 J=1,3
          XS(I)=XS(I) + AGLTOS(I,J,ISLOT)*X(J)
  100   CONTINUE
  200 CONTINUE
C
C++   Convert back to cylindrical coordinates.  The angle phi
C++   should be between -pi and pi radians.
C
      RS=SQRT(XS(1)**2+XS(2)**2)
      RPHIS=RS*ATAN2(XS(2),XS(1))
      ZS=XS(3)
C
  999 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@d37 14
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
