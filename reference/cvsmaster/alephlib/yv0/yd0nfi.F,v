head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.45.21;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.45.22;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE YD0NFI(VPR,RAD,D0,FI0,CF,XDN)
C-----------------------------------------------
C!Minimize the dist. in x-y  between track and vpr point
C
C   AUTHOR: M.A.CIOCCI 20/1/90
CKEY YV0 MIN DISTANCE / USER
C
C     INPUT
C            VPR/R  POINT ASSUMED AS BEAM BEAM CROSSING
C            RAD/R   RADIUS CURVATURE
C            D0/R    -CHARGE*D0 (BANK-FRFT)
C            FI0/R   FI0 (BANK FRFT)
C            CF/R    CHARGE
C     OUTPUT
C            XDN(2)/R  COORDINATES OF POINT
C
C     CALLED:
C             YPSIVE
C     CALLS :
C             NONE
C
C             DESCRIPTION
C             ===========
C
C Finds the point coordinates minimizing the distance
C between helix and vpr point
C
C--------------------------------------------------
#ifndef DOC
      SAVE
       REAL VPR(3),XDN(2),RAD,D0,FI0,CF
       XCEN=CF*(RAD-D0)*SIN(FI0)
       YCEN=-CF*(RAD-D0)*COS(FI0)
       COST0=(VPR(1)-XCEN)/(VPR(2)-YCEN)
       COST1=COST0**2+1.
       COST2=SQRT(RAD**2/COST1)
       YY1=YCEN+COST2
       YY2=YCEN-COST2
       XX1=(YY1-YCEN)*COST0+XCEN
       XX2=(YY2-YCEN)*COST0+XCEN
       DIST1=(VPR(1)-XX1)**2+(VPR(2)-YY1)**2
       DIST2=(VPR(1)-XX2)**2+(VPR(2)-YY2)**2
         IF(DIST1.LT.DIST2)THEN
       XDN(1)=XX1
       XDN(2)=YY1
         ELSE
       XDN(1)=XX2
       XDN(2)=YY2
         ENDIF
         RETURN
           END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
