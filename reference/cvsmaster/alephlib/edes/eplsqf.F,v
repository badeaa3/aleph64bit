head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.35.47;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.17;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.18;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@      REAL FUNCTION EPLSQF(PLAN,NPLANS,LISPL,POINT)
C.----------------------------------------------------------------------
CKEY ECALDES QUASI LINEAR SEARCH / INTERNAL
C     H.Videau      Creation 26/10/87   Modification 03/02/88
C! Quasi linear search on planes,REAL result.
C  Makes a quasi linear search through the planes of a pencil to find
C  the ones surrounding the point,then interpolates.
C  A n'utiliser que pour une suite monotone!
C  To be used only for monotonic series!
C  This is the fastest search of the three but the more restrictive.
C   Calls: none
C   Called internally
C.----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
#include "ecccom.h"
C  Input variables
      INTEGER NPLANS
      REAL PLAN(ECALLS,ECALLP),LISPL(ECALLP,NPLANS),POINT(ECALLS-1)
C  Locales
      INTEGER IC,ICOLD,ICNEW
      REAL CL1,CL2,VOLD,VNEW
C
C Calcul des coordonnees locales : CLi = PLANi.POINT (i=1,2)
      CL1 = PLAN(1,1)*POINT(1) + PLAN(2,1)*POINT(2) +
     +      PLAN(3,1)*POINT(3) + PLAN(4,1)
      CL2 = PLAN(1,2)*POINT(1) + PLAN(2,2)*POINT(2) +
     +      PLAN(3,2)*POINT(3) + PLAN(4,2)
C--- recherche dans une suite quasi-lineaire
      IC    = NPLANS
      ICOLD = 1
      ICNEW = NPLANS
      VOLD  = CL1*LISPL(2,ICOLD) - CL2*LISPL(1,ICOLD)
      IF(VOLD.GT.0.) GO TO 5
      VNEW  = CL1*LISPL(2,ICNEW) - CL2*LISPL(1,ICNEW)
      IF(VNEW.LT.0.) GO TO 6
 3    IC = INT((FLOAT(ICOLD)*VNEW-FLOAT(ICNEW)*VOLD)/(VNEW-VOLD))
      IF(IC.LT.1)      IC=1
      IF(IC.GT.NPLANS) IC=NPLANS
      IF(IC.EQ.ICNEW) GO TO 2
      ICOLD = ICNEW
      VOLD  = VNEW
      ICNEW = IC
      VNEW  = CL1*LISPL(2,ICNEW) - CL2*LISPL(1,ICNEW)
      GO TO 3
 2    IF(IC.NE.NPLANS) THEN
        IF(IABS(ICOLD-ICNEW).GT.1) THEN
          ICOLD = IC + 1
          VOLD  = CL1*LISPL(2,ICOLD) - CL2*LISPL(1,ICOLD)
          GO TO 3
                                   ENDIF
                        ENDIF
      VOLD= CL1*LISPL(2,IC+1) - CL2*LISPL(1,IC+1)
      EPLSQF = FLOAT(IC) -VNEW/(-VNEW+VOLD)
      GO TO 999
 5    CONTINUE
      VNEW  = CL1*LISPL(2,ICOLD+1) - CL2*LISPL(1,ICOLD+1)
      EPLSQF=1. -VOLD/(-VOLD+VNEW)
      GO TO 999
 6    CONTINUE
      VOLD  = CL1*LISPL(2,ICNEW-1) - CL2*LISPL(1,ICNEW-1)
      EPLSQF=FLOAT(NPLANS-1)-VOLD/(-VOLD+VNEW)
C
 999  CONTINUE
      END
#endif
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
