head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.33.53;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.02;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.03;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@        REAL FUNCTION AIRSCT(NPL,PL,SECTION)
C-----------------------------------------------------------------------
CKEY ECALDES SECTION AREA / USER
C     H.Videau      creation   Juin 89
C! Area of a polygon section
C  This function computes the area of the section of a convex volume
C  given by its NPL limiting planes PL by a plane SECTION
C   Input :
C           NPL         number of planes  <= 10       INTEGER
C           PL(4,NPL)   planes coefficients           REAL
C           SECTION(4)  section plane coefficients    REAL
C   Output:
C           AIRSCT
C   Calls: VECT4
C   Called by USER, ERPADS
C----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
C   Input
         INTEGER NPL
         REAL PL(4,*),SECTION(4)
C    Locales
        INTEGER I,J,L,K
        INTEGER NPOINTS,PTPL(2,10),ORD(10)
        REAL COIN(4),POINTS(3,10),VECT(3)
C  Execution
        NPOINTS =0
        DO 1 I=1,NPL-1
          DO 2 J=I+1,NPL
              CALL VECT4(COIN,PL(1,I),PL(1,J),SECTION)
              IF(COIN(4).NE.0.) THEN
                COIN(1)=COIN(1)/COIN(4)
                COIN(2)=COIN(2)/COIN(4)
                COIN(3)=COIN(3)/COIN(4)
C             Test de positivite
              DO 4 L=1,NPL
                IF(L.NE.I.AND.L.NE.J)THEN
                  IF(COIN(1)*PL(1,L)+COIN(2)*PL(2,L)+
     &               COIN(3)*PL(3,L)+PL(4,L).GT.0.) GO TO 2
                END IF
 4            CONTINUE
C                 C est un sommet
                  NPOINTS=NPOINTS+1
                  POINTS(1,NPOINTS)=COIN(1)
                  POINTS(2,NPOINTS)=COIN(2)
                  POINTS(3,NPOINTS)=COIN(3)
                  PTPL(1,NPOINTS)=I
                  PTPL(2,NPOINTS)=J
              END IF
 2        CONTINUE
 1      CONTINUE
C  Ordonnancement des points de la face
        ORD(1)=1
        K=PTPL(2,1)
        DO 12 I=2,NPOINTS
        DO 10 L=1,NPOINTS
         IF(L.EQ.ORD(I-1)) GO TO 10
          IF(PTPL(1,L).EQ.K) THEN
            ORD(I)=L
            K=PTPL(2,L)
            GO TO 12
          END IF
          IF(PTPL(2,L).EQ.K) THEN
            ORD(I)=L
            K=PTPL(1,L)
            GO TO 12
          END IF
 10     CONTINUE
 12     CONTINUE
        ORD(NPOINTS+1)=1
C   calcul de l'aire.
        VECT(1)=0.
        VECT(2)=0.
        VECT(3)=0.
        DO 11 L=1,NPOINTS
        I=ORD(L)
        J=ORD(L+1)
        VECT(1)=VECT(1)+POINTS(2,I)*POINTS(3,J)-POINTS(2,J)*POINTS(3,I)
        VECT(2)=VECT(2)+POINTS(3,I)*POINTS(1,J)-POINTS(3,J)*POINTS(1,I)
        VECT(3)=VECT(3)+POINTS(1,I)*POINTS(2,J)-POINTS(1,J)*POINTS(2,I)
 11     CONTINUE
        AIRSCT=ABS(.5*(VECT(1)*SECTION(1)+VECT(2)*SECTION(2)+
     &               VECT(3)*SECTION(3)))
        END
#endif
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
