head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.34.45;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.10;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.11;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@      INTEGER FUNCTION EFNDST(SC,MD,X,SYSTM)
C.----------------------------------------------------------------------
CKEY ECALDES STACK / USER
C     H.Videau      creation 15/12/85   modification  6/06/88
C! Finds Stack number
C  Looks in the module MD of the subcomponent SC for the
C  stack containing the point X.
C  If the point is outside a stack (in particular in the intermediate
C  plates) ST is set to 0.
C   Input :
C           SC      sub component #                  INTEGER
C           MD      module #          integer        INTEGER
C           X       point coordinates in             REAL(3)
C           SYSTM   coordinate system name           CHARACTER*5
C                   ('ALEPH' for example)
C   Output:
C           EFNDST  Stack #    1<= EFNDST<= 3        INTEGER
C   Called by USER
C.----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
#include "ecccom.h"
C   Input variables
      REAL X(ECALLS-1)
      CHARACTER*5 SYSTM
      INTEGER MD,SC
C    Locales
      INTEGER ST
      REAL LOC1,LOC2,TEST
C
C
      IF(SYSTM.EQ.'ALEPH') THEN
       LOC1= EALIPL(1,1,MD,SC)*X(1)+EALIPL(2,1,MD,SC)*X(2)+
     &       EALIPL(3,1,MD,SC)*X(3)+EALIPL(4,1,MD,SC)
       LOC2= EALIPL(1,2,MD,SC)*X(1)+EALIPL(2,2,MD,SC)*X(2)+
     &       EALIPL(3,2,MD,SC)*X(3)+EALIPL(4,2,MD,SC)
                           ELSE
       LOC1= ELOCPL(1,1)*X(1)+ELOCPL(2,1)*X(2)+
     &       ELOCPL(3,1)*X(3)+ELOCPL(4,1)
       LOC2= ELOCPL(1,2)*X(1)+ELOCPL(2,2)*X(2)+
     &       ELOCPL(3,2)*X(3)+ELOCPL(4,2)
                           END IF
      DO 2 ST=1 ,ECALST
         TEST=-LOC2*ESSCPC(1,ST,SC)+LOC1*ESSCPC(2,ST,SC)
           IF(TEST.GE.0.) GO TO 100
 2    CONTINUE
      ST=ECALST+1
 100    CONTINUE
      ST=ST-1
      IF (ST.GT.0) THEN
C    teste que l'on n'est pas au dela du stack
       TEST= -ESSCPS(1,ST,SC) * LOC2 + ESSCPS(2,ST,SC) * LOC1
      IF(TEST.LT.0.) ST=0
                   END IF
      EFNDST = ST
      END
#endif
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
