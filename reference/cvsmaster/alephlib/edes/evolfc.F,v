head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.36.38;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.22;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.23;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@      SUBROUTINE EVOLFC(VOLNAM,LEFACE,PLANES,PTRFCE,
     &     LEPOIN,XFACE,YFACE,ZFACE)
C.----------------------------------------------------------------------
CKEY ECALDES VOLUME FACE / USER
C     H.Videau      creation 16/06/87   modification 16/06/87
C! Computes volume faces
C   Input :
C           VOLNAM:  name of the volume
C           LEFACE:  number of faces. (commonly 6 or 8)
C           PLANES:  coefficients of the planes
C   Output:
C           PTRFCE:  pointer          (LEFACE+1)
C           LEPOIN:  number of points
C           XFACE :  X of the point of the face
C           YFACE :  Y of the point of the face
C           ZFACE :  Z of the point of the face
C    Computes the faces of a volume named VOLNAM given its limiting
C   PLANES. . The LEPOIN points defining  the contour of the faces in
C   their planes are stored in XFACE,YFACE, ZFACE.
C   PTRFCE contains LEFACE pointers on these arrays to the
C   starting point of each face.
C     This ugly definition is adopted to conform to the fortran binding
C   of GKS for a fill area set.
C   The ordering of the corners to build faces is such that the points
C   go in the trigonometric sense around the normale to the plane.
C   Calls: VECT4
C   Called by USER.
C-----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
#include "ecccom.h"
C    Variables d'input
        INTEGER LEFACE
        CHARACTER*16 VOLNAM
        REAL PLANES(ECALLS,*)
C     Variables d'output
        INTEGER LEPOIN
        INTEGER PTRFCE(*)
        REAL XFACE(*), YFACE(*), ZFACE(*)
C     Locales
        INTEGER I,J,IDEVOL,LECOIN,ECECRP
        PARAMETER (LECOIN=20)
        REAL FNOR,CORNER(ECALLS,LECOIN)
C
C  Get the volume from VOLNAM
      DO 1 I=1,NEVOL
        IF(VOLNAM.EQ.EVOLNM(I)) GO TO 3
 1    CONTINUE
C  Erreur
      GO TO 999
 3    CONTINUE
      IDEVOL=EVOLID(I)
C
C    Loop over the corners by type
      DO 4 I=1,NECRP
      IF(ECRPET(I).NE.EVOLET(IDEVOL)) GO TO 4
        ECECRP=ECRPEC(I)
        CALL VECT4(CORNER(1,ECECRP),PLANES(1,ECRPP1(I)),
     &             PLANES(1,ECRPP2(I)),PLANES(1,ECRPP3(I)))
C    test sur corner(4) et le cas echeant division pour normer le point
        IF(CORNER(4,ECECRP).NE.0.) THEN
                FNOR=1./CORNER(4,ECECRP)
                DO 2 J=1,ECALLS-1
                CORNER(J,ECECRP)=FNOR*CORNER(J,ECECRP)
 2              CONTINUE
        END IF
 4      CONTINUE
C Mise en place des points de la face
        LEPOIN=0
        DO 10 I=1,NEFAC
      IF(EFACET(I).NE.EVOLET(IDEVOL)) GO TO 10
              LEPOIN=LEPOIN+1
              XFACE(EFACEF(I)) = CORNER(1,EFACEC(I))
              YFACE(EFACEF(I)) = CORNER(2,EFACEC(I))
              ZFACE(EFACEF(I)) = CORNER(3,EFACEC(I))
 10     CONTINUE
C Mise en place des pointeurs   A VOIR
        DO 11 I=1,NELTY
      IF(ELTYET(I).NE.EVOLET(IDEVOL)) GO TO 11
      PTRFCE(ELTYEA(I)) = ELTYEF(I)
 11     CONTINUE
      PTRFCE(LEFACE+1)=LEPOIN+1
C
C   Close
 999    CONTINUE
      END
#endif
@


1.1
log
@Initial revision
@
text
@d30 1
a30 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
