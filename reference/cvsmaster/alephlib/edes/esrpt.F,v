head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.36.17;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.20;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.21;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@      SUBROUTINE ESRPT(SYSTM,RW,CL,ST,POINT)
C-----------------------------------------------------------------
CKEY ECALDES STOREY ADDRESS POINT COORDINATES / USER
C     H.Videau      Creation 30/03/87   modification 08/02/88
C! Real i,j,k gives x,y,z.
C  Computes the POINT in space (x,y,z) corresponding to the values
C  RW,CL,ST interpolating the row,column and stack numbers.
C  To do that we look for the storey defined by:
C   INT(RW), INT(CL), INT(ST) then the point is the intersection of the
C  planes linear combinations of the limiting planes of the storeys with
C  weights  1.-FRACT(RW), FRACT(RW) and the same for CL AND ST.
C  It first gets the limiting planes, then computes the intersection
C  of the weighted planes for each family. The relation plane>family
C  is defined by the FMtoPL table.
C   Input :
C         SYSTM character*5 coordinate system name  'ALEPH' for example
C         RW    real :      row index of storey
C         CL    real :      column index of storey
C         ST    real :      stack #
C   Output:  POINT   3 coordinates in SYSTM reference system
C   Calls: ESRPL, VECT4
C   Called by USER.
C-----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
#include "ecccom.h"
C    Variables d'input
        CHARACTER*5 SYSTM
        REAL RW,CL,ST
C     Variable d'output
        REAL POINT(ECALLS-1)
C     Locales
        INTEGER LEFMPL
        PARAMETER (LEFMPL=3)
        INTEGER I,J,LEPLAN,IRW,ICL,IST
        REAL PLANES(ECALLS,6),FNOR,BIPLAN(ECALLS,LEFMPL),WEIGHT(LEFMPL)
        REAL POIPRO(ECALLS)
C    A VOIR
C    Relation FAMILY>PLAN
        INTEGER FMTOPL (2,LEFMPL)
        DATA FMTOPL/1,2,3,4,5,6/
C
        IRW= INT(RW)
        WEIGHT(3)= AMOD(RW,1.)
        ICL= INT(CL)
        WEIGHT(2)= AMOD(CL,1.)
        IST= INT(ST)
        WEIGHT(1)= AMOD(ST,1.)
        CALL ESRPL(SYSTM,IRW,ICL,IST,LEPLAN,PLANES)
        DO 1 I=1,LEFMPL
        DO 2 J=1,ECALLS
        BIPLAN(J,I)=(1.-WEIGHT(I)) * PLANES(J,FMTOPL(1,I))-
     &                  WEIGHT(I)  * PLANES(J,FMTOPL(2,I))
 2      CONTINUE
 1      CONTINUE
        CALL VECT4(POIPRO,BIPLAN(1,1),BIPLAN(1,2),BIPLAN(1,3))
C    test et le cas echeant division pour normer le point a t=1
        IF(POIPRO(4).NE.0.) THEN
                FNOR=1./POIPRO(4)
                DO 3 J=1,ECALLS-1
                POINT(J)=FNOR*POIPRO(J)
 3              CONTINUE
        END IF
        END
#endif
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
