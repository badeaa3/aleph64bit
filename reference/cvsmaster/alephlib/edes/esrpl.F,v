head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.36.15;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.20;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.21;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@      SUBROUTINE ESRPL(SYSTM,RW,CL,ST,LEPLAN,PLANES)
C-----------------------------------------------------------------
CKEY ECALDES STOREY PLANE LIMIT / USER
C     H.Videau      Creation 25/10/86   modification 14/03/90
C! Gives planes limiting storey
C  Gives the LEPLAN planes (8) limiting a storey (RW,CL,ST) in the
C  system 'SYSTM'. They are given in the following order:
C  stack plane interior, stack plane exterior
C  row plane inferior, row plane superior in theta
C   Input :
C           SYSTEM           character*5
C           RW,CL,ST         integer
C   Output:
C           LEPLAN           integer
C           PLANES(4,8)      real
C   Calls: EPLNOR
C   Called by USER.
C-----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
#include "ecccom.h"
C   Variables d'input
        CHARACTER*5 SYSTM
        INTEGER RW,CL,ST
C   Variables d'ouput
        INTEGER LEPLAN
        REAL PLANES(ECALLS,*)
C     Fonctions
        INTEGER NINT
C     Locales
        INTEGER LOCCL,ITCL,MD,SC,RG,SS,I,BARIL,IHRW
        INTEGER STINF,STSUP,CLINF,CLSUP,RWINF,RWSUP
        DATA BARIL/2/
        DATA STINF,STSUP,CLINF,CLSUP,RWINF,RWSUP/1,2,3,4,5,6/
C
        LEPLAN=6
      IHRW=EXROER(RW)
      RG = EXRGER(EROWEX(IHRW))
      SC = EXROES(RW)
        MD=FLOAT(CL-1)/FLOAT(EREGCN(RG))-FLOAT(ESCOCF(SC))*.5+1.
C  Attention a l'offset dans les bouchons
        LOCCL=FLOAT(CL)-
     &       (FLOAT(MD-1)+FLOAT(ESCOCF(SC))*.5)*FLOAT(EREGCN(RG))
C   INTRODUIRE LES BORDS DE MODULES  A VOIR
        IF(MD.EQ.13)MD=1
        ITCL=EREGFR(RG)+LOCCL-1
        SS=1
        IF(SC.NE.BARIL.AND.LOCCL.GT.EREGCN(RG)/2) SS=2
               IF(SYSTM.EQ.'ALEPH')        THEN
          DO 1 I=1,ECALLS
          PLANES(I,STINF)=-ESSCPC(2,ST,SC) *EALIPL(I,1,MD,SC)+
     &                     ESSCPC(1,ST,SC) *EALIPL(I,2,MD,SC)
          PLANES(I,STSUP)=+ESSCPS(2,ST,SC) *EALIPL(I,1,MD,SC)-
     &                     ESSCPS(1,ST,SC) *EALIPL(I,2,MD,SC)
          PLANES(I,CLINF)=-ECOLPC(2,ITCL)  *EALICL(I,1,MD,SC)+
     &                     ECOLPC(1,ITCL)  *EALICL(I,2,MD,SC)
          PLANES(I,CLSUP)=+ECOLPC(2,ITCL+1)*EALICL(I,1,MD,SC)-
     &                     ECOLPC(1,ITCL+1)*EALICL(I,2,MD,SC)
          PLANES(I,RWINF)=-EXROPC(2,RW+SC-1)*EALIRW(I,1,SS,MD,SC)+
     &                     EXROPC(1,RW+SC-1)*EALIRW(I,2,SS,MD,SC)
          PLANES(I,RWSUP)=+EXROPC(2,RW+SC)*EALIRW(I,1,SS,MD,SC)-
     &                     EXROPC(1,RW+SC)*EALIRW(I,2,SS,MD,SC)
 1      CONTINUE
                                    ELSE
          DO 2 I=1,ECALLS
          PLANES(I,STINF)=-ESSCPC(2,ST,SC) *ELOCPL(I,1)+
     &                     ESSCPC(1,ST,SC) *ELOCPL(I,2)
          PLANES(I,STSUP)=+ESSCPS(2,ST,SC) *ELOCPL(I,1)-
     &                     ESSCPS(1,ST,SC) *ELOCPL(I,2)
          PLANES(I,CLINF)=-ECOLPC(2,ITCL)  *ELOCCL(I,1)+
     &                     ECOLPC(1,ITCL)  *ELOCCL(I,2)
          PLANES(I,CLSUP)=+ECOLPC(2,ITCL+1)*ELOCCL(I,1)-
     &                     ECOLPC(1,ITCL+1)*ELOCCL(I,2)
          PLANES(I,RWINF)=-EXROPC(2,RW+SC-1)*ELOCRW(I,1,SS)+
     &                     EXROPC(1,RW+SC-1)*ELOCRW(I,2,SS)
          PLANES(I,RWSUP)=+EXROPC(2,RW+SC)*ELOCRW(I,1,SS)-
     &                     EXROPC(1,RW+SC)*ELOCRW(I,2,SS)
 2      CONTINUE
                                    END IF
C    Normaliser les plans
        DO 3 I=1,LEPLAN
        CALL EPLNOR(PLANES(1,I))
 3      CONTINUE
        END
#endif
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
