head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.36.21;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.20;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.21;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@      SUBROUTINE ETHRU(POINT,V,LEPLAN,PLANES,LENGTH,IMPACT,OUTSID)
C.----------------------------------------------------------------------
CKEY ECALDES IMPACT STRAIGHT LINE VOLUME / USER
C     H.Videau      Creation 09/09/87   Modification
C! Impact on a volume.
C  This routine computes the intersection of a straight line
C  passing through the POINT, having a direction defined by the
C  3-vector V with the convex volume limited by the LEPLAN PLANES.
C  When the point is inside there is always one such intersection.
C   Input :
C           POINT(ECALLS-1)  origine of the vector           ECALLS-1=3
C           V(ECALLS-1)  direction
C           LEPLAN number of planes limiting the volume
C           PLANES(ECALLS,LEPLAN) coefficients of the planes   ECALLS=4
C   LEPLAN and PLANES can be computed with routine EVOLPL which
C   needs only VOLume NAMe as input.
C   Output:
C           LENGTH  distance along the vector between the origin and
C                   the impact
C           IMPACT(ECALLS-1) point of impact
C           OUTSID logical flag
C               OUTSID = .FALSE. when the point is inside the volume
C   Calls: ENORME
C   Called by USER.
C.----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
#include "ecccom.h"
C   Input variables
      INTEGER LEPLAN
      REAL POINT(ECALLS-1),V(ECALLS-1),PLANES(ECALLS,*)
C   Output variables
      REAL LENGTH,IMPACT(ECALLS-1)
      LOGICAL OUTSID
C   Locales variables
      INTEGER LSC(2),I,ILAM,J,K
      REAL PV(10),OP(10)
      REAL W,LAM(2)
C
      CALL ENORME(V)
      DO 2 I=1,LEPLAN
      PV(I)=V(1)*PLANES(1,I)+V(2)*PLANES(2,I)+V(3)*PLANES(3,I)
      OP(I)=POINT(1)*PLANES(1,I)+POINT(2)*PLANES(2,I)+
     &      POINT(3)*PLANES(3,I)+PLANES(4,I)
 2    CONTINUE
      ILAM=0
      OUTSID=.FALSE.
C    Boucle sur les points d'intersection
      DO 3 I=1,LEPLAN
      IF(ABS(PV(I)).LT.0.00001) GO TO 3
C   Boucle sur les plans pour tester la positivite
      DO 4 J=1,LEPLAN
      IF(J.EQ.I) GO TO 4
      W=OP(J)-OP(I)*PV(J)/PV(I)
      IF(W.LT.0.) GO TO 3
 4    CONTINUE
      ILAM=ILAM+1
      LAM(ILAM)=-OP(I)/PV(I)
 3    CONTINUE
      IF(ILAM.EQ.0.OR.LAM(1)*LAM(2).GT.0) THEN
         OUTSID=.TRUE.
      ELSE
         LENGTH=AMAX1(LAM(1),LAM(2))
         DO 5 K=1,ECALLS-1
           IMPACT(K)=LENGTH*V(K)+POINT(K)
 5       CONTINUE
      END IF
      END
#endif
@


1.1
log
@Initial revision
@
text
@d27 1
a27 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
