head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.30.12.34.30;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.08;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.09;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@replace #include "implicit.h" by "IMPLICIT NONE"
Modified Files:
	aire.F airsct.F avolum.F ealgmk.F ealign.F ealtmk.F ecplst.F
@
text
@      INTEGER FUNCTION EFNDCL(SC,MD,X,SYSTM)
C.----------------------------------------------------------------------
CKEY ECALDES COLUMN / USER
C     H.Videau      Creation 15/12/85   Modification 04.02/88
C! Finds column number
C  Looks for the column containing the point X in the module MD of
C  the subcomponent SC.
C   If the module number is wrong or if there is some discrepancy
C  between the module limits and the column limits ( precision or
C  alignement) EFNDCL can correspond to a column outside (by 1) the
C  module.
C   Input :
C           SC      sub component #           INTEGER
C           MD      module #                  INTEGER
C           X       point coordinates in      REAL(3)
C           SYSTM   coordinate system name    CHARACTER * 5
C                   ('ALEPH' for example)
C   Output:
C           EFNDCL  column index 1<= EFNDCL<= 384
C   Calls: EPLSQL,EFNDRG
C   Called by USER
C.----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
#include "ecccom.h"
C  input variables
      INTEGER SC,MD
      REAL X(ECALLS-1)
      CHARACTER*5 SYSTM
C  functions called
      INTEGER EPLSQL,EFNDRG
C  local variables
      INTEGER RG,CL
C
C
C     finds the region of the module MD of the subcomponent SC
C     which contains the point X
       RG=EFNDRG(SC,MD,X,SYSTM)
       IF(RG.EQ.0) THEN
           EFNDCL=0
           GO TO 999
       END IF
C
C  finds the column in the region
      IF(SYSTM.EQ.'ALEPH')    THEN
       CL=EPLSQL(EALICL(1,1,MD,SC),EREGCN(RG)+1,ECOLPC(1,EREGFR(RG)),X)
                              ELSE
       CL=EPLSQL(ELOCCL(1,1),EREGCN(RG)+1,ECOLPC(1,EREGFR(RG)),X)
                              END IF
C
C  Takes into account the offset in the numbering of the columns
C  between the end caps and the barrel
      EFNDCL=CL+NINT((MD-1+.5*ESCOCF(SC))*EREGCN(RG))
      IF(EFNDCL.LE.0)  EFNDCL=EFNDCL+ECALMD*EREGCN(RG)
      IF(EFNDCL.GT.ECALMD*EREGCN(RG)) EFNDCL=EFNDCL-ECALMD*EREGCN(RG)
C
  999 RETURN
C
      END
#endif
@


1.1
log
@Initial revision
@
text
@d24 1
a24 1
#include "implicit.h"
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
