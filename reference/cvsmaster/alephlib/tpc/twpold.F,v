head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.43.44;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.43.45;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE TWPOLD(IT0,NWSMP,IPH,ICHG,TIM,NSMPO,IER)
C
C------------------------------------------------------------------------
C! Reduce a TPC wire pulse to charge and time, as was done in the TPP for
C! all data taken so far.  This is the default production algorithm.
CKEY TPC WIRE REDUCTION
C
C  Author:  R. Johnson    21-1-91
C
C  Input:    IT0       /I        Time of 1st bucket in the pulse
C            NWSMP     /I        Number of samples in the pulse
C            IPH(n)    /I        Array of sample pulse heights
C  Output:   ICHG      /I        Charge estimate
C            TIM       /R        Time estimate
C            NSMPO     /I        Number of samples above threshold
C            IER       /I        Error code
C                                0= all OK
C                                1= pulse does not appear to be from
C                                   a single track
C
C----------------------------------------------------------------------
#ifndef DOC
      SAVE
C
#include "twrprm.h"
C
      DIMENSION IPH(NWSMP)
      LOGICAL FIRST
      DATA FIRST/.TRUE./
C
C++   Check if the last presample is higher than the 1st valid sample
C++   (The hardware should not allow this).
C
      IF (IPH(NPREWP).GT.IPH(NPREWP+1)) THEN
        IER=2
        RETURN
      ENDIF
C
C++   Loop only on the samples above the TPD threshold
C     (i.e. skip the pre and post samples) and find the total
C     charge and charge-weighted time above a threshold
C
      ITHEF=JTHRWP+IPEDWP
      NSAT=0
      ICHG=0
      ISMPT=0
      NSMPO=0
      DO 300 IS=1,NWSMP
        IF (IPH(IS).GT.ITHEF) THEN
          IF (IPH(IS).EQ.255) THEN
            NSAT=NSAT+1
C
C++         Skip this pulse if too many samples are saturated
C
            IF (NSAT.GT.MXSTWP) THEN
              IER=5
              RETURN
            ENDIF
          ENDIF
          NSMPO=NSMPO+1
          ICHG= ICHG + (IPH(IS)-IPEDWP)
          ISMPT= ISMPT + (IPH(IS)-IPEDWP)*IS
        ENDIF
  300 CONTINUE
      IF (NSMPO.GT.MXABWP) THEN
        IER=6
        RETURN
      ENDIF
      IF (ICHG.EQ.0) THEN
        TIM=FLOAT(IT0-1) + 0.5*FLOAT(NWSMP)
      ELSE
        TIM=FLOAT(IT0-1) + FLOAT(ISMPT)/FLOAT(ICHG)
      ENDIF
      IER=0
C
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
