head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.43.24;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.43.25;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE PTBCOJ(LIST,IER)
C
C-----------------------------------------------------------------------
C! Transfer the PTBC bank to the TBCO bank
C!
C!    Author:   R. Johnson  16-06-88
C!    Input :    LIST      BOS event list
C                          if LIST(2:2).eq.'-' then drop POT banks
C     Output:    IER       = 0  successful
C                          = 1  input bank does not exist or is empty
C                          = 2  not enough space
C                          =-1  OK but garbage collection
C!
C!    Called by TPTOJ
C!
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
C
#include "bcs.h"
#include "tbcojj.h"
#include "ptbcjj.h"
#include "ptunjj.h"
#include "tpgpar.h"
#include "tpgeom.h"
#include "tpgeop.h"
C
      CHARACTER*(*) LIST, PLIST*4, JLIST*4
      LOGICAL FIRST
      DATA FIRST/.TRUE./
C
#include "bmacro.h"
C
      IF (FIRST) THEN
        FIRST=.FALSE.
        NPTBC=NAMIND('PTBC')
        NPTUN=NAMIND('PTUN')
        NTBCO=NAMIND('TBCO')
        CALL BKFMT('TBCO','2I,(I,6F,I)')
      ENDIF
C
      KPTBC=IW(NPTBC)
      KPTUN=IW(NPTUN)
      IER = 1
      IF (KPTBC.EQ.0 .OR. KPTUN.EQ.0) GOTO 999
      IF (LROWS(KPTBC).EQ.0 .OR. LROWS(KPTUN).EQ.0) GOTO 999
C
      LEN=LTBCOA*LROWS(KPTBC)+LMHLEN
      IW(1)=1
      CALL AUBOS('TBCO',0,LEN,KTBCO,IER)
      IF (IER.EQ.2) GOTO 999
      JLIST = 'TBCO'
      IF (IER.EQ.1) THEN
        KPTUN=IW(NPTUN)
        KPTBC=IW(NPTBC)
      ENDIF
      IW(KTBCO+LMHCOL)=LTBCOA
      IW(KTBCO+LMHROW)=LROWS(KPTBC)
C
      IPTUN=KPTUN+LMHLEN
      DO 500 IC=1,LROWS(KPTBC)
        ISLOT=ITABL(KPTBC,IC,JPTBSL)
        IROW=ITABL(KPTBC,IC,JPTBSR)
        ISTYP=ITPTYP(ISLOT)
        IF (ISTYP.NE.1) THEN
          IROWG=IROW+NTPDRW(1)
        ELSE
          IROWG=IROW
        ENDIF
        PHI=FLOAT(ITABL(KPTBC,IC,JPTBPS))*RW(IPTUN+JPTUPB)
        Z=FLOAT(ITABL(KPTBC,IC,JPTBZV))*RW(IPTUN+JPTUZB)
        R= TPDRBG(ISTYP)+(IROW-1)*TPDRST(ISTYP)
        DPHI=PHI+TPDPHW(IROW,ISTYP)
        PAD= (R*DPHI)/TPDSEP(ISTYP)
        IPAD=MIN(NTPDPR(IROW,ISTYP)+2,INT(PAD+1.5))
        RPHI=R*PHI
        CALL TCTGLB(ISLOT,R,RPHI,Z,RG,RPHIG,ZG)
        PHIG=RPHIG/RG
        IW(KROW(KTBCO,IC)+JTBCIN)=100000*IROW+1000*ISLOT+IPAD
        RW(KROW(KTBCO,IC)+JTBCRV)=RG
        RW(KROW(KTBCO,IC)+JTBCPH)=PHIG
        RW(KROW(KTBCO,IC)+JTBCZV)=ZG
        IW(KROW(KTBCO,IC)+JTBCRW)=ITABL(KPTBC,IC,JPTBNP)
        IW(KROW(KTBCO,IC)+JTBCZW)=ITABL(KPTBC,IC,JPTBNB)
        IW(KROW(KTBCO,IC)+JTBCSC)=0
  500 CONTINUE
C
  998 CONTINUE
C - get the drop flag if any, then drop POT banks if required,
C   add JUL banks to S-list
C   POT banks are on PLIST, JUL banks on JLIST
      PLIST = 'PTBC'
#include "jplist.h"
C
      IF (IER.EQ.1) IER = -1
C
  999 CONTINUE
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
