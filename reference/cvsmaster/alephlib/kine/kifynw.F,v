head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.42.30;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.42.31;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE KIFYNW
C -------------------------------------------------------------------
C - F.Ranjard - 890202
CKEY KINE KINGAL BANK FORMAT  / USER  INTERNAL
C! return new format of KINE and/or FKIN
C  bank KINE and/or FKIN is modified in place :
C  KINE : word(4) will contain the mass of the track defined by KINE
C  FKIN : word(4) will contain the mass of the track defined by KINE
C  the routine can be called for any file (old or new format) :
C  a test is made on the creation date to determine the format.
C  the routine must be called before using the KINE/FKIN bank in order
C  to use the same code for old an new format.
C
C - structure: SUBROUTINE subprogram
C              User Entry Name: KIFYNW
C              External References: NAMIND/NLINK(BOS77)
C                                   KIAVER(ALEPHLIB)
C              Comdecks referenced: BCS, BMACRO, KMACRO, FKINJJ
C              Banks referenced: NAME
C
C - usage    : CALL KIFYNW
C
#ifndef DOC
      SAVE
#include "bcs.h"
#include "fkinjj.h"
      DATA NKINE /0/
#include "bmacro.h"
#include "kmacro.h"
C ----------------------------------------------------------------------
C
C - get name-indices of KINE, FKIN and the creation date of the file
      IF (NKINE .EQ. 0) THEN
         NKINE = NAMIND ('KINE')
         NFKIN = NAMIND ('FKIN')
         NAPAR = NAMIND ('PART')
         CALL KIAVER (AVER,IPROG)
         WRITE(IW(6),'(/1X,''+++KIFYNW+++ KINGAL ALEPHLIB '',F5.2)')AVER
      ENDIF
C
C - RETURN if AVER .ge. 9.0 because the format is already the new one
      IF (AVER .GE. 9.0) RETURN
C
C - change energy to mass in KINE if KINE banks exist
      JKINE = NKINE+1
 1    JKINE = IW(JKINE-1)
      IF (JKINE .NE. 0) THEN
         ITYP = KINTYP(JKINE)
         RW(KPARVK(JKINE)+4) = PARMAS(ITYP)
         GOTO 1
      ENDIF
C
C - change energy to mass in FKIN if FKIN bank exists
      JFKIN = IW(NFKIN)
      IF (JFKIN .NE. 0) THEN
         DO 2 N=1,LROWS(JFKIN)
            ITYP  = ITABL(JFKIN,N,JFKIPA)
            KFKIN = KROW(JFKIN,N)
            RW(KFKIN+4) = PARMAS(ITYP)
  2      CONTINUE
      ENDIF
C
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
