head	1.1;
access;
symbols
	aleph316_2:1.1
	aleph316_1:1.1
	aleph316:1.1
	aleph315_7:1.1
	aleph315_6:1.1
	aleph315_5:1.1
	aleph315_4:1.1
	aleph315_3:1.1
	aleph315_2:1.1
	aleph315_1:1.1
	aleph315:1.1
	aleph314_2:1.1
	aleph314_1:1.1
	aleph314:1.1
	aleph313_1:1.1
	aleph313:1.1
	aleph312_1:1.1
	aleph312:1.1
	aleph311_1:1.1
	aleph311:1.1
	aleph310_3:1.1
	aleph310_2:1.1
	aleph310_1:1.1
	aleph310:1.1
	aleph309_1:1.1
	aleph309:1.1
	aleph308_3:1.1
	aleph308_2:1.1
	aleph308_1:1.1
	aleph308:1.1
	aleph307_6:1.1
	aleph307_5:1.1
	aleph307_4:1.1
	aleph307_2:1.1
	aleph307_1:1.1
	aleph307:1.1
	aleph306:1.1
	aleph305_4:1.1
	aleph305_3:1.1
	aleph305_2:1.1
	aleph305_1:1.1
	aleph305:1.1
	aleph304_5:1.1
	aleph304_4:1.1
	aleph304_3:1.1
	aleph304_2:1.1
	aleph304_1:1.1
	aleph304:1.1
	aleph303_3:1.1
	aleph303_2:1.1
	aleph303_1_mc1:1.1
	aleph303_1:1.1
	aleph303:1.1
	aleph302_9:1.1
	aleph302_8:1.1
	aleph302_7:1.1
	aleph302_6:1.1
	aleph302_5:1.1
	aleph302_4:1.1
	aleph302_3:1.1
	aleph302_2:1.1
	aleph302_1:1.1
	aleph302:1.1
	aleph216:1.1
	aleph215_3:1.1
	aleph215_2:1.1
	aleph215:1.1
	aleph214:1.1
	aleph213:1.1;
locks; strict;
comment	@ * @;


1.1
date	96.04.23.16.15.30;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@move the file from c300 to alephlib/c
Added Files:
 	debug.c
@
text
@#include "lpkit.h"
#include "lpglob.h"
#include <stdarg.h>
#include "lpdebug.h"

static void print_indent(void)
{
  int i;

  fprintf(stderr, "%2d", Level);
  if(Level < 50) /* useless otherwise */
    for(i = Level; i > 0; i--)
      fprintf(stderr, "--");
  else
    fprintf(stderr, " *** too deep ***");
  fprintf(stderr, "> ");
} /* print_indent */


void debug_print_solution(void)
{
  int i;

  if(Lp->debug)
    for (i = Rows + 1; i <= Sum; i++)
      {
	print_indent();
        if (Lp->names_used)
	  fprintf(stderr, "%-10s%16.5g\n", Lp->col_name[i - Rows],
		(double)Solution[i]);
        else 
          fprintf(stderr, "Var[%5d]   %16.5g\n", i - Rows,
		  (double)Solution[i]);
      }
} /* debug_print_solution */


void debug_print_bounds(REAL *upbo, REAL *lowbo)
{
  int i;

  if(Lp->debug)
    for(i = Rows + 1; i <= Sum; i++)
      {
	if(lowbo[i] != 0)
	  {
	    print_indent();
            if (Lp->names_used)
	      fprintf(stderr, "%s > %10.3g\n", Lp->col_name[i - Rows],
		      (double)lowbo[i]);
            else
              fprintf(stderr, "Var[%5d]  > %10.3g\n", i - Rows,
		      (double)lowbo[i]);
	  }
	if(upbo[i] != Infinite)
	  {
	    print_indent();
	    if (Lp->names_used)
              fprintf(stderr, "%s < %10.3g\n", Lp->col_name[i - Rows],
		      (double)upbo[i]);
            else
              fprintf(stderr, "Var[%5d]  < %10.3g\n", i - Rows,
		      (double)upbo[i]);
          }
      }
} /* debug_print_bounds */


void debug_print(char *format, ...)
{
  va_list ap;

  if(Lp->debug)
    {
      va_start(ap, format);
      print_indent();
      vfprintf(stderr, format, ap);
      fputc('\n', stderr);
      va_end(ap);
    }
} /* debug_print */

@
