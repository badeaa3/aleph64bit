head	1.3;
access;
symbols
	aleph316_2:1.3
	aleph316_1:1.3
	aleph316:1.3
	aleph315_7:1.3
	aleph315_6:1.3
	aleph315_5:1.3
	aleph315_4:1.3
	aleph315_3:1.3
	aleph315_2:1.3
	aleph315_1:1.3
	aleph315:1.3
	aleph314_2:1.3
	aleph314_1:1.3
	aleph314:1.3
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.3
date	99.12.08.16.29.45;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	99.12.08.16.28.38;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.43.14;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.43.15;	author flr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Alephlib 314, including y2k fixes
@
text
@      SUBROUTINE JPCOMB( SCHEME, PP, IP1, IP2 )
C----------------------------------------------------------------------
CKEY PHYSICS JET JADE
C   Author      : C. Bowdery     18-APR-1991  Does particle combining
C
C   Description
C   ===========
C!   Two particles are combined to a form a 'jet' using the specified
C!   scheme.
C
C
C  input   : SCHEME      CHAR*2, combination scheme: 'E', 'E0', 'P'
C            PP          array of n-vectors (to be modified)
C            IP1         pointer to particle 1 ("winner")
C            IP2         pointer to particle 2 ("loser")
C======================================================================
#ifndef DOC
      SAVE
C
      INTEGER     IP1, IP2
C
      REAL        PP(5,*), PX, PY, PZ, E, PTOT
C
      CHARACTER   SCHEME*2
C
C-----------------------------------------------------------------------
C
C                 Merge the "loser" with the "winner"
C
      PX    = PP(1,IP1) + PP(1,IP2)
      PY    = PP(2,IP1) + PP(2,IP2)
      PZ    = PP(3,IP1) + PP(3,IP2)
      E     = PP(4,IP1) + PP(4,IP2)
C
      PTOT  = SQRT( PX**2 + PY**2 + PZ**2 )
C
      IF( SCHEME .EQ. 'E' ) THEN
        PP(1,IP1) = PX
        PP(2,IP1) = PY
        PP(3,IP1) = PZ
        PP(4,IP1) = E
        PP(5,IP1) = PTOT
C
      ELSEIF( SCHEME .EQ. 'E0' ) THEN
        PP(1,IP1) = E*PX/PTOT
        PP(2,IP1) = E*PY/PTOT
        PP(3,IP1) = E*PZ/PTOT
        PP(4,IP1) = E
        PP(5,IP1) = E
C
      ELSEIF( SCHEME .EQ. 'P' ) THEN
        PP(1,IP1) = PX
        PP(2,IP1) = PY
        PP(3,IP1) = PZ
        PP(4,IP1) = PTOT
        PP(5,IP1) = PTOT
C
      ELSE
        PP(1,IP1) = 0.0
        PP(2,IP1) = 0.0
        PP(3,IP1) = 0.0
        PP(4,IP1) = 0.0
        PP(5,IP1) = 0.0
      ENDIF
C
C                      Kill the "loser"
C
      PP(1,IP2) =  0.0
      PP(2,IP2) =  0.0
      PP(3,IP2) =  0.0
      PP(4,IP2) =  0.0
      PP(5,IP2) = -1.0
C
      RETURN
      END
#endif
@


1.2
log
@Alephlib 314, including y2k fixes
@
text
@a15 5
C
C Modification Log
C
C 22-Jul-1996 RWL Jones  Use INDEX to test CHARACTER variables
C
d17 1
d37 8
a44 1
      IF( INDEX(SCHEME,'E0').GT.0 ) THEN
d51 1
a51 8
      ELSEIF( INDEX(SCHEME,'E').GT.0 ) THEN
        PP(1,IP1) = PX
        PP(2,IP1) = PY
        PP(3,IP1) = PZ
        PP(4,IP1) = E
        PP(5,IP1) = PTOT
C
      ELSEIF( INDEX(SCHEME,'P').GT.0 ) THEN
d76 1
a76 1

@


1.1
log
@Initial revision
@
text
@d16 5
a21 1
#ifndef DOC
d41 8
a48 1
      IF( SCHEME .EQ. 'E' ) THEN
d55 1
a55 8
      ELSEIF( SCHEME .EQ. 'E0' ) THEN
        PP(1,IP1) = E*PX/PTOT
        PP(2,IP1) = E*PY/PTOT
        PP(3,IP1) = E*PZ/PTOT
        PP(4,IP1) = E
        PP(5,IP1) = E
C
      ELSEIF( SCHEME .EQ. 'P' ) THEN
d80 1
a80 1
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
