head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.45.10;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.45.11;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE YINVMX(A,O,L,IFAIL)
C----------------------------------------------------------*
C!    invert upper triangle of symmetric matrix stored row wise
CKEY YTOP
C!    Author :     G. Lutz     /11/90
C!
C!
C!    Description
C!    ===========
C!    invert upper triangle of symmetric matrix stored row wise
C!
C!    A ...... matrix input
C!    O ...... inverted matrix output
C!    L ...... matrix dimension
C!
C!
C----------------------------------------------------------*
#ifndef DOC
      SAVE
#include "bcs.h"
C
      DIMENSION A(*),O(*),B(900)
C
C-- Define the logical unit for printout
C
      LOUT = IW(6)
C
      IF(L.GT.30) WRITE(LOUT,10) L
   10 FORMAT (' ======= YINVMX CALLED WITH TOO HIGH DIMENSION =',I5)
C
      IDX=0
      DO 100 I=1,L
        DO 100 J=1,I
          IDX=IDX+1
          I1=(I-1)*L+J
          I2=(J-1)*L+I
          B(I1)=A(IDX)
          B(I2)=A(IDX)
  100 CONTINUE
      CALL RSINV(L,B,L,IFAIL)
      IDX=0
      DO 200 I=1,L
        DO 200 J=1,I
          IDX=IDX+1
          I1=(I-1)*L+J
          O(IDX)=B(I1)
  200 CONTINUE
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
