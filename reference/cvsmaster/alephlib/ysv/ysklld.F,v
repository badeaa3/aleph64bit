head	1.3;
access;
symbols
	aleph316_2:1.3
	aleph316_1:1.3
	aleph316:1.3
	aleph315_7:1.3
	aleph315_6:1.3
	aleph315_5:1.3
	aleph315_4:1.3
	aleph315_3:1.3
	aleph315_2:1.3
	aleph315_1:1.3
	aleph315:1.3
	aleph314_2:1.3
	aleph314_1:1.3
	aleph314:1.3
	aleph313_1:1.3
	aleph313:1.3
	aleph312_1:1.3
	aleph312:1.3
	aleph311_1:1.3
	aleph311:1.3
	aleph310_3:1.3
	aleph310_2:1.3
	aleph310_1:1.3
	aleph310:1.3
	aleph309_1:1.3
	aleph309:1.3
	aleph308_3:1.3
	aleph308_2:1.3
	aleph308_1:1.3
	aleph308:1.3
	aleph307_6:1.3
	aleph307_5:1.3
	aleph307_4:1.3
	aleph307_2:1.3
	aleph307_1:1.3
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.1
	aleph304_3:1.1
	aleph304_2:1.1
	aleph304_1:1.1
	aleph304:1.1
	aleph303_3:1.1
	aleph303_2:1.1
	aleph303_1_mc1:1.1
	aleph303_1:1.1
	aleph302:1.1
	aleph303:1.1
	aleph302_9:1.1
	aleph302_8:1.1
	aleph302_7:1.1
	aleph302_6:1.1
	aleph302_5:1.1;
locks; strict;
comment	@c @;


1.3
date	98.02.04.08.12.51;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	97.08.19.15.20.57;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	97.04.04.07.58.48;	author flr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Protections in ysvtrk,ysklld
@
text
@        SUBROUTINE YSKLLD(IER)
C-----------------------------------------------------------------------------
C!  Flag pairs of tracks identified as a kink
C
C   Returns IER = 0 if successful
C
C       Author - D. Casper      15/07/96
C
C       Modified                08/08/97  Include only charged tracks in
C                                         the kink veto.
C                               03/02/98  Protect against too many tracks
C
C       Input bank:     YKNK    (if present)
C                       YSFT    Translation from FRFT row to YSTL row
C                       YSTL    Track list
C
C       Output bank:    INDYSKL Mask of tracks identified with a kink
C                               (work bank)
C
C------------------------------------------------------------------------------
#ifndef DOC
C
#include "yknkjj.h"
#include "ysftjj.h"
#include "ystljj.h"
#include "ysvwrk.h"
#include "bcs.h"
C
        DATA NYKNK/0/
        SAVE NYKNK
C
#include "bmacro.h"
C
        IF (NYKNK.EQ.0) THEN
            NYKNK = NAMIND('YKNK')
            NYSFT = NAMIND('YSFT')
            NYSTL = NAMIND('YSTL')
        ENDIF
        KYKNK = IW(NYKNK)
        IF (KYKNK.EQ.0) THEN
            IER = 0
            RETURN
        ENDIF
        KYSFT = IW(NYSFT)
        KYSTL = IW(NYSTL)
        IF (KYSFT.LE.0 .OR. KYSTL.LE.0) THEN
            IER = 1
            GOTO 999
        ENDIF
        IER = 2
C
C+ Create the work bank
C
        LYSKL = LMHLEN + 5*LROWS(KYKNK)
        CALL WBANK(IW,INDYSKL,LYSKL,*999)
        IW(INDYSKL-3) = INTCHA('YSKL')
        IW(INDYSKL+LMHCOL) = 5
        IW(INDYSKL+LMHROW) = 0
C
C+ Loop over identified kinks
C
        DO IK = 1, LROWS(KYKNK)
            IF_IN = ITABL(KYKNK,IK,JYKNIT)
            IF (IF_IN .LE. LROWS(KYSFT) .AND. IF_IN.GT.0) THEN
                IY_IN = ITABL(KYSFT,IF_IN,JYSFTN)
            ELSE
                IER = 3
                GOTO 999
            ENDIF
            IF_OUT = ITABL(KYKNK,IK,JYKNOT)
            IF (IF_OUT .LE. LROWS(KYSFT) .AND. IF_OUT.GT.0) THEN
                IY_OUT = ITABL(KYSFT,IF_OUT,JYSFTN)
            ELSE
                IER = 4
                GOTO 999
            ENDIF
            IYSKL = KNEXT(INDYSKL)
            IF (IY_IN.GT.0 .AND. ITABL(KYSTL,IY_IN,JYSTQF).EQ.0) THEN
                ITWRD = (IY_IN-1)/32 + 1
                ITBIT = MOD(IY_IN-1,32)
                IW(IYSKL+ITWRD) = IBSET(IW(IYSKL+ITWRD),ITBIT)
            ENDIF
            IF (IY_OUT.GT.0 .AND. ITABL(KYSTL,IY_OUT,JYSTQF).EQ.0) THEN
                ITWRD = (IY_OUT-1)/32 + 1
                ITBIT = MOD(IY_OUT-1,32)
                IW(IYSKL+ITWRD) = IBSET(IW(IYSKL+ITWRD),ITBIT)
            ENDIF
            IW(INDYSKL+LMHROW) = IW(INDYSKL+LMHROW) + 1
        ENDDO
        IER = 0
 999    CONTINUE
        RETURN
        END
#endif
@


1.2
log
@mods for Alephlib 304.5
@
text
@d11 1
d15 1
d25 1
d37 1
d45 2
a46 1
        IF (KYSFT.LE.0) THEN
d78 1
a78 1
            IF (IY_IN.GT.0) THEN
d83 1
a83 1
            IF (IY_OUT.GT.0) THEN
@


1.1
log
@aleph302 corr.file no.5 add ysv package
@
text
@d9 3
a76 3
            ELSE
                ITBIT = MOD(-IY_IN-1,32)
                IW(IYSKL+4) = IBSET(IW(IYSKL+4),ITBIT)
a81 3
            ELSE
                ITBIT = MOD(-IY_OUT-1,32)
                IW(IYSKL+4) = IBSET(IW(IYSKL+4),ITBIT)
@
