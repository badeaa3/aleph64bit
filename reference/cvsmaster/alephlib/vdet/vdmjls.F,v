head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.44.45;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.44.46;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      INTEGER FUNCTION VDMJLS (CLOC, ILAY, IWFF, IFAC, IVIEW)
C ----------------------------------------------------------------------
CKEY VDETDES / USER
C!  Calculates line index for VDET91 (temporary)
C - John Drinkard, 16 Sep 1991 (original version)
C - Steve Wasserbaech, 20 March 1995
C
C   This is a crude version of VDMJLS that works with the new
C   VDET geometry package, but only for VDET91!  It is designed to
C   reproduce the results of the old version.
C
C   Note: the input coordinate CLOC is a floating number and the
C   output VDMJLS is an integer.  VDMJLS steps by one when CLOC
C   crosses each readout strip.  If CLOC lies between two readout
C   strips, it is not obvious which of the two nearest strips will
C   correspond to VDMJLS.
C
C - Input:
C   CLOC    / R  Local coordinate (w or u) in cm
C   ILAY    / I  Layer index
C   IWFF    / I  Wafer-in-face index
C   IFAC    / I  Local face index
C   IVIEW   / I  View number (=1 for z, =2 for r-phi)
C
C - Output:
C   VDMJLS  / I  What is this?  Today we call this the electronics
C                  channel number + 1.
C ----------------------------------------------------------------------
#ifndef DOC
C     IMPLICIT NONE
      SAVE
C
C     Arguments:
C
      REAL CLOC
      INTEGER ILAY, IWFF, IFAC, IVIEW
C
C     Local variables
C
      INTEGER IRET, IV, NROSTR(2), IRFREQ, MODSN, IORSN
      INTEGER IMOD, IWAF, JFAC, IORI, IROSI
      INTEGER VROSTM, VFWAFF, VJFACI, VFAORI, VNRDIR
      REAL CENT(2), FACT(2), RPITCH
      LOGICAL FIRST
      DATA FIRST / .TRUE. /
C
C ----------------------------------------------------------------------
C
      IF (FIRST) THEN
C       We should not assume that CENT and FACT will be constant
C       throughout the job.  But that's what's being assumed here...
        FIRST = .FALSE.
        DO IV=1,2
          IRET = VROSTM(IV,NROSTR(IV),RPITCH,IRFREQ)
          CENT(IV) = FLOAT(NROSTR(IV))/2. + 0.5
          FACT(IV) = 1./RPITCH
        ENDDO
      ENDIF
C
      VDMJLS = CLOC*FACT(IVIEW) + CENT(IVIEW)
C
C     Readout sign.  What used to be called the readout sign
C     (bank VDSI) is given by VNRDIR, times the relative sign
C     between the w and a or u and b directions.
C
      IRET = VFWAFF(IWFF,IMOD,IWAF)
      MODSN = 2*IMOD - 3
      IRET = VJFACI(ILAY,IFAC,JFAC)
      IRET = VFAORI(JFAC,IORI)
      IORSN = 2*IORI - 3
      IF (IVIEW .EQ. 1) THEN
        IROSI = MODSN
      ELSE
        IROSI = -MODSN*IORSN
      ENDIF
      IROSI = IROSI * VNRDIR(IVIEW)
C
C     If the readout sign is -1, flip the numbering:
C
      IF (IROSI .EQ. -1) THEN
        VDMJLS = NROSTR(IVIEW) + 1 - VDMJLS

      ENDIF
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
