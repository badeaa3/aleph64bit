head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	99.10.26.09.32.56;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.44.50;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.44.51;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@for Alephlib 313
@
text
@      SUBROUTINE VTXRAW(TPAR,RADI,GPOS0,PTRK,IERR)
C-----------------------------------------------------------------------
C! Compute a crude VDET track extrapolation point
CKEY VDET TRACK
C!
C!  - Calculate Z and phi for a given R.
C!
C!   AUTHORS  :- S. MENARY   JAN.  8 1990
C!               J. LAUBER   MAY  16 1990
C!               D. BROWN    OCT  14 1990
C!               D. Brown  13-10-93  Rewritten to avoid recurrent problems
C!   Modified :  D.Smith  991025  Double precision fixes for Linux
C!
C!   Inputs:
C!           TPAR  = FRFT- track parameters
C!           RADI  = Radius at which to calculate the co-ordinates
C!
C!   Outputs:
C!           GPOS0   = XYZ position of track at radius radi
C!           PTRK    = phi of track at radius radi
C!           IERR    = 0     o.k.
C!                   = 1     problem
C!
C!======================================================================
#ifndef DOC
C
C  Inputs+outputs
C
      REAL TPAR(5),RADI,PTRK,GPOS0(3)
      INTEGER IERR
C
C  Local variables
C
      DOUBLE PRECISION OMEGA,TANLAM,PHI0,D0,Z0,RTRK
      DOUBLE PRECISION DELTA,COSWS,SINWS
      DOUBLE PRECISION COSP0,SINP0,SINP,COSP
      DOUBLE PRECISION PHI,TARC
#include "alcons.h"
C
C-----------------------------------------------------------------------
C  Preset flag to success
C
      IERR  = 0
C
C  pack input parameters into local variables
C
      OMEGA = TPAR(1)
      TANLAM = TPAR(2)
      PHI0 = TPAR(3)
      D0 = TPAR(4)
      Z0 = TPAR(5)
C
C  Reject the unphysical cases; first, perfect concentric circles
C
      DELTA = 1D0-D0*OMEGA
      IF(DELTA.EQ.0D0)THEN
         IERR=1
         GOTO 1000
      END IF
C
C  Next, check for intersection
C
      COSWS = ( 1D0 + DELTA**2 - (RADI*OMEGA)**2)/(2D0*DELTA)
      IF(ABS(COSWS).GT.1D0)THEN
         IERR=2
         GOTO 1000
      END IF
      SINWS = SIGN(SQRT(1D0-COSWS**2),OMEGA)
      PHI = DATAN2(SINWS,COSWS)
      TARC = PHI/OMEGA
C
C  Compute the track position at this point
C
      RTRK = 1D0/OMEGA
      SINP0 = SIN(PHI0)
      COSP0 = COS(PHI0)
      SINP = SINWS*COSP0 + COSWS*SINP0
      COSP = COSWS*COSP0 - SINWS*SINP0
      GPOS0(1) =  RTRK*SINP-(RTRK-D0)*SINP0
      GPOS0(2) = -RTRK*COSP+(RTRK-D0)*COSP0
      GPOS0(3) = Z0 + TANLAM*TARC
C
C  Get phi at that point
C
      PTRK = ATAN2(GPOS0(2),GPOS0(1))
      IF (PTRK .LT. 0.0) THEN
        PTRK = PTRK+TWOPI
      END IF
 1000 RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@d11 3
a13 2
C!               D. Brown  13-10-93  Rewritten to avoid
C!                                   recurrant problems
d38 1
a38 2
      REAL PI,TWOPI
      DATA PI/3.1415926/,TWOPI/6.2831853/
d55 2
a56 2
      DELTA = 1.-D0*OMEGA
      IF(DELTA.EQ.0.0)THEN
d63 2
a64 2
      COSWS = ( 1.0 + DELTA**2 - (RADI*OMEGA)**2)/(2.0*DELTA)
      IF(ABS(COSWS).GT.1.0)THEN
d68 2
a69 2
      SINWS = SIGN(SQRT(1.0-COSWS**2),OMEGA)
      PHI = ATAN2(SINWS,COSWS)
d74 1
a74 1
      RTRK = 1.0/OMEGA
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
