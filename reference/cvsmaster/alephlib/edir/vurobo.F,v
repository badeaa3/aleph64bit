head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.2
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.06.03.15.23.27;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.44;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.45;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix multiple symbol definitions
@
text
@      SUBROUTINE VUROBO(N,P,IFLAG,THE,PHI,BEX,BEY,BEZ)
C-----------------------------------------------------------------------
CKEY EDIR ROTATE/BOOST
C! Routine not documented
C-
C   Input  :
C   Output :
C-
C   Called by   : ULTHRU
C   Calls  : None
C   Input banks : None
C-
C                                    Author: J.C.Brient - 910400
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
C --
      DIMENSION P(4,N) ,IFLAG(N)
      DIMENSION ROT(3,3),PV(3)
      DOUBLE PRECISION DP(4),DBEX,DBEY,DBEZ,DGA,DBEP,DGABEP
      IMAX=N
      IF(THE**2+PHI**2.GT.1E-20) THEN
C --
C   Rotate (typically from z axis to direction theta,phi)
C --
        ROT(1,1)=COS(THE)*COS(PHI)
        ROT(1,2)=-SIN(PHI)
        ROT(1,3)=SIN(THE)*COS(PHI)
        ROT(2,1)=COS(THE)*SIN(PHI)
        ROT(2,2)=COS(PHI)
        ROT(2,3)=SIN(THE)*SIN(PHI)
        ROT(3,1)=-SIN(THE)
        ROT(3,2)=0.
        ROT(3,3)=COS(THE)
        DO 120 I=1,IMAX
          IF(IFLAG(I).NE.0) GOTO 120
          DO 100 J=1,3
  100     PV(J)=P(J,I)
           DO 110 J=1,3
  110     P(J,I)=ROT(J,1)*PV(1)+ROT(J,2)*PV(2)+
     $           ROT(J,3)*PV(3)
  120   CONTINUE
      ENDIF
      IF(BEX**2+BEY**2+BEZ**2.GT.1E-20) THEN
C --
C   Lorentz boost (typically from rest to momentum/energy = beta)
C --
        DBEX=BEX
        DBEY=BEY
        DBEZ=BEZ
        DGA=1D0/DSQRT(1D0-DBEX**2-DBEY**2-
     $  DBEZ**2)
        DO 140 I=1,IMAX
          IF(IFLAG(I).NE.0) GOTO 140
          DO 130 J=1,4
  130     DP(J)=P(I,J)
          DBEP=DBEX*DP(1)+DBEY*DP(2)+DBEZ*DP(3)
          DGABEP=DGA*(DGA*DBEP/(1D0+DGA)+DP(4))
          P(1,I)=DP(1)+DGABEP*DBEX
          P(2,I)=DP(2)+DGABEP*DBEY
          P(3,I)=DP(3)+DGABEP*DBEZ
          P(4,I)=DGA*(DP(4)+DBEP)
  140   CONTINUE
      ENDIF
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a66 23
      FUNCTION ULANGL(X,Y)
      ULANGL=0.
C --
C   reconstruct the angle from x and y coordinate
C --
      R=SQRT(X**2+Y**2)
      IF(R.LT.1E-20) RETURN
      IF(ABS(X)/R.LT.0.8) THEN
        ULANGL=SIGN(ACOS(X/R),Y)
      ELSE
        ULANGL=ASIN(Y/R)
        IF(X.LT.0..AND.ULANGL.GE.0.) THEN
          ULANGL=3.1415927-ULANGL
        ELSEIF(X.LT.0.) THEN
          ULANGL=-3.1415927-ULANGL
        ENDIF
      ENDIF
      RETURN
      END
      FUNCTION RLU(IDUM)
      RLU=RNDM(IDUM)
      RETURN
      END
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
