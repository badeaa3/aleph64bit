head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.41.45;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.46;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE WCLUS(NCLUS)
C-----------------------------------------------------------------------
CKEY EDIR CLUSTERS
C! This routine counts the number of clusters using the wires.
C-
C   Input  : None
C   Output : NCLUS  = Number of clusters
C-
C   Called by   : SELCAL
C   Calls  : None
C   Input banks : None
C-
C                                     Author: M.N.Minard - 910400
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
C --
      COMMON / EWIR / EWIRE ( 36 )
      DIMENSION   NDEB(2) , NFIN(2)
      EXTERNAL NAMIND
C --
      NCLUS = 0
      NHIGH = 0
C --
C   Loop on subcomponents
C --
      DO 10 IL = 1, 3
      INIT =0
C --
C   Loop on modules
C --
      DO 9 IPL = 1, 12
      IMOD = (IL-1)*12+IPL
      IF ( EWIRE(IMOD).GT.0.200) THEN
C --
C   Energy above threshold
C --
         IF ( INIT.EQ.0 ) THEN
C --
C   Mark beginning of cluster
C --
           INIT = 1
           ECLU = EWIRE(IMOD)
           IF ( NCLUS.LT.2) THEN
             NDEB(NCLUS+1) = IMOD
           ENDIF
         ELSE
           ECLU = ECLU + EWIRE(IMOD)
         ENDIF
      ELSE
C --
C   Energy below threshold
C --
        IF ( INIT.NE.0) THEN
C --
C   Mark end of cluster
C --
            INIT = 0
            IF (ECLU.GT.3.) THEN
              NCLUS = NCLUS + 1
              IF ( NCLUS.LT.3) THEN
                NFIN (NCLUS) = IMOD - 1
              ENDIF
           ENDIF
        ENDIF
      ENDIF
 9    CONTINUE
      IF ( INIT.NE.0) THEN
         INIT = 0
         IF ( ECLU.GT.65.) NHIGH = NHIGH + 1
         IF (ECLU.GT.3.) THEN
            NCLUS = NCLUS + 1
            IF ( NCLUS.LT.3) THEN
                IF ( NCLUS.EQ.2) THEN
                   IF ( NDEB(1).EQ.(IL-1)*12+1  ) THEN
                      NDEB(1) =(IL-1)*12-(IL*12-NDEB(2))
                      NCLUS = NCLUS-1
                      GO TO 10
                   ENDIF
                ENDIF
              NFIN (NCLUS) = IL*12
            ENDIF
         ENDIF
      ENDIF
 10   CONTINUE
      IGOO = 0
      IF ( NCLUS.GT.1.AND.NHIGH.GT.0 ) NCLUS = 0
      IF ( NCLUS.EQ.1) THEN
          IF (NFIN(1).GT.12.AND.NFIN(1).LT.25) THEN
C --
C   Barrel
C --
             IF (NFIN(1)-NDEB(1).GT.3) NCLUS = 22
          ENDIF
      ENDIF
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
