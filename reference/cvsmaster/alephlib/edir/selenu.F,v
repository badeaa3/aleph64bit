head	1.3;
access;
symbols
	aleph316_2:1.3
	aleph316_1:1.3
	aleph316:1.3
	aleph315_7:1.3
	aleph315_6:1.3
	aleph315_5:1.3
	aleph315_4:1.3
	aleph315_3:1.3
	aleph315_2:1.3
	aleph315_1:1.3
	aleph315:1.3
	aleph314_2:1.3
	aleph314_1:1.3
	aleph314:1.3
	aleph313_1:1.3
	aleph313:1.3
	aleph312_1:1.3
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2;
locks; strict;
comment	@c @;


1.3
date	99.10.08.11.57.44;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.06.24.09.07.04;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.06.14.09.43.18;	author cattanem;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Alephlib 312.1 corrections
@
text
@      SUBROUTINE SELENU (ECNUOK)
C-----------------------------------------------------------------------
CKEY EDIR
C!Look for events with at least one ECAL cluster above some threshold
C!in a module with some wire energy and a reasonable pastis
C-
C     Input  : None
C     Output : ECNUOK is TRUE if good ECAL cluster found
C-
C     Called by  : SELEVT
C     Calls      : nothing
C     Banks used : PEWI (or PWEI), PECO
C-
C   Modified: 19991008 M.Cattaneo
C             Raise cut on maximum wire energy from 200. to 250. GeV
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
C --
#include "bcs.h"
#include "pewijj.h"
#include "pecojj.h"
C --
      LOGICAL ECNUOK
      REAL EECAL, TECAL, EWCAL(36) 
      REAL EECUT, EWCUT, TECUTL, TECUTH

      EXTERNAL NAMIND
 
C     Cut definition
      DATA EECUT / 1.5 /
      DATA TECUT / 250. /
      DATA EWCUT / 0.5 /

C Name indices
      DATA NAPEWI / 0 /
      DATA NAPWEI / 0 /
      DATA NAPECO / 0 /

#include "bmacro.h"
C-----------------------------------------------------------------------
 
C -- Initialise
      ECNUOK = .FALSE.
      NCLUS = 0
      EECAL = 0.
      IEWOK = 0
      CALL VZERO(EWCAL,36)
 
C -- Ecal analysis: wires....allow for PEWI to PWEI change
      ITIMCO = JPEWTI
      IF( NAPEWI .EQ. 0 ) NAPEWI = NAMIND('PEWI')
      KPEWI = IW(NAPEWI)
      IF (KPEWI.EQ.0) THEN
         IF( NAPWEI .EQ. 0 ) NAPWEI = NAMIND('PWEI')
         KPEWI = IW(NAPWEI)
         ITIMCO = 63
      ENDIF

      IF (KPEWI.NE.0) THEN
         NWI = LROWS(KPEWI)
 
C -- Loop over modules:
        DO 30 IP=1,NWI
          IMOD = ITABL(KPEWI,IP,JPEWMN)
 
C -- Add energies of all planes in this module.
C -- Notice that PEWI has only the modules above 50 MeV.
          ENSUM = 0.
          DO 20 IADC=1,45
            ENSUM = ENSUM + FLOAT(ITABL(KPEWI,IP,JPEWPD+IADC-1))/1.E6
   20     CONTINUE
          EWCAL(IMOD) = ENSUM

C -- Check if this energy is above the wire cut
          IF (ENSUM.GT.EWCUT) IEWOK = 1

   30   CONTINUE
 
      ENDIF

C Get the pastis timing
      CALL TIZERN(TECAL, TMEAN, IT0)

C -- Make the wire check
      IF (IEWOK.EQ.0.OR.ABS(TECAL).GT.TECUT) GOTO 130

C -- Now have a look for some clusters
      IF( NAPECO .EQ. 0 ) NAPECO = NAMIND('PECO')
      KPECO = IW(NAPECO)
      IF (KPECO.NE.0) THEN
         NPD = LROWS(KPECO)

         DO IC = 1,NPD

C -- Record the cluster energy and position
C
            CLUSE = RTABL(KPECO,IC,JPECEC)
            PHI   = RTABL(KPECO,IC,JPECPH)
            THETA = RTABL(KPECO,IC,JPECTH)

C -- Check that the cluster energy is above the threshold
            IF (CLUSE.GE.EECUT) THEN
               ECNUOK = .TRUE.
               GOTO 130
            ENDIF

  120       CONTINUE

         ENDDO 

      ENDIF

 130  CONTINUE

      RETURN
      END
#endif




@


1.2
log
@Add TIZERN routine
@
text
@d14 2
d32 1
a32 1
      DATA TECUT / 200. /
@


1.1
log
@First test of alephlib 214
@
text
@d81 1
a81 1
      CALL TIZERO(TECAL, IT0)
@
