head	1.2;
access;
symbols
	aleph316_2:1.2
	aleph316_1:1.2
	aleph316:1.2
	aleph315_7:1.2
	aleph315_6:1.2
	aleph315_5:1.2
	aleph315_4:1.2
	aleph315_3:1.2
	aleph315_2:1.2
	aleph315_1:1.2
	aleph315:1.2
	aleph314_2:1.2
	aleph314_1:1.2
	aleph314:1.2
	aleph313_1:1.2
	aleph313:1.2
	aleph312_1:1.2
	aleph312:1.2
	aleph311_1:1.2
	aleph311:1.2
	aleph310_3:1.2
	aleph310_2:1.2
	aleph310_1:1.2
	aleph310:1.2
	aleph309_1:1.2
	aleph309:1.2
	aleph308_3:1.2
	aleph308_2:1.2
	aleph308_1:1.2
	aleph308:1.2
	aleph307_6:1.2
	aleph307_5:1.2
	aleph307_4:1.2
	aleph307_2:1.2
	aleph307_1:1.2
	aleph307:1.2
	aleph306:1.2
	aleph305_4:1.2
	aleph305_3:1.2
	aleph305_2:1.2
	aleph305_1:1.2
	aleph305:1.2
	aleph304_5:1.2
	aleph304_4:1.2
	aleph304_3:1.2
	aleph304_2:1.2
	aleph304_1:1.2
	aleph304:1.2
	aleph303_3:1.2
	aleph303_2:1.2
	aleph303_1_mc1:1.2
	aleph303_1:1.2
	aleph303:1.2
	aleph302_9:1.2
	aleph302_8:1.2
	aleph302_7:1.2
	aleph302_6:1.2
	aleph302_5:1.2
	aleph302_4:1.2
	aleph302_3:1.2
	aleph302_2:1.2
	aleph302_1:1.2
	aleph302:1.2
	aleph216:1.2
	aleph215_3:1.2
	aleph215_2:1.2
	aleph215:1.2
	aleph214:1.2
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.06.14.09.43.08;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.02.07.11.41.38;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.39;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@First test of alephlib 214
@
text
@      LOGICAL FUNCTION MUTRGS (IDUMMY)
C***********************************************************
CKEY EDIR CLASS26
C! Muon tagging through trigger bits                       *
C  Author: R.Tenchini  920416                              *
C  Modified: M.Cattaneo, 960530                            *
C     For LEP200, ask for 2 ITC track masks instead of     *
C     vetoing with SNG_C_EM trigger bit                    *
C                                                          *
C  INPUT Banks : IXTR + uses ALTRIG, GTSTUP                *
C  OUTPUT Banks : none                                     *
C                                                          *
C  INPUT Arguments :                                       *
C                                                          *
C  IDUMMY = Dummy Argument                                 *
************************************************************
#ifndef DOC
#include "bcs.h"
      LOGICAL BTEST
      INTEGER ALTRIG, NAMIND, GTSTUP
      EXTERNAL ALTRIG, NAMIND, GTSTUP
      INTEGER NAIXTR, IROLD, ICODE
      SAVE NAIXTR, IROLD, ICODE
      DATA NAIXTR / 0 /, IROLD / 0 /
C
      MUTRGS=.FALSE.
      IALT=ALTRIG(IDUM,INFO,INF1)
      IF(IALT.EQ.0) RETURN
C
C Get the beam setup code once per run
      CALL ABRUEV( IRUN, IEVT )
      IF( IRUN .NE. IROLD ) THEN
        ICODE = GTSTUP( 'BE', IRUN )
        IF( ICODE .EQ. -1 ) RETURN
        IROLD = IRUN
      ENDIF
C
C Decide if LEP1 or LEP2 from beam setup code. LEP2 defined to start June 96
      IF( ICODE .LT. 7 ) THEN 
C LEP1
        IF((BTEST(INFO,8).AND.BTEST(INF1,8)).AND.
     &     (BTEST(INFO,27).AND.BTEST(INF1,27)).AND.
     &    .NOT.(BTEST(INFO,9).AND.BTEST(INF1,9))) MUTRGS=.TRUE.
      ELSE
C LEP2
        IF( NAIXTR .EQ. 0 ) NAIXTR = NAMIND( 'IXTR' )
        IF( NAIXTR .EQ. 0 ) RETURN
        KIXTR = IW( NAIXTR )
        IF( KIXTR .EQ. 0 ) RETURN
C
        nITtrk = IAND( IW(KIXTR+2+62),'FF'x )
        IF((BTEST(INFO,8).AND.BTEST(INF1,8)).AND.
     &     (BTEST(INFO,27).AND.BTEST(INF1,27)).AND.
     &     nITtrk.EQ.2 ) MUTRGS=.TRUE.
      ENDIF

      RETURN
      END
#endif

@


1.1
log
@Initial revision
@
text
@d6 3
d10 1
a10 1
C  INPUT Banks : none (uses ALTRIG)                        *
d18 1
d20 5
a24 2
      INTEGER ALTRIG
      EXTERNAL ALTRIG
d29 28
a56 3
      IF((BTEST(INFO,8).AND.BTEST(INF1,8)).AND.
     &   (BTEST(INFO,27).AND.BTEST(INF1,27)).AND.
     &  .NOT.(BTEST(INFO,9).AND.BTEST(INF1,9))) MUTRGS=.TRUE.
d60 1
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
