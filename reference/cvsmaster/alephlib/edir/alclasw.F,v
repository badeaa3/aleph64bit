head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.41.28;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.41.29;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE ALCLASW (KCLASW)
C----------------------------------------------------------------------
CKEY ALEF EDIR CLASS / USER
C - F.Ranjard - 910801                    from M.Talby
C! get ALEPH class word
C-
C   Output :  KCLASW   / I   = 30 bit mask known as EDIR class word
C-
C   Called by   : USER
C   Calls  : SELEVT, ABCLAS,ABGTWCL
C----------------------------------------------------------------------
#ifndef DOC
      LOGICAL EVTFLG(30)
C --------------------------------------------------------------------
C - make the selection
      CALL SELEVT (EVTFLG)
C - set the write class word to 0
      CALL ABCLAS (0)
C - fill the write class word
      ICLAS = 30
      DO 1 IC=1,29
         IF (EVTFLG(IC)) THEN
            ICLAS = IC
            CALL ABCLAS (ICLAS)
         ENDIF
  1   CONTINUE
C - if no class has been selected set class 30
      IF (ICLAS.EQ.30) CALL ABCLAS (30)
C - get write class word from ALPHARD package
      CALL ABGTWCL (KCLASW)
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
