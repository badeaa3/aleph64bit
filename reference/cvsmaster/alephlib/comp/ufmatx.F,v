head	1.1;
access;
symbols
	aleph316_2:1.1
	aleph316_1:1.1
	aleph316:1.1
	aleph315_7:1.1
	aleph315_6:1.1
	aleph315_5:1.1
	aleph315_4:1.1
	aleph315_3:1.1
	aleph315_2:1.1
	aleph315_1:1.1
	aleph315:1.1
	aleph314_2:1.1
	aleph314_1:1.1
	aleph314:1.1
	aleph313_1:1.1
	aleph313:1.1
	aleph312_1:1.1
	aleph312:1.1
	aleph311_1:1.1
	aleph311:1.1
	aleph310_3:1.1
	aleph310_2:1.1
	aleph310_1:1.1
	aleph310:1.1
	aleph309_1:1.1
	aleph309:1.1
	aleph308_3:1.1
	aleph308_2:1.1
	aleph308_1:1.1
	aleph308:1.1
	aleph307_6:1.1
	aleph307_5:1.1
	aleph307_4:1.1
	aleph307_2:1.1
	aleph307_1:1.1
	aleph307:1.1
	aleph306:1.1
	aleph305_4:1.1
	aleph305_3:1.1
	aleph305_2:1.1
	aleph305_1:1.1
	aleph305:1.1
	aleph304_5:1.1
	aleph304_4:1.1
	aleph304_3:1.1
	aleph304_2:1.1
	aleph304_1:1.1
	aleph304:1.1
	aleph303_3:1.1
	aleph303_2:1.1
	aleph303_1_mc1:1.1
	aleph303_1:1.1
	aleph303:1.1
	aleph302_9:1.1
	aleph302_8:1.1
	aleph302_7:1.1
	aleph302_6:1.1
	aleph302_5:1.1
	aleph302_4:1.1
	aleph302_3:1.1
	aleph302_2:1.1
	aleph302_1:1.1
	aleph302:1.1;
locks; strict;
comment	@c @;


1.1
date	97.03.06.11.59.00;	author flr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@1st test version aleph302
@
text
@      SUBROUTINE UFMMUL(RES, A, B, MATDIM)
C! res = a * b, where res, a, b, are 5x5 double precision matrices
C! matdim specifies the dimension of the matrix to multiply.
#ifndef DOC
      IMPLICIT NONE
C
      INTEGER MATDIM
      DOUBLE PRECISION RES(5,5),A(5,5),B(5,5),VEC(5),SCALE,C(5,5)
C
      INTEGER I, J, K, NDIM
      DOUBLE PRECISION TMP, WORK(5), E(5,5)
C
      NDIM = MATDIM
        DO I = 1, NDIM
          DO J = 1, NDIM
            TMP = 0.0D0
            DO K = 1, NDIM
              TMP = TMP + A(J,K) * B(K,I)
            ENDDO
            RES(J,I) = TMP
          ENDDO
        ENDDO
C
      RETURN
C
      ENTRY UFMMLT(RES, A, B, MATDIM)
C! res = a * b^T, where res, a, b, are 5x5 double precision matrices
C! matdim specifies the dimension of the matrix to multiply.
C
      NDIM = MATDIM
        DO I = 1, NDIM
          DO J = 1, NDIM
            TMP = 0.0D0
            DO K = 1, NDIM
              TMP = TMP + A(J,K) * B(I,K)
            ENDDO
            RES(J,I) = TMP
          ENDDO
        ENDDO
C
      RETURN
C
      ENTRY  UFMSCL(RES, A, VEC, MATDIM)
C! res(i,j) = a(i,j) / (vec(i)*vec(j)), where res and a are 5x5
C!     double precision matrices and vec is dimension 5 double precision
C!     vector.
C! matdim specifies the dimension of the matrix to multiply.
C
      NDIM = MATDIM
        DO I = 1, NDIM
          WORK(I) = 1.0D0 / VEC(I)
        END DO
        DO I = 1, NDIM
          TMP = WORK(I)
          DO J = 1, NDIM
            RES(J,I) = A(J,I) * TMP * WORK(J)
          END DO
        END DO
C
      RETURN
C
      ENTRY UFMADD(A,SCALE,B,RES)
C! Add two 5x5 matrices, with scaling: RES = A + SCALE * B
C
      DO I = 1, 5
        DO J = 1, 5
          RES(J,I) = A(J,I) + SCALE * B(J,I)
        ENDDO
      ENDDO
C
      RETURN
C
      ENTRY UFMULT(A,B,C,RES)
C! Multiply three 5x5 matrices, with transpose (RES = A * B * C^T)

      DO I = 1, 5
        DO J = 1, 5
          TMP = 0.D0
          DO K = 1, 5
            TMP = TMP + B(I,K)*C(J,K)
          ENDDO
          E(I,J) = TMP
        ENDDO
      ENDDO

      DO I= 1, 5
        DO J = 1, I
          TMP = 0.D0
          DO K = 1, 5
            TMP = TMP + A(I,K)*E(K,J)
          ENDDO
          RES(I,J) = TMP
          RES(J,I) = TMP
        ENDDO
      ENDDO
C
      RETURN
C
      END
#endif
@
