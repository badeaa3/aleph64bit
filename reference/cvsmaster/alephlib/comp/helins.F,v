head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.40.47;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.40.48;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE HELINS(NR1,NR2,R,V,PHI,Z)
C -----------------------------------------------------------------
C! Calculates intersection of a helix with a set of radii
C    AUTHOR: MARTIN POPPE
C!   CHANGE: MARTIN POPPE   22.JULY 1987
C!   INPUT: NR1, NR2    = RANGE OF INDICES IN R,V,PHI,Z
C!          R(NR1-NR2)  = RADII
C!          V(1-5)      = HELIX PARAMETERS (AS IN TGFT)
C!  OUTPUT: PHI(NR1-NR2)= PHI VALUES PREDICTED
C!          Z(NR1-NR2)  = Z   VALUES PREDICTED
C -------------------------------------------------------------
#ifndef DOC
      SAVE
C
      DIMENSION R(*),V(*),PHI(*),Z(*)
                           A =  1.0
      IF(V(1).LT.0.0)      A = -1.0
      IF(ABS(V(1)).GT.0.0000001) THEN
        DO 10 I=NR1,NR2
        IF(R(I).LT.ABS(V(4)))    GO TO 10
        X =
     1    ( V(1)*(R(I)*R(I)-V(4)*V(4))/( 2.0*R(I)*(V(1)*V(4)-A) )
     2     +V(4)/R(I) )
        Y =   0.5*V(1)* SQRT(    ( R(I)*R(I)-V(4)*V(4) )
     1                         /( 1.0-A*V(1)*V(4) )        )
        IF(ABS(X).LT.1.0.AND.ABS(Y).LT.1.0) THEN
          PHI(I) = V(3) + A*ASIN(X)
          S = (2.0/V(1))*ASIN(Y)
          Z(I) = V(5) + V(2)*S
        ELSE
          PHI(I) = 10000.0
          Z(I)   = 10000.0
        END IF
   10   CONTINUE
      ELSE
        DO 20 I=NR1,NR2
C       PRINT *,' USE TAYLOR ET AL'
        PHI(I) = V(3) + A*
     1    ( V(1)*(R(I)*R(I)-V(4)*V(4))/( 2.0*R(I)*(V(1)*V(4)-A) )
     2     +V(4)/R(I) )
        S =  SQRT( R(I)*R(I)+V(4)*V(4)
     1                   +2.0*A*V(4)*R(I)*SIN (V(3)-PHI(I)) )
        Z (I) = V(5) + V(2)*S
   20   CONTINUE
      END IF
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
