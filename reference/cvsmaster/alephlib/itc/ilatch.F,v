head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.42.21;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.42.22;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE ILATCH(LIST,IER)
C-----------------------------------------------------------------------
CKEY ITC WIRE
C! Create 'latched' wire bank IWCR (wire-to-coord relation)
C!
C!    Author     :- W. Atwood
C!    Modified   :- J. Sedgbeer  89/12/08
C!
C!    Input:
C!      LIST   /C    : BOS list to which IWCR is to be added e.g. 'T+'
C!      commons:     /BCS/     for bank ITCO
C!      params:      ITCOJJ
C!
C!    Output:
C!      IER    /I    : = 0 successful
C!                     = 1 input bank is empty or does not exist
C!                     = 2 not enough space (garbage coll. may have
C!                                 been done)
C!                     =-1 O.K. but garbage collection
C!      IWCR bank
C!
C! ILATCH:
C! Create bank IWCR of latched ITC wires for this event. IWCR is
C! really a relation bank which gives the coordinate number for
C! a given wire, or zero if no coord. for the wire - see DDL.
C!
C?  If first then Set name indices and bank formats
C?  Check for non-empty ITCO bank.
C?  Create IWCR bank
C?  Loop over coordinates
C?    fill IWCR
C?  End Loop
C?  Add IWCR to BOS list
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE
C I/O commons and parameters
#include "bcs.h"
#include "itcojj.h"
      CHARACTER*(*) LIST*(*)
      EXTERNAL NAMIND
      LOGICAL FIRST
      DATA FIRST/.TRUE./
      DATA NWMAX/960/
C-----------------------------------------------------------------------
#include "bmacro.h"
C-----------------------------------------------------------------------
      IF(FIRST) THEN
        FIRST = .FALSE.
        NITCO = NAMIND('ITCO')
        NIWCR = NAMIND('IWCR')
        CALL BKFMT('IWCR','I')
      ENDIF
C
C Check for ITCO bank
C
      IER = 1
      JITCO = IW(NITCO)
      IF(JITCO.EQ.0) GOTO 999
      NCO = LROWS(JITCO)
      IF(NCO.EQ.0) GOTO 999
C
C Create IWCR bank
C Use IGARB to note if garbage collection done.
C
      IGARB = 0
      CALL AUBOS('IWCR',0,LMHLEN+NWMAX,JIWCR,IER)
      IF(IER.EQ.2) GOTO 999
      IF(IER.EQ.1) THEN
        IGARB = 1
        JITCO = IW(NITCO)
      ENDIF
      IW(JIWCR+LMHCOL) = 1
      IW(JIWCR+LMHROW) = NWMAX
C
C-----------------------------------------------------------------------
C Loop over the coordinates.
C
      DO 10 I=1,NCO
        KK = KROW(JITCO,I)
        IWIRE = IW(KK+JITCWN)
        IWIRE = MOD(IWIRE,1000)
        IW(JIWCR+LMHLEN+IWIRE) = I
   10 CONTINUE
C-----------------------------------------------------------------------
C
C Add IWCR to list
C
      CALL BLIST (IW,LIST,'IWCR')
C
C If garbage collection then set error flag to -1
C
      IER = 0
      IF(IGARB.EQ.1) IER = -1
C
  999 CONTINUE
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
