head	1.1;
branch	1.1.1;
access;
symbols
	aleph316_2:1.1.1.1
	aleph316_1:1.1.1.1
	aleph316:1.1.1.1
	aleph315_7:1.1.1.1
	aleph315_6:1.1.1.1
	aleph315_5:1.1.1.1
	aleph315_4:1.1.1.1
	aleph315_3:1.1.1.1
	aleph315_2:1.1.1.1
	aleph315_1:1.1.1.1
	aleph315:1.1.1.1
	aleph314_2:1.1.1.1
	aleph314_1:1.1.1.1
	aleph314:1.1.1.1
	aleph313_1:1.1.1.1
	aleph313:1.1.1.1
	aleph312_1:1.1.1.1
	aleph312:1.1.1.1
	aleph311_1:1.1.1.1
	aleph311:1.1.1.1
	aleph310_3:1.1.1.1
	aleph310_2:1.1.1.1
	aleph310_1:1.1.1.1
	aleph310:1.1.1.1
	aleph309_1:1.1.1.1
	aleph309:1.1.1.1
	aleph308_3:1.1.1.1
	aleph308_2:1.1.1.1
	aleph308_1:1.1.1.1
	aleph308:1.1.1.1
	aleph307_6:1.1.1.1
	aleph307_5:1.1.1.1
	aleph307_4:1.1.1.1
	aleph307_2:1.1.1.1
	aleph307_1:1.1.1.1
	aleph307:1.1.1.1
	aleph306:1.1.1.1
	aleph305_4:1.1.1.1
	aleph305_3:1.1.1.1
	aleph305_2:1.1.1.1
	aleph305_1:1.1.1.1
	aleph305:1.1.1.1
	aleph304_5:1.1.1.1
	aleph304_4:1.1.1.1
	aleph304_3:1.1.1.1
	aleph304_2:1.1.1.1
	aleph304_1:1.1.1.1
	aleph304:1.1.1.1
	aleph303_3:1.1.1.1
	aleph303_2:1.1.1.1
	aleph303_1_mc1:1.1.1.1
	aleph303_1:1.1.1.1
	aleph303:1.1.1.1
	aleph302_9:1.1.1.1
	aleph302_8:1.1.1.1
	aleph302_7:1.1.1.1
	aleph302_6:1.1.1.1
	aleph302_5:1.1.1.1
	aleph302_4:1.1.1.1
	aleph302_3:1.1.1.1
	aleph302_2:1.1.1.1
	aleph302_1:1.1.1.1
	aleph302:1.1.1.1
	aleph216:1.1.1.1
	aleph215_3:1.1.1.1
	aleph215_2:1.1.1.1
	aleph215:1.1.1.1
	aleph214:1.1.1.1
	aleph213:1.1.1.1
	aleph212:1.1.1.1
	ALEPH212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.02.07.11.43.29;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.02.07.11.43.30;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@       REAL FUNCTION SIDALI(IFL,IBD)
C.---------------------------------------------------------------------
CKEY SCALDES DECODE ADDRESS / USER
C     B.BLOCH       May 1992
C! Address Decoding function SICAL into Rho,Phi,z
C   Input :
C          IFL   FLAG to define return value(1= rho,2=phi,3=z)
C          IBD   ADDRESS encoded (14 bits)
C   Output:
C          Rho    Radial position ( cm)
C    OR    Phi    Azimuth ( degrees fom 0. to 360.)
C    OR    z      Z position ( cm)
C          0..    means error
C   Called by USER program  : NO FINE INTERNAL ALIGNEMENT PROVIDED !!!!!
C.---------------------------------------------------------------------
#ifndef DOC
      SAVE
#include "alcons.h"
#include "sigeco.h"
#include "simask.h"
C  Maximum address from JULIA has 14 bits
      PARAMETER ( IADMX = 16383)
      DATA IOLD /-1/
#include "simacr.h"
C
      IF ( IOLD.NE.IBD) THEN
         IAD = IBD+4095
         IF ( IAD.LT.0 .OR. IAD.GT.IADMX) GO TO 998
         IMD = SIMD(IAD)
         JOR = SIOR(IAD)
         IST = SIST(IAD,JOR)
         IPH = SIPH(IAD)
         IRD = SIRD(IAD)
         IOLD = IBD
         RED = RMINSI(IMD)+ RADSTP*(IRD-1)+0.5*RADSTP
         ITP = MOD(IST-1,3)+1
         PHU = PHISTP*(IPH-1) + PHSHFT(ITP,IMD)+0.5*PHISTP
         X = RED*COS(PHU) + DPOSSI(1,IMD)
         Y = RED*SIN(PHU) + DPOSSI(2,IMD)
      ENDIF
      IF ( IFL.EQ.1) THEN
C GET RADIUS
         RAD = SQRT(X*X+Y*Y)
         SIDALI = RAD
      ELSE IF ( IFL.EQ.2) THEN
C GET PHI
         PHI = ATG(Y,X)
         SIDALI = PHI*RADEG
      ELSE IF ( IFL.EQ.3) THEN
C GET z position
         ZZ = Z0SNSI(IMD)+ ZWIDSI*(IST-1) +DPOSSI(3,IMD)
         IF (IMD.EQ.2) ZZ = -ZZ
         SIDALI = ZZ
      ENDIF
      RETURN
 998  CONTINUE
      SIDALI = 0.
      RETURN
      END
#endif
@


1.1.1.1
log
@import aleph212 from alws
@
text
@@
