head	1.3;
access;
symbols
	V0060:1.3
	V0059:1.3
	V0058:1.3;
locks; strict;
comment	@# @;


1.3
date	2001.09.21.07.41.25;	author jacotf;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.28.10.10.48;	author jacotf;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.20.10.20.58;	author jacotf;	state Exp;
branches;
next	;


desc
@@


1.3
log
@maillogdb -> cerndb1
@
text
@SET ARRAYSIZE 1;
CREATE or REPLACE PACKAGE mcprod_plot_procedures 
IS
   PROCEDURE Update_MCPRODPLOT;

END mcprod_plot_procedures;
/
show errors


CREATE or REPLACE PACKAGE BODY mcprod_plot_procedures 
/*
|| !!!! If one wants to debug a procedure !!!!
|| Before you can use dbms_output do:
||    set serveroutput on; 
|| The default buffer size can be too small - Increase the size of the STUPID buffer doing:
||    DBMS_OUTPUT.ENABLE (1000000);
||
|| To increase the linesize for the output (default=80 characters) do:
||    set linesize 132;
||
*/
IS

PROCEDURE Update_MCPRODPLOT
/*
|| Update the MCPRODPLOT table
*/
IS
   nevts_ready    INTEGER := 0;
   tot_ready      INTEGER := 0;
   events_done    VARCHAR2(30);
   ready_evts_str VARCHAR2(30);
   my_tot         INTEGER;
   loc_point      INTEGER;

   date_origin       VARCHAR2(30) := '30-APR-2001';
   today             VARCHAR2(30);
   ndays_origin      VARCHAR2(30);
   ndays_today       VARCHAR2(30);
   today_from_origin VARCHAR2(30);

BEGIN
DECLARE
   CURSOR kinkey_cur 
   IS
      SELECT NVL(p.mtot,0) done, n.KingalKey kinkey
      FROM MCprod n, 
           (SELECT SUM(m.Nevents) mtot, m.KingalKeyWord
            FROM MCSETS m
            WHERE m.Datatype = 'MINI'
            GROUP BY m.KingalKeyWord) p
      WHERE n.Kingalkey = p.KingalKeyWord(+)
      ;      
      kinkey_rec kinkey_cur%ROWTYPE;

BEGIN
   OPEN kinkey_cur;
   LOOP
      FETCH kinkey_cur INTO kinkey_rec;
      EXIT WHEN kinkey_cur%NOTFOUND;
      nevts_ready := to_char(kinkey_rec.done);
      tot_ready  := tot_ready  + nevts_ready;
   END LOOP;
   CLOSE kinkey_cur;

/*
|| Retrieve the total number of events done from table MCPRODS 
|| filled by Brigitte Bloch via a perl program.
|| The SYNONYM MCprod has been defined as: 
||   bbloch.MCPRODS      on DEVDB
||   prod_bbloch.MCPRODS on CERNDB1
||
|| tot_ready = nb of events done in integer
|| ready_evts_str is a string which contains the nb of event/1000 
|| without the 3 last characters
|| The nb of events written to the table MCPRODPLOT is in millions
|| of events.
*/
   my_tot := tot_ready / 1000;              
   IF my_tot = 0
   THEN
      ready_evts_str := tot_ready / 1000;
   ELSE  
      ready_evts_str := to_char(tot_ready / 1000);
      loc_point := INSTR(ready_evts_str,'.');
      IF loc_point != 0
      THEN
         ready_evts_str := SUBSTR(ready_evts_str,1,loc_point-1);
      END IF;
   END IF;

   events_done := ready_evts_str / 1000;
   IF events_done = 0
   THEN 
      events_done := events_done || '.';
   END IF;

/*
|| On date_origin - Number of days since Jan 1,4712BC
*/
   SELECT to_char(TO_DATE(date_origin),'J')
   INTO ndays_origin 
   FROM DUAL;
 
/*
|| Today - Number of days since Jan 1,4712BC
*/
   today := to_char(SYSDATE);
   SELECT to_char(TO_DATE(today),'J')
   INTO ndays_today 
   FROM DUAL;

/*
|| To day - Number of days since date_origin
*/
   today_from_origin := ndays_today - ndays_origin;
   today_from_origin := today_from_origin || '.';
 
   INSERT INTO MCPRODPLOT 
   VALUES (today_from_origin,events_done);

   COMMIT;

END;

END Update_MCPRODPLOT;

END mcprod_plot_procedures;
/
show errors








@


1.2
log
@comments added
@
text
@d72 1
a72 1
||   prod_bbloch.MCPRODS on MAILLOGDB
@


1.1
log
@New package to update table MCPRODPLOT
@
text
@d68 6
a73 1
|| Retrieve the total number of events done from table MCprod 
@

