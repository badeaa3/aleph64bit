head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.39.23;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.24;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.25;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
@
text
@      SUBROUTINE CENCNE(IECOB,ICHYP,ERES,IRES,IER)
C***********************************************************************
C! Compute residual energy in charged ecob                             *
C!                                                                     *
C!  AUTHOR   :  J BADIER     881216                                    *
C!                                                                     *
C!                                                                     *
C!  BANKS :                                                            *
C!    INPUT   : ECOB , EHYP , EPAR                                     *
C!    OUTPUT  : CPAR (via cparad)                                      *
C!    CREATED : NONE                                                   *
C!                                                                     *
C!   Iecob  = Ecobject number (input)                                  *
C!   Ichyp  = CalHyp number   (input)                                  *
C!   Eres(4)= Residual energy (output)                                 *
C!   Ires   = 0 : there was no residual energy; # 0 else               *
C!   Ier    = Return code (0=OK)                                       *
C!                                                                     *
C?
C!======================================================================
#ifndef DOC
      DIMENSION ERES(*)
#include "ecnamc.h"
#include "bcs.h"
#include "ecobjj.h"
#include "ehypjj.h"
#include "eparjj.h"
#include "bmacro.h"
      IER=0
      IRES = 0
C   ECOB bank.
      KECOB=IW(NAECOB)
      IF (KECOB.EQ.0) GO TO 97
C   EHYP bank.
      KEHYP = IW(NAEHYP)
      IF (KEHYP.EQ.0) GO TO 97
C
C   Look the hypothesis
C
      IHYP1 = ITABL( KECOB , IECOB , JECOEH )
      IF( IHYP1 .EQ. 0 ) GO TO 97
C ----- First hypothesis type.
      ITYP1 = ITABL( KEHYP , IHYP1 , JEHYTY )
C ----- Other hypothesis ?
      NEXT = ITABL( KEHYP , IHYP1 , JEHYEH )
      IF( NEXT .NE. 0 ) THEN
C ----- Second hypothesis type.
        JTYP = ITABL( KEHYP , NEXT , JEHYTY )
C        Search the main hypothesis.
        IF( JTYP .LT. ITYP1 ) THEN
          ITYP2 = ITYP1
          ITYP1 = JTYP
          IHYP2 = IHYP1
          IHYP1 = NEXT
        ELSE
          IHYP2 = NEXT
          ITYP2 = JTYP
        ENDIF
      ENDIF
C   Main hypothesis
C   Corrected energy
      ERES(4) = RTABL( KEHYP , IHYP1 , JEHYEN)
C   Theta,phi.
      TH = RTABL( KEHYP , IHYP1 , JEHYTH )
      FI = RTABL( KEHYP , IHYP1 , JEHYPH )
C   Cartesian system
      W = COS( TH )
      S = SIN( TH )
      U = S * COS( FI )
      V = S * SIN( FI )
C   Impulsion
      ERES(1) = ERES(4) * U
      ERES(2) = ERES(4) * V
      ERES(3) = ERES(4) * W
C ----- Particles of the main hypothesis.
C        First particle.
C   EPAR bank.
      KEPAR = IW(NAEPAR)
      IF (KEPAR.EQ.0) GO TO 96
      IPAR = ITABL( KEHYP , IHYP1 , JEHYEP )
    1 CONTINUE
      IF( IPAR .EQ. 0 ) GO TO 96
C
C?  Update pointers to banks, in case of garbage collection
C
      KECOB=IW(NAECOB)
      KEHYP=IW(NAEHYP)
      KEPAR=IW(NAEPAR)
C ----- Particle type.
      KTYP = ITABL( KEPAR , IPAR , JEPATY )
C   Theta,phi.
      TH = RTABL( KEPAR , IPAR , JEPATH )
      FI = RTABL( KEPAR , IPAR , JEPAPH )
C   Cartesian system
      W = COS( TH )
      S = SIN( TH )
      U = S * COS( FI )
      V = S * SIN( FI )
C   Identificators.
      R1 = RTABL( KEPAR , IPAR , JEPAIT )
      R2 = RTABL( KEPAR , IPAR , JEPAIT + 1 )
C   Energy.
      E = RTABL( KEPAR , IPAR , JEPAEN )
C   Impulsion assuming zero mass.
      EX = E * U
      EY = E * V
      EZ = E * W
C   Residual energy.
      ERES(1) = ERES(1) - EX
      ERES(2) = ERES(2) - EY
      ERES(3) = ERES(3) - EZ
      ERES(4) = ERES(4) - E
C   Create PCPA
      CALL CPARAD(ICHYP,IHYP1,0,0,KTYP,E,TH,FI,R1,R2,IER)
      IF( IER .NE. 0 ) GO TO 97
C ----- Other particle ?
      KEPAR = IW(NAEPAR)
      IPAR = ITABL( KEPAR , IPAR , JEPAEP )
      GO TO 1
C   ----------------------------------------------------------
   97 CONTINUE
      IER = 1
   96 CONTINUE
C
C? At present (Julia 233), there is never any residual energy
C?  for neutral Ecobs : Ires should always be 0, as assigned
C?  at the beginning
C
C      IF( ABS( ERES(4) )  .GT. .001 ) IRES = 1
C
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK cencne
@


1.1.1.1
log
@import julia 300
@
text
@@
