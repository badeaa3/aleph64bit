head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.41.41;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.29;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.30;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
@
text
@      SUBROUTINE CPTCOM(V1,XEC,XHC,IPTC)
C***********************************************************************
C! See if faces have a common point                                    *
C! in the direction of v1                                              *
C!                                                                     *
C!  AUTHOR   : A. BONISSENT  870831                                    *
C!                                                                     *
C!                                                                     *
C!  BANKS :                                                            *
C!    INPUT   : KINE,VERT                                              *
C!    OUTPUT  : NONE                                                   *
C!    CREATED : NONE                                                   *
C!                                                                     *
C!   V1      : Reference direction                                     *
C!   XEC,XHC : Ecal and Hcal faces                                     *
C!   IPTC    : Output, 1 if there is a common point, 0 else            *
C!                                                                     *
C***********************************************************************
#ifndef DOC
      DIMENSION V1(*),VN(3),XEC(3,*),XHC(3,*),XUSE(5,3)
C
C?  say that the two faces have no common point
C
      IPTC=0
      DO 60 I=1,3
      XUSE(1,I)=XHC(I,3)-XHC(I,1)
      XUSE(2,I)=XHC(I,2)-XHC(I,1)
      XUSE(3,I)=XHC(I,4)-XHC(I,1)
   60 CONTINUE
      SURPR=0.
      I1=1
C
C   COMPUTE AREA NORMAL TO V1 OF THE ENTRY FACE OF HCAL STOREY
C
      DO 61 I=2,3
      SURPR=SURPR+ABS(
     SV1(1)*(XUSE(I,2)*XUSE(I1,3)-XUSE(I,3)*XUSE(I1,2))
     S+V1(2)*(XUSE(I,3)*XUSE(I1,1)-XUSE(I,1)*XUSE(I1,3))
     S+V1(3)*(XUSE(I,1)*XUSE(I1,2)-XUSE(I,2)*XUSE(I1,1)))
   61 CONTINUE
      SURMJ=SURPR+0.2
      SMIN=100000.
      DO 20 IEC=1,4
      DO 10 I=1,3
      XUSE(1,I)=XHC(I,1)-XEC(I,IEC)
      XUSE(2,I)=XHC(I,2)-XEC(I,IEC)
      XUSE(3,I)=XHC(I,3)-XEC(I,IEC)
      XUSE(4,I)=XHC(I,4)-XEC(I,IEC)
   10 CONTINUE
C
C   LOOP ON CORNERS OF THE ECAL STOREY EXIT FACE
C
      DO 22 J=1,4
      PSC=0.
C
C   PROJECT THE CORNER OF ECAL ONTO THE FACE OF HCAL,
C       FOLLOWING THE DIRECTION V1
C
      DO 21 I=1,3
   21 PSC=PSC+V1(I)*XUSE(J,I)
      DO 23 I=1,3
      XUSE(J,I)=XUSE(J,I)-V1(I)*PSC
   23 CONTINUE
   22 CONTINUE
      DO 30 I=1,3
   30 XUSE(5,I)=XUSE(1,I)
      SURF=0.
C
C  COMPUTE THE TOTAL AREA OF THE 4 TRIANGLES BUILT ON THE EDGES OF
C  THE HCAL FACE, ONE SUMMIT BEING THE PROJECTED ECAL CORNER
C
      DO 40 I=1,4
      I1=I+1
      SURF=SURF+ABS(
     SV1(1)*(XUSE(I,2)*XUSE(I1,3)-XUSE(I,3)*XUSE(I1,2))
     S+V1(2)*(XUSE(I,3)*XUSE(I1,1)-XUSE(I,1)*XUSE(I1,3))
     S+V1(3)*(XUSE(I,1)*XUSE(I1,2)-XUSE(I,2)*XUSE(I1,1)))
   40 CONTINUE
C
C   IF THE AREA OF THE 4 TRIANGLES IS MUCH LARGER THAN THE TOTAL
C   PROJECTED AREA, THE ECAL POINT PROJECTS OUTSIDE OF THE HCAL
C   STOREY FACE
C
      IF(SURF.GT.SURMJ)GO TO 20
   50 IPTC=1
      RETURN
   20 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK cptcom
@


1.1.1.1
log
@import julia 300
@
text
@@
