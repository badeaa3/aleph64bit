head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	96.03.12.15.48.39;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.21.28;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.35;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.36;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE VHOTIN
C
C----------------------------------------------------------------------
C! Initialize the hot channels list (VHOT bank) for current run.
C
C!  If in a special run for hot channels list creation, initialization
C!  is done by VHINIT.  Else the VHOT bank corresponding to run IRUNRC
C!  is checked, and eventually reduced, according to current MXp/zOCC
C!  values.
C!  Author : C. Vannini  13/7/90
C!
C!  Modified 16-1-94 by Dave Brown for the VDET upgrade
C!  Modified March 1995 A. Bonissent, M. Thulasidas
C!                 reorganise and debug
C!======================================================================
#ifndef DOC
#include "vhotjj.h"
#include "vpesjj.h"
C
C  Global includes
C
#include "bcs.h"
#include "vrecon.h"
#include "vdflgs.h"
C
C  Functions
C
      INTEGER NBANK,NLINK,NAMIND
      INTEGER IRET,IGARB
C
C  Local variables
C
      INTEGER NAVHOT,KVHOT
      INTEGER IROMD,IRONX,NEWMD
      INTEGER IADDR,NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP
      INTEGER NVHOT,IVHOT
      INTEGER KVPES,NVPES
      REAL OCCUP,OSCAL
      LOGICAL FIRST
      DATA FIRST /.TRUE./
C
C  Scale factor for computing occupancy from integer value = 1/256
C
      DATA OSCAL/.003922/
C
C  Inline functions
C
#include "bmacro.h"
C--------------------------------------------------------------------
C
      IF(FIRST)THEN
         FIRST=.FALSE.
         NAVHOT=NAMIND('VHOT')
      ENDIF
C
C Drop possible old banks
C
      CALL BDROP(IW,'VPES')
      IF (MKVHOT) THEN
         CALL VHINIT
         GOTO 999
      ENDIF
      IRET=0
C
C If data card VNHT is present, ignore the VHOT bank (which comes
C with data)
C
      IF(IW(NAMIND('VNHT')).NE.0)GO TO 999
C
      KVHOT = IW(NAVHOT)
      IF (KVHOT.LE.0) THEN
        CALL RERROR('VHOTIN',1, 'Cant find VHOT bank')
        GOTO 999
      ENDIF
      NVHOT = LROWS(KVHOT)
      IF(NVHOT .LE. 0) THEN
        CALL RERROR('VHOTIN',2,'Bank VHOT is empty')
        GOTO 999
      ENDIF
C
C Say that we start a new module
C
      NEWMD=1
      IF(NVHOT.NE.0)THEN
C
C Unpack the first address
C here # of strips is the occupancy (0-255 = 0-100%)
C
        IADDR = ITABL(KVHOT,1,JVHOHA)
        CALL VUNADD(IADDR,NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP)
C
C Make the module address
C
        CALL VAENWA(IROMD,ILAY,IWAF,IPHI,IVIEW)
      ENDIF
C
C  Loop over the hot channels
C
      DO IVHOT = 1,NVHOT
C
C  See if the occupancy is above threshold
C
        OCCUP = NSTRP*OSCAL
        IF(OCCUP.GE.MXOCUP(IVIEW))THEN
C
C  If this is a new module, build the bank
C  (with maximum possible size)
C
          IF(NEWMD.EQ.1)THEN
            NEWMD=0
            CALL AUBOS('VPES',IROMD,LMHLEN+NVHOT*LVPESA,KVPES,IGARB)
            IF(IGARB.EQ.2)THEN
              CALL RERROR('VHOTIN',3, 'No space for VPES bank')
              IRET=1
              GOTO 999
            END IF
            IW(KVPES+LMHCOL) = LVPESA
            IW(KVPES+LMHROW) = 0
          ENDIF
C
C  Add the strip
C
          IW(KNEXT(KVPES)+JVPEHA) = ISTRP
          IW(KNEXT(KVPES)+JVPEHF) = VBHOTC
          IW(KVPES+LMHROW) = LROWS(KVPES) + 1
        END IF
        IF(IVHOT.LT.NVHOT)THEN
C
C Unpack the next address
C here # of strips is the occupancy (0-255 = 0-100%)
C
          IADDR = ITABL(KVHOT,IVHOT+1,JVHOHA)
          CALL VUNADD(IADDR,NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP)
C
C Make the module address
C
          CALL VAENWA(IRONX,ILAY,IWAF,IPHI,IVIEW)
        ENDIF
C
C If a VPES is currently opened and
C    (end of VHOT, or we change module),
C remake the previous VPES to size, if it exists
C
        IF(NEWMD.EQ.0.AND.(IVHOT.EQ.NVHOT.OR.IRONX.NE.IROMD))THEN
          NVPES = LROWS(KVPES)
          CALL AUBOS('VPES',IROMD,LMHLEN+NVPES*LVPESA,KVPES,IGARB)
          IROMD=IRONX
          NEWMD=1
        ENDIF
      END DO
 999  CONTINUE
C
C  Put VHOT on the C list, so it isn't dropped
C
      CALL BLIST(IW,'C+','VHOT')
      RETURN
      END
#endif
@


1.2
log
@julia version 279
@
text
@a0 1
*DK vhotin
@


1.1
log
@Initial revision
@
text
@d4 1
d6 11
a16 8
C----------------------------------------------------------------------
C  If in a special run for hot channels list creation, initialization
C  is done by VHINIT.  Else the VHOT bank corresponding to run IRUNRC
C  is checked, and eventually reduced, according to current MXp/zOCC
C  values. Arrays IHOTFR/LA, used to speed up subsequent hot channels
C  suppression are filled.
C  Author : C. Vannini  13/7/90
C----------------------------------------------------------------------
a17 2
#include "implicit.h"
#include "vdimpl.h"
d19 1
a24 1
#include "vdhotc.h"
d26 3
d30 1
d34 8
a41 12
      INTEGER NVHOT, NH, NB
      INTEGER IADDR, OADDR
      INTEGER NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP
      INTEGER NHOT, NSLHOT, NCOL
      REAL OCCUP, OSCAL
#include "vdnamc.h"
C
C  Variables for inline functions
C
      LOGICAL SAMWF
      INTEGER J,K
#include "vdbmcr.h"
a49 1
      SAMWF(J,K) = IAND(J,VMADDR).EQ.IAND(K,VMADDR)
d52 8
d62 1
a62 1
         RETURN
d64 6
d71 10
a80 2
      NVHOT = IW(NAVHOT)
      IF (NVHOT.LE.0) THEN
d82 1
a82 1
C  This is only an error if we are running on real data
d84 2
a85 1
        IF(.NOT.MCEVNT)CALL RERROR('VHOTIN',1, ' Cant find VHOT bank')
d87 2
a88 1
C  Make an empty bank
d90 2
a91 3
        NVHOT = NBANK('VHOT',0,LMHLEN)
        IW(NVHOT+LMHROW) = 0
        IW(NVHOT+LMHCOL) = 1
d93 1
a93 1
C  Put the empty bank on the C list, so it isn't dropped
d95 1
a95 9
        CALL BLIST(IW,'C+','VHOT')
        RETURN
      ENDIF
      NB = IW(NVHOT-2)
      NHOT = LROWS(NVHOT)
      NCOL = LCOLS(NVHOT)
      IF(NHOT .LE. 0) THEN
        CALL RERROR('VHOTIN',2,' Bank VHOT is empty')
        RETURN
d98 1
a98 1
C  Zero pointers from last run
d100 1
a100 2
      CALL UZERO(IHOTFR,1,LVDL*NWAFN*NSLOM*NVIEWS)
      CALL UZERO(IHOTLA,1,LVDL*NWAFN*NSLOM*NVIEWS)
d102 1
a102 1
C  Only strips with occupancy greater than MXxOCC are retained
d104 2
a105 3
      NSLHOT = 0
      OADDR = -1
      DO 115 NH = 1, NHOT
d107 2
a108 1
C  Unpack the address- here # of strips is the occupancy (0-255 = 0-100%)
d110 7
a116 14
        IADDR = ITABL(NVHOT,NH,JVHOHA)
        CALL VADDUN(IADDR,NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP)
        OCCUP = NSTRP*OSCAL
        IF( (IVIEW.EQ.IVIEWZ.AND.OCCUP.GE.MXZOCC) .OR.
     &        (IVIEW.EQ.IVIEWP.AND.OCCUP.GE.MXPOCC) )THEN
          IW(NVHOT+LMHLEN+NSLHOT*NCOL+JVHOHA)=IADDR
C
C  Store row of the first hot channel of each wafer
C
          IF(.NOT.SAMWF(IADDR,OADDR))THEN
            IHOTFR(ILAY,IWAF,IPHI,IVIEW) = NSLHOT+1
            IF(OADDR .GE. 0)THEN
              CALL VADDUN(OADDR,NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP)
              IHOTLA(ILAY,IWAF,IPHI,IVIEW) = NSLHOT
d118 9
a126 3
            OADDR = IADDR
          END IF
          NSLHOT = NSLHOT + 1
d128 4
a131 1
  115 CONTINUE
d133 2
a134 1
C  End pointer on final wafer
d136 1
a136 4
      IF(OADDR .GE. 0)THEN
        CALL VADDUN(OADDR,NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP)
        IHOTLA(ILAY,IWAF,IPHI,IVIEW) = NSLHOT
      END IF
d138 17
a154 1
C  Remake bank to size, and make sure it's on the C list
a155 2
      NVHOT = NBANK('VHOT',NB,NSLHOT*NCOL+LMHLEN)
      IW(NVHOT+LMHROW) = NSLHOT
a156 1
C
a157 1
C
@


1.1.1.1
log
@import julia 300
@
text
@@
