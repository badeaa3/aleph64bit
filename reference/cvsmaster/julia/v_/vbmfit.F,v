head	1.4;
access;
symbols
	jul313_3:1.4
	jul313_2:1.4
	jul313_1:1.4
	jul313:1.4
	jul312_1:1.4
	jul312:1.4
	jul311:1.4
	jul310_1:1.4
	jul310:1.4
	jul309_1:1.4
	jul309:1.4
	jul308_6:1.4
	jul308_5:1.4
	jul308_4:1.4
	jul308_3:1.4
	jul308_2:1.4
	jul308_1:1.4
	jul308:1.4
	jul307_4:1.4
	jul307_3:1.4
	jul307_2:1.4
	jul307_1:1.4
	jul307:1.4
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.4
	jul304_2:1.4
	jul304_1:1.4
	jul304:1.4
	jul303_7:1.4
	jul303_6:1.4
	jul303_5:1.4
	jul303_4:1.4
	jul303_3:1.4
	jul303_2_mc1:1.4
	jul303_2:1.4
	jul303_1_mc1:1.4
	jul303_1:1.4
	jul303_v:1.4
	jul303:1.4
	jul302_6:1.4
	jul302_5:1.4
	jul302_4:1.4
	jul302_3:1.4
	jul302_2:1.4
	jul302_1:1.4
	jul302:1.4
	jul285_1:1.4
	jul285:1.4
	jul284_1:1.4
	jul284:1.4
	jul283_1:1.4
	jul283:1.4
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	96.09.10.15.00.06;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.47.55;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.20.44;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.29;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.30;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Replace explicit BOS macro decln. by bmacrod.h
@
text
@      SUBROUTINE VBMFIT (NEWROW)
C----------------------------------------------------------------------
C!  - Beamspot position fit
C!
C!   Author   :- D. Brwon                   8-APR-1993
C!  First written by G. Redlinger
C!
C!   Bug fix: Steve Wasserbaech, April 1995
C!   Use existing first-event-in-chunk number when NEWROW = .FALSE.
C!   Modified: SW, 18 October 1995
C!   Switch to VBPC; introduce track deweighting in first iteration;
C!   protect against failure in VCBFIT.
C?
C!======================================================================
#ifndef DOC
C     IMPLICIT NONE
      SAVE FIRST, NAVBPC
#include "bcs.h"
#include "rcurnt.h"
#include "vbpcjj.h"
#include "alpbjj.h"
#include "vbscom.h"
C
      INTEGER NAVBPC, KVBPC, NLOOP, ILOOP, IPAR, KALPB, LEN
      INTEGER IGARB, IP
      INTEGER NAMIND, NLINK
      REAL BPVEC(3), BPERR(3), BP(2)
      LOGICAL NEWROW, FIRST
      DATA FIRST / .TRUE. /
      EXTERNAL NLINK
C
#include "bmacrod.h"
#include "bmacro.h"
C----------------------------------------------------------------------
C
      IF (FIRST) THEN
        FIRST = .FALSE.
        NAVBPC = NAMIND('VBPC')
      ENDIF
      KVBPC = IW(NAVBPC)
      IF (KVBPC .LE. 0) GO TO 999
C
C  Make sure the VBPC row number (= LEP energy regime) is valid:
C
      IF (IVBPC .LE. 0) GO TO 999
C
C  Start by assuming a (0,0) beam position:
C
      BP(1) = 0.
      BP(2) = 0.
C
C  Iterate, trimming harder each time:
C
      NLOOP = ITABL(KVBPC,IVBPC,JVBPNI)
      DO ILOOP=1,NLOOP
        BSD0SCUT = RTABL(KVBPC,IVBPC,JVBPSC-1+ILOOP)
C
C  In the first iteration, deweight the tracks with small
C  d0 uncertainties, in case they are cosmics:
C
        IF (ILOOP .EQ. 1) THEN
          S2MIN = RTABL(KVBPC,IVBPC,JVBPSM)**2
        ELSE
          S2MIN = 0.
        ENDIF
C
C  Perform the fit:
C
        CALL VCBFIT(BP,BPVEC,BPERR)
C
C  If the fit failed, don't continue iterating:
C
        IF (BPERR(1) .EQ. 0.) GO TO 100
C
C  Update the beam position for the next fit:
C
        BP(1) = BPVEC(1)
        BP(2) = BPVEC(2)
      ENDDO
C
C  Scale the uncertainties:
C
      DO IPAR=1,2
        BPERR(IPAR) = BPERR(IPAR)*RTABL(KVBPC,IVBPC,JVBPKX-1+IPAR)
      ENDDO
C
C  Write these entries into a BOS bank.  Only create a new row
C  if requested.  If the row is just being updated, don't change
C  the starting event number.  ALPB is created the first time in
C  VBSINR, with first event number = 1.
C
 100  CONTINUE
      KALPB = NLINK('ALPB',IRUNRC)
      IF (KALPB .LE. 0) GO TO 820
C
      IF (NEWROW) THEN
        LEN = IW(KALPB) + LCOLS(KALPB)
        CALL AUBOS('ALPB',IRUNRC,LEN,KALPB,IGARB)
        IF (IGARB .EQ. 2) GO TO 800
        IP = KNEXT(KALPB)
        IW(KALPB+LMHROW) = IW(KALPB+LMHROW)+1
        IW(IP+JALPFE) = IBSFEV
      ELSE
        IP = KROW(KALPB,LROWS(KALPB))
      ENDIF
      IW(IP+JALPXP) = NINT(BPVEC(1)/BSPFAC)
      IW(IP+JALPXE) = NINT(BPERR(1)/BSEFAC)
      IW(IP+JALPYP) = NINT(BPVEC(2)/BSPFAC)
      IW(IP+JALPYE) = NINT(BPERR(2)/BSEFAC)
C
C  done
C
      GO TO 999
C
  800 CONTINUE
  810 CALL RERROR ('VBMFIT', -1, 'No Space to enlarge ALPB !!')
      GO TO 999
C
  820 CONTINUE
      CALL RERROR ('VMBFIT', -2, 'ALBP is NOT defined ')
      GO TO 999
C
  999 RETURN
      END
#endif
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d32 1
a32 4
C     BOS macro declarations:
      INTEGER ID,NRBOS,L,KI,KI1,KI2
      INTEGER LCOLS,LROWS,KNEXT,KROW,LFRWRD,LFRROW,ITABL
      REAL RTABL
@


1.2
log
@julia version 279
@
text
@a0 1
*DK vbmfit
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
      SUBROUTINE VBMFIT(NEWROW)
d9 5
d17 2
d21 1
a21 1
#include "alcbjj.h"
a23 3
      EXTERNAL NLINK
C
C  Input; new row flag for BPBB
d25 4
d30 2
d33 4
a36 6
C  Local variables
C
      DIMENSION BPVEC(3),BPERR(3)
      DIMENSION BP(2)
      SAVE FIRST, NAALCB
      DATA  FIRST / .TRUE. /
d39 4
a42 3
      IF ( FIRST ) THEN
        FIRST   = .FALSE.
        NAALCB  =  NAMIND('ALCB')
d44 4
a47 2
      KALCB   =   IW(NAALCB)
      IF (KALCB.LE.0) GOTO 999
d49 1
a49 1
C  Start by assuming a 0,0 beamspot
d51 1
a51 2
      BP(1) = 0.0
      BP(2) = 0.0
d53 2
a54 1
C  Loop over the trim cut, cutting harder each time
d56 3
a58 1
      NLOOP = ITABL(KALCB,1,JALCNL)
d60 10
a69 1
        BSD0SCUT = RTABL(KALCB,1,JALCSC-1+ILOOP)
d71 1
a71 1
C  Make the fit
d75 5
a79 1
C  Update the beamspot position for the next fit
d83 1
a83 1
      END DO
d85 1
a85 1
C  Correct the errors
d87 3
a89 3
      DO IPAR=1,3
        BPERR(IPAR) = BPERR(IPAR)*RTABL(KALCB,1,JALCKX-1+IPAR)
      END DO
d93 2
a94 2
C  the starting event number
C  ALPB is created the first time in VBSINR, with first event number = 1
d96 3
a98 2
      KALPB = NLINK ('ALPB',IRUNRC)
      IF ( KALPB.LE.0 ) GOTO 820
d103 1
a103 1
        IF ( IGARB.EQ.2 ) GOTO 800
d105 2
a106 1
        IW (KALPB+LMHROW) = IW(KALPB+LMHROW)+1
d109 5
a113 6
      END IF
      IW (IP+JALPFE) = IBSFEV
      IW (IP+JALPXP) = NINT(BPVEC(1)/BSPFAC)
      IW (IP+JALPXE) = NINT(BPERR(1)/BSEFAC)
      IW (IP+JALPYP) = NINT(BPVEC(2)/BSPFAC)
      IW (IP+JALPYE) = NINT(BPERR(2)/BSEFAC)
d117 1
a117 1
      GOTO 999
d121 1
a121 1
      GOTO 999
d125 1
a125 1
      GOTO 999
@


1.1.1.1
log
@import julia 300
@
text
@@
