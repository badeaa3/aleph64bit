head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.1
	jul280:1.1;
locks; strict;
comment	@c @;


1.2
date	96.06.03.10.28.27;	author cattanem;	state Exp;
branches;
next	1.1;

1.1
date	96.05.06.15.52.18;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Mods for julia 281 release. See news for details
@
text
@      SUBROUTINE VDALSG(IBREAL,JWAF,IV,XYZ,TNG,SIGMA)
C----------------------------------------------------------------------
C!  VDALSG calculates the sigmas to smear the VDZT (IV=1) or VDXY (IV=2)
C!         bank.
C!
C -  Author         Manoj Thulasidas  5-Nov-1994
CKEY V_DECK VDET
C!
C!  Description
C!  ===========
C!  Loads and unpacks the error matrix from the database
C!  Calls VDSIGM to calculate the SIGMA
C
C  Input :  IBREAL - the VALC row number
C           JWAF  - the global wafer number
C           IV    - the view
C           XYZ   - the global coordinates of the hit
C           TNG   - the cotangent of the angle that the track makes
C                   with the wafer, projected to the view
C
C  Output : SIGMA - the smear
C
C -----------------------------------------------------------------------
#ifndef DOC
      LOGICAL FIRST
      DATA FIRST /.TRUE./
#include "bcs.h"
      INTEGER NAVALC, KVALC, IRNUM, IDUM, IND, IERR, JWAF, IBREAL, IV
      REAL TNG
      INTEGER NAMIND, VXYZVU
      EXTERNAL NAMIND, VXYZVU
C-- local declarations
      REAL XYZ(3), VUW(3), AMAT(21), EMAT(6,6), SIGMA
      SAVE NAVALC
#include "bmacro.h"
C
      IF (FIRST) THEN
        FIRST = .FALSE.
        NAVALC = NAMIND('VALC')
      ENDIF
      KVALC = IW(NAVALC)
      IF (KVALC.LE.0) THEN
        CALL RERROR('VDALSG',1,'No alignment matrix!')
        RETURN
      ENDIF
C-- find the row number corresponding to the banknumber
      IRNUM = 0
      DO IDUM = 1, LROWS(KVALC)
        IF (ITABL(KVALC,IDUM,1).EQ.IBREAL) THEN
          IRNUM = IDUM
          GOTO 11
        ENDIF
      ENDDO
C-- load the alignment error matrix
 11   CONTINUE
      IND = KROW(KVALC,IRNUM)+8
C-- copy the triangular mat into a local array
      CALL UCOPY(RW(IND),AMAT,21)
C-- unpack the triangular matrix.  Note that the UCOPY is not really
C-- necessary and RW(IND) can be passed directly to TRUPCK
      CALL TRUPCK(AMAT,EMAT,6)
C-- go to the local coordinates VUW
      IERR = VXYZVU(XYZ,JWAF,VUW)
C-- calculate the Z and RPHI sigma
      CALL VDSIGM(EMAT,IV,VUW,TNG,SIGMA)
      RETURN
      END
#endif
@


1.1
log
@re-installed jul280 from the historian source because some routines were missing.
@
text
@d30 2
a31 1
      INTEGER NAMIND, VXYZVU, VXYZWA
d33 1
a33 1
      REAL XYZ(3), VUW(3), AMAT(21), EMAT(6,6), WCENT(3), SIGMA
a61 3
C-- find the wafer center in XYZ coordinates
C-- get the MFking center of the wafer
      IERR = VXYZWA(JWAF,WCENT)
d65 1
a65 1
      CALL VDSIGM(EMAT,WCENT,IV,VUW,JWAF,TNG,SIGMA)
@
