head	1.4;
access;
symbols
	jul313_3:1.4
	jul313_2:1.4
	jul313_1:1.4
	jul313:1.4
	jul312_1:1.4
	jul312:1.4
	jul311:1.4
	jul310_1:1.4
	jul310:1.4
	jul309_1:1.4
	jul309:1.4
	jul308_6:1.4
	jul308_5:1.4
	jul308_4:1.4
	jul308_3:1.4
	jul308_2:1.4
	jul308_1:1.4
	jul308:1.4
	jul307_4:1.4
	jul307_3:1.4
	jul307_2:1.4
	jul307_1:1.4
	jul307:1.4
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.4
	jul304_2:1.4
	jul304_1:1.4
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.10.01.07.09.40;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.48.38;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.21.26;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.35;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.36;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fixes for Linux
@
text
@      SUBROUTINE VHINIT
C----------------------------------------------------------------------
C!  - Initialization for runs creating new VHOT lists
C!
C! Author: C.Vannini  -  6/1/90
C!
C! Variables of common/VHOTPM/ are initialized here
C! Create an empty bank VHOT with nr=IRUNRC
C! Create VOCC to record the occurrency of each strip/run
C! Control histograms are booked
C!
C!  Modified 16-1-94 by Dave Brown for the VDET upgrade
C!  Modified March 1995 A. Bonissent, M. Thulasidas
C!                 reorganise and debug
C?
C!======================================================================
#ifndef DOC
#include "vprtnc.h"
#include "rcurnt.h"
#include "vhotjj.h"
#include "bcs.h"
C
C  Function calls
C
      INTEGER NBANK,NLINK,NDROP
      INTEGER VNLAYR,VROMAX,VNRFAC,VNSCRM
C
C  Local variables
C
      INTEGER NLAY,NFAC,NROMX,INCR,IRET
      INTEGER IVIEW,JWAF,ILAY,IFAC,IWFF,DECNUM
      INTEGER IVOCC,IVHOT,IVHFS
      INTEGER IROM,NROM,MODNUM
      INTEGER NCHAN
C
C  Variables of common/VHOTPM/:
C
      NHOTEV = 0
C
C  Create an empty VHOT bank for this run
C
      IVHOT = NLINK('VHOT',IRUNRC)
      IF(IVHOT.NE.0) THEN
        CALL RERROR('VHINIT',1,'VHOT bank will be replaced')
        IRET = NDROP('VHOT',IRUNRC)
      ENDIF
      IVHOT = NBANK('VHOT',IRUNRC,LMHLEN)
      IF (IVHOT.LE.0) THEN
        CALL RERROR('VHINIT',2,'Not enough space to book VHOT')
        GOTO 999
      ENDIF
      IW(IVHOT+LMHCOL) = LVHOTA
      IW(IVHOT+LMHROW) = 0
C
C  Loop over views
C
      DO 100 IVIEW=1,2
      NLAY=VNLAYR()
C
C Get the max number and increment of readout modules in a face
C
      IRET = VROMAX(IVIEW,NROMX,INCR)
C
C Get the number of readout channels
C
      NCHAN = VNSCRM(IVIEW)
C
C Loop over layers
C
      DO 100 ILAY=1,NLAY
      NFAC = VNRFAC(ILAY)
C
C Loop over faces
C
      DO 100 IFAC=1,NFAC
C
C  Loop over the readout modules
C
      DO 100 IROM=1,NROMX,INCR
C
C  Create the decimal address for this
C
          CALL VAENWA(DECNUM,ILAY,IROM,IFAC,IVIEW)
C
C  Make a VOCC for each readout module
C
          IVOCC = NBANK ('VOCC',DECNUM,NCHAN)
          IF (IVOCC.EQ.0) THEN
            CALL RERROR('VHINIT',4,'Not enough space to book VOCC')
            GOTO 999
          ENDIF
  100 CONTINUE
C
  999 RETURN
      END
#endif
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d25 1
a25 1
      INTEGER NBANK,NLINK
d45 1
a45 1
        CALL NDROP('VHOT',IRUNRC)
@


1.2
log
@julia version 279
@
text
@a0 1
*DK vhinit
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
        SUBROUTINE VHINIT
d10 1
a10 1
C! Create OWAF to record the occurrency of each strip/run
d12 4
a18 1
#include "rparac.h"
d21 1
d23 5
a27 3
#include "vhotpm.h"
#include "vhotjj.h"
#include "vdnamc.h"
d31 5
a35 4
        INTEGER PPLAY(2)
        INTEGER WFSTP(2)
        DATA PPLAY /NSLOI,NSLOM/
        DATA WFSTP /1,3/
d37 1
a37 1
C---  Variables of common/VHOTPM/:
d41 1
a41 3
C   Minimum num. of events/run to fill VHOT(Irunrc)
C
      NHOTMN = 100
d43 3
a45 24
C   Build the index arrays
C   IINDEX is the module number
C   IWADDR is the address of the first strip of that module
C
      I = 0
      DO 1001 ILAY=1,2
        DO 1002 IVIEW=1,2
          DO 1003 IPHI=1,PPLAY(ILAY)
            DO 1004 IWAF=1,4,WFSTP(IVIEW)
              I = I + 1
              IINDEX(ILAY,IVIEW,IPHI,IWAF)=I
              CALL VADDPK(IADDR,0,ILAY,IWAF,IPHI,IVIEW,1)
              IWADDR(I) = IADDR
 1004       CONTINUE
 1003     CONTINUE
 1002   CONTINUE
 1001 CONTINUE
C
C Create an empty VHOT bank for this run
C
      NVHOT = NLINK('VHOT',IRUNRC)
      IF(NVHOT.NE.0) THEN
        CALL RERROR('VHINIT',2,
     &       'VHOT bank for current run will be replaced')
a46 1
        NVHOT = 0
d48 4
a51 4
      CALL AUBOS('VHOT',IRUNRC,LMHLEN,NVHOT,IGARB)
      IF (IGARB.EQ.2) THEN
         CALL RERROR('VHINIT',3,'Not enough space to book VHOT')
         GOTO 999
d53 13
a65 2
      IW(NVHOT+LMHCOL) = 1
      IW(NVHOT+LMHROW) = 0
d67 1
a67 1
C---  Initialize bank OWAF
d69 25
a93 6
      NWAF = NBANK ('OWAF',0, NMODUL*512 )
      IF (NWAF.EQ.0) THEN
        CALL RERROR('VHINIT',4,
     &              'Out of BOS space creating wafer banks')
        GOTO 999
      ENDIF
@


1.1.1.1
log
@import julia 300
@
text
@@
