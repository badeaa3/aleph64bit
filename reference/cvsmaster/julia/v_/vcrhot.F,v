head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	96.03.12.15.48.07;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.21.00;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.31;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.32;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE VCRHOT
C----------------------------------------------------------------------
C!  - Create and fill VHOT the list of noisy strips accumulated by VDNOIS
C!
C!  Author: C.Vannini  -  6/1/90
C!
C!  Modified 17-1-94 by Dave Brown for the VDET upgrade
C!  Modified March 1995 A. Bonissent, M. Thulasidas
C!                 reorganise and debug
C?
C!======================================================================
#ifndef DOC
#include "vprtnc.h"
#include "rcurnt.h"
#include "rlunit.h"
#include "bcs.h"
#include "vrecon.h"
C
C  Function calls
C
      INTEGER NLINK,NBANK,VNSCRM
      INTEGER VNLAYR,VROMAX,VNRFAC
      INTEGER VJFACI, VJWAFF
C
C  Local variables
C
      INTEGER KVOCC,KVHOT
      INTEGER NROM,JROM
      INTEGER JWAF,DECNUM
      INTEGER NHOT(2),NHRO
      INTEGER MODNUM,NSTRP
      INTEGER IADDR,ILAY,IFAC,IVIEW,JFAC
      INTEGER NLAY,NFAC,NROMX,INCR,IRET
      INTEGER ISTRP,JSTRP,NWORDS,IROM
      INTEGER IOCCUP
      REAL OCCUP
C
C  Inline functions
C
      INTEGER IIII
      LOGICAL HIFIL
#include "bmacro.h"
      HIFIL(IIII) = IAND(IIII,4) .EQ. 4
C
C--------------------------------------------------------------
C
C
C  Make VHOT
C
      IF (NHOTEV.LT.NHOTMN) THEN
        CALL RERROR('VCRHOT',4,'Too few events: VHOT will be empty')
        KVHOT = NBANK('VHOT',IRUNRC,LMHLEN)
        GOTO 999
      ELSE
        KVHOT = NBANK('VHOT',IRUNRC,LMHLEN+100)
        IF (KVHOT.LE.0) THEN
          CALL RERROR('VCRHOT',3,'Not enough space to book VHOT')
          GOTO 999
        ENDIF
        IW(KVHOT+LMHCOL) = 1
        IW(KVHOT+LMHROW) = 0
      END IF
      NLAY=VNLAYR()
      NHOT(IVIEW) = 0
C
C  Loop over views
C
      DO 100 IVIEW=1,2
C
C Get the max number and increment of readout modules in a face
C
      IRET = VROMAX(IVIEW,NROMX,INCR)
C
C Get the number of readout channels
C
      NSTRP = VNSCRM(IVIEW)
C
C Loop over layers
C
      DO 100 ILAY=1,NLAY
      NFAC = VNRFAC(ILAY)
C
C Loop over faces
C
      DO 100 IFAC=1,NFAC
C
C  Loop over the readout modules
C  IROM is a sort of wafer in face number IWFF
C
      DO 100 IROM=1,NROMX,INCR
        NHRO = 0
C
C  Build the global wafer/readout module number
C  ( First make the global face number)
C
        IRET = VJFACI(ILAY,IFAC,JFAC)
        IRET = VJWAFF(JFAC,IROM,JROM)
C
C  Create the decimal address for this readout module
C
        CALL VAENWA(DECNUM,ILAY,IROM,IFAC,IVIEW)
C
C  Find the associated V0CC bank
C
        KVOCC = NLINK('VOCC',DECNUM)
        IF(KVOCC.LE.0)THEN
          CALL RERROR('VCRHOT',1,'Missing VOCC bank')
          GOTO 999
        END IF
C
C  Loop over the readout strips in this module
C
        DO ISTRP=1,NSTRP
C
C  Compute the occupancy
C
          OCCUP = FLOAT(IW(KVOCC+ISTRP))/FLOAT(NHOTEV)
C
C  Histograms
C
          IF(HIFIL(HISTLV))THEN
            CALL HFILL(HISOFF+210+(IVIEW-1)*2+1,OCCUP,0.,1.)
            CALL HFILL(HISOFF+212+(IVIEW-1)*2+2,OCCUP,0.,1.)
          END IF
C
C   Hot strips defined here
C
          IF (OCCUP.GE.MXOCUP(IVIEW)) THEN
            NHOT(IVIEW) = NHOT(IVIEW) + 1
            NHRO = NHRO + 1
            IOCCUP = NINT(OCCUP*255)
            CALL VPKADD(IADDR,IOCCUP,ILAY,IROM,IFAC,IVIEW,ISTRP)
            IW(KNEXT(KVHOT)+1) = IADDR
            IW(KVHOT+LMHROW) = LROWS(KVHOT) + 1
          END IF
C
C  Check if the bank needs extending
C
          IF ( LFRWRD(KVHOT).LE. 5 ) THEN
            NWORDS = LROWS(KVHOT) + LMHLEN + 100
            KVHOT = NBANK('VHOT',IRUNRC,NWORDS)
            IF (KVHOT.LE.0) THEN
              CALL RERROR('VCRHOT',2,
     &               'Not enough space to extend VHOT')
              GOTO 999
            ENDIF
          END IF
        END DO
        IF(HIFIL(HISTLV))THEN
          CALL HFILL(HISOFF+214+IVIEW,FLOAT(JROM),
     &         FLOAT(NHRO),1.0)
        END IF
  100 CONTINUE
C
C Remake bank to size
C
      NWORDS = LMHLEN + LROWS(KVHOT)
      KVHOT = NBANK('VHOT',IRUNRC,NWORDS)
C
C  Message
C
      WRITE(LOUTRL,1000) NHOTEV,NHOT
1000  FORMAT(' ',80('-')/,
     &       ' ',I7,' events analized for noisy channels detection',/
     &       ' ',I6,'-Z  and  ',I6,'-Phi  hot  channels  were found'/,
     &       //' ',80('-'))
C
C  Clean out banks for next run
C
 999  CONTINUE
      CALL BDROP(IW,'VOCC')
      RETURN
      END
#endif
@


1.2
log
@julia version 279
@
text
@a0 1
*DK vcrhot
@


1.1
log
@Initial revision
@
text
@d8 3
a10 1
C!  Global includes
a13 1
#include "rparac.h"
d16 1
a17 1
#include "vhotpm.h"
d19 6
a24 2
#include "vdnamc.h"
#include "rlunit.h"
d28 10
a37 1
      INTEGER NHOT(NMODUL)
d39 1
a39 1
C  Some inline stuff
d41 1
a41 1
      INTEGER I
d44 1
a44 1
      HIFIL(I) = IAND(I,4) .EQ. 4
d48 12
a59 13
      NOWAF = NLINK('OWAF',0)
      IF (NOWAF.LE.0) THEN
        CALL RERROR('VCRHOT',2,
     &        'OWAF bank is missing, no VHOT bank created')
        RETURN
      ENDIF
C
      NVHOT = NLINK('VHOT',IRUNRC)
      IF(NVHOT.LE.0.OR.IW(NVHOT).LE.LMHLEN) THEN
        CALL AUBOS('VHOT',IRUNRC,LMHLEN+100,NVHOT,IGARB)
        IF (IGARB.EQ.2) THEN
           CALL RERROR('VCRHOT',3,'Not enough space to book VHOT')
           RETURN
d61 29
a89 3
        IW(NVHOT+LMHCOL) = 1
        IW(NVHOT+LMHROW) = 0
      ENDIF
d91 2
a92 1
C  An empty VHOT bank will be written if the statistics is too low
d94 32
a125 16
      IF (NHOTEV.LT.NHOTMN) THEN
         CALL RERROR('VCRHOT',4,'Too few events: VHOT will be empty')
         GO TO 300
      ENDIF
C
C  Fill VHOT
C
      NPHOT = 0
      NZHOT = 0
      DO 1001 I=1,NMODUL
        NHOT(I) = 0
        CALL VADDUN(IWADDR(I),NSTRP,ILAY,IWAF,IPHI,IVIEW,ISTRP)
        DO 1002 J=1,512
          K = (I-1)*512+J
          IF (IW(NOWAF+K).GE.1) THEN
            OCCUP = FLOAT(IW(NOWAF+K))/FLOAT(NHOTEV)
d129 18
a146 40
            IF(IVIEW .EQ. 1) THEN
C     Z strips
                IF(HIFIL(HISTLV))THEN
                   CALL HFILL(HISOFF+211,OCCUP,0.,1.)
                   CALL HFILL(HISOFF+212,OCCUP,0.,1.)
                END IF
                IF (OCCUP.GE.MXZOCC) THEN
                    NZHOT = NZHOT + 1
                    NHOT(I) = NHOT(I) + 1
                    IOCUP = NINT(OCCUP*255)
                    IADDR = IWADDR(I)+J-1+ISHFT(IOCUP,18)
                    IND = KNEXT (NVHOT)+1
                    IW (IND) = IADDR
                    IW(NVHOT+LMHROW) = LROWS(NVHOT) + 1
                END IF
            ELSE
C     PHI strips
                IF(HIFIL(HISTLV))THEN
                  CALL HFILL(HISOFF+213,OCCUP,0.,1.)
                  CALL HFILL(HISOFF+214,OCCUP,0.,1.)
                END IF
                IF (OCCUP.GE.MXPOCC) THEN
                    NPHOT = NPHOT + 1
                    NHOT(I) = NHOT(I) + 1
                    IOCUP = NINT(OCCUP*255)
                    IADDR = IWADDR(I)+J-1+ISHFT(IOCUP,18)
                    IND = KNEXT (NVHOT)+1
                    IW (IND) = IADDR
                    IW(NVHOT+LMHROW) = LROWS(NVHOT) + 1
                END IF
            END IF
C
            IF ( LFRWRD(NVHOT).LE.LCOLS(NVHOT) ) THEN
                NWORDS = LROWS(NVHOT) + LMHLEN + 100
                CALL AUBOS('VHOT',IRUNRC,NWORDS,NVHOT,IGARB)
                IF (IGARB.EQ.2) THEN
                   CALL RERROR('VCRHOT',5,
     &               'not enough space to book VHOT')
                   RETURN
                ENDIF
d149 6
a154 4
 1002   CONTINUE
        IF(HIFIL(HISTLV))CALL HFILL(HISOFF+215,FLOAT(I),
     &  FLOAT(NHOT(I)),1.0)
 1001 CONTINUE
d158 2
a159 2
  300 NWORDS = LMHLEN + LROWS(NVHOT)
      CALL NBANK('VHOT',IRUNRC,NWORDS)
d163 1
a163 1
      WRITE(LOUTRL,1000) NHOTEV,NZHOT,NPHOT
d171 2
a172 2
      CALL NDROP('OWAF',0)
C
@


1.1.1.1
log
@import julia 300
@
text
@@
