head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.27.41;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.05;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.06;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@          SUBROUTINE MUSLCM(IEL,SLTCO,IOK)
C-------------------------------------------------------------
C! Subroutine transforming from raw data to slot coordinate system
C!
C! P.Campana    890608
C!
C?
C!======================================================================
#ifndef DOC
#include "mgnpar.h"
#include "mgdeca.h"
#include "mgeeca.h"
#include "mgdmda.h"
#include "mgemda.h"
#include "mgdcom.h"
#include "mgdbar.h"
#include "mgebar.h"
          INTEGER IEL(*)
          REAL SLTCO(*)
C Choose subcomponent
          IXINV=0
          IYINV=0
          ICH=0
C
          IOK=1
C
          IF(IEL(1)-2) 1,2,3
C
C Barrel - X strips
C
 1        CONTINUE
C X traitment
C Remove offsets
          IEL(5)=IEL(5)-MBLOBU(IEL(3),IEL(9))
C All bus readout must be inverted, except 9B, 11B
          ITYSL=MBPNT2(IEL(2))
          IF(IEL(2).NE.12.AND.IEL(2).NE.16.AND.
     +       IEL(2).NE.29.AND.IEL(2).NE.33) THEN
                    IXINV=1
                    IEL(5)=MBNSXT(IEL(11),ITYSL)-IEL(5)
          ENDIF
C Evaluation of X local coordinate (taken from left side)
C (if inv. occurs nch starts from str. #1, otherw. from #0)
          N16T=IEL(5)/16
          NCH=IEL(5)-N16T*16
          IF(NCH.GE.(8+IXINV)) ICH=1
          XOFF=BTOFFS(IEL(11),IEL(2))
          SLTCO(1)=XOFF+FLOAT(N16T)*BPIT16(ITYSL)+SPA88T/2.+
     +        TUBCEL*FLOAT(NCH-IXINV)+TUBCEL/2.+SPA88T*FLOAT(ICH)
C Y traitment
C Identify "criminal" bus
          ICRI=0
          ITYBU=MBTYBU(IEL(4),IEL(10))
          IF((ITYBU.EQ.2.OR.ITYBU.EQ.6).AND.IEL(4).NE.2) ICRI=1
C Remove offset
          IF(MBLOBU(IEL(4),IEL(10)).LE.10) THEN
               ICRI=0
C                      ! No additional ten strips for first group
               IEL(6)=IEL(6)-MBLOBU(IEL(4),IEL(10))+1
          ELSE
C Adds intermediate offsets
               IEL(6)=IEL(6)+MBLOBU(IEL(4),IEL(10))-ICRI*10+1
          ENDIF
C Finds physical strip
C Inversion for busse #1 (all strips must start from side B) or for
C busse #2 for int. slots 9B 10 11A
C (if inv. occurs nch starts from str. #0, otherw. from #1)
          IF((IEL(2).GE.12.AND.IEL(2).LE.14).AND.(IEL(11).EQ.2))IYINV=1
          IF((IEL(2).LE.11.OR.IEL(2).GE.15).AND.(IEL(11).EQ.1)) IYINV=1
          IF(IYINV.EQ.1) IEL(6)=MBNSY1(ITYSL)-IEL(6)
C
          SLTCO(2)=BYOFFS(IEL(12),IEL(2))+FLOAT(IEL(6)-1+IYINV)*YPITST+
     +             YPITST/2.
C Check: X & Y coord. must lie within fiduc. volume (IOK= 1  ok,
C IOK=0 assoc. incomp.,IOK=-1 error)
          XD=BRTOOT(ITYSL)
          YD=BZTOOT(ITYSL)
          XTD=BRBOXG(ITYSL)-XD
          YTD=BZBOXG(ITYSL)-YD
          IOK=1
          IF(SLTCO(1).LT.0.OR.SLTCO(1).GT.BRBOXG(ITYSL).OR.
     +       SLTCO(2).LT.0.OR.SLTCO(2).GT.BZBOXG(ITYSL)) THEN
                      IOK=-1
                      RETURN
          ENDIF
          IF(IEL(2).EQ.4.OR.IEL(2).EQ.21) THEN
            IF((SLTCO(1).GT.XTD).AND.
     +         (SLTCO(2).LT.YD.OR.SLTCO(2).GT.YTD)) IOK=0
          ENDIF
          IF(IOK.EQ.0) RETURN
          IF(IEL(2).EQ.5.OR.IEL(2).EQ.22) THEN
            IF((SLTCO(1).LT.XD).AND.
     +         (SLTCO(2).LT.YD.OR.SLTCO(2).GT.YTD)) IOK=0
          ENDIF
          IF(IOK.EQ.0) RETURN
          IF(IEL(2).EQ.10.OR.IEL(2).EQ.27) THEN
            IF(SLTCO(1).LT.XD.AND.SLTCO(2).LT.YD) IOK=0
          ENDIF
          IF(IOK.EQ.0) RETURN
          IF(IEL(2).EQ.12.OR.IEL(2).EQ.29) THEN
            IF(SLTCO(1).LT.XD.AND.SLTCO(2).GT.YTD) IOK=0
          ENDIF
          IF(IOK.EQ.0) RETURN
          IF(IEL(2).EQ.14.OR.IEL(2).EQ.31) THEN
            IF(SLTCO(1).GT.XTD.AND.SLTCO(2).LT.YD) IOK=0
          ENDIF
          IF(IOK.EQ.0) RETURN
          IF(IEL(2).EQ.16.OR.IEL(2).EQ.33) THEN
            IF(SLTCO(1).GT.XTD.AND.SLTCO(2).GT.YTD) IOK=0
          ENDIF
          GOTO 5
C
C End Cap - X strips
C
 2        CONTINUE
          ITYPE=MEPNTY(IEL(2))
C Add offsets
          IEL(5)=IEL(5)+MELOBU(IEL(3),IEL(9))
C Inversion for 2B,3B,1A,4A int/ext
       IF(IEL(2).EQ.1.OR.IEL(2).EQ.4.OR.IEL(2).EQ.5.OR.IEL(2).EQ.8.OR.
     +IEL(2).EQ.10.OR.IEL(2).EQ.11.OR.IEL(2).EQ.14.OR.IEL(2).EQ.15)THEN
              IXINV=1
              IEL(5)=MENXST(ITYPE)-IEL(5)
          ENDIF
C Decoding
          IF(ITYPE.EQ.1.OR.ITYPE.EQ.2.OR.ITYPE.EQ.5.OR.ITYPE.EQ.6)THEN
             XOFF=EXSTOF(IEL(11),IEL(2))
          ELSE
             XOFF=EXSTOC(IEL(11),IEL(2))
          ENDIF
          N16T=IEL(5)/16
          NCH=IEL(5)-N16T*16
          IF(NCH.GE.(8+IXINV)) ICH=1
C
          SLTCO(1)=XOFF+FLOAT(N16T)*EPIT16(ITYPE)+SPA88T/2.+
     +        TUBCEL*FLOAT(NCH-IXINV)+TUBCEL/2.+SPA88T*FLOAT(ICH)
C Y strips
C Add offsets
          IEL(6)=IEL(6)+MELOBU(IEL(4),IEL(10))
C Inversion for 1B,2B,3A,4A int/ext
          IF(IEL(2).EQ.3.OR.IEL(2).EQ.4.OR.
     +      (IEL(2).GE.7.AND.IEL(2).LE.10).OR.
     +       IEL(2).EQ.13.OR.IEL(2).EQ.14) THEN
                IYINV=1
                IEL(6)=MENYST(ITYPE)-IEL(6)
          ENDIF
C Decoding
          IF(ITYPE.EQ.1.OR.ITYPE.EQ.4.OR.ITYPE.EQ.5.OR.ITYPE.EQ.8)THEN
                YOFFS=EYSTOF(IEL(11),IEL(2))
          ELSE
                YOFFS=EYSTOC(IEL(11),IEL(2))
          ENDIF
C
          SLTCO(2)=YOFFS+FLOAT(IEL(6)-IYINV)*YPITST+YPITST/2.
C
C Check: X & Y coord. must lie within box limits
C Here no test on inc. ass. is performed
C (IOK= 1  ok, IOK=-1 error)
          IOK=1
          IF(SLTCO(1).LT.0.OR.SLTCO(1).GT.EYYBOX(ITYPE).OR.
     +       SLTCO(2).LT.0.OR.SLTCO(2).GT.EXXBOX(ITYPE)) THEN
                      IOK=-1
                      RETURN
          ENDIF
C
          GOTO 5
C
C Middle angle
C
C X strips
C Add or remove offsets
 3        IF(MALOBU(IEL(3),IEL(9)).LE.24) THEN
               IEL(5)=IEL(5)-MALOBU(IEL(3),IEL(9))
          ELSE
               IEL(5)=IEL(5)+MALOBU(IEL(3),IEL(9))
          ENDIF
C Inversion when necessary
          IF(MADZFL(IEL(2)).LT.0) THEN
               IXINV=1
               IEL(5)=MANXST(MAPNTY(IEL(2)))-IEL(5)
          ENDIF
          N16T=IEL(5)/16
          NCH=IEL(5)-N16T*16
          IF(NCH.GE.(8+IXINV)) ICH=1
          XOFF=AXOFFS(IEL(11),IEL(2))
          SLTCO(1)=XOFF+FLOAT(N16T)*APIT16+SPA88T/2.+
     +        TUBCEL*FLOAT(NCH-IXINV)+TUBCEL/2.+SPA88T*FLOAT(ICH)
C Y strips
C Add or remove offsets
          IF(MALOBU(IEL(4),IEL(10)).LE.24) THEN
               IEL(6)=IEL(6)-MALOBU(IEL(4),IEL(10))
          ELSE
               IEL(6)=IEL(6)+MALOBU(IEL(4),IEL(10))-
     +                       MALOBU(IEL(4),IEL(10)-1)
          ENDIF
C Inversion for A side
          IF(IEL(2).GE.1.AND.IEL(2).LE.19) THEN
               IYINV=1
               IEL(6)=MANYST(IEL(2))-IEL(6)
          ENDIF
          SLTCO(2)=AYLEOF(IEL(11),IEL(2))+FLOAT(IEL(6)-IYINV)*YPITST
     +            +YPITST/2.
C Check on limits
          IF(SLTCO(1).LT.0.OR.SLTCO(1).GT.AZZBOX(MAPNTY(IEL(2))).OR.
     +       SLTCO(2).LT.0.OR.SLTCO(2).GT.ARRBOX(MAPNTY(IEL(2))))THEN
               IOK=-1
               RETURN
          ENDIF
C Cluster size & baricenters (general treatment)
 5        SLTCO(3)=FLOAT(IEL(7)-1)/2.*XPITST
          SLTCO(4)=FLOAT(IEL(8)-1)/2.*YPITST
          IF(IXINV.EQ.1) THEN
              SLTCO(1)=SLTCO(1)+SLTCO(3)
          ELSE
              SLTCO(1)=SLTCO(1)-SLTCO(3)
          ENDIF
          IF(IYINV.EQ.1) THEN
              SLTCO(2)=SLTCO(2)+SLTCO(4)
          ELSE
              SLTCO(2)=SLTCO(2)-SLTCO(4)
          ENDIF
C
          RETURN
          END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK muslcm
d24 3
@


1.1.1.1
log
@import julia 300
@
text
@@
