head	1.1;
access;
symbols
	jul313_3:1.1
	jul313_2:1.1
	jul313_1:1.1
	jul313:1.1
	jul312_1:1.1
	jul312:1.1
	jul311:1.1
	jul310_1:1.1
	jul310:1.1
	jul309_1:1.1
	jul309:1.1
	jul308_6:1.1
	jul308_5:1.1
	jul308_4:1.1
	jul308_3:1.1
	jul308_2:1.1
	jul308_1:1.1
	jul308:1.1
	jul307_4:1.1
	jul307_3:1.1
	jul307_2:1.1
	jul307_1:1.1
	jul307:1.1
	jul306_3:1.1
	jul306_2:1.1
	jul306_1:1.1
	jul306:1.1
	jul305_4:1.1
	jul305_3:1.1
	jul305_2:1.1
	jul305_1:1.1
	jul305:1.1
	jul304_3:1.1
	jul304_2:1.1
	jul304_1:1.1
	jul304:1.1
	jul303_7:1.1
	jul303_6:1.1
	jul303_5:1.1
	jul303_4:1.1
	jul303_3:1.1
	jul303_2_mc1:1.1
	jul303_2:1.1
	jul303_1_mc1:1.1
	jul303_1:1.1
	jul303_v:1.1
	jul303:1.1
	jul302_6:1.1
	jul302_5:1.1
	jul302_4:1.1
	jul302_3:1.1
	jul302_2:1.1
	jul302_1:1.1
	jul302:1.1
	jul285_1:1.1
	jul285:1.1;
locks; strict;
comment	@c @;


1.1
date	97.02.19.14.37.14;	author cattanem;	state Exp;
branches;
next	;


desc
@@


1.1
log
@add muredo
@
text
@      SUBROUTINE MUREDO(IER)
C----------------------------------------------------------------------
C
CKEY MUONID MUON RERUN / INTERNAL
C
C!
C!   Authors   :- G.Taylor
C!
C!   This routine can be called to rerun the muon identification part
C!   of JULIA outside the context of JULIA. Must call MUNEWR every time
C!   a new run is encountered.
C!
C!           IER /I = Error flag
C!                  = 0 ok
C!                  = 2 bad run for hcal digital pattern
C!                  > 10  problem in hrhtub
C!                  > 100 problem in mrmhit
C!                  > 1000 problem in muido
C!
C!======================================================================
#ifndef DOC
#include "bcs.h"
      LOGICAL HDODGY
#include "bmacro.h"
C----------------------------------------------------------------------
      IER=0
      CALL ABRUEV (KRUN,KEVE)
      IF (HDODGY(KRUN)) THEN
C
C This run is bad for muons. Set error flag.
C
        IER = 2
      ENDIF

      CALL BDROP(IW,'HROAMUEXHMADMTHRMHITMCADMUIDTREXD4CD')

      IF (KRUN.LT.2000) THEN
        CALL HRHTUB(IERT)
        IF (IERT.NE.0) IER = IER+10*IERT
      ENDIF
C
      CALL FTRACK
      CALL HMFIND
      IF (KRUN.LT.2000) THEN
        CALL MPREDM
      ELSE
        CALL MPREDG
      ENDIF
      IF (KRUN.LT.2000) THEN
        CALL MRMHIT(IERT)
        IF (IERT.NE.0) IER = IER+100*IERT
      ENDIF
      CALL MUASS
      CALL MUIDO(IERT)
      IF (IERT.NE.0) IER = IER+1000*IERT
      CALL BLIST(IW,'E+','MUIDD4CD')

      RETURN
      END
#endif
@
