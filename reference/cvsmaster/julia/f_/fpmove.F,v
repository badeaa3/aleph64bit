head	1.1;
access;
symbols
	jul313_3:1.1
	jul313_2:1.1
	jul313_1:1.1
	jul313:1.1
	jul312_1:1.1
	jul312:1.1
	jul311:1.1
	jul310_1:1.1
	jul310:1.1
	jul309_1:1.1
	jul309:1.1
	jul308_6:1.1
	jul308_5:1.1
	jul308_4:1.1
	jul308_3:1.1
	jul308_2:1.1
	jul308_1:1.1
	jul308:1.1
	jul307_4:1.1
	jul307_3:1.1
	jul307_2:1.1
	jul307_1:1.1
	jul307:1.1
	jul306_3:1.1
	jul306_2:1.1
	jul306_1:1.1
	jul306:1.1
	jul305_4:1.1
	jul305_3:1.1
	jul305_2:1.1
	jul305_1:1.1
	jul305:1.1
	jul304_3:1.1
	jul304_2:1.1
	jul304_1:1.1
	jul304:1.1
	jul303_7:1.1
	jul303_6:1.1
	jul303_5:1.1
	jul303_4:1.1
	jul303_3:1.1
	jul303_2_mc1:1.1
	jul303_2:1.1
	jul303_1_mc1:1.1
	jul303_1:1.1
	jul303_v:1.1
	jul303:1.1
	jul302_6:1.1
	jul302_5:1.1
	jul302_4:1.1
	jul302_3:1.1
	jul302_2:1.1
	jul302_1:1.1
	jul302:1.1;
locks; strict;
comment	@c @;


1.1
date	97.03.06.09.54.47;	author cattanem;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Tracking upgrade
@
text
@      SUBROUTINE FPMOVE(POINT,TPAR)
C ---------------------------------------------------------------------------
C! Re-define the track parameters relative to a new point in space.
C  Author                                             Dave Brown 4-9-93

      IMPLICIT NONE
C
C  Inputs; point in space, track parameters
C
      REAL POINT(3),TPAR(5)
C
C  Outputs;
C      TPAR  updated
C -------------------------------------------------------------------------
#ifndef DOC
#include "alcons.h"
C  Local variables
C
      INTEGER ISOL
      INTEGER NPI
      REAL DELTA,RADIUS
      REAL OMEGA,TANL,PHI0,D0,Z0,COSP0,SINP0,DPHI,PHI,SDIST
      REAL NEWD0,MIND0
      REAL OFFSET(2)
      DATA OFFSET /0.,PI/
C -------------------------------------------------------------------------
C
C  Put track parameters into local variables
C
      OMEGA = TPAR(1)
      TANL= TPAR(2)
      PHI0 = TPAR(3)
      D0  = TPAR(4)
      Z0  = TPAR(5)
      RADIUS = 1.0/OMEGA
      DELTA  = RADIUS - D0
      COSP0 = COS(PHI0)
      SINP0 = SIN(PHI0)
      DPHI = ATAN2(DELTA*SINP0+POINT(1),DELTA*COSP0-POINT(2))
      IF(DPHI-PHI0.GT.PI) DPHI = DPHI-TWOPI
      IF(DPHI-PHI0.LT.-PI)DPHI = DPHI+TWOPI
C
C  Try both tangent branches explicitly
C
      MIND0 = 1000000000.0
      DO ISOL=1,2
        PHI = DPHI + OFFSET(ISOL)
        IF(ABS(SIN(PHI)).GT.0.5)THEN
          NEWD0 = RADIUS -(DELTA*SINP0 + POINT(1))/SIN(PHI)
        ELSE
          NEWD0 = RADIUS -(DELTA*COSP0 - POINT(2))/COS(PHI)
        END IF
        IF(ABS(NEWD0).LT.MIND0)THEN
          MIND0 = ABS(NEWD0)
C
C  Choose the best 2pi wrap for the Z distance
C
          NPI = NINT( (OMEGA*(POINT(3)-Z0)/TANL - (PHI-PHI0))/TWOPI )
          TPAR(3) = PHI + NPI*TWOPI
          TPAR(4) = NEWD0
          SDIST = (TPAR(3)-PHI0)/OMEGA
          TPAR(5) = Z0 + SDIST*TANL - POINT(3)
        END IF
      END DO
C
C  Done
C
      RETURN
      END
#endif
@
