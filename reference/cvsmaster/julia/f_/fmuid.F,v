head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.00.34;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.10;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.11;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
@
text
@      SUBROUTINE FMUID(ITK,PRPI,PRK,PRMU,IFLAG)
C----------------------------------------------------------------------
C! Find probability density function for pi,k,mu using mu-chamber.
C!
C!   Author   :- John Hilgart          13-FEB-1989
C!
C!   Inputs: ITK track no. in FRFT
C!
C!            PDF :== "probability density function"
C!   Outputs: PRPI  PDF for pi hypothesis
C!            PRK   PDF for kaon hypothesis
C!            PRMU  PDF for mu hypothesis
C!            IFLAG = 0 if mu chamber information was available for track
C!
C!   Description The algorithm will be described in tedious detail in
C!   =========== a future ALEPH note by Hilgart and Simopoulou.
C A1PI,A2PI, etc. give the 4 parameters for the pion probability dens
C function in the mu chambers, similarly,
C A1K,A2K, etc. for the kaons
C The XLAYR array has distance ratio cutoffs used in JULIA
C PUNCH gives punch-through probabilites for pi's, k's, and mu's measured
C    at a few energies
C XASS gives the relative probability of associating to 1 or 2 mu layers
C  for the different particles at the different energies.
C PINT delineates the momentum intervals appropriate to the PUNCH array.
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "alcons.h"
#include "afidjj.h"
#include "frftjj.h"
#include "mcadjj.h"
      PARAMETER (LPINT = 4, LPI = 1, LK = 2, LMU=3)
      PARAMETER (LSPEC = 3)
      DIMENSION PUNCH(LSPEC,LPINT),
     &   PINT(LPINT),XLAYR(2),XASS(LSPEC,LPINT,2)
      DIMENSION RATI(2),A1K2(LPINT),A2K2(LPINT),
     &      A3K2(LPINT),A4K2(LPINT),A1PI(LPINT),A2PI(LPINT),A3PI(LPINT),
     &      A4PI(LPINT)
C
C These constants are very specific: They are coefficients for a fit.
C perhaps they will end up on the data base
      DATA A1PI /5.599E-2,4.748E-2,2.869E-2,2.869E-2/
      DATA A2PI /-1.660E-3,-2.322E-2,1.498E-2,1.498E-2/
      DATA A3PI /1.048,1.229,1.501,1.501/
      DATA A4PI /1.396,1.329,.9852,.9852/
C
      DATA A1K2 /2.078E-2,.1899,.1789,.2935/
      DATA A2K2 /7.517E-3,-3.103E-2,-1.742E-2,-9.204E-2/
      DATA A3K2 /.6404,.5792,.6371,.7674/
      DATA A4K2 /2.525,1.831,1.466,1.169/
      DATA A1K1,A2K1,A3K1,A4K1 /4.81E-2,.5337,-.3653,8.599E-2/
C
      DATA  PUNCH /.0086,.0232,.967, .0090,.02405,.973,
     &             .00520,.02165,.961, .00785,.01885,.955/
      DATA PINT / 4.25,7.5,17.5,40./
C
      DATA XASS /.145,.233,.0900, .106,.210,.0843, .202,.259,.101,
     &   .476,.405,.0901,
     &   .855,.767,.910, .894,.790,.9157, .798,.741,.899,
     &   .424,.595,.9099/
C
      DATA IONC /0/
C
C Statement functions
#include "bmacro.h"
      FMU(RAT,IASS,ICHO) = XASS(LMU,ICHO,IASS)*2.*RAT*EXP(-RAT*RAT)
      FNOMU(A1,A2,A3,A4,RAT) = A1 + A2*RAT +
     & A3*RAT*EXP(-RAT*RAT/A4)
      FPI(RAT,IASS,ICHO) = XASS(LPI,ICHO,IASS)*
     &   FNOMU(A1PI(ICHO),A2PI(ICHO),A3PI(ICHO),A4PI(ICHO),RAT)
      FK1(RAT,ICHO) = XASS(LK,ICHO,1)*(A1K1 + RAT*(A2K1 +
     &   RAT*(A3K1 + RAT*A4K1)))
      FK2(RAT,ICHO) = XASS(LK,ICHO,2)*
     &   FNOMU(A1K2(ICHO),A2K2(ICHO),A3K2(ICHO),A4K2(ICHO),RAT)
C
      IF (IONC.EQ.0) THEN
C
         NMCAD = NAMIND('MCAD')
         NFRFT = NAMIND('FRFT')
C Get distance ratio cutoffs
         NMCUT = NAMIND('MCUT')
         JMCUT = IW(NMCUT)
         DO 1 ID = 1, 2
            XLAYR(ID) = 4.0
            IF (JMCUT.GT.0)  XLAYR(ID) = RW(JMCUT+2+ID)
    1    CONTINUE
C
C Magnetic field
         NAFID = NAMIND('AFID')
         KAFID = IW(NAFID)
         IF (KAFID.GT.0) THEN
            BFIEL = RTABL(KAFID,1,JAFIMF)
         ELSE
            BFIEL = 15.
         ENDIF
         BFLCLT = BFIEL*CLGHT*1.E-5
         IONC = 1
      ENDIF
      IFLAG = 1
      PRPI = 0.
      PRK = 0.
      PRMU = 0.
C
C simple tests for conditions under which I will not try to find a muon:
C Is there an MCAD bank?
      KMCAD = IW(NMCAD)
      KFRFT = IW(NFRFT)
      IF (KMCAD.LE.0)  GOTO 900
      DO 2 IROW = 1, LROWS(KMCAD)
         JMCAD = KROW(KMCAD,IROW)
         IF (IW(JMCAD+JMCATN).EQ.ITK)  GOTO 3
  2   CONTINUE
  3   IF (IROW.GT.LROWS(KMCAD))  GOTO 900
C Use inverse radius of curvature and tanL of the track from FRFT
      JFRFT = KROW(KFRFT,ITK)
      PT = ABS(BFLCLT/RW(JFRFT+JFRFIR))
      PZ = PT*RW(JFRFT+JFRFTL)
      PMOM = SQRT(PT**2 + PZ**2)
C
C Only consider TPC tracks w/ P>3Gev
      IF (ABS(PZ/PMOM).GT. .95 .OR. PMOM.LT.3.)  GOTO 900
C
      DO 10 ICHO = 1, LPINT
 10      IF (PMOM .LT. PINT(ICHO)) GOTO 11
 11   CONTINUE
      IF (ICHO.GT.LPINT)  ICHO = LPINT
C
C Get ratio from mu ass. bank
      IASS = 0
      DO 30 ID = 1, 2
         RATI(ID) = 999.
C We use the distance ratios  from the mu chambers
         CUTOF = RW(JMCAD+JMCADC+ID-1)
         DIST = RW(JMCAD+JMCADH+ID-1)
C
C Distance ratios
         IF (CUTOF .GT. 1.E-5 .AND. DIST .GT. 1.E-5)  RATI(ID) =
     &      XLAYR(ID)*DIST/CUTOF
         IF (RATI(ID) .LT. 3.)  IASS = IASS + 1
 30   CONTINUE
      IF (IASS.EQ.0)  GOTO 900
      RAT = RATI(1)
      IF (RAT .GT. 3.) RAT = RATI(2)
C
C We now calculate the probability density functions for mu,pi,k
      PRMU = PUNCH(LMU,ICHO)*FMU(RAT,IASS,ICHO)
C
C The k's and pi's behave differently if only 1 layer is hit. mu's do not.
      IF (IASS .EQ. 1) THEN
C
C W/ pi's we don't really know the distribution very accurately.
         PRPI = PUNCH(LPI,ICHO)*FPI(RAT,IASS,1)
         PRK = PUNCH(LK,ICHO)*FK1(RAT,ICHO)
      ELSE
C
C The more common case of 2 associated hits
         PRPI = PUNCH(LPI,ICHO)*FPI(RAT,IASS,ICHO)
         PRK = PUNCH(LK,ICHO)*FK2(RAT,ICHO)
      ENDIF
      IFLAG = 0
      RETURN
C
  900 CONTINUE
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK fmuid
@


1.1.1.1
log
@import julia 300
@
text
@@
