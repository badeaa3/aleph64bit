head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	96.03.12.15.06.17;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.17.12;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.32;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.33;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE INSECT(ITRY,LAYER,PAR,COV,TPHIS,THSCT,XPAR,ROAD,IWWIN,
     +IER)
C-----------------------------------------------------------------------
C!  Intersect TPC track with ITC layer.
C!
C!    Author      :- J. Sedgbeer 87/02/09
C!    Modified    :- J. Sedgbeer 88/06/22
C!    Modified    :- I. Tomalin  89/09/01
C!    Modified    :- P. Comas    94/08/18
C!    Modified    :- J.Sedgbeer  95/08/10 Add test for intersection.
C!                   Also tighten sin(A) test to not allow angles too
C!                   near 90 deg.
C!
C!   Input:
C!     ITRY   /I  : Type of search flag
C!     LAYER  /I4 : ITC layer number
C!     PARi   /R4 : TPC track parameters (sig*r0,tanl,phi0,d0,z0)
C!     COVi   /R4 : TPC Covariance matrix (as in TGFT bank)
C!     TPHIS  /R4 : Phi of TPC track at intersection with scatt. radius
C!     THSCT  /R4 : r.m.s. scat. angle of TPC track (proj. into r-phi)
C!     need commons /ITWICC/ for ITC geom.
C!                  /ITRKCC/ for tracking params and constants.
C!                  /IRESOL/ for resolution.
C!                  /ITRKER/ for tracking param.
C!     need  ALCONS  for pi etc.
C!
C!   Output:
C!     XPARi  /R4 : i=1  phi of  intersection
C!                  i=2  z of intersection
C!                  i=3  angle of track thro cell
C!     ROADi  /R4 : i=1  1 sigma uncertainty in XPAR(1) (cm)
C!                  i=2  1 sigma uncertainty in XPAR(2) (cm)
C!     IWWINi /I4 : i=1  lower bound of wire numbers inside road
C!                  i=2  upper bound of wire numbers inside road
C!     IER    /I4 : error flag   = 0  O.K.
C!                               = 1 no intersection
C!
C!   called by : IGICHA
C!   calls     : none
C!
C!   Libraries required: none
C!
C-----------------------------------------------------------------------
#ifndef DOC
#include "rparac.h"
#include "rflags.h"
#include "rlunit.h"
C-----------------------------------------------------------------------
#include "alcons.h"
#include "itwicc.h"
#include "itrkcc.h"
#include "iresol.h"
#include "itrker.h"
C-----------------------------------------------------------------------
      DIMENSION PAR(*),COV(*),XPAR(*),ROAD(*),IWWIN(*)
C-----------------------------------------------------------------------
      IER=1
C
C Get intersection of track with ITC layer.
C
      R0    = PAR(1)
      RAD   = RWIRIT(LAYER)
      RADQ  = RAD*RAD
      D0    = PAR(4)
      D0Q   = D0*D0
C
C Check that track intersects layer
C
      IF (ABS(D0).GT.RAD .OR. ABS(2.0*R0-D0).LT.RAD) GOTO 999
C
      FACT1 = (RAD-D0)*(RAD+D0)
      FACT2 = 0.5*FACT1/(R0-D0)
      SINA  = (FACT2-D0)/RAD
C
C Limit angle to 89.9deg approx.
      IF(ABS(SINA).GE.0.999999) GOTO 999
      PHIT = PAR(3) + ASIN(SINA)
      PHIT = MOD(PHIT+TWOPI,TWOPI)
      XPAR(1) = PHIT
C
C Calculate the derivatives of PHIT w.r.t. 1/PAR(1), PAR(3) and PAR(4).
C First get the derivative of PHIT w.r.t. SINA and of SINA w.r.t.
C 1/PAR(1) and PAR(4). (N.B. COV is in terms of 1/PAR(1)).
C
      DPDSA = 1.0/SQRT(1.0-SINA**2)
      DSDT1 = -(SINA + D0/RAD)/(R0 - D0)
      DSDT1 = -DSDT1*R0**2
      DSDT4 = SINA/(R0 - D0) - 1.0/RAD
C
      DPDT1 = DPDSA*DSDT1
      DPDT3 = 1.0
      DPDT4 = DPDSA*DSDT4
C Calculate error on PHIT due to errors on TPC track (also include some
C protection, incase COV was not positive definate).
      ERPHI = DPDT1*(COV(1)*DPDT1 + 2.0*COV(4)*DPDT3 + 2.0*COV(7)*DPDT4)
     +      + DPDT3*(COV(6)*DPDT3 + 2.0*COV(9)*DPDT4)
     +      + DPDT4*COV(10)*DPDT4
      ERPHI = SQRT(ABS(ERPHI))
C The next line displays a lack of faith in the TPC covariance matrix.
      ERPHI = MIN(ERPHI,0.020)
C
      SPSI2 = 0.5*FACT2/R0
      IF (SPSI2.LT.0.0.OR.SPSI2.GT.1.0) GOTO 999
      PSI = ASIN(SQRT(SPSI2))
      XPAR(2) = PAR(5) + 2.0*PSI*ABS(R0)*PAR(2)
      IF(ABS(XPAR(2)).GT.WZMXIT) GOTO 999
C
      SINB = (0.5*FACT1+R0*D0)/(RAD*R0)
      IF(ABS(SINB).GT.1.0) GOTO 999
      XPAR(3) = ASIN(SINB)
C Make approx. correction to XPAR(1) for the fact that the fact that
C the cylinder which the track intersects has an alignment offset.
C Don't bother with XPAR(2) as z-resolution is so bad.
      RT = RAD
      ZT = XPAR(2)
      CALL ITROTN(RT,PHIT,ZT)
      EXTPH = XPAR(1) - PHIT
      DELPH = (1.0-RAD/RT)*TAN(XPAR(3))
      XPAR(1) = XPAR(1) + DELPH
      XPAR(1) = MOD(XPAR(1)+TWOPI,TWOPI)
C Find the distance between the intercept of the track with the
C scattering radius and that with this layer of the ITC.
      DIST = SQRT(RSCAIT**2 + RAD**2 -
     +         2.0*RSCAIT*RAD*COS(TPHIS-XPAR(1)))
C
C Find the 1 sigma uncertainties on XPAR(1) and XPAR(2).
C Protect against square root of negative value... (P.Comas)
      ROAD(1) = SQRT(MAX(0.0, 1.0-(0.5*DIST/R0)**2)
     +        *(THSCT*DIST/COS(XPAR(3)))**2
     +        + (RAD*ERPHI)**2)
C Set ROAD(2) = 0.0 as it is negligable compared with ITC resolution.
      ROAD(2) = 0.0
C
C Find wire numbers to be searched.
C First note the range in phi to be searched (include alignment
C correction).
      RD1 = SQRT(ROAD(1)**2 + MIN(2.0*SIGRIR(LAYER),SMAXIR(LAYER))**2)
      PHID = XPAR(1) + EXTPH - SIGNUM(ITRY)*RD1/RAD
      PHIU = XPAR(1) + EXTPH + SIGNUM(ITRY)*RD1/RAD
      PHID = MOD(PHID+TWOPI,TWOPI)
      PHIU = MOD(PHIU+TWOPI,TWOPI)
C Note cell size and phi shift beginning of 1st cell.
      DLN  = TWOPI/FLOAT(NWIRIT(LAYER))
      SHFN = PHWRIT(LAYER) - DLN*0.5
C
      PHDS = PHID - SHFN
      PHUS = PHIU - SHFN
      PHDS = AMOD(PHDS+TWOPI,TWOPI)
      PHUS = AMOD(PHUS+TWOPI,TWOPI)
      IWWIN(1) = INT(PHDS/DLN) + IWIRIT(LAYER) + 1
      IWWIN(2) = INT(PHUS/DLN) + IWIRIT(LAYER) + 1
C
      IF(FDEBRF.AND.JDBDRF(JULIT).GE.6) THEN
        WRITE(LDEBRL,5001) PAR(1),LAYER,XPAR(1),ROAD(1),XPAR(2),ROAD(2),
     +  IWWIN(1),IWWIN(2)
 5001   FORMAT(' INSECT : Radius=',E10.3,' LAYER=',I1,' Phi intersect=',
     +  F6.3,'+-',F6.3,' Z intersect=',F6.1,'+-',F6.1,
     +  ' Wire search=',I3,'->',I3)
      ENDIF
C
      IER = 0
C
  999 CONTINUE
      END
#endif
@


1.2
log
@julia version 279
@
text
@a0 1
*DK insect
@


1.1
log
@Initial revision
@
text
@d11 3
d68 5
a72 1
      FACT1 = RADQ - D0Q
d76 2
a77 1
      IF(ABS(SINA).GT.1.0) GOTO 999
@


1.1.1.1
log
@import julia 300
@
text
@@
