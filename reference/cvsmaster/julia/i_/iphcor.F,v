head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.06.30;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.33;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.34;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      REAL FUNCTION IPHCOR(IC,IAMB,ENANG,DTCOR)
C-----------------------------------------------------------------------
C!  Apply drift-time correction to phi value.
C!
C!    Author      :- J. Sedgbeer 87/02/09
C!    Modified    :- I. Tomalin  89/08/17
C!    Modified    :- J. Sedgbeer 89/10/14 Use Fine-tune d-t corrs.(IEDD)
C!    Modified    :- J. Sedgbeer 89/11/02
C!    Modified    :- J. Sedgbeer 93/07/01 Use func. IDDIST for
C!                                        calc. of drift-distance.
C!
C!   Input:
C!      IC   /I  :  Coord number in ITCO bank
C!      IAMB /I  :  Ambiguity in ITCO bank:
C!                   =  0 => use parameter offset JITCP2
C!                   = -1 => use     "       "    JITCP1
C!      ENANG/R  :  entrance angle of track segment
C!      DTCOR/R  :  drift time in ITCO bank to be increased by DTCOR
C!     commons: /BCS/
C!              /ITWICC/ ITC wire geom.
C!     params : ITCOJJ
C!              IEDDJJ
C!              ALCONS
C!
C!   Output:
C!      IPHCOR /R : Corrected phi value
C!
C!   calls:   IDDIST (Alephlib)
C!   Libraries required: none
C!
C-----------------------------------------------------------------------
#ifndef DOC
#include "rparac.h"
#include "rlunit.h"
C-----------------------------------------------------------------------
#include "bcs.h"
#include "alcons.h"
#include "itcojj.h"
#include "ieddjj.h"
#include "itwicc.h"
      INTEGER LAY
      REAL DTIM,DDDT,IDDIST
      EXTERNAL NAMIND,NLINK,IDDIST
      LOGICAL FIRST
      INTEGER NITCO
      DATA FIRST/.TRUE./
C-----------------------------------------------------------------------
#include "bmacro.h"
C-----------------------------------------------------------------------
      IF(FIRST) THEN
        NIEDD = NAMIND('IEDD')
        NITCO = NAMIND('ITCO')
        FIRST = .FALSE.
      ENDIF
      KITC1 = IW(NITCO)
      IF ( KITC1        .NE. 0 .AND.
     &     IW(KITC1-2)  .LT. 1 ) THEN
        KITC1 = IW(KITC1-1)
      ENDIF
      JITC1 = KROW(KITC1,IC)
      LAY   = IW(JITC1+JITCWN)/1000
      RLAY  = RW(JITC1+JITCRA)
      PHI   = RW(JITC1+JITCP2+IAMB)
      DTIM  = RW(JITC1+JITCDT)
                    SG =  1.
      IF(IAMB.EQ.0) SG = -1.
C
C Calculate original drift-distance (use drift-relation).
      DIST = IDDIST(LAY,DTIM,DDDT)
      IF(DIST.LT.0.) DIST = 0.
      FRAC = DIST/(0.5*CELWIT(LAY))
C
C Correct the distance using look-up table in IEDD bank
C
      DCOR = 0.
      KIEDD = IW(NIEDD)
      IF(KIEDD.GT.0) THEN
        KK = KROW(KIEDD,LAY)
        NB = IW(KK+JIEDNB)
        IF(NB.GT.1) THEN
          BL = RW(KK+JIEDBL)
          BH = RW(KK+JIEDBH)
          BW = RW(KK+JIEDBW)
          DISTS = SG*FRAC
          IF (DISTS.LE.BL) THEN
            DCOR = RW(KK+JIEDDD)
          ELSEIF (DISTS.GE.BH) THEN
            DCOR = RW(KK+JIEDDD-1+NB)
          ELSE
            I = (DISTS-BL)/BW + 1
            D = DISTS - BL - (I-1)*BW
            DCOR = RW(KK+JIEDDD-1+I) +
     +               (RW(KK+JIEDDD+I) - RW(KK+JIEDDD-1+I))*D/BW
          ENDIF
        ENDIF
      ENDIF
      DIST =  DIST - DCOR
      IF(DIST.LT.0.) DIST = 0.
C
C Calculate the new drift-distance.
      IF (ABS(DTCOR).LT.0.005) THEN
        DISTN = DIST
      ELSE
        DTIMN = MAX(DTIM+DTCOR,0.0)
        DISTN = IDDIST(LAY,DTIMN,DDDT)
        IF(DISTN.LT.0.) DISTN = 0.
        FRAC = DISTN/(0.5*CELWIT(LAY))
        DCOR = 0.
        KIEDD = IW(NIEDD)
        IF(KIEDD.GT.0) THEN
          IF(NB.GT.1) THEN
            DISTS = SG*FRAC
            IF (DISTS.LE.BL) THEN
              DCOR = RW(KK+JIEDDD)
            ELSEIF (DISTS.GE.BH) THEN
              DCOR = RW(KK+JIEDDD-1+NB)
            ELSE
              I = (DISTS-BL)/BW + 1
              D = DISTS - BL - (I-1)*BW
              DCOR = RW(KK+JIEDDD-1+I) +
     +                 (RW(KK+JIEDDD+I) - RW(KK+JIEDDD-1+I))*D/BW
            ENDIF
          ENDIF
        ENDIF
        DISTN =  DISTN - DCOR
        IF(DISTN.LT.0.) DISTN = 0.
      ENDIF
C
C Note the change in the effective drift-distance (include protection
C against the singularity).
C
      DELD = DISTN/MAX(ABS(COS(ENANG)),0.05) - DIST
      DELP = DELD/RLAY
      IPHCOR = PHI + SG*DELP
      IF(IPHCOR.GT.TWOPI) IPHCOR = IPHCOR-TWOPI
      IF(IPHCOR.LT.0.0)   IPHCOR = IPHCOR+TWOPI
C
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK iphcor
d45 1
d52 1
d55 5
a59 1
      KITC1 = NLINK('ITCO',1)
@


1.1.1.1
log
@import julia 300
@
text
@@
