head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.07.13;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.38;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.39;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE ITCCUT
C-----------------------------------------------------------------------
C! Make cuts on ITC points to be included on tracks.
C!
C!   Author     :- J. Carr   11/02/91
C!
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "icmrjj.h"
#include "alcons.h"
C-----------------------------------------------------------------------
#include "iasigc.h"
#include "itcinf.h"
C-----------------------------------------------------------------------
      LOGICAL FIRST
      DATA FIRST/.TRUE./
C----------------------------------------------------------------------
#include "bmacro.h"
C----------------------------------------------------------------------
C
C
      DO 100 IT=1,NTKITC
C       Cut on latched+dead hits.
        IF(NHTITC(IT)+NDHITC(IT).LE.NHMNIA) THEN
C          wipe out hits
           DO 101 IL=1,8
              IF(FLGITC(IL,IT).LE.0) FLGITC(IL,IT)=6
  101      CONTINUE
           NGHITC(IT) = 0
C       Require 2 hits in 1st road .
        ELSE IF(NGHITC(IT).LT.2) THEN
C          wipe out hits
           DO 102 IL=1,8
             IF(FLGITC(IL,IT).LE.0) FLGITC(IL,IT)=7
  102      CONTINUE
           NGHITC(IT) = 0
C     impose a road around rmean
        ELSE
           ILOST=0
           DO 103 IL=1,8
              IF(FLGITC(IL,IT).LE.0) THEN
                 RES = (RSFITC(IL,IT)-RMNITC(IT))/DERITC(IL,IT)
                 IF( ABS(RES).GT.SMAXIA) THEN
                    ILOST=ILOST+1
                    FLGITC(IL,IT)=9
                    NGHITC(IT) = NGHITC(IT) - 1
                 ENDIF
              ENDIF
  103      CONTINUE
           IF(ILOST.GT.0) THEN
              IF(NGHITC(IT).GE.2) THEN
C                Calculate ITC alone Xi**2 again
                 RMEAN=0.
                 DO 104 IL=1,8
                    IF(FLGITC(IL,IT).LE.0) RMEAN=RMEAN+RSFITC(IL,IT)
  104            CONTINUE
                 RMEAN = RMEAN / NGHITC(IT)
                 RMNITC(IT)=RMEAN
                 RMAX=0.
                 XISITC(IT)=0.
                 DO 105 IL=1,8
                    IF(FLGITC(IL,IT).LE.0) THEN
                       RSC= (RSFITC(IL,IT)-RMEAN)/DERITC(IL,IT)
                       XISITC(IT)=XISITC(IT)+RSC**2
                       IF(ABS(RSC).GT.ABS(RMAX)) THEN
                          RMAX=RSC
                          LRXITC(IT)=IL
                       ENDIF
                    ENDIF
  105            CONTINUE
                 XISITC(IT)=XISITC(IT) / (NGHITC(IT)-1)
              ELSE
C                wipe out hits
                 DO 106 IL=1,8
                    IF(FLGITC(IL,IT).LE.0) FLGITC(IL,IT)=7
  106            CONTINUE
                 NGHITC(IT) = 0
              ENDIF
           ENDIF
        ENDIF
  100 CONTINUE
C
C Create ICMR bank for coord.-to-track relation for resolving
C         assignments of one point to two tracks
C
      KITCO = NLINK('ITCO',0)
      IF (KITCO.LE.0) GOTO 998
      NCO = LROWS(KITCO)
      IF(NCO.LE.0) GOTO 998
      LICMR  = NCO*LICMRA + LMHLEN
      CALL AUBOS('ICMR',0,LICMR,KICMR,IGARB)
      IF (IGARB.EQ.2) GOTO 998
      IW(KICMR+LMHROW) = NCO
      IW(KICMR+LMHCOL) = LICMRA
      CALL BLIST(IW,'T+','ICMR')
C
      DO 200 IT=1,NTKITC
        IF(NGHITC(IT).EQ.0) GO TO 200
        DO 201 IL=1,8
          IF(FLGITC(IL,IT).GT.0) GOTO 201
          ICO = ICOITC(IL,IT)
          KK = KROW(KICMR,ICO)
          IF(IW(KK+JICMCN).EQ.0) THEN
             IW(KK+JICMIL) = IL
             IW(KK+JICMCN) = 1
             IW(KK+JICMT1) = IT
          ELSEIF(IW(KK+JICMCN).EQ.1) THEN
             IW(KK+JICMCN) = 2
             IW(KK+JICMT2) = IT
          ELSE
C            if this hit already used twice junk it.
             IW(KK+JICMCN) = IW(KK+JICMCN)+1
             FLGITC(IL,IT)=10
             NGHITC(IT)=NGHITC(IT)-1
             NRHITC(IT)=NRHITC(IT)+1
          ENDIF
  201   CONTINUE
  200 CONTINUE
C
C      Search for double use of hit.
C
      DO 300 ICO=1,NCO
          KK = KROW(KICMR,ICO)
          IF(IW(KK+JICMCN).GT.2) THEN
C            wipe out hits if used by more than 2 tracks
             IL=IW(KK+JICMIL)
             IT1=IW(KK+JICMT1)
             FLGITC(IL,IT1)=10
             NGHITC(IT1)=NGHITC(IT1)-1
             NRHITC(IT1)=NRHITC(IT1)+1
             IT2=IW(KK+JICMT2)
             FLGITC(IL,IT2)=10
             NGHITC(IT2)=NGHITC(IT2)-1
             NRHITC(IT2)=NRHITC(IT2)+1
          ELSEIF(IW(KK+JICMCN).EQ.2) THEN
C            wipe out both hits if tracks too close
             IL=IW(KK+JICMIL)
             IT1=IW(KK+JICMT1)
             IT2=IW(KK+JICMT2)
             DTRKS=RSFITC(IL,IT1)-RSFITC(IL,IT2)
             DLIMI=FJUNCU*(TERITC(IT1)+TERITC(IT2))
             IF(ABS(DTRKS).LT.DLIMI) THEN
                FLGITC(IL,IT1)=11
                NGHITC(IT1)=NGHITC(IT1)-1
                NRHITC(IT1)=NRHITC(IT1)+1
                FLGITC(IL,IT2)=11
                NGHITC(IT2)=NGHITC(IT2)-1
                NRHITC(IT2)=NRHITC(IT2)+1
             ELSE
C            wipe out one furthest from track
                IF(ABS(RSFITC(IL,IT1)).LT.ABS(RSFITC(IL,IT2)))THEN
                   FLGITC(IL,IT2)=12
                   NGHITC(IT2)=NGHITC(IT2)-1
                   NRHITC(IT2)=NRHITC(IT2)+1
                ELSE
                   FLGITC(IL,IT1)=12
                   NGHITC(IT1)=NGHITC(IT1)-1
                   NRHITC(IT1)=NRHITC(IT1)+1
                ENDIF
             ENDIF
          ENDIF
 300  CONTINUE
      IDUM=NDROP('ICMR',0)
C
      DO 400 IT=1,NTKITC
C        Filter bad points with big contribution to xis
C        drop one point with biggest contribution to xi2
C        if go below NCMNIA(1) hits drop them all
C        otherwise continue no matter what xi2 is.
         IF(XISITC(IT).GE.XISFIL) THEN
  401       CONTINUE
C             wipe out hit with biggest xis if contribution is large
C             use same value of XISFIL for individual chs, for no good reason
              ILAY=LRXITC(IT)
              XISC=( (RSFITC(ILAY,IT)-RMNITC(IT))/DERITC(ILAY,IT) )**2
              ILOST=0
              IF(XISC.GT.XISFIL) THEN
                 ILOST=1
C                make sure this hit was not robbed by another track
                 IF(FLGITC(ILAY,IT).LE.0) THEN
                    FLGITC(ILAY,IT)=13
                    NGHITC(IT) = NGHITC(IT) - 1
                 ENDIF
                 IF(NGHITC(IT).GE.2) THEN
C                   Calculate ITC alone Xi**2 again
                    RMEAN=0.
                    DO 403 IL=1,8
                       IF(FLGITC(IL,IT).LE.0) RMEAN=RMEAN+RSFITC(IL,IT)
  403               CONTINUE
                    RMEAN = RMEAN / NGHITC(IT)
                    RMNITC(IT)=RMEAN
                    RMAX=0.
                    XISITC(IT)=0.
                    DO 404 IL=1,8
                       IF(FLGITC(IL,IT).LE.0) THEN
                          RSC= (RSFITC(IL,IT)-RMEAN)/DERITC(IL,IT)
                          XISITC(IT)=XISITC(IT)+RSC**2
                          IF(ABS(RSC).GT.ABS(RMAX)) THEN
                             RMAX=RSC
                             LRXITC(IT)=IL
                          ENDIF
                       ENDIF
  404               CONTINUE
                    XISITC(IT)=XISITC(IT) / (NGHITC(IT)-1)
                 ELSE
                    ILOST=-1
C                    wipe out hits
                    DO 405 IL=1,8
                       IF(FLGITC(IL,IT).LE.0) FLGITC(IL,IT)=7
  405               CONTINUE
                    NGHITC(IT) = 0
                 ENDIF
              ENDIF
C             loop back if hit was cut and hits >2
            IF(ILOST.EQ.1.AND.NGHITC(IT).GT.2
     ,               .AND.XISITC(IT).GE.XISFIL) GO TO 401
          ENDIF
C         Cut on xis if only 2 hits
          IF(NGHITC(IT).EQ.2.AND.XISITC(IT).GE.XISFIL) THEN
C            wipe out hits
             DO 406 IL=1,8
                IF(FLGITC(IL,IT).LE.0) FLGITC(IL,IT)=14
  406        CONTINUE
             NGHITC(IT) = 0
         ENDIF
C
C        FIND LAYER SPAN
         IL1=0
         DO 450 IL=1,8
            IF(FLGITC(IL,IT).LE.0) THEN
               IF(IL1.EQ.0) IL1=IL
               IL2=IL
            ENDIF
  450    CONTINUE
  400 CONTINUE
C
      RETURN
C Errors
  998 CONTINUE
      CALL RERROR('ITCCUT',1,' No room for ICMR Bank!!!!')
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK itccut
@


1.1.1.1
log
@import julia 300
@
text
@@
