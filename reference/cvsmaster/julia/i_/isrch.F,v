head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.07.05;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.37;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.38;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE ISRCH(ITRY,ITYP,IL,XPAR,ROAD,IWWIN,PAR,OUT,DSPIR)
C-----------------------------------------------------------------------
C!   Search ITC coordinates in specified road.
C!
C!    Author      :- J. Sedgbeer 87/02/09
C!    Modified    :- J. Sedgbeer 88/05/09
C!    Modified    :- I. Tomalin  89/09/01
C!    Modified    :- I. Tomalin  90/01/19
C!
C!   Input:
C!    ITRY  /I : Type of search flag
C!    ITYP  /I : Search type:
C!                         = 1 closest hit only.
C!                         = 2 all hits in road (max NMAX) Test r-phi
C!    IL     /I : ITC layer number
C!    XPARi  /R4: phi, z and angle of intersection
C!    ROADi  /R4: 1 sigma uncertainties on XPAR(1) and XPAR(2)
C!    IWWINi /I4: wire numbers bounding the road
C!    PARi   /R4: TPC track parameters.
C!                i=1,6 (sig*r0,tanl,phi0,d0,z0,TPC track no.)
C!    OUT    /L4  : .TRUE. if particle moved outwards though the
C!                     detector along the current arc.
C!    DSPIR  /R4  : Approximately, this is the path length which
C!                     the particle has traversed.
C!    need commons /BCS/ for ITCO and work banks
C!                 /ITWICC/ for ITC geometry
C!                 /IWBNKT/ for pointers to work banks
C!                 /ITRKPA/ for tracking constants
C!                 /ITRKER/ for tracking const.
C!         params.  ALCONS
C!                  ITCOJJ
C!
C!   Output:
C!      Fills common /IROADC/ with information about coordinates inside
C!      the road in layer IL.
C!
C!   called by : IGICHA
C!   calls real function IPHCOR for drift-time correction
C!
C-----------------------------------------------------------------------
#ifndef DOC
#include "rparac.h"
#include "rflags.h"
#include "rlunit.h"
C-----------------------------------------------------------------------
#include "bcs.h"
#include "itwicc.h"
#include "itrkpa.h"
#include "itrker.h"
#include "itcojj.h"
#include "alcons.h"
#include "iwbnkt.h"
#include "iroadc.h"
C-----------------------------------------------------------------------
      INTEGER NLINK
      EXTERNAL NLINK
      LOGICAL OUT
      REAL IPHCOR
      EXTERNAL IPHCOR
      DIMENSION XPAR(*),ROAD(*),IWWIN(*),PAR(*)
C-----------------------------------------------------------------------
#include "bmacro.h"
C-----------------------------------------------------------------------
C Get ITCO bank and number of coords.
C
      NC=0
      KITC0=NLINK('ITCO',0)
      KITC1=NLINK('ITCO',1)
      PHTRK=XPAR(1)
      ZTRK=XPAR(2)
      ENANG=XPAR(3)
C
C Correct the drift time for the fact that the track spiralled several
C times around the central detector, if necessary.
      R0 = PAR(1)
      D0 = PAR(4)
C First find the r-phi component of the drift time correction.
      TRCOR = DSPIR/CLGHT
      IF (.NOT.OUT) TRCOR = TRCOR + 2.0*ABS(R0)/CLGHT*
     +ASIN(1.0-(RWIRIT(IL)**2-D0**2)/(2.0*R0*(R0-D0)))
C Then find the z component of the drift time correction.
      TZCOR = TRCOR*ABS(PAR(2))
C Hence get the total correction.
      TCOR = SQRT(TRCOR**2+TZCOR**2)
C     WRITE(LDEBRL,5000) PAR(6),DSPIR,TCOR,OUT
 5000 FORMAT(' PART=',F3.0,' DSPIR=',E12.3,' DTCOR=',E12.3,' OUT=',L4)
C
      IF(FDEBRF.AND.JDBDRF(JULIT).GE.5) THEN
        WRITE(LDEBRL,1000) IL,PHTRK,ZTRK,ENANG
 1000   FORMAT(' ISRCH: LAYER',I2,' PH-Z-ANG',3F9.3)
      ENDIF
C
      NFND  = 0
      APMIN = 999.
C
C Loop over the wires inside the window (with care at 0-2pi cross-over)
C
      IWD = IWWIN(1)
      IWU = IWWIN(2)
      IF (IWU.LT.IWD) IWU = IWU + NWIRIT(IL)
      DO 40 ILOOP=IWD,IWU
        IWIRE = ILOOP
        IF (IWIRE.GT.IWIRIT(IL)+NWIRIT(IL)) IWIRE = IWIRE - NWIRIT(IL)
C See if this wire has an unused hit associated with it.
        IC = IW(IWHTIW+LMHLEN+IWIRE)
        IF (IC.EQ.0) GOTO 40
        IUSED = IW(IUCOIW+LMHLEN+IC)
        IF (IUSED.NE.0) GOTO 40
C
        ZZ    = RTABL(KITC1,IC,JITCZH)
C Produce the corrected phi coords.
        PHI1  = IPHCOR(IC,-1,ENANG,-TCOR)
        PHI2  = IPHCOR(IC, 0,ENANG,-TCOR)
        SRPQ  = RTABL(KITC1,IC,JITCSR)
C Check that coord. is in cell
        DIST = 0.5*RWIRIT(IL)*(MOD(PHI1-PHI2+5.0*PI,TWOPI)-PI)
        IF (DIST.GT.0.5*CELWIT(IL)+SIGNUM(ITRY)*SQRT(SRPQ))
     +        GOTO 40
        SZ    = RTABL(KITC1,IC,JITCSZ)
C Get r-phi resolution, corrected for entrance angle (protected against
C singularity).
        SRP   = SRPQ/MAX(ABS(COS(ENANG)),0.1)**2
C Find difference in phi (being careful about 0-2pi boundary).
        P1    = MOD(PHTRK-PHI1+5.0*PI,TWOPI) - PI
        P2    = MOD(PHTRK-PHI2+5.0*PI,TWOPI) - PI
        A1    = ABS(P1)*RWIRIT(IL)
        A2    = ABS(P2)*RWIRIT(IL)
        AZ    = ABS(ZTRK-ZZ)
C
        IF(FDEBRF.AND.JDBDRF(JULIT).GE.6) THEN
          WRITE(LDEBRL,1001) IC,IWIRE,RWIRIT(IL),SZ,PHI1,PHI2,ZZ,
     +    A1,A2,AZ
 1001     FORMAT(' ISRCH: COORD',I4,' WIRE',I5,' RWIRIT ',F6.3,
     +    ' SZQ',F9.1,/15X,' PHI1-PHI2-ZZ',2F8.4,F7.2,'  A1-A2',2F9.3,
     +    /15X,'  AZ',F9.3)
        ENDIF
C
C Apply Z-road test if requested. (Check that z coord. is O.K.)
C
        IF (FZTSIT(1)) THEN
C          IF(SZ.GT.10000.)  GOTO 40
          IF(AZ.GT.ZFACIT(1)*SQRT(SZ + ROAD(2)**2)) GOTO 40
        ENDIF
C
C Apply r-phi road test. If ok add hit to list.
C
        IF(A1.LT.SIGNUM(ITRY)*SQRT(SRP + ROAD(1)**2)) THEN
          IF(ITYP.EQ.1) THEN
            IF(A1.GT.APMIN) GOTO 30
            APMIN = A1
            NFND  = 0
          ENDIF
          IF(NFND.LT.NLMXIR) THEN
            NFND = NFND + 1
            IHITIR(NFND,IL) = IC
C Put the corrected coordinate into ITCO bank #0
            RW(KROW(KITC0,IC)+JITCP1) = PHI1
            RW(KROW(KITC0,IC)+JITCSR) = SRP
          ENDIF
        ENDIF
C
C Now test ambiguity. Ignore it if PHI1 and PHI2 are the same.
C
        DPHI = MOD(PHI1-PHI2+5.0*PI,TWOPI) - PI
        IF (RWIRIT(IL)*ABS(DPHI).LE.0.01*SQRT(SRP)) GOTO 40
C
   30   IF(A2.LT.SIGNUM(ITRY)*SQRT(SRP + ROAD(1)**2)) THEN
          IF(ITYP.EQ.1) THEN
            IF(A2.GT.APMIN) GOTO 40
            APMIN = A2
            NFND  = 0
          ENDIF
          IF(NFND.LT.NLMXIR) THEN
            NFND = NFND + 1
            IHITIR(NFND,IL) = -IC
C Put the corrected coordinate into ITCO bank #0
            RW(KROW(KITC0,IC)+JITCP2) = PHI2
            RW(KROW(KITC0,IC)+JITCSR) = SRP
          ENDIF
        ENDIF
   40 CONTINUE
C
   50 NHITIR(IL) = NFND
C
  999 CONTINUE
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK isrch
@


1.1.1.1
log
@import julia 300
@
text
@@
