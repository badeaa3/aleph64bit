head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	97.03.06.09.54.51;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.06.43;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.34;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.35;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Tracking upgrade
@
text
@      SUBROUTINE IREFIN
C-----------------------------------------------------------------------
C! Refine/improve ITC tracks.
C!
C!   Author     :- W.Atwood, J.Sedgbeer 15/01/90
C!   Modified   :- J.Sedgbeer  25/04/90 Check Phi in range 0-2pi in ICCO
C!                  + Bug fix: explicitly test track number in loop 210
C!   Modified   :- J.Sedgbeer 09/05/90 Protect against divide checks.
C!   Modified   :- J.Carr     13/2/91 Various changes
C!   Modified   :- J.Sedgbeer 21/10/91 Bug fix. Set Xhit,Yhit even for
C!                                     very small DOCAs.
C!   Modified   :-  J.Sedgbeer 24/10/91 Use function IRESRP to set r-phi
C!                                      resolution in ICCO
C!   Modified   :- D.Casper 29/06/96 don't drop old ICCO, to keep valid
C!                                   coordinates
C!                  
C!   Input:
C!     need commons /BCS/    for BOS banks
C!                  /ITCINF/ coord. reassignment info.
C!                  /IASIGC/ cuts for reassignment
C!          params: ICCOJJ
C!                  ICTRJJ
C!                  ITCOJJ
C!                  IGTLJJ
C!                  ALCONS
C!
C!   Output: updataed coord. lists, IGTL and IGCL, and ICCO bank.
C!
C!   called by : ITCREC
C!   calls     : IASIGN - fill /ITCINF/
C!               ISHUFL - shuffle coord. lists
C!
C!   Libraries required: BOS
C!
C!======================================================================
#ifndef DOC
#include "rparac.h"
#include "rflags.h"
#include "rlunit.h"
C----------------------------------------------------------------------
#include "bcs.h"
#include "bosext.h"
#include "iccojj.h"
#include "ictrjj.h"
#include "itcojj.h"
#include "igtljj.h"
#include "alcons.h"
C----------------------------------------------------------------------
#include "iasigc.h"
#include "itcinf.h"
      EXTERNAL IRESRP,AUARCM
      REAL IRESRP,AUARCM
      LOGICAL FIRST
      DATA FIRST/.TRUE./
      SAVE NICCO, NICTR
C----------------------------------------------------------------------
#include "bmacro.h"
C----------------------------------------------------------------------
C Initialise.
      IF (FIRST) THEN
        NICCO = NAMIND('ICCO')
        NICTR = NAMIND('ICTR')
        FIRST = .FALSE.
      ENDIF
C
C Locate banks
C
      KITCO = NLINK('ITCO',0)
      IF (KITCO.LE.0) GOTO 998
      NCO = LROWS(KITCO)
      IF(NCO.LE.0) GOTO 998
      KITF1 = NLINK('ITFT',1)
      IF (KITF1.LE.0) GOTO 998
      NTRK = LROWS(KITF1)
      IF(NTRK.LE.0) GOTO 998
      KIGT1 = NLINK('IGTL',1)
      IF (KIGT1.LE.0) GOTO 998
      KIGC1 = NLINK('IGCL',1)
      IF (KIGC1.LE.0) GOTO 998
C
      KITF2 = NLINK('ITFT',2)
      KIGT2 = NLINK('IGTL',2)
      KIGC2 = NLINK('IGCL',2)
      IF(KITF2.GT.0) THEN
        IF(KIGT2.LE.0.OR.KIGC2.LE.0) GOTO 998
      ENDIF
C
C Create latched wire bank (wire-to-coord. reln. IWCR) - used in IASIGN.
C                                 Add to T list.
      CALL ILATCH('T+',IER)
      IF(IER.GT.0) GOTO 998
C
C Loop over selected tracks; fill /ITCINF/ by call to IASIGN
C
      NTKITC = 0
      DO 50 I=1,NTRK
        KG = KROW(KIGT1,I)
        NC1 = IW(KG+JIGTN1)
        KK = KROW(KITF1,I)
        CALL IASIGN(SMAXIA,ADJCIA,I,RW(KK+1),IER)
   50 CONTINUE
C
C----------------------------------------------------------------------
C Create ICTR bank for coord.-to-track relation and associated
C quantities. (3 columns: Track No.(JULIA); DEV; Coord.ambiguity sign)
C
      LICTR  = NCO*LICTRA + LMHLEN
      CALL AUBOS('ICTR',0,LICTR,KICTR,IGARB)
      IF (IGARB.EQ.2) GOTO 998
      IW(KICTR+LMHROW) = NCO
      IW(KICTR+LMHCOL) = LICTRA
      CALL BLIST(IW,'T+','ICTR')
C
C     Apply cuts to points on tracks in /ITCINF/ commons
      CALL ITCCUT
C
C Fill ICTR bank from ICOITC(..) etc. Loop over tracks in
C /ITCINF/, loop over layers. For each coord. find which track it is
C assigned to. If more than 1, then choose closest one. Only allow
C coords. which have FLGITC(..) = 0.
C
      DO 110 IT=1,NTKITC
        IF(NGHITC(IT).EQ.0) GO TO 110
        IJT = ITKITC(IT)
        DO 100 IL=1,8
          ICO = ICOITC(IL,IT)
          IF(ICO.EQ.0) GOTO 100
          IF(FLGITC(IL,IT).GT.0) GOTO 100
          KK = KROW(KICTR,ICO)
          IF(IW(KK+JICTTN).NE.0) THEN
            DEVO = RW(KK+JICTDV)
            DEVN = ABS(RSFITC(IL,IT)/DERITC(IL,IT))
            IF(DEVO.LT.DEVN) THEN
                FLGITC(IL,IT)=14
                GOTO 100
            ENDIF
          ENDIF
          IW(KK+JICTTN) = IJT
          RW(KK+JICTDV) = ABS(RSFITC(IL,IT)/DERITC(IL,IT))
          IW(KK+JICTAM) = SIGN(1.,DDSITC(IL,IT))
  100   CONTINUE
  110 CONTINUE
C
      IF(FDEBRF.AND.JDBDRF(JULIT).GE.4) THEN
        WRITE(LDEBRL,1000)
 1000   FORMAT(' IREFIN: Dump ICTR bank',/5X,'Coord.',3X,'Track',
     +          6X,'Dev.',' Ambiguity')
        DO 120 I=1,NCO
          KK = KROW(KICTR,I)
          WRITE(LDEBRL,1001) I,IW(KK+1),RW(KK+2),IW(KK+3)
 1001     FORMAT(1X,2I10,F10.4,I10)
  120   CONTINUE
      ENDIF
C
C----------------------------------------------------------------------
C Shuffle coord. lists (to allow for reassigned coords.)
C
      CALL ISHUFL(NTKITC,ITKITC(1),NCMNIA,NSMNIA,IER)
      IF(IER.GT.0) GOTO 998
C
C----------------------------------------------------------------------
C Locate/Create ICCO bank
      KICCO = IW(NICCO)
C      IF(KICCO.GT.0) IDUM=NDROP('ICCO',0)
      LICCO  = NCO*LICCOA + LMHLEN
      CALL AUBOS('ICCO',0,LICCO,KICCO,IGARB)
      IF (IGARB.EQ.2) GOTO 998
      IW(KICCO+LMHROW) = NCO
      IW(KICCO+LMHCOL) = LICCOA
      CALL BLIST(IW,'E+','ICCO')
      KICTR = IW(NICTR)
      KITCO = NLINK('ITCO',0)
C
C Fill ICCO bank: use /ITCINF/ info and ICTR bank.
C
      DO 210 ITK=1,NTKITC
        JTK = ITKITC(ITK)
        DO 200 IL=1,8
          ICO = ICOITC(IL,ITK)
          IF(ICO.EQ.0) GOTO 200
          KC = KROW(KICTR,ICO)
          IJT = IW(KC+JICTTN)
          IF(IJT.EQ.JTK) THEN
            KK = KROW(KICCO,ICO)
            KI = KROW(KITCO,ICO)
C
C  Compute the x,y Point of the measurement...
C  Protect against very small DOCAs
             IF(ABS(DCAITC(IL,ITK)).LT.1.E-5) THEN
               DXS = -DDSITC(IL,ITK)*SIN(FIWITC(IL,ITK))
               DYX =  DDSITC(IL,ITK)*COS(FIWITC(IL,ITK))
             ELSE
               DRAT = ABS(DDSITC(IL,ITK)/DCAITC(IL,ITK))
               DXVEC = HTXITC(1,IL,ITK) - WRXITC(1,IL,ITK)
               DYVEC = HTXITC(2,IL,ITK) - WRXITC(2,IL,ITK)
               DXS   = DXVEC*DRAT
               DYS   = DYVEC*DRAT
             ENDIF
             XHIT  = WRXITC(1,IL,ITK)+ DXS
             YHIT  = WRXITC(2,IL,ITK)+ DYS
C
C  Store the results away in the Bank ICCO
             RW(KK+JICCRV) = SQRT(XHIT**2 + YHIT**2)
             PHI           = ATAN2(YHIT,XHIT)
             RW(KK+JICCPH) = AMOD(PHI+TWOPI,TWOPI)
             PHEN = ATAN2(HTDITC(2,IL,ITK),HTDITC(1,IL,ITK))
             PHTR = ATAN2(HTXITC(2,IL,ITK),HTXITC(1,IL,ITK))
             CALP = COS( AUARCM(PHEN - PHTR) )
             RW(KK+JICCSR) = ( IRESRP(IL,DDSITC(IL,ITK),CALP) )**2
CC Z of track = RW(KK+JICCZV) = HTXITC(3,IL,ITK)
             RW(KK+JICCZV) = RW(KI+JITCZH)
             RW(KK+JICCSZ) = RW(KI+JITCSZ)
          ENDIF
  200   CONTINUE
  210 CONTINUE
C
      IF(FDEBRF.AND.JDBDRF(JULIT).GE.4) THEN
        WRITE(LDEBRL,2000)
 2000   FORMAT(' IREFIN: ICCO bank')
        DO 220 I=1,NCO
          KK = KROW(KICCO,I)
          WRITE(LDEBRL,2001) I,(RW(KK+J),J=1,5)
 2001     FORMAT(1X,I6,3F8.3,2E12.4)
  220   CONTINUE
      ENDIF
C----------------------------------------------------------------------
C Tidy up
  998 KICTR = NLINK('ICTR',0)
      IF (KICTR.GT.0) IDUM = NDROP('ICTR',0)
      KIWCR = NLINK('IWCR',0)
      IF (KIWCR.GT.0) IDUM = NDROP('IWCR',0)
  999 CONTINUE
      END
#endif
@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d14 3
d55 1
d164 1
a164 1
      IF(KICCO.GT.0) IDUM=NDROP('ICCO',0)
@


1.1
log
@Initial revision
@
text
@a0 1
*DK irefin
@


1.1.1.1
log
@import julia 300
@
text
@@
