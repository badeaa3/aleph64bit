head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.08.06;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.43;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.44;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE ITLNK2(ITRY,IER)
C-----------------------------------------------------------------------
C! ITC: search for links
C!
C!    Author      :- I. Tomalin  88/08/25
C!    Modified    :- I. Tomalin  89/02/28
C!    Modified    :- I. Tomalin  90/01/19
C!    Modified    :- J.Sedgbeer  91/02/21 Fix EXTPH for 0-2pi cross-over
C!    Modified    :- J.Sedgbeer  91/09/10 curvature calc. - better for
C!                                        low p tracks.
C!   Input:
C!      ITRY /I : Search type: ITRY = 1 -> high Pt (tight cuts)
C!                             ITRY = 3 -> down to low Pt (loose cuts)
C!      commons:     /BCS/
C!                   /IWBNKT/
C!                   /ITRKPA/
C!                   /ITRKER/
C!                   /ITGAPC/
C!                   /ITWICC/
C!      params.:     /ALCONS/
C!                   /ITCOJJ/
C!   Output:
C!      IER  /I : Error flag:  IER = 0 if all O.K.
C!                             IER = 1 if there were too many links.
C!      work bank:   ILNKIW
C!
C!   called by : ITRAK
C!   calls     : IENANG and IPHCOR
C!
C!   Libraries required: none
C!
C!======================================================================
#ifndef DOC
#include "rparac.h"
#include "rflags.h"
#include "rlunit.h"
C-----------------------------------------------------------------------
C I/O commons and parameters
#include "alcons.h"
#include "bcs.h"
#include "iwbnkt.h"
#include "itcojj.h"
#include "itwicc.h"
#include "itrker.h"
#include "itrkpa.h"
#include "itgapc.h"
C-----------------------------------------------------------------------
      INTEGER NLINK
      EXTERNAL NLINK
      REAL IPHCOR
      EXTERNAL IPHCOR
      LOGICAL FOUND
      LOGICAL SETZ
      DATA SETZ/.TRUE./
C-----------------------------------------------------------------------
#include "bmacro.h"
C-----------------------------------------------------------------------
C Initialisation
C
      IER = 0
      IF (SETZ) THEN
        ILNKIW = 0
        SETZ = .FALSE.
      END IF
      IF (ILNKIW.GT.0) THEN
        CALL WDROP(IW,ILNKIW)
        CALL RERROR('ITLNK2',1,'ILNKIW work bank still exists from '//
     +  'earlier. It should have been dropped.')
      END IF
      LEN = LMHLEN + 4*350
      CALL WBANK(IW,ILNKIW,LEN,*950)
      IW(ILNKIW+LMHCOL) = 4
C
      KITC0 = NLINK('ITCO',0)
      IF (KITC0.EQ.0.OR.IUCOIW.EQ.0.OR.IWHTIW.EQ.0) GOTO 999
      NCO = LROWS(KITC0)
C
      MXJPC = MXJMPC(2)
  10  CONTINUE
      IW(ILNKIW+LMHROW) = 0
C
C Loop over all coordinates (in order of decreasing wire number).
C
      DO 100 IC=NCO,1,-1
C Ignore this coordinate if it has already been assigned to a track.
        MUSE = IW(IUCOIW+LMHLEN+IC)
        IF (MUSE.EQ.1) GOTO 100
C Find the layer number of the coordinate.
        ILAY = ITABL(KITC0,IC,JITCWN)/1000
C Stop if inner layer has been reached.
        IF (ILAY.EQ.1) GOTO 999
C Check coord. is in cell
        PHI1 = RTABL(KITC0,IC,JITCP1)
        PHI2 = RTABL(KITC0,IC,JITCP2)
        SRPQ = RTABL(KITC0,IC,JITCSR)
        DIST = 0.5*RWIRIT(ILAY)*(MOD(PHI1-PHI2+5.0*PI,TWOPI)-PI)
        IF (DIST.GT.0.5*CELWIT(ILAY)+
     +            SIGNUM(ITRY)*SQRT(SRPQ)) GOTO 100
C Note the radius of the coordinate.
        RADI = RTABL(KITC0,IC,JITCRA)
C Find z-coordinate and error**2 thereon.
        ZI = RTABL(KITC0,IC,JITCZH)
        IF (FZTSIT(2)) THEN
          SZI = RTABL(KITC0,IC,JITCSZ)
C          IF (SZI.GT.10000.0) GOTO 100
        END IF
C Loop over the two ambiguities for this coordinate.
        DO 90 IAMB=-1,0
C Find the phi of the ambiguity.
          PHI = RTABL(KITC0,IC,JITCP2+IAMB)
C
          NLCON = 0
C Loop over the links to the layers inside ILAY.
          DO 80 NLAY=ILAY-1,1,-1
C See if the links are now jumping over too many layers.
            IF (ILAY-NLAY-1.GT.MXJMPD(2)) GOTO 90
            IF (NLCON.GT.MXJPC) GOTO 90
            FOUND = .FALSE.
C Note the approximate change in phi and radius due to detector misalign
C at this coordinate
            RADN = RWIRIT(NLAY)
            PHIT = PHI
C Make an approx. estimate of the z-coordinate.
            ZT = ZI*RWIRIT(NLAY)/RWIRIT(ILAY)
            CALL ITROTN(RADN,PHIT,ZT)
            EXTPH = MOD(PHI-PHIT+5.0*PI,TWOPI)-PI
C Get the radial distance between the two layers.
            DR = RADI - RADN
C Calculate window in phi and hence get wire no's to be searched.
            DX = 0.5*DR/CTR0IT(ITRY)
            PHID = PHI - MIN(DX,PI)
            PHIU = PHI + MIN(DX,PI)
C Note cell size and phi shift beginning of 1st cell.
            DLN  = TWOPI/FLOAT(NWIRIT(NLAY))
            SHFN = PHWRIT(NLAY) - DLN*0.5
            PHDS = PHID - SHFN + EXTPH
            PHUS = PHIU - SHFN + EXTPH
            PHDS = AMOD(PHDS+TWOPI,TWOPI)
            PHUS = AMOD(PHUS+TWOPI,TWOPI)
            IWD = INT(PHDS/DLN) + IWIRIT(NLAY) + 1
            IWU = INT(PHUS/DLN) + IWIRIT(NLAY) + 1
C
C Estimate z-coordinate of track in layer NLAY (and error**2 thereon).
            IF (FZTSIT(2)) THEN
              ZG = ZI*RADN/RADI
              SZG = SZI*(RADN/RADI)**2
            END IF
C
C 'Loop' over wires to be searched in layer "NLAY".
C  (with care at the 0-2pi cross-over).
            IF (IWU.LT.IWD) IWU = IWU + NWIRIT(NLAY)
            DO 70 ILOOP=IWD,IWU
              IWIRE = ILOOP
              IF (IWIRE.GT.IWIRIT(NLAY+1)) IWIRE = IWIRE - NWIRIT(NLAY)
C See if this wire has an unused hit associated with it.
              NC = IW(IWHTIW+LMHLEN+IWIRE)
              IF (NC.LE.0) GOTO 70
              MUSE = IW(IUCOIW+LMHLEN+NC)
              IF (MUSE.EQ.1) GOTO 70
C Check coord. is in cell
              PHI1 = RTABL(KITC0,NC,JITCP1)
              PHI2 = RTABL(KITC0,NC,JITCP2)
              SRPQN= RTABL(KITC0,NC,JITCSR)
              DIST = 0.5*RWIRIT(NLAY)*(MOD(PHI1-PHI2+5.0*PI,TWOPI)-PI)
              IF (DIST.GT.0.5*CELWIT(NLAY)+
     +            SIGNUM(ITRY)*SQRT(SRPQN)) GOTO 70
C See if hit lies inside the road in z.
              IF (FZTSIT(2)) THEN
                ZN = RTABL(KITC0,NC,JITCZH)
                SZN = RTABL(KITC0,NC,JITCSZ)
C                IF (SZN.GT.10000.0) GOTO 70
                IF ((ZN-ZG)**2.GT.(SZG+SZN)*ZFACIT(2)**2) GOTO 70
              ENDIF
C Test both ambigs.(in phi) to see if they fall within range.
C (taking care of 0-2pi cross over).
              DO 50 NAMB=-1,0
C Do 1st order drift time correction.
                CALL IENANG(NC,NAMB,IC,IAMB,ENN,ENI)
                PHNC = IPHCOR(NC,NAMB,ENN,0.0)
                IF (PHID.LT.PHNC.AND.PHNC.LT.PHIU.OR.
     +          PHIU.LT.PHID.AND.(PHID.LT.PHNC.OR.PHNC.LT.PHIU)) THEN
C This link is O.K. so store it.
                  PHIC = IPHCOR(IC,IAMB,ENI,0.0)
                  FOUND = .TRUE.
                  KLNK = KNEXT(ILNKIW)
                  IF (IAMB.EQ.-1) IW(KLNK+1) = IC
                  IF (IAMB.EQ.0) IW(KLNK+1) = -IC
                  IF (NAMB.EQ.-1) IW(KLNK+2) = NC
                  IF (NAMB.EQ.0) IW(KLNK+2) = -NC
                  IW(KLNK+3) = IGAPIT(NLAY,ILAY)
                  RW(KLNK+4) = 2.0*SIN(PHIC-PHNC)/
     +              (SQRT(RADI**2+RADN**2-2.*RADI*RADN*COS(PHIC-PHNC)))
                  IW(ILNKIW+LMHROW) = IW(ILNKIW+LMHROW) + 1
                  IF(FDEBRF.AND.JDBDRF(JULIT).GE.4) THEN
                    WRITE(LDEBRL,35) LROWS(ILNKIW),(IW(KLNK+II),II=1,3),
     +              RW(KLNK+4)
   35               FORMAT(5X,'ITLNK2 : Link formed: Link=',I4,
     +              '  Coords.= ',2I4,' IGAP',I4,' Curvature',F10.5)
                  ENDIF
                  IF(LFRWRD(ILNKIW).LE.0) THEN
                    LEN = IW(ILNKIW)
                    IF (LEN.GT.LMHLEN+4*5000) GOTO 900
                    CALL WBANK(IW,ILNKIW,LEN+4*250,*900)
                  END IF
                ENDIF
   50         CONTINUE
   70       CONTINUE
C Note the number of layers with links connected to ILAY found so far.
            IF (FOUND) NLCON = NLCON + 1
   80     CONTINUE
   90   CONTINUE
  100 CONTINUE
C Finished !
      GOTO 999
C Error return.
  900 CONTINUE
      IF(FDEBRF.AND.JDBDRF(JULIT).GE.1) CALL RERROR('ITLNK2',2,
     +'No. of links too great. Search being simplified.')
C Simplify and try again.
      IF (MXJPC.GT.0) THEN
        MXJPC = MXJPC - 1
        GOTO 10
      END IF
C
      IF(FDEBRF) CALL RERROR('ITLNK2',3,
     +'Link search could not be '//
     +'simplified enough, so was not completed.')
      GOTO 975
  950 CONTINUE
      CALL RERROR('ITLNK2',4,'No more space to create ILNKIW'//
     +' work bank.')
  975 CONTINUE
      IER = 1
      IF (ILNKIW.NE.0) CALL WDROP(IW,ILNKIW)
      GOTO 1000
C Normal ending
  999 CONTINUE
C Compress ILNKIW work bank.
      CALL WBANK(IW,ILNKIW,LMHLEN+LROWS(ILNKIW)*LCOLS(ILNKIW),*1000)
 1000 CONTINUE
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK itlnk2
d67 2
a68 2
        CALL RERROR('ITLNK2',1,'ILNKIW work bank still exists from earli
     +  It should have been dropped.')
d225 3
a227 2
      IF(FDEBRF) CALL RERROR('ITLNK2',3,'Link search could not be
     +simplified enough, so was not completed.')
d230 2
a231 2
      CALL RERROR('ITLNK2',4,'Insufficient space to create ILNKIW
     +work bank.')
@


1.1.1.1
log
@import julia 300
@
text
@@
