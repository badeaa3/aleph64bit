head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.30.48;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.12;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.13;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE QGMMCL(YCUT,EVIST,KTBI,QTBIX,QTBIY,QTBIZ,QTBIE,KTBIT
     & ,KTBOF,KTBO,QTBOX,QTBOY,QTBOZ,QTBOE,QTBOR,KTBIMX,KTBOMX,PP)
CKEY JETS /INTERNAL
C----------------------------------------------------------------------
C!   Evaluate jet multiplicities based on the scaled invariant mass
C!   squared algorithm
C    from momentum vectors stored iN QCTBUF.INC
C   Author   : P. Perez       28-MAR-1989
C   Modified : C. Bowdery      4-DEC-1990   Prevent infinite loops
C              M.N Minard     20-FEB-1990
C
C   Description
C   ===========
C
C  input   : YCUT            ycut value ( (M/EVIST)**2 )
C            EVIST           visible energy
C                            (if EVIST=0., it is computed from the
C                             input particle energies)
C            KTBI            # of particles           (from QCTBUF)
C            QTBIX,Y,Z,E(i)  four momentum (i=1,KTBI) ( "     "   )
C  output  :
C            QTBOX,Y,Z,E(j)  four  momentum of jet j (j=1,NJET)
C            KTBOF(i)        jet # of particle i     (i=1,KTBI)
C            KTBO        -1  input  error (KTBI/EVIST) (in   QCTBUF)
C                        -2  error from individ. track
C                        -3  too many jets
C                       NJET # of jets (normal return)
C======================================================================
C     KTBI : Number of input vectors (max : KTBIMX).
C     QTBIX/Y/Z/E : Input vectors (filled contiguously without unused v
C                   The vectors 1 to KTBI must NOT be modified.
C     KTBIT : Input vector ident. used for bookkeeping in the calling r
C     KTBO  : Number of output vectors (max : KBTOMX).
C     QTBOX/Y/Z/E : Output vector(s).
C     QTBOR : Scalar output result(s).
C     KTBOF : If several output vectors are calculated and every input
C             associated to exactly one of them : Output vector number
C             the input vector is associated to. Otherwise : Dont't car
C If a severe error condition is detected : Set KTBO to a non-positive
C which may serve as error flag. Set QTBOR to a non-physical value (or
C Fill zeros into the appropriate number of output vectors. Do not writ
C messages.
C?
C!======================================================================
#ifndef DOC
C
          DIMENSION  PP(5,*)
      DIMENSION QTBIX(*),QTBIY(*),QTBIZ(*),QTBIE(*),KTBIT(*),KTBOF(*)
      DIMENSION QTBOX(*),QTBOY(*),QTBOZ(*),QTBOE(*),QTBOR(*)
      REAL MASS , MINMAS
      INTEGER    LOOP
C
C------------------------------------------------------------------
C   set initial values
C------------------------------------------------------------------
      LOOP = 0
      EVIS=EVIST
      IF(KTBI.GT.KTBIMX) THEN
C        WRITE(LOUTIO,*) ' ***MMCLUS ktbi=',KTBI,'>ktbimx'
        IRET = -1
        GOTO 999
      ENDIF
C
      IRET = 1
      DO 10 I = 1, KTBOMX
        QTBOX(I) = 0.
        QTBOY(I) = 0.
        QTBOZ(I) = 0.
        QTBOE(I) = 0.
   10 CONTINUE
      DO 11 I = 1, KTBIMX
        KTBOF(I) = 0
   11 CONTINUE
      EVISI = 0.
      DO 1 I = 1, KTBI
        KTBOF(I) = 0
        PP(1,I)  = QTBIX(I)
        PP(2,I)  = QTBIY(I)
        PP(3,I)  = QTBIZ(I)
        PP(4,I)  = QTBIE(I)
        PP(5,I)  = SQRT(PP(1,I)**2+PP(2,I)**2+PP(3,I)**2)
        EVISI    = EVISI + QTBIE(I)
    1 CONTINUE
C
      IF(EVIS.EQ.0.) EVIS = EVISI
      EVIS2 = EVIS**2
C
      IF(EVIS .LE. 0.) THEN
C        WRITE(LOUTIO,*) ' ***MMCLUS visible energy is 0.'
        IRET = -1
        GOTO 999
      ENDIF
C
C                          Increase starting value from 5E8 to 1E20
C
  100 MINMAS = 1.0E20
      LOOP   = LOOP + 1
C
      DO 2000 I = 1, KTBI-1
C
C skip if particle is already merged in a jet
        IF(PP(4,I) .LE. 0.) GO TO 2000
        PI = PP(5,I)
C
        DO 2100 J = I+1, KTBI
C skip if particle is already merged in a jet
          IF(PP(4,J) .LE. 0.) GO TO 2100
C
          PJ = PP(5,J)
          IF (PI .LE. 0. .OR. PJ .LE. 0.) THEN
C            WRITE(LOUTIO,*) ' ***MMCLUS  : momentum is 0'
            IRET = -2
            GO TO 2100
          ENDIF
          COSANG = (PP(1,I)*PP(1,J)+PP(2,I)*PP(2,J)+PP(3,I)*PP(3,J))
          COSANG = COSANG / (PI*PJ)
C
          ACOSAN = ABS(COSANG)
          IF(ACOSAN .GT. 1.0001) THEN
C            WRITE(LOUTIO,*) '***MMCLUS cosang= ',COSANG
            IRET = -2
            GOTO 999
          ELSEIF(ACOSAN.GT.1..AND.ACOSAN.LE.1.0001) THEN
            COSANG = SIGN(1.,COSANG)
          ENDIF
C
          MASS = 2. * PP(4,I) * PP(4,J) * (1.-COSANG)
C
          IF(MASS.LT.MINMAS) THEN
            MINMAS = MASS
            MINPA1 = I
            MINPA2 = J
          ENDIF
C
 2100   CONTINUE
 2000 CONTINUE
C
      YIJMIN = MINMAS / EVIS2
C
C                            Prevent infinite loops (max = KTBI-1)
C
      IF( YIJMIN .GT. YCUT  .OR.  LOOP .GE. KTBI ) THEN
C no more jets, fill QTBOX,Y,Z,E and KTBOF arrays
        NJET = 0
        DO 3000 I = 1, KTBI
          IF(PP(4,I).GT.0.) THEN
            NJET = NJET + 1
            IF(NJET.GT.KTBOMX) THEN
              IRET = -3
              GOTO 999
            ENDIF
            QTBOX(NJET) = PP(1,I)
            QTBOY(NJET) = PP(2,I)
            QTBOZ(NJET) = PP(3,I)
            QTBOE(NJET) = PP(4,I)
C KTBOF(ipart) = associated jet #, (even when only 1 part. in "jet")
            KTBOF(I) = NJET
            DO 3002 J = 1, KTBI
              IF(KTBOF(J).EQ.I) KTBOF(J) = NJET
 3002       CONTINUE
          ENDIF
 3000   CONTINUE
C
        GOTO 999
C
      ELSE
C update pairing,
C merge particles of the pair and "zero" the 2nd part. of the pair
        KTBOF(MINPA1) = MINPA1
        KTBOF(MINPA2) = MINPA1
        DO 5000 I = 1, KTBI
          IF(KTBOF(I).EQ.MINPA2) KTBOF(I) = MINPA1
 5000   CONTINUE
C
        PP(1,MINPA1) = PP(1,MINPA1) + PP(1,MINPA2)
        PP(2,MINPA1) = PP(2,MINPA1) + PP(2,MINPA2)
        PP(3,MINPA1) = PP(3,MINPA1) + PP(3,MINPA2)
        PP(4,MINPA1) = PP(4,MINPA1) + PP(4,MINPA2)
        PP(5,MINPA1) = SQRT(PP(1,MINPA1)**2+PP(2,MINPA1)**2+
     &                      PP(3,MINPA1)**2)
C
        PP(1,MINPA2) = -1.
        PP(2,MINPA2) = -1.
        PP(3,MINPA2) = -1.
        PP(4,MINPA2) = -1.
        PP(5,MINPA2) = -1.
      ENDIF
      GOTO 100
C
  999 KTBO = IRET
      IF(IRET.GE.0) KTBO = NJET
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK qgmmcl
@


1.1.1.1
log
@import julia 300
@
text
@@
