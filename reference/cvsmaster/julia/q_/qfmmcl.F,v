head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.30.44;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.11;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.12;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE QFMMCL( YCUT, EVIST, MASMAT, PP, LENM , KTBI
     & ,QTBIX,QTBIY,QTBIZ,QTBIE,KTBIT
     & ,KTBOF,KTBO,QTBOX,QTBOY,QTBOZ,QTBOE,QTBOR,KTBIMX,KTBOMX)
C----------------------------------------------------------------------
C!   Evaluate jet multiplicities based on the scaled invariant mass
C!   squared algorithm using BOS work bank
C    from momentum vectors stored in QCTBUF.INC
C
C   New      : C. Bowdery      9-OCT-1990  Faster algortihm than QGMMCL
C   Modified : M.N Minard     20-Feb-1990
C
C   Description
C   ===========
C
C  input   : YCUT            ycut value ( (M/EVIST)**2 )
C            EVIST           visible energy
C                            (if EVIST=0., it is computed from the
C                             input particle energies)
C            MASMAT          (empty) invariant mass**2 square matrix
C            PP              (empty) matrix for temporary particle usag
C            LENM            dimension of MASMAT and PP matrices
C
C            KTBI            # of particles           (from QCTBUF)
C            QTBIX,Y,Z,E(i)  four momentum (i=1,KTBI) ( "     "   )
C  output  :
C            QTBOX,Y,Z,E(j)  four  momentum of jet j (j=1,NJET)
C            KTBOF(i)        jet # of particle i     (i=1,KTBI)
C            KTBO        -1  input  error (KTBI/EVIST) (in   QCTBUF)
C                        -2  error from individ. track
C                        -3  too many jets
C                       NJET # of jets (normal return)
C?
C!======================================================================
#ifndef DOC
C
      REAL              YCUT, EVIST
C
      DIMENSION QTBIX(*),QTBIY(*),QTBIZ(*),QTBIE(*),KTBIT(*),KTBOF(*)
      DIMENSION QTBOX(*),QTBOY(*),QTBOZ(*),QTBOE(*),QTBOR(*)
      INTEGER           LENM, MINPA1, MINPA2, I, J, K, IRET, NJET, LOOP
C
      REAL              MASMAT(LENM,LENM), PP(5,LENM)
C
      REAL              MASS, MINMAS, YIJMIN, EVIS2, EVIS, EVISI
      REAL              DEAD, ZERO, ONE, TWO, START
      PARAMETER         ( DEAD  = -1.0E10, ZERO = 0.0E0 )
      PARAMETER         ( START =  1.0E20, ONE  = 1.0E0, TWO = 2.0E0 )
C
C----------------------------------------------------------------------
C
C                            Check for allowed input numbers
C
      IF( KTBI .GT. LENM  .OR.  KTBI .LT. 1 ) THEN
        IRET = -1
        GO TO 999
      ENDIF
C
C                            Ensure MINPA1 and MINPA2 defined
C                            just in case KTBI=1 and YCUT is huge
C
      MINPA1 = 1
      MINPA2 = 1
      LOOP   = 0
      IRET   = 1
      EVIS   = EVIST
C
      DO  10  I = 1, KTBOMX
        QTBOX(I) = 0.0
        QTBOY(I) = 0.0
        QTBOZ(I) = 0.0
        QTBOE(I) = 0.0
   10 CONTINUE
C
      EVISI = ZERO
C
C                            Copy input momentum components to working
C                            space. Set jet assignment to point at self
C
      DO  20  I = 1, KTBI
        KTBOF(I) = I
        PP(1,I)  = QTBIX(I)
        PP(2,I)  = QTBIY(I)
        PP(3,I)  = QTBIZ(I)
        PP(4,I)  = QTBIE(I)
        PP(5,I)  = SQRT( PP(1,I)**2 + PP(2,I)**2 + PP(3,I)**2 )
        EVISI    = EVISI + PP(4,I)
   20 CONTINUE
C
      DO  25  I = KTBI+1,KTBIMX
        KTBOF(I) = 0
   25 CONTINUE
C
      IF( EVIS .EQ. ZERO ) EVIS = EVISI
      EVIS2 = EVIS**2
C
      IF( EVIS2 .LE. ZERO ) THEN
        IRET = -1
        GOTO 999
      ENDIF
C
C                            Detect bad input (divide checks!)
C
      DO  30  I = 1,KTBI
C
C                            WRITE(6,8880) I,(PP(KKK,I),KKK=1,5)
C8880                        FORMAT(' PARTICLE:',I3,5G13.5)
C
        IF( PP(5,I) .LE. ZERO ) THEN
          IRET = -2
          GOTO 999
        ENDIF
   30 CONTINUE
C
C                            Compute a table of invariant mass**2
C                            combinations of all particle pairs.
C                            Diagonal elements and repeats not needed!
C
      DO  50  I = 2,KTBI
        DO  40  J = 1,I-1
C
C                              COSANG = ( PP(1,I)*PP(1,J) +
C                                         PP(2,I)*PP(2,J) +
C                                         PP(3,I)*PP(3,J)   ) /
C                                        (PP(5,I)*PP(5,J))
C
C                            It does not matter if COSANG lies just
C                            outside the range  -1 to +1.
C
          MASMAT(J,I) =   TWO * PP(4,I) * PP(4,J) *
     &                 (ONE - ( PP(1,I) * PP(1,J) +
     &                          PP(2,I) * PP(2,J) +
     &                          PP(3,I) * PP(3,J)   ) /
     &                         (PP(5,I) * PP(5,J))      )
C
   40   CONTINUE
   50 CONTINUE
C
C                            Set up starting minimum invariant mass**2
C
  100 MINMAS = START
      LOOP   = LOOP + 1
C
C                            Find the lowest invariant mass**2 but
C                            ignore killed combinations (DEAD).
C                            Note a temporary copy of MASMAT(I,J) is
C                            not used since the optimisation makes
C                            use of registers and is faster.
C
      DO  2000  I = 2,KTBI
        IF( PP(5,I) .GT. ZERO ) THEN
          DO  1000  J = 1,I-1
C
            IF( MASMAT(J,I) .GT. DEAD ) THEN
              IF( MASMAT(J,I) .LT. MINMAS ) THEN
                MINMAS  = MASMAT(J,I)
                MINPA1 = J
                MINPA2 = I
              ENDIF
            ENDIF
C
 1000     CONTINUE
        ENDIF
 2000 CONTINUE
C
C                            Compute YMIN for the found pair
C
      YIJMIN = MINMAS / EVIS2
C
C                     WRITE(6,8881) LOOP, MINMAS, YIJMIN,MINPA1, MINPA2
C8881                 FORMAT(3X,I5,2X,2G13.5,2(1X,I3))
C
      IF( YIJMIN .LE. YCUT  .AND.  LOOP .LT. KTBI ) THEN
C
C                            The particle with the higher position
C                            index is killed and its KTBOF element is
C                            set to the index of the merged particle.
C
        KTBOF(MINPA2) = MINPA1
C
C                            Add the momentum components together of
C                            the pair to make the merged particle
C
        PP(1,MINPA1) = PP(1,MINPA1) + PP(1,MINPA2)
        PP(2,MINPA1) = PP(2,MINPA1) + PP(2,MINPA2)
        PP(3,MINPA1) = PP(3,MINPA1) + PP(3,MINPA2)
        PP(4,MINPA1) = PP(4,MINPA1) + PP(4,MINPA2)
C
        PP(5,MINPA1) =          SQRT( PP(1,MINPA1)**2 +
     &                                PP(2,MINPA1)**2 +
     &                                PP(3,MINPA1)**2   )
C
C                            Divide check protection
C
        IF( PP(5,MINPA1) .LE. ZERO ) THEN
          IRET = -2
          GO TO 999
        ENDIF
C
C                            Kill the other particle of the pair
C
        PP(1,MINPA2) =  ZERO
        PP(2,MINPA2) =  ZERO
        PP(3,MINPA2) =  ZERO
        PP(4,MINPA2) =  ZERO
        PP(5,MINPA2) = -ONE
C
C                            Recompute the invariant mass**2's for the
C                            new merged particle with all the others.
C                            Combinations with killed particles would
C                            give zero mass but this is set to DEAD
C
        DO  4000  J = 1,KTBI
C
          IF( PP(5,J) .LT. ZERO ) THEN
C
            MASS = DEAD
C
          ELSE
C
            MASS  =     TWO * PP(4,MINPA1) * PP(4,J) *
     &               (ONE - ( PP(1,MINPA1) * PP(1,J) +
     &                        PP(2,MINPA1) * PP(2,J) +
     &                        PP(3,MINPA1) * PP(3,J)   ) /
     &                       (PP(5,MINPA1) * PP(5,J)))
          ENDIF
C
C                            Only replace those entries that lie in
C                            the used half of the table.
C
          IF( J .LT. MINPA1 ) THEN
            MASMAT(J,MINPA1) = MASS
          ELSE
            MASMAT(MINPA1,J) = MASS
          ENDIF
C
C                            Set the invariant mass to  DEAD  for
C                            the killed particle with all others
C
          IF( J .LT. MINPA2 )THEN
            MASMAT(J,MINPA2) = DEAD
          ELSE
            MASMAT(MINPA2,J) = DEAD
          ENDIF
 4000   CONTINUE
C
C                            Go back and find the next lowest mass pair
C
        GOTO 100
C
      ELSE
C
C                            No more jets, fill QTBOX/Y/Z/E and KTBOF
C                            KTBOF(ipart) = associated jet #,
C                            (even when only 1 part. in "jet")
C
C
        NJET = 0
        DO  8010  J = 1,KTBI
C
          IF( KTBOF(J) .EQ. J ) THEN
            NJET = NJET + 1
            IF( NJET .GT. KTBOMX ) THEN
              IRET = -3
              GOTO 999
            ELSE
              QTBOX(NJET) = PP(1,J)
              QTBOY(NJET) = PP(2,J)
              QTBOZ(NJET) = PP(3,J)
              QTBOE(NJET) = PP(4,J)
C
C                            Set the jet number negative for now
C
              KTBOF(J)    = -NJET
            ENDIF
          ELSE
C
C                            Find the jet that this particle belongs to
C                            by recursion. Pointers are positive while
C                            jet numbers are negative.
C
            K = J
 8005       IF( KTBOF(K) .LT. 0 ) THEN
              KTBOF(J) = KTBOF(K)
            ELSE
              K = KTBOF(K)
              GO TO 8005
            ENDIF
          ENDIF
 8010   CONTINUE
C
C                            Reverse the jet number
C
        DO  8020  J = 1, KTBI
          KTBOF(J) = -KTBOF(J)
 8020   CONTINUE
C
C                            WRITE(6,8025) (KTBOF(L),L=1,KTBI)
C8025                        FORMAT(60(1X,I1))
C
      ENDIF
C
  999 IF( IRET .GE. 0 ) THEN
        KTBO = NJET
      ELSE
        KTBO = IRET
      ENDIF
C
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK qfmmcl
@


1.1.1.1
log
@import julia 300
@
text
@@
