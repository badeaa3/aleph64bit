head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.03.51;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.23;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.24;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
@
text
@        SUBROUTINE HTRACK(IBON,IDEON,ATIN,IFAIL,NVETT,ATFRA)
C-----------------------------------------------------------------
C
C! Full tracking routine for tracks in HCAL
C!
C! P.Campana - LNF - Version 3.2           121287
C!
C! GeV cm kG ns ALEPH coord. frame -
C! Parametriz. of the field - FFIELD called at entrance region
C!
C! IBON = 1 field active   IDEON = 1 dE/dx active
C! ATIN(8)  input  vector:  x y z px py pz Rms Q
C! ATFRA(9,NSTEP+4)  out :  x y z px py pz Rms #reg&mod #lay
C! Regions : 0=air, 1500=ecal, 2500=coil, 31xx-36xx=hcal
C! Regions in hcal x1xx=barrel     x2xx=notch     x3xx=back e.c.
C!                 x4xx=front e.c. x5xx=air zone  x6xx=coil
C! Mod.# for end caps refers to the mod.# of the barrel facing it
C! Negative sign refers to the z direction
C!
C! Tracking of particles with p>1 GeV entering HCAL, followed
C! up to pcut=0.15 GeV
C! IFAIL=1 ok, =2 p<pthr, =3 spiral, =4 p<pcut, =5 parall. to slabs
C!
C! With respect to 3.1: Variable end cap radius, Energy loss correct
C! in reg #6, Positive and *100 numbering of regions and modules
C?
C!======================================================================
#ifndef DOC
C
        PARAMETER (NSTEP=26)
        PARAMETER (ZBMED=351.5,TG15=0.267949)
        PARAMETER (CRMIN=248.,CRMAX=292.,CZMAX=351.)
C
        PARAMETER (THRP=1.0,TBCUT=0.1,TPTCU=0.01)
        PARAMETER (WMU=.10566,WMU2=0.011164,W2MU=.21132)
        PARAMETER (UOM=8.98755E-3,URADI=3335.641)
        PARAMETER (UDFE=7.87,UDHC=0.706)
        PARAMETER (UDE1=.168E-3,UDE2=-7.8,UDE3=UDFE*UDHC)
        PARAMETER (CDE1=.171E-3,CDE2=-8.4,CDE3=1.14)
        PARAMETER (TR5=0.0872665,TA=1./TG15)
        PARAMETER (SI30=0.5,CO30=.8660254,TG30=0.57735)
#include "alcons.h"
#include "hcalg1.h"
C
        DIMENSION ATIN(*),ATMOD(10,NSTEP+4),ATFRA(9,*)
        DIMENSION TTIN(6),TTOUT(6),VECOS(NSTEP+4),VESIN(NSTEP+4)
        DIMENSION VA(3,3),VRPR(3),VVPR(3),VPPR(3)
        DIMENSION POS(3),B(3)
        DATA INIBB/0/
C
C? Initialisations & module identification
C
        DO 705 K=1,NSTEP+4
        DO 705 J=1,10
 705    ATMOD(J,K)=0.
        STEP=HTSAMP
        NVETT=NVETT+1
        NVET1=NVETT
        NSLAB=1
        IFAIL=0
        ISIDE=1
        UBBT=0.
        TPP=0.
        OTLE=0.
        ULAST=1.
        TEMAX=HREMAX
C
        TALPH=ATAN2(ATIN(2),ATIN(1))
        IF(TALPH.LT.0.) TALPH=TALPH+TWOPI
        IMOD=TALPH/PIBY6+1.5
        IF(IMOD.GT.12) IMOD=IMOD-12
        TIMOD=IMOD
        TALPH=PIBY6*(TIMOD-1.)
        COSTA=COS(TALPH)
        SINTA=SIN(TALPH)
        VECOS(NVET1)=COSTA
        VESIN(NVET1)=SINTA
        ATMOD(7,NVET1)=TIMOD
        ATMOD(8,NVET1)=ATIN(7)
        ATMOD(10,NVET1)=1.
        TQ=ATIN(8)
        IBOLD=-99
        IF(INIBB.EQ.0) THEN
                CALL FMINIT
                INIBB=1
        ENDIF
C
C? Transformation from ALEPH coordinates to Y X Z frame and to module co
C
        DO 707 J=1,4,3
        TTIN(J)  =ATIN(J)*COSTA+ATIN(J+1)*SINTA
        TTIN(J+1)=ATIN(J)*SINTA-ATIN(J+1)*COSTA
 707    TTIN(J+2)=ATIN(J+2)
        DO 706 L=1,6
 706    ATMOD(L,NVET1)=TTIN(L)
        IF(TTIN(3).LT.0.) ISIDE=-1
C
C+ Identification of the region
C
        TRIN=SQRT(TTIN(1)*TTIN(1)+TTIN(2)*TTIN(2))
        TABS3=ABS(TTIN(3))
        IF((TTIN(1)).GE.(HXBMIN-.01)) THEN
                IF(TABS3.LE.ZBMED) THEN
                        IREG=1
                        GOTO 740
                ENDIF
                IF(TABS3.LT.HZBMAX) THEN
                        IREG=2
                ELSE
                        IREG=3
                ENDIF
                GOTO 740
        ENDIF
        IF(TABS3.GE.HZBMAX) THEN
                IREG=3
                GOTO 740
        ENDIF
        IF(TRIN.GT.HREMED) THEN
                IREG=5
        ELSE
                IREG=4
        ENDIF
        IF(TRIN.GT.CRMIN.AND.TRIN.LE.CRMAX.AND.
     +          TABS3.GE.(HZEMIN-0.01).AND.TABS3.LT.CZMAX) THEN
                IREG=6
        ENDIF
 740    ATMOD(9,NVET1)=IREG
C
C? Check on momentum & energy loss in the first pre-layer of the barrel
C
        TPEV=SQRT(TTIN(4)*TTIN(4)+TTIN(5)*TTIN(5)+TTIN(6)*TTIN(6))
        TEEV=SQRT(TPEV*TPEV+WMU2)
        TGEV=TEEV/WMU
        TBEV=TPEV/TEEV
        IF(TPEV.LT.THRP) THEN
                IFAIL=2
                GOTO 777
        ENDIF
        IF(IREG.LE.2) THEN
                TEEV=TEEV-HT0LAY*UDFE*
     +               (ALOG(TBEV*TGEV)-TBEV*TBEV-UDE2)*UDE1/TBEV/TBEV
                TPEV2=TEEV*TEEV-WMU2
                IF(TPEV2.LE.0) TPEV2=0.0001
                TPEV=SQRT(TPEV2)
        ENDIF
C
C? Starts loop over steps
C
 1      CONTINUE
C
C? Evaluates end-cap radius
C
        IF(IREG.EQ.3) THEN
                TPHI=ATAN2(TTIN(2),TTIN(1))
                TEMAX=HREMAX/ABS(COS(TPHI))
        ENDIF
C
C? Check if the angle track/slab is too small
C
        IF(IREG.LE.2) THEN
                TANG=ABS(ATAN2(TTIN(4),TTIN(6)))
        ELSE
                TANG=ABS(ATAN2(TTIN(6),TTIN(4)))
        ENDIF
        IF(TANG.LT.TR5) THEN
                IFAIL=5
                GOTO 777
        ENDIF
C
C? Kinematics
C
        TGEV=TEEV/WMU
        TBEV=TPEV/TEEV
        IROLD=IREG
        TPOLD=TPEV
        TDEN=1.
C
C? Last slab ?
C
        IF((NSLAB+1).GT.(NSTEP-2)) THEN
                IFAIL=1
                GOTO 777
        ENDIF
        STEPK=STEP
        IF(NSLAB.EQ.(NSTEP-3)) THEN
                STEPK=2.*HTSLAB
                ULAST=1./UDHC
        ENDIF
        DO 757 K=1,6
 757    TTOUT(K)=0.
C
C? Magnetic field evaluation in Aleph frame
C
        POS(1)=TTIN(1)*COSTA+TTIN(2)*SINTA
        POS(2)=TTIN(1)*SINTA-TTIN(2)*COSTA
        POS(3)=TTIN(3)
C                          increase by 1% to be sure to be in Hcal
        POS(1)=1.01*POS(1)
        POS(2)=1.01*POS(2)
        POS(3)=1.01*POS(3)
C
C? Get magnetic field region # IBREG (to be done at entrance point)
C
        CALL FMREGN(POS,IBREG)
        IF(IBREG.NE.IBOLD.AND.IBREG.GT.0) THEN
                CALL FFIELD(POS,IBREG,B)
                IBOLD=IBREG
        ENDIF
C
C? Go to local coordinates
C
        TBON=FLOAT(IBON)
        UBBX= (B(1)*COSTA+B(2)*SINTA)*TBON
        UBBY= (B(1)*SINTA-B(2)*COSTA)*TBON
        UBBZ= (B(3))*TBON
C
        UBBT=SQRT(UBBX*UBBX+UBBY*UBBY+UBBZ*UBBZ)
C
C? Long. and. transv. p with and without bending and transv. B eval.
C
        IF(UBBT.GE.TBCUT)
     +          TPP=(TTIN(4)*UBBX+TTIN(5)*UBBY+TTIN(6)*UBBZ)/UBBT
        TPT2=TPEV*TPEV-TPP*TPP
        IF(TPT2.LE.0.) THEN
             TPT=0.0001
        ELSE
             TPT=SQRT(TPT2)
        ENDIF
C
        IF(UBBT.LT.TBCUT.OR.TPT.LT.TPTCU) THEN
C Linear tracking (no field or small pt)
                ITKR=1
                IF(IREG.LE.2) THEN
                        TTOUT(1)=STEPK
                        TTOUT(2)=TTIN(5)/TTIN(4)*STEPK
                        TTOUT(3)=TTIN(6)/TTIN(4)*STEPK
                ELSE
                        TTOUT(1)=TTIN(4)/ABS(TTIN(6))*STEPK
                        TTOUT(2)=TTIN(5)/ABS(TTIN(6))*STEPK
                        TTOUT(3)=STEPK*FLOAT(ISIDE)
                ENDIF
                DO 703 K=1,3
 703            TTOUT(K)=TTOUT(K)+TTIN(K)
                GOTO 720
        ELSE
C Curved tracking
                ITKR=0
        ENDIF
C
C? Case Bx=0 & By=0 (i.e. Br=0)
C  (By can be zero even if Bx is not zero). Reduced tranform matrix
C
        IF(ABS(UBBX/UBBT).LT.0.1.AND.ABS(UBBY/UBBT).LT.0.1) THEN
                TPT=SQRT(TTIN(4)*TTIN(4)+TTIN(5)*TTIN(5))
                TPP=TTIN(6)
                IBZSN=SIGN(1.,UBBZ)
                TPP=TPP*IBZSN
                CPHPS=TTIN(4)/TPT
                SPHPS=TTIN(5)/TPT
                VA(1,1)=CPHPS
                VA(1,2)=SPHPS
                VA(1,3)=0.
                VA(2,1)=-SPHPS*FLOAT(IBZSN)
                VA(2,2)=CPHPS*FLOAT(IBZSN)
                VA(2,3)=0.
                VA(3,1)=0.
                VA(3,2)=0.
                VA(3,3)=IBZSN
        ELSE
C
C? Case Br not zero
C
                CTH=UBBZ/UBBT
                STH2=ABS(1.-CTH*CTH)
                STH=SQRT(STH2)
                SPH=UBBX/UBBT/STH
                CPH=-UBBY/UBBT/STH
                SPSI=(TTIN(6)-CTH*TPP)/STH/TPT
                IF(ABS(SPSI).GT.1.) SPSI=SPSI/ABS(SPSI)
                CPSI=(TTIN(5)+STH*CPH*TPP-CTH*CPH*SPSI*TPT)/SPH/TPT
                IF(ABS(CPSI).GT.1.) CPSI=CPSI/ABS(CPSI)
C
C? Full transformation matrix
C
                VA(1,1)=CPSI*CPH-CTH*SPH*SPSI
                VA(1,2)=CPSI*SPH+CTH*CPH*SPSI
                VA(1,3)=SPSI*STH
                VA(2,1)=-SPSI*CPH-CTH*SPH*CPSI
                VA(2,2)=-SPSI*SPH+CTH*CPH*CPSI
                VA(2,3)=CPSI*STH
                VA(3,1)=STH*SPH
                VA(3,2)=-STH*CPH
                VA(3,3)=CTH
        ENDIF
C
C? Evaluation kinematic variables in mag. field
C
        UOMEG=UOM*UBBT/TEEV
        URAG=URADI*TPT/UBBT
        VPP=UOMEG*URAG*TPP/TPT
C
C? Tracking in the barrel: intersection between x=k plane and an helix i
C  quadratic approximation: small wt
C
        IF(IREG.LE.2) THEN
                UAAA=TQ*VA(2,1)*URAG*(UOMEG*UOMEG)
                UBBB=2.*(VA(1,1)*URAG*UOMEG+VA(3,1)*VPP)
                ISIK=1
C
C? Tracking in the end cap: intersection with z=k plane
C
        ELSE
                UAAA=TQ*VA(2,3)*URAG*(UOMEG*UOMEG)
                UBBB=2.*(VA(1,3)*URAG*UOMEG+VA(3,3)*VPP)
                ISIK=ISIDE
        ENDIF
        STEPK=STEPK*FLOAT(ISIK)
C
C? Resolution of quadratic equat.(both cases)
C
        CCC=-2.*STEPK
        IF(ABS(UBBB).LT.1E-6) THEN
                TTT=SQRT(ABS(-CCC))
                GOTO 715
        ENDIF
        IF(ABS(UAAA).LT.6E-5) THEN
                TTT=-CCC/UBBB
        ELSE
                SDELT=UBBB*UBBB-4.*UAAA*CCC
                IF(SDELT.LT.0.) THEN
                        IFAIL=3
                        GOTO 777
                ENDIF
                SQDE=SQRT(SDELT)
                TT1=ABS((-UBBB+SQDE)/(2.*UAAA))
                TT2=ABS((-UBBB-SQDE)/(2.*UAAA))
C
C? Choice of the smallest of t (parametric coordinate)
C
                TTT=TT1
                IF(TT2.LT.TT1) TTT=TT2
        ENDIF
 715    WT=TTT*UOMEG
C
C? Equation of motion in primed coord. system
C
        VRPR(1)=URAG*WT
        VRPR(2)=TQ*URAG*WT*WT/2.
        VRPR(3)=VPP*TTT
C
C? Antitransf. and traslation to actual coord.
C
        DO 709 K=1,3
        TTOUT(1)=TTOUT(1)+VA(K,1)*VRPR(K)
        TTOUT(2)=TTOUT(2)+VA(K,2)*VRPR(K)
 709    TTOUT(3)=TTOUT(3)+VA(K,3)*VRPR(K)
        IF(IREG.LE.2) THEN
                TTOUT(1)=STEPK
        ELSE
                TTOUT(3)=STEPK
        ENDIF
        DO 704 K=1,3
 704    TTOUT(K)=TTOUT(K)+TTIN(K)
C
C? Is the particle still in hcal?
C
 720    ABSTK=ABS(STEPK)
        TROUT=SQRT(TTOUT(1)*TTOUT(1)+TTOUT(2)*TTOUT(2))
        TABO3=ABS(TTOUT(3))
        IF(TROUT.GT.HREMIN.AND.TROUT.LT.TEMAX.AND.
     +                  TABO3.LT.(HZEMAX+0.01)) THEN
                GOTO 730
        ELSE
                IF(IROLD.GE.3) THEN
                        IFAIL=1
                        GOTO 777
                ENDIF
                IF(TABO3.GT.(HZBMAX+0.01).OR.
     +                  TTOUT(1).GT.(HXBMAX+0.01)) THEN
                        IFAIL=1
                        GOTO 777
                ENDIF
        ENDIF
C
C? Assignment of region to outgoing particle
C
 730    IF((TTOUT(1)).GE.(HXBMIN-0.01)) THEN
                IF(TABO3.LE.ZBMED) THEN
                        IREG=1
                        GOTO 741
                ENDIF
                IF(TABO3.LT.HZBMAX) THEN
                        IREG=2
                ELSE
                        IREG=3
                ENDIF
                GOTO 741
        ENDIF
        IF(TABO3.GE.HZBMAX) THEN
                IREG=3
                GOTO 741
        ENDIF
        IF(TROUT.GT.HREMED) THEN
                IREG=5
                TDEN=0.
        ELSE
                IREG=4
                GOTO 741
        ENDIF
        IF(TROUT.GT.CRMIN.AND.TROUT.LE.CRMAX.AND.
     +          TABO3.GE.(HZEMIN-0.01).AND.TABO3.LT.CZMAX) THEN
                IREG=6
        ENDIF
C
C? Evaluation of total curved track lengths
C
 741    TLEN=SQRT((TTOUT(1)-TTIN(1))*(TTOUT(1)-TTIN(1))+
     +            (TTOUT(2)-TTIN(2))*(TTOUT(2)-TTIN(2))+
     +            (TTOUT(3)-TTIN(3))*(TTOUT(3)-TTIN(3)))
        TCORR=1.
        IF(IBON.EQ.1.AND.ITKR.EQ.0) TCORR=1.+TLEN*TLEN/URAG/URAG/8.
        TLEN=TLEN*TCORR
        OTLE=OTLE+TLEN
C
C? Energy loss and check on residual energy
C
        TDEV=FLOAT(IDEON)*TDEN*ULAST*TLEN*
     +       (ALOG(TBEV*TGEV)-TBEV*TBEV-UDE2)*UDE1*UDE3/TBEV/TBEV
        IF(IREG.EQ.6) THEN
             TDEV=FLOAT(IDEON)*TLEN*
     +       (ALOG(TBEV*TGEV)-TBEV*TBEV-CDE2)*CDE1*CDE3/TBEV/TBEV
        ENDIF
        TEEV=TEEV-TDEV
        IF(TEEV.LE.W2MU) THEN
                IFAIL=4
                GOTO 777
        ENDIF
        TPEV2=TEEV*TEEV-WMU2
        IF(TPEV2.LE.0) TPEV2=0.0001
        TPEV=SQRT(TPEV2)
C
C? Evaluation of outgoing momenta
C
        IF(UBBT.LT.TBCUT.OR.TPT.LT.TPTCU) THEN
                DO 701 J=4,6
 701            TTOUT(J)=TTIN(J)*TPEV/TPOLD
        ELSE
                VVPR(1)=(URAG*UOMEG*(1.-WT*WT/2.))/CLGHT
                VPPR(1)=VVPR(1)*TEEV
                VVPR(2)=TQ*(URAG*TTT*UOMEG*UOMEG)/CLGHT
                VPPR(2)=VVPR(2)*TEEV
                VVPR(3)=VPP/CLGHT
                VPPR(3)=VVPR(3)*TEEV
                DO 710 K=1,3
                TTOUT(4)=TTOUT(4)+VA(K,1)*VPPR(K)
                TTOUT(5)=TTOUT(5)+VA(K,2)*VPPR(K)
 710            TTOUT(6)=TTOUT(6)+VA(K,3)*VPPR(K)
        ENDIF
C
C? Procedure for the correction of the coordinates
C
C? In which module of the barrel is the particle ?
C
        IF(IROLD.LE.2.AND.IREG.LE.2) THEN
                TQP=TTOUT(1)-TA*TTOUT(2)
                TQM=TTOUT(1)+TA*TTOUT(2)
                IF(TQP.GE.0..AND.TQM.GE.0.) GOTO 722
                IF(TQP.GE.0..AND.TQM.LT.0.) THEN
                        YM=-TTOUT(1)/TA
                        TIMOD=TIMOD+1.
                        IF(TIMOD.EQ.13.) TIMOD=1.

                TTOUT(2)=ABS(YM)-(YM-TTOUT(2))*CO30+
     +  (YM-TTOUT(2))*SI30*(1.-ABS(TTOUT(5))/TTOUT(4)*TG30)/
     +          (ABS(TTOUT(5))/TTOUT(4)+TG30)
                        TOUT=TTOUT(4)*CO30-TTOUT(5)*SI30
                        TTOUT(5)=TTOUT(4)*SI30+TTOUT(5)*CO30
                        TTOUT(4)=TOUT
                        GOTO 722
                ENDIF
                IF(TQP.LT.0..AND.TQM.GE.0.) THEN
                        YM=TTOUT(1)/TA
                        TIMOD=TIMOD-1.
                        IF(TIMOD.EQ.0.) TIMOD=12.
                TTOUT(2)=-YM+(TTOUT(2)-YM)*CO30-(TTOUT(2)-YM)*SI30*
     +          (1.-TTOUT(5)/TTOUT(4)*TG30)/(TTOUT(5)/TTOUT(4)+TG30)
                        TOUT=TTOUT(4)*CO30+TTOUT(5)*SI30
                        TTOUT(5)=-TTOUT(4)*SI30+TTOUT(5)*CO30
                        TTOUT(4)=TOUT
                GOTO 722
                ENDIF
        ENDIF
C
C? Is still the particle in the same region? Corrections to coord.
C
        IF((IROLD.EQ.IREG).OR.(IROLD.EQ.4.AND.IREG.EQ.3)) GOTO 722
        IF(IROLD.EQ.2.AND.IREG.EQ.3) THEN
                ZDELT=FLOAT(ISIDE)*HZBMAX-TTIN(3)
                XDELT=ABS(STEPK*ZDELT/(TTOUT(3)-TTIN(3)))
                TTOUT(1)=TTIN(1)+XDELT
                TTOUT(2)=TTIN(2)+XDELT*(TTOUT(2)-TTIN(2))/ABSTK
                TTOUT(3)=FLOAT(ISIDE)*HZBMAX
                GOTO 722
        ENDIF
        IF(IROLD.GE.5.AND.IREG.LE.2) THEN
                TTOUT(3)=FLOAT(ISIDE)*ABSTK*
     +                  (HXBMIN-TTIN(1))/(TTOUT(1)-TTIN(1))+TTIN(3)
                XDELT=HXBMIN-TTIN(1)
                TTOUT(1)=HXBMIN
                TTOUT(2)=TTIN(2)+XDELT*(TTOUT(2)-TTIN(2))/ABSTK
                GOTO 722
        ENDIF
C
C? Release & refill of coordinates (no filling for reg. 5 & 6)
C
 722    CONTINUE
        DO 711 L=1,6
 711    TTIN(L)=TTOUT(L)
        TALPH=(TIMOD-1.)*PIBY6
        COSTA=COS(TALPH)
        SINTA=SIN(TALPH)
        IF(IREG.GE.3) THEN
                NSLAB=1+NINT((ABS(TTOUT(3))-HZEMIN)/HTSAMP)
        ELSE
                NSLAB=1+NINT((TTOUT(1)-HXBMIN)/HTSAMP)
        ENDIF
C
        IF(IREG.LT.5.AND.NVETT.LT.NSTEP+4) THEN
                NVETT=NVETT+1
                DO 712 L=1,6
 712            ATMOD(L,NVETT)=TTOUT(L)
                ATMOD(7,NVETT)=TIMOD
                ATMOD(9,NVETT)=IREG
                ATMOD(10,NVETT)=NSLAB
               VECOS(NVETT)=COSTA
               VESIN(NVETT)=SINTA
        ENDIF
C
C? Continues loop
C
        GOTO 1
C
C? Transformation from module coord. to Y X Z frame and to ALEPH coord.
C
 777    DO 713 L=NVET1,NVETT
        COSTA=VECOS(L)
        SINTA=VESIN(L)
C
C? Coord. and momenta
C
        DO 714 J=1,4,3
        ATFRA(J,L)  =ATMOD(J,L)*COSTA+ATMOD(J+1,L)*SINTA
        ATFRA(J+1,L)=ATMOD(J,L)*SINTA-ATMOD(J+1,L)*COSTA
 714    ATFRA(J+2,L)=ATMOD(J+2,L)
C       ATFRA(7,L)=ATMOD(8,L)
C
C? Barrel or end cap modules (necessary because no changement of
C  module made in the endcaps)
C
        A1=ATFRA(1,L)
        A2=ATFRA(2,L)
        A3=ATFRA(3,L)
        IF(ATMOD(9,L).LT.2.5) THEN
                ATFRA(8,L)=3000.+100.*ATMOD(9,L)+ATMOD(7,L)
        ELSE
                TALEC=ATAN2(A2,A1)
                IF(TALEC.LT.0.) TALEC=TALEC+TWOPI
                IMOEC=TALEC/PIBY6+1.5
                IF(IMOEC.GT.12) IMOEC=IMOEC-12
                ATFRA(8,L)=3000.+100.*ATMOD(9,L)+FLOAT(IMOEC)
        ENDIF
        IF(ATMOD(9,L).GT.4.5) ATFRA(8,L)=0.
 713    ATFRA(9,L)=ATMOD(10,L)
C
        RETURN
        END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK htrack
@


1.1.1.1
log
@import julia 300
@
text
@@
