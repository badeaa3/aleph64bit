head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.03.30;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.22;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.23;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
@
text
@      SUBROUTINE HROAD( PMOM , VEXTR , ITRACK , NETP1 ,XCOS)
C========================================================================
C!    Calculates energy in road for HCAL
C!    Fills bank HCTE
C-
C-     Authors : M.N. Minard , M. Pepe       26/02/89
C-     Modified: M.N  Minard                 04/01/91
C-
C- Input:  PMOM              = Particle momentum
C-         VEXTR (1--> 3)    = Extrapolated coordinates in HCAL
C-         ITRACK ( 1--> 5 ) = Address of cell crossed by extrapolation
C-         NETP1             = Track # to extrapolate
C?
C!======================================================================
#ifndef DOC
#include "hsdajj.h"
#include "hctejj.h"
#include "ecnmsk.h"
#include "emskjj.h"
#include "prtmjj.h"
#include "emskpa.h"
#include "alcons.h"
      PARAMETER (NWHCTE = 2 )
#include "bcs.h"
      DIMENSION  VEXTR(3,2) , ITRACK (5,2),XCOS(3,2)
      DIMENSION DVECT(3)
      DIMENSION  COSI(3) , DX(3) , DEX(3) , XPOIN(3,8) , ER(7)
      DIMENSION  XV(4) , DCOSI(3)
      DIMENSION XOR(3),XFAR(3)
      DATA NAEMSK /0/
#include "bmacro.h"
C
C-    Determine pointers
C
      IF (NAEMSK.EQ.0) THEN
        NAEMSK = NAMIND('EMSK')
        NAPRTM = NAMIND('PRTM')
        NAHCTE = NAMIND('HCTE')
      ENDIF
      KPRTM  = IW (NAPRTM)
      IF ( KPRTM.EQ.0) THEN
        CALL RERROR('HROAD',1,'No Mask-Track relation ')
        GO TO 990
      ENDIF
      KEMSK = IW(NAEMSK)
      JPRTM = KROW(KPRTM,NETP1)
      IF ( IW(JPRTM+1).EQ.0) GO TO 990
      JEMSK = KROW ( KEMSK, IW(JPRTM+1))
      KHCTE = IW(NAHCTE)
      IF ( KHCTE.EQ.0 ) THEN
        CALL RERROR('HROAD',2,'Problem no HCTE bank exists')
        GO TO 990
      ENDIF
C
C     Temporary bank exists loop on HSDA
C
      KHSDA = IW (NAHSDA)
      NHSDA = LROWS(KHSDA)
      IF ( NHSDA.LT.1) GO TO 900
C
      DO 250 IHSDA = 1,NHSDA
        CALL VZERO (ER,3)
        JHSDA = KROW ( KHSDA,IHSDA )
        IK = IW ( JHSDA+JHSDSN)
        IF ( IK.LT.1.OR.IK.GT.2) IK=1
        IPHI = IW ( JHSDA+JHSDPI )
        ITET = IW ( JHSDA+JHSDTI )
        EN = RW ( JHSDA + JHSDDE )
        ITOW = (ITET-1) * 256 + (IPHI-1) * 2 + IK - 1
C
        IF ( ITRACK ( 1, IK) . EQ. 0 ) GO TO 250
C
C-    Calculate cell center coordinate
C
        LHPOI = 8
        CALL HSRCR ( 'ALEPH',ITET , IPHI, IK , LHPOI , XPOIN )
C
C-     Average for center
C
        CALL VZERO (COSI,3)
        XDMAX = 0.
        DO 141 IJ = 1,LHPOI
          DO 140 IFI= 1,3
            IF ( IJ.EQ.1) THEN
              XOR(IFI) = XPOIN(IFI,IJ)
            ELSE
              XFAR(IFI) = XPOIN(IFI,IJ)
            ENDIF
            COSI (IFI) = COSI (IFI) + XPOIN(IFI,IJ)/FLOAT(LHPOI)
  140     CONTINUE
          IF ( IJ.NE.1) THEN
            DR = SQRT((XOR(1)-XFAR(1))**2+(XOR(2)-XFAR(2))**2+(XOR(3)-
     &          XFAR(3)
     &)**2)
            IF ( DR.GT.XDMAX) XDMAX = DR
          ENDIF
  141   CONTINUE
C
C-    Calculate distance to extrapolated point
C
        DR = 0.
        DO 100 IX =1,3
          DR = DR + COSI(IX)**2
  100   CONTINUE
        CANG2 = VDOTN(VEXTR,COSI,3)
      IF (ABS(CANG2).GT.1.) CANG2 = SIGN(1.,CANG2)
        TANG2 = ACOS(CANG2)
        RANG2 = SIN(TANG2)*SQRT(DR)
        XVAR =ABS( RANG2)/XNORM(IK+3)
        DVECT(1) =-VEXTR(1,1)+COSI(1)
        DVECT(2) =-VEXTR(2,1)+COSI(2)
        DVECT(3) =-VEXTR(3,1)+COSI(3)
        DIST = SQRT((VEXTR(1,1)-COSI(1))**2+(VEXTR(2,1)-COSI(2))**2+
     & (VEXTR(3,1)-COSI(3))**2)
        DANG1= VDOTN(XCOS,DVECT,3)
        DANG = VDOTN(COSI,XCOS,3)
        XVAR2= DIST*SQRT(1.-DANG1**2)

        IF ( XVAR2.GT.0.5*XDMAX.OR.DANG.LT.0) GO TO 250
C
C-    Determine region
C
        IS = 1
        IF (XVAR.LT.0.5*ZON(IK+3)) IS = 3
        IF (XVAR.GT.ZON(IK+3))     IS = 2
        IF ( CANG2.LT.0.)          IS = 0
        IF ( XVAR2.GT.0.5*XDMAX)   IS = 0
        IF (IS.EQ.0 ) GO TO 250
        IF(IS.EQ.1.OR.IS.EQ.2)EMAX  = PMOM *EZON(IK+3,IS)
        IF(IS.EQ.3) EMAX = PMOM
        IF ( IS.EQ.3) IS =1
C
C-    Check if cell not already removed
C
        EPREV = 0.
        JHCTE = 0
        DO 200 IHCTE = 1,LROWS(KHCTE)
          JHTCA = KROW(KHCTE,IHCTE)
          IF ( IW(JHTCA+1).EQ.ITOW) THEN
            JHCTE = JHTCA
            EPREV = RW(JHCTE+2)
          ENDIF
  200   CONTINUE
        IF(JHCTE.EQ.0) THEN
          IF (LFRROW(KHCTE).LT.1) THEN
            CALL RERROR('HROAD',4,'HCTE too small,contact experts')
            CALL AUBOS ('HCTE',0,IW(KHCTE)+LHCTEA,KHCTE,IGARB)
            IF (KHCTE.EQ.0) THEN
              CALL RERROR ('HROAD',5,'not enough space in BOS array')
              GOTO 990
            ENDIF
          ENDIF
          JHCTE = KNEXT(KHCTE)
          IW ( JHCTE + 1 ) = ITOW
          RW ( JHCTE + 2 ) = 0.
          IW ( KHCTE + 2 ) = IW(KHCTE+2) + 1
        ENDIF
C
C-    Now compare to energy already removed
C
        IF ( EMAX .GT.EN-EPREV) THEN
          ER(IS) = EN-EPREV
          IF ( ER(IS).LE.0) ER(IS)=0
        ELSE
          ER(IS) = EMAX
        ENDIF
        IF (ER(IS).GT.0.01) THEN
          IW ( JHCTE+1) = ITOW
          RW (JHCTE+2)  = ER(IS) + EPREV
C
C-    Store energy found
C
          INCL = (IS-1) * 15 + ( IK+2)*3
C
C-    Set vector to calculate average sums
C-    Fill and update EMSK bank with new energy found in road
C
          CALL HCOS ( ER(IS),IPHI,ITET,IK,XV )
          CALL UCOPY(RW(JEMSK+INCL+1),DCOSI(1),3)
          CALL EMSKF(DCOSI,XV)
          CALL UCOPY(DCOSI(1),RW(JEMSK+INCL+1),3)
        ENDIF
  250 CONTINUE
C
C-    End of loop on storeys
C
      RETURN
C
  900 CALL RERROR('HROAD',3,'No HSDA bank to treat')
C
  990 RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK hroad
@


1.1.1.1
log
@import julia 300
@
text
@@
