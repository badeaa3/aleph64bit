head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	98.05.28.12.20.07;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.03.06;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.19;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.20;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fix to HCAL online bug
@
text
@      SUBROUTINE HPRANA(NHVST)
C-------------------------------------------------------------------
C! prepare Hcal analog data
C
C      G.Capon               date : 861001
C      modified R.Tenchini
C      modified A.Sciaba`           980527
C!      fill HSDA bank
C!      output : NHVST = number of valid storeys
C!                     (over threshold KTHRE)
C!      called by HPREDA
C?
C!======================================================================
#ifndef DOC
      EXTERNAL HINTST, HCORFC
      REAL HCORFC
      LOGICAL TEST,HINTST,FIRST
#include "bcs.h"
#include "hcnamc.h"
#include "hstadd.h"
#include "rcurnt.h"
#include "rlunit.h"
#include "hdeach.h"
#include "hcjosu.h"
#include "hsdajj.h"
#include "hstojj.h"
#include "hcinjj.h"
      PARAMETER(IFFFF=65535)
      DATA KTHRE,NERR/1,0/
      DATA FIRST /.TRUE./
#include "bmacro.h"
      IF(FIRST) THEN
         KHOFF=NLINK('HOFF',0)
         FIRST=.FALSE.
      ENDIF
C
C?             KTHRE= adc threshold to validate a storey !!
C?             ( set to zero provisionally )
C
      NHVST=0
      JHTDI=IW(NAHTDI)
      IF (JHTDI.EQ.0) GO TO 99
      NTOW=IW(JHTDI+2)
      NHSTO=2*NTOW
      LHTDI=IW(JHTDI+1)
      NSTKS=LHTDI-1
C
C?             create HSDA bank
C
      LNHSD=2+NHSTO*LHSDAA
      CALL AUBOS('HSDA',0,LNHSD,JHSDA,IGARB)
      IF (IGARB.EQ.2) THEN
         CALL RERROR('HPRANA',1,'no space for HSDA bank')
         RETURN
      ENDIF
C
C?             create HSTO bank
C
      LNHST=2+NHSTO*LHSTOA
      CALL AUBOS('HSTO',0,LNHST,JHSTO,IGARB)
      IF (IGARB.EQ.2) THEN
         CALL RERROR('HPRANA',2,'no space for HSTO bank')
         RETURN
      ENDIF
      KHSTO=JHSTO+2
C
C     Access  HCIN (cable inversions)
C
      NAHCIN=NAMIND('HCIN')
      JHCIN=IW(NAHCIN)
      IF(JHCIN.EQ.0) THEN
         NHCIN=0
      ELSE
         NHCIN=LROWS(JHCIN)
      ENDIF
C
C?             loop on fired towers
C?             one tower = storey 1 + storey 2
C?             unpack address + adc data
C?             NHVST = number of valid (over threshold) storeys
C
      JHSDA=IW(NAHSDA)
      JHTDI=IW(NAHTDI)
      KHSDA=JHSDA+2
      KHTDI=JHTDI+2
      NAHNTO=NAMIND('HNTO')
      JHNTO=IW(NAHNTO)
      DO 10 N=1,NTOW
         IADDHS=IW(KHTDI+1)
         IADOLD=IADDHS
         DO 100 JIN=1,NHCIN
            INVW=ITABL(JHCIN,JIN,JHCIWA)
            IF(IADDHS.EQ.INVW) THEN
               INVC=ITABL(JHCIN,JIN,JHCICA)
               IF(INVC.EQ.0) GO TO 12
               IADDHS=INVC
               GOTO 101
            ENDIF
  100    CONTINUE
  101    CONTINUE
         IPHIHS=IBITS(IADDHS,0,16)
         ITETHS=IBITS(IADDHS,16,8)
         IREGHS=IBITS(IADDHS,24,8)
C?             check indices within expected range
         TEST=HINTST(ITETHS,IPHIHS,1)
         IF(.NOT.TEST)THEN
            NERR=NERR+1
            CALL RERROR('HPRANA',5,'hcal analog addr out of range')
            IF (NERR.GT.10) GO TO 12
            WRITE(LDEBRL,*)
     +      ' routine HPRANA:Hcal analog address out of range - ',
     +      'RUN,EV = ', IRUNRC,IEVTRC
            WRITE(LDEBRL,*)' nregio,indphi,inteta =',
     +      IREGHS,IPHIHS,ITETHS
            GO TO 12
         ENDIF
C?           get module #, subcomp #
         CALL HFNDMD(ITETHS,IPHIHS,ISTKHS,ISUBHS,IMODHS,IOVRHS)
C                 skip missing subcomponents 1=EA, 2=barrel, 3=EB
         IF (IHSUBC(ISUBHS).EQ.0) GO TO 12
         DO 11 ISTKHS=1,NSTKS
            IADC=IW(KHTDI+1+ISTKHS)
            IADC=IAND(IADC,IFFFF)
C                     handle noisy towers
            IF (JHNTO.GT.0) THEN
               DO 21 NR=1,LROWS(JHNTO)
               IF( IADOLD .EQ. ITABL(JHNTO,NR,1) ) THEN
                  INOIE=ITABL(JHNTO,NR,2)
                  IF(INOIE.GE.IECUT1) GO TO 11
                  IADC=IADC-INOIE
                  IF(IADC.LE.IECUT2) GO TO 11
                  GO TO 22
               ENDIF
 21            CONTINUE
            ENDIF
 22         EGEV=0.001*FLOAT(IADC)
            EGEV=HCORFC(EGEV,ITETHS,IPHIHS)
            EGEV=EGEV*HCATOW(ITETHS,IPHIHS)
            IF(IADC.GT.KTHRE)THEN
               NHVST=NHVST+1
               NSTOHC(ISTKHS)=NSTOHC(ISTKHS)+1
               IW(KHSDA+JHSDTI)=ITETHS
               IW(KHSDA+JHSDPI)=IPHIHS
               IW(KHSDA+JHSDSN)=ISTKHS
               RW(KHSDA+JHSDDE)=EGEV
               ETOTHC(ISTKHS)=ETOTHC(ISTKHS)+EGEV
               IW(KHSDA+JHSDSC)=ISUBHS
               IW(KHSDA+JHSDMN)=IMODHS
               IW(KHSDA+JHSDRN)=IREGHS
               KHSDA=KHSDA+LHSDAA
               CALL HSTOFI(KHSTO)
            ENDIF
   11    CONTINUE
 12      KHTDI=KHTDI+LHTDI
   10 CONTINUE
C
C             drop banks HSDA,HSTO if bank HSDA is empty
C
      IF (NHVST.EQ.0) THEN
         IND=NDROP('HSDA',0)
         IND=NDROP('HSTO',0)
C         CALL RERROR('HPRANA',5,'bank HTDI exists but HSDA is empty')
         GO TO 99
       ENDIF
C
C?            fill bank headers, adjust bank length
C
      LNHSD=2+NHVST*LHSDAA
      CALL AUBOS('HSDA',0,LNHSD,JHSDA,IGARB)
      IF (IGARB.EQ.2) CALL RERROR('HPRANA',3,'no update of HSDA bank')
      IW(JHSDA+1)=LHSDAA
      IW(JHSDA+2)=NHVST
C
      LNHST=2+NHVST*LHSTOA
      CALL AUBOS('HSTO',0,LNHST,JHSTO,IGARB)
      IF(IGARB.EQ.2) CALL RERROR('HPRANA',4,'no update of HSTO bank')
      IW(JHSTO+1)=LHSTOA
      IW(JHSTO+2)=NHVST
C
C            apply single tower calibration factors
C
      IPOTG=0
      IF(KHOFF.EQ.0) CALL HCALIB(IPOTG)
 99   RETURN
      END
#endif
@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
@
text
@d7 1
d15 2
a16 1
      EXTERNAL HINTST
d137 1
@


1.1
log
@Initial revision
@
text
@a0 1
*DK hprana
d109 2
a110 2
     +      ' routine HPRANA:Hcal analog address out of range - RUN,EV =
     +     ', IRUNRC,IEVTRC
@


1.1.1.1
log
@import julia 300
@
text
@@
