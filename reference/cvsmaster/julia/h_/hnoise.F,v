head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.02.56;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.18;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.19;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
@
text
@      SUBROUTINE HNOISE
C***********************************************************
C! Generate a lookup table (NOICOD) for noisy Hcal         *
C! towers.  See HNOISY for definition of NOICOD.           *
C! NNOISE is filled with the number of noise objects       *
C! found in the event.                                     *
C! This routine should be called once per event.           *
C! The tower information is taken from the HSDA bank.      *
C!                                                         *
C! Author: S.Wasserbaech        061289                     *
C!                                                         *
C?
C!======================================================================
#ifndef DOC
#include "hnoicd.h"
#include "bcs.h"
#include "hsdajj.h"
      INTEGER NGPBA(192), NGPEC(120)
      INTEGER NOIBA(192), NOIEC(120)
      DATA N1MIN,N2MIN,N3MIN,N4MIN,N5MIN /30,18,12,15,10/
#include "bmacro.h"
C
      NNOISE = 0
C
C     Fill the noicod array with -1:
      CALL UFILL(NOICOD,1,5952,-1)
C
C     Look for HSDA bank:
      KHSDA = NLINK('HSDA',0)
      IF (KHSDA .EQ. 0) GO TO 1000
C
C     The HNGR bank contains one word per Hcal tower.
C     This word is given by
C     ITABL(KHNGR,ITH,IPH) = 1000*(endcap group #) + (barrel group #)
C     The group numbers refer to hardware groupings of the
C     towers relevant for noise identification.
C     The barrel group # is between 1 and 192 (or zero for
C     non-barrel towers).
C     The endcap group # is between 1 and 120 (or zero for
C     non-endcap towers).
C     Look for HNGR bank:
      KHNGR = NLINK('HNGR',0)
      IF (KHNGR .EQ. 0) THEN
        WRITE (6,'(A)') ' HNOISE> HNGR bank not found.'
        STOP
      ENDIF
C
C     Clear the counters and noise flags:
      CALL UZERO(NGPBA,1,192)
      CALL UZERO(NGPEC,1,120)
      CALL UZERO(NOIBA,1,192)
      CALL UZERO(NOIEC,1,120)
C
C     Now loop over the hit towers.
C     Count the hit towers in each group.
C     This code correctly handles multiple hits in a tower.
      DO 100 I=1,LROWS(KHSDA)
        IND0 = KROW(KHSDA,I)
        ITH = IW(IND0+JHSDTI)
        IPH = IW(IND0+JHSDPI)
        IF (NOICOD(ITH,IPH) .EQ. -1) THEN
          NOICOD(ITH,IPH) = 0
          IGR = ITABL(KHNGR,ITH,IPH)
          IGPBA = MOD(IGR,1000)
          IGPEC = IGR/1000
          IF (IGPBA .GT. 0) NGPBA(IGPBA) = NGPBA(IGPBA) + 1
          IF (IGPEC .GT. 0) NGPEC(IGPEC) = NGPEC(IGPEC) + 1
        ENDIF
  100 CONTINUE
C
C     Loop through all groups and identify noise objects.
C
C     For the barrel we consider the groups four at a time.
C     The noise objects are defined as follows:
C       Type 1: total # of hit towers in the four groups .ge. N1MIN;
C       Type 2: total # of hit towers in the first and
C                            fourth groups .ge. N2MIN;
C       Type 3: # of hit towers in the first group OR
C                            the fourth group .ge. N3MIN.
C     If the Type 1 condition is not satisfied, the Type 2
C     condition is checked.  If the Type 2 condition is not
C     satisfied, the Type 3 conditions are checked.
C     If a noise object of Type 1 or 2 is found, all four groups
C     are flagged.  Groups with Type 3 noise are flagged
C     individually.
C
C     For the endcaps we consider the groups ten at a time.
C     The noise objects are defined as follows:
C       Type 4: total # of hit towers in one of the pairs
C                 of groups (2+3, 4+5, 6+7, or 8+9) .ge. N4MIN;
C       Type 5: # of hit towers in any single group .ge. N5MIN.
C     The Type 4 condition is checked for the four pairs of
C     groups.  The Type 5 condition is checked for each of the
C     ten groups which are not involved in a Type 4 object.
C     If a noise object of Type 4 is found, the two involved
C     groups are flagged.  Groups with Type 5 noise are flagged
C     individually.
C
C     The arrays NOIBA and NOIEC receive the type number of
C     the noise in each group, or zero if no noise is found.
C
C     OK, here we go.  First the barrel:
C
      DO 200 IGP=1,192,4
        IG1 = IGP
        IG2 = IGP + 1
        IG3 = IGP + 2
        IG4 = IGP + 3
C
        N1234 = NGPBA(IG1) + NGPBA(IG2) + NGPBA(IG3) + NGPBA(IG4)
        N14 = NGPBA(IG1) + NGPBA(IG4)
        N1 = NGPBA(IG1)
        N4 = NGPBA(IG4)
C
        IF (N1234 .GE. N1MIN) THEN
C         Type 1 object found!
          NNOISE = NNOISE + 1
          NOIBA(IG1) = 1
          NOIBA(IG2) = 1
          NOIBA(IG3) = 1
          NOIBA(IG4) = 1
        ELSEIF (N14 .GE. N2MIN) THEN
C         Type 2 object found!
          NNOISE = NNOISE + 1
          NOIBA(IG1) = 2
          NOIBA(IG2) = 2
          NOIBA(IG3) = 2
          NOIBA(IG4) = 2
        ELSE
          IF (N1 .GE. N3MIN) THEN
C           Type 3 object found!
            NNOISE = NNOISE + 1
            NOIBA(IG1) = 3
          ENDIF
          IF (N4 .GE. N3MIN) THEN
C           Type 3 object found!
            NNOISE = NNOISE + 1
            NOIBA(IG4) = 3
          ENDIF
        ENDIF
  200 CONTINUE
C
C     Now the endcaps:
      DO 300 IGP=1,120,10
C
C       Loop over the four pairs of groups for Type 4:
        DO 210 IG=IGP+1,IGP+7,2
          IG1 = IG
          IG2 = IG + 1
          N12 = NGPEC(IG1) + NGPEC(IG2)
          IF (N12 .GE. N4MIN) THEN
C           Type 4 object found!
            NNOISE = NNOISE + 1
            NOIEC(IG1) = 4
            NOIEC(IG2) = 4
          ENDIF
  210   CONTINUE
C
C       Loop over all ten groups for Type 5, but skip the
C       ones with Type 4 already flagged:
        DO 220 IG=IGP,IGP+9
          IF ((NOIEC(IG) .EQ. 0) .AND. (NGPEC(IG) .GE. N5MIN)) THEN
C           Type 5 object found!
            NNOISE = NNOISE + 1
            NOIEC(IG) = 5
          ENDIF
  220   CONTINUE
  300 CONTINUE
C
C     Loop over the hit towers again.
C     Classify the towers in NOICOD.
      DO 310 I=1,LROWS(KHSDA)
        IND0 = KROW(KHSDA,I)
        ITH = IW(IND0+JHSDTI)
        IPH = IW(IND0+JHSDPI)
        IGR = ITABL(KHNGR,ITH,IPH)
        IGPBA = MOD(IGR,1000)
        IGPEC = IGR/1000
        IF (IGPBA .GT. 0) THEN
          IF (NOIBA(IGPBA) .GT. 0)
     >      NOICOD(ITH,IPH) = IBSET(NOICOD(ITH,IPH),NOIBA(IGPBA)-1)
        ENDIF
        IF (IGPEC .GT. 0) THEN
          IF (NOIEC(IGPEC) .GT. 0)
     >      NOICOD(ITH,IPH) = IBSET(NOICOD(ITH,IPH),NOIEC(IGPEC)-1)
        ENDIF
  310 CONTINUE
C
 1000 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK hnoise
@


1.1.1.1
log
@import julia 300
@
text
@@
