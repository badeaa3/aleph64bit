head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.41.02;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.00;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.01;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TFTHEL(NAME,NPT,LIST,IOPT,VV0,EE0,CHI2)
C-----**************************************************---------C
C! FAST FITTING ROUTINE FOR HELICES                              C
C!    AUTHORS:  N. CHERNOV, G. OSOSKOV & M. POPPE                C
C!    INPUT: NAME  = NAME OF THE BANK CONTAINING COORDINATES     C
C!            NPT  = NUMBER OF POINTS TO BE FITTED               C
C!            LIST = LIST OF POINTS TO BE FITTED                 C
C!            IOPT = 0 -> DISTANCE**2=X**2+Y**2 MINIMISED        C
C!                   1 -> WEIGHTED WITH 1/SIMA(R*PHI)**2         C
C!                   2 -> ERROR MATRIX CALCULATED                C
C!                   3 -> 3-DIMENSIONAL ITERATION                C
C!  OUTPUT:   VV0 = 1/R*CHARGE   [1/CM]  POS. IF CLOCKWISE       C
C!                  TAN(LAMBDA)  {=DZ/DS}TAN(ANGLE TO X,Y PLANE) C
C!                  PHI0         {0,2PI} ANGLE TO X-AXIS         C
C!                  D0*SIGN      [CM]    MINIMAL DIST. TO Z-AXIS,C
C!                                       POS. IF AXIS ENCIRCLED  C
C!                  Z0           [CM]    Z POS AT R=D0           C
C!            EE0 = INVERSE ERROR MATRIX IN TRIANG. FORM         C
C!            CHI2= CHI SQUARED = SUM (DEVIATIONS/ERRORS)**2     C
C!  NOTE: DEGREES OF FREEDOM = 2*NPT-5                           C
C----------------------------------------------------------------C
C     BASED ON  SUBROUTINE CIRCLE                                C
C     REFERENCE:  COMPUTER PHYSICS COMMUNICATIONS VOL 33,P329    C
C----------------------------------------------------------------C
C
C   Modified on 8-Jun-89 to allow interface on a lower level to old
C   algorithm by Fred Weber; now calls old algorithm in form of new
C   routine TFITHL.
C-----------------------------------------------------------------
#ifndef DOC
C
#include "bcs.h"
C
      PARAMETER (MPT=40)
      REAL   PF(MPT),RF(MPT),VV0(*),EE0(*),
     1       ZF(MPT),WZF(MPT)
      DOUBLE PRECISION XF(MPT),YF(MPT),WF(MPT)
      INTEGER LIST(*)
      CHARACTER*4 NAME
      CHARACTER*48 MESSAG
      LOGICAL FIRST
      DATA FIRST/.TRUE./
C     OFFSET FOR COORDINATE "IJ" IN 'TPCO'
      KKTPCO(IJ) = KTPCO+2+(IJ-1)*(IW(KTPCO+1))
C     OFFSET FOR COORDINATE "IJ" IN 'TPCO'
      IF(FIRST) THEN
          NTPCO = NAMIND('TPCO')
          NITCO = NAMIND('ITCO')
          FIRST =.FALSE.
      END IF
      IF(NPT.GT.MPT) THEN
         CALL RERROR('TFTHEL',1,' TFTHEL: Cannot fit > 40 points')
         RETURN
      END IF
C-----> INPUT DATA
      IF(NAME.EQ.'TPCO') THEN
          KTPCO=IW(NTPCO)
          IF (KTPCO.EQ.0) THEN
              CALL RERROR('TFTHEL',2,
     1        ' TFTHEL:  no TPCO bank; returning...')
              RETURN
          END IF
          DO 10 I=1,NPT
          KSTRT = KKTPCO(LIST(I))
          XF(I)  = RW(KSTRT+2)*COS(RW(KSTRT+3))
          YF(I)  = RW(KSTRT+2)*SIN(RW(KSTRT+3))
          RF(I)  = RW(KSTRT+2)
          PF(I)  = RW(KSTRT+3)
          WF(I)  = 1.0/(RW(KSTRT+5)+0.000000001)
          ZF(I)  = RW(KSTRT+4)
          WZF(I) = 1.0/(RW(KSTRT+6)+0.000001)
   10     CONTINUE
      ELSE IF(NAME.EQ.'ITCO') THEN
          CALL RERROR('TFTHEL',3,' TFTHEL: no ITC available yet')
          RETURN
      ELSE
          WRITE (MESSAG,15) NAME
   15     FORMAT(1X,' TFTHEL: I do not understand bank ',A4,
     1        ' returning')
          CALL RERROR('TFTHEL',4, MESSAG)
          RETURN
      END IF
C
      CALL TFITHL(NPT,XF,YF,RF,PF,WF,ZF,WZF,IOPT,
     1            VV0,EE0,CH2PH,CH2Z)
C
C     combine CHI2 together to keep old routine the same
C
      IF (CH2Z.LT.1.0E30) THEN
          CHI2 = CH2Z + CH2PH
      ELSE
          CHI2 = 1.0E30
      END IF
C
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK tfthel
@


1.1.1.1
log
@import julia 300
@
text
@@
