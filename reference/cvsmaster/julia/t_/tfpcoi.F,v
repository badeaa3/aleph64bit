head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	97.03.06.09.55.16;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.40.56;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.59;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.00;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Tracking upgrade
@
text
@      SUBROUTINE TFPCOI(IER)
C
C----------------------------------------------------------------------
C! Create bank PCOI with supplementary coordinate information
C
C  Author:  R. Johnson    12-12-89
C  Modified: D.Cinabro    31-05-90 to include info on 1/2 pads and length
C            D. Casper    24-04-95 include information on Landau corrections
C
C?
C!======================================================================
#ifndef DOC
C
#include "frtljj.h"
#include "tpcojj.h"
#include "pcoijj.h"
#include "tscljj.h"
#include "bcs.h"
#include "tpgpar.h"
#include "tpgeom.h"
#include "tpgeop.h"
#include "tclujj.h"
C
      COMMON/TFPCWB/ ITSCLW,ITCLUW
      LOGICAL FIRST
      DATA FIRST/.TRUE./
C
#include "bmacro.h"
C
      IF (FIRST) THEN
        ITSCLW=0
        ITCLUW=0
        NTSCL=NAMIND('TSCL')
        NFRTL=NAMIND('FRTL')
        NFTCL=NAMIND('FTCL')
        NPCOI=NAMIND('PCOI')
        NTPCO=NAMIND('TPCO')
        NTCLU=NAMIND('TCLU')
      ENDIF
C
      KTSCL=IW(NTSCL)
      IF (KTSCL.EQ.0) THEN
        IER=1
        GO TO 999
      ENDIF
      CALL BWIND(IW,'TSCL',LTSECT,ITSCLW)
      KTPCO=IW(NTPCO)
      IF (KTPCO.EQ.0) THEN
        IER=2
        GO TO 999
      ENDIF
      KFRTL=IW(NFRTL)
      IF (KFRTL.EQ.0) THEN
        IER=3
        GO TO 999
      ENDIF
      KFTCL=IW(NFTCL)
      IF (KFTCL.EQ.0) THEN
        IER=4
        GO TO 999
      ENDIF
      KTCLU = IW(NTCLU)
      IF (KTCLU.EQ.0) THEN
        IER=5
        GO TO 999
      ENDIF
      CALL BWIND(IW,'TCLU',LTSECT,ITCLUW)
C
      IF (IW(NPCOI).NE.0) CALL BDROP(IW,'PCOI')
      LEN=LROWS(KTPCO)*LPCOIA+LMHLEN
      IW(1)=1
      CALL AUBOS('PCOI',0,LEN,KPCOI,IGARB)
      IF (IGARB.EQ.2) THEN
        IER=6
        GO TO 999
      ENDIF
      IF (IGARB.EQ.1) THEN
        KFRTL=IW(NFRTL)
        KFTCL=IW(NFTCL)
        KTPCO=IW(NTPCO)
        CALL BWIND(IW,'TCLU',LTSECT,ITCLUW)
        CALL BWIND(IW,'TSCL',LTSECT,ITSCLW)
      ENDIF
      IW(KPCOI+LMHCOL)=LPCOIA
C
C++   Loop over coordinates by order of the TPC tracks.  This is
C++   the same order as PTCO is filled in TPAKCO.
C
      NCO=0
      DO 100 ITK=1,LROWS(KFRTL)
        NC=ITABL(KFRTL,ITK,JFRTNT)+ITABL(KFRTL,ITK,JFRTNR)
        IF (NC.EQ.0) GO TO 100
        DO 50 II=1,NC
C
C++       Get the coordinate number in TPCO
C
          IC=IW(KFTCL+LMHLEN+ITABL(KFRTL,ITK,JFRTIT)+II)
C
C++       Get the subcluster number
C
          ISC=ITABL(KTPCO,IC,JTPCCN)
          IF (ISC.EQ.0) THEN
            CALL BDROP(IW,'PCOI')
            IER=7
            RETURN
          ENDIF
C
C++       Link to the cluster banks for this sector
C
          ISLOT=MOD(ITABL(KTPCO,IC,JTPCIN),100000)/1000
          IF (ISLOT.GT.IW(ITSCLW)) THEN
            CALL BDROP(IW,'PCOI')
            IER=8
            RETURN
          ENDIF
          IF (IW(ITSCLW).GE.ISLOT) THEN
            KTSCL=IW(ITSCLW+ISLOT)
          ELSE
            KTSCL=0
          ENDIF
          IF (KTSCL.EQ.0) THEN
            CALL BDROP(IW,'PCOI')
            IER=9
            RETURN
          ENDIF
          IF (IW(ITCLUW).GE.ISLOT) THEN
            KTCLU=IW(ITCLUW+ISLOT)
          ELSE
            KTCLU=0
          ENDIF
          IF (KTCLU.EQ.0) THEN
            CALL BDROP(IW,'PCOI')
            IER=10
            RETURN
          ENDIF
C
C++       Get the number of pads in the subcluster
C
          NSP=ITABL(KTSCL,ISC,JTSCNS)
C
C++       Get the number of coordinates from this subcluster
C
          NCOS=ITABL(KTSCL,ISC,JTSCNC)
C
C++       Get the total charge of the subcluster
C
          ITC=ITABL(KTSCL,ISC,JTSCTC)
C
C++       Number of half pads in this subcluster
C
          IND = ITABL(KTPCO,IC,JTPCIN)
          IROW = IND/100000
          ISTYP = ITPTYP(ISLOT)
          IF (ISTYP.EQ.1) THEN
            IROW=IROW
          ELSE
            IROW=IROW-NTPDRW(1)
          ENDIF
          KTS = KROW(KTSCL,ISC)
          CALL TNHLFP(ISLOT,IROW,KTS,NHALF)
C
C++       Length of the subcluster
C
          IF (KTCLU.NE.0) THEN
            MIN = ITABL(KTCLU,ITABL(KTSCL,ISC,JTSCCL),JTCLFB)
            MAX = ITABL(KTCLU,ITABL(KTSCL,ISC,JTSCCL),JTCLLB)
            LEN = MAX - MIN
          ELSE
            LEN = 0
          ENDIF
C
C++      Determine whether r-phi or z have been corrected by wires
C
          ICORW = ITABL(KTPCO,IC,JTPCOF)/10
C
C++       Fill an entry into PCOI
C
          NCO=NCO+1
          IW(KROW(KPCOI,NCO)+JPCONP)=NSP
          IW(KROW(KPCOI,NCO)+JPCOPH)=ITC/10
          IF (NCOS.GT.1) THEN
            IW(KROW(KPCOI,NCO)+JPCOTF)=1 + ICORW*10
          ELSE
            IW(KROW(KPCOI,NCO)+JPCOTF)=ICORW*10
          ENDIF
          IW(KROW(KPCOI,NCO)+JPCONH)=NHALF
          IW(KROW(KPCOI,NCO)+JPCOPL)=LEN
   50   CONTINUE
  100 CONTINUE
      IW(KPCOI+LMHROW)=NCO
      CALL AUBPRS('PCOI')
      IER=0
  999 CONTINUE
      CALL WDROP(IW,ITCLUW)
      CALL WDROP(IW,ITSCLW)
      END
#endif
@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d8 1
d172 4
d182 1
a182 1
            IW(KROW(KPCOI,NCO)+JPCOTF)=1
d184 1
a184 1
            IW(KROW(KPCOI,NCO)+JPCOTF)=0
@


1.1
log
@Initial revision
@
text
@a0 1
*DK tfpcoi
@


1.1.1.1
log
@import julia 300
@
text
@@
