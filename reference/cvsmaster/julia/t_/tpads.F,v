head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.42.32;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.06;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.07;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TPADS(IER)
C
C--------------------------------------------------------------------
C! Reconstruct pad clusters
C!
C!    Author:    D. Schlatter
C!    Modified:  R. Johnson    20-07-89
C!
C!    Output:
C!        - IER      /I    Error code = 1 if we run out of space
C!                                    = 2 if input banks are missing
C!                                    = 0 if all is OK
C!
C!    Input banks:
C!          TPAD:          TPC pad hits
C!          TPDI:          TPC pad digitizations
C!          TISL:          Optional; it will be created if not input
C!    Output banks:
C!          TPRL           Row list pointers to raw data
C!          TPUL,TCLU      TPC pad pulses and clusters
C!          TSPU,TSCL      TPC pad subpulses and subclusters
C!          TLRL,TSRL      Row pointers for clusters and subclusters
C!
C!    Called by TPREDA
C!
C!    Description
C!    ===========
C?    For each sector:
C?      Build a pad row list
C?      Find pad islands
C?      Set up cluster and pulse banks
C?      Find subpulses and subclusters
C!
C!    NOTE:  This routine plus those subroutines which it calls
C!           represent a MODULE within JULIA.
C!----------------------------------------------------------------------
#ifndef DOC
C
#include "rparac.h"
#include "tparac.h"
#include "tpgpar.h"
#include "tmonit.h"
#include "rcurnt.h"
#include "rlunit.h"
#include "bcs.h"
#include "tpgeom.h"
#include "ptstjj.h"
C
C--------------------- Local variables ---------------------------------
C
      CHARACTER TEXT*70
      LOGICAL LGARB,FIRST
      DATA FIRST/.TRUE./
C
C-----------------------------------------------------------------------
C
#include "bmacro.h"
C
      IF (FIRST) THEN
        FIRST=.FALSE.
        NTPAD=NAMIND('TPAD')
        NTPDI=NAMIND('TPDI')
        NTISL=NAMIND('TISL')
        NTCLU=NAMIND('TCLU')
        NTLRL=NAMIND('TLRL')
        NTPRL=NAMIND('TPRL')
        NTPUL=NAMIND('TPUL')
        NTSCL=NAMIND('TSCL')
        NTSPU=NAMIND('TSPU')
        NTSRL=NAMIND('TSRL')
        NPTST=NAMIND('PTST')
      ENDIF
C
C++   Check that we have all necessary input banks
C
      IF (IW(NTPAD).EQ.0 .OR. IW(NTPDI).EQ.0) THEN
        IER=2
        GO TO 999
      ENDIF
C
C++   If any of the output banks already exist, drop them.
C
      IF (IW(NTCLU).NE.0) CALL BDROP(IW,'TCLU')
      IF (IW(NTLRL).NE.0) CALL BDROP(IW,'TLRL')
      IF (IW(NTPRL).NE.0) CALL BDROP(IW,'TPRL')
      IF (IW(NTPUL).NE.0) CALL BDROP(IW,'TPUL')
      IF (IW(NTSCL).NE.0) CALL BDROP(IW,'TSCL')
      IF (IW(NTSPU).NE.0) CALL BDROP(IW,'TSPU')
      IF (IW(NTSRL).NE.0) CALL BDROP(IW,'TSRL')
C
C++   Loop over all sectors with data
C
      KTPAD=IW(NTPAD)
      KTPDI=IW(NTPDI)
      KTISL=IW(NTISL)
  310 IF (KTPAD.EQ.0 .OR. KTPDI.EQ.0) GO TO 410
        ISLOT=IW(KTPAD-2)
        IF (ISLOT.LE.0 .OR. ISLOT.GT.NTSECT) THEN
          WRITE(TEXT,832) ISLOT
  832     FORMAT('Sector number ',I2,' out of range.')
          CALL RERROR('TPADS ',2,TEXT(1:30))
          KTPAD=IW(KTPAD-1)
          KTPDI=IW(KTPDI-1)
          IF (KTISL.GT.0) KTISL=IW(KTISL-1)
          IND=NDROP('TPAD',ISLOT)
          IND=NDROP('TPDI',ISLOT)
          IND=NDROP('TISL',ISLOT)
          GO TO 310
        ENDIF
        IF (IW(KTPDI-2).NE.ISLOT) THEN
          IND=NLINK('TPDI',ISLOT)
          IF (IND.EQ.0) THEN
            WRITE(TEXT,833) ISLOT
  833       FORMAT('Digitization bank missing for sector ',I2,'.')
            CALL RERROR('TPADS ',3,TEXT(1:40))
            KTPAD=IW(KTPAD-1)
            IF (KTISL.GT.0) KTISL=IW(KTISL-1)
            IND=NDROP('TPAD',ISLOT)
            IND=NDROP('TISL',ISLOT)
            GO TO 310
          ELSE
            KTPDI=IND
          ENDIF
        ENDIF
        IF (KTISL.NE.0) THEN
          IF (IW(KTISL-2).NE.ISLOT) THEN
            KTISL=NLINK('TISL',ISLOT)
          ENDIF
        ENDIF
        ISTYP=ITPTYP(ISLOT)
C
C++     Establish the ROWLIST bank for this sector
C
        CALL TPRLST(ISLOT,KTPAD,KTPDI,KTPRL,IGARB,IER)
        IF (IER.EQ.1) GO TO 999
        IF (IER.GT.1) THEN
          KPTST=IW(NPTST)
          IF (KPTST.NE.0) THEN
            IW(KROW(KPTST,ISLOT)+JPTSTP)=0
            IW(KROW(KPTST,ISLOT)+JPTSNT)=4*(IW(KTPAD)+IW(KTPDI))
          ENDIF
C
C++       Data format error:  drop data for this sector
C++       and go on to the next sector.
C
          IER=0
          WRITE(TEXT,473) ISLOT
  473     FORMAT('Data format error in sector ',I2,
     &           ' Dropping raw data for this sector.')
          CALL RERROR('TPADS',1,TEXT(1:67))
          NDRPTM(ISLOT)=NDRPTM(ISLOT)+1
          KTPAD=IW(KTPAD-1)
          KTPDI=IW(KTPDI-1)
          IF (KTISL.GT.0) KTISL=IW(KTISL-1)
          IND=NDROP('TPAD',ISLOT)
          IND=NDROP('TPDI',ISLOT)
          IND=NDROP('TISL',ISLOT)
          GO TO 310
        ENDIF
        IF (IGARB.NE.0) THEN
          KTISL=NLINK('TISL',ISLOT)
        ENDIF
C
C++     Fill the TISL bank for this sector (or just complete it
C++     if the TPP has already done part or all of it)
C
        CALL TISLND(ISLOT,KTPAD,KTISL,NSECL,IGARB,IER)
        IF (IER.NE.0) GO TO 999
        IF (IGARB.NE.0) THEN
          KTPDI=NLINK('TPDI',ISLOT)
          KTPRL=NLINK('TPRL',ISLOT)
        ENDIF
C
C++     Call routine to store clusters and pulses
C
        CALL TCLUST(ISLOT,NSECL,KTPAD,KTPDI,KTPRL,KTLRL,KTISL,
     &                               KTCLU,KTPUL,IGARB,IER)
        IF (IER.NE.0) GO TO 999
C
C++     Call routine to analyze clusters and pulses and fill banks
C++     of subclusters and subpulses
C
        CALL TCLCOR(KTPAD,KTPDI,KTPUL,KTCLU,KTLRL,ISLOT,IGARB,IER)
        IF (IER.NE.0) GO TO 999
        IF (IGARB.NE.0) THEN
          KTISL=NLINK('TISL',ISLOT)
        ENDIF
C
C++     End of the sector loop.  Find BOS indices for the next sector.
C
        KTPAD=IW(KTPAD-1)
        KTPDI=IW(KTPDI-1)
        IF (KTISL.NE.0) KTISL=IW(KTISL-1)
        GO TO 310
  410 CONTINUE
      IER=0
  999 CONTINUE
C
C++   Drop all the TISL banks
C
      CALL BDROP(IW,'TISL')
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK tpads
@


1.1.1.1
log
@import julia 300
@
text
@@
