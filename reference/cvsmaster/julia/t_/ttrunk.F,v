head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.46.32;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.22;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.23;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TTRUNK
C
C-------------------------------------------------------------------
C! Fix TPC raw data for truncated sectors by making the hit list
C  agree with the number of digitizations.
C
C  Author:   R. Johnson    3-08-89
C  Modified: R. Johnson   21-01-91  include TRIR and TRDI banks
C  Modified: W. Wiedenmann 3-02-92  include TSIR and TSDI banks
C                                      "    TANF/TWNF banks
C
C-------------------------------------------------------------------
#ifndef DOC
C
#include "tparac.h"
#include "tpgpar.h"
#include "tmonit.h"
#include "tinfjj.h"
#include "tanfjj.h"
#include "twnfjj.h"
#include "bcs.h"
C
      LOGICAL FIRST
      CHARACTER TEXT*74,NAM1*4,NAM2*4
      DATA FIRST/.TRUE./
      LOGICAL FSMART
C
#include "bmacro.h"
C
      IF (FIRST) THEN
        FIRST=.FALSE.
        NTINF=NAMIND('TINF')
        NTANF=NAMIND('TANF')
        NTWNF=NAMIND('TWNF')
      ENDIF
C
C++   section with old TINF bank
C++   --------------------------
C
      KTINF=IW(NTINF)
  121 IF (KTINF.EQ.0) GO TO 151
        LENO=IW(KTINF+JTINOL)
        IF (LENO.NE.0) THEN
          NR=IW(KTINF-2)
          IF (NR.GT.LTSECT .AND. NR.LE.2*LTSECT) THEN
            ISLOT=NR-LTSECT
            WRITE(TEXT,128) ISLOT
  128       FORMAT('Wire data for TPC sector ',I2,
     &             ' HAS BEEN TRUNCATED.&',
     &             'Some hits will be missing.')
            CALL RERROR('TTRUNK',1,TEXT)
            NWTKTM(ISLOT)=NWTKTM(ISLOT)+1
          ELSEIF (NR.GT.0 .AND. NR.LE.LTSECT) THEN
            ISLOT=NR
            WRITE(TEXT,129) ISLOT
  129       FORMAT('Pad data for TPC sector ',I2
     &             ,' HAS BEEN TRUNCATED.&'
     &             ,'Some hits will be missing.')
            CALL RERROR('TTRUNK',2,TEXT)
            NPTKTM(ISLOT)=NPTKTM(ISLOT)+1
          ENDIF
          IF (NR.LE.LTSECT .AND. NR.GT.0) THEN
            KTPAD=NLINK('TPAD',ISLOT)
            KTPDI=NLINK('TPDI',ISLOT)
C
C++         If pad digitizations are truncated, then drop all hit
C++         words with missing digitizations.
C
            IF (KTPAD.GT.0) THEN
              IF (KTPDI.EQ.0) THEN
                IND=NDROP('TPAD',ISLOT)
              ELSE
                LENTP=IW(KTPAD)
                LENDG=IW(KTPDI)*32/LTPDNB
                IOFRB=2
                NSTOT=0
  132           IF (IOFRB.GT.LENTP) GO TO 149
                  NHITR=IW(KTPAD+IOFRB)
                  DO 137 IP=1,NHITR
                    NBUCK=IBITS(IW(KTPAD+IOFRB+IP),16,8)
                    IF (NSTOT+NBUCK.GT.LENDG) THEN
                      IF (IP.EQ.1) THEN
                        LENTP=IOFRB-2
                      ELSE
                        LENTP=IOFRB+IP-1
                        IW(KTPAD+IOFRB)=IP-1
                      ENDIF
                      GO TO 138
                    ELSE
                      NSTOT=NSTOT+NBUCK
                    ENDIF
  137             CONTINUE
  138             CONTINUE
                  IOFRB=IOFRB+NHITR+2
                  GO TO 132
  149           CONTINUE
                IF (LENTP.NE.IW(KTPAD)) THEN
                  CALL AUBOS('TPAD',ISLOT,LENTP,KTPAD,IGARB)
                ENDIF
              ENDIF
            ENDIF
          ELSEIF (NR.GT.LTSECT .AND. NR.LE.2*LTSECT) THEN
C
C++         If wire digitizations are truncated, then drop all hit
C++         words with missing digitizations.
C
            KTWIR=NLINK('TWIR',ISLOT)
            KTWDI=NLINK('TWDI',ISLOT)
            IF (KTWIR.EQ.0 .OR. KTWDI.EQ.0) THEN
              KTSIR=NLINK('TSIR',ISLOT)
              KTSDI=NLINK('TSDI',ISLOT)
              IF (KTSIR.NE.0 .OR. KTSDI.NE.0) THEN
                 KTWIR=NLINK('TSIR',ISLOT)
                 KTWDI=NLINK('TSDI',ISLOT)
                 NAM1='TSIR'
                 NAM2='TSDI'
                 FSMART=.TRUE.
              ELSE
                 KTWIR=NLINK('TRIR',ISLOT)
                 KTWDI=NLINK('TRDI',ISLOT)
                 NAM1='TRIR'
                 NAM2='TRDI'
                 FSMART=.FALSE.
              ENDIF
            ELSE
              NAM1='TWIR'
              NAM2='TWDI'
            ENDIF
            IF (KTWIR.GT.0) THEN
              IF (KTWDI.EQ.0) THEN
                IND=NDROP(NAM1,ISLOT)
              ELSE
                NSTOT=0
                LENTW=IW(KTWIR)
                LENDG=IW(KTWDI)*32/LTPDNB
                DO 180 I=1,LENTW
                  IWHTL=IW(KTWIR+I)
                  IF ((NAM1.EQ.'TRIR').OR.(NAM1.EQ.'TSIR')) THEN
                    IRFLG=IBITS(IWHTL,13,1)
                    IF (NAM1.EQ.'TSIR') THEN
                       IF (IBITS(IWHTL,14,1).NE.0) IRFLG=1
                       IF (IBITS(IWHTL,15,1).NE.0) IRFLG=1
                    ENDIF
                  ELSE
                    IRFLG=0
                  ENDIF
                  IF (IRFLG.EQ.0) THEN
                    NWSMP=IBITS(IWHTL,16,8)
                    IF (NSTOT+NWSMP.GT.LENDG) THEN
                      LENTW=I-1
                      IF (LENTW.EQ.0) THEN
                        IND=NDROP(NAM1,ISLOT)
                        IND=NDROP(NAM2,ISLOT)
                      ELSE
                        CALL AUBOS(NAM1,ISLOT,LENTW,KTWIR,IGARB)
                      ENDIF
                      GO TO 181
                    ENDIF
                    NSTOT=NSTOT+NWSMP
                  ENDIF
  180           CONTINUE
  181           CONTINUE
              ENDIF
            ENDIF
          ENDIF
        ENDIF
        KTINF=IW(KTINF-1)
        GO TO 121
  151 CONTINUE
C
C
C++   section with new TANF bank
C++   --------------------------
C
      KTANF=IW(NTANF)
  221 IF (KTANF.EQ.0) GO TO 251
        LENO=IW(KTANF+JTANTW)
        IF (LENO.NE.0) THEN
          NR=IW(KTANF-2)
          ISLOT=NR
          WRITE(TEXT,229) ISLOT
  229     FORMAT('Pad data for TPC sector ',I2
     &          ,' HAS BEEN TRUNCATED.&'
     &          ,'Some hits will be missing.')
          CALL RERROR('TTRUNK',2,TEXT)
          NPTKTM(ISLOT)=NPTKTM(ISLOT)+1
            KTPAD=NLINK('TPAD',ISLOT)
            KTPDI=NLINK('TPDI',ISLOT)
C
C++         If pad digitizations are truncated, then drop all hit
C++         words with missing digitizations.
C
            IF (KTPAD.GT.0) THEN
              IF (KTPDI.EQ.0) THEN
                IND=NDROP('TPAD',ISLOT)
              ELSE
                LENTP=IW(KTPAD)
                LENDG=IW(KTPDI)*32/LTPDNB
                IOFRB=2
                NSTOT=0
  232           IF (IOFRB.GT.LENTP) GO TO 249
                  NHITR=IW(KTPAD+IOFRB)
                  DO 237 IP=1,NHITR
                    NBUCK=IBITS(IW(KTPAD+IOFRB+IP),16,8)
                    IF (NSTOT+NBUCK.GT.LENDG) THEN
                      IF (IP.EQ.1) THEN
                        LENTP=IOFRB-2
                      ELSE
                        LENTP=IOFRB+IP-1
                        IW(KTPAD+IOFRB)=IP-1
                      ENDIF
                      GO TO 238
                    ELSE
                      NSTOT=NSTOT+NBUCK
                    ENDIF
  237             CONTINUE
  238             CONTINUE
                  IOFRB=IOFRB+NHITR+2
                  GO TO 232
  249           CONTINUE
                IF (LENTP.NE.IW(KTPAD)) THEN
                  CALL AUBOS('TPAD',ISLOT,LENTP,KTPAD,IGARB)
                ENDIF
              ENDIF
            ENDIF
        ENDIF
        KTANF=IW(KTANF-1)
        GO TO 221
  251 CONTINUE
C
C
C++   section with new TWNF bank
C++   --------------------------
C
      KTWNF=IW(NTWNF)
  321 IF (KTWNF.EQ.0) GO TO 351
        LENO=IW(KTWNF+JTWNTW)
        IF (LENO.NE.0) THEN
          NR=IW(KTWNF-2)
          ISLOT=NR
          WRITE(TEXT,328) ISLOT
  328     FORMAT('Wire data for TPC sector ',I2,
     &           ' HAS BEEN TRUNCATED.&',
     &           'Some hits will be missing.')
          CALL RERROR('TTRUNK',1,TEXT)
          NWTKTM(ISLOT)=NWTKTM(ISLOT)+1
C
C++         If wire digitizations are truncated, then drop all hit
C++         words with missing digitizations.
C
            KTWIR=NLINK('TWIR',ISLOT)
            KTWDI=NLINK('TWDI',ISLOT)
            IF (KTWIR.EQ.0 .OR. KTWDI.EQ.0) THEN
              KTSIR=NLINK('TSIR',ISLOT)
              KTSDI=NLINK('TSDI',ISLOT)
              IF (KTSIR.NE.0 .OR. KTSDI.NE.0) THEN
                 KTWIR=NLINK('TSIR',ISLOT)
                 KTWDI=NLINK('TSDI',ISLOT)
                 NAM1='TSIR'
                 NAM2='TSDI'
                 FSMART=.TRUE.
              ELSE
                 KTWIR=NLINK('TRIR',ISLOT)
                 KTWDI=NLINK('TRDI',ISLOT)
                 NAM1='TRIR'
                 NAM2='TRDI'
                 FSMART=.FALSE.
              ENDIF
            ELSE
              NAM1='TWIR'
              NAM2='TWDI'
            ENDIF
            IF (KTWIR.GT.0) THEN
              IF (KTWDI.EQ.0) THEN
                IND=NDROP(NAM1,ISLOT)
              ELSE
                NSTOT=0
                LENTW=IW(KTWIR)
                LENDG=IW(KTWDI)*32/LTPDNB
                DO 380 I=1,LENTW
                  IWHTL=IW(KTWIR+I)
                  IF ((NAM1.EQ.'TRIR').OR.(NAM1.EQ.'TSIR')) THEN
                    IRFLG=IBITS(IWHTL,13,1)
                    IF (NAM1.EQ.'TSIR') THEN
                       IF (IBITS(IWHTL,14,1).NE.0) IRFLG=1
                       IF (IBITS(IWHTL,15,1).NE.0) IRFLG=1
                    ENDIF
                  ELSE
                    IRFLG=0
                  ENDIF
                  IF (IRFLG.EQ.0) THEN
                    NWSMP=IBITS(IWHTL,16,8)
                    IF (NSTOT+NWSMP.GT.LENDG) THEN
                      LENTW=I-1
                      IF (LENTW.EQ.0) THEN
                        IND=NDROP(NAM1,ISLOT)
                        IND=NDROP(NAM2,ISLOT)
                      ELSE
                        CALL AUBOS(NAM1,ISLOT,LENTW,KTWIR,IGARB)
                      ENDIF
                      GO TO 381
                    ENDIF
                    NSTOT=NSTOT+NWSMP
                  ENDIF
  380           CONTINUE
  381           CONTINUE
              ENDIF
            ENDIF
        ENDIF
        KTWNF=IW(KTWNF-1)
        GO TO 321
  351 CONTINUE
C
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK ttrunk
@


1.1.1.1
log
@import julia 300
@
text
@@
