head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.40.21;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.56;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.57;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TCPTST(IER)
C
C---------------------------------------------------------------------
C! Create bank for TPC reconstruction status
C
C  Author:  R. Johnson    20-5-91
C  Modified: W. Wiedenmann  3-2-92
C               handle new banks TE1R,TANF,TWNF,TSIR
C  Modified: G. Ganis      25-4-94
C               handle new bank TOER
C
C  Output:   IER        /I      Error code nonzero if BOS error occurs
C
C---------------------------------------------------------------------
#ifndef DOC
C
#include "te1rjj.h"
#include "tanfjj.h"
#include "twnfjj.h"
#include "terrjj.h"
#include "tinfjj.h"
#include "toerjj.h"
#include "tpgpar.h"
#include "ptstjj.h"
#include "bcs.h"
#include "tmonit.h"
C
      INTEGER TRUNC, ROERR, INVHT, FBERR, INVPT, RM
      LOGICAL FIRST,FWIR
      DATA FIRST/.TRUE./
C
C-----------------------------------------------------------------
C
#include "bmacro.h"
C
C-----------------------------------------------------------------
C
      IER=0
      IF (FIRST) THEN
        FIRST=.FALSE.
        NPTST=NAMIND('PTST')
        NTERR=NAMIND('TERR')
        NTINF=NAMIND('TINF')
        NTE1R=NAMIND('TE1R')
        NTANF=NAMIND('TANF')
        NTWNF=NAMIND('TWNF')
      ENDIF
C
C++   Create status bank for the POT.
C
      IW(1)=1
      LEN=LPTSTA*LTSECT+LMHLEN
      CALL AUBOS('PTST',0,LEN,KPTST,IGARB)
      IF (IGARB.EQ.2) THEN
        IER=1
      ELSE
        IW(KPTST+LMHCOL)=LPTSTA
        IW(KPTST+LMHROW)=LTSECT
        DO 497 I=1,LROWS(KPTST)
          IW(KROW(KPTST,I)+JPTSSP)=0
          IW(KROW(KPTST,I)+JPTSTW)=1
          IW(KROW(KPTST,I)+JPTSTP)=1
          IW(KROW(KPTST,I)+JPTSNT)=0
          IW(KROW(KPTST,I)+JPTSTE)=0
  497   CONTINUE
      ENDIF
C
C++   Keep counts of missing sectors
C
      DO 474 ISLOT=1,LTSECT
        KTPAD=NLINK('TPAD',ISLOT)
        KTSIR=NLINK('TSIR',ISLOT)
        KTRIR=NLINK('TRIR',ISLOT)
        KTWIR=NLINK('TWIR',ISLOT)
        IF (KTPAD.EQ.0 .AND.
     >      KTSIR.EQ.0 .AND. KTRIR.EQ.0 .AND. KTWIR.EQ.0) THEN
          NMISTM(ISLOT)=NMISTM(ISLOT)+1
        ELSE
          IF (KPTST.NE.0) THEN
            IW(KROW(KPTST,ISLOT)+JPTSSP)=1
          ENDIF
        ENDIF
  474 CONTINUE
C
      IF (KPTST.EQ.0) RETURN
C
C++   Keep track of DAQ errors from TERR
C
C---  This is the old TERR bank: valid up to <= 1991
      KTERR=IW(NTERR)
  500 IF (KTERR.EQ.0) GO TO 549
        IF (IW(KTERR).LT.3) THEN
          KTERR=IW(KTERR-1)
          GO TO 500
        ENDIF
        IF (IW(KTERR+LMHLEN+JTERTL).GT.0) THEN
          KTERR=IW(KTERR-1)
          GO TO 500
        ENDIF
        IADD=IW(KTERR+LMHLEN+JTERTN)
        CALL TPPADD(IADD,ISLOT,IERR)
        IF (IERR.NE.0) THEN
          KTERR=IW(KTERR-1)
          GO TO 500
        ENDIF
        IW(KROW(KPTST,ISLOT)+JPTSTE)=IW(KTERR+LMHLEN+JTERRM)
        KTERR=IW(KTERR-1)
        GO TO 500
  549 CONTINUE
C
C---  This is the new TE1R bank: valid from  >= 1992
      KTE1R=IW(NTE1R)
  560 IF (KTE1R.EQ.0) GO TO 599
        IF (IW(KTE1R).LT.3) THEN
          KTE1R=IW(KTE1R-1)
          GO TO 560
        ENDIF
        ISLOT=IW(KTE1R+LMHLEN+JTE1TN)
        IF (ISLOT.GT.LTSECT) ISLOT=ISLOT-LTSECT
        IW(KROW(KPTST,ISLOT)+JPTSTE)=IW(KTE1R+LMHLEN+JTE1RM)
        KTE1R=IW(KTE1R-1)
        GO TO 560
  599 CONTINUE
C
C---  This is the new TOER bank: valid from  >= 1994
      DO 610 ISLOT= 1, LTSECT
        KTOER= NLINK( 'TOER', ISLOT )
        IF( KTOER.EQ.0 ) GOTO 610
C---  Error occured ...
        IW(KROW(KPTST,ISLOT)+JPTSSP)= 1
C---  Get mask of truncated TPDs ...
        TRUNC= IW(KTOER+LMHLEN+JTOETM)
C---  Look for truncated PAD TPDs ...
        DO J=1,21
          IF( JBIT( TRUNC, J ).NE.0 )
     +      IW(KROW(KPTST,ISLOT)+JPTSTP)= 0
        END DO
C---  Look for truncated WIRE TPDs ...
        DO J=22,24
          IF( JBIT( TRUNC, J ).NE.0 )
     +      IW(KROW(KPTST,ISLOT)+JPTSTW)= 0
        END DO
C---  Save number of truncated bytes (=buckets in NON-read TPDs )
        IW(KROW(KPTST,ISLOT)+JPTSNT)=IW(KTOER+LMHLEN+JTOENT)
C---  Read-out mask error is the OR of remaining possible problems
        ROERR= IW(KTOER+LMHLEN+JTOERO)
        INVHT= IW(KTOER+LMHLEN+JTOEIH)
        FBERR= IW(KTOER+LMHLEN+JTOEFB)
        INVPT= IW(KTOER+LMHLEN+JTOEIP)
        RM= 0
        DO I=1,24
          IF( JBIT(ROERR,I).NE.0 ) CALL SBIT1(RM,I)
          IF( JBIT(INVHT,I).NE.0 ) CALL SBIT1(RM,I)
          IF( JBIT(FBERR,I).NE.0 ) CALL SBIT1(RM,I)
          IF( JBIT(INVPT,I).NE.0 ) CALL SBIT1(RM,I)
        END DO
        IW(KROW(KPTST,ISLOT)+JPTSTE)= RM
  610 CONTINUE
C
C
C++   Keep track of truncated data from TINF
C
C---  This is the old TINF bank: valid up to <= 1991
      KTINF=IW(NTINF)
  650 IF (KTINF.EQ.0) GO TO 660
        LENO=IW(KTINF+JTINOL)
        IF (LENO.NE.0) THEN
          NR=IW(KTINF-2)
          IF (NR.GT.LTSECT) THEN
            ISLOT=NR-LTSECT
            IW(KROW(KPTST,ISLOT)+JPTSTW)=0
          ELSE
            ISLOT=NR
            IW(KROW(KPTST,ISLOT)+JPTSTP)=0
          ENDIF
          IW(KROW(KPTST,ISLOT)+JPTSNT)=LENO-IW(KTINF+JTINEL)
        ENDIF
        KTINF=IW(KTINF-1)
        GO TO 650
  660 CONTINUE
C
C---  This is the new TANF/TWNF bank: valid from  >= 1992
      KTANF=IW(NTANF)
  670 IF (KTANF.EQ.0) GO TO 679
        LENO=IW(KTANF+JTANTW)
        IF (LENO.NE.0) THEN
          NR=IW(KTANF-2)
          ISLOT=NR
          IW(KROW(KPTST,ISLOT)+JPTSTP)=0
          IW(KROW(KPTST,ISLOT)+JPTSNT)=IW(KTANF+JTANTW)*4
        ENDIF
        KTANF=IW(KTANF-1)
        GO TO 670
  679 CONTINUE
C
      KTWNF=IW(NTWNF)
  680 IF (KTWNF.EQ.0) GO TO 689
        LENO=IW(KTWNF+JTWNTW)
        IF (LENO.NE.0) THEN
          NR=IW(KTWNF-2)
          ISLOT=NR
          IW(KROW(KPTST,ISLOT)+JPTSTW)=0
          IW(KROW(KPTST,ISLOT)+JPTSNT)=IW(KTWNF+JTWNTW)*4
        ENDIF
        KTWNF=IW(KTWNF-1)
        GO TO 680
  689 CONTINUE
C
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK tcptst
@


1.1.1.1
log
@import julia 300
@
text
@@
