head	1.4;
access;
symbols
	jul313_3:1.4
	jul313_2:1.4
	jul313_1:1.4
	jul313:1.4
	jul312_1:1.4
	jul312:1.4
	jul311:1.4
	jul310_1:1.4
	jul310:1.4
	jul309_1:1.4
	jul309:1.4
	jul308_6:1.4
	jul308_5:1.4
	jul308_4:1.4
	jul308_3:1.4
	jul308_2:1.4
	jul308_1:1.4
	jul308:1.4
	jul307_4:1.4
	jul307_3:1.4
	jul307_2:1.4
	jul307_1:1.4
	jul307:1.4
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.4
	jul304_2:1.4
	jul304_1:1.4
	jul304:1.4
	jul303_7:1.4
	jul303_6:1.4
	jul303_5:1.4
	jul303_4:1.4
	jul303_3:1.4
	jul303_2_mc1:1.4
	jul303_2:1.4
	jul303_1_mc1:1.4
	jul303_1:1.4
	jul303_v:1.4
	jul303:1.4
	jul302_6:1.4
	jul302_5:1.4
	jul302_4:1.4
	jul302_3:1.4
	jul302_2:1.4
	jul302_1:1.4
	jul302:1.4
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.03.06.09.55.12;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.40.24;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.20.09;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.57;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.58;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Tracking upgrade
@
text
@      SUBROUTINE TERPAR( PCA, ZCO, TALA, NHP, ICOR, SIGRFI, SIGZ )
C
C----------------------------------------------------------------C
C! Parameterize TPC coordinate errors after the initial fit      C
C                                                                C
C---        TPC error parametrization                            C
C           Author: T.LOHSE        7.DEC 1989                    C
C           Modified: R. Johnson  20-OCT-1990                    C
C                     To read database if necessary              C
C                     D. Casper   12-Jun-1995                    C
C                     Treat wire-corrected coordinates           C
C                     Replace TERN bank with TLCE                C
C                                                                C
C     INPUT:    PCA   Pad-crossing angle at coordinate [rad]     C
C               ZCO   Z coordinate value [cm]                    C
C               TALA  TAN(DIP ANGLE)    (global track parameter) C
C               NHP   Number of half-pads in this coordinate     C
C               ICOR  Wire correction flag                       C
C                     First two digits flag Landau corrections   C
C                     0 = neither coordinate was corrected       C
C                     1 = z coordinate (only) corrected          C
C                    10 = rphi coordinate (only) was corrected   C
C                    11 = both rphi and z coordinates corrected  C
C                     Higher digits indicate that the coordinate C
C                     has wire data in TWZZ                      C
C                ####XX = row of TWZZ bank containing wire       C
C                                                                C
C     OUTPUT:   SIGRFI   Error on R*PHI coordinate  [cm]         C
C               SIGZ     Error on Z coordinate  [cm]             C
C                                                                C
C----------------------------------------------------------------C
#ifndef DOC

#include "bcs.h"
#include "evehjj.h"
#include "tlcejj.h"
C
      INTEGER AGETDB,LRUN
      EXTERNAL AGETDB
      LOGICAL FIRST
      DATA FIRST/.TRUE./
      DATA LRUN/0/
#include "bmacro.h"
C
      IF (FIRST) THEN
        FIRST=.FALSE.
        NEVEH=NAMIND('EVEH')
        NTLCE=NAMIND('TLCE')
      ENDIF
C
C++   Default values in case something goes wrong
C
      SIGRFI= 0.02
      SIGZ= 0.12
C
C++   Get the run number
C
      KEVEH=IW(NEVEH)
      IF (KEVEH.EQ.0) THEN
        CALL RERROR('TERPAR',1,'No EVEH bank for run number'//
     +               '  TPC coordinate errors will be rubbish.')
        RETURN
      ELSE
        IRUN=IW(KEVEH+JEVERN)
      ENDIF
C
C++ Find TLCE bank
C
      KTLCE=IW(NTLCE)
      IF (KTLCE.EQ.0 .OR. IRUN.NE.LRUN) THEN
        IRET=AGETDB('TLCE',IRUN)
        IF (IRET.EQ.0)THEN
            CALL RERROR('TERPAR',2,'Cannot find TLCE bank.'//
     +               '  TPC coordinate errors will be rubbish.')
            RETURN
        ENDIF
        KTLCE=IW(NTLCE)
        LRUN = IRUN
      ENDIF
C
      LCOR = MOD(ICOR,100)
      IROWU = KROW(KTLCE,LCOR/10+1)
      IROWZ = KROW(KTLCE,MOD(LCOR,10)+1)
      ZA     = ABS ( ZCO )
      XLA    = ABS ( ATAN( TALA ) )
      TPCA   = TAN(PCA)
      SSU0   = RW(IROWU+JTLCU0)
      IF (TPCA.GT.0)THEN
        SSUA  = RW(IROWU+JTLCUR)
      ELSE
        SSUA  = RW(IROWU+JTLCUL)
      ENDIF
      SUZ1   = RW(IROWU+JTLCU1)
      SUZ2   = RW(IROWU+JTLCU2)
      SUZ3   = RW(IROWU+JTLCU3)
      SSZ0   = RW(IROWZ+JTLCZ0)
      SSZL1  = RW(IROWZ+JTLCZ1)
      SSZL2  = RW(IROWZ+JTLCZ2)
C
      SIGRFI = SQRT( SSU0**2 + (SSUA*TPCA)**2 )
      SIGRFI = SIGRFI* ( SUZ1 + SUZ2*ZA + SUZ3*ZA**2 )
      SIGZ   = SSZ0 + XLA*SSZL1 + XLA**2*SSZL2
C
C++   Special treatment for half-pad coordinates
C
      IF ( NHP .EQ. 1 ) SIGRFI = SIGRFI * RW(IROWU+JTLCE1)
      IF ( NHP .EQ. 2 ) SIGRFI = SIGRFI * RW(IROWU+JTLCE2)
C
      RETURN
      END
#endif
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d10 3
d18 9
a26 4
C               ICOR  Landau correction flag (two digits):       C
C                     x1 -> r-phi coordinate corrected           C
C                     1x -> z coordinate corrected               C
C                     (Note:  currently a dummy argument         C
d33 1
a33 1
C
a34 1
#include "ternjj.h"
d36 1
d38 2
a39 2
C
      INTEGER AGETDB
d42 2
a46 1
        NTERN=NAMIND('TERN')
d48 1
d50 3
d67 1
a67 1
C++   Get the database bank with the constants
d69 5
a73 5
      KTERN=IW(NTERN)
      IF (KTERN.EQ.0) THEN
        IRET=AGETDB('TERN',IRUN)
        IF (IRET.EQ.0) THEN
          CALL RERROR('TERPAR',2,'Cannot find the TERN bank.'//
a74 10
          RETURN
        ENDIF
        KTERN=IW(NTERN)
      ELSE
        IF (IRUN.LT.IW(KTERN+LMHLEN+JTERVR)
     &       .OR. IRUN.GT.IW(KTERN+LMHLEN+JTERVR+1)) THEN
          IRET=AGETDB('TERN',IRUN)
          IF (IRET.EQ.0) THEN
            CALL RERROR('TERPAR',2,'Cannot find the TERN bank.'//
     +                 '  TPC coordinate errors will be rubbish.')
a75 2
          ENDIF
          KTERN=IW(NTERN)
d77 2
d81 3
a83 8
      KTERN=KTERN+LMHLEN
      SU0= RW(KTERN+JTERU0)
      SUA= RW(KTERN+JTERUA)
      SUZ1= RW(KTERN+JTERU1)
      SUZ2= RW(KTERN+JTERU2)
      SUZ3= RW(KTERN+JTERU3)
      SZ0= RW(KTERN+JTERZ0)
      SZL= RW(KTERN+JTERZL)
d87 14
a100 1
      SIGRFI = SQRT( SU0**2 + (SUA*TPCA)**2 )
d102 1
a102 1
      SIGZ   = SZ0 + XLA*SZL
d106 2
a107 2
      IF ( NHP .EQ. 1 ) SIGRFI = SIGRFI * RW(KTERN+JTERE1)
      IF ( NHP .EQ. 2 ) SIGRFI = SIGRFI * RW(KTERN+JTERE2)
@


1.2
log
@julia version 279
@
text
@a0 1
*DK terpar
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
      SUBROUTINE TERPAR( PCA, ZCO, TALA, NHP, SIGRFI, SIGZ )
d16 4
@


1.1.1.1
log
@import julia 300
@
text
@@
