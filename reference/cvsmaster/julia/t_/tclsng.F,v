head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.39.41;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.51;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.52;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TCLSNG
C
C-----------------------------------------------------------------------
C! Quick cluster analysis
C!
C!    Author:    R. Johnson   04-02-88
C!    Modified:  R. Johnson   31-05-88
C!
C!    Called by TCLCOR
C!
C!    Description
C!    ===========
C!    This routine sets up the subcluster and subpulse workbanks of
C!    common TCLCOW under the assumption that the cluster consists
C!    of only a single subcluster (only one track).
C!
C!----------------------------------------------------------------------
#ifndef DOC
C
#include "tparac.h"
#include "bcs.h"
#include "tclcow.h"
#include "tcluct.h"
C
      CHARACTER TEXT*130
C
C-------------------------- Statement Function Definitions ------------
C
#include "bmacro.h"
C
C----------------------------------------------------------------------
C
C++   Make a single subcluster
C
      IW(ISCLUS+LMHROW)=1
      IW(KROW(ISCLUS,1)+JICLNS)=LROWS(ITPADW)
      IW(KROW(ISCLUS,1)+JICLOF)=0
      IW(KROW(ISCLUS,1)+JICLPN)=ITABL(ITPADW,1,JTPDPN)
      IW(KROW(ISCLUS,1)+JICLCA)=ITLCCA(JTANLM)
      IW(KROW(ISCLUS,1)+JICLTA)=ITLCTA(JTANLM)
      IF ((LROWS(ITPADW)*LENSPW+LMHLEN).GT.IW(ITSPUW)) THEN
        WRITE(TEXT,1101) LROWS(ITSPUW)
 1101   FORMAT('Extending workbank ITSPUW.',
     &         ' CURRENT LENGTH=',I3,' SUBPULSES.&',
     &         ' Increase MXSBCL in TCLCOW if this occurs',
     &         ' too often.')
        CALL RERROR('TCLSNG',1,TEXT)
        MXSP=LROWS(ITPADW)+4
        LEN= MXSP*LENSPW+LMHLEN
        IW(1)=1
        CALL WBANK(IW,ITSPUW,LEN,*998)
        IW(1)=1
        CALL WBANK(IW,ITPRTW,MXSP,*998)
      ENDIF
      IW(ITSPUW+LMHROW)=LROWS(ITPADW)
C
C++   Make a single subpulse from each pulse
C
      JCHT=0
      JSXB=0
      JSYB=0
      JSXYB=0
      JSX2B=0
      JSY2B=0
      ISAT=0
      DO 100 IP=1,LROWS(ITPADW)
        IW(ITPRTW+IP)=IP
        NOVER=0
        IPHMX=0
        IPHSM=0
        IPHZ=0
        IPHZ2=0
        I1=1
        ITOFF=ITABL(ITPADW,IP,JTPDT0)-JFSTBK-1
C
C++     For each pulse, find the initial and final threshold crossings,
C++     the peak position, and the pulse height sums.
C
        NS=ITABL(ITPADW,IP,JTPDNS)
        DO 50 IS=1,NS
          IPH=IW(ITPDIW+ITABL(ITPADW,IP,JTPDOF)+IS)
          IF (IPH.GT.IPHMX) THEN
            IPHMX=IPH
            ISMX=IS
          ENDIF
          IF (NOVER.EQ.0) THEN
            IF (IPH.GT.ITLCPT) THEN
              NOVER=NOVER+1
              I1=IS
              IPHSM=IPHSM + IPH
              JT=IS+ITOFF
              IPHZ=IPHZ + JT*IPH
              IPHZ2=IPHZ2 + JT*JT*IPH
            ENDIF
          ELSE
            IF (IPH.LE.ITLCPT .AND. NOVER.GE.ITLCML) THEN
              I2=IS-1
              GO TO 51
            ELSE
              NOVER=NOVER+1
              IPHSM=IPHSM + IPH
              JT=IS+ITOFF
              IPHZ=IPHZ + JT*IPH
              IPHZ2=IPHZ2 + JT*JT*IPH
            ENDIF
          ENDIF
   50   CONTINUE
        I2=NS
   51   CONTINUE
C
C++     Fill subpulse information into the workbank
C
        IW(KROW(ITSPUW,IP)+JSPWT0)=ITABL(ITPADW,IP,JTPDT0)+I1-1
        IW(KROW(ITSPUW,IP)+JSPWNS)=I2-I1+1
        IW(KROW(ITSPUW,IP)+JSPWOF)=ITABL(ITPADW,IP,JTPDOF)+I1-1
        IW(KROW(ITSPUW,IP)+JSPWPK)=ISMX-I1+1
        IW(KROW(ITSPUW,IP)+JSPWTC)=IPHSM
        IW(KROW(ITSPUW,IP)+JSPWSZ)=IPHZ
        IW(KROW(ITSPUW,IP)+JSPWS2)=IPHZ2
        IF (IPHMX.GE.LVLSAT) THEN
          ISAT=100000
          IW(KROW(ITSPUW,IP)+JSPWQF)=100000
        ELSE
          IW(KROW(ITSPUW,IP)+JSPWQF)=0
        ENDIF
        IW(KROW(ITSPUW,IP)+JSPWPF)=0
        IW(KROW(ITSPUW,IP)+JSPWPU)=IP
C
C++     Sums for the subcluster widths
C
        JCHT=JCHT + IPHSM
        JSXB=JSXB + IPHZ
        JSX2B=JSX2B + IPHZ2
        JSXYB=JSXYB + IP*IPHZ
        JSYB=JSYB + IP*IPHSM
        JSY2B=JSY2B + IP*IP*IPHSM
  100 CONTINUE
C
C++   Complete the calculation of the subcluster widths
C
      RCHT=FLOAT(JCHT)
      RSY2B=FLOAT(JSY2B)/RCHT
      RSYB=FLOAT(JSYB)/RCHT
      RSX2B=FLOAT(JSX2B)/RCHT
      RSXB=FLOAT(JSXB)/RCHT
      RSXYB=FLOAT(JSXYB)/RCHT
      RW(KROW(ISCLUS,1)+JICLRW)= RSY2B-RSYB**2
      RW(KROW(ISCLUS,1)+JICLZW)= RSX2B-RSXB**2
      RW(KROW(ISCLUS,1)+JICLCV)= RSXYB-RSYB*RSXB
      IW(KROW(ISCLUS,1)+JICLQF)= ISAT
      GO TO 999
  998 CONTINUE
      CALL RERROR('TCLSNG',2,'No room to extend workbank ITSPUW')
  999 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK tclsng
@


1.1.1.1
log
@import julia 300
@
text
@@
