head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.45.33;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.17;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.18;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TSACLU
C---------------------------------------------------------------
C! Find theta-phi pad clusters
C!
C!    Author:    M. Mermikides  890904
C!
C!    Description
C!    ===========
C?    1.  Use a simple clustering algorithm to find pad hits in adjacent
C?        bins of the histogram stored in the JTPHIS work bank.
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "alcons.h"
#include "tpgpar.h"
#include "tpgeom.h"
#include "tpcojj.h"
#include "tbcojj.h"
#include "tsawrk.h"
C
      LOGICAL LFRST
      SAVE NTPCO,NTBCO
C
      DATA LTPHC/4/
C
      DATA LFRST/.TRUE./
C
#include "bmacro.h"
C
      IF (LFRST) THEN
         LF RST=.FALSE.
         NTPCO=NAMIND('TPCO')
         NTBCO=NAMIND('TBCO')
      ENDIF
C
      IF( LROWS(JTHPHI).LE.1) GO TO 999
      NBTHE = IW(JTPHIS+LMHCOL)
      NBPHI = IW(JTPHIS+LMHROW)
      NCLUS = 0
C
C                      <=================== Main loop of cluster finder
    1 MXNCL = 0
C  Find most populated bin among unused entries
      DO 10 I=1, LROWS(JTHPHI)
         IF(ITABL(JTHPHI,I,4).GT.100) GO TO 10
         ITHE = ITABL(JTHPHI,I,1)
         IPHI = ITABL(JTHPHI,I,2)
         IND = KROW(JTPHIS,IPHI)+ITHE
         IF (IW(IND).GT.MXNCL) THEN
            MXNCL = IW(IND)
            IMAX = I
         ENDIF
   10 CONTINUE
C
C   If max. not found, it means that we have exhausted list.
C
      IF (MXNCL.EQ.0) GO TO 100
C
C  Look at central and adjacent histogram bins to accumulate cluster
C
      ITHE = ITABL(JTHPHI,IMAX,1)
      IPHI = ITABL(JTHPHI,IMAX,2)
      NCLUS = NCLUS + 1
C
      DO 20 IP = -1,1
         IPH = IPHI + IP
         IF (IPH.LE.0) IPH = NBPHI
         IF (IPH.GT.NBPHI) IPH = 1
         DO 30 IT = -1,1
            ITH = ITHE + IT
            IF (ITH.LE.0) ITH = NBTHE
            IF (ITH.GT.NBTHE) ITH = 1
            IND = KROW(JTPHIS,IPH)+ITH
            IF (IW(IND).LE.0) GO TO 30
C Now mark entries belonging to cluster
            DO 40 IC=1, LROWS(JTHPHI)
               IF(ITH.NE.ITABL(JTHPHI,IC,1)) GO TO 40
               IF(IPH.NE.ITABL(JTHPHI,IC,2)) GO TO 40
               IROW = ITABL(JTHPHI,IC,4)
               IW(KROW(JTHPHI,IC)+4) = NCLUS*100 + IROW
   40       CONTINUE
C Set contents of histogram bin negative so it doesn't get used again
            IW(IND) = -IW(IND)
   30    CONTINUE
   20 CONTINUE
C
      GO TO 1
C                      ==========>      Get next cluster
C
C Now sort JTHPHI in increasing cluster/padrow number
C
  100 CALL SORTIQ(IW(JTHPHI+LMHLEN+1),LCOLS(JTHPHI),LROWS(JTHPHI),4)
C
C  Fill cluster ref. bank
C
      CALL WBANK(IW,JTPHCL,LMHLEN+NCLUS*LTPHC,*800)
      IW(JTPHCL+LMHCOL) = LTPHC
      IW(JTPHCL+LMHROW) = 0
      IW(JTPHCL-3) = INTCHA('JTP3')
C  Find cluster centroid
      KTPCO = IW(NTPCO)
      KTBCO = IW(NTBCO)
      THEAV = 0.
      DPAV = 0.
      NCOOR = 0
      IOFF = 0
      ICLAS = ITABL(JTHPHI,1,4)/100
      IC = ITABL(JTHPHI,1,3)
      IF (IC.GT.0) THEN
         PHI1 = RTABL(KTPCO,IC,JTPCPH)
      ELSE
         PHI1 = RTABL(KTBCO,-IC,JTBCPH)
      ENDIF
      DO 60 I=1,LROWS(JTHPHI)
         ICLU = ITABL(JTHPHI,I,4)/100
         IC = ITABL(JTHPHI,I,3)
         IF (IC.GT.0) THEN
            PHI = RTABL(KTPCO,IC,JTPCPH)
            THE = ATAN(RTABL(KTPCO,IC,JTPCRV)/RTABL(KTPCO,IC,JTPCZV))
         ELSE
            PHI = RTABL(KTBCO,-IC,JTBCPH)
            THE = ATAN(RTABL(KTBCO,-IC,JTBCRV)/RTABL(KTBCO,-IC,JTBCZV))
         ENDIF
         IF (THE.LT.0.0) THE = THE + PI
C
C  Find mean theta, phi. Take care of wrap-around in phi by averageing
C  deviation from 1st phi position. Theta should be free from wrap-
C  around problems because of the acceptance of the TPC.
C
         IF(ICLU.EQ.ICLAS) THEN
            THEAV = THEAV + THE
            DPAV = DPAV + TRPHDI(PHI,PHI1)
            NCOOR = NCOOR + 1
         ELSE
C  Break in cluster number found
            RW(KNEXT(JTPHCL) + 1) = THEAV/FLOAT(NCOOR)
            PHIAV = DPAV/FLOAT(NCOOR) + PHI1
            IF (PHIAV.GT.TWOPI) PHIAV = PHIAV - TWOPI
            IF (PHIAV.LT.0.)    PHIAV = PHIAV + TWOPI
            RW(KNEXT(JTPHCL) + 2) = PHIAV
            IW(KNEXT(JTPHCL) + 3) = NCOOR
            IW(KNEXT(JTPHCL) + 4) = IOFF
            IW(JTPHCL + LMHROW) = IW(JTPHCL + LMHROW) + 1
            IOFF = IOFF + NCOOR
            NCOOR = 1
            PHI1 = PHI
            DPAV = 0.
            ICLAS = ICLU
            THEAV = THE
         ENDIF
C
   60 CONTINUE
C  Don't forget last cluster
      RW(KNEXT(JTPHCL) + 1) =THEAV/FLOAT(NCOOR)
      PHIAV = DPAV/FLOAT(NCOOR) + PHI1
      IF (PHIAV.GT.TWOPI) PHIAV = PHIAV - TWOPI
      IF (PHIAV.LT.0.)    PHIAV = PHIAV + TWOPI
      RW(KNEXT(JTPHCL) + 2) = PHIAV
      IW(KNEXT(JTPHCL) + 3) = NCOOR
      IW(KNEXT(JTPHCL) + 4) = IOFF
      IW(JTPHCL + LMHROW) = IW(JTPHCL + LMHROW) + 1
C
      GO TO 999
  800 CALL RERROR('TSACLU',4,'Error booking/extending work bank')
  999 RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK tsaclu
@


1.1.1.1
log
@import julia 300
@
text
@@
