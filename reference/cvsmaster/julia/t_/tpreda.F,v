head	1.5;
access;
symbols
	jul313_3:1.5
	jul313_2:1.5
	jul313_1:1.5
	jul313:1.5
	jul312_1:1.5
	jul312:1.5
	jul311:1.5
	jul310_1:1.5
	jul310:1.5
	jul309_1:1.5
	jul309:1.5
	jul308_6:1.5
	jul308_5:1.5
	jul308_4:1.5
	jul308_3:1.5
	jul308_2:1.5
	jul308_1:1.5
	jul308:1.5
	jul307_4:1.5
	jul307_3:1.5
	jul307_2:1.5
	jul307_1:1.5
	jul307:1.5
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.4
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.5
date	98.04.29.12.35.56;	author cattanem;	state Exp;
branches;
next	1.4;

1.4
date	97.10.28.16.40.48;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.43.33;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.20.26;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.11;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.12;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Mods for julia 307
@
text
@      SUBROUTINE TPREDA
C
C----------------------------------------------------------------
C! Prepare TPC data
C!
C!    Author:    R. Johnson    28-04-87
C!    Modified:  R. Johnson    21-01-91
C!    Modified:  W. Wiedenmann  3-02-92  handle TSIR,TSDI banks
C!    Modified:  W. Wiedenmann 19-05-93  call TPADFX
C!    Modified:  I. Tomalin     3-04-95  Correct T0 for bunch trains.
C!    Modified:  I. Tomalin     3-10-97  Correct 1997 T0 for problems.
C!    Modified:  M. Cattaneo   24-04-98  Force use of TWIR/TWDI in 
C!                                       run range 10000-11800
C!
C!    Description
C!    -----------
C?      1.  find pad-clusters
C?      2.  calculate coordinates
C?      3.  associate coordinates with Monte Carlo true hits
C?      4.  find wire-pulses
C!
C!---------------------------------------------------------------
#ifndef DOC
C
#include "ajobjj.h"
#include "tpgpar.h"
#include "tpccon.h"
#include "rparac.h"
#include "tparac.h"
#include "bcs.h"
#include "rcurnt.h"
#include "rflags.h"
#include "tflags.h"
#include "rlunit.h"
#include "tptime.h"
#include "tstate.h"
#include "tmonit.h"
C
      CHARACTER TEXT*100
      LOGICAL FIRST,FDROP
      LOGICAL FSMART
      CHARACTER NAM1*4,NAM2*4
      DATA FIRST/.TRUE./,FDROP/.TRUE./
C
C-----------------------------------------------------------------
C
#include "bmacro.h"
C
C-----------------------------------------------------------------
C
      IF (FIRST) THEN
        FIRST=.FALSE.
        NTPAD=NAMIND('TPAD')
        NTSIR=NAMIND('TSIR')
        NTRIR=NAMIND('TRIR')
        NTWIR=NAMIND('TWIR')
        NTPCO=NAMIND('TPCO')
        NTCLU=NAMIND('TCLU')
        NTPUL=NAMIND('TPUL')
        NTSPU=NAMIND('TSPU')
        NTSCL=NAMIND('TSCL')
        NTWRR=NAMIND('TWRR')
        NTDRP=NAMIND('TDRP')
        NTSIM=NAMIND('TSIM')
      ENDIF
C
      ICNTER(LCPRED)=ICNTER(LCPRED)+1
C
        CALL ALTIME(TIME1)
      IER=0
C
C If we are in bunch train mode, T0 needs correcting.
       CALL RQBUNC(IBUN,INBU,NWAG,IQUA)
       DO 10 I = 1,LTSECT
         IF (IBUN.GT.1) THEN
           TVOFFS(I) = TVOFS0(I) + FLOAT((IBUN - 1)*INBU)/TPCCLK
         ELSE
           TVOFFS(I) = TVOFS0(I)
         END IF
   10  CONTINUE
C
C Correct for 1997 hardware problem which shifted T0 by several ns.
C during periods of high luminosity at start of fill.
       TOFFST = TFIXT0(IRUNRC,IEVTRC)
       DO 20 I = 1,LTSECT
         TVOFFS(I) = TVOFFS(I) + TOFFST/TPCCLK
   20  CONTINUE
C
C++   Drop unwanted sectors
C
      KTDRP=IW(NTDRP)
      IF (KTDRP.NE.0) THEN
        LEN=IW(KTDRP)
        DO 472 I=1,LEN
          ISLOT=IW(KTDRP+I)
          IF (FDROP) THEN
            WRITE(LOUTRL,473) ISLOT
  473       FORMAT(' TPREDA:  dropping raw data for slot ',I2,
     &             ' as requested in user''s TDRP card.')
          ENDIF
          IND=NDROP('TPAD',ISLOT)
          IND=NDROP('TPDI',ISLOT)
          IND=NDROP('TWIR',ISLOT)
          IND=NDROP('TWDI',ISLOT)
          IND=NDROP('TRIR',ISLOT)
          IND=NDROP('TRDI',ISLOT)
          IND=NDROP('TSIR',ISLOT)
          IND=NDROP('TSDI',ISLOT)
          IND=NDROP('TISL',ISLOT)
  472   CONTINUE
        FDROP=.FALSE.
      ENDIF
C
C++   Check if any raw or simulated data are available
C
      KTSIR=IW(NTSIR)
      IF (KTSIR.NE.0) THEN
         FSMART=.TRUE.
         NAM1='TSIR'
         NAM2='TSDI'
         KTRIR=KTSIR
      ELSE
         FSMART=.FALSE.
         NAM1='TRIR'
         NAM2='TRDI'
         KTRIR=IW(NTRIR)
      ENDIF
      KTPAD=IW(NTPAD)
      KTPCO=IW(NTPCO)
      KTWIR=IW(NTWIR)
      IF (KTPAD.EQ.0 .AND. KTRIR.EQ.0 .AND. KTPCO.EQ.0
     &                                      .AND. KTWIR.EQ.0) THEN
        GO TO 999
      ENDIF
C
C++   Handle the unusual case where both reduced and unreduced wire
C++   data are available on input.
C++   In early 1991 data, force use of unreduced wire data.
C
      IF (KTWIR.NE.0 .AND. KTRIR.NE.0) THEN
        IF (FOLDWR .OR. (IRUNRC.GE.10000 .AND. IRUNRC.LE.11800) ) THEN
          CALL BDROP(IW,NAM1//NAM2)
        ELSE
          CALL BDROP(IW,'TWIRTWDI')
        ENDIF
      ENDIF
C
C++   Create the PTST status bank for the POT
C
      CALL TCPTST(IERP)
C
C++   Correct Hitlist for bug in TPP code
C
      CALL TPADFX
C
C++   Drop data from out-of-sequence sectors
C
      CALL TSEQUE
C
C++   Fix truncated raw data banks (overflow DAQ buffers)
C
      CALL TTRUNK
C
C++   Reduce the wire data if they are not already reduced by the TPP
C
      KTSIM=IW(NTSIM)
      IF (KTSIM.NE.0) THEN
C
C++     Old Monte Carlo files have reduced data in the TWIR and TWDI
C++     banks, so these banks must be renamed.
C
        CALL TWIRFX
      ENDIF
      IF (.NOT.FNOWIR) THEN
        CALL TWRRED(IER)
        CALL BLIST(IW,'T+',NAM1//NAM2)
        IF (IER.NE.0) THEN
          WRITE(TEXT,3716) IER
 3716     FORMAT('Error code ',I3,' from wire reduction.')
          CALL RERROR('TPREDA',3,TEXT(1:35))
        ENDIF
        IF (FCLEAN) CALL BDROP(IW,'TWIRTWDI')
      ENDIF
C
C++   For Monte Carlo, kill known bad pads and wires
C
      KTSIM=IW(NTSIM)
      IF (KTSIM.NE.0) CALL TPKILL
C
C++   Get the magnetic field from the HALL-probe if requested
C
      IF (MAGNET .AND. FTPC90) THEN
        ICNTER(LCMAGN)=ICNTER(LCMAGN)+1
        CALL TMAGNT(IER)
        IF (IER.NE.0) THEN
          IER=1000+IER
          GO TO 998
        ENDIF
      ENDIF
C
C++   Remove garbage hits from the TPAD bank
C
      IF (IW(NTSIM).EQ.0) CALL TFTPAD
C
C++   Reconstruct pad clusters
C
      IF (KTPAD.GT.0 .AND. .NOT.NOPADS) THEN
        CALL ALTIME(TMTP1)
        CALL TPADS(IER)
        CALL ALTIME(TMTP2)
        TPTSUM(3)=TPTSUM(3) + (TMTP2-TMTP1)
        ICNTER(LCPADS)=ICNTER(LCPADS)+1
        IF (FDEBRF .AND. JDBDRF(JULTP).GE.1) THEN
          MTCLU=0
          MTPUL=0
          MTSPU=0
          MTSCL=0
          KTCLU=IW(NTCLU)
          KTPUL=IW(NTPUL)
          KTSPU=IW(NTSPU)
          KTSCL=IW(NTSCL)
 1842     IF (KTCLU.EQ.0) GO TO 1059
            MTCLU=MTCLU+IW(KTCLU+LMHROW)
            MTPUL=MTPUL+IW(KTPUL+LMHROW)
            KTCLU=IW(KTCLU-1)
            KTPUL=IW(KTPUL-1)
            IF (KTSPU.GT.0) THEN
              MTSPU=MTSPU+IW(KTSPU+LMHROW)
              KTSPU=IW(KTSPU-1)
            ENDIF
            IF (KTSCL.GT.0) THEN
              MTSCL=MTSCL+IW(KTSCL+LMHROW)
              KTSCL=IW(KTSCL-1)
            ENDIF
            GO TO 1842
 1059     CONTINUE
          WRITE(LDEBRL,1660) IRUNRC,IEVTRC,MTPUL,MTCLU,MTSPU,MTSCL
 1660     FORMAT(' TPADS  for run ',I5,' event ',I6,' found ',I5,
     &           ' pulses, ',I5,' clusters, ',I5,' subpulses, ',
     &           I5,' subclusters')
        ENDIF
      ENDIF
      IF (FTSTAT) CALL TPSTAT
      IF (FCLEAN) CALL BDROP(IW,'TLRLTPULTPRL')
      IF (IER.NE.0) THEN
        IER=IER+2000
        GO TO 998
      ENDIF
C
C++   Get TPC coordinates for all sectors
C
      KTSCL=IW(NTSCL)
      IF (KTSCL.GT.0 .AND. .NOT.NOPADS) THEN
        CALL ALTIME(TMTC1)
        CALL TCODRV(IER)
        CALL ALTIME(TMTC2)
        TPTSUM(5)=TPTSUM(5) + (TMTC2-TMTC1)
        ICNTER(LCTPCO)=ICNTER(LCTPCO)+1
        IF (FDEBRF) THEN
          KTPCO=IW(NTPCO)
          IF (JDBDRF(JULTP).GE.1) THEN
            WRITE(LDEBRL,1956) IRUNRC,IEVTRC,IW(KTPCO+LMHROW)
 1956       FORMAT(' TCODRV for run ',I5,' event ',I6,' finds ',
     &             I4,' coordinates')
          ENDIF
          IF (JDBDRF(JULTP).GE.2) THEN
            CALL TPCODP(LDEBRL)
            CALL TBCODP(LDEBRL)
          ENDIF
        ENDIF
      ENDIF
      IF (FTSTAT) THEN
        KTPCO=IW(NTPCO)
        IF (KTPCO.GT.0) ITSTAT(LTPCTS)=ITSTAT(LTPCTS)+LROWS(KTPCO)
      ENDIF
      IF (IER.NE.0) THEN
        IER=IER+3000
        GO TO 998
      ENDIF
C
C++   Get wire pulses
C
      KTSIR=IW(NTSIR)
      IF (KTSIR.NE.0) THEN
         FSMART=.TRUE.
         NAM1='TSIR'
         NAM2='TSDI'
         KTRIR=KTSIR
      ELSE
         FSMART=.FALSE.
         NAM1='TRIR'
         NAM2='TRDI'
         KTRIR=IW(NTRIR)
      ENDIF
      IF (KTRIR.GT.0 .AND. .NOT.FNOWIR) THEN
        CALL ALTIME(TMTW1)
        CALL TWIRES(IER)
        CALL ALTIME(TMTW2)
        TPTSUM(4)=TPTSUM(4) + (TMTW2-TMTW1)
        ICNTER(LCWIRE)=ICNTER(LCWIRE)+1
        IF (FDEBRF .AND. JDBDRF(JULTP).GE.1) THEN
          MTWRR=0
          KTWRR=IW(NTWRR)
 1000     IF (KTWRR.LE.0) GO TO 1050
            MTWRR=MTWRR+LROWS(KTWRR)
            KTWRR=IW(KTWRR-1)
            GO TO 1000
 1050     CONTINUE
          WRITE(LDEBRL,1060) IRUNRC,IEVTRC,MTWRR
 1060     FORMAT(' TWIRES for run ',I5,' event ',I6,' finds ',I5,
     &           ' wire pulses')
        ENDIF
        IF (FTSTAT) THEN
          KTWRR=IW(NTWRR)
   25     IF (KTWRR.EQ.0) GO TO 26
            ITSTAT(LTWPTS)=ITSTAT(LTWPTS)+LROWS(KTWRR)
            KTWRR=IW(KTWRR-1)
            GO TO 25
   26     CONTINUE
        ENDIF
        IF (.NOT.FWIRPU) CALL BDROP(IW,NAM1//NAM2)
      ENDIF
      IF (IER.NE.0) THEN
        IER=IER+4000
        GO TO 998
      ENDIF
C
C++   Dump the clusters if requested
C
      IF (FDEBRF .AND. JDBDRF(JULTP).GE.5) CALL TCDUMP
C
      GO TO 999
C
  998 CONTINUE
      WRITE(TEXT,101) IER
      CALL RERROR('TPREDA',2,TEXT(1:88))
  101 FORMAT('ERROR RETURN=',I4,' FROM TPC PREPARE DATA.&',
     &       'Reconstruction is not complete for this event.')
  999 CONTINUE
        CALL ALTIME(TIME2)
      TPTSUM(1)=TPTSUM(1) + (TIME2-TIME1)
      RETURN
      END
#endif
@


1.4
log
@corr file 304.3
@
text
@d12 2
d138 1
d141 1
a141 1
        IF (FOLDWR) THEN
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d11 1
d79 7
@


1.2
log
@julia version 279
@
text
@a0 1
*DK tpreda
@


1.1
log
@Initial revision
@
text
@d11 1
d25 1
a38 1
      DATA FIRST/.TRUE./,FDROP/.TRUE./
d41 1
d69 10
@


1.1.1.1
log
@import julia 300
@
text
@@
