head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	96.03.12.15.42.40;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.20.17;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.20.07;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.20.08;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TPAKTX(IER)
C
C-----------------------------------------------------------------------
C! Transfer the TEXS,T2XS,TPXS banks to the PTEX,PT2X,PTPX banks
C!
C!    Author:   R. Johnson  16-06-88
C!    Modified: R. Johnson  21-01-91 add flag to the PTEX bank
C!              D. Casper   04-11-95 add pad dE/dx banks
C!
C!    Output:   IER       /I    Error return=0 if operation successful
C!
C!    Called by TJTOP
C!
C-----------------------------------------------------------------------
#ifndef DOC
C
#include "bcs.h"
#include "ptexjj.h"
#include "texsjj.h"
#include "ptunjj.h"
#include "t2xsjj.h"
#include "pt2xjj.h"
#include "tpxsjj.h"
#include "ptpxjj.h"
C
      LOGICAL FIRST
      DATA FIRST/.TRUE./
C
#include "bmacro.h"
C
      IF (FIRST) THEN
        FIRST=.FALSE.
        NTEXS=NAMIND('TEXS')
        NPTEX=NAMIND('PTEX')
        NT2XS=NAMIND('T2XS')
        NPT2X=NAMIND('PT2X')
        NPTUN=NAMIND('PTUN')
        NTPXS=NAMIND('TPXS')
        NPTPX=NAMIND('PTPX')
      ENDIF
C
      KTEXS=IW(NTEXS)
      IF (KTEXS.EQ.0) THEN
        IER=1
        GO TO 999
      ENDIF
      KPTUN=IW(NPTUN)
      IF (KPTUN.EQ.0) THEN
        IER=2
        GO TO 999
      ENDIF
      KT2XS = IW(NT2XS)
C
      IF (IW(NPTEX).NE.0) CALL BDROP(IW,'PTEX')
      LEN=LPTEXA*LROWS(KTEXS)+LMHLEN
      IW(1)=1
      CALL AUBOS('PTEX',0,LEN,KPTEX,IGARB)
      IF (IGARB.EQ.2) THEN
        IER=3
        GO TO 999
      ENDIF
      IW(KPTEX+LMHCOL)=LPTEXA
      IW(KPTEX+LMHROW)=LROWS(KTEXS)
      KTEXS=IW(NTEXS)
      KPTUN=IW(NPTUN)+LMHLEN
      DO 500 I=1,LROWS(KTEXS)
        IW(KROW(KPTEX,I)+JPTESL)=ITABL(KTEXS,I,JTEXSI)
        IW(KROW(KPTEX,I)+JPTETM)=
     &             INT(RTABL(KTEXS,I,JTEXTM)/RW(KPTUN+JPTUTM))
        IW(KROW(KPTEX,I)+JPTEUL)=
     &             INT(RTABL(KTEXS,I,JTEXTL)/RW(KPTUN+JPTUTL))
        IW(KROW(KPTEX,I)+JPTENS)=ITABL(KTEXS,I,JTEXNS)
        IW(KROW(KPTEX,I)+JPTEAD)=
     &             INT(RTABL(KTEXS,I,JTEXAD)/RW(KPTUN+JPTUAD))
        IW(KROW(KPTEX,I)+JPTETN)=ITABL(KTEXS,I,JTEXTN)
        IW(KROW(KPTEX,I)+JPTESF)=ITABL(KTEXS,I,JTEXSF)
  500 CONTINUE
      IER=0
C
      IF (IW(NPT2X).NE.0) CALL BDROP(IW,'PT2X')
      IF (KT2XS.EQ.0) THEN
        IER = 1
        GOTO 999
      ENDIF
      LEN = LPT2XA*LROWS(KT2XS)+LMHLEN
      IW(1) = 1
      CALL AUBOS('PT2X',0,LEN,KPT2X,IGARB)
      IF (IGARB.EQ.2) THEN
        IER = 3
        GOTO 999
      ENDIF
      IW(KPT2X+LMHCOL)=LPT2XA
      IW(KPT2X+LMHROW)=LROWS(KT2XS)
      KT2XS=IW(NT2XS)
      KPTUN=IW(NPTUN)+LMHLEN
      DO 501 I=1,LROWS(KT2XS)
        IW(KROW(KPT2X,I)+JPT2SL)=ITABL(KT2XS,I,JT2XSI)
        IW(KROW(KPT2X,I)+JPT2TM)=
     &             INT(RTABL(KT2XS,I,JT2XTM)/RW(KPTUN+JPTUTM))
        IW(KROW(KPT2X,I)+JPT2UL)=
     &             INT(RTABL(KT2XS,I,JT2XTL)/RW(KPTUN+JPTUTL))
        IW(KROW(KPT2X,I)+JPT2NS)=ITABL(KT2XS,I,JT2XNS)
        IW(KROW(KPT2X,I)+JPT2AD)=
     &             INT(RTABL(KT2XS,I,JT2XAD)/RW(KPTUN+JPTUAD))
        IW(KROW(KPT2X,I)+JPT2T1)=ITABL(KT2XS,I,JT2XT1)
        IW(KROW(KPT2X,I)+JPT2T2)=ITABL(KT2XS,I,JT2XT2)
  501 CONTINUE
      IER = 0
C
      KTPXS=IW(NTPXS)
      IF (KTPXS.EQ.0) THEN
        IER=1
        GO TO 999
      ENDIF
      KPTUN=IW(NPTUN)
      IF (KPTUN.EQ.0) THEN
        IER=2
        GO TO 999
      ENDIF
C
      IF (IW(NPTPX).NE.0) CALL BDROP(IW,'PTPX')
      LEN=LPTPXA*LROWS(KTPXS)+LMHLEN
      IW(1)=1
      CALL AUBOS('PTPX',0,LEN,KPTPX,IGARB)
      IF (IGARB.EQ.2) THEN
        IER=3
        GO TO 999
      ENDIF
      IW(KPTPX+LMHCOL)=LPTPXA
      IW(KPTPX+LMHROW)=LROWS(KTPXS)
      KTPXS=IW(NTPXS)
      KPTUN=IW(NPTUN)+LMHLEN
      DO 502 I=1,LROWS(KTPXS)
        IW(KROW(KPTPX,I)+JPTPSL)=ITABL(KTPXS,I,JTPXSI)
        IW(KROW(KPTPX,I)+JPTPTM)=
     &             INT(RTABL(KTPXS,I,JTPXTM)/RW(KPTUN+JPTUTM))
        IW(KROW(KPTPX,I)+JPTPUL)=
     &             INT(RTABL(KTPXS,I,JTPXTL)/RW(KPTUN+JPTUTL))
        IW(KROW(KPTPX,I)+JPTPNS)=INT(100.*RTABL(KTPXS,I,JTPXNS))
        IW(KROW(KPTPX,I)+JPTPAD)=
     &             INT(RTABL(KTPXS,I,JTPXAD)/RW(KPTUN+JPTUAD))
        IW(KROW(KPTPX,I)+JPTPTN)=ITABL(KTPXS,I,JTPXTN)
  502 CONTINUE
      IER=0
  999 CONTINUE
      RETURN
      END
#endif
@


1.2
log
@julia version 279
@
text
@a0 1
*DK tpaktx
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
C! Transfer the TEXS,T2XS banks to the PTEX,PT2X bank
d9 1
d24 2
d39 2
d111 35
@


1.1.1.1
log
@import julia 300
@
text
@@
