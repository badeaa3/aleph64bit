head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.39.05;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.48;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.49;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE TATWIN(NBADC,ICBAD,ITPCO,RTPCO,ICH1,ICH2)
C
C----------------------------------------------------------------------
C! Add twin coordinates to track candidates
C
C  Author:  R. Johnson   10-09-89
C
C  Input:   NBADC           /I      Number of bad coordinates
C           ICBAD( )        /I      List of bad coordinates
C           ITPCO( ,2)      /I      The two coordinates
C           RTPCO( ,2)      /R      Same as ITPCO
C           ICH(2)          /I      Pointers to the two chains
C  Output:  ITPCO( ,2)      /I      Add reference to the tracks
C
C?
C!======================================================================
#ifndef DOC
C
#include "tpgpar.h"
#include "tpcojj.h"
#include "tchajj.h"
#include "tcaljj.h"
#include "alcons.h"
#include "bcs.h"
C
      DIMENSION ICBAD(NBADC),ITPCO(LTPCOA,*),RTPCO(LTPCOA,*),ICH(2)
      DIMENSION LIST(LTPDRO),VV0(5),EE0(5),HP(5,2)
      DIMENSION S(2),PHIP(2),ZP(2),PHCH(2),ITKCH(2),ICCH(2)
      DIMENSION RS1CH(2),RS2CH(2),IOTHR(2)
      LOGICAL FIRST
      DATA FIRST/.TRUE./,IOTHR/2,1/
      DATA RSIGMX/16./     !r*phi window in sigma**2 for coordinates
C
#include "bmacro.h"
C
      IF (FIRST) THEN
        FIRST=.FALSE.
        NTCHA=NAMIND('TCHA')
        NTCTC=NAMIND('TCTC')
        NTPCO=NAMIND('TPCO')
        NTCAL=NAMIND('TCAL')
        NTTCC=NAMIND('TTCC')
      ENDIF
      KTCHA=IW(NTCHA)
      KTCTC=IW(NTCTC)
      KTPCO=IW(NTPCO)
      IF (KTCHA.EQ.0 .OR. KTCTC.EQ.0 .OR. KTPCO.EQ.0) THEN
        CALL RERROR('TATWIN',1,'Missing TCHA, TCTC, or TPCO on input')
        GO TO 999
      ENDIF
      KTCAL=IW(NTCAL)
      KTTCC=IW(NTTCC)
      IF (KTCAL.EQ.0 .OR. KTTCC.EQ.0) THEN
        CALL RERROR('TATWIN',2,'Missing TCAL or TTCC on input')
        GO TO 999
      ENDIF
C
C++   Refit the chains if any points were removed
C
      ICH(1)=ICH1
      ICH(2)=ICH2
      DO 100 K=1,2
        ITKCH(K)=0
C
C++     Figure out which track candidate this chain is on.  If the
C++     chain is not on the first loop of a track, ignore it.
C
        IOFF=KTCTC+LMHLEN+ITABL(KTCHA,ICH(K),JTCHOF)
        DO 31 II=1,ITABL(KTCHA,ICH(K),JTCHNC)
          IC=IW(IOFF+II)
          ITK=ITABL(KTPCO,IC,JTPCTN)
          IF (ITK.GT.0) GO TO 32
   31   CONTINUE
C
C++     This chain is not on first loop of a candidate.  Skip it.
C
        GO TO 100
   32   CONTINUE
C
C++     Build a list of remaining hits for this track
C
        NFT=0
        IOFF=KTTCC+LMHLEN+ITABL(KTCAL,ITK,JTCAIO)
        DO 60 II=1,ITABL(KTCAL,ITK,JTCANF)
          IC=IW(IOFF+II)
          DO 40 I=1,NBADC
            IF (IC.EQ.ICBAD(I)) GO TO 60
   40     CONTINUE
          NFT=NFT+1
          LIST(NFT)=IC
   60   CONTINUE
        IF (NFT.LT.3) THEN
          CALL RERROR('TATWIN',1,'Not enough good coordinates'//
     &                ' left to refit track.')
          GO TO 100
        ENDIF
C
C++     Fast helix fit without error matrix, in case coordinates were
C++     dropped since the chain was fit.
C
        IF (NFT.EQ.ITABL(KTCAL,ITK,JTCANF)
     &          .AND. NFT.EQ.ITABL(KTCHA,ICH(K),JTCHNC)) THEN
          VV0(1)=RTABL(KTCHA,ICH(K),JTCHIR)
          VV0(2)=RTABL(KTCHA,ICH(K),JTCHTL)
          VV0(3)=RTABL(KTCHA,ICH(K),JTCHP0)
          VV0(4)=RTABL(KTCHA,ICH(K),JTCHD0)
          VV0(5)=RTABL(KTCHA,ICH(K),JTCHZ0)
        ELSE
          CALL TFTHEL('TPCO',NFT,LIST,1,VV0,EE0,CHI2)
        ENDIF
C
C++     Convert helix parameters to the standard convention
C
        HP(1,K)=-VV0(1)
        HP(2,K)= VV0(2)
        HP(3,K)= VV0(3)
        HP(4,K)= SIGN(1.0,HP(1,K))*VV0(4)
        HP(5,K)= VV0(5)
C
C++     Find intersection with radius of the coordinates
C
        RAD=RTPCO(JTPCRV,1)
        CALL THLCIR(HP(1,K),RAD,S,PHIP,ZP,IER)
        IF (IER.NE.0) GO TO 100
C
C++     Find the closest coordinate in r*phi
C
        RSMN=9.9E20
        RSMX=-1.
        DO 80 I=1,2
          DPHI=PHIP(1)-RTPCO(JTPCPH,I)
          IF (DPHI.LT.-PI) THEN
            DPHI=DPHI+TWOPI
          ELSEIF (DPHI.GT.PI) THEN
            DPHI=DPHI-TWOPI
          ENDIF
          DRPHI=DPHI*RAD
          RSIG=DRPHI**2/RTPCO(JTPCSR,I)
          IF (RSIG.GT.RSMX) THEN
            RSMX=RSIG
          ENDIF
          IF (RSIG.LT.RSMN) THEN
            RSMN=RSIG
            ICBST=I
          ENDIF
   80   CONTINUE
        IF (ABS(RSMN).GT.RSIGMX) GO TO 100
C
        PHCH(K)=PHIP(1)
        ITKCH(K)=ITK
        ICCH(K)=ICBST
        RS1CH(K)=RSMN
        RS2CH(K)=RSMX
  100 CONTINUE
C
C++   Try to associate these new coordinates with the two chains
C
      IF (ITKCH(1).EQ.0 .AND. ITKCH(2).EQ.0) GO TO 999
C
      IF (ITKCH(1).EQ.0 .AND. ITKCH(2).NE.0) THEN
        ITPCO(JTPCTN,ICCH(2))=ITKCH(2)
      ELSEIF (ITKCH(1).NE.0 .AND. ITKCH(2).EQ.0) THEN
        ITPCO(JTPCTN,ICCH(1))=ITKCH(1)
      ELSEIF (ICCH(1).NE.ICCH(2)) THEN
        ITPCO(JTPCTN,ICCH(1))=ITKCH(1)
        ITPCO(JTPCTN,ICCH(2))=ITKCH(2)
      ELSE
C
C++     Both tracks want the same coordinate.  Give it to the
C++     one which is closer.
C
        IF (RS1CH(1).LT.RS1CH(2)) THEN
          ITPCO(JTPCTN,ICCH(1))=ITKCH(1)
          IF (ABS(RS2CH(2)).LT.RSIGMX) THEN
            ITPCO(JTPCTN,IOTHR(ICCH(1)))=ITKCH(2)
          ENDIF
        ELSE
          ITPCO(JTPCTN,ICCH(2))=ITKCH(2)
          IF (ABS(RS2CH(1)).LT.RSIGMX) THEN
            ITPCO(JTPCTN,IOTHR(ICCH(2)))=ITKCH(1)
          ENDIF
        ENDIF
      ENDIF
  999 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK tatwin
@


1.1.1.1
log
@import julia 300
@
text
@@
