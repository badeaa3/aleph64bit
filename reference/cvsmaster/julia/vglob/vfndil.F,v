head	1.1;
access;
symbols
	jul313_3:1.1
	jul313_2:1.1
	jul313_1:1.1
	jul313:1.1
	jul312_1:1.1
	jul312:1.1
	jul311:1.1
	jul310_1:1.1
	jul310:1.1
	jul309_1:1.1
	jul309:1.1
	jul308_6:1.1
	jul308_5:1.1
	jul308_4:1.1
	jul308_3:1.1
	jul308_2:1.1
	jul308_1:1.1
	jul308:1.1
	jul307_4:1.1
	jul307_3:1.1
	jul307_2:1.1
	jul307_1:1.1
	jul307:1.1
	jul306_3:1.1
	jul306_2:1.1
	jul306_1:1.1
	jul306:1.1
	jul305_4:1.1
	jul305_3:1.1
	jul305_2:1.1
	jul305_1:1.1
	jul305:1.1
	jul304_3:1.1
	jul304_2:1.1
	jul304_1:1.1
	jul304:1.1
	jul303_7:1.1
	jul303_6:1.1
	jul303_5:1.1
	jul303_4:1.1
	jul303_3:1.1
	jul303_2_mc1:1.1
	jul303_2:1.1
	jul303_1_mc1:1.1
	jul303_1:1.1
	jul303:1.1
	jul303_v:1.1;
locks; strict;
comment	@c @;


1.1
date	97.05.15.15.45.28;	author cattanem;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Add vglob
@
text
@      SUBROUTINE VFNDIL( IND, VAL, LOC)
C ---------------------------------------------------------------------
C! Find VAL in the list IND and return its index
CKEY VGLOB
C      Paul Rensing   - 2-11-94
C
C VFNDIL expects IND to point to a BOS bank. It searches the bank for
C     value VAL in the first column and returns the row number. It
C     returns -1 if VAL is not found.
C
C  INPUT:
C    INTEGER VAL     - value to find
C    INTEGER IND     - BOS index of bank
C  
C OUTPUT:
C    INTEGER LOC     - index (row) of VAL in the bank
C ------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
C
C Parameters
C
      INTEGER VAL, LOC
      INTEGER IND
C
C  Global includes
C
#include "bcs.h"
C
      INTEGER I
C
#include "bmacrod.h"
#include "bmacro.h"
C
      LOC = -1
      DO I = 1, LROWS(IND)
         IF (ITABL(IND,I,1) .EQ. VAL) THEN
            LOC = I
            RETURN
         END IF
      END DO
C
      RETURN
      END
#endif
@
