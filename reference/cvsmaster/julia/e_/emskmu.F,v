head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.56.53;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.00;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.01;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE EMSKMU( NETP1, EXTRAP, EMIP, IMUON)
C=======================================================================
C! Calculates expected energy lost by muons in Ecal and Hcal
C-
C-    Authors : M.N. Minard , M. Pepe       26/02/89
C-
C- If muon is identified, calculates energy to be removed (EMIP)
C- in the three ECAL stacks and in HCAL else EMIP = 0
C- Input : NETP1       Track index
C-         EXTRAP      Extrapolation point in the 5 stacks
C- OUTPUT: EMIP(1-5)   Expected energy lost by the muon in the 5 stacks
C-         IMUON  = 1  Muon candidate found
C                   0  Not a muon candidate
C?
C!======================================================================
#ifndef DOC
#include "hsdajj.h"
#include "eminic.h"
#include "etp1jj.h"
#include "emskex.h"
#include "hmadjj.h"
#include "mcadjj.h"
#include "trexjj.h"
#include "alcons.h"
#include "bcs.h"
      EXTERNAL NAMIND
      DIMENSION EXTRAP(3,5), EPOIN(3), EMIP(5)
      EXTERNAL EFNDSC
      INTEGER EFNDSC
      PARAMETER ( NPLEC=22, NPLBAR=23, NPLFR=12 )
C
C- Angular dependance of energy lost by a muon parametrized
C- as EMIP(5) = EMUON +SLOPE*ABS(TAN(THNOR)) where THNOR
C- is the angle between track and normal to wire
C
      DATA NAMCAD /0/
#include "bmacro.h"
C
C
C
      IF (NAMCAD.EQ.0) THEN
        NAMCAD = NAMIND ('MCAD')
        NAHMAD = NAMIND ('HMAD')
        NAETP1 = NAMIND ('ETP1')
      ENDIF
C
      KETP1 = IW(NAETP1)
C
      CALL VZERO(EMIP,5)
      IMUON = 0
      IFLMCA = 0
      IFLHMA = 0
      ISEX = 0
      ENDEP = 0.
      NPLAN = 0
C
      KMCAD = IW(NAMCAD)
      IF ( KMCAD.LE.0) THEN
        GO TO 100
      ENDIF
C
      NTRACK = LROWS(KMCAD)
C
C
C- track loop
C
      DO 50 IT = 1,NTRACK
C
        JMCAD = KROW(KMCAD,IT)
        ITRACK = IW(JMCAD+JMCATN)
C
C- check whether track has been associated to muon chambers
C
        IF(ITRACK.NE.NETP1) GO TO 50
C
C- association has taken place
C
        IFLMCA = 1
        GO TO 100
C
   50 CONTINUE
C
C- examine here HMAD bank
C
C
  100 CONTINUE
C
      KHMAD = IW (NAHMAD)
      IF ( KHMAD.LE.0) THEN
        GO TO 200
      ENDIF
      NTRACK = LROWS(KHMAD)
C
C
C- track loop
C
      DO 150 IT = 1,NTRACK
C
        JHMAD = KROW(KHMAD,IT)
        ITRACK = IW(JHMAD+JHMATN)
C
C- check whether track has been identified in HCAL
C
        IF(ITRACK.NE.NETP1) GO TO 150
        IF(IW(JHMAD+JHMAIF).NE.1) GO TO 150
        NPLAN = IW(JHMAD+JHMANF)
        ENDEP = RW(JHMAD+JHMAED)
        ENDPL = ENDEP/NPLAN
C
C- association has taken place
C
        IFLHMA = 1
        GO TO 200
C
  150 CONTINUE
  200 CONTINUE
C
C- "or" information from HMAD and MCAD
      IF(IFLMCA.EQ.0.AND.IFLHMA.EQ.0) RETURN
C
C-     Set Muon Flag
C
      IMUON = 1
C
C- get incidence angle of muon from TREX bank
C
      JTREX = NLINK('TREX',NETP1)
      IF(JTREX.EQ.0) THEN
        CALL RERROR ('EMSKMU',1,'TREX bank not found')
        GO TO 1000
      ENDIF
C
      NVETT=LROWS(JTREX)
C
      DO 300 N=1,NVETT
C
        MEDIUM = ITABL(JTREX,N,JTRERG)
        IF(MEDIUM.LT.3000) GO TO 300
C- we are in HCAL
C
C- as there is a difference between barrel and end-cap modules
C- first find which subcomponent we are in
C
        KSC = MEDIUM*.01 - 30
C
        IF(KSC.NE.1.AND.KSC.NE.3.AND.KSC.NE.4) GO TO 300
C
C- we are in end-cap or barrel
C
        X = RTABL(JTREX,N,JTREX3)
        Y = RTABL(JTREX,N,JTREX3+1)
        Z = RTABL(JTREX,N,JTREX3+2)
        PX = RTABL(JTREX,N,JTREP3)
        PY = RTABL(JTREX,N,JTREP3+1)
        PZ = RTABL(JTREX,N,JTREP3+2)
        PTOT = SQRT(PX**2+PY**2+PZ**2)
C
C- angle of incidence
C
        IF(PTOT.LE.0.) THEN
          CALL RERROR ('EMSKMU',2,' Momentum from TREX is zero')
          GO TO 1000
        ENDIF
C
        COSTHE = PZ/PTOT
C- phi angle
        IF(X.EQ.0.) THEN
          CALL RERROR ('EMSKMU',3,'X of extrapol. is zero in TREX')
          GO TO 1000
        ENDIF
        PHI = ATAN2(Y,X)
        IF(PHI.LT.0.) PHI =  PHI  + TWOPI
        IF(PHI.GT.TWOPI) PHI = PHI - TWOPI
        PHIDG = PHI*RADEG
        NPLTOT = NPLBAR
C
        IF(KSC.EQ.3 .OR. KSC.EQ.4) THEN
C
C- we are in the end-cap
C
          NPLTOT = NPLEC
          COSTHE  = PX/PTOT
C
C- isex=1 in the endcap sextants with tubes inclined at 60 degrees
C
          IF(PHI.GT.PIBY3.AND.PHI.LT.2.*PIBY3) ISEX=1
          IF(PHI.GT.4.*PIBY3.AND.PHI.LT.5.*PIBY3) ISEX=1
C
          IF(ISEX.EQ.1) THEN
C
C- end-cap A
            COSTHE = (PX*COS(PIBY3)+PY*SIN(PIBY3))/PTOT
C
            IF(Z.LT.0.) THEN
C- end-cap B
              COSTHE = (-PX*COS(PIBY3)+PY*SIN(PIBY3))/PTOT
            ENDIF
          ENDIF
C
        ENDIF
C
        IF(ABS(COSTHE).GT.1.) COSTHE = SIGN(1.,COSTHE)
        THE = ACOS(COSTHE)
        IF(THE.LT.PIBY2) THEN
          THNOR = PIBY2 - THE
        ELSE
          THNOR = THE - PIBY2
        ENDIF
C
C- expected energy loss in HCAL
C
        THEDG = THNOR*RADEG
        XX = ABS(TAN(THNOR))
        ENGY    =  EMUON + SLOPE * XX
        EMIP(4) =  ENGY
        EMIP(5) =  ENGY - EMIP(4)
C
C
        IF(IFLHMA.GT.0) THEN
          EMIP(4) = EMIP(4) * FLOAT(NPLAN)/FLOAT(NPLTOT)
          EMIP(5) = EMIP(5) * FLOAT(NPLAN)/FLOAT(NPLTOT)
        ENDIF
C
        GO TO 500
C
  300 CONTINUE
C
C
  500 CONTINUE
C
C
C- Now calculate expected energy in ECAL
C
      JETP1 = KROW ( KETP1 , NETP1 )
      PMOM  = RW(JETP1+JETPPT)
      DO 800 I =1,3
        EPOIN(1) = EXTRAP(1,I)
        EPOIN(2) = EXTRAP(2,I)
        EPOIN(3) = EXTRAP(3,I)
        IF(EPOIN(1).EQ.0.) GO TO 800
        PHIECA = ATAN2(EPOIN(2),EPOIN(1))
        R = SQRT(EPOIN(1)**2+EPOIN(2)**2+EPOIN(3)**2)
        THEECA = ACOS(EPOIN(3)/R)
C
        KSC = EFNDSC(EPOIN)
        IF(KSC.EQ.0) THEN
          GO TO 1000
        ENDIF
        IF(KSC.EQ.2) THEN
C- we are in the ECAL barrel
          IF(PHIECA.LT.0.) PHIECA =  PHIECA  + TWOPI
          IF(PHIECA.GT.TWOPI) PHIECA = PHIECA - TWOPI
          PHIDIS = PHIECA - TILT
          PHIOFF = AMOD(PHIDIS,PIBY6)
          PHICOR = ABS(PHIOFF - PIBY12)
          THECOR = ABS(PIBY2 - THEECA)
        ELSE
C- we are in the ECAL end-cap
          PHICOR = 0.
          THECOR = THEECA
        ENDIF
C
        EMIP(I) = ABS(ENFMIP(I)/(COS(THECOR)*COS(PHICOR)))
        EMIP(I) = EMIP(I)*FUDGE(I)
C- correct the standard MIP energies for the small energy dependence
        IF(PMOM.LT.45.) THEN
          EMIP(I) = EMIP(I) - EXP(-(ENDPA(I,1)+ENDPA(I,2)*PMOM))
        ENDIF
  800 CONTINUE
C
 1000 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK emskmu
@


1.1.1.1
log
@import julia 300
@
text
@@
