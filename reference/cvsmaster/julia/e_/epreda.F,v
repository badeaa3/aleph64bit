head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	96.03.12.14.57.26;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.16.22;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.02;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.03;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE EPREDA
C***********************************************************************
C! PREPARE ECAL DATA
C!     INPUT: 'ETDI','ECMC'
C!     OUPUT: 'ESDA'
C!     CREATED : 'ESDA'
C!     FUNCTIONAL DESCRIPTION:
C!             CLEAN UP LAST EVENT BANKS
C!             TRANSFORM STOREY BANK ,Insert online corrections
C!
C***********************************************************************
#ifndef DOC
C      EXTERNAL IBITS
      INTEGER NMOD1(36) , NMOD2(36) ,NMOD3(36)
      INTEGER NCL1(36) , NCL2(36) , NAUTO(36)
      INTEGER NAUTOW ( 36 )
       DIMENSION PLACO(36)
#include "bcs.h"
#include "rcurnt.h"
#include "rlunit.h"
#include "rmonco.h"
      INTEGER IRUN94
      PARAMETER ( IRUN94 = 25000 )
#include "rparac.h"
#include "rflags.h"
#include "ecnamc.h"
#include "esdajj.h"
#include "ecmcjj.h"
#include "egnrec.h"
#include "bmacro.h"
C
      CALL VZERO (NMOD1 , 36)
      CALL VZERO (NMOD2 , 36)
      CALL VZERO (NMOD3 , 36)
      CALL VZERO (NCL1 , 36)
      CALL VZERO (NCL2 , 36)
      CALL VZERO (NAUTO , 36)
      CALL VZERO ( NAUTOW , 36 )
C
C-    In case of raw data from run range 1994 (<25854)
C     swap gain map of endcap A
C
      CALL ECSW94
C
C-    In case of reprocessing rebuilt EWDI bank
C
      CALL ECERAS
C
C     Analyse Ecal read-out status
C
      CALL EFERRR(NAUTO)
C
C-    call to fix ETDI swapping in end-cap for runs 22793 - 22880
C
C
      CALL ECSW1093
C
C     count number of ECAL storeys before cleaning
C
      CALL ESCOUN(N1,NMOD1)
      NESTOR=N1
C
C   Correct corrupted data for known bugs
C   and apply absolute calibration per module on Pad and Wire Energies
C  - pad problems  EPADCL
C  - wire problems EWIRCL
      CALL ERCUPR
C
      CALL ESWPST
C
      CALL EPADCL
C
C    count number of ECAL storeys AFTER cleaning on pads
C
      CALL ESCOUN(N2,NMOD2)
      DO 30 I = 1, 36
          NCL1(I) = NMOD1(I) - NMOD2(I)
 30   CONTINUE
      NSUPEB=N2-N1
C
C
C
C-    Clean noisy amplificators
C
      CALL ECLAMP
C
C-    Cleaning from wires
C
      CALL EWIRCL
C  Prepare wire bank PEWI
      CALL ECFILS
C  remove more pad data below wire module threshold if required
      IF(IW(NAMIND('EWTH')).NE.0) CALL ETHRES
C
C    count number of ECAL storeys AFTER cleaning based on wire threshold
C
      CALL ESCOUN(N3,NMOD3)
      DO 32 I = 1, 36
          NCL2(I) = NMOD2(I) - NMOD3(I)
 32   CONTINUE
C*
C*    For 1994 data onwards fill the array NAUTO and NAUTOW from the
C*    NEW AUTOPEDS banks EHWI and EHPA. Unpack these in new routine
C*    EAUTOP.
      IF ( IRUNRC .GT. IRUN94 ) THEN
          CALL EAUTOP ( NAUTO , NAUTOW )
      END IF
C?
C?    Pack Run Quality info into ECRQ bank
C?
      CALL ECRUNQ ( NCL1 , NCL2 , NAUTO )
      NSUPEC=N2-N3
C?
C?         READ RAW MC_DATA
C?
      CALL BLIST(IW,'E+','ESDA')
      CALL BLIST(IW,'E+','ECLU')
C
      KETDI  = IW(NAETDI)
C? To build banks of zero length in case of no Ecal data
      IF (KETDI.EQ.0) THEN
      CALL AUBOS('ESDA',0,LMHLEN,KESDA,IGARB)
      IF (IGARB.EQ.2) GOTO 999
      IW(KESDA + LMHCOL) = LESDAA
      IW(KESDA + LMHROW) = 0
      GOTO 900
      ENDIF
      LETDIA = IW(KETDI + LMHCOL )
      NTOW   = IW(KETDI + LMHROW )
C? Verify on line bank consistency
      IF (IW(KETDI) .NE. LETDIA*NTOW+2) GOTO 990
      KETDI  = KETDI + LMHLEN
C?
C?    CREATE BANK ESDA
C?
      ND  = LESDAA*NTOW*3 + LMHLEN
      CALL AUBOS('ESDA',0,ND,KESDA,IGARB)
      IF (IGARB.EQ.2) GOTO 999
C? RECOMPUTE POINTER ETDI IN CASE OF GARBAGE COLLECTION
      KETDI = IW(NAETDI) + LMHLEN
      IW(KESDA + LMHCOL) = LESDAA
      IW(KESDA + LMHROW) = NTOW*3
      KESDA       = KESDA + LMHLEN
C? Get On_Line Calibrations
C? if ESCA present ,bank ECMC is read
C? If run number lower than 6000 (1989 data),
C?        do not apply platines corections
C
       IF (IW(NAMIND('ESCA')).EQ.0 .OR. IW(NAMIND('ECMC')).EQ.0.
     +  OR.IRUNRC.LT.6000) THEN
       DO 50 I=1,36
 50       PLACO(I)=1.
                        ELSE
      KECMC=IW(NAMIND('ECMC'))
       DO 51 I=1,36
 51       PLACO(I)=RTABL(KECMC,I,JECMCO)
                        ENDIF
C?-- FILL ESDA BOS_BANK
      DO 20 ITOW = 1,NTOW
C
C- Correct for gas flow calibration dependance
        IADD = IW(KETDI + 1)
        CALL ECGFLW (IADD,CFL)
        DO  52 IK=1,3
          ERN = FLOAT(IW(KETDI+1+IK))*CFL
          IW(KETDI+1+IK) = ERN
   52   CONTINUE
        DO 10 K = 1,3
            IW(KESDA + JESDTJ) = IBITS(IADD,16,8)
            IW(KESDA + JESDFI) = IBITS(IADD, 2,9)
            IW(KESDA + JESDDK) = K
C? ----- ENCODING FOR CLUSTERING
            J = IW(KESDA + JESDTJ)
            I = IW(KESDA + JESDFI)
C       protect against bad data
            IF(J.LT.1 .OR. J.GT.228)GOTO 990
            NRE = NUMREG(J)-INT(NUMREG(J)/5)
            IF(I.LT.1 .OR. I.GT.96*NRE)GOTO 990
            CALL ECINIT(I,J,K,IORG,NDIR)
            IW(KESDA + JESDIO) = IORG
            IW(KESDA + JESDDI) = NDIR
C? MODULE NUMBER (1..36)
            CALL ECMOD(I,J,IMOD)
      CALL ECPLM(IMOD,K,EWEI)
            IW(KESDA + JESDER) = IMOD
C? --- ENERGY IN GEV
            ESTO = 1.E-6*FLOAT(IW(KETDI+K+1))*PLACO(IMOD)
      RW(KESDA + JESDME)=ESTO*EWEI
C? REGION NUMBER (1..5)
            IW(KESDA + JESDSC) = NUMREG (J)
C? FLAG FOR DEAD STOREYS TREATMENT
            IW(KESDA+JESDED)=0
C
            KESDA = KESDA + LESDAA
   10    CONTINUE
         KETDI = KETDI + LETDIA
   20 CONTINUE
C
      RETURN
 900  IF (JDBDRF(JULEC) .NE. 0) THEN
      CALL RERROR(
     1  'EPREDA ',1,' ETDI bank missing. ECAL not processed')
      ENDIF
      RETURN
 990  CALL RERROR(
     1  'EPREDA ',3,' ETDI bank data inconsistent - drop it')
      CALL BDROP(IW,'ETDIESDA')
      RETURN
C? ERROR IN CASE OF BOS MEMORY FULL
 999  CALL RERROR('EPREDA ',
     1 2,' Bos memory full.ESDA not created.ECAL not processed')
      RETURN
      END
#endif
@


1.2
log
@julia version 279
@
text
@a0 1
*DK epreda
@


1.1
log
@Initial revision
@
text
@d68 1
a68 9
      IF (IRUNRC.GE.4001 .AND. IRUNRC.LE.4838) THEN
         WRITE(LDEBRL,*) ' ========================================='
         WRITE(LDEBRL,*) ' ***EPREDA*** WARNING RUN ',IRUNRC,
     &   'should be corrected for the bug on -storeys gains corrected'
     &   ,' for missing wires- AND IT IS NOT'
         WRITE(LDEBRL,*) ' if you want to do it anyway get the ',
     &    'routines ERCUPI , ERCUPR, ECPAD from a version < 275'
         WRITE(LDEBRL,*) ' ==========================================='
      ENDIF
@


1.1.1.1
log
@import julia 300
@
text
@@
