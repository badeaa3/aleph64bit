head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.57.16;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.01;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.02;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE EPCALO
C***********************************************************************
C! PROPAGATE TRACKS TO ECAL      ENTRY                                 *
C!                                                                     *
C!  AUTHOR   : A. EALET  870224                                        *
C!                                                                     *
C!                                                                     *
C!  BANKS :                                                            *
C!    INPUT   : ETP1                                                   *
C!    OUTPUT  : ETP1                                                   *
C!    CREATED : NONE                                                   *
C!                                                                     *
C!                                                                     *
C!    INPUT :                                                          *
C!               STEP  = STEP SIZE                                     *
C!               X(8)  = LAST TPC POINT (LATER,CURRENT POINT)          *
C!                                                                     *
C!    OUTPUT :                                                         *
C!               X(8)  =ECAL ENTRY POINT                               *
C***********************************************************************
#ifndef DOC
C
#include "bcs.h"
      DOUBLE PRECISION RAD,CFILD
      DIMENSION X(8)
#include "ehlcom.h"
#include "alcons.h"
#include "ectcom.h"
#include "etp1jj.h"
#include "ecnamc.h"
      DATA RECMN/186.2/,ZECMN/254.2/
#include "bmacro.h"
C
C? LOOP ON TRACKS
C
C
      KETP1=IW(NAETP1)
      NTRAK=LROWS(KETP1)
      DO 10 ITRAK=1,NTRAK
      IREF=KROW(KETP1,ITRAK)
C?
C? CHOOSE ONLY TRACKS WHICH CAN BE PROPAGATED
C? FIND LAST TPC POINT
C?
      IF(IW(IREF+JETPEF).EQ.1)THEN
        DO 11 I=1,3
        X(I)=RW(IREF+JETPX3+I-1)
        X(I+3)=RW(IREF+JETPP3+I-1)
   11   CONTINUE
        X(7)=RW(IREF+JETPPT)
        X(8)=RW(IREF+JETPCH)
C
        CFILD=DBLE(FILDEC)
        DO 30 I=1,8
   30   POINEH(I)=DBLE(X(I))
C
C?   IF CHARGED TRACK ...
C?  COMPUTE THE INTERSECTION WITH BARREL IN XY PLANE
C?    S1 IS THE CURVED ABSCISSA TO THIS POINT
C
        IF(POINEH(8).NE.0.D0)THEN
           PXY=DSQRT(POINEH(4)**2+POINEH(5)**2)
           RAD=POINEH(7)/(DBLE(AAAKEC)*POINEH(8)*DBLE(CFILD))
           XC=POINEH(1)+RAD*POINEH(5)
           YC=POINEH(2)-RAD*POINEH(4)
           RAD=RAD*DBLE(PXY)
           DIS2=XC**2+YC**2
           DIS=SQRT(DIS2)
           CTHET=(SNGL(RAD)**2+DIS2-RECMN**2)/(2.*ABS(SNGL(RAD))*DIS)
           IF(ABS(CTHET).GT.1) THEN
              S1=100000.
              GO TO 20
           ENDIF
           THET=ACOS(CTHET)
           ALPH=-SIGN(1.,SNGL(POINEH(8)))*THET-
     +     (ATAN2((SNGL(POINEH(2))-YC),(SNGL(POINEH(1))-XC))
     +     -ATAN2(-YC,-XC))
      IF(ALPH.GT.TWOPI)ALPH=ALPH-TWOPI
      IF(ALPH.LT.-TWOPI)ALPH=ALPH+TWOPI
           S1=-SNGL(RAD)*ALPH/PXY
C
C? COMPUTE INTERSECTION WITH THE ENDCAP
C
C
   20      S2=(ZECMN-SIGN(1.,SNGL(POINEH(6)))*SNGL(POINEH(3)))/
     +     ABS(SNGL(POINEH(6)))
C?
C? CHOOSE ENDCAP OR BARREL AND COMPUTE THE HELIX STEP IN XY PLANE
C?
           S=AMIN1(S1,S2)
           STEP=S*PXY
C
C? COMPUTE THE NEW ENTRY POINT IN THE CALORIMETER;
C? FIRST, INITIALISE HELIX
C
           DPHI=STEP/SNGL(RAD)
C
C?   IF DISTANCE LESS THAN ONE TURN, TAKE NEW POINT
C
           IF(DPHI.LT.TWOPI)THEN
              SINUEH=SIN(DPHI)
              COSIEH=DSQRT(1.D0-SINUEH**2)
              CONSEH=(1.D0-COSIEH)/SINUEH
              STXYEH=SNGL(RAD*SINUEH)/PXY
              STZZEH=S
C
C?  THEN, PROPAGATE, AND FILL BANK WITH NEW POINT
C
              CALL EHLIX(X)
              DO 12 I=1,3
                RW(IREF+JETPX3+I-1)=X(I)
                RW(IREF+JETPP3+I-1)=X(I+3)
   12         CONTINUE
C
C?   ELSE, SAY THAT TRACK SHOULD NOT BE EXTRAPOLATED
C
          ELSE
              RW(IREF+JETPEF)=0
          ENDIF
        ENDIF
      ENDIF
   10 CONTINUE
  999 RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK epcalo
@


1.1.1.1
log
@import julia 300
@
text
@@
