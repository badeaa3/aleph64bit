head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.53.04;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.48;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.49;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE ECRMIP
C-----------------------------------------------------------------
C!  LOOK FOR MINIMUM IONIZING PARTICLE
C!
C!  AUTHOR   : J.P. ALBANESE
C!  MODIFIED : F. ETIENNE      87/08/27
C!  MODIFIED : D. PALLIN       88/12/19
C!
C!  BANKS :
C!    INPUT   : ECLU,ECT1,ERL3,ETP1
C!    OUTPUT  : NONE
C!    CREATED :
C!
C----------------------------------------------------------------
C
#ifndef DOC
#include "bcs.h"
#include "eminic.h"
#include "ecnamc.h"
#include "esdajj.h"
#include "eclujj.h"
#include "ect1jj.h"
#include "erl3jj.h"
#include "etp1jj.h"
#include "emipjj.h"
      PARAMETER(NTRMAX=5)
#include "bmacro.h"
C
C ---------------------
C? CREATE EMIP BANK
C ---------------------
C
C  WE RESERVE ONE ROW FOR EACH TRACK
C GET NBER  OF TRACKS
      IER=0
      NAFRFT=NAMIND('FRFT')
      KFRFT=IW(NAFRFT)
      NTRKS=LROWS(KFRFT)
C CREATE BANK
      CALL AUBOS('EMIP',0,NTRKS*LEMIPA+LMHLEN,KEMIP,IGARB)
      IF(IGARB.EQ.2)GO TO 998
      CALL BLIST(IW,'T+','EMIP')
      IW(KEMIP+LMHCOL)=LEMIPA
      IW(KEMIP+LMHROW)=0
C
C ---------------------
C? FIND M.I.P
C ---------------------
C
      KESDA = IW(NAESDA)
      KECLU = IW(NAECLU)
      KERL3 = IW(NAERL3)
      KECT1 = IW(NAECT1)
      KETP1 = IW(NAETP1)
C
      NECLU=LROWS(KECLU)
C
C  LOOP ON CLUSTERS
C
C
      DO 1 ICC=1,NECLU
      ICT = 0
      CALL VZERO(ENLVCL,3)
      CALL VZERO(NTRACL,NMAX)
      CALL VZERO(PTPCCL,NMAX)
C
C? GET ASSOCIATED TRACKS FOR EACH CLUSTER
C
      N1 = ITABL(KECT1,ICC,JECTER)
 11   CONTINUE
      IF (N1 .NE. 0 .AND. ICT .LT. NTRMAX)  THEN
         ICT =ICT + 1
         NTRACL(ICT) = ITABL(KERL3,N1,JERLET)
         PTPCCL(ICT) = RTABL(KETP1,NTRACL(ICT),JETPPT)
         N1          = ITABL(KERL3,N1,JERLER)
         GO TO 11
      ENDIF
      IF(ICT.EQ.0)GOTO 1
C
C? NBER OF MODULE INVOLVED IN THIS CLUSTER
C? NBMODU=1 ONE MODULE  NBMODU=2 MORE THAN ONE
C
      NBMODU=0
      NMOD=0
      IF (NTRACL(2).EQ.0.)THEN
          ISTO=ITABL(KECLU,ICC,JECLES)
 3        IF(ISTO.EQ.0)GO TO 2
          NMOD1=ITABL(KESDA,ISTO,JESDER)
          IF(NMOD1.NE.NMOD)THEN
                    NBMODU=NBMODU+1
                    IF(NBMODU.GT.1)GOTO 2
                    NMOD=NMOD1
                    ENDIF
          ENTO=RTABL(KESDA,ISTO,JESDME)
          KSTO=ITABL(KESDA,ISTO,JESDDK)
          ENLVCL(KSTO)=ENLVCL(KSTO)+ENTO
          ISTO=ITABL(KESDA,ISTO,JESDES)
          GOTO 3
      ENDIF
 2    CONTINUE
C?   FOR NOW, ONLY ATTEMPT MIP IDENTIFICATION
C?   FOR CLUSTERS IN ONLY ONE MODULE, AND ASSOCIATED TO A SINGLE TRACK
C?   IFLAMP =1 IF MIP PARTICLE IDENTIFIED
C      IF (NTRACL(2).EQ.0.AND.NBMODU.EQ.1) THEN
      IF (NTRACL(2).EQ.0)THEN
C      RO
         BARYCL(1) = RTABL(KECLU,ICC,JECLR4)
C      THETA
         BARYCL(2) = RTABL(KECLU,ICC,JECLT4)
C      PHI
         BARYCL(3) = RTABL(KECLU,ICC,JECLF4)
C
         CALL ECFMIP
C
C ---------------------
C? FILL BANK EMIP
C ---------------------
C
         IF(IFLAMP.EQ.1)THEN
            NEMI=IW(KEMIP+LMHROW)
            NEMI=NEMI+1
            IW(KEMIP+LMHROW)=NEMI
            IW(KROW(KEMIP,NEMI)+JEMIFR)=NTRACL(1)
         ENDIF
C
      ENDIF
  1   CONTINUE
C
C
C ---------------------
C? CLOSE MIP BANK
C ---------------------
C
C NBER OF USEFUL  DATA IN EMIP BK
      IUSE=LMHLEN+IW(KEMIP+LMHCOL)*IW(KEMIP+LMHROW)
      CALL AUBOS('EMIP',0,IUSE,KEMIP,IGARB)
      RETURN
  998 CONTINUE
      CALL RERROR('ECRMIP',1,' exit')
      IER=1
      IND = NDROP('EMIP',0)
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK ecrmip
@


1.1.1.1
log
@import julia 300
@
text
@@
