head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.57.18;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.02;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.03;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE EPCHG
C***********************************************************************
C!PROPAGATE CHARGED TRACKS                                             *
C!                                                                     *
C!                                                                     *
C!  AUTHOR   : A. BONISSENT  861128                                    *
C!                                                                     *
C!                                                                     *
C!  BANKS :                                                            *
C!    INPUT   : TPTE,ETP1                                              *
C!    OUTPUT  : ETP1                                                   *
C!    CREATED : NONE                                                   *
C!                                                                     *
C!    INPUT  : NONE                                                    *
C!                                                                     *
C!    OUTPUT : NONE                                                    *
C!  FOR ALL TRACKS :                                                   *
C!      FIND LAST TRACK ELEMENT                                        *
C!      INITIALISE HELIX EXTRAPOLATION                                 *
C!      MAKE HELIX EXTRAPOLATION                                       *
C!      FILL  ONE LINE IN ETP1 BANK                                    *
C!                                                                     *
C***********************************************************************
#ifndef DOC
      EXTERNAL NLINK
#include "bcs.h"
#include "rlunit.h"
#include "ehlcom.h"
#include "ectcom.h"
#include "ecnamc.h"
#include "etp1jj.h"
      DOUBLE PRECISION RAD,CFILD,STPEH,PXY
      DIMENSION X(8)
#include "bmacro.h"
C
      KETP1=IW(NAETP1)
      NTRAK=LROWS(KETP1)
      KTPTE=NLINK('TPTE',0)
      IF(KTPTE.EQ.0)THEN
        CALL RERROR('EPCHG',1,' TPTE BANK DOES NOT EXIST ')
      GO TO 51
      ENDIF
      NTKE=LROWS(KTPTE)
      ITRKP=ITABL(KTPTE,1,1)
      NTKEP=NTKE+1
      DO 10 ITKE=1,NTKEP
C
C   THIS IS NEEDED TO PROCESS THE LAST TRACK ELEMENT
C
      IF(ITKE.NE.NTKEP)THEN
         ITRAK=ITABL(KTPTE,ITKE,1)
      ENDIF
      ITKEP=ITKE-1
      IF(ITRAK.NE.ITRKP.OR.ITKE.EQ.NTKEP)THEN
C
C  IF LAST TRACK ELEMENT FOR TRACK ITRKP
C
         STEP=RTABL(KTPTE,ITKEP,JETPEF)
         IADD=KROW(KETP1,ITRKP)
         IF(STEP.NE.0)THEN
C?
C?       INITIALIZE HELIX PARAMETERS
C?
          STPEH=DBLE(STEP)
          CFILD=DBLE(FILDEC)
          DO 20 I=1,7
   20     POINEH(I)=DBLE(RTABL(KTPTE,ITKEP,I+1))
          POINEH(JETPCH)=DBLE(RTABL(KTPTE,ITKEP,12))
         PXY=DSQRT(POINEH(4)**2+POINEH(5)**2)
         RAD=POINEH(7)/(DBLE(AAAKEC)*POINEH(8)*CFILD)*PXY
         SINUEH=DSIN(STPEH*PXY/RAD)
         STXYEH=SINUEH*RAD/PXY
         STZZEH=STPEH
          COSIEH=DSQRT(1.D0-SINUEH**2)
          CONSEH=(1.D0-COSIEH)/SINUEH
C
           CALL EHLIX(X)
           DO 30 I=1,6
   30      RW(IADD+I)=X(I)
           RW(IADD+7)=SNGL(POINEH(7))
C           WRITE(LDEBRL,*)' EPCHG --> TRACK ',ITRKP,' CHGED,PROPAGED'
        ELSE
           DO 40 I=1,7
   40      RW(IADD+I)=RTABL(KTPTE,ITKE,I+1)
C           WRITE(LDEBRL,*)' EPCHG --> TRACK ',ITRKP,' CHGED,PROPAGED ST
        ENDIF
C
C?   SET EXTRAP FLAG TO 2 IF IT WAS # ZERO BEFORE
C      ELSE, LEAVE IT AS IT WAS (IE 0)
C
        IF(IW(IADD+JETPEF).NE.0)IW(IADD+JETPEF)=2
        ITRKP=ITRAK
      ENDIF
   10 CONTINUE
C
C?   SUPPRESS ALL  CHARGED TRACKS WHICH HAVE NO TRACK ELEMENT IN TPC
C
   51 DO 50 I=1,NTRAK
      IF(RTABL(KETP1,I,JETPCH).NE.0.)THEN
         KLOC=KROW(KETP1,I)+JETPEF
         IF(IW(KLOC).EQ.2)THEN
            IW(KLOC)=1
         ELSE
            IW(KLOC)=0
         ENDIF
      ENDIF
   50 CONTINUE
C
C  Special treatment for the alphas :
C   Simulate a particle with charge +-1, with
C   momentums in x-y plane adjusted accordingly
C
      DO 60 I=1,NTRAK
      IF(RTABL(KETP1,I,JETPCH).NE.0.)THEN
         Q=RTABL(KETP1,I,JETPCH)
         QABS=ABS(Q)
         IF(QABS.NE.1.)THEN
            PT=RTABL(KETP1,I,JETPPT)
            PX=RTABL(KETP1,I,JETPP3)*PT
            PY=RTABL(KETP1,I,JETPP3+1)*PT
            PZ=RTABL(KETP1,I,JETPP3+2)*PT
            PX=PX/QABS
            PY=PY/QABS
            Q=Q/QABS
            PT=SQRT(PX**2+PY**2+PZ**2)
            PX=PX/PT
            PY=PY/PT
            PZ=PZ/PT
            KLOC=KROW(KETP1,I)
            RW(KLOC+JETPP3)=PX
            RW(KLOC+JETPP3+1)=PY
            RW(KLOC+JETPP3+2)=PZ
            RW(KLOC+JETPPT)=PT
            RW(KLOC+JETPCH)=Q
         ENDIF
      ENDIF
   60 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK epchg
@


1.1.1.1
log
@import julia 300
@
text
@@
