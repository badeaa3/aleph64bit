head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.55.08;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.55;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.56;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE EGAEST
C----------------------------------------------------------------------
C!  - Built photon normalised estimator bank
C!     Author                             M.N Minard 10/02/92
C!
C!   Bank created  EGNE
C!   Banks used ECLU ECT1 ERL3
C!   Data base banks used EF4N , EW1N , EW2N , EL1N , EL2N
C!   call to EF4NOR , EW1NOR , EW2NOR , EL1NOR , EL2NOR
C!   Call to EBNEUT  CLMOMS (ALEPHLIB)
C?
C=======================================================================
#ifndef DOC
      DIMENSION IOPT(6),IFOT(19),PHOT(23),CORE(6)
      DIMENSION CMINFO(16)
#include "bcs.h"
#include "eclujj.h"
#include "pecojj.h"
#include "ecobjj.h"
#include "ect1jj.h"
#include "ecnamc.h"
#include "egnejj.h"
#include "egtejj.h"
      DATA NAEGTE / 0 /
#include "bmacro.h"
C
      IF (NAEGTE.EQ.0) THEN
        NAPECO = NAMIND('PECO')
        NAEGTE = NAMIND('EGTE')
        NAECOB = NAMIND('ECOB')
        NAECLU = NAMIND('ECLU')
        NAECT1 = NAMIND('ECT1')
      ENDIF
C
C   Initialise  threshold
C
      ETHGAM = 0.
      KEGTE = IW(NAEGTE)
      NEGTE = 0
      IF ( KEGTE . NE . 0 ) NEGTE = LROWS(KEGTE)
      DO IEGTE = 1,NEGTE
        IF ( ITABL(KEGTE,IEGTE,2) .EQ.1 ) THEN
          ETHGAM = RTABL(KEGTE,IEGTE,JEGTET)
        ENDIF
      ENDDO
C   Drop the old EGNE bank.
      K = NDROP( 'EGNE' , 0 )
C
C?   Work on either PECO or ECLU
C
      KECLU = IW(NAECLU)
      KPECO = IW(NAPECO)
      KECOB = IW(NAECOB)
C   Have we a Cluster Bank bank ?
      IF( KECLU.LE.0 .AND. KPECO.LE.0 ) GOTO 999
C   How many clusters ?
      IF ( KECLU.GT.0 ) THEN
        NCLU = LROWS(KECLU)
      ELSE
        NCLU = LROWS(KPECO)
      ENDIF
C   KAKA FOR MAXP PARTICLE PER ECLU.
      KAKA = LMHLEN + LEGNEA  * NCLU
C   Prepare EGID bank
      CALL AUBOS('EGNE',0,KAKA,KEGNE,IGARB)
      IF( IGARB .EQ. 2 ) GO TO 102
C
      IW(KEGNE+2) = 0
      IW(KEGNE+1) = LEGNEA
      IF ( IGARB.NE.0) THEN
        KECLU = IW(NAECLU)
        KECOB = IW(NAECOB)
        KPECO = IW(NAPECO)
      ENDIF
      KECT1 = IW(NAECT1)
C Loop over clusters.
      DO 1 ICLN = 1 , NCLU
C
C     Is cluster above threshold
C
        IF (KECLU.GT.0) THEN
          EC = RTABL(KECOB,ICLN,JECOEG)
          THET = RTABL(KECLU,ICLN,JECLT4)
          KCODE = ITABL(KECOB,ICLN,JECORC)
          JECT1 = KROW(KECT1,ICLN)
          NERL3 = IW(JECT1+JECTER)
          ICH = 0
          IF (NERL3.NE.0) ICH = 1
          IF ( ICH.NE.0) GO TO 1
        ELSE
          EC = RTABL(KPECO,ICLN,JPECEC)
          THET = RTABL(KPECO,ICLN,JPECTH)
          KCODE = ITABL(KPECO,ICLN,JPECKD)
          ICH =  ITABL(KPECO,ICLN,JPECRB)
          IF( ICH .NE. 0 .AND. ICH .NE. 2 ) GO TO 1
        ENDIF
C
C   Is it a neutral cluster ?
C
        IF (EC.LT.ETHGAM) GO TO 1
C   Treatment of the cluster - Longitudinal estimator
        CALL EBNEUT( ICLN , IOPT ,IFOT , PHOT , CORE , IER )
        KEGNE = IW(NAMIND('EGNE'))
        IF( KEGNE .EQ. 0 ) GO TO 999
C   Store photon estimator
        NEGNE = LROWS(KEGNE) + 1
        IW(KEGNE+LMHROW) = NEGNE
        KRGNE = KROW(KEGNE,NEGNE)
        CALL ENOL12 (PHOT(7),PHOT(8),EC,THET,ESL1N,ESL2N)
        CALL ENOF4  (PHOT(12),EC,THET,ESF4N)
        IW(KRGNE+JEGNRC) = KCODE
        IW(KRGNE+JEGNNA) = IFOT(18)
        RW(KRGNE+JEGNL1) = ESL1N
        RW(KRGNE+JEGNL2) = ESL2N
        RW(KRGNE+JEGNF4) = ESF4N
C   Moment analysis
C   General for the cluster
C   ICLN is either ECLU number or PECO number

        CALL CLMOMS(ICLN,NIMP,CMINFO,IWARN,IERROR,EC)
        CALL ENOW12(CMINFO(1),CMINFO(2),EC,THET,ESW1N,ESW2N)
        IF (IERROR .EQ. 0.) THEN
          RW(KRGNE+JEGNBM) = CMINFO(5)
          RW(KRGNE+JEGNW1) = ESW1N
          RW(KRGNE+JEGNW2) = ESW2N
        ENDIF
C   Pointeur PECO
        IW( KRGNE + JEGNPE ) = ICLN
    1 CONTINUE
      CALL AUBPRS('EGNE')
   98 CONTINUE
  999 RETURN
  102 CALL RERROR('EGAEST',2,'Not enough BOS space ')
      GO TO 98
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK egaest
@


1.1.1.1
log
@import julia 300
@
text
@@
