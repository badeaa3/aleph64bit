head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.51.47;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.47;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.48;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE ECOIDP(ICLUS)
C-----------------------------------------------------
C! INITIALIZE IDENTIFICATION PARAMETER AND
C! FILL COMMON EANCLU  FOR SUBSEQUENT CLUSTER ANALYSIS
C!
C!  AUTHOR   : J.P. ALBANESE
C!  MODIFIED : F. ETIENNE      87/08/27
C!
C!  BANKS :
C!    INPUT   : ESDA,ECLU,ECT1
C!    OUTPUT  : NONE
C!    CREATED : NONE
C!
C!
C-----------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "rlunit.h"
#include "eanclu.h"
#include "ecnamc.h"
#include "esdajj.h"
#include "eclujj.h"
#include "ect1jj.h"
#include "erl3jj.h"
#include "etp1jj.h"
      EXTERNAL VSUM
      EXTERNAL IUCOMP
#include "bmacro.h"
C
C? Fill cluster number
C
      ICLNEA=ICLUS
C
C? A CHARGED TRACK IS ASSOCIATED
C
      ICHREA = 1
C
C?   FIND NUMBER OF MODULES DETECTORS AND REGIONS
      KESDA = IW(NAESDA)
      KECLU = IW(NAECLU)
C
C    RESET MIP PARTICLE FLAG
      IFLGMP = 0
C
      NBMOEA = 0
      NBDEEA = 0
      NBRGEA = 0
      CALL VZERO (LMOLEA,3)
      CALL VZERO (ECLSEA,9)
      CALL VZERO (LDETEA,2)
      CALL VZERO (LREGEA,5)
      CALL VZERO (ENRGEA,5)
C
      ISTO = ITABL(KECLU,ICLNEA,JECLES)
   20 IF (ISTO.EQ.0)            GO TO 160
         ENSTO = RTABL(KESDA,ISTO,JESDME)
         KNSTO = ITABL(KESDA,ISTO,JESDDK)
C
C?   COUNT NUMBER OF MODULES
         NMOD = ITABL(KESDA,ISTO,JESDER)
         IF (NBMOEA.EQ.0)       GO TO 65
         JMOD = IUCOMP(NMOD,LMOLEA,NBMOEA)
         IF (JMOD.NE.0) GO TO 70
   65    IF (NBMOEA.GT.3) THEN
            CALL RERROR(' ECOIDP',1,' MORE THAN 3 MODULES FOUND')
         GO TO 999
         ENDIF
         NBMOEA = NBMOEA + 1
         LMOLEA(NBMOEA) = NMOD
         JMOD = NBMOEA
   70    ECLSEA(KNSTO,JMOD) = ECLSEA(KNSTO,JMOD) + ENSTO
C
C?   COUNT NUMBER OF DETECTORS
         NDET = 1 +(NMOD-1)/12
         IF (NBDEEA.EQ.0)       GO TO 75
         IF (IUCOMP(NDET,LDETEA,NBDEEA).NE.0) GO TO 81
   75    IF (NBDEEA.GT.2) THEN
            CALL RERROR(' ECOIDP',2,' MORE THAN 2 DETECTORS FOUND')
         GO TO 999
         ENDIF
         NBDEEA = NBDEEA + 1
         LDETEA(NBDEEA) = NDET
C
C?   COUNT NUMBER OF REGIONS
   81    NREG = ITABL(KESDA,ISTO,JESDSC)
         IF (NBRGEA.EQ.0)       GO TO 85
         JREG = IUCOMP(NREG,LREGEA,NBRGEA)
         IF (JREG.NE.0) GO TO 90
   85    IF (NBRGEA.GT.5) THEN
            CALL RERROR(' ECOIDP',3,' MORE THAN 5 REGIONS FOUND')
         GO TO 999
         ENDIF
         NBRGEA = NBRGEA + 1
         JREG = NBRGEA
         LREGEA(NBRGEA) = NREG
   90    ENRGEA(JREG) = ENRGEA(JREG) + ENSTO
C
      ISTO = ITABL(KESDA,ISTO,JESDES)
      GO TO 20
C
  160  CONTINUE
C
C?   REORDER MODULES ACCORDING TO DECREASING ENERGY
      IF (NBMOEA.GT.1) THEN
         I1 = 1
  210    EMMAX = 0.
         IMMAX = 0
         DO 280 IM = I1, NBMOEA
         EMMOD = VSUM(ECLSEA(1,IM),3)
         IF (EMMOD.GT.EMMAX) THEN
            IMMAX = IM
            EMMAX = EMMOD
         ENDIF
  280    CONTINUE
         IF (IMMAX.NE.I1) THEN
            ISAVE         = LMOLEA(I1)
            LMOLEA(I1)    = LMOLEA(IMMAX)
            LMOLEA(IMMAX) = ISAVE
            XSAVE           = ECLSEA(1,I1)
            ECLSEA(1,I1)    = ECLSEA(1,IMMAX)
            ECLSEA(1,IMMAX) = XSAVE
            XSAVE           = ECLSEA(2,I1)
            ECLSEA(2,I1)    = ECLSEA(2,IMMAX)
            ECLSEA(2,IMMAX) = XSAVE
            XSAVE           = ECLSEA(3,I1)
            ECLSEA(3,I1)    = ECLSEA(3,IMMAX)
            ECLSEA(3,IMMAX) = XSAVE
         ENDIF
         IF (I1.LT.NBMOEA-1) THEN
            I1 = I1 + 1
            GO TO 210
         ENDIF
      ENDIF
C
C?   REORDER REGIONS ACCORDING TO DECREASING ENERGY
      IF (NBRGEA.GT.1) THEN
         I1 = 1
  310    ERMAX = 0.
         IDMAX = 0
         DO 380 IDET = I1, NBRGEA
         ENREG = ENRGEA(IDET)
         IF (ENREG.GT.ERMAX) THEN
            IDMAX = IDET
            ERMAX = ENREG
         ENDIF
  380    CONTINUE
         IF (IDMAX.NE.I1) THEN
            ISAVE         = LREGEA(I1)
            LREGEA(I1)    = LREGEA(IDMAX)
            LREGEA(IDMAX) = ISAVE
            XSAVE         = ENRGEA(I1)
            ENRGEA(I1)    = ENRGEA(IDMAX)
            ENRGEA(IDMAX) = XSAVE
         ENDIF
         IF (I1.LT.NBRGEA-1) THEN
            I1 = I1 + 1
            GO TO 310
         ENDIF
      ENDIF
C
C?   GET ENERGY OF THE CLUSTER
      ECLTEA = RTABL(KECLU,ICLNEA,JECLE4)
C
C?   COMPUTE THE BARYCENTER OF THE CLUSTER
      RO = RTABL(KECLU,ICLNEA,JECLR4)
      TH = RTABL(KECLU,ICLNEA,JECLT4)
      PH = RTABL(KECLU,ICLNEA,JECLF4)
      ROSIN     = RO*SIN(TH)
      XYZBEA(1) = ROSIN*COS(PH)
      XYZBEA(2) = ROSIN*SIN(PH)
      XYZBEA(3) = RO*COS(TH)
C
C?   DEFINE REGION CODE
C  Region code.
        KSEX = 0
C   Cracks and overlap.
      IF( NBMOEA .EQ. 1 ) THEN
        NVEX = 0
        KREX = 0
      ELSE
        IF( NBDEEA .EQ. 1 ) THEN
C   It is a crack.
          NVEX = 0
                IF( LMOLEA(1) .GT. LMOLEA(2) .OR.
     +          LMOLEA(2) - LMOLEA(1) .EQ. 11 ) THEN
            KREX = 1
          ELSE
            KREX = 2
          ENDIF
        ELSE
C   Overlap
          IF( LDETEA(1) .EQ. 2 ) THEN
C   The main detector is the barrel.
            NVEX = 1
          ELSE
C   The main detector is the endcap.
            NVEX = 2
          ENDIF
          IF( NBMOEA .EQ. 2 ) THEN
C   It is not a crack inside the overlap.
            KREX = 0
          ELSE
C   Overlap and crack.
            LDET2 = ( LMOLEA(2) - 1 ) / 12
            LDET3 = ( LMOLEA(3) - 1 ) / 12
            IF( LDET2 .EQ. LDET3 ) THEN
C               NVEX   KREX              KSEX
C   Ba Ec Ec     1      1 : #Ec2>#Ec3     1 : Ba>Ec2+Ec3
C                       2 : #Ec2<#Ec3     0 : Ba<Ec2+Ec3
C   Ec Ba Ba     2      1 : #Ba2>#Ba3     1 : Ec>Ba2+Ba3
C                       2 : #Ba2<#Ba3     0 : Ec<Ba2+Ba3
              SOM1 = ECLSEA(1,1) + ECLSEA(2,1) + ECLSEA(3,1)
              SOM2 = ECLSEA(1,2) + ECLSEA(2,2) + ECLSEA(3,2)
              SOM3 = ECLSEA(1,3) + ECLSEA(2,3) + ECLSEA(3,3)
              IF( SOM1 .GT. SOM2 + SOM3 ) KSEX = 1
              IF( LMOLEA(2) .GT. LMOLEA(3) .OR.
     +        LMOLEA(3) - LMOLEA(2) .EQ. 11 ) THEN
               KREX = 1
              ELSE
               KREX = 2
              ENDIF
            ELSE
            LDET1 = ( LMOLEA(1) - 1 ) / 12
              IF( LDET1 .EQ. LDET2 ) THEN
C   Ba Ba Ec     if      #Ba1>#Ba2       KREX = 1
C   Ec Ec Ba     if      #Ec1>#Ec2       KREX = 1
                IF( LMOLEA(1) .GT. LMOLEA(2) .OR.
     +          LMOLEA(2) - LMOLEA(1) .EQ. 11 ) THEN
                  KREX = 1
                ELSE
                  KREX = 2
                ENDIF
              ELSE
C   Ba Ec Ba     if      #Ba1>#Ba3       KREX = 1
C   Ec Ba Ec     if      #Ec1>#Ec3       KREX = 1
                IF( LMOLEA(1) .GT. LMOLEA(3) .OR.
     +          LMOLEA(3) - LMOLEA(1) .EQ. 11 ) THEN
                  KREX = 1
                ELSE
                  KREX = 2
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ENDIF
C   Limits of regions.
      IF(NBRGEA .LE. 1) THEN
        LREX = 0
      ELSE
        IF(LREGEA(1) .GT. LREGEA(2)) THEN
          LREX = 1
        ELSE
          LREX = 2
        ENDIF
      ENDIF
C   Region code.
      ICREEA = LREX + 4 * KSEX + 16 * KREX + 64 * NVEX
C
C?   KLASEA NOT YET DEFINED
C
      RETURN
C
  999 CALL RERROR(' ECOIDP',4,' exit')
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK ecoidp
@


1.1.1.1
log
@import julia 300
@
text
@@
