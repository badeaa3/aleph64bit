head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.53.21;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.49;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.50;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE ECRUNQ ( NCL1 , NCL2 , NAUTO )
C----------------------------------------------------------------------
C!  - Storey cleaning and Autopeds info to POT
C!     Bank output ECRQ
C!
C!     Lee F. Thompson. 23rd April 1990.
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
      EXTERNAL NAMIND
#include "ecrqjj.h"
      INTEGER NCL1(36) , NCL2(36) , NAUTO(36) , NECRQ
      DATA NECRQ /36/
#include "bmacro.h"
C
C-    Build ECRQ bank
C
      KECRQ = NDROP('ECRQ',0)
      NLENG = NECRQ*LECRQA + LMHLEN
      CALL AUBOS ('ECRQ', 0, NLENG , KECRQ , IGARB )
      IF ( IGARB .EQ.2 ) GO TO 990
      CALL BLIST (IW,'E+','ECRQ')
      IW(KECRQ+LMHCOL) = LECRQA
      IW(KECRQ+LMHROW) = 0
C
C-    Pack info into two data words per module.
C-    Word 1 has Module Number (bits 1-6), Autopeds activity
C-    (bits 7-20). Word 2 has number of storeys cleaned after
C-    LCAL trigger procedure (bits 1-14) and after wire planes
C-    procedure (bits 15-28).
C
      IECRQ = 0
      DO 10 MOD = 1, NECRQ
          IF (NCL1(MOD).GT.0.OR.NCL2(MOD).GT.0.OR.NAUTO(MOD).GT.0)THEN
              IECRQ = IECRQ + 1
              JECRQ = KROW(KECRQ,IECRQ)
              IF ( NAUTO ( MOD ) .GE. 16384 ) THEN
                  CALL RERROR ( 'ECRUNQ' , 1 ,
     *                 'PAD Autopeds activity exceeds 16383' )
                  NAUTO ( MOD ) = 16833
              END IF
              IF ( NCL1 ( MOD ) .GE. 16384 ) THEN
                  CALL RERROR ( 'ECRUNQ' , 2 ,
     *                 'PAD LCAL cleaning activity exceeds 16383' )
                  NCL1 ( MOD ) = 16833
              END IF
              IF ( NCL2 ( MOD ) .GE. 16384 ) THEN
                  CALL RERROR ( 'ECRUNQ' , 3 ,
     *             'PAD wire cleaning activity exceeds 16383' )
                  NCL2 ( MOD ) = 16833
              END IF
              IW(JECRQ+1) = MOD + ISHFT(NAUTO(MOD),6)
              IW(JECRQ+2) = NCL1(MOD) + ISHFT(NCL2(MOD),14)
          END IF
   10 CONTINUE
      IW(KECRQ+LMHROW) = IECRQ
      CALL AUBPRS('ECRQ')
      GO TO 900
  990 CALL RERROR(' ECRUNQ',1,' no space for bank ECRQ')
  900 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK ecrunq
@


1.1.1.1
log
@import julia 300
@
text
@@
