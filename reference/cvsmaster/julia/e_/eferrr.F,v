head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.54.21;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.52;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.53;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE EFERRR (NAUTO)
C----------------------------------------------------------------------
C!  - Filter ERRR bank from on-line
C
C     Bank input ERRR
C     Bank output ERRF
C                        AUTHOR M.N.MINARD 14-3-90
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "rcurnt.h"
      INTEGER IRUN94
      PARAMETER ( IRUN94 = 25000 )
      EXTERNAL NAMIND
      INTEGER NAUTO(36)
      EXTERNAL MODROC
      INTEGER MODROC
      PARAMETER (LERRFA=11)
#include "bmacro.h"
C
C-    Look for ERRR bank
C
      KERRF = NDROP('ERRF',0)
      NAERRR = NAMIND ('ERRR')
      KERRR = IW ( NAERRR)
      NERRR = 0
      IF ( KERRR.NE.0) NERRR = LROWS (KERRR)
C
C-    Built ERRF bank
C
      IF ( NERRR.EQ.0 ) GO TO 900
      NLENG = NERRR*LERRFA + LMHLEN
      CALL AUBOS ('ERRF', 0, NLENG , KERRF , IGARB )
      IF ( IGARB .EQ.2 ) GO TO 990
      CALL BLIST (IW,'E+','ERRF')
      IW(KERRF+LMHCOL) = LERRFA
      IW(KERRF+LMHROW) = 0
      IF ( IGARB.NE.0 ) THEN
           KERRR = IW(NAERRR)
      ENDIF
C
C-    Check ERRR mini - header
C
      LCER= LCOLS(KERRR)
      IF(LCER.LT.1.OR.LCER.GT.99999) GOTO 960
      LRER= LROWS(KERRR)
      IF(LRER.LT.1.OR.LRER.GT.99999) GOTO 960
      IF ( LCER*LRER+LMHLEN.NE.IW(KERRR) ) GO TO 960
C
C-    Loop on ERRR to fill ERRF
C
      IERRF = 0
      NFATAL = 0
      DO 10 IERRR = 1 , NERRR
C
C-    Skip pedestal information
C
      IF(ITABL(KERRR,IERRR,1) .EQ.100) THEN
          IF ( IRUNRC .GT. IRUN94 ) THEN
           CALL RERROR('EFERRR',5,'invalid TY parameter in bank ERRR')
          END IF
          IROC = ITABL(KERRR,IERRR,2)
          IADC = ITABL(KERRR,IERRR,3)
          IPLUS1 = ITABL(KERRR,IERRR,4)
          IPLUS2 = ITABL(KERRR,IERRR,5)
          IPLUS3 = ITABL(KERRR,IERRR,6)
          IMINS1 = ITABL(KERRR,IERRR,7)
          IMINS2 = ITABL(KERRR,IERRR,8)
          IMINS3 = ITABL(KERRR,IERRR,9)
          IMOD = MODROC ( IROC , IADC )
          IF (IMOD .GT. 0.AND.IMOD.LT.37) THEN
              NAUTO (IMOD ) = IPLUS1 + IPLUS2 + IPLUS3
     *                      + IMINS1 + IMINS2 + IMINS3
          END IF
      END IF
      IF(ITABL(KERRR,IERRR,1) .GE.100) GO TO 10
      IF (ITABL(KERRR,IERRR,1).EQ.-8) NFATAL = NFATAL+1
      JERRR = KROW(KERRR,IERRR)
      IERRF = IERRF +1
      JERRF = KROW (KERRF,IERRF)
      CALL UCOPY (IW(JERRR+1), IW(JERRF+1),LERRFA)
 10   CONTINUE
      IW ( KERRF+LMHROW ) = IERRF
      CALL AUBPRS('ERRF')
      IF (NFATAL.NE.0) THEN
          CALL RERROR('EFERRR',-2,' at least one Ecal Roc missing')
      ENDIF
      GO TO 900
  960 WRITE(IW(6),100) IW(KERRR),LCOLS(KERRR),LROWS(KERRR)
  100 FORMAT (' ++++ EFERRR inconsistent bank ERRR length =',I5
     + ,' #col',I4, '# Rows ',I5 )
      CALL RERROR('EFERRR',-2,' Wrong ERRR bank ')
      GO TO 900
  990 CALL RERROR('EFERRR',-1,' no space for bank ERRF')
      GO TO 900
 900  CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK eferrr
@


1.1.1.1
log
@import julia 300
@
text
@@
