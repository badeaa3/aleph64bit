head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.47.51;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.38;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.39;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE EBEGID
C----------------------------------------------------------------------
C!  - Built photon bank EGID
C!
C!   Author  : J.Badier                    14/07/90
C!   Modified: C.Goy                       18/12/90
C!              Call Bulos
C!   Modified :- E. Lancon              4-MAR-1991
C!              Modify region flag definition
C!   Modified :- E. Lancon             15-MAY-1991
C!              Make it works with both ECLU and PECO
C!
C!   Bank created  EGID
C!   Banks used ECLU ECT1 ERL3
C!   Call to EBNEUT  CLMOMS (ALEPHLIB)
C?
C=======================================================================
#ifndef DOC
      PARAMETER ( MAXP = 2 )
      DIMENSION IOPT(6),IFOT(19),PHOT(23),CORE(6)
      DIMENSION CMINFO(16)
#include "bcs.h"
#include "eclujj.h"
#include "pecojj.h"
#include "ect1jj.h"
#include "ecnamc.h"
#include "egidjj.h"
      DATA IOPT / 6 * 0 /
#include "bmacro.h"
C-----------------------------------------------------------------------
C   Drop the old EGID bank.
      K = NDROP( 'EGID' , 0 )
C
C?   Work on either PECO or ECLU
C
      KECLU = IW(NAMIND('ECLU'))
      KPECO = IW(NAMIND('PECO'))
C   Have we a Cluster Bank bank ?
      IF( KECLU.LE.0 .AND. KPECO.LE.0 ) GOTO 101
C   How many clusters ?
      IF ( KECLU.GT.0 ) THEN
        NCLU = LROWS(KECLU)
      ELSE
        NCLU = LROWS(KPECO)
      ENDIF
C   KAKA FOR MAXP PARTICLE PER ECLU.
      KAKA = LMHLEN + LEGIDA * MAXP * NCLU
C   Prepare EGID bank
      CALL AUBOS('EGID',0,KAKA,KEGID,IGARB)
      IF( IGARB .EQ. 2 ) GO TO 102
C
      IW(KEGID+2) = 0
      IW(KEGID+1) = LEGIDA
      IF ( IGARB.NE.0) THEN
        KECLU = IW(NAMIND('ECLU'))
        KPECO = IW(NAMIND('PECO'))
      ENDIF
      KECT1 = IW(NAECT1)
C Loop over clusters.
      DO 1 ICLN = 1 , NCLU
C   Is it a neutral cluster ?
        IF (KECLU.GT.0) THEN
          JECT1 = KROW(KECT1,ICLN)
          NERL3 = IW(JECT1+JECTER)
          ICH = 0
          IF (NERL3.NE.0) ICH = 1
          IF ( ICH.NE.0) GO TO 1
        ELSE
          ICH =  ITABL(KPECO,ICLN,JPECRB)
          IF( ICH .NE. 0 .AND. ICH .NE. 2 ) GO TO 1
        ENDIF
C   Treatment of the cluster
        CALL EBNEUT( ICLN , IOPT ,IFOT , PHOT , CORE , IER )
        KEGID = IW(NAMIND('EGID'))
        IF( KEGID .EQ. 0 ) GO TO 101
C   First particle.
        NEGID = LROWS(KEGID) + 1
        IW(KEGID+LMHROW) = NEGID
        KRGID = KROW(KEGID,NEGID)
C   Region flag.
        KFLG = 0
        IF( IER .GT. 0 ) KFLG = 10
C   Near a crack ?
        IF( IFOT(14) .EQ. 11 ) KFLG = 1
C   Into a crack ?
        IF( IFOT(14) .EQ. 12 ) KFLG = 2
C   Near overlap ?
        IF( IFOT(9) .EQ. 1 .OR. IFOT(9) .EQ. 6 ) KFLG = 3
C   Into an overlap ?
        IF( IFOT(9) .GE. 2 .AND. IFOT(9) .LE. 5 ) KFLG = 4
        IF( IER .LT. -2 .AND. IER .GT. -6 ) KFLG = 4
        IW( KRGID + JEGIIF ) = KFLG
C   Depth
        IF( IFOT(15) .EQ. 0 .OR. IFOT(15) .EQ. 1 ) THEN
          RW( KRGID + JEGIE1 ) = PHOT(7)
        ELSE
          RW( KRGID + JEGIE1 ) = -99.
        ENDIF
C   Longitudinal deviation
        IF( IFOT(15) .EQ. 0 .OR. IFOT(15) .EQ. 2 ) THEN
          RW( KRGID + JEGIE2 ) = PHOT(8)
        ELSE
          RW( KRGID + JEGIE2 ) = -99.
        ENDIF
C   Compactness
        RW( KRGID + JEGIE3 ) = PHOT(12)
C   Transverse shape
        RW( KRGID + JEGIE4 ) = PHOT(13)
C   Moment analysis
C   General for the cluster
C   ICLN is either ECLU number or PECO number
        IF (IFOT(18) .LT. 16 ) THEN
           ECOR = PHOT(14)+PHOT(17)
        ELSE
           ECOR = PHOT(4)
        ENDIF
        CALL CLMOMS(ICLN,NIMP,CMINFO,IWARN,IERROR,ECOR)
        IF (IERROR .EQ. 0.) THEN
C         Small sigma of cluster in eigenframe
          RW( KRGID + JEGIE5 ) = CMINFO(1)
C         Large sigma of cluster in eigenframe
          RW( KRGID + JEGIE6 ) = CMINFO(2)
C         Third moment of cluster in direction of Small Sigma
          RW( KRGID + JEGIE7 ) = CMINFO(3)
C         Mass of the cluster
          RW( KRGID + JEGIE8 ) = CMINFO(5)
        ENDIF
C   Nature
        IW( KRGID + JEGINA ) = IFOT(18)
C   Energy
        IF( IFOT(18) .LT. 16 ) THEN
          RW( KRGID + JEGICE ) = PHOT (14)
        ELSE
          CALL EBHAHA( IFOT , PHOT , ENHAD )
          RW( KRGID + JEGICE ) = ENHAD
        ENDIF
C   Theta
        RW( KRGID + JEGITH ) = PHOT(15)
C   Phi
        RW( KRGID + JEGIPH ) = PHOT(16)
C   Pointeur PECO
C       IW( KRGID + JEGIPE ) = IW( KPECO )
        IW( KRGID + JEGIPE ) = ICLN
C   Have we a second particle ?
        IF( IFOT(19) .EQ. 0 ) GO TO 1
C   Add one row.
        NEGID = LROWS(KEGID) + 1
        IW(KEGID+LMHROW) = NEGID
        KRGID = KROW(KEGID,NEGID)
C   Quality flag
        IW( KRGID + JEGIIF ) = KFLG
C   Depth
        IF( IFOT(15) .EQ. 0 .OR. IFOT(15) .EQ. 1 ) THEN
          RW( KRGID + JEGIE1 ) = PHOT(7)
        ELSE
          RW( KRGID + JEGIE1 ) = -99.
        ENDIF
C   Longitudinal deviation
        IF( IFOT(15) .EQ. 0 .OR. IFOT(15) .EQ. 2 ) THEN
          RW( KRGID + JEGIE2 ) = PHOT(8)
        ELSE
          RW( KRGID + JEGIE2 ) = -99.
        ENDIF
C   Compactness
        CALL EBGAGA( 1 , GAM1 , GAM2 )
        RW( KRGID + JEGIE3 ) = GAM1
C   Transverse shape
        RW( KRGID + JEGIE4 ) = GAM2
C   Free.
C   Nature
        IF( IFOT(19) .LE. 3 ) THEN
          IW( KRGID + JEGINA ) = IFOT(19) + 2
        ELSE
          IW( KRGID + JEGINA ) = IFOT(19)
        ENDIF
C   Energy
        RW( KRGID + JEGICE ) = PHOT(17)
C   Theta
        RW( KRGID + JEGITH ) = PHOT(18)
C   Phi
        RW( KRGID + JEGIPH ) = PHOT(19)
C   Pointeur PECO
        IW( KRGID + JEGIPE ) = ICLN
    1 CONTINUE
      CALL AUBPRS('EGID')
   98 CONTINUE
      RETURN
  101 CALL RERROR('EBEGID',1,'Not enough space ')
      GO TO 98
  102 CALL RERROR('EBEGID',2,'Not enough BOS space ')
      GO TO 98
      END
C******************************************************************
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK ebegid
@


1.1.1.1
log
@import julia 300
@
text
@@
