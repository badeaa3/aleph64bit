head	1.4;
access;
symbols
	jul313_3:1.4
	jul313_2:1.4
	jul313_1:1.4
	jul313:1.4
	jul312_1:1.4
	jul312:1.4
	jul311:1.4
	jul310_1:1.4
	jul310:1.4
	jul309_1:1.4
	jul309:1.4
	jul308_6:1.4
	jul308_5:1.4
	jul308_4:1.4
	jul308_3:1.4
	jul308_2:1.4
	jul308_1:1.4
	jul308:1.4
	jul307_4:1.4
	jul307_3:1.4
	jul307_2:1.4
	jul307_1:1.4
	jul307:1.4
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.11.07.11.18.49;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.14.55.51;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.16.17;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.57;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.58;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Prepare Julia 305
@
text
@      SUBROUTINE EINIRU
C***********************************************************************
C! Initialise run for ecal                                             *
C!                                                                     *
C!  AUTHOR   : A. BONISSENT  871023                                    *
C!   Modified :- E. Lancon             17-MAR-1992
C!        add call to EGACST
C!   Modified :- M.Cattaneo            06-NOV-1997
C!        Remove 'Temporary' (since before 1993...) call to EFIX
C!                                                                     *
C!                                                                     *
C!  BANKS :                                                            *
C!    INPUT   : NONE                                                   *
C!    OUTPUT  : NONE                                                   *
C!    CREATED : NONE                                                   *
C!                                                                     *
C!                                                                     *
C?
C!======================================================================
#ifndef DOC
#include "rconds.h"
#include "ectcom.h"
#include "rlunit.h"
#include "rcurnt.h"
#include "bcs.h"
      INTEGER ALGTDB, GTSTUP
      EXTERNAL ALGTDB, GTSTUP
      CHARACTER DET*2, LIST*8
      DATA IROLD / 0 /
C
      FILDEC=FIELRC
C
C?  initialize magnetic field
C
      FILDEC=FIELRC
C
C? Definition of constant for clustering
C
      CALL ECBLDA
C
C Read ECAL geometry bank from DAF
C and fill ECAL internal common blocks
C
      CALL ERDDAF(LRCONS,IRUNRC,IERR)
      IF (IERR.EQ.0) GO TO 998
C
C?  Expands ECAL geometry
C
      CALL ECDFRD
C
C?  Initialize neutral showers parameters
C
      CALL ECPASR
C
C?  Compute the stack width in radiation length units
C
      CALL ECLGEO
C
C? Gives the positions of sensitive plans
C
      CALL EFIECP
C
C     Get constant for small ECAL defect correction
C
      CALL ESCDEF
C
C?  Get dead storey information from DBASE or Run Header
C
      CALL EGETDS
C
C?  Read platine gains from data base if not on run header
C
      KAJOB = IW(NAMIND('AJOB'))
      KECMC = IW( NAMIND('ECMC') )
      IF ( KECMC.EQ.0 ) THEN
        IREADB = ALGTDB(LRCONS,'ECMC',IRUNRC)
        IF ( IREADB.EQ.0 .AND. KAJOB.EQ.0) THEN
          CALL RERROR('EINIRU',-4,'No ECMC bank found for this run')
        ELSE
          WRITE (LOUTRL,'(A)') '    ECMC taken from DataBase '
        ENDIF
      ELSE
        WRITE (LOUTRL,'(A)') '    ECMC taken from Run Header '
      ENDIF
C
C
C?  Get Correction factor for gas flow
C?   (Theta dependance of absolute calibration in barrel modules)
C
      CALL EGFCST
C
C?  Get E-flow constants from Dbase
C
      CALL EFLCST
C
C?   Get constants for photon estimators bank
C?   (EGTE EF4N EW1N EW2N EL1N EL2N)
C
      CALL EGACST(IER)
      IF ( IER.NE.0 ) THEN
        CALL RERROR('EINIRU',-5,
     &            'No photon estimators coeff. found for this run')
      ENDIF
C
C?  Get wire gain for dbase
C
      LWIR =ALGTDB(LRCONS,'EWGA',IRUNRC)
      CALL ERCUPI(IRUNRC)
C
C?  Get gain calibration constants :  ECCA bank
C?  Get Leakage correction banks
C
      DET ='EC'
      LIST ='ECILECCA'
#include "gtdbbk.h"
      KECCA = IW(NAMIND('ECCA'))
      KECIL = IW(NAMIND('ECIL'))
C
      IF (KECCA.EQ.0)
     &  CALL RERROR('EINIRU',-1,'No ECCA bank found for this run')
C
      IF (KECIL.EQ.0)
     &  CALL RERROR('EINIRU',2,'No ECIL bank found for this run')
C
      KECLK  = MDARD(IW,LRCONS,'ECLK',0)
      IF (KECLK.EQ.0)
     &  CALL RERROR('EINIRU',-2,'No ECLK bank found for this run')
C
C     Built ECHE banks = calibration banks used in reconstruction
C
      CALL ECHEDC
C
C   Get constants for t0 calculations EFIP and init wire analysis
C
      CALL EFPARD
C
      RETURN
C
  998 WRITE(LOUTRL,100)
  100 FORMAT(' EINIRU : Incorrect or missing ECAL bank on DAF - STOP')
      END
#endif
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@d8 2
a45 2
C     TEMPORARY FIX UNTIL ALEPHLIB IS REPAIRED
      CALL EFIX
@


1.2
log
@julia version 279
@
text
@a0 1
*DK einiru
@


1.1
log
@Initial revision
@
text
@d109 1
@


1.1.1.1
log
@import julia 300
@
text
@@
