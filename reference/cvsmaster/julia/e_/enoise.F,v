head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.57.02;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.01;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.02;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE ENOISE
C-----------------------------------------------------------------------
C! Monitor subroutine to identify noisy or shifted channels
CKEY ECAL CLEAN / JULIA USER
C        B. Bloch    September 89
C
C  Structure : SUBROUTINE
C           External references:WBANK,WDROP(BOS77)
C                               UCOPY (CERNLIB)
C           Comdecks references:BCS,BMACRO
C - Input  : none
C - Output : none
C
C - Banks  : input  - JDETDI (NEV) work banks
C            output - JNWORK       work bank with all ETDI banks ,
C                                  dropped at the end
C                   - JFWORK       work bank of means and sigmas (7 col)
C                                  IAD(teta,phi),Means(1:3),Sigmas(1:3)
C?
C!======================================================================
#ifndef DOC
      DIMENSION SUMX(3),SUMX2(3)
#include "etdipt.h"
C-----------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
      DATA SUMX /3*0./, SUMX2 /3*0./
#include "bmacro.h"
C-----------------------------------------------------------------------
C   Compute length of bank with all addresses from the JDETDI banks
      NLEN = LMHLEN
      DO 9 II = 1,NEV
        NLEN = NLEN + 4 * LROWS(JDETDI(II))
  9   CONTINUE
      CALL WBANK(IW,JNWORK,NLEN,*999)
      IW(JNWORK+LMHCOL) = 4
C   Store all addresses and energies from the work banks
      DO 10 II = 1,NEV
C
         JETDI = JDETDI(II)
         IF ( JETDI.GT.0) THEN
           NETDI = LROWS(JETDI)
           IF ( NETDI.GT.0) THEN
C
C-    Loop on ETDI
C
             DO 100 IETDI = 1,NETDI
                KETDI = KROW(JETDI,IETDI)
                KWORK = KNEXT(JNWORK)
                CALL UCOPY(IW(KETDI+1),IW(KWORK+1),LCOLS(JETDI))
                IW(JNWORK+LMHROW) = IW(JNWORK+LMHROW)+1
 100         CONTINUE
           ENDIF
C
         ENDIF
  10  CONTINUE
C-----------------------------------------------------------------------
C  Sort big bank by increasing addresses
      CALL SORTIQ (IW(JNWORK+3),LCOLS(JNWORK),LROWS(JNWORK),1)
C   Book final bank of means and sigmas per address
      IF ( JFWORK.NE.0) CALL WDROP(IW,JFWORK)
      CALL WBANK(IW,JFWORK,LMHLEN+7*LROWS(JNWORK),*999)
      IW(JFWORK+LMHCOL) = 7
C.. Compute mean and sigma for each of the different addresses
      IOLD = -1
      IFOI = 0
      DO 12 IROW = 1,LROWS(JNWORK)
        IAD = ITABL(JNWORK,IROW,1)
        IF (IAD.NE.IOLD) THEN
C   Compute means and sigmas of previous row if any
           IF ( IFOI.GT.0) THEN
C  Create this row in KFWORK bank
              KFWORK = KNEXT(JFWORK)
              IW(KFWORK+1) = IOLD
              DO 14 IS = 1,3
                SUMX(IS) = SUMX(IS)/NEV
                SUMX2(IS) = SUMX2(IS)/NEV
                SUMX2(IS) = SUMX2(IS)-SUMX(IS)*SUMX(IS)
                IF (SUMX2(IS).LE.0.) SUMX2(IS) = 0.
                SUMX2(IS) = SQRT(SUMX2(IS))
C  Fill means and sigmas for this row in KFWORK
                RW(KFWORK+1+IS) = SUMX(IS)
                RW(KFWORK+4+IS) = SUMX2(IS)
                SUMX(IS) =0.
                SUMX2(IS) = 0.
  14           CONTINUE
               IFOI = 0
               IW(JFWORK+LMHROW) = IW(JFWORK+LMHROW)+1
           ENDIF
        ENDIF
        DO 13 IS = 1,3
C  Update mean and sigma
          ENE =ITABL(JNWORK,IROW,IS+1)*1.E-03
          SUMX(IS) = SUMX(IS) + ENE
          SUMX2(IS) = SUMX2(IS) + ENE*ENE
  13    CONTINUE
        IFOI = IFOI + 1
        IOLD = IAD
 12   CONTINUE
C   Fill last row
      IF ( IFOI.GT.0) THEN
C  Create this row in KFWORK bank
         KFWORK = KNEXT(JFWORK)
         IW(KFWORK+1) = IOLD
         DO 15 IS = 1,3
           SUMX(IS) = SUMX(IS)/NEV
           SUMX2(IS) = SUMX2(IS)/NEV
           SUMX2(IS) = SUMX2(IS)-SUMX(IS)*SUMX(IS)
           IF (SUMX2(IS).LE.0.) SUMX2(IS) = 0.
           SUMX2(IS) = SQRT(SUMX2(IS))
C  Fill means and sigmas for this row in KFWORK
           RW(KFWORK+1+IS) = SUMX(IS)
           RW(KFWORK+4+IS) = SUMX2(IS)
           SUMX(IS) =0.
           SUMX2(IS) = 0.
  15     CONTINUE
         IFOI = 0
         IW(JFWORK+LMHROW) = IW(JFWORK+LMHROW)+1
      ENDIF
      LEN = LROWS(JFWORK)*LCOLS(JFWORK)+LMHLEN
      CALL WBANK(IW,JFWORK,LEN,*999)
  999 CALL WDROP (IW,JNWORK)
      RETURN
      END
#endif
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK enoise
@


1.1.1.1
log
@import julia 300
@
text
@@
