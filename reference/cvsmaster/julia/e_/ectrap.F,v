head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.14.53.58;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.17.51;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.17.52;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
 Modified Files:
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
@
text
@      SUBROUTINE ECTRAP(NETP1,XTRAP,ITRAP,XDER)
C-----------------------------------------------------------------------
C!     Extrapolates tracks in Ecal
C-
C-     Authors : M.N. Minard , M. Pepe       26/02/89
C-
C
C Input : NETP1          = ETP1 element of track to extrapolate
C Output: XTRAP(3,5)     = x,y,z coordinates of extrapolated point
C                          in each stack
C         ITRAP(1,5)     = number of storeys crossed by track per stack
C         ITRAP(I=2-5,5) = packed cell address of extrapolated
C                          points per stack
C         XDER (3,5)     = cosine directors of extrapolated track
C                          in each stack
C?
C!======================================================================
#ifndef DOC
#include "etp1jj.h"
#include "ecnmsk.h"
#include "alcons.h"
#include "bcs.h"
#include "ectcom.h"
#include "emskex.h"
      DIMENSION XTRAP(3,5),ITRAP(5,5),XDER(3,5)
      DIMENSION XPTRA(3),EVECT(7),EVECE(7),IEXTR(5)
      DIMENSION ITOW (3) , ITRIG(2)
      EXTERNAL EINTST
      LOGICAL  EINTST
#include "bmacro.h"
C
C-    Initialization counters & arrays
C
      CALL VZERO ( XTRAP,15 )
      CALL VZERO ( ITRAP,25 )
      CALL VZERO ( XDER ,15 )
      CALL VZERO ( IEXTR , 5 )
C
C-    Point to the track
C
      KETP1 = IW ( NAETP1 )
      JETP1 = KROW ( KETP1 , NETP1 )
      K = 1
C
C-    Check if track above momentum threshold
C
      IF ( RW(JETP1+JETPPT).LT.PMINC ) GO TO 10
C
C-    Set initial column & row address
C
      CALL EX3IJK(RW(JETP1+JETPX3),J,I,INK,NTA,IFLA,KSC,IMOD)
      IF ( .NOT.EINTST (I,J,INK) ) GOTO 10
C
C-    Determine extrapolation plane
C
      IF (I.EQ.0) THEN
        CALL UCOPY ( RW(JETP1+JETPX3),EVECT(1),3)
        R0 = SQRT ( EVECT(1)**2+EVECT(2)**2)
        CALL VSCALE( EVECT(1),1.04,EVECT(1),3)
        CALL EX3IJK(EVECT(1),J,I,INK,NTA,IFLA,KSC,IMOD)
        IF ( .NOT.EINTST (I,J,INK) ) GOTO 10
        IF (IFLA.NE.2) GO TO 10
      ENDIF
C
C-    Get storey baricenter
C
      CALL ESRBC('ALEPH',I,J,K,EVECE)
      ZEXTR = EVECE(3)
      REXTR = SQRT(EVECE(1)**2+EVECE(2)**2)
C
C-    Initialize starting point for extrapolation
C
      CALL UCOPY (RW(JETP1+JETPX3),EVECT(1),7)
C
C-    Extrapolation in electromagnetic calorimeter
C
 30   CONTINUE
C
C-    Confine extrapolation to detector volume
C-    Check subcomponent  KSC = 1 --> End cap z>0
C-                            = 2 --> Barrel
C-                            = 3 --> End cap z<0
C
      IF ( KSC.NE.2.AND.REXTR.LT.REMAX )     REXTR = REMAX
      IF ( KSC.EQ.2.AND.ABS(ZEXTR).LT.ZEMAX) ZEXTR = ZEMAX
     +    * (ZEXTR/ABS(ZEXTR))
      CALL AUHCYL(REXTR,ABS(ZEXTR),FILDEC,RW(JETP1+JETPCH)
     & ,EVECT,EVECE,IH)
C
      IF ( IH.EQ.0 ) THEN
C-    Not valid extrapolation
            GO TO 50
       ENDIF
C
C-    Convert extrapolated point into I,J,K
C
      CALL EX3IJK(EVECE,J,I,INK,NTA,IFLA,KSCN,IMOD)
      IF ( .NOT.EINTST (I,J,INK) ) GOTO 10
      IF (IFLA.GT.3)GO TO 48
C
      IF ( KSCN.EQ.KSC.AND.INK.NE.K) THEN
C-    Impact in the same module
C
          CALL RERROR('ECTRAP',1,'Extrapolation in wrong stack')
          GO TO 10
        ENDIF
C
C-    Store stack extrapolation
C
C-    Extrapolated point
        KSC = KSCN
        IEXTR ( K ) = IEXTR(K) + 1
        CALL UCOPY (EVECE(1),XTRAP(1,K),3)
C-    Direction cosines
        CALL UCOPY (EVECE(4),XDER (1,K),3)
C
C-    Calculate new impact
C
        CALL UCOPY ( EVECE(1),EVECT(1),6 )
C
C
C-    Prepare next point
C
      IF ( K.LT.3.AND.INK.NE.3) THEN
         K = K+1
C
C-    Calculate next point to extrapolate
C
         CALL ESRBC('ALEPH',I,J,K,EVECE)
         REXTR = SQRT(EVECE(1)**2+EVECE(2)**2)
         ZEXTR = EVECE(3)
         GO TO 30
      ENDIF
 50   CONTINUE
 48   CONTINUE
      CALL ECRTR ( NETP1 , ITRAP )
C
C
C-    Check extrapolation are coherent
C
      DO 52 IKJ = 1,3
      IF ( IEXTR(IKJ).EQ.0) ITRAP ( 1,IKJ ) = 0
 52   CONTINUE
C
C-    HCAL extrapolation ( no field )
C
      KH  = 1
 55   RHO =(RHCAL(1)+RHCAL(2))*0.5
      ZM  =(ZHCAL(1)+ZHCAL(2))*0.5
      CALL AULCYL(RHO,ZM,EVECT,EVECE,IH)
      IF (IH.EQ.0) GO TO 70
      CALL UCOPY (EVECE,XTRAP(1,KH+3),3)
      CALL UCOPY (EVECE(4),XDER(1,KH+3),3)
      CALL HFNDTW ( EVECE(1),'ALEPH',ITOW(2),ITOW(1),KT,ISUBC,IMOD,
     +              IPL,IDEAD)
      ITRAP ( 1,KH+3 ) = ITRAP (1,KH+3) + 1
      IF ( ITRAP (1,KH+3).LE.4 ) THEN
         IKH = 1+ ITRAP (1,KH+3)
         ITRAP ( IKH,KH+3 ) = (ITOW(2)-1)*256 + (ITOW(1)-1)*2 + KH-1
      ENDIF
      IF ( KH.EQ.1 ) GO TO 70
C
C-    Next stack
C
      KH = KH+1
      CALL UCOPY (EVECE(1),EVECT(1),3)
      GO TO 55
 70   CONTINUE
C
 10   CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK ectrap
@


1.1.1.1
log
@import julia 300
@
text
@@
