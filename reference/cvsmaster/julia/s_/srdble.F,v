head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.36.35;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.38;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.39;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE SRDBLE(IER)
C----------------------------------------------------------------------
C! Try double arm fit
C!
C!    Author:     H. Meinhard       06-Feb-1990
C!    Modified:   H. Meinhard       08-Mar-1990  (3)
C!
C!    Input:      - bank 'SWPA'
C!    Output:     - IER       /I    error code:
C!                                  0 = no error
C!                                  1 = input bank(s) missing
C!                                  2 = no space for new bank
C!                                 -1 = fit unsuccessful
C!                - banks 'SFTR','STCP'
C!
C!    Description
C!    ===========
C!    For combinations of sets of wire parallels on both
C!    sides which are selected by subroutine SRWPA2, try to make a
C!    common fit using fit routine SRFIT2. If the
C!    fit fails, try to drop one coordinate, and repeat the fit unless
C!    there are less than five coordinates on one side.
C----------------------------------------------------------------------
#ifndef DOC
#include "alcons.h"
#include "bcs.h"
#include "rlunit.h"
#include "sanamc.h"
#include "sftrjj.h"
#include "sgeomc.h"
#include "srecpc.h"
#include "stcpjj.h"
#include "swpajj.h"
C NTMAX is the maximum number of fitted track combinations
      PARAMETER (NTMAX = 100)
C IPOI: array for combinations of KPAR numbers out of NPAR numbers
C 1...NPAR; IMAX: array for combination with greatest chisquare prob.,
C NCN, KCN: arrays for coordinate numbers
      INTEGER IPOI(2*MLASG+1),IMAX(2*MLASG),NCN(2*MLASG),KCN(2*MLASG+1)
C NR is the number of fitted parameters
      PARAMETER (NR = 4)
      REAL XFIT(NR),COVX(NR,NR),XMAX(NR),COMAX(NR,NR)
      EXTERNAL PROB,PROXIM
#include "bmacro.h"
C----------------------------------------------------------------------
C link to input bank
      JSWPA = IW(NASWPA)
      IF (JSWPA .EQ. 0)                                     GOTO 901
C create bank for fitted tracks, and for pointers from tracks to
C coordinates
      CALL AUBOS('SFTR',0,LMHLEN+2*NTMAX*LSFTRA,JSFTR,IGARB)
      IF (JSFTR .EQ. 0 .OR. IGARB .EQ. 2)                   GOTO 902
      IF (IGARB .EQ. 1) JSWPA = IW(NASWPA)
      IW(JSFTR+LMHCOL) = LSFTRA
      CALL AUBOS('STCP',0,LMHLEN+2*NTMAX*LSTCPA,JSTCP,IGARB)
      IF (JSTCP .EQ. 0 .OR. IGARB .EQ. 2)                   GOTO 902
      IF (IGARB .EQ. 1) THEN
        JSWPA = IW(NASWPA)
        JSFTR = IW(NASFTR)
      ENDIF
      IW(JSTCP+LMHCOL) = LSTCPA
      IER = -1
C top of loop over wire parallel samples
      DO 400 IWPA1 = 1, LROWS(JSWPA), 2
        NPAR1 = ITABL(JSWPA,IWPA1,JSWPNP)
        IF (NPAR1 .LT. NPA2SR)                              GOTO 400
        DO 300 IP = 1, NPAR1
          NCN(IP) = ITABL(JSWPA,IWPA1,JSWPMC+IP-1) - 1
  300   CONTINUE
        IWPA2 = IWPA1 + 1
        NPAR2 = ITABL(JSWPA,IWPA2,JSWPNP)
        IF (NPAR2 .LT. NPA2SR)                              GOTO 400
        DO 310 IP = 1, NPAR2
          NCN(NPAR1+IP) = ITABL(JSWPA,IWPA2,JSWPMC+IP-1) - 1
  310   CONTINUE
        NPAR = NPAR1 + NPAR2
C we start with the full set of wire parallels
        KPAR = NPAR
C top of loop over wire parallels in fit
  320   CONTINUE
        IF (KPAR .LT. 2*NPA2SR .OR. KPAR .LT. NPAR-NDR2SR)  GOTO 400
        CHMAX = 0.
        CALL VZERO(IMAX,2*MLASG)
C top of loop over combinations of wire parallels
        IPOI(1) = 0
  330   CONTINUE
        CALL COMBI(IPOI,NPAR,KPAR)
        IF (IPOI(1) .EQ. 0)                                 GOTO 360
C enough wire parallels on both sides?
        KPAR1 = 0
        DO 340 I = 1, KPAR
          IF (IPOI(I) .LE. NPAR1) KPAR1 = KPAR1 + 1
  340   CONTINUE
        KPAR2 = KPAR - KPAR1
        IF (KPAR1 .LT. NPA2SR .OR. KPAR2 .LT. NPA2SR)       GOTO 330
C fill input vector for track fit subroutine
        CALL VZERO(KCN,2*MLASG+1)
        DO 350 I = 1, KPAR
          KCN(I) = NCN(IPOI(I))
  350   CONTINUE
C perform fit
        IFAIL = 0
        CALL SRFIT2(KCN,CHI2,XFIT,COVX,IFAIL)
C if track fit impossible, take next wire parallel sample. Otherwise,
C look for chisquare probability
        IF (IFAIL .EQ. 0) THEN
          IF (CHI2 .LE. 0.) CHI2 = 1.E-12
          CHIPR = PROB(CHI2,KPAR-NR)
          IF (CHIPR .GT. MAX(CHPRSR,CHMAX)) THEN
            CALL RVCPY(NR,XFIT(1),XFIT(2),XMAX(1),XMAX(2))
            CALL RMCPY(NR,NR,COVX(1,1),COVX(1,2),COVX(2,1),
     +        COMAX(1,1),COMAX(1,2),COMAX(2,1))
            CALL RVCPY(2*MLASG,IPOI(1),IPOI(2),IMAX(1),IMAX(2))
            CHMAX = CHIPR
            C2MAX = CHI2
          ENDIF
        ENDIF
C try next combination
        GOTO 330
C come here if there is no combination left
  360   CONTINUE
C if chisquare probability is not okay, try with one parallel less
        IF (IMAX(1) .EQ. 0) THEN
          KPAR = KPAR - 1
          GOTO 320
        ENDIF
C chisquare probability is okay. Fill candidate in bank
        IER = 0
        IF (LFRROW(JSFTR) .LT. 2) THEN
          CALL AUBOS('SFTR',0,IW(JSFTR)+2*NTMAX*LSFTRA,JSFTR,IGARB)
          IF (JSFTR .EQ. 0 .OR. IGARB .EQ. 2)               GOTO 902
          CALL AUBOS('STCP',0,IW(JSTCP)+2*NTMAX*LSTCPA,JSTCP,IGARB)
          IF (JSFTR .EQ. 0 .OR. IGARB .EQ. 2)               GOTO 902
          JSFTR = IW(NASFTR)
          JSTCP = IW(NASTCP)
          JSWPA = IW(NASWPA)
        ENDIF
        KSFTR = KNEXT(JSFTR)
        IW(KSFTR+JSFTNF) = KPAR - NR
        RW(KSFTR+JSFTC2) = C2MAX
        IW(KSFTR+JSFTQF) = 2
        RW(KSFTR+JSFTTH) = XMAX(1)
        RW(KSFTR+JSFTPH) = XMAX(2)
        RW(KSFTR+JSFTX0) = XMAX(3)
        RW(KSFTR+JSFTY0) = XMAX(4)
        N = 0
        DO 380 I = 1, NR
          DO 370 J = I, NR
            RW(KSFTR+JSFTCM+N) = COMAX(I,J)
            N = N + 1
  370     CONTINUE
  380   CONTINUE
        KSFT2 = KSFTR+LSFTRA
        IW(KSFT2+JSFTNF) = KPAR - NR
        RW(KSFT2+JSFTC2) = C2MAX
        IW(KSFT2+JSFTQF) = 2
        RW(KSFT2+JSFTTH) = PI - XMAX(1)
        RW(KSFT2+JSFTPH) = PROXIM(XMAX(2)+PI,PI)
        RW(KSFT2+JSFTX0) = XMAX(3)
        RW(KSFT2+JSFTY0) = XMAX(4)
        CALL RVCPY(10,RW(KSFTR+JSFTCM),RW(KSFTR+JSFTCM+1),
     +    RW(KSFT2+JSFTCM),RW(KSFT2+JSFTCM+1))
        IW(JSFTR+LMHROW) = LROWS(JSFTR) + 2
        KSTCP = KNEXT(JSTCP)
        KSTC2 = KSTCP + LSTCPA
        N1 = 0
        N2 = 0
        DO 390 I = 1, KPAR
          IF (IMAX(I) .LE. NPAR1) THEN
            N1 = N1 + 1
            IW(KSTCP+N1) = NCN(IMAX(I)) + 1
          ELSE
            N2 = N2 + 1
            IW(KSTC2+N2) = NCN(IMAX(I)) + 1
          ENDIF
  390   CONTINUE
        IW(JSTCP+LMHROW) = LROWS(JSTCP) + 2
C bottom of loop over wire parallel samples
  400 CONTINUE
C compress banks SFTR and STCP to actual size
      CALL AUBPRS('SFTRSTCP')
      GOTO 999
C----------------------------------------------------------------------
  901 IER = 1
      GOTO 999
  902 IER = 2
      CALL RERROR('SRDBLE',-IER,'No space for new bank SFTR or STCP')
      GOTO 999
  999 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK srdble
@


1.1.1.1
log
@import julia 300
@
text
@@
