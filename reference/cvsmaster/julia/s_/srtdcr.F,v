head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.38.01;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.44;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.45;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE SRTDCR
C----------------------------------------------------------------------
C! Create raw data SRTD from coordinates SCOO
C!
C!    Author:     H. Meinhard       20-Aug-1991
C----------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "rcurnt.h"
#include "rflags.h"
#include "rlunit.h"
#include "rparac.h"
#include "sanamc.h"
#include "scalbc.h"
#include "scoojj.h"
#include "sgeomc.h"
#include "srtdjj.h"
#include "bmacro.h"
C----------------------------------------------------------------------
      CALL BDROP(IW,'SFTRPSTRPSPO')
      CALL PSCOOJ('E-',IER)
      CALL BLIST(IW,'S-','SCOO')
      IF (IER .EQ. 2)                                       GOTO 901
      IF (IER .EQ. 1)                                       GOTO 999
      NHITB = 0
C print original SCOO bank if desired
      IF (JDBDRF(JULSA) .GE. 3) THEN
        WRITE (LOUTRL,'(/A)') ' ++++    SATR reconstruction: '//
     +    'Coordinates read in from POT:'
        CALL SCOOPR(LOUTRL)
      ENDIF
C link to SCOO bank
      JSCOO = IW(NASCOO)
      IF (JSCOO .EQ. 0)                                     GOTO 999
C create SRTD bank
      LEN = LMHLEN + LROWS(JSCOO) * LSRTDA
      CALL AUBOS('SRTD',0,LEN,JSRTD,IGARB)
      IF (JSRTD .EQ. 0 .OR. IGARB .EQ. 2)                   GOTO 902
      IF (IGARB .EQ. 1) JSCOO = IW(NASCOO)
      IW(JSRTD+LMHCOL) = LSRTDA
C loop over entries of SCOO bank
      DO 310 ICOR = 1, LROWS(JSCOO)
C get electronics address
        CALL SRTDCN(ICOR,ICRAT,ICARD,ITDCN)
        IF (ICRAT .EQ. -99) GOTO 310
        IR = 0
        CALL MVBITS(ICRAT,0,3,IR,21)
        CALL MVBITS(ICARD-1,0,5,IR,16)
        CALL MVBITS(ITDCN-1,0,4,IR,24)
C check whether we have already an entry from that channel
        DO 300 IRAW = 1, LROWS(JSRTD)
          IF (IBITS(IR,16,12) .EQ.
     +        IBITS(ITABL(JSRTD,IRAW,JSRTIR),16,12))        GOTO 310
  300   CONTINUE
C entry is not yet there. Create one
        KSRTD = KNEXT(JSRTD)
        IW(JSRTD+LMHROW) = LROWS(JSRTD) + 1
        IW(KSRTD+JSRTIR) = IR
C calculate distance of signal to wire
        ILAYE = ITABL(JSCOO,ICOR,JSCOLA)
        TT1   = RTABL(JSCOO,ICOR,JSCOTT)
        TT2   = RTABL(JSCOO,ICOR,JSCOTT+1)
        Z     = ZZERSG - ZOFFSG - FLOAT(MLAYSG-ILAYE)*ZDELSG
        DIST  = (TT2 - TT1) * Z / 2.0
C convert distance to TDC time
        IF (DIST .LE. TSPASC(1)) THEN
          TIME = TSTASC + 0.001*TDELSC
          GOTO 306
        ENDIF
        IF (DIST .GE. TSPASC(MPOISC)) THEN
          TIME = TSTASC + (REAL(MPOISC)-1.001) * TDELSC
          GOTO 306
        ENDIF
        DO 305 IPOIN = 1, MPOISC-1
          IF (TSPASC(IPOIN  ) .LE. DIST .AND.
     +        TSPASC(IPOIN+1) .GT. DIST) THEN
            APOIN = (           DIST - TSPASC(IPOIN)) /
     +              (TSPASC(IPOIN+1) - TSPASC(IPOIN)) +
     +              REAL(IPOIN-1)
            TIME = TSTASC + APOIN * TDELSC
            GOTO 306
          ENDIF
  305   CONTINUE
C conversion was not possible. Something must have been wrong!!!!!!
                                                            GOTO 903
  306   CONTINUE
        TIME = TOFFSC - TIME
        IF (.NOT.FMCRUN) THEN
C time corrections due to crate delays, singly equipped channels
C (reverses corrections done in SREALD)
          TIME = TIME - TCRASC(ICRAT)
          IF (ITDCN .GE. 3 .AND. ITDCN .LE. 6) TIME = TIME - TCHASC
        ENDIF
        IW(KSRTD+JSRTTR) = NINT(TIME * 1.0E12)
C calculate side, count hits on side B
        ISIDE = (ICARD-1)/12 + 1
        IF (ISIDE .EQ. 2) NHITB = NHITB + 1
  310 CONTINUE
C shrink SRTD to actual size, drop coordinates
      CALL AUBPRS('SRTD')
C write out run, event number if event is suited for our needs
      IF (NHITB .LT. 10) WRITE (LOUTRL,'('' >>> '',2I10)') IRUNRC,IEVTRC
      GOTO 999
C----------------------------------------------------------------------
  901 CALL RERROR('SRTDCR',1,'No space for unpacking of PSCO bank')
      GOTO 999
  902 CALL RERROR('SRTDCR',2,'No space for new SRTD bank')
      GOTO 999
  903 CALL RERROR('SRTDCR',3,'Conversion to drift time failed')
      GOTO 999
  999 CONTINUE
      CALL BDROP(IW,'SCOOPSCO')
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK srtdcr
@


1.1.1.1
log
@import julia 300
@
text
@@
