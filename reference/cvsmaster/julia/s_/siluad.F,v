head	1.4;
access;
symbols
	jul313_3:1.4
	jul313_2:1.4
	jul313_1:1.4
	jul313:1.4
	jul312_1:1.4
	jul312:1.4
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	2000.03.20.12.52.50;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.35.05;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.19.21;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.30;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.31;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Julia 312
@
text
@      REAL FUNCTION SILUAD(IM,ICUT)
C----------------------------------------------------------------------
C!  - Fill bank SILUM by increasing counts in requested row IM ,col ICUT
C!
C!
C!    Author:     B. Bloch-Devaux   11-May-1993
C!    Modified:   B. Bloch 18/05/94 take downscale factor into account
C!              Modified for Bunch train mode October 1994
C!              Modified to take into account energy dependence of the
C!              cross-section  November 1995
C!              Modified for Miniramp in 2K , March 2K:
C!   the first rows correspond to events excluding miniramp
C!   before 2000 next rows are counts per wagon
C!   in 2000 wagon 1 rows correspond to all events including miniramp
C!
C!    Input:      - IM : method number [1,2]
C!                - ICUT :cut number
C!    Output:
C!                - SILUAD =  0.  OK
C!                - SILUAD = -1.  Problem?
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "rcurnt.h"
#include "sinamc.h"
#include "sbhajj.h"
#include "silhjj.h"
      DIMENSION SIG(2),SIGV(2),SIGH(2),ERSY(2)
      INTEGER SIGTWA,ALGTWA
      LOGICAL XLUMOK
      EXTERNAL SIGTWA,ALGTWA,XLUMOK
      DATA SIG /  104.147 ,84.1019  /
      DATA SIGV/   38.9451,31.4237  /
      DATA SIGH/   39.0950,31.6103  /
      DATA ISDWN/   1 /
      DATA IFIR /0/
#include "bmacro.h"
      IF ( IFIR.EQ.0 ) THEN
         IFIR = 1
         NAKEVH = NAMIND('KEVH')
         KSBHA = IW ( NASBHA)
         IF ( KSBHA.GT.0) THEN
            DO 10 IMETHOD = 1 ,2
C   check the Energy corresponding to the given cross-section
              EGENE = 2.*RTABL(KSBHA,IMETHOD,JSBHEG)
              COE = (EGENE/RENLEP)**2
C   Correct cross-section for 1/s variation
              SIG(IMETHOD)  = COE*RTABL(KSBHA,IMETHOD,JSBHCS)
              SIGH(IMETHOD) = COE*RTABL(KSBHA,IMETHOD,JSBHXH)
              SIGV(IMETHOD) = COE*RTABL(KSBHA,IMETHOD,JSBHXV)
              ERSY(IMETHOD) = RTABL(KSBHA,IMETHOD,JSBHER)
 10         CONTINUE
         ENDIF
         KSILH = IW ( NASILH)
         IF ( KSILH.GT.0) ISDWN = ITABL(KSILH,1,JSILDW+1)
         NWA = ALGTWA(IRUNRC)
         IF ( NWA.GT.0) ISDWN = ISDWN * NWA
      ENDIF
C Event weight
      W = 1.
C  If coincidence trigger was downscaled , take it into account
      IF ( ISDWN.GT.1 ) W = FLOAT(ISDWN)
      KKEVH = IW(NAKEVH)
      IF(KKEVH.GT.0) W = RTABL(KKEVH,1,5)
      SILUAD =-1.
C Access SLUM bank
      JSLUM = IW(NASLUM)
      IF ( JSLUM.LE.0) GO TO 999
C get wagon number
      NWA = SIGTWA(IDUM)
      KPOI = KROW(JSLUM,2*NWA+IM)
      KPOIT= KROW(JSLUM,IM)
      IF ( ICUT.LE.9) THEN
         RW(KPOI+ICUT) = RW(KPOI+ICUT) + W
         IF (XLUMOK(DUM)) RW(KPOIT+ICUT) = RW(KPOIT+ICUT) + W
      ELSE IF ( ICUT.EQ.10 ) THEN
         RW(KPOI+10) = RW(KPOI+ICUT) + W/SIG(IM)
         RW(KPOI+13) = SQRT(RW(KPOI+10)*ISDWN/SIG(IM))
         RW(KPOI+14) = RW(KPOI+10)*ERSY(IM)
         IF (XLUMOK(DUM))THEN
            RW(KPOIT+10) = RW(KPOIT+ICUT)+ W/SIG(IM)
            RW(KPOIT+13) = SQRT(RW(KPOIT+10)*ISDWN/SIG(IM))
            RW(KPOIT+14) = RW(KPOIT+10)*ERSY(IM)
         ENDIF
      ELSE IF ( ICUT.EQ.11 ) THEN
         RW(KPOI+11) = RW(KPOI+ICUT)+ W/SIGV(IM)
         IF(XLUMOK(DUM))RW(KPOIT+11) = RW(KPOIT+ICUT) + W/SIGV(IM)
      ELSE IF ( ICUT.EQ.12 ) THEN
         RW(KPOI+12) = RW(KPOI+ICUT)+ W/SIGH(IM)
         IF(XLUMOK(DUM))RW(KPOIT+12) = RW(KPOIT+ICUT) + W/SIGH(IM)
      ENDIF
      SILUAD = 0.
 999  RETURN
      END
#endif
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d11 4
d31 2
a32 1
      EXTERNAL SIGTWA,ALGTWA
d76 1
a76 1
         RW(KPOIT+ICUT) = RW(KPOIT+ICUT) + W
d78 1
a78 1
         RW(KPOI+10) = RW(KPOI+ICUT)+ W/SIG(IM)
d81 5
a85 3
         RW(KPOIT+10) = RW(KPOIT+ICUT) + W/SIG(IM)
         RW(KPOIT+13) = SQRT(RW(KPOIT+10)*ISDWN/SIG(IM))
         RW(KPOIT+14) = RW(KPOIT+10)*ERSY(IM)
d88 1
a88 1
         RW(KPOIT+11) = RW(KPOIT+ICUT) + W/SIGV(IM)
d91 1
a91 1
         RW(KPOIT+12) = RW(KPOIT+ICUT) + W/SIGH(IM)
@


1.2
log
@julia version 279
@
text
@a0 1
*DK siluad
@


1.1
log
@Initial revision
@
text
@d9 3
d22 1
d27 2
d41 7
a47 3
              SIG(IMETHOD) = RTABL(KSBHA,IMETHOD,JSBHCS)
              SIGH(IMETHOD) = RTABL(KSBHA,IMETHOD,JSBHXH)
              SIGV(IMETHOD) = RTABL(KSBHA,IMETHOD,JSBHXV)
d53 2
d66 4
a69 1
      KPOI = KROW(JSLUM,IM)
d72 1
d75 1
a75 1
         RW(KPOI+13) = SQRT(RW(KPOI+10)/SIG(IM))
d77 3
d82 1
d85 1
@


1.1.1.1
log
@import julia 300
@
text
@@
