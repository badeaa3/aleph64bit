head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.34.43;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.29;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.30;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE SIGTDP
C------------------------------------------------------------------
C!  - Get dead pad information from the header (SDPD and SKPD banks)
C!  and create SMPD bank ( Missing pad bank)
C!
C!  AUTHOR  :  B. Bloch-Devaux   june 1992
C!
C!  BANKS:
C!    INPUT  : SDPD , SKPD
C!    OUTPUT : SMPD
C!    CREATED: SMPD
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "rlunit.h"
#include "rcurnt.h"
#include "sinamc.h"
#include "smpdjj.h"
#include "sdpdjj.h"
#include "skpdjj.h"
#include "rparac.h"
#include "rflags.h"
      INTEGER ALGTDB, GTSTUP
      EXTERNAL ALGTDB, GTSTUP
      DIMENSION IADD(16)
      PARAMETER ( IAMPX = 16384)
      PARAMETER ( IADMX = 28672)
      CHARACTER DET*2,LIST*4
      PARAMETER( NBK = 2 )
      CHARACTER*4 BKLIS (NBK)
C
      DATA DET / 'SI' /
C
C?   SDPD : SICAL permanent dead pads
C?   SKPD : SICAL killed pads in the Event builder
C
      DATA BKLIS /  'SDPD', 'SKPD' /
C
#include "bmacro.h"
C
      NTOTW  = LMHLEN
      NBAD   = 0
      NKILL  = 0
C
C?   bank present on run header ?
C
      IND = NDROP('SMPD',0)
      CALL BLIST(IW,'C+','SMPD')
C
      DO 20 IBK =  1,  NBK
        LIST  = BKLIS (IBK)
        KLIST = IW( NAMIND(LIST) )
        IF ( KLIST.EQ.0 ) THEN
#include "gtdbbk.h"
          KLIST = IW( NAMIND(LIST) )
          IF ( KLIST.EQ.0 ) THEN
            WRITE (LOUTRL,'(A)') ' No '//LIST//
     &        ' bank found for this run'
          ELSE
            WRITE (LOUTRL,'(A)') '    '//LIST//' taken from DataBase '
          ENDIF
        ELSE
          WRITE (LOUTRL,'(A)') '    '//LIST//' taken from Run Header '
C  if list found on file is empty or too short , try Data Base for SDPD
          IF (LIST.EQ.'SDPD' .AND. LROWS(KLIST).LE.8) THEN
#include "gtdbbk.h"
            WRITE (LOUTRL,
     &        '(A)') '    '//LIST//' had bad length ,try DB '
          ENDIF
        ENDIF
   20 CONTINUE
C
C
C?   Redefine bank indices
C
      KSDPD = IW( NAMIND('SDPD') )
      KSKPD = IW( NAMIND('SKPD') )
      IF ( KSDPD.GT.0) THEN
        IF (LCOLS(KSDPD).NE.1) NBAD   = LCOLS(KSDPD)
        IF (LCOLS(KSDPD).NE.1) WRITE(LOUTRL,'(A)') 'SDPD SWITCH COL-ROW'
        IF (LCOLS(KSDPD).EQ.1) NBAD   = LROWS(KSDPD)
      ENDIF
      IF ( KSKPD.GT.0) THEN
        IF (LCOLS(KSKPD).NE.1) NKILL = LCOLS(KSKPD)
        IF (LCOLS(KSKPD).NE.1) WRITE (LOUTRL,'(A)')'SKPD SWITCH COL-ROW'
        IF (LCOLS(KSKPD).EQ.1) NKILL = LROWS(KSKPD)
      ENDIF
      WRITE (LOUTRL,'(5X,I6,A)') NBAD  ,
     $                          '   Dead Elements (SDPD) Read In'
      WRITE (LOUTRL,'(5X,I6,A)') NKILL,
     $                          ' Killed Elements (SKPD) Read In'
C
C --- CREATE THE SMPD BANK
C
      NTOTW=LSMPDA*(NBAD  +NKILL)*16+LMHLEN
      CALL AUBOS('SMPD',0,NTOTW,KSMPD,IGARB)
      IF(IGARB.EQ.2) GOTO 997
      IW(KSMPD+LMHCOL)=LSMPDA
      IW(KSMPD+LMHROW)= 0
C
C IN CASE OF GARBAGE COLLECTION
C
      KSDPD = IW( NAMIND('SDPD') )
      IF(KSDPD.EQ.0) GO TO 15
      IF ( NBAD  .EQ.0 ) GO TO 15
C
      DO 10 IB=1,NBAD
        IADDS=ITABL (KSDPD,IB,JSDPAD)
        IF ( IADDS.GT.IADMX .OR. IADDS.LE.0) THEN
           WRITE ( LOUTRL,'(A)')  ' *** SIGTDP *** INVALID SDPD ADDRESS'
           GO TO 10
        ENDIF
        IADD(1) = IADDS
        NDA = 1
        IF (IADDS.GE.IAMPX) CALL SIDAMP(IADDS,IADD,NDA)
        DO 11 J = 1,NDA
          IND= KNEXT(KSMPD)
          IW(IND+JSMPAD)=IADD(J)
          IW(KSMPD+LMHROW)= IW(KSMPD+LMHROW)+1
   11   CONTINUE
   10 CONTINUE
C-
   15 CONTINUE
C! Read dead channels from  SKPD...
      KSKPD=IW(NAMIND('SKPD'))
      IF (KSKPD .EQ. 0) GOTO 12
      IF ( NKILL.EQ.0 ) GO TO 12
      KSKPD=IW(NAMIND('SKPD'))
C
      DO 13 IB=1,NKILL
        IADDS=ITABL (KSKPD,IB,JSKPAD)
        IF ( IADDS.GT.IADMX .OR. IADDS.LE.0) THEN
           WRITE ( LOUTRL,'(A)')  ' *** SIGTDP *** INVALID SKPD ADDRESS'
           GO TO 13
        ENDIF
        NDA = 1
        IADD(1) = IADDS
        IF (IADDS.GE.IAMPX) CALL SIDAMP(IADDS,IADD,NDA)
        DO 14 J = 1,NDA
          IND= KNEXT(KSMPD)
          IW(IND+JSMPAD)=IADD(J)
          IW(KSMPD+LMHROW)= IW(KSMPD+LMHROW)+1
   14   CONTINUE
   13 CONTINUE
C
   12 CONTINUE
C
      CALL AUBPRS ('SMPD')
      IF(JDBDRF(JULSI).GT.0) THEN
        KSMPD = IW(NAMIND('SMPD'))
        IF ( KSMPD.LE.0) GO TO 999
        WRITE (LOUTRL,1000)
        DO 21 II = 1 ,LROWS(KSMPD)
          IAD = ITABL(KSMPD,II,JSMPAD)
          CALL SIDCOZ(IAD,MODU,IPL,IPHI,IR)
          WRITE (LOUTRL,1001) IAD,MODU,IPL,IPHI,IR
   21   CONTINUE
      ENDIF
C
      GOTO 999
C
  997 CALL RERROR('SIGTDP',2,
     1  '   BOS memory full. SMPD bank not created')
C
  999 RETURN
 1000 FORMAT(5X,'missing pad address Module  Plane    Phi Radius')
 1001 FORMAT(14X,I10,4I7)
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK sigtdp
@


1.1.1.1
log
@import julia 300
@
text
@@
