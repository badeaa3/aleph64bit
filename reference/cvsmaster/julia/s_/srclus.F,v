head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.36.24;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.38;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.39;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE SRCLUS(IER)
C----------------------------------------------------------------------
C! Find clusters of fired wires
C!
C!    Author:     H. Meinhard       05-Jan-1988
C!    Modified:   H. Meinhard       06-Feb-1990  (3)
C!
C!    Output:     - IER       /I    error flag (.ne. 0 if error)
C!
C!    Description
C!    ===========
C!    For each sector in each orientation, look from the interaction
C!    point towards the fired wires and search for overlays of fired
C!    wires consisting of three or two fired wires. Hits in clusters
C!    with three fired wires are not used for clusters with two fired
C!    wires
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "rlunit.h"
#include "sanamc.h"
#include "sccpjj.h"
#include "sclujj.h"
#include "sgeomc.h"
#include "sparam.h"
#include "ssbpjj.h"
C     MCL = preliminary maximal number of clusters
      PARAMETER (MCL=200)
      INTEGER IBUFF(3,MGRSG*MSCSG,MADSP)
#include "bosext.h"
#include "bmacro.h"
C----------------------------------------------------------------------
C look whether bank SCLU exists; if yes, return
      IF (IW(NASCLU) .NE. 0)                                GOTO 999
C
C look whether bank SCOO exists; if no, return with error sts.
      IF (IW(NASCOO) .EQ. 0)                                GOTO 901
C
C if bank SSCP does not exist, create it
      IF (IW(NASSCP) .EQ. 0) CALL SSCPCR(IER)
      IF (IER .EQ. 2)                                       GOTO 902
C
C create banks for clusters, for pointers from clusters to coordinates
C and for pointers from orientations to clusters
      CALL AUBOS('SCLU',0,LMHLEN+MCL*LSCLUA,KSCLU,IGARB)
      IF (KSCLU .EQ. 0 .OR. IGARB .EQ. 2)                   GOTO 902
      IF (IGARB .EQ. 1) KSCLU = IW(NASCLU)
      IW(KSCLU+LMHCOL) = LSCLUA
C
      CALL AUBOS('SCCP',0,LMHLEN+MCL*LSCCPA,KSCCP,IGARB)
      IF (KSCCP .EQ. 0 .OR. IGARB .EQ. 2)                   GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSCLU = IW(NASCLU)
        KSCCP = IW(NASCCP)
      ENDIF
      IW(KSCCP+LMHCOL) = LSCCPA
C
      CALL AUBOS('SSBP',0,LMHLEN+2*MLAYSG/3*LSSBPA,KSSBP,IGARB)
      IF (KSSBP .EQ. 0 .OR. IGARB .EQ. 2)                   GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSCLU = IW(NASCLU)
        KSCCP = IW(NASCCP)
        KSSBP = IW(NASSBP)
      ENDIF
      IW (KSSBP+LMHCOL) = LSSBPA
      IW (KSSBP+LMHROW) = 2*MLAYSG/3
C
C top of loop over sides
      DO 310 ISIDE = 1, 2
C
C top of loop over orientations
        DO 300 IORIE = 1, 3
          IND = (ISIDE-1)*MLAYSG/3+IORIE
          IW(KROW(KSSBP,IND)+JSSBPB) = LROWS(KSCLU)+1
C
C fill address buffer
          CALL SRADDR(ISIDE,IORIE,IBUFF,IER)
          IF (IER .EQ. 1)                                   GOTO 904
C
C look for clusters of three fired wires
          CALL SR3CLU(ISIDE,IORIE,IBUFF,IER)
          IF (IER .NE. 0)                                   GOTO 903
          N3TOT = LROWS(KSCLU)
C
C look for clusters of two fired wires (layers 1, 2)
          CALL SR2CLU(ISIDE,IORIE,IBUFF,1,2,N3TOT,IER)
          IF (IER .NE. 0)                                   GOTO 903
C
C look for clusters of two fired wires (layers 2, 3)
          CALL SR2CLU(ISIDE,IORIE,IBUFF,2,3,N3TOT,IER)
          IF (IER .NE. 0)                                   GOTO 903
C
C look for clusters of two fired wires (layers 1, 3)
          CALL SR2CLU(ISIDE,IORIE,IBUFF,1,3,N3TOT,IER)
          IF (IER .NE. 0)                                   GOTO 903
C
C bottom of loop over orientations
          IW(KROW(KSSBP,IND)+JSSBPE) = LROWS(KSCLU)
  300   CONTINUE
C
C bottom of loop over sides
  310 CONTINUE
C
C compress SCLU and SCCP banks to actual size
      CALL AUBPRS('SCLUSCCP')
C
      GOTO 999
C----------------------------------------------------------------------
  901 IER = 1
      GOTO 999
  902 IER = 2
      CALL RERROR('SRCLUS',-IER,
     +  'No space for new bank SCLU, SCCP, SSBP, or SSCP')
      GOTO 999
  903 IER = 3
      CALL RERROR('SRCLUS',-IER,'Maximum number of clusters exceeded')
      GOTO 999
  904 IER = 4
      GOTO 999
  999 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK srclus
@


1.1.1.1
log
@import julia 300
@
text
@@
