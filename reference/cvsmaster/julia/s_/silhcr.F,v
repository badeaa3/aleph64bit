head	1.4;
access;
symbols
	jul313_3:1.4
	jul313_2:1.4
	jul313_1:1.4
	jul313:1.4
	jul312_1:1.4
	jul312:1.4
	jul311:1.4
	jul310_1:1.4
	jul310:1.4
	jul309_1:1.4
	jul309:1.4
	jul308_6:1.4
	jul308_5:1.4
	jul308_4:1.4
	jul308_3:1.4
	jul308_2:1.4
	jul308_1:1.4
	jul308:1.4
	jul307_4:1.4
	jul307_3:1.4
	jul307_2:1.4
	jul307_1:1.4
	jul307:1.4
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.11.07.11.19.35;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.34.56;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.19.19;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.29;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.30;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Prepare Julia 305
@
text
@      SUBROUTINE SILHCR(IER)
C----------------------------------------------------------------------
C!  - Create and fill the SILH banks
C!
C!    Author:     B. Bloch-Devaux   10-Feb-1993
C!     Adapt to new trigger banks - April 29 , 1994
C      Allow reprocessing POT to POT    October 1994   B. Bloch
C!              Modified for Bunch train mode October 1994
C!    Modified:    M.Cattaneo        06-Nov-1997
C!     Store XTBP,XTCN,X1SC name indices locally
C!
C!    Input:      - banks 'SIX2'                     from Sical
C!                        'LOLE'                     from Lcal
C!                        'XTBP','XTCN','XTOP','X1SC'from Trigger
C!                        'XTBP','XTCN','X1TT' 'X1HI' from 1994 onwards
C!                  from data base:
C!    Output:     - IER       /I    error flag:
C!                                  0 = no error
C!                                  1 = no space for new bank
C!                - bank  'SILH'
C?
C!======================================================================
#ifndef DOC
#include "alcons.h"
#include "bcs.h"
#include "silhjj.h"
#include "schujj.h"
#include "lolejj.h"
#include "rcurnt.h"
#include "rflags.h"
#include "rlunit.h"
#include "xtcnjj.h"
#include "xtopjj.h"
#include "x1scjj.h"
#include "sinamc.h"
#include "x1ttjj.h"
#include "x1hijj.h"
      PARAMETER(JXTBTT=1,JXTBCL=3,JXTBT1=4,JXTBT2=5,JXTBGC=6,JXTBLL=7,
     +          JXTBHT=8,JXTBHW=17,JXTBET=26,JXTBEW=35,JXTBLT=44,
     +          JXTBTE=48,JXTBIT=50,JXTBTP=53,JXTBTR=56,LXTBPA=58)

      INTEGER ALTRIG
      EXTERNAL ALTRIG
      PARAMETER ( MSKHVB = 14811135)
      PARAMETER ( MSKTEN =-2004933636)
      CHARACTER*4 RNAME,CHAINT
      INTEGER ISCAL(3)
      DATA ICALL /0/
#include "bmacro.h"
C----------------------------------------------------------------------
C initialization
      IF (ICALL .EQ. 0) THEN
        NLOLE = NAMIND('LOLE')
        NXTOP = NAMIND('XTOP')
        NX1TT = NAMIND('X1TT')
        NX1HI = NAMIND('X1HI')
        NAXTBP = NAMIND('XTBP')
        NAXTCN = NAMIND('XTCN')
        NAX1SC = NAMIND('X1SC')
        ICALL = 1
C  init integrated scalers counters
        CALL VZERO(ISCAL,3)
      ENDIF
C reset the error flag
      IER = 0
C   If reprocessing from POT to POT , SILH is fine just reset the
C   accepted method word
      IF ( FREPRO) THEN
         JSILH = IW(NASILH)
         IF (JSILH .GT.0) THEN
            KSILH = KROW(JSILH,1)
            IW ( KSILH+JSILAM ) = 0
         ENDIF
      ELSE
      IND = NDROP('SILH',0)
C create SILH bank
      CALL AUBOS('SILH',0,LMHLEN+LSILHA,JSILH,IGARB)
      IF (JSILH .EQ. 0 .OR. IGARB .EQ. 2)                   GOTO 902
      IW(JSILH+LMHCOL) = LSILHA
      IW(JSILH+LMHROW) = 1
C link to banks needed
      JLOLE = IW(NLOLE)
      JSIX2 = IW(NASIX2)
      JXTBP = IW(NAXTBP)
      JXTCN = IW(NAXTCN)
      JXTOP = IW(NXTOP)
      JX1SC = IW(NAX1SC)
      JX1TT = IW(NX1TT)
      JX1HI = IW(NX1HI)
C pointer to  SILH row
      KSILH = KROW(JSILH,1)
C GBX counter
      CALL LGNGBX(NGBX)
      IW(KSILH+JSILGB) = NGBX
C HV bit pattern
      IF (JXTCN .NE. 0) IW(KSILH+JSILHV) = ITABL(JXTCN,1,JXTCTR)
      IF (JXTCN .LE. 0) IW(KSILH+JSILHV) = MSKHVB
C trigger level 1 bit pattern
      IALTR = ALTRIG(IT1,IT2,IL2)
      JTRL1 = 0
      IF ( IALTR.GT.0 ) THEN
        JTRL1 = IT1
      ELSE IF (JXTBP .NE. 0) THEN
        JTRL1 = ITABL(JXTBP,1,JXTBT1)
      ENDIF
      IW(KSILH+JSILT1) = JTRL1
C trigger level 2 bit pattern
      IF ( IALTR.GT.0 ) IW(KSILH+JSILT2) = IL2
C trigger enable bit pattern
      JTREN = 0
      IF (JXTCN .NE. 0) JTREN = ITABL(JXTCN,1,JXTCTR+1)
      IF (JXTCN .LE. 0) JTREN = MSKTEN
      IW(KSILH+JSILTE) = JTREN
C LOLE information word
      IF (JLOLE .NE. 0) THEN
        IF (ITABL(JLOLE,1,JLOLER) .NE. 0) THEN
          DO 200 IL=1,11
            IF(ITABL(JLOLE,1,IL).NE.0) THEN
              IW(KSILH+JSILLO) = 1000*IL
              IF(IL.LE.5.OR.IL.GE.11) THEN
                IW(KSILH+JSILLO) = IW(KSILH+JSILLO)+ITABL(JLOLE,1,IL)
              ENDIF
            ENDIF
  200     CONTINUE
        ENDIF
      ELSE
        IW(KSILH+JSILLO) = -1
      ENDIF
C SIX2 information word
      IF (JSIX2 .NE. 0) THEN
        IW(KSILH+JSILS2) = ITABL(JSIX2,1,1)
      ENDIF
C downscale factors  for Sical triggers
      IF ( JXTOP.GT.0 ) THEN
        DO 300 I = 3,5
          IW(KSILH+JSILDW+I-3) =  ITABL(JXTOP,1,JXTODS+I)
  300   CONTINUE
      ELSEIF ( JX1TT.GT.0 ) THEN
        DO 301 I = 3,5
          IW(KSILH+JSILDW+I-3) =  ITABL(JX1TT,1,JX1TDS+I)
  301   CONTINUE
      ENDIF
C Scalers contents  for Sical triggers
      IF (JX1SC .NE. 0) THEN
        DO 400 J = 1,LROWS(JX1SC)
          RNAME = CHAINT(ITABL(JX1SC,J,JX1SIT))
C -- Bug fix
          IF(RNAME.EQ.'TRG ') RNAME = 'TRB '
          IF(RNAME.NE.'TRB ') GO TO 400
C SICAL scalers are 4th,5th,6th scalers,but packed in long words 2 and 3
          ITEST = ITABL(JX1SC,J,JX1SSV+1)
          ISCAL1 = ISHFT(ITEST,-16)
          ITEST = ITABL(JX1SC,J,JX1SSV+2)
          ISCAL2 = IAND(ITEST,65535)
          ISCAL3 = ISHFT(ITEST,-16)
          ISCAL(1) = ISCAL(1)+ISCAL1
          ISCAL(2) = ISCAL(2)+ISCAL2
          ISCAL(3) = ISCAL(3)+ISCAL3
 400    CONTINUE
      ELSEIF (JX1HI .NE. 0) THEN
        DO 401 J = 1,LROWS(JX1HI)
          RNAME = CHAINT(ITABL(JX1HI,J,JX1HNA))
          IF(RNAME.NE.'TPR ') GO TO 401
C SICAL scalers are 4th,5th,6th scalers,but packed in long words 2 and 3
          ITEST = ITABL(JX1HI,J,JX1HCO+1)
          ISCAL1 = ISHFT(ITEST,-16)
          ITEST = ITABL(JX1HI,J,JX1HCO+2)
          ISCAL2 = IAND(ITEST,65535)
          ISCAL3 = ISHFT(ITEST,-16)
          ISCAL(1) = ISCAL(1)+ISCAL1
          ISCAL(2) = ISCAL(2)+ISCAL2
          ISCAL(3) = ISCAL(3)+ISCAL3
 401    CONTINUE
      ENDIF
      IW(KSILH+JSILSC)   = ISCAL(1)
      IW(KSILH+JSILSC+1) = ISCAL(2)
      IW(KSILH+JSILSC+2) = ISCAL(3)
C Now append the wagon number ( or rather raw ADC info ) as 15th word
      IF ( LSILHA.GT.14) THEN
         KSCHU = IW(NASCHU)
         IWAG = 685
         IF ( KSCHU.GT.0) IWAG = ITABL(KSCHU,1,JSCHWI)
         IW(KSILH+JSILWI) = IWAG
      ENDIF
C bank filled
      ENDIF
      GOTO 999
C----------------------------------------------------------------------
  902 WRITE (IW(6),'(A)') ' SILHCR --> NO SPACE FOR NEW BANK SILH'
      IER = 1
  999 RETURN
      END
#endif
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d9 2
a31 1
#include "x1namc.h"
d57 3
a59 3
        IF (NAXTBP .LE.0 ) NAXTBP = NAMIND('XTBP')
        IF (NAXTCN .LE.0 ) NAXTCN = NAMIND('XTCN')
        IF (NAX1SC .LE.0 ) NAX1SC = NAMIND('X1SC')
@


1.2
log
@julia version 279
@
text
@a0 1
*DK silhcr
@


1.1
log
@Initial revision
@
text
@d8 2
d26 1
d29 1
a31 1
#include "xtbpjj.h"
d38 4
d66 9
d178 7
d186 1
@


1.1.1.1
log
@import julia 300
@
text
@@
