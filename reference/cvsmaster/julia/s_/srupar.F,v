head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	99.10.27.12.27.38;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.38.08;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.45;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.46;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@For julia 310
@
text
@      SUBROUTINE SRUPAR(IER)
C----------------------------------------------------------------------
C! For sides without tracks,
C! find parameters of clusters
C!
C!    Author:     H. Meinhard       29-Mar-1988
C!    Modified:   H. Meinhard       03-Jul-1989  (2)
C!    Modified:   D.Smith    991027 Double precision fixes for Linux
C!
C!    Output:     - IER       /I    error flag (0 = no error)
C!
C!    Description
C!    ===========
C!    For each side, look whether tracks are found; if not, get para-
C!    meters (theta, phi) of patches and their covariance matrix
C?
C!======================================================================
#ifndef DOC
#include "bcs.h"
#include "rlunit.h"
#include "sanamc.h"
#include "spatjj.h"
#include "spcpjj.h"
#include "ssppjj.h"
#include "sstpjj.h"
#include "ssupjj.h"
#include "sucpjj.h"
#include "supajj.h"
      DOUBLE PRECISION A,X,Y,XX,YY,XY,X1,Y1,X2,Y2,X3,Y3,ATRI,ACUT,
     +  XMEAN,YMEAN,XMEA2,YMEA2,XYMEA,COVXX,COVYY,COVXY,
     +  THETA,PHI,COVTT,COVPP,COVTP,
     +  D2,D3,D6,DPI,D2PI
      PARAMETER (D2=2D0,D3=3D0,D6=6D0,
     +           DPI=3.14159274101257324219D0,D2PI=2D0*DPI)
      INTEGER NTRK(2)
C ACUT is the minimal patch area, preliminarily set with DATA statmt
      DATA ACUT/2.D-9/
#include "bmacro.h"
C----------------------------------------------------------------------
C look whether bank SUPA exists; if yes, return
      IF (IW(NASUPA) .NE. 0)                                GOTO 999
C
C link to patches and tracks
      KSPAT = IW(NASPAT)
      KSPCP = IW(NASPCP)
      KSSPP = IW(NASSPP)
      IF (KSPAT.EQ.0 .OR. KSPCP.EQ.0 .OR. KSSPP.EQ.0)       GOTO 901
      KSSTP = IW(NASSTP)
      IF (KSSTP .NE. 0) THEN
        NTRK(1) = ITABL(KSSTP,1,JSSTPE) - ITABL(KSSTP,1,JSSTPB) + 1
        NTRK(2) = ITABL(KSSTP,2,JSSTPE) - ITABL(KSSTP,2,JSSTPB) + 1
      ELSE
        NTRK(1) = 0
        NTRK(2) = 0
      ENDIF
C
C create banks for patches, for pointers for patches to coordinates
C and for pointers from sides to patches
      CALL AUBOS('SUPA',0,LMHLEN+LROWS(KSPAT)*LSUPAA,KSUPA,IGARB)
      IF (KSUPA.EQ.0 .OR. IGARB.EQ.2)                       GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSPAT = IW(NASPAT)
        KSPCP = IW(NASPCP)
        KSSPP = IW(NASSPP)
        KSUPA = IW(NASUPA)
      ENDIF
      IW(KSUPA+LMHCOL) = LSUPAA
C
      CALL AUBOS('SUCP',0,LMHLEN+LROWS(KSPAT)*LSUCPA,KSUCP,IGARB)
      IF (KSUCP.EQ.0 .OR. IGARB.EQ.2)                       GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSPAT = IW(NASPAT)
        KSPCP = IW(NASPCP)
        KSSPP = IW(NASSPP)
        KSUPA = IW(NASUPA)
        KSUCP = IW(NASUCP)
      ENDIF
      IW(KSUCP+LMHCOL) = LSUCPA
C
      CALL AUBOS('SSUP',0,LMHLEN+2*LSSUPA,KSSUP,IGARB)
      IF (KSSUP.EQ.0 .OR. IGARB.EQ.2)                       GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSPAT = IW(NASPAT)
        KSPCP = IW(NASPCP)
        KSSPP = IW(NASSPP)
        KSUPA = IW(NASUPA)
        KSUCP = IW(NASUCP)
        KSSUP = IW(NASSUP)
      ENDIF
      IW(KSSUP+LMHCOL) = LSSUPA
      IW(KSSUP+LMHROW) = 2
C
C top of loop over sides
      DO 340 ISIDE = 1, 2
        IW(KROW(KSSUP,ISIDE)+JSSUPB) = LROWS(KSUPA) + 1
C
C if tracks found, no action
        IF (NTRK(ISIDE) .GT. 0)                             GOTO 330
C
C top of loop over patches on side
        DO 320 IPAT = ITABL(KSSPP,ISIDE,JSSPPB),
     +                ITABL(KSSPP,ISIDE,JSSPPE)
          A  = 0D0
          X  = 0D0
          Y  = 0D0
          XX = 0D0
          YY = 0D0
          XY = 0D0
          NC = ITABL(KSPAT,IPAT,JSPANC)
          X1 = DBLE(RTABL(KSPAT,IPAT,JSPAAX))
          Y1 = DBLE(RTABL(KSPAT,IPAT,JSPAAY))
C
C loop over constituent triangles
          DO 300 ITRI = 1, NC-2
            X2 = DBLE(RTABL(KSPAT,IPAT,JSPAAX+ITRI))
            Y2 = DBLE(RTABL(KSPAT,IPAT,JSPAAY+ITRI))
            X3 = DBLE(RTABL(KSPAT,IPAT,JSPAAX+ITRI+1))
            Y3 = DBLE(RTABL(KSPAT,IPAT,JSPAAY+ITRI+1))
            ATRI = ABS(X1*Y2+X2*Y3+X3*Y1-X1*Y3-X2*Y1-X3*Y2)/D2
            A = A + ATRI
            X = X + (X1+X2+X3)*ATRI/D3
            Y = Y + (Y1+Y2+Y3)*ATRI/D3
            XX = XX + (X1**2+X2**2+X3**2+X1*X2+X2*X3+X3*X1)*ATRI/D6
            YY = YY + (Y1**2+Y2**2+Y3**2+Y1*Y2+Y2*Y3+Y3*Y1)*ATRI/D6
            XY = XY + (X1*Y1+X2*Y2+X3*Y3+
     +            (X1*Y2+X2*Y3+X3*Y1+X1*Y3+X2*Y1+X3*Y2)/D2)*ATRI/D6
  300     CONTINUE
C
C if patch area is too small, go to next patch
          IF (A .LT. ACUT)                                  GOTO 320
C
C get cartesian parameters of patch
          XMEAN = X/A
          YMEAN = Y/A
          XMEA2 = XMEAN**2
          YMEA2 = YMEAN**2
          XYMEA = XMEAN*YMEAN
          COVXX = XX/A - XMEA2
          COVYY = YY/A - YMEA2
          COVXY = XY/A - XYMEA
C  Kill patch if covariance is zero -
C  May result from 2 identical points being used in triangle,
C  if so, should really be suppressed more directly earlier
          IF(COVXX.LT.1.D-10.OR.COVYY.LT.1.D-10) GO TO 320
C
C convert to sperical coordinates
          THETA = ATAN(SQRT(XMEA2+YMEA2))
          PHI   = MOD(DATAN2(YMEAN,XMEAN)+D2PI,D2PI)
          COVTT = (COVXX*XMEA2 + D2*COVXY*XYMEA + COVYY*YMEA2)/THETA**2
          COVTP = (-COVXX*XYMEA + COVXY*(XMEA2-YMEA2) + COVYY*XYMEA) /
     +            THETA**3
          COVPP = (COVXX*YMEA2 - D2*COVXY*XYMEA + COVYY*XMEA2)/THETA**4
          IF (ISIDE .EQ. 2) THETA = DPI-THETA
C
C fill in patch bank
          NP = ITABL(KSPAT,IPAT,JSPANW)
          IW(KNEXT(KSUPA)+JSUPNP) = NP
          RW(KNEXT(KSUPA)+JSUPC2) = 0.
          RW(KNEXT(KSUPA)+JSUPTH) = REAL(THETA)
          RW(KNEXT(KSUPA)+JSUPPH) = REAL(PHI)
          RW(KNEXT(KSUPA)+JSUPTT) = REAL(COVTT)
          RW(KNEXT(KSUPA)+JSUPTP) = REAL(COVTP)
          RW(KNEXT(KSUPA)+JSUPPP) = REAL(COVPP)
          DO 310 I2 = 1, NP
  310     IW(KNEXT(KSUCP)+I2) = ITABL(KSPCP,IPAT,I2)
          IW(KNEXT(KSUCP)+JSUCUP) = IPAT
          IW(KSUPA+LMHROW) = LROWS(KSUPA)+1
          IW(KSUCP+LMHROW) = LROWS(KSUCP)+1
C
C bottom of loop over patches on side
  320   CONTINUE
C
C bottom of loop over sides
  330   IW(KROW(KSSUP,ISIDE)+JSSUPE) = LROWS(KSUPA)
  340 CONTINUE
C
C compress SUPA and SUCP banks to actual size
      CALL AUBPRS('SUPASUCP')
C
      GOTO 999
C----------------------------------------------------------------------
  901 IER = 1
      GOTO 999
  902 IER = 2
      CALL RERROR('SRUPAR',-IER,
     +  'No space for new bank SUPA, SUCP, or SSUP')
      GOTO 999
  999 CONTINUE
      RETURN
      END
#endif
@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d8 1
a18 1
#include "alcons.h"
d33 2
a34 1
      PARAMETER (D2=2.,D3=3.,D6=6.,DPI=PI,D2PI=TWOPI)
d103 6
a108 6
          A = 0.
          X = 0.
          Y = 0.
          XX = 0.
          YY = 0.
          XY = 0.
d144 1
a144 1
          IF(COVXX.LT.1.E-10.OR.COVYY.LT.1.E-10) GO TO 320
d148 1
a148 1
          PHI   = MOD(ATAN2(YMEAN,XMEAN)+D2PI,D2PI)
@


1.1
log
@Initial revision
@
text
@a0 1
*DK srupar
@


1.1.1.1
log
@import julia 300
@
text
@@
