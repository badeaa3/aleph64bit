head	1.7;
access;
symbols
	jul313_3:1.7
	jul313_2:1.7
	jul313_1:1.7
	jul313:1.7
	jul312_1:1.7
	jul312:1.7
	jul311:1.7
	jul310_1:1.7
	jul310:1.7
	jul309_1:1.7
	jul309:1.7
	jul308_6:1.7
	jul308_5:1.7
	jul308_4:1.7
	jul308_3:1.7
	jul308_2:1.6
	jul308_1:1.6
	jul308:1.6
	jul307_4:1.6
	jul307_3:1.6
	jul307_2:1.6
	jul307_1:1.5
	jul307:1.5
	jul306_3:1.5
	jul306_2:1.5
	jul306_1:1.5
	jul306:1.5
	jul305_4:1.5
	jul305_3:1.5
	jul305_2:1.5
	jul305_1:1.5
	jul305:1.5
	jul304_3:1.4
	jul304_2:1.4
	jul304_1:1.4
	jul304:1.4
	jul303_7:1.4
	jul303_6:1.4
	jul303_5:1.4
	jul303_4:1.4
	jul303_3:1.4
	jul303_2_mc1:1.4
	jul303_2:1.4
	jul303_1_mc1:1.4
	jul303_1:1.4
	jul303_v:1.4
	jul303:1.4
	jul302_6:1.4
	jul302_5:1.4
	jul302_4:1.4
	jul302_3:1.4
	jul302_2:1.4
	jul302_1:1.3
	jul302:1.4
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.7
date	98.11.11.17.43.20;	author cattanem;	state Exp;
branches;
next	1.6;

1.6
date	98.06.05.12.46.01;	author cattanem;	state Exp;
branches;
next	1.5;

1.5
date	97.11.13.16.15.42;	author cattanem;	state Exp;
branches;
next	1.4;

1.4
date	97.03.20.17.26.24;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.35.18;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.19.26;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.31;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.32;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.7
log
@prepare julia 308.3
@
text
@      SUBROUTINE SIPREDA
C----------------------------------------------------------------------
C!  - SICAL Prepare data
C!
C!   Author   :- B. Bloch                     8-NOV-1991
C!
C?
C!    Modified:   B. Bloch 18/10/94
C!  - Allow to start from existing SPDA bank if SIDI not available
C!  - Apply overall E-scale factor from SECA in calibration mode only
C!    Modified:   B. Bloch 24/10/95
C!  - Apply a bunch dependant calibration for juke box mode in 95
C!  - apply only (!!) to 95 juke box mode B.Bloch March 97 
C!    Modified:   B. Bloch 27/10/97, june 98
C!  - Apply a bunch dependant calibration for delayed timimg for 1997 and
C!    later
C!  - Call SIPEDFX to fix pedestal problem if any B. Bloch 28/10/98
C?
C!======================================================================
#ifndef DOC
#include "secajj.h"
#include "secbjj.h"
#include "spdajj.h"
#include "sidijj.h"
#include "smpdjj.h"
#include "sinamc.h"
#include "sibun.h"
#include "rcurnt.h"
#include "rparac.h"
#include "bcs.h"
#include "rlunit.h"
#include "rflags.h"
      EXTERNAL NAMIND,GTSTUP
      EXTERNAL SILIST,SISWAP,SIGTWA,SIEVST,SIEPCR
      INTEGER  SILIST ,SISWAP ,SIGTWA ,GTSTUP
      DIMENSION P0COR(2),QCOR(2,4),PCOR(2)
      LOGICAL FIRST,CALIB
      LOGICAL TLCAL,TRAND,TPHYS,TSCAL(4),FAIL
      PARAMETER ( XSTIM0 = 272)
      DATA FIRST /.TRUE./ ,CALIB /.FALSE./
      DATA IRUNO/0/
#include "bmacro.h"
      IF (FIRST) THEN
        FIRST = .FALSE.
        EMIN = 0.
        NASECB = NAMIND('SECB')
        NASECT = NAMIND('SECT')
        CALIB = .TRUE.
        IF ( IW(NAMIND('NSCA')).GT.0 ) CALIB = .FALSE.
                IF ( IRUNRC.LT.2001 ) CALIB = .FALSE.
      ENDIF
      IF ( IRUNRC.NE.IRUNO ) THEN
C - calibration constants
        DO 10 IMOD=1,2
          PCOR(IMOD) = 1.
          P0COR(IMOD) = 1.
          QCOR(IMOD,1) = -1.
          ecorbun(imod,1)=1.
          ecorbun(imod,2)=1.
   10   CONTINUE
        KSECA = IW(NASECA)
      IF ( (KSECA.GT.0).AND.CALIB) THEN
          DO 11 IMOD =1,LROWS(KSECA)
            P0COR(IMOD) = RTABL(KSECA,IMOD,JSECPC)
   11     CONTINUE
        ENDIF
        ISET = GTSTUP('SI',IRUNRC)
        KSECT = IW(NASECT)
        if ( ISET.GE.7 ) then
           if ( (KSECT.GT.0).AND.CALIB) then
              do im=1,2
              do ibu=1,2
                ecorbun(im,ibu)= RTABL(KSECT,IBU,IM)
              enddo
              enddo
        endif
        endif
C   Special for 1995 : we want to have a calibrated energy for physics
C   triggers even if hold is not the same as ALEPH
C   if the calibration per bunch is available from the SECB bank, use it
C   if not , use the timing curve to find where we are ....
      IF ( ISET.GE.4) THEN
C - get bunch train configuration if any
        CALL SIJUKE(NSWAG,SDELAY,SDELTA)
        KSECB = IW(NASECB)
        IF (KSECB.GT.0) THEN
           DO 12 IMOD = 1,2
           DO 13 IBUN = 1,4
              QCOR(IMOD,IBUN) = RTABL(KSECB,IBUN,IMOD)
   13      CONTINUE
   12      CONTINUE
        ELSE
           ESINOM = SIEVST(SDELAY)
           ESINOM0 = SIEVST(XSTIM0)
        ENDIF
      ENDIF
      nbun = 1
      IF ( ISET.GE.7) call albunch(nbun)
      IF(JDBDRF(JULSI).GE.1) WRITE(LOUTRL,777) IRUNRC,P0COR
 777  FORMAT(' == SICAL : E PER MODULE FOR RUN  ',I8,2F8.4)
      IF (KSECB.GT.0) WRITE(LOUTRL,778) QCOR
 778  FORMAT(' == SICAL : E PER MODULE AND PER BUNCH ',2F8.4)
      IF (KSECT.GT.0) WRITE(LOUTRL,779) ecorbun
 779  FORMAT(' == SICAL : E PER MODULE AND PER BUNCH in 1997',2F8.4)
       IRUNO = IRUNRC
       ENDIF
C - Raw data
                KSIDI = IW(NASIDI)
                KSMPD = IW(NASMPD)
                IF (KSIDI.GT.0) THEN
C   Drop bank if already here
            IND = NDROP('SPDA',0)
                  NTPT = LROWS(KSIDI)
                  NPAD = 3*NTPT
                  IF (NPAD.LE.0) GO TO 999
                  NDEAD = 0
                  IF ( KSMPD.GT.0) NDEAD = LROWS(KSMPD)
C - Book prepared pad data
        LEN = LSPDAA*(NPAD+NDEAD)+LMHLEN
        CALL AUBOS('SPDA',0,LEN,KSPDA,IGARB)
        IF ( IGARB.EQ.2) GO TO 998
                  IF ( KSPDA.LE.0) GO TO 998
C        CALL BLIST(IW,'T+','SPDA')
        IW(KSPDA+LMHCOL) = LSPDAA
        IW(KSPDA+LMHROW) = NPAD
C - Get the calibration factor as :
C     overall P0COR ( MODULE )   from SECA
C     then correct for bunch calibration QCOR   from SECB
C     or from timing curve 1./SIESCA
        DO 14 IMOD = 1,2
           PCOR(IMOD) = P0COR(IMOD)
  14    CONTINUE
C    check trigger type
        ibune = 1
        IF ( ISET.EQ.4 ) THEN
C     1995 only
           CALL STRIGF(IRUNRC,TLCAL,TRAND,TPHYS,TSCAL,FAIL)
           IF ( TPHYS ) THEN
C    Get Aleph and Sical bunch numbers
             CALL RQBUNC(IABUN,INBU,NWAG,IQUA)
             ISBUN = SIGTWA(IDUM)
             XSTIM = SDELTA*(ISBUN-1)-(IABUN-1)*INBU+SDELAY
             IF ( NWAG.EQ.NSWAG)  THEN
                SIESCA = SIEVST(XSTIM)/ESINOM
             ELSE
                SIESCA = SIEVST(XSTIM)/ESINOM0
             ENDIF
             DO 15 IMOD =1,2
                IF (QCOR(IMOD,1).GT.0.) THEN
                   PCOR(IMOD) = P0COR(IMOD)*QCOR(IMOD,IABUN)
                ELSE
                   IF ( SIESCA.NE.0.) PCOR(IMOD) = P0COR(IMOD)/SIESCA
                ENDIF
  15         CONTINUE
           ENDIF
        ELSE IF ( ISET.GE.7 ) then
C   from  1997 onwards
          if ( nbun.eq.1) then
             ibune =1
          else if ( nbun.eq.2) then
C   the Sical and Aleph bunches may be different
             ibune = 0
          endif 
          if ( KSECT.GT.0) then
            if ( ibune.gt.0) then
              do 16 IMOD = 1,2
                 PCOR(IMOD) = PCOR(IMOD)*ecorbun(imod,ibune)
  16          continue
            endif
          endif
        ENDIF
        KSIDI = IW(NASIDI)
        NPA =0
        DO 20 IT = 1,NTPT
          KDI = KROW(KSIDI,IT)
          IAD = IW(KDI+JSIDAD)
          CALL SIDCOD(IAD,0,IMD,IST,IPH,IRD)
          IF ( IMD.LT.0 .OR. IST.LT.0 .OR. IPH.LT.0 .OR. IRD.LT.0 ) THEN
            CALL RERROR ('SIPREDA', -2, 'Invalid SIDI Address')
            GOTO 20
          ENDIF
          IOK = SISWAP(IMD,IST,IPH,IRD,IM2,IS2,IP2,IR2)
          IF ( IOK.NE.0) THEN
            IMD = IM2
            IST = IS2
            IPH = IP2
            IRD = IR2
          ENDIF
          DO 21 IA =1 ,3
            IE= IW(KDI+JSIDE1+IA-1)
            IOLD = IE
            call SIPEDFX(IRUNRC,IOLD,INEW)
            IE = INEW
                  RA = FLOAT(IE)/1000.
                  RE = FLOAT(IE)/1000.
                  IF (CALIB) RA = SIEPCR(RE,IMD,IST+IA-1,IPH,IRD)
                  IF ( RA*PCOR(IMD).LE.EMIN) GO TO 21
            NPA = NPA + 1
            CALL SIENCZ(IBD,IMD,IST+IA-1,IPH,IRD)
            IOV = 0
            IF ( IBITS(IAD,11+IA,1).NE.0) IOV = 1
            KDA = KROW(KSPDA,NPA)
            IW(KDA+JSPDAD) = IBD
                  RW(KDA+JSPDEN) = RA * PCOR(IMD)
                  RW(KDA+JSPDER) = RE
            IW(KDA+JSPDOV) = IOV
            IW(KDA+JSPDSC) = 0
            IW(KDA+JSPDSP) = 0
            IW(KDA+JSPDSM) = 0
   21     CONTINUE
   20   CONTINUE
C Now loop on dead pad adresses
        IF ( NDEAD.LE.0) GO TO 23
        DO 22 IT = 1 , NDEAD
          IAD = ITABL(KSMPD,IT,JSMPAD)
          INEW = SILIST(IAD,NPA)
          IF (INEW.EQ.0) THEN
            NPA = NPA+1
            KDA = KROW(KSPDA,NPA)
            IW(KDA+JSPDAD) = IAD
            RW(KDA+JSPDEN) = 0.
                  RW(KDA+JSPDER) = 0.
            IW(KDA+JSPDOV) = 0
            IW(KDA+JSPDSC) = 0
            IW(KDA+JSPDSP) = 0
            IW(KDA+JSPDSM) = IT
          ELSE
                  KDA = KROW(KSPDA,INEW)
                  RW(KDA+JSPDEN) = 0.
                  RW(KDA+JSPDER) = 0.
            IW(KDA+JSPDSM) = IT
          ENDIF
   22   CONTINUE
   23   CONTINUE
C Shrink SPDA to real size
        IW(KSPDA + LMHROW) = NPA
        LEN = NPA*LSPDAA + LMHLEN
        CALL AUBOS('SPDA',0,LEN,KSPDA,IGARB)
        IF(IGARB .EQ. 2)  GOTO 998
        ELSE
C recreate the (non)calibrated energy from raw energy and reset previous
C clustering
           KSPDA = IW(NASPDA)
           IF ( KSPDA.GT.0) THEN
              DO 24 IT = 1,LROWS(KSPDA)
                 RAW = RTABL(KSPDA,IT,JSPDER)
                 RCO = RAW
                 IF ( CALIB) THEN
                   IAD = ITABL(KSPDA,IT,JSPDAD)
                   CALL SIDCOZ(IAD,IMD,IST,IPH,IRD)
                   RCO = SIEPCR(RAW,IMD,IST,IPH,IRD)
                 ENDIF
                 RCO = RCO*PCOR(IMD)
                 KDA = KROW(KSPDA,IT)
                 RW(KDA+JSPDEN) = RCO
                 IW(KDA+JSPDSC) = 0
                 IW(KDA+JSPDSP) = 0
  24          CONTINUE
           ENDIF
        ENDIF
        IF(FDEBRF.AND.JDBDRF(JULSI).GE.2) CALL PRTABL('SPDA',0)
      GO TO 999
  998 CALL RERROR ('SIPREDA', -1, 'Unable to create SPDA')
  999 RETURN
      END
#endif
@


1.6
log
@Mods for julia 307.2
@
text
@d17 1
d191 3
@


1.5
log
@Sical fixes for 1997 timing
@
text
@d14 3
a16 2
C!    Modified:   B. Bloch 27/10/97
C!  - Apply a bunch dependant calibration for delayed timimg in 1997
d68 1
a68 1
        if ( ISET.EQ.7 ) then
d155 2
a156 2
        ELSE IF ( ISET.EQ.7 ) then
C     1997 only
@


1.4
log
@Brigitte corrections to jul302
@
text
@d14 2
d25 1
d31 1
a31 1
      EXTERNAL NAMIND
d33 1
a33 1
      INTEGER  SILIST ,SISWAP ,SIGTWA
d45 1
d56 2
d65 11
d80 1
a80 1
      IF ( IRUNRC.GT.35000) THEN
d95 3
a97 1
      IF(JDBDRF(JULSI).GE.1) WRITE(LOUTRL,777) IRUNRC,PCOR
d101 2
d132 3
a134 1
        IF ( (IRUNRC.GT.35000).AND.(IRUNRC.LT.40000)) THEN
d154 15
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d13 1
d111 1
a111 1
        IF ( IRUNRC.GT.35000) THEN
@


1.2
log
@julia version 279
@
text
@a0 1
*DK sipreda
d45 1
a45 1
                IF ( IRUNRC.NE.IRUNO ) THEN
d77 6
a82 8
                  IF(JDBDRF(JULSI).GE.1)
     &              WRITE(LOUTRL,
     &              '('' == SICAL : E PER MODULE FOR RUN  '',I8,2F8.4)')
     &              IRUNRC,PCOR
                  IF (KSECB.GT.0) WRITE(LOUTRL,
     &        '('' == SICAL : E PER MODULE AND PER BUNCH '',2F8.4)')QCOR
                  IRUNO = IRUNRC
                ENDIF
@


1.1
log
@Initial revision
@
text
@d9 5
d18 1
d29 3
a31 3
      EXTERNAL SIGACO,SILIST,SISWAP
      INTEGER SILIST ,SISWAP
      DIMENSION PCOR(2)
d33 2
d36 1
a36 1
                DATA IRUNO/0/
d41 1
d50 2
d54 1
a54 1
        IF (KSECA.GT.0) THEN
d56 1
a56 1
            PCOR(IMOD) = RTABL(KSECA,IMOD,JSECPC)
d59 19
d82 2
a85 2
C - Drop bank if already here
                IND = NDROP('SPDA',0)
d90 2
d105 29
d142 1
d199 21
a220 1
      ENDIF
@


1.1.1.1
log
@import julia 300
@
text
@@
