head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.37.05;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.41;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.42;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE SRFITF(IER)
C----------------------------------------------------------------------
C! Perform track fit
C!
C!    Author:     H. Meinhard       28-Jan-1988
C!    Modified:   H. Meinhard       21-Feb-1989 (2)
C!
C!    Output:     - IER       /I    error flag (0 = no error)
C!
C!    Description
C!    ===========
C!    For every combination of wire paralleles which corresponds
C!    to a patch (BOS bank SWPA), perform a straight line
C!    fit through the origin. If the chisquare probability is too bad,
C!    try with less wire paralleles
C?
C!======================================================================
#ifndef DOC
#include "alcons.h"
#include "bcs.h"
#include "rlunit.h"
#include "sanamc.h"
#include "scoojj.h"
#include "sgeomc.h"
#include "skanjj.h"
#include "skcpjj.h"
#include "srecpc.h"
#include "sskpjj.h"
#include "swpajj.h"
      REAL THRAW(MLASG),PHRAW(MLASG),SIG(MLASG),COVXY(2,2),COMAX(2,2)
C IPOI: array for combinations of KPAR numbers out of NPAR numbers
C 1...NPAR; IMAX: array for combination with greatest chisquare prob.
      PARAMETER (MPOI=MLASG+1)
      INTEGER IPOI(MPOI),IMAX(MLASG)
      EXTERNAL PROB
#include "bmacro.h"
#include "smacro.h"
C----------------------------------------------------------------------
C link to coordinates and wire parallele samples
      KSCOO = IW(NASCOO)
      KSWPA = IW(NASWPA)
      IF (KSCOO.EQ.0 .OR. KSWPA.EQ.0)                       GOTO 901
      NWPA = LROWS(KSWPA)
C
C create banks for track candidates, for pointers from track candidates
C to coordinates, for pointers from sides to track candidates
      CALL AUBOS('SKAN',0,LMHLEN+NWPA*LSKANA,KSKAN,IGARB)
      IF (KSKAN.EQ.0 .OR. IGARB.EQ.2)                       GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSCOO = IW(NASCOO)
        KSWPA = IW(NASWPA)
        KSKAN = IW(NASKAN)
      ENDIF
      IW(KSKAN+LMHCOL) = LSKANA
C
      CALL AUBOS('SKCP',0,LMHLEN+NWPA*LSKCPA,KSKCP,IGARB)
      IF (KSKCP.EQ.0 .OR. IGARB.EQ.2)                       GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSCOO = IW(NASCOO)
        KSWPA = IW(NASWPA)
        KSKAN = IW(NASKAN)
        KSKCP = IW(NASKCP)
      ENDIF
      IW(KSKCP+LMHCOL) = LSKCPA
C
      CALL AUBOS('SSKP',0,LMHLEN+2*LSSKPA,KSSKP,IGARB)
      IF (KSSKP.EQ.0 .OR. IGARB.EQ.2)                       GOTO 902
      IF (IGARB .EQ. 1) THEN
        KSCOO = IW(NASCOO)
        KSWPA = IW(NASWPA)
        KSKAN = IW(NASKAN)
        KSKCP = IW(NASKCP)
        KSSKP = IW(NASSKP)
      ENDIF
      IW(KSSKP+LMHCOL) = 2
      IW(KSSKP+LMHROW) = 2
C
C get sigma in theta
      SIGM = SIGMSR / (ZZERSG-ZOFFSG-FLOAT(MLAYSG)*ZDELSG/2.)
C
C top of loop over wire parallele samples
      DO 350 IWPA = 1, NWPA
        NPAR = ITABL(KSWPA,IWPA,JSWPNP)
C
C we start with the full set of wire parallels
        KPAR = NPAR
C
C top of loop over number of wire parallels in fit
  300   CONTINUE
        IF (KPAR .LT. NPARSR)                             GOTO 350
        CHMAX = 0.
        CALL VZERO(IMAX,MLAYSG)
C
C top of loop over combinations of wire parallels
        IPOI(1) = 0
  310   CONTINUE
        CALL COMBI(IPOI,NPAR,KPAR)
        IF (IPOI(1) .EQ. 0)                               GOTO 330
C
C fill input vectors for track fit subroutine
        DO 320 IPAR = 1, KPAR
          IADR = ITABL(KSWPA,IWPA,JSWPMC+IPOI(IPAR)-1)
          ICOR = IADR/2
          ITHE = MOD(IADR,2)
          THRAW(IPAR) = RTABL(KSCOO,ICOR,JSCOTT+ITHE)
          PHRAW(IPAR) = PHIXXX(ITABL(KSCOO,ICOR,JSCOLA),
     +        ITABL(KSCOO,ICOR,JSCOSC))
          SIG(IPAR) = SIGM
  320   CONTINUE
C
C perform straight line fit
        CALL SRFIT0(KPAR,THRAW,PHRAW,SIG,AX,AY,CHISQ,COVXY,IER)
C
C if track fit impossible, take next wire parallele sample. Otherwise,
C look for chisquare prob.
        IF (IER .NE. 0) THEN
          IER = 0
        ELSE
          IF (CHISQ .LE. 0.) CHISQ = 1.E-12
          CHIPR = PROB(CHISQ,KPAR-2)
          IF (CHIPR .GT. MAX(CHPRSR,CHMAX)) THEN
            AXMAX = AX
            AYMAX = AY
            CHMAX = CHIPR
            C2MAX = CHISQ
            CALL RMCPY(2,2,COVXY(1,1),COVXY(1,2),COVXY(2,1),
     +        COMAX(1,1),COMAX(1,2),COMAX(2,1))
            CALL UCOPY(IPOI,IMAX,KPAR)
          ENDIF
        ENDIF
C
C next combination
        GOTO 310
C
C come here if there is no combination left
  330   CONTINUE
C
C if chisquare prob. is not okay, try with one parallel less
        IF (IMAX(1) .EQ. 0) THEN
          KPAR = KPAR - 1
          GOTO 300
        ENDIF
C
C chisquare probability is okay. Fill candidate in bank
        IW(KNEXT(KSKAN)+JSKASI) = ITABL(KSWPA,IWPA,JSWPSI)
        IW(KNEXT(KSKAN)+JSKANP) = KPAR
        RW(KNEXT(KSKAN)+JSKAC2) = C2MAX
        RW(KNEXT(KSKAN)+JSKAAX) = AXMAX
        RW(KNEXT(KSKAN)+JSKAAY) = AYMAX
        RW(KNEXT(KSKAN)+JSKAXX) = COMAX(1,1)
        RW(KNEXT(KSKAN)+JSKAXY) = COMAX(1,2)
        RW(KNEXT(KSKAN)+JSKAYY) = COMAX(2,2)
        DO 340 IPAR = 1, KPAR
          IW(KNEXT(KSKCP)+JSKCKC+IPAR-1) =
     +      ITABL(KSWPA,IWPA,JSWPMC+IMAX(IPAR)-1)
  340   CONTINUE
        IW(KNEXT(KSKCP)+JSKCKM) = IWPA
        IW(KSKAN+LMHROW) = LROWS(KSKAN)+1
        IW(KSKCP+LMHROW) = LROWS(KSKCP)+1
C
C bottom of loop over wire parallele samples
  350 CONTINUE
C
C compress SKAN and SKCP banks to actual size
      CALL AUBPRS('SKANSKCP')
C
C fill the SSKP bank
      IW(KROW(KSSKP,1)+JSSKPB) = 1
      IW(KROW(KSSKP,2)+JSSKPE) = LROWS(KSKAN)
C look for the first track candidate from side two
      KSKAN = IW(NASKAN)
      NFTWO = LROWS(KSKAN) + 1
      DO 360 IKAN = 1, LROWS(KSKAN)
        IF (ITABL(KSKAN,IKAN,JSKASI) .EQ. 2) THEN
          NFTWO = IKAN
          GOTO 370
        ENDIF
  360 CONTINUE
  370 CONTINUE
      IW(KROW(KSSKP,1)+JSSKPE) = NFTWO - 1
      IW(KROW(KSSKP,2)+JSSKPB) = NFTWO
C
      GOTO 999
C----------------------------------------------------------------------
  901 IER = 1
      GOTO 999
  902 IER = 2
      CALL RERROR('SRFITF',-IER,
     +  'No space for new bank SKAN, SKCP, or SSKP')
      GOTO 999
  999 CONTINUE
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK srfitf
@


1.1.1.1
log
@import julia 300
@
text
@@
