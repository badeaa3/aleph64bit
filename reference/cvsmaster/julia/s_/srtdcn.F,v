head	1.2;
access;
symbols
	jul313_3:1.2
	jul313_2:1.2
	jul313_1:1.2
	jul313:1.2
	jul312_1:1.2
	jul312:1.2
	jul311:1.2
	jul310_1:1.2
	jul310:1.2
	jul309_1:1.2
	jul309:1.2
	jul308_6:1.2
	jul308_5:1.2
	jul308_4:1.2
	jul308_3:1.2
	jul308_2:1.2
	jul308_1:1.2
	jul308:1.2
	jul307_4:1.2
	jul307_3:1.2
	jul307_2:1.2
	jul307_1:1.2
	jul307:1.2
	jul306_3:1.2
	jul306_2:1.2
	jul306_1:1.2
	jul306:1.2
	jul305_4:1.2
	jul305_3:1.2
	jul305_2:1.2
	jul305_1:1.2
	jul305:1.2
	jul304_3:1.2
	jul304_2:1.2
	jul304_1:1.2
	jul304:1.2
	jul303_7:1.2
	jul303_6:1.2
	jul303_5:1.2
	jul303_4:1.2
	jul303_3:1.2
	jul303_2_mc1:1.2
	jul303_2:1.2
	jul303_1_mc1:1.2
	jul303_1:1.2
	jul303_v:1.2
	jul303:1.2
	jul302_6:1.2
	jul302_5:1.2
	jul302_4:1.2
	jul302_3:1.2
	jul302_2:1.2
	jul302_1:1.2
	jul302:1.2
	jul285_1:1.2
	jul285:1.2
	jul284_1:1.2
	jul284:1.2
	jul283_1:1.2
	jul283:1.2
	jul282_1:1.2
	jul282:1.2
	jul281_3:1.2
	jul281_2:1.2
	jul281_1:1.2
	jul281:1.2
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.12.15.37.59;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.44;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.45;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@      SUBROUTINE SRTDCN(ICOOR,ICRAT,ICARD,ITDCN)
C----------------------------------------------------------------------
C! Calculate electronics address of coordinate
C!
C!    Author:     H. Meinhard       20-Nov-1989
C!    Modified:   H. Meinhard       26-Aug-1991
C!                correct for miscablings etc.
C!
C!    Input:      - ICOOR     /I    # of coordinate in SCOO
C!    Output:     - ICRAT     /I    crate # [1,3,-99 for error]
C!                - ICARD     /I    card #  [1,24]
C!                - ITDCN     /I    TDC #   [1,16]
C!
C!    Common block SGEOMC is required.
C----------------------------------------------------------------------
#ifndef DOC
C----------------------------------------------------------------------
#include "bcs.h"
#include "rcurnt.h"
#include "sanamc.h"
#include "scoojj.h"
#include "sgeomc.h"
#include "swtujj.h"
C     KGR(sector,oring_mode): no of tdc card within group of 4 cards
C     LGR(sector,oring_mode): 1 if first ored sector, 2 if second
      PARAMETER (NSEC=8,NOR=3)
      INTEGER KGR(NSEC,NOR), LGR(NSEC,NOR),ITDC(16),ICAR(24)
      DATA KGR /1,1,2,2,3,3,4,4, 1,2,1,2,3,4,3,4, 1,2,2,1,3,4,4,3/
      DATA LGR /1,2,1,2,1,2,1,2, 1,1,2,2,1,1,2,2, 1,1,2,2,1,1,2,2/
      DATA ITDC / 8,9,10,11,12,13,14,15, 0,1,2,3,4,5,6,7 /
      DATA ICAR / 12,13,14,15,16,17,18,19,20,21,22,23,
     +             0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11 /
#include "bmacro.h"
C----------------------------------------------------------------------
C
C---------- link to coordinates; if they don't exist, or specified coor-
C           dinate does not exist, return with error status
C
      JSCOO = IW(NAMIND('SCOO'))
      IF (JSCOO .EQ. 0)                                     GOTO 901
      IF (ICOOR .LT. 1 .OR. ICOOR .GT. LROWS(JSCOO))        GOTO 901
C
C
C---------- get side, layer, sector, and wire of coordinate
C
      ISIDE = ITABL(JSCOO,ICOOR,JSCOSI)
      ILAYE = ITABL(JSCOO,ICOOR,JSCOLA)
      ISECT = ITABL(JSCOO,ICOOR,JSCOSC)
      TANTH = (RTABL(JSCOO,ICOOR,JSCOTT)+RTABL(JSCOO,ICOOR,JSCOTT+1))/2.
      RWIRE = TANTH * (ZZERSG - ZOFFSG - REAL(MLAYSG-ILAYE)*ZDELSG)
      IWIRE = INT((RWIRE-RZERSG)/RDELSG) + 1
C correct for wrong cabling (see routine SRWIRE)
      JSWTU = IW(NASWTU)
      IF (JSWTU .NE. 0) THEN
        DO 300 IENT = 1, LROWS(JSWTU)
          IF (ISIDE .EQ. ITABL(JSWTU,IENT,JSWTSI) .AND.
     +        ILAYE .EQ. ITABL(JSWTU,IENT,JSWTLA) .AND.
     +        ISECT .EQ. ITABL(JSWTU,IENT,JSWTSC)) THEN
            IWIRE = MWIRSG + 1 - IWIRE
            GOTO 301
          ENDIF
  300   CONTINUE
  301   CONTINUE
      ENDIF
C
C---------- get electronics channel
C
      MODEO = MDORSG(ILAYE) - 20
      IF (MODEO .LT. 1 .OR. MODEO .GT. 3)                   GOTO 901
      IF (IWIRE .EQ. 1 .OR. IWIRE .EQ. 2) THEN
        ITDCN = IWIRE
      ELSE IF (IWIRE .EQ. 3) THEN
        ITDCN = 2 + LGR(ISECT,MODEO)
      ELSE IF (IWIRE .EQ. 4) THEN
        ITDCN = 4 + LGR(ISECT,MODEO)
      ELSE IF (IWIRE .GE. 5) THEN
        ITDCN = IWIRE + 2
      ENDIF
      ICRAT = MOD(ILAYE-1,MCRASG) + 1
      ICARD = (ISIDE-1) * MCRDSG/2 + ((ILAYE-1)/MCRASG)*MSECSG/2 +
     +  KGR(ISECT,MODEO)
C correct for wrong cabling (see routine SREALD)
      IF (.NOT.FMCRUN .AND. IRUNRC .LE. 2666) THEN
        IF (ISIDE .EQ. 2) ITDCN = ITDC(ITDCN) + 1
      ENDIF
      IF (IRUNRC .GE. 5354 .AND. IRUNRC .LE. 5488) THEN
        IF (ICRAT .EQ. 1) ICARD = ICAR(ICARD) + 1
      ENDIF
      IF (IRUNRC .GT. 10000) THEN
        IF (ICRAT .EQ. 2 .AND. ICARD .EQ. 17) ITDCN = ITDC(ITDCN) + 1
      ENDIF
C
      GOTO 999
C----------------------------------------------------------------------
  901 ICRAT = -99
      GOTO 999
  999 CONTINUE
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK srtdcn
@


1.1.1.1
log
@import julia 300
@
text
@@
