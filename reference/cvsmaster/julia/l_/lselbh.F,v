head	1.5;
access;
symbols
	jul313_3:1.5
	jul313_2:1.5
	jul313_1:1.5
	jul313:1.5
	jul312_1:1.5
	jul312:1.5
	jul311:1.4
	jul310_1:1.4
	jul310:1.4
	jul309_1:1.4
	jul309:1.4
	jul308_6:1.4
	jul308_5:1.4
	jul308_4:1.4
	jul308_3:1.4
	jul308_2:1.4
	jul308_1:1.4
	jul308:1.4
	jul307_4:1.4
	jul307_3:1.4
	jul307_2:1.4
	jul307_1:1.4
	jul307:1.4
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.4
	jul304_2:1.4
	jul304_1:1.4
	jul304:1.4
	jul303_7:1.4
	jul303_6:1.4
	jul303_5:1.4
	jul303_4:1.4
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.5
date	2000.03.20.12.52.48;	author cattanem;	state Exp;
branches;
next	1.4;

1.4
date	97.07.04.08.11.25;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.06.03.10.27.01;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.25.44;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.57;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.58;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Julia 312
@
text
@      SUBROUTINE LSELBH(ITYPE)
C-----------------------------------------------------------------------
C! Bhabha selection algorithm
C!
C!   Author   : P. H. Hansen  890701
C!   Modified :- E. Lancon             10-APR-1991
C!                    Use ALTRIG to Access Trigger bits
C!   Modified : P. H. Hansen           01-MAY-1996
C!                    Improved debug print. Fix reference energy.
C!   Modified : P. H. Hansen           24-JUN-1997
C!                    Fix SFRAC for methods < 9
C!                    
C!
C!     Input  :  ITYPE           Trigger type:
C!                               2: HI SINGLE Trigger
C!                               3: VH SINGLE Trigger
C!                               4: LOW-LOW Trigger
C!                               5: HIGH-LOW Trigger
C!              'BHAB'           Bhabha selection criteria
C!     Output : 'LUMI'           Selected Bhabha event statistics
C!   Description :
C!   ===========
C?      Decide which side has the smaller fiducial area.
C?      For each requested measurement method require succesively:
C?         At least one cluster over high threshold.
C?         Both clusters over low threshold.
C?         Coplanarity.
C?         Both clusters be contained in their proper fiducial areas.
C?      Update a counter in LUMI after each passed cut.
C?      In SATR region count events with tracks
C?         and events with tracks in the fiducial area.
C?
C-----------------------------------------------------------------------
C
#ifndef DOC
#include "rconds.h"
#include "bcs.h"
#include "rflags.h"
#include "lcnamc.h"
#include "lidtjj.h"
#include "lifljj.h"
#include "lumijj.h"
#include "bhabjj.h"
#include "alcons.h"
#include "rcurnt.h"
      INTEGER ALTRIG
      EXTERNAL ALTRIG
      LOGICAL FSATR,FTRAC,BTEST,XVH
      PARAMETER (NLBIT=5)
      DIMENSION LVHBT(NLBIT),LVHTW(NLBIT)
      CHARACTER*8 VHNAM
      DATA VHNAM /'VH_SING'/
      DATA LRUN  /-9999/
#include "bmacro.h"
C---------------------------------------------------------------------
C     IF(ITYPE.LE.2.OR.ITYPE.GE.6)                  GOTO 999
      KBHAB = IW(NABHAB)
      IF(KBHAB.LE.0)                                GOTO 999
      NMETH = LROWS(KBHAB)
      IF(NMETH.LE.0)                                GOTO 999
      KLUMI = IW(NALUMI)
      IF(KLUMI.LE.0)                                GOTO 999
C
C Select largest electron candidate clusters on the A and B side
      KLIDT = IW(NALIDT)
      IF(KLIDT.LE.0)                                GOTO 999
      NIDT = LROWS(KLIDT)
      IF(NIDT.LE.0)                                 GOTO 999
      KLIFL = IW(NALIFL)
      EA = 0.
      EB = 0.
      IA=0
      IB=0
      DO 30 I=1,NIDT
        EC = RTABL(KLIDT,I,JLIDEC)
        TH = RTABL(KLIDT,I,JLIDTC)
        IF(TH.LT.PIBY2.AND.EC.GT.EA) THEN
          EA = EC
          IA = I
        ENDIF
        IF(TH.GT.PIBY2.AND.EC.GT.EB) THEN
          EB = EC
          IB = I
        ENDIF
   30 CONTINUE
C
      IF(IA.EQ.0.OR.IB.EQ.0)                        GO TO 999
C
C Take beam energy
      EBEAM = ENERRC/2.
C
C Event weight
      W = 1.
      KKEVH = IW(NAMIND('KEVH'))
      IF(KKEVH.GT.0) W = RTABL(KKEVH,1,5)
C
C Acoplanarity
      PHA = RTABL(KLIDT,IA,JLIDPC)
      PHB = RTABL(KLIDT,IB,JLIDPC)
      DPHI = ABS(PHA-PHB)
      DPHI = AMIN1(DPHI,TWOPI-DPHI)
C
C Define small and large fiducial areas
      K1 = ITABL(KLIFL,IA,JLIFK1)
      K2 = ITABL(KLIFL,IB,JLIFK2)
      KE1 = ITABL(KLIFL,IA,JLIFKH)
      KE2 = ITABL(KLIFL,IB,JLIFKL)
      IF1 = ITABL(KLIDT,IA,JLIDIF)
      IF2 = ITABL(KLIDT,IB,JLIDIF)
      IF(MOD(IEVTRC,2).NE.0) THEN
        K1 = ITABL(KLIFL,IB,JLIFK1)
        K2 = ITABL(KLIFL,IA,JLIFK2)
        KE1 = ITABL(KLIFL,IB,JLIFKH)
        KE2 = ITABL(KLIFL,IA,JLIFKL)
        IF1 = ITABL(KLIDT,IB,JLIDIF)
        IF2 = ITABL(KLIDT,IA,JLIDIF)
      ENDIF
C
C SATR flag
      FSATR = .FALSE.
      IF(BTEST(IF1,2).AND.BTEST(IF2,2)) FSATR = .TRUE.
C
C HI Voltage flag
      CALL LHVSTA(IHV)
C
C Loop over methods
      DO 100 IM=1,NMETH
        KLUM = KROW(KLUMI,IM)
        IB = IM-1
C
C Method type
        MET = ITABL(KBHAB,IM,JBHAME)
C
C Required track quality
        IQA = ITABL(KBHAB,IM,JBHAQF)
C
C Track flag
        FTRAC = .FALSE.
        IF(BTEST(IF1,IQA).AND.BTEST(IF2,IQA)) FTRAC = .TRUE.
        IF(MET.EQ.2.AND.BTEST(IF1,IQA))       FTRAC = .TRUE.
C
C Threshold for energy sum (protect against old DB)
        IF(LCOLS(KBHAB).GE.25) THEN
          SFRAC = 0.5*RTABL(KBHAB,IM,JBHAES)/RTABL(KBHAB,IM,JBHAEG)
          IF(IRUNRC.GE.40000.AND.IM.GE.9) SFRAC=SFRAC*2.
        ELSE
          SFRAC = 0.6
        ENDIF
C
C Apply energy thresholds
        IF(.NOT.BTEST(KE1,IB))                        GOTO 100
        IF(.NOT.BTEST(KE2,IB))                        GOTO 100
        RW(KLUM+JLUMHI) = RW(KLUM+JLUMHI) + W
        IF((EA+EB)/(2.*EBEAM).LT.SFRAC)               GOTO 100
        RW(KLUM+JLUMLO) = RW(KLUM+JLUMLO) + W
C
C coplanarity
        IF(DPHI.GT.RTABL(KBHAB,IM,JBHADP))
     &    RW(KLUM+JLUMCP) = RW(KLUM+JLUMCP) + W
C
C Aplly acoplanatity as last cut
        IF(MET.GE.4.AND.BTEST(K1,IB).AND.BTEST(K2,IB)) THEN
          IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KLUM+JLUMNP) = RW(KLUM+JLUMNP) + W
            IF(FDEBRF.AND.JDBDRF(5).GE.2.AND.MET.EQ.10) THEN
              WRITE(IW(6),'(2X,A,2F6.1,F8.3)')
     &        '+++LSELBH+++ Background coincidence (EA,EB,Dphi)',
     &        EA,EB,DPHI
            ENDIF
            GOTO 100
          ELSEIF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KLUM+JLUMBH) = RW(KLUM+JLUMBH) + W
            IF(FDEBRF.AND.JDBDRF(5).GE.2.AND.MET.EQ.10) THEN
              WRITE(IW(6),'(2X,A,2F6.1,F8.3)')
     &        '+++LSELBH+++ Accepted coincidence     (EA,EB,Dphi)',
     &        EA,EB,DPHI
            ENDIF
            GOTO 90
          ENDIF
        ELSEIF(MET.GE.4) THEN
          IF(FDEBRF.AND.JDBDRF(5).GE.2.AND.MET.EQ.10) THEN
            WRITE(IW(6),'(2X,A,2F6.1,F8.3)')
     &      '+++LSELBH+++ Rejected coincidence     (EA,EB,Dphi)',
     &      EA,EB,DPHI
          ENDIF
          GOTO 100
        ENDIF
        IF(MET.EQ.1.AND.BTEST(K1,IB).AND.BTEST(K2,IB)) THEN
          IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KLUM+JLUMNP) = RW(KLUM+JLUMNP) + W
            GOTO 100
          ELSEIF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KLUM+JLUMBH) = RW(KLUM+JLUMBH) + W
          ENDIF
        ENDIF
C
C Count accepted events in SATR and no SATR regions seperately
        IF(FSATR) THEN
          RW(KLUM+JLUMSA) = RW(KLUM+JLUMSA) + W
          IF(FTRAC) THEN
            RW(KLUM+JLUMTR) = RW(KLUM+JLUMTR) + W
            IF(.NOT.BTEST(K1,IB))                   GOTO 100
            RW(KLUM+JLUMF1) = RW(KLUM+JLUMF1) + W
            IF(MET.EQ.2) THEN
              IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KLUM+JLUMNP) = RW(KLUM+JLUMNP) + W
                GOTO 100
              ENDIF
              IF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KLUM+JLUMBH) = RW(KLUM+JLUMBH) + W
                GOTO 90
              ENDIF
            ENDIF
            IF(.NOT.BTEST(K2,IB))                   GOTO 100
            RW(KLUM+JLUMF2) = RW(KLUM+JLUMF2) + W
            IF(MET.EQ.3) THEN
              IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KLUM+JLUMNP) = RW(KLUM+JLUMNP) + W
                GOTO 100
              ENDIF
              IF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KLUM+JLUMBH) = RW(KLUM+JLUMBH) + W
              ENDIF
            ENDIF
          ELSE
             IF(MET.NE.1)                            GOTO 100
             IF(.NOT.BTEST(K1,IB))                   GOTO 100
             IF(.NOT.BTEST(K2,IB))                   GOTO 100
          ENDIF
        ELSE
          IF(MET.NE.1)                               GOTO 100
          RW(KLUM+JLUMNS) = RW(KLUM+JLUMNS) + W
          IF(.NOT.BTEST(K1,IB))                      GOTO 100
          RW(KLUM+JLUMF3) = RW(KLUM+JLUMF3) + W
          IF(.NOT.BTEST(K2,IB))                      GOTO 100
          RW(KLUM+JLUMF4) = RW(KLUM+JLUMF4) + W
        ENDIF
   90   CONTINUE
C
C Count accepted events with correct HV bits
C These are the Bhabhas with Lcal fully on
        IF(IHV.GE.1) RW(KLUM+JLUMB1) = RW(KLUM+JLUMB1) + W
C These are the Bhabhas with
C (old xlumok AND no miniramp)=new xlumok in 2000 
        IF(IHV.EQ.2) THEN
          RW(KLUM+JLUMB2) = RW(KLUM+JLUMB2) + W
        ENDIF
C These are Bhabhas with old xlumok = xlum2k in 2000
        IF(MET.EQ.11.AND.IHV.EQ.3) THEN 
          RW(KLUM+JLUMB2) = RW(KLUM+JLUMB2) + W
        ENDIF
C
C Count VH efficiency, exclusive VHs and exclusive LO-LO's
        IF ( ALTRIG(IT1,IT2,IL2).GT.0  ) THEN
          ITB = IT1
        ELSE
          ITB = 0
        ENDIF
C Get VH trigger bits
        IF (IRUNRC.NE.LRUN) THEN
          CALL LTGBIT(IRUNRC,VHNAM,LVHBT,LVHTW,NVHBT,IFVH)
          LRUN = IRUNRC
        ENDIF
C
C Check if any VHI triggers have fired.
        XVH = .FALSE.
        DO 22 IVHBT = 1,NVHBT
 22         XVH = XVH.OR.BTEST(ITB,LVHBT(IVHBT))
        IF(.NOT.XVH) RW(KLUM+JLUMNV) = RW(KLUM+JLUMNV) + W
        IF(ITYPE.EQ.3) RW(KLUM+JLUMVH) = RW(KLUM+JLUMVH) + W
        IF(ITYPE.EQ.4) RW(KLUM+JLUMLL) = RW(KLUM+JLUMLL) + W
  100 CONTINUE
C
  999 CONTINUE
      END
#endif
@


1.4
log
@Julia corr 303.4
@
text
@d241 4
a244 1
        IF(IHV.EQ.1) RW(KLUM+JLUMB1) = RW(KLUM+JLUMB1) + W
d246 4
a249 1
          RW(KLUM+JLUMB1) = RW(KLUM+JLUMB1) + W
@


1.3
log
@Mods for julia 281 release. See news for details
@
text
@d10 3
d145 1
a145 1
          IF(IRUNRC.GE.40000) SFRAC=SFRAC*2.
@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d7 3
a9 1
C!                              Use ALTRIG to Access Trigger bits
d12 1
d120 3
d142 1
d160 1
a160 1
          IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d162 4
a165 4
            IF(FDEBRF.AND.JDBDRF(5).GE.2) THEN
              WRITE(IW(6),'(2X,A,2F6.1,I4)')
     &        '+++LSELBH+++ Dphi Rejected coincidence (EA,EB,Meth)',
     &        EA,EB,MET
d168 1
a168 1
          ELSE
d170 4
a173 4
            IF(FDEBRF.AND.JDBDRF(5).GE.2) THEN
              WRITE(IW(6),'(2X,A,2F6.1,I4)')
     &        '+++LSELBH+++ Accepted coincidence     (EA,EB,Meth)',
     &        EA,EB,MET
d178 4
a181 4
          IF(FDEBRF.AND.JDBDRF(5).GE.2) THEN
            WRITE(IW(6),'(2X,A,2F6.1,I4)')
     &      '+++LSELBH+++ Rejected coincidence     (EA,EB,Meth)',
     &      EA,EB,MET
d186 1
a186 1
          IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d189 1
a189 1
          ELSE
d202 1
a202 1
              IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d206 4
a209 2
              RW(KLUM+JLUMBH) = RW(KLUM+JLUMBH) + W
              GOTO 90
d214 1
a214 1
              IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d218 3
a220 1
              RW(KLUM+JLUMBH) = RW(KLUM+JLUMBH) + W
a237 1
        CALL LHVSTA(IHV)
@


1.1
log
@Initial revision
@
text
@a0 1
*DK lselbh
d156 1
a156 1
              WRITE(6,'(2X,A,2F6.1,I4)')
d164 1
a164 1
              WRITE(6,'(2X,A,2F6.1,I4)')
d172 1
a172 1
            WRITE(6,'(2X,A,2F6.1,I4)')
@


1.1.1.1
log
@import julia 300
@
text
@@
