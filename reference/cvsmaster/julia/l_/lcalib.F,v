head	1.3;
access;
symbols
	jul313_3:1.3
	jul313_2:1.3
	jul313_1:1.3
	jul313:1.3
	jul312_1:1.3
	jul312:1.3
	jul311:1.3
	jul310_1:1.3
	jul310:1.3
	jul309_1:1.3
	jul309:1.3
	jul308_6:1.3
	jul308_5:1.3
	jul308_4:1.3
	jul308_3:1.3
	jul308_2:1.3
	jul308_1:1.3
	jul308:1.3
	jul307_4:1.3
	jul307_3:1.3
	jul307_2:1.3
	jul307_1:1.3
	jul307:1.3
	jul306_3:1.3
	jul306_2:1.3
	jul306_1:1.3
	jul306:1.3
	jul305_4:1.3
	jul305_3:1.3
	jul305_2:1.3
	jul305_1:1.3
	jul305:1.3
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.3
date	96.06.03.10.26.13;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.24.48;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.50;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.51;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Mods for julia 281 release. See news for details
@
text
@      SUBROUTINE LCALIB
C-----------------------------------------------------------------------
C! Get the energy calibrations
C!
C!   Author   : F. Bird     890711
C!   Modified : P.H. Hansen 892111
C!   Modified : P.H. Hansen 960501 Method 10 selection cuts
C!   Input    : LIDT LCLU LSDA LPDA
C!   Output   : LEHI: col 1 2 ....... NBINS NBINS+1 NBINS+2
C!                    row
C!                      1 Estoreys module 1  BINSI   ELOW
C!                      2 Ewires   module 1  BINSI   ELOW
C!                      .
C!                      .
C!                      7 Estoreys module 4  BINSI   ELOW
C!                      8 Ewires   module 4  BINSI   ELOW
C!              LVHI: col 1 2 ........NBINX NBINX+1 NBINX+2
C!                    row
C!                      1 (X1+X2)/2 modu 1+4 BINSX   XLOW
C!                      2 (Y1+Y2)/2 modu 1+4 BINSX   XLOW
C!                      3 (X1+X2)/2 modu 2+3 BINSX   XLOW
C!                      4 (Y1+Y2)/2 modu 2+3 BINSX   XLOW
C!
C!
C!   Description :
C!   ===========
C?   Select fully contained Bhabha events
C?   Histogram the cluster energies in LEHI
C?   Histogram the vertex positions in LVHI
C!
C-----------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "lcnamc.h"
#include "lsdajj.h"
#include "lpdajj.h"
#include "lphist.h"
#include "lehijj.h"
#include "lvhijj.h"
#include "lidtjj.h"
#include "lifljj.h"
#include "alcons.h"
#include "rconds.h"
C
C Parameters for selection of calibration events
      PARAMETER( CTMIN=0.060,CTMAX=0.120,CCMIN=2.793,
     &           CEMIN=0.5,CDMAX=0.10 )
C
C CTMIN : min theta
C CTMAX : max theta
C CCMIN : min dphi
C CEMIN : min energy
C CDMAX : max acollinearity
C
      DIMENSION P1(3),P2(3),ICL(2),E(2),TH(2),PH(2),M(2),X(2),Y(2)
      LOGICAL KEEP,BTEST
      EXTERNAL VDOT
#include "bmacro.h"
#include "lcmacr.h"
C---------------------------------------------------------------------
C
C
      KLEHI = IW(NALEHI)
      IF(KLEHI.LE.0)                                 GOTO 999
      KLVHI = IW(NALVHI)
      IF(KLVHI.LE.0)                                 GOTO 999
      KLIDT = IW(NALIDT)
      IF(KLIDT.LE.0)                                 GOTO 999
      NIDT = LROWS(KLIDT)
      IF(NIDT.LE.0)                                  GOTO 999
      KLSDA = IW(NALSDA)
      KLPDA = IW(NALPDA)
      IF(KLSDA.LE.0.OR.KLPDA.LE.0)                   GOTO 999
      EBEAM = ENERRC/2.
      ELO=FLOAT(INT(EBEAM))-10.
C
C Find two largest clusters on A and B side
      IA = 0
      IB = 0
      EA = CEMIN
      EB = CEMIN
      DO 31 I=1,NIDT
        EC = RTABL(KLIDT,I,JLIDEC)
        IF(RTABL(KLIDT,I,JLIDTC).LT.PIBY2) THEN
          IF(EC.GT.EA) THEN
            EA = EC
            IA = I
          ENDIF
        ELSE
          IF(EC.GT.EB) THEN
            EB = EC
            IB = I
          ENDIF
        ENDIF
   31 CONTINUE
      IF(IA.EQ.0.OR.IB.EQ.0)                          GOTO 999
      ICL(1) = IA
      ICL(2) = IB
C
C Make an event selection (METHOD 10)
      KEEP = .TRUE.
      KLIFL = IW(NALIFL)
      IF(KLIFL.LE.0)                                 GOTO 999
      IF(EA.GT.EB) THEN
        K1 = ITABL(KLIFL,IA,JLIFK1)
        K2 = ITABL(KLIFL,IB,JLIFK2)
        KH = ITABL(KLIFL,IA,JLIFKH)
        KL = ITABL(KLIFL,IB,JLIFKL)
      ELSE
        K1 = ITABL(KLIFL,IB,JLIFK1)
        K2 = ITABL(KLIFL,IA,JLIFK2)
        KH = ITABL(KLIFL,IB,JLIFKH)
        KL = ITABL(KLIFL,IA,JLIFKL)
      ENDIF
      IF(.NOT.BTEST(K1,9).OR..NOT.BTEST(K2,9).OR.
     &   .NOT.BTEST(KH,9).OR..NOT.BTEST(KL,9)) KEEP = .FALSE.
      DO 40 J=1,2
C
C Energy, Theta, Phi and module number
        E(J)  = RTABL(KLIDT,ICL(J),JLIDEC)
        TH(J) = RTABL(KLIDT,ICL(J),JLIDTC)
        PH(J) = RTABL(KLIDT,ICL(J),JLIDPC)
        M(J) = 1
        IF(COS(PH(J)).GT.0.) M(J) = 2
        IF(TH(J).LT.PIBY2) THEN
          M(J) = M(J)+2
          SIG = 1.
        ELSE
          SIG =-1.
        ENDIF
C
C Impact corrected for the magnetic field
        X(J) = SIG*280.*TAN(TH(J))*COS(PH(J)-SIG*0.014)
        Y(J) = SIG*280.*TAN(TH(J))*SIN(PH(J)-SIG*0.014)
   40 CONTINUE
      DPHI = ABS(PH(1)-PH(2))
      DPHI = AMIN1(DPHI,TWOPI-DPHI)
      IF(DPHI.LT.CCMIN) KEEP = .FALSE.
      IF(.NOT.KEEP)                                   GOTO 999
C
C Fill histograms
C
      DO 60 J=1,2
C
C Cluster energy for this module
        KLS = KROW(KLEHI,2*(M(J)-1)+1)
        ESTOR = E(J)
C
C Wire energy for this module
        KLW = KROW(KLEHI,2*(M(J)-1)+2)
        EWIRE=0.
        DO 50 IPL=1,38
          EWIRE = EWIRE + RTABL(KLPDA,M(J),JLPDEN+IPL-1)
   50   CONTINUE
C
C Fill energy histograms
        IBIN = INT((ESTOR-ELO)/BINSI)+1
        IF(IBIN.GE.1.AND.IBIN.LE.NBINS)
     &   RW(KLS+IBIN) = RW(KLS+IBIN) + 1.
        IBIN = INT((EWIRE-ELO)/BINSI)+1
        IF(IBIN.GE.1.AND.IBIN.LE.NBINS)
     &   RW(KLW+IBIN) = RW(KLW+IBIN) + 1.
C
C Average X for this module
        MM = M(J)
        IF(M(J).EQ.4) MM=1
        IF(M(J).EQ.3) MM=2
        KLX = KROW(KLVHI,2*(MM-1)+1)
        XAV = 0.5*(X(1)+X(2))
C
C Average Y for this module
        KLY = KROW(KLVHI,2*(MM-1)+2)
        YAV = 0.5*(Y(1)+Y(2))
C
C Fill vertex histograms
        IBIN = INT((XAV-XLOW)/BINSX)+1
        IF(IBIN.GE.1.AND.IBIN.LE.NBINX)
     &   RW(KLX+IBIN) = RW(KLX+IBIN) + 1.
        IBIN = INT((YAV-XLOW)/BINSX)+1
        IF(IBIN.GE.1.AND.IBIN.LE.NBINX)
     &   RW(KLY+IBIN) = RW(KLY+IBIN) + 1.
   60 CONTINUE
C
  999 CONTINUE
      END
#endif
@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d7 1
d27 1
a27 1
C?   Select fully contained, collinear Bhabha events
d41 1
d43 1
d46 2
a47 2
      PARAMETER( CTMIN=0.062,CTMAX=0.100,CCMIN=.22,
     &           CEMIN=30.0,CDMAX=0.005 )
d51 1
a51 1
C CCMIN : min cos(phi)
d56 1
a56 1
      LOGICAL KEEP
d74 2
d100 1
a100 1
C Make an event selection
d102 15
a134 22
C
C Check inner and outer acceptance
        THET = AMIN1(TH(J),PI-TH(J))
        IF(THET.LT.CTMIN)              KEEP = .FALSE.
        IF(THET.GT.CTMAX)              KEEP = .FALSE.
        IF(ABS(COS(PH(J))).LT.CCMIN)   KEEP = .FALSE.
C
C Check if in region of wire-supports
        IT = ITABL(KLIDT,ICL(J),JLIDLS)
        IADDR = ITABL(KLSDA,IT,JLSDAD)
        IX = LCCOL(IADDR)
        IR = LCROW(IADDR)
        IF(IR.GE.16) THEN
          IY = IR-15
        ELSE
          IY = 16-IR
        ENDIF
        IF(IY.EQ.5.OR.IY.EQ.6) THEN
          IF(IX.GE.4.AND.IX.LE.10)   KEEP = .FALSE.
        ELSEIF(IY.EQ.1) THEN
          IF(IX.GE.11.AND.IX.LE.14)  KEEP = .FALSE.
        ENDIF
d136 3
a138 10
      P1(1) = E(1)*COS(PH(1))*SIN(TH(1))
      P1(2) = E(1)*SIN(PH(1))*SIN(TH(1))
      P1(3) = E(1)*COS(TH(1))
      P2(1) = E(2)*COS(PH(2))*SIN(TH(2))
      P2(2) = E(2)*SIN(PH(2))*SIN(TH(2))
      P2(3) = E(2)*COS(TH(2))
      P12  = VDOT(P1(1),P2(1),3)
      CPSI = MAX(P12/E(1)/E(2),-1.)
      DPSI = PI-ACOS(CPSI)
      IF(DPSI.GT.CDMAX)              KEEP = .FALSE.
d157 1
a157 1
        IBIN = INT((ESTOR-ELOW)/BINSI)+1
d160 1
a160 1
        IBIN = INT((EWIRE-ELOW)/BINSI)+1
@


1.1
log
@Initial revision
@
text
@a0 1
*DK lcalib
@


1.1.1.1
log
@import julia 300
@
text
@@
