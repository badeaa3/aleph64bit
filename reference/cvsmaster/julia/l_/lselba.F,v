head	1.4;
access;
symbols
	jul313_3:1.4
	jul313_2:1.4
	jul313_1:1.4
	jul313:1.4
	jul312_1:1.4
	jul312:1.4
	jul311:1.4
	jul310_1:1.4
	jul310:1.4
	jul309_1:1.4
	jul309:1.4
	jul308_6:1.4
	jul308_5:1.4
	jul308_4:1.4
	jul308_3:1.4
	jul308_2:1.4
	jul308_1:1.4
	jul308:1.4
	jul307_4:1.4
	jul307_3:1.4
	jul307_2:1.4
	jul307_1:1.4
	jul307:1.4
	jul306_3:1.4
	jul306_2:1.4
	jul306_1:1.4
	jul306:1.4
	jul305_4:1.4
	jul305_3:1.4
	jul305_2:1.4
	jul305_1:1.4
	jul305:1.4
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.2
	jul280:1.2
	jul279:1.1.1.1
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.11.07.11.19.06;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.06.03.10.26.57;	author cattanem;	state Exp;
branches;
next	1.2;

1.2
date	96.03.12.15.25.41;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.18.57;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.18.58;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Prepare Julia 305
@
text
@      SUBROUTINE LSELBA(IA,IB)
C-----------------------------------------------------------------------
C! Selection of Bhabha background
C!
C!   Author   : P. H. Hansen  890701
C! Modified   : J. Wear       891119
C! Modified   : P. Comas      940502
C! Modified   : P. H. Hansen  950401
C! Modified   : P. H. Hansen  960501
C!   Ignore scalefactors. Drop cut on summed energy (to gain stat)
C!
C!     Input  :  IA,IB           row numbers in LSIN
C!               'LSIN'          single arm storage bank
C!               'BHAB'          Bhabha selection criteria
C!     Output :  'LBAK'          Fake Bhabha event statistics
C!   Description :
C!   ===========
C?      Decide which side has the smaller fiducial area.
C?      For each requested measurement method require successively:
C?         At least one cluster over high threshold.
C?         Both clusters over low threshold.
C?         Both clusters be contained in their proper fiducial areas.
C?         Coplanarity.
C?      Update a counter in LBAK after each passed cut.
C?
C-----------------------------------------------------------------------
C
#ifndef DOC
#include "rconds.h"
#include "bcs.h"
#include "rflags.h"
#include "lcnamc.h"
#include "lsinjj.h"
#include "lbakjj.h"
#include "bhabjj.h"
#include "alcons.h"
#include "rcurnt.h"
#include "xtcnjj.h"
#include "x1rgjj.h"
#include "x1ttjj.h"
      COMMON/DWNSCL/ SCALE(2)
      PARAMETER (NLBIT=5)
      DIMENSION LLBIT(NLBIT),LHBIT(NLBIT),LWTLO(NLBIT),LWTHI(NLBIT)
      INTEGER HIBIT
      EXTERNAL RNDM
      CHARACTER*8 TLOSG,THISG
      LOGICAL FSATR,FTRAC,BTEST
      DATA TLOSG,THISG /'LO_SING','HI_SING'/
      DATA LRUN /-9999/
#include "bmacro.h"
C---------------------------------------------------------------------
      IF(IA.LE.0.OR.IB.LE.0)                        GOTO 999
C
C Banks needed
      KBHAB = IW(NABHAB)
      IF(KBHAB.LE.0)                                GOTO 999
      NMETH = LROWS(KBHAB)
      IF(NMETH.LE.0)                                GOTO 999
      KLBAK = IW(NALBAK)
      IF(KLBAK.LE.0)                                GOTO 999
      KLSIN = IW(NALSIN)
      IF(KLSIN.LE.0)                                GOTO 999
C
C Take beam energy
      EBEAM = ENERRC/2.
C
C Real Data event weight for background.
        W = 1.
C
C type of background trigger:
C  Low threshold single
        IT = 0
C  Very high threshold single
        IF(ITABL(KLSIN,IA,JLSIIT).EQ.3.OR.
     &     ITABL(KLSIN,IB,JLSIIT).EQ.3) IT=1
C
C Monte Carlo event weight
      KKEVH = IW(NAMIND('KEVH'))
      IF(KKEVH.GT.0) W = RTABL(KKEVH,1,5)
C
C Energy distribution
      ENA = RTABL(KLSIN,IA,JLSIEN)
      ENB = RTABL(KLSIN,IB,JLSIEN)
C
C Acoplanarity
      PHA = RTABL(KLSIN,IA,JLSIPH)
      PHB = RTABL(KLSIN,IB,JLSIPH)
      DPHI = ABS(PHA-PHB)
      DPHI = AMIN1(DPHI,TWOPI-DPHI)
C
C Define small and large fiducial areas
      K1 = ITABL(KLSIN,IA,JLSIK1)
      K2 = ITABL(KLSIN,IB,JLSIK2)
      KE1 = ITABL(KLSIN,IA,JLSIKH)
      KE2 = ITABL(KLSIN,IB,JLSIKL)
      IF1 = ITABL(KLSIN,IA,JLSIIF)
      IF2 = ITABL(KLSIN,IB,JLSIIF)
      IF(RNDM(IDUM).GT.0.5) THEN
        K1 = ITABL(KLSIN,IB,JLSIK1)
        K2 = ITABL(KLSIN,IA,JLSIK2)
        KE1 = ITABL(KLSIN,IB,JLSIKH)
        KE2 = ITABL(KLSIN,IA,JLSIKL)
        IF1 = ITABL(KLSIN,IB,JLSIIF)
        IF2 = ITABL(KLSIN,IA,JLSIIF)
      ENDIF
C
C SATR flag
      FSATR = .FALSE.
      IF(BTEST(IF1,2).AND.BTEST(IF2,2)) FSATR = .TRUE.
C
C Loop over methods
      IAA=IA
      IBB=IB
      DO 100 IM=1,NMETH
        KBAK = KROW(KLBAK,IM)
        IB = IM-1
C
C Method type
        MET = ITABL(KBHAB,IM,JBHAME)
C
C Required track quality
        IQA = ITABL(KBHAB,IM,JBHAQF)
C
C Track flag
        FTRAC = .FALSE.
        IF(BTEST(IF1,IQA).AND.BTEST(IF2,IQA)) FTRAC = .TRUE.
        IF(MET.EQ.2.AND.BTEST(IF1,IQA))       FTRAC = .TRUE.
C
C Apply energy thresholds - BUT NOT ON ENERGY SUM!
        IF(.NOT.BTEST(KE1,IB))                        GOTO 100
        IF(.NOT.BTEST(KE2,IB))                        GOTO 100
        RW(KBAK+JLBAHI+IT) = RW(KBAK+JLBAHI+IT) + W
        RW(KBAK+JLBALO+IT) = RW(KBAK+JLBALO+IT) + W
C
C coplanarity
        IF(DPHI.GT.RTABL(KBHAB,IM,JBHADP))
     &    RW(KBAK+JLBACP+IT) = RW(KBAK+JLBACP+IT) + W
C
C Apply acoplanarity as last cut
        IF(MET.GE.4.AND.BTEST(K1,IB).AND.BTEST(K2,IB)) THEN
          IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KBAK+JLBANP+IT) = RW(KBAK+JLBANP+IT) + W
            GOTO 100
          ELSEIF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KBAK+JLBABH+IT) = RW(KBAK+JLBABH+IT) + W
            GOTO 100
          ENDIF
        ENDIF
        IF(MET.EQ.1.AND.BTEST(K1,IB).AND.BTEST(K2,IB)) THEN
          IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KBAK+JLBANP+IT) = RW(KBAK+JLBANP+IT) + W
            GOTO 100
          ELSEIF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
            RW(KBAK+JLBABH+IT) = RW(KBAK+JLBABH+IT) + W
          ENDIF
        ENDIF
C
C Count accepted events in SATR and no SATR regions seperately
        IF(FSATR) THEN
          RW(KBAK+JLBASA+IT) = RW(KBAK+JLBASA+IT) + W
          IF(FTRAC) THEN
            RW(KBAK+JLBATR+IT) = RW(KBAK+JLBATR+IT) + W
            IF(.NOT.BTEST(K1,IB))                   GOTO 100
            RW(KBAK+JLBAF1+IT) = RW(KBAK+JLBAF1+IT) + W
            IF(MET.EQ.2) THEN
              IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KBAK+JLBANP+IT) = RW(KBAK+JLBANP+IT) + W
                GOTO 100
              ENDIF
              IF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KBAK+JLBABH+IT) = RW(KBAK+JLBABH+IT) + W
                GOTO 100
              ENDIF
            ENDIF
            IF(.NOT.BTEST(K2,IB))                   GOTO 100
            RW(KBAK+JLBAF2+IT) = RW(KBAK+JLBAF2+IT) + W
            IF(MET.EQ.3) THEN
              IF(DPHI.LT.PI-RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KBAK+JLBANP+IT) = RW(KBAK+JLBANP+IT) + W
                GOTO 100
              ENDIF
              IF(DPHI.GT.RTABL(KBHAB,IM,JBHADP)) THEN
                RW(KBAK+JLBABH+IT) = RW(KBAK+JLBABH+IT) + W
              ENDIF
            ENDIF
          ENDIF
        ELSE
          RW(KBAK+JLBANS+IT) = RW(KBAK+JLBANS+IT) + W
          IF(.NOT.BTEST(K1,IB))                      GOTO 100
          RW(KBAK+JLBAF3+IT) = RW(KBAK+JLBAF3+IT) + W
          IF(.NOT.BTEST(K2,IB))                      GOTO 100
          RW(KBAK+JLBAF4+IT) = RW(KBAK+JLBAF4+IT) + W
        ENDIF
  100 CONTINUE
C
  999 CONTINUE
      END
#endif
@


1.3
log
@Mods for julia 281 release. See news for details
@
text
@d98 1
a98 1
      IF(RNDM(DUM).GT.0.5) THEN
@


1.2
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d8 3
a10 2
C!           Use of X1RG and X1TT instead of XTOP dropped in the readout
C!           upgrade.
a14 1
C!               'XTOP'          Downscaling factors
d24 1
a24 4
C?      Update a counter in LBAK after each passed cut with the
C?         scale factors for High-Low and High-High combinations.
C?      In SATR region count events with tracks
C?         and events with tracks in the fiducial area.
a38 1
#include "xtopjj.h"
a66 31
C Get bit assignment of single arm triggers for this run
      IF (LRUN.NE.IRUNRC) THEN
        LRUN = IRUNRC
        MKENB = 0
        IF (IRUNRC.LE.5909) THEN
          KXTCN = IW(NAMIND('XTCN'))
          IF (KXTCN.NE.0) MKENB = ITABL(KXTCN,1,JXTCTR+1)
       ELSE IF (IRUNRC.GT.25000) THEN
        KX1RG = IW(NAMIND('X1RG'))
          IF (KX1RG.NE.0) MKENB = ITABL(KX1RG,1,JX1RCO+2)
         ELSE
          KXTOP = IW(NAMIND('XTOP'))
          IF (KXTOP.NE.0) MKENB = ITABL(KXTOP,1,JXTOTR)
        ENDIF
        CALL LTGBIT(IRUNRC,TLOSG,LLBIT,LWTLO,NLOSG,IFLO)
        CALL LTGBIT(IRUNRC,THISG,LHBIT,LWTHI,NHISG,IFHI)
C
C Use an enabled tower-based single arm trigger for downscale factors.
        DO 11 ILBIT = 1,NLOSG
          IF ((LWTLO(ILBIT).EQ.0).AND.BTEST(MKENB,LLBIT(ILBIT)))
     &       LOBIT = LLBIT(ILBIT)
 11     CONTINUE
        DO 12 ILBIT = 1,NHISG
          IF ((LWTHI(ILBIT).EQ.0).AND.BTEST(MKENB,LHBIT(ILBIT)))
     &       HIBIT = LHBIT(ILBIT)
 12     CONTINUE
C
C If trigger banks are missing, hardwire to the bit assignment of 1990
        IF ((IFLO.GT.1).OR.(MKENB.EQ.0)) LOBIT = 4
        IF ((IFHI.GT.1).OR.(MKENB.EQ.0)) HIBIT = 5
C
a68 16
        SCALE(1) = 2000. * 1000.
        SCALE(2) = 1000. * 1000.
        KXTOP = IW(NAMIND('XTOP'))
      KX1TT = IW(NAMIND('X1TT'))
        IF(KXTOP.GT.0) THEN
          SCALE(1) = FLOAT(ITABL(KXTOP,1,JXTODS+LOBIT)
     &                    *ITABL(KXTOP,1,JXTODS+HIBIT))
          SCALE(2) = FLOAT(ITABL(KXTOP,1,JXTODS+HIBIT)**2)
      ELSE
       IF(KX1TT.GT.0) THEN
          SCALE(1) = FLOAT(ITABL(KX1TT,1,JX1TDS+LOBIT)
     &                    *ITABL(KX1TT,1,JX1TDS+HIBIT))
          SCALE(2) = FLOAT(ITABL(KX1TT,1,JX1TDS+HIBIT)**2)
       ENDIF
        ENDIF
      ENDIF
d70 2
a71 10
C Trigger type
      ITA = ITABL(KLSIN,IA,JLSIIT)
      ITB = ITABL(KLSIN,IB,JLSIIT)
      IF(ITA.EQ.2.AND.ITB.EQ.2) THEN
        IT = 1
        W  = SCALE(2)
      ELSEIF(ITA.EQ.2.AND.ITB.EQ.1) THEN
        IT = 0
        W  = SCALE(1)
      ELSEIF(ITA.EQ.1.AND.ITB.EQ.2) THEN
d73 3
a75 4
        W  = SCALE(1)
      ELSE
        GOTO 999
      ENDIF
d112 2
d129 1
a129 8
C Threshold for energy sum (protect against old DB)
        IF(LCOLS(KBHAB).GE.25) THEN
          SFRAC = 0.5*RTABL(KBHAB,IM,JBHAES)/RTABL(KBHAB,IM,JBHAEG)
        ELSE
          SFRAC = 0.6
        ENDIF
C
C Apply energy thresholds
a132 1
        IF((ENA+ENB)/(2.*EBEAM).LT.SFRAC)             GOTO 100
d141 1
a141 1
          IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d144 1
a144 1
          ELSE
d150 1
a150 1
          IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d153 1
a153 1
          ELSE
d166 1
a166 1
              IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d170 4
a173 2
              RW(KBAK+JLBABH+IT) = RW(KBAK+JLBABH+IT) + W
              GOTO 100
d178 1
a178 1
              IF(DPHI.LT.RTABL(KBHAB,IM,JBHADP)) THEN
d182 3
a184 1
              RW(KBAK+JLBABH+IT) = RW(KBAK+JLBABH+IT) + W
@


1.1
log
@Initial revision
@
text
@a0 1
*DK lselba
@


1.1.1.1
log
@import julia 300
@
text
@@
