head	1.8;
access;
symbols
	jul313_3:1.8
	jul313_2:1.7
	jul313_1:1.7
	jul313:1.7
	jul312_1:1.7
	jul312:1.7
	jul311:1.7
	jul310_1:1.7
	jul310:1.7
	jul309_1:1.7
	jul309:1.7
	jul308_6:1.7
	jul308_5:1.7
	jul308_4:1.7
	jul308_3:1.7
	jul308_2:1.7
	jul308_1:1.7
	jul308:1.7
	jul307_4:1.6
	jul307_3:1.5
	jul307_2:1.5
	jul307_1:1.5
	jul307:1.5
	jul306_3:1.5
	jul306_2:1.5
	jul306_1:1.5
	jul306:1.5
	jul305_4:1.5
	jul305_3:1.5
	jul305_2:1.5
	jul305_1:1.5
	jul305:1.4
	jul304_3:1.3
	jul304_2:1.3
	jul304_1:1.3
	jul304:1.3
	jul303_7:1.3
	jul303_6:1.3
	jul303_5:1.3
	jul303_4:1.3
	jul303_3:1.3
	jul303_2_mc1:1.3
	jul303_2:1.3
	jul303_1_mc1:1.3
	jul303_1:1.3
	jul303_v:1.3
	jul303:1.3
	jul302_6:1.3
	jul302_5:1.3
	jul302_4:1.3
	jul302_3:1.3
	jul302_2:1.3
	jul302_1:1.3
	jul302:1.3
	jul285_1:1.3
	jul285:1.3
	jul284_1:1.3
	jul284:1.3
	jul283_1:1.3
	jul283:1.3
	jul282_1:1.3
	jul282:1.3
	jul281_3:1.3
	jul281_2:1.3
	jul281_1:1.3
	jul281:1.3
	jul280_1:1.3
	jul280:1.3
	jul279:1.2
	v300:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.8
date	2001.06.19.08.09.57;	author cattanem;	state Exp;
branches;
next	1.7;

1.7
date	98.09.14.14.02.59;	author cattanem;	state Exp;
branches;
next	1.6;

1.6
date	98.08.24.15.01.57;	author cattanem;	state Exp;
branches;
next	1.5;

1.5
date	97.12.05.13.40.06;	author cattanem;	state Exp;
branches;
next	1.4;

1.4
date	97.11.07.11.19.28;	author cattanem;	state Exp;
branches;
next	1.3;

1.3
date	96.03.12.15.32.31;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	95.11.29.17.19.02;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.14.19.18;	author aljul;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.14.19.19;	author aljul;	state Exp;
branches;
next	;


desc
@@


1.8
log
@jul313.3
@
text
@      SUBROUTINE RLOOPR
C----------------------------------------------------------------------
C! Loop on records
C!
C!   Author        S.Orteu, J.Knobloch
C!   Modified      Z. Qian              15-jul-1989
C!   Modified:   H. Meinhard       24-Aug-1989
C!   Modified :- E. Lancon              5-FEB-1992
C!                Use ABRSEL routine from alephlib to read events
C!               F.Ranjard             28-APR-1994
C!                create XTCN bank from X1RG bank
C!               P.Comas               25-AUG-1994
C!                Only the EVEH of events with DAQ error as evtype
C!                (998) is passed on to the POT. These events are
C!                not reconstructed
C!               P.Comas               8-MAY-1995
C!                Write bunch number used for reconstruction in EVEH
C!               P.Comas               8-AUG-1996
C!                Filter out TPC laser events writing only the EVEH
C!               M.Cattaneo            5-DEC-1997
C!                Fix format statement when event length > 1Mbyte
C!               M.Cattaneo           27-JUL-1998
C!                Print also processing time of previous event
C!               M.Cattaneo           14-SEP-1998
C!                Modify format statement
C!               B.Bloch              may 2001 
C!                add call ALEVNUM for official production monitoring
C?
C!======================================================================
#ifndef DOC
      CHARACTER*50 BID
#include "bcs.h"
#include "rcurnt.h"
#include "revent.h"
#include "rflags.h"
#include "rlunit.h"
#include "rparac.h"
#include "rtimes.h"
#include "evehjj.h"
#include "runhjj.h"
#include "jestjj.h"
#include "jcberr.h"
      CHARACTER*1  CLIST
      CHARACTER*80  OUNPK
      CHARACTER*60 MESSAGE
      LOGICAL FIRST
      LOGICAL RMOD
      DATA FIRST / .TRUE. /
      DATA NUMRU / 0 /
#include "bmacro.h"
C
C?   unpack every thing execpt HCAL and MUONS in case of reprocessing
C?   (the 2 alephlib routines give problem, for hcal the unpacking is
C?   redone in HPREDA, for the muons there is no packing anyway).
C
      OUNPK = ' '
      IF ( FREPRO )
     &        OUNPK = 'VD IT TP TE EC LC SA FI CR SO'
      IREAD = 0
  111 CONTINUE
C
C     This is the loop over RECORDS within a file
C
      CALL RNXMOD(MODREA,RMOD)
C
      CALL ABRSEL ( 'E', OUNPK, IRET)

C
C?   Get Input and Output unit numbers
C?   ABRSEL MUST have been called once !
C
      IF ( FIRST ) THEN
        FIRST = .FALSE.
        CALL ABUNIT (JULIN, IDUM1, IDUM2, JULOU, IDUM3)
        IF ( JULIN.EQ.0 ) THEN
          MESSAGE = ' Error in I/O Definition '
          GOTO 700
        ENDIF
      ENDIF
C
      CLIST = 'E'
      IF ( IRET.EQ.2 ) CLIST = 'R'
      SIZERE = 4./1000.* FLOAT( LENLIS( CLIST ) )

      GOTO ( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
     &  18, 19, 20, 21) IRET


C
C?   ----->   E V E N T record
C
    1 CONTINUE
      IREAD = IREAD + 1
      IND = IW(NAMIND('EVEH'))
      NUMRU = IW(IND+JEVERN)
      NUMEV = IW(IND+JEVEEV)
C Set debug flag
      FDEBRF = IREAD.GE.IDEBBC.AND.IREAD.LE.IDEBTC
      IF (.NOT.INIRUC) THEN
C Check that some constants are there.
C If not, set run number to the number from event header.
        IF (IRUNRC.EQ.0) THEN
          IF (FDEBRF) THEN
            WRITE(LOUTRL,'(A)')     '0RLOOPR- No run number defined'
            WRITE(LOUTRL,'(A,I6)')
     *                              ' RLOOPR- Run number set to ',NUMRU
            IRUNRC = NUMRU
          ENDIF
        ENDIF
C Run not initialised
        CALL RINRUN
        INIRUC = .TRUE.
      ENDIF
      ISQNRC = ISQNRC + 1
C Check data consistency
      IEVTRC = NUMEV
      IF (IRUNRC.NE.NUMRU) CALL REJECT(NUMRU,NUMEV)
      IETYP=0
      KEVEH=IW(NAMIND('EVEH'))
      IETYP=IW(KEVEH+JEVEES)
      ILASE=IW(KEVEH+JEVEM1)
      AEVTIM=AEVFRT-AEVSRT
      IF (FDEBRF.AND.JDBDRF(JULSK).GE.2)
     *          WRITE(LOUTRL,'(A,I6,A,I6,A,F7.2,A,I5,A,I4,A,F6.2)')
     *          ' RLOOPR-Evt',NUMEV,' Run',NUMRU,' ',
     *          MAX(SIZERE,0.),' Kb. Nr.in job=',IREAD,' Evtyp',
     *          IETYP,' Time(s):',AEVTIM
        js = 3
        call alevnum(js,numru,numev)
C       in case of event records look for "non physical events"
C       type=128  pause_event
C       type=129  pause_event_copy
C       type=130  last_event (in a run)
C       type=131  l3_reject
C       type=132  change_event (last_event in a run -fast run change)
C       these records will be passed on to the POT without any processin
C       type>990  DAQ error (type=998 'real' DAQ error)
C
      IF(IETYP.GE.128.AND.IETYP.LE.132)THEN
C                level 3 reject
        DO 112 I=1,NWRTMX
          IF(JOUTRL(I).NE.NOOUTP) CALL ABWSEL ('E')
  112   CONTINUE
C
      ELSE IF( (IETYP.EQ.998).OR.(BTEST(ILASE,23)) )THEN
        CALL RSHRIN(IW,'E',TEMLIS)
        L = LNBLNK(TEMLIS)
        CALL BDROP(IW,TEMLIS(5:L))
        CALL BLIST(IW,'E=','EVEH')
        DO 113 I=1,NWRTMX
          IF(JOUTRL(I).NE.NOOUTP) CALL ABWSEL ('E')
  113   CONTINUE
C
      ELSE
C
C build XTCN trigger from X1RG trigger bank when X1RG exists and XTCN
C does not exist
        CALL XTCNCR

C
C Write bunch number for reconstruction in word 10 of EVEH starting
C from '95 data (run > 35000)
        CALL RWJUBW

C
C Reconstruct the event
        CALL RECONS
C
      ENDIF
C
      GOTO 111
C
C?   ----->     R U N record
C
    2 CONTINUE
C
      IND = IW(3)
      NUMRU = IW(IND+JRUNRN)
      IF (INIRUC .AND. NUMRU.NE.IRUNRC) THEN
        INIRUC = .FALSE.
      ENDIF
      IRUNRC = NUMRU
C-----------------------------------------------------------------------
C         drop some banks from the run header to avoid that they go
C         to the POT
      CALL BDROP(IW,'HPB1HPB2HPEAHPEB')
C-  TDVV from run header as nr = 0
      IDROP = NDROP ('TDVV',0)
C-  LDST from run header as nr = 1
      IF(IRUNRC.LT.14000) THEN
        IDROP = NDROP ('LDST',1)
      ENDIF
C-----------------------------------------------------------------------
      IF (FDEBRF.AND.JDBDRF(JULSK).GE.1)
     *        WRITE(LOUTRL,'(A,I6,A,F6.2,A)')
     *        '0RLOOPR- Run ',NUMRU,' found ',SIZERE,' Kbytes read.'
C
C?   If Run already initialized write out the record
C?   if run is not initialized the record will be written out after
C?   run initilisation (in RINRUN)
C
      IF ( INIRUC ) CALL ABWSEL ('R')
C
      GOTO 111
C
C?   It is an U N K N O W N type (nowadays called slow control) record?
C?   Write it out only if one run record has been read in (numru <> 0)
C
    3 CONTINUE
      IF (FDEBRF.AND.JDBDRF(JULSK).GE.1)
     *        WRITE(LOUTRL,'(A,F6.2,A)')
     *        '0RLOOPR- Unknown Record found ',SIZERE,' Kbytes read.'
      IF ( NUMRU.NE.0 ) CALL RUNKNO
      GOTO 111
C
C?   Future application
C
    4 CONTINUE
      GOTO 111
C
C?   End of file condition, next input file is now opened
C
    5 CONTINUE
      GOTO 111
C
C?   No more input files
C
    6 CONTINUE
      MESSAGE = 'No more input files'
      GOTO 700
C
C?   NEVT limit reached
C
    7 CONTINUE
      MESSAGE = 'NEVT limit reached'
      GOTO 700
C
C?   End of selected data according to SEVT/SRUN cards
C
    8 CONTINUE
      MESSAGE = 'End of selected data according to SEVT/SRUN cards'
      GOTO 700
C
C?   Time limit reached
C
    9 CONTINUE
      MESSAGE = 'Time limit reached'
      GOTO 700
C
C?   Input file not properly opened
C
   10 CONTINUE
      MESSAGE = 'Input file not properly opened'
      GOTO 700
C
C?   Syntax error in SEVT, SRUN, IRUN, NEVT, TIME, CLAS cards
C
   11 CONTINUE
      MESSAGE =
     &    'Syntax error in SEVT, SRUN, IRUN, NEVT, TIME, CLAS cards'
      GOTO 700
C
C?   Read error on event directory
C
   12 CONTINUE
      MESSAGE = 'Read error on event directory'
      GOTO 700
C
C?   Error in FILI cards
C
   13 CONTINUE
      MESSAGE = 'Error in FILI cards'
      GOTO 700
C
C?   Cannot open input file
C
   14 CONTINUE
      MESSAGE = 'Cannot open input file'
      GOTO 700
C
C?   Error on FILO card
C
   15 CONTINUE
      MESSAGE = 'Error on FILO card'
      GOTO 700
C
C?   Cannot open output file
C
   16 CONTINUE
      MESSAGE = 'Cannot open output file'
      GOTO 700
C
C?   17 ... 21 : Error conditions. Call ABRREC again.
C
C
C?   Read error
C
   17 CONTINUE
      MESSAGE = 'Read error'
      GOTO 800
C
C?   Error in decompressing
C
   18 CONTINUE
      MESSAGE = 'Error in decompressing'
      GOTO 800
C
C?   Not enough space for unpacking
C
   19 CONTINUE
      MESSAGE = 'Not enough space for unpacking'
      GOTO 800
C
C?   Error in TPC unpacking
C
   20 CONTINUE
      MESSAGE = 'Error in TPC unpacking'
      GOTO 800
C
C?   Error during data base reading
C
   21 CONTINUE
      MESSAGE = 'Error during data base reading'
      GOTO 800
C
C?   Fatal Error
C
  700 CONTINUE
      WRITE (LOUTRL,'(2a)') ' RLOOPR - ', MESSAGE
      GOTO 999
C
C?   Recoverable Error
C
  800 CONTINUE
      WRITE (LOUTRL,'(//,2a)') ' RLOOPR - ', MESSAGE
      GOTO 111
C
C?     ____________
C?                |
C?                | The Way Out
C?                |
C?                V
C?
C
  999 CONTINUE
C
C?   Close the run if it was open
C
      IF (INIRUC) CALL RCLRUN
C
      IW(1) = 0
      RETURN
      END
#endif
@


1.7
log
@mods to JULIA timing code
@
text
@d26 2
d128 2
@


1.6
log
@mods for julia 307.4
@
text
@d24 2
d122 2
a123 2
     *          WRITE(LOUTRL,'(A,I6,A,I6,A,F7.2,A,I5,A,I4,A,F4.0)')
     *          ' RLOOPR-Evt ',NUMEV,' Run ',NUMRU,' ',
@


1.5
log
@Changes in Julia for xlum
@
text
@d20 1
a20 1
C!               M.Cattaneo            5-DEV-1997
d22 2
d34 1
d118 1
d120 4
a123 4
     *          WRITE(LOUTRL,'(A,I6,A,I6,A,F7.2,A,I5,A,I4)')
     *          ' RLOOPR- Event ',NUMEV,' Run ',NUMRU,' found.',
     *          MAX(SIZERE,0.),' Kbytes. Nr.in job=',IREAD,' Evtyp',
     *          IETYP
@


1.4
log
@Prepare Julia 305
@
text
@d18 1
a18 1
C!               P.Comas               8-AUG-1998
d20 2
d116 1
a116 1
     *          WRITE(LOUTRL,'(A,I6,A,I6,A,F6.2,A,I5,A,I4)')
@


1.3
log
@import jul280 from historian
Modified Files:
	aamain.F aboldr.F ajmmcl.F almmcl.F altime.F aulpol.F
	bccrun.F bcpack.F binijo.F biniru.F bmsum.F bpreda.F bprsum.F
	bslowc.F
	cabook.F calrec.F calrel.F calrep.F calsup.F cashet.F casmp.F
	casneu.F casnmp.F cclorl.F cctrmi.F ccutpe.F cdang.F cdths.F
 	cegclu.F cencch.F cencne.F cesclu.F cexcob.F cexhis.F cfpass.F
 	cfpmip.F cfpnmp.F cgrunc.F chclu.F chgclu.F chsclu.F cinijo.F
 	cinirl.F cinpar.F cinsrl.F cisgam.F cishit.F cludis.F cmoni.F
 	cnighb.F coslst.F cpadwr.F cparad.F cpotcr.F cpoteh.F cpotlc.F
 	cptcom.F crcalo.F crchrl.F crcjob.F crcpar.F crhclu.F cthclu.F
 	ctkchg.F ctrmip.F ctrpar.F ctrtoc.F cvrify.F
 	e1bpei.F e2bpei.F e3bpei.F e4bary.F e4cosz.F e4dead.F e4deij.F
 	e4fdij.F e4fide.F e4find.F e4fnec.F e4frac.F e4gtbr.F e4gtpl.F
 	e4gtso.F e4gtst.F e4gttw.F e4indi.F e4lea1.F e4ovrl.F e4pal.F
 	e4r1r2.F e4r2r3.F e4r3r4.F e4radc.F e4res2.F e4res3.F e4tstl.F
 	e4xyz0.F eautop.F ebegid.F eboxki.F ecalig.F ecblda.F ecboba.F
	ecbook.F eccaob.F ecchkb.F ecclco.F ecclus.F ecdamp.F ecdebg.F
 	ecdete.F ecdigi.F ecener.F eceras.F ecfclu.F ecfils.F ecfmip.F
 	ecfobj.F ecgflw.F ecgmix.F echarg.F echcgl.F echedc.F echiba.F
 	echist.F echtag.F ecinit.F ecinrv.F eclamp.F eclana.F ecleib.F
 	eclgeo.F eclope.F eclorl.F eclost.F ecltag.F ecltrk.F ecltyp.F
 	ecluar.F ecmesp.F ecmod.F ecmopl.F ecncob.F ecobnk.F ecoent.F
 	ecoidp.F ecos.F ecpasr.F ecplm.F ecprin.F ecprlo.F ecrcob.F
 	ecre4d.F ecreib.F ecrmip.F ecrndx.F ecrpei.F ecrtr.F ecrunq.F
 	ecscmd.F ecst.F ecsupp.F ecsw1093.F ecsw94.F ectemp.F ecthre.F
 	ectopo.F ectpc.F ectrap.F ectrea.F ecxmod.F edisal.F edlist.F
 	efaxe.F efbook.F eferrr.F eficlp.F eficv.F efiecp.F efieib.F
 	efijob.F efix.F efixi94.F eflcst.F efolmk.F efpard.F eftiel.F
 	egacst.F egaest.F egetds.F egfcst.F egttks.F ehcflo.F ehlix.F
 	ehreg.F eidedx.F eident.F eieffl.F einhlx.F einijo.F einirl.F
 	einiru.F einitk.F einsrl.F eipard.F eithr.F eknewb.F eknewe.F
 	elecid.F elongi.F emfill.F emskei.F emskev.F emskf.F emski.F
 	emskji.F emskmu.F enfmsk.F enighb.F enoise.F enprox.F enstat.F
 	epadcl.F epatrn.F epcalo.F epchg.F epneu.F epreda.F eproba.F
 	eprsto.F eprsum.F eprtpc.F ereset.F eroad.F escdef.F escoun.F
 	esfil.F eslas.F eslct.F eslctf.F eslowc.F estag.F esveto.F
 	eswpst.F etdifp.F ethres.F etrdev.F ewdifp.F ewircl.F ex3ijk.F
 	fawian.F ffield.F fidhea.F fidrot.F finiru.F fitall.F fitwri.F
 	fkink.F fkkpar.F floweh.F flowfi.F flowtr.F fmuid.F fpiden.F
 	frefit.F ftpcer.F ftrack.F
 	gambnk.F gapeco.F gasteer.F
 	hcalib.F hcalrd.F hcatow.F hcbhis.F hcfclu.F hchist.F hclcra.F
 	hcltst.F hclufi.F hcos.F hcsimm.F hdgdeb.F hdgfil.F hdgpot.F
 	hdgsum.F hdprec.F hdspre.F hflnoi.F hinijo.F hiniru.F hmener.F
 	hmfind.F hmroad.F hnoise.F hnoisy.F hpatco.F hphnoi.F hplink.F
 	hprana.F hpranp.F hprdig.F hpreda.F hprpot.F hprsum.F hprunc.F
 	hrcomp.F hrcpat.F hrdcal.F hroad.F hslink.F hslowc.F hspare.F
 	hsptre.F hstofi.F htrack.F htubfi.F htwcr.F
 	iasign.F iattma.F ibnkin.F icaswt.F icftoi.F iclimb.F icrcco.F
 	ideadw.F idigpr.F ienang.F ifind1.F ifind2.F ifitp.F iftrak.F
 	igetti.F igettp.F igicha.F iheler.F iinijo.F iiniru.F iintrk.F
 	imatch.F inigap.F insect.F intrak.F ipakdi.F ipdsti.F iphcor.F
 	ipreda.F iprsum.F ipstat.F irefin.F ireopd.F isave.F ishuff.F
 	ishufl.F islowc.F isrch.F itbook.F itccut.F itcopr.F itcrec.F
 	itcrep.F itctpc.F itctrk.F itcxng.F iterr.F itextn.F ithist.F
 	itidy1.F itidy2.F itlnk1.F itlnk2.F itpcan.F itrak.F itrecf.F
 	itreci.F itree.F itrkci.F itrkeq.F itrkzr.F itrmca.F
@
text
@d38 1
@


1.2
log
@julia version 279
@
text
@a0 1
*DK rloopr
@


1.1
log
@Initial revision
@
text
@d17 4
d112 1
d133 1
a133 1
      ELSE IF(IETYP.EQ.998)THEN
d147 6
@


1.1.1.1
log
@import julia 300
@
text
@@
