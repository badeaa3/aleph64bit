head	1.2;
access;
symbols
	bos3489-1:1.2.0.2
	bos3589:1.2
	bos3489:1.2
	bos3389:1.2
	bos3289:1.2
	bos3189:1.2
	bos3089:1.2
	v3089:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.11.12.47.56;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.58.11;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.58.12;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import new version made for cvs on alws.
add eprwnd.F to test the descriptor before calling CFREW. Should be included
into the EPIO next release.
 Added Files:
 	eprwnd.F
@
text
@      SUBROUTINE BDAWR(JW,LUN,NAME,NR)
*     write bank to direct access data set
*     ignored if bank not existing
*             if data set not opened (BDABF)
*             if password wrong
*
*     ABEND IF SPACE ON DATA SET INSUFFICIENT
#include "dacom.h"
#include "param.h"
      COMMON/BCS/IW(1000)
      INTEGER JW(*)
      CHARACTER*4 NAME
      IDAW=NLINK('+DAW',LUN)
      IF(IDAW.NE.0) THEN
*        store BDAWR-request in bank '+DAW'
         NDAW=IW(IDAW+1)
         IW(IDAW+5*NDAW+2)=JW(13)-IW(13)+1
         IW(IDAW+5*NDAW+3)=INTCHA(NAME)
         IW(IDAW+5*NDAW+4)=NR
         IW(IDAW+5*NDAW+5)=0
         IW(IDAW+5*NDAW+6)=0
         IW(IDAW+1)=IW(IDAW+1)+1
         IF(IW(IDAW+1).GE.100) THEN
*           now write to da file
            CALL BDAWE(-LUN)
         END IF
         GOTO 100
      END IF
*     immediate write (no '+DAW' bank)
      INDA=MLINK(JW,NAME,NR)
      IF(INDA.EQ.0) GOTO 100
*     ignore if data set not opened
      IUB=NLINK('+BUF',LUN)
      IF(IUB.EQ.0) GOTO 100
*     password check
      IF(IW(IUB+18).EQ.0) GOTO 100
      LUNDA=LUN
      NWRDA=IW(IUB+11)
      NADA=INTCHA(NAME)
      NRDA=NR
      NDDA=JW(INDA)
*     reserve unit
      CALL DARES
*     ... write
      CALL BDAWI(JW)
      CALL DAFWR(0,1)
      CALL DAFWR(0,0)
*     free data set
      CALL DADES
  100 RETURN
      END
@


1.1
log
@Initial revision
@
text
@a0 1
*DK bdawr
@


1.1.1.1
log
@import bos77 3089
@
text
@@
