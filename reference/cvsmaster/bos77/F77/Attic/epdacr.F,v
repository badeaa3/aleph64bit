head	1.4;
access;
symbols
	bos3489-1:1.3.0.2
	bos3489:1.3
	bos3389:1.3
	bos3289:1.3
	bos3189:1.3
	bos3089:1.2
	v3089:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.01.29.15.49.02;	author flr;	state dead;
branches;
next	1.3;

1.3
date	96.05.03.14.55.00;	author flr;	state Exp;
branches;
next	1.2;

1.2
date	96.03.11.12.52.49;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.58.42;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.58.43;	author flr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@release bos3589: new epio routines
@
text
@#if defined(ALEPH_DEC) &&  ! defined(UNIX)
      SUBROUTINE EPDACR(LUNIT,IBLOCK,IRCOFF,IERR)
C ----------------------------------------------------------------
C standard fortran version from EPIO 1.68 cernlib 92b
C -----------------------------------------------------------------
C.
C. prepares a unit for random access reading
C.
C. input :
C.
C. LUNIT  logical unit
C. IBLOCK no. of the block to be read next (READ(LUN,REC=IBLOCK)...)
C. IRCOFF record off-set of first logical record in block (see
C.        remark below)
C.
C. output
C. IERR     ERROR FLAG. SEE SEPARATE LIST.
C.
C. Remark:
C. The file has to be scanned in sequential mode beforehand,
C. by calling EPREAD with MODE=20 (obligatory).
C. After each such call the user keeps control words 11 (block
C. number) and 31 (record off-set) for those records from
C. where he wants to start.
C. The unit must be opened for random access by the user.He may
C. then read any number of records following the one given
C. in the call to EPDACR.
C. The example should be consulted.
C.
      COMMON/EPCOMM/NMUNIT,NWUNIT,NCONT,ISTART,LASTUT,LREF,LIST(350)
      EQUIVALENCE (NOUTUT,LIST(8))
*
      IF(LASTUT.NE.LUNIT)  THEN
         CALL EPUNIT(LUNIT,IERR)
         IF(IERR.NE.0)  GOTO 999
      ENDIF
*--- set random access mode
      LIST(ISTART+32)=1
      LIST(ISTART+33)=1
*--- set flag for reading next buffer to "true"
      LIST(ISTART+14)=0
*--- set pointer position flag to "start of header"
      LIST(ISTART+22)=0
*--- set record off-set
      LIST(ISTART+23)=IRCOFF
*--- set block number of last block "read"
      LIST(ISTART+11)=IBLOCK-1
  999 END
#endif
@


1.3
log
@replace ${VENDOR} by ALEPH_${VENDOR}
Modified Files:
  F77/ 	blo32w.F cfribm.F ctoibm.F epblin.F epdacr.F epdefu.F ephead.F
 	epinit.F epopen.F
@
text
@@


1.2
log
@import new version made for cvs on alws.
add eprwnd.F to test the descriptor before calling CFREW. Should be included
into the EPIO next release.
 Added Files:
 	eprwnd.F
@
text
@d1 1
a1 1
#if defined(DEC) &&  ! defined(UNIX)
@


1.1
log
@Initial revision
@
text
@a0 1
*DK epdacr
@


1.1.1.1
log
@import bos77 3089
@
text
@@
