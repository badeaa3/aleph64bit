head	1.2;
access;
symbols
	bos3489-1:1.2.0.2
	bos3589:1.2
	bos3489:1.2
	bos3389:1.2
	bos3289:1.2
	bos3189:1.2
	bos3089:1.2
	v3089:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.11.12.47.28;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.58.09;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.58.10;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import new version made for cvs on alws.
add eprwnd.F to test the descriptor before calling CFREW. Should be included
into the EPIO next release.
 Added Files:
 	eprwnd.F
@
text
@      SUBROUTINE BDABF(LUN,IRECL,DSN,PASSWD)

*     OPEN EXISTING DATA SET - NECESSARY FOR ANY FURTHER USE OF DA
*     IRECL= NUMBER OF DATA WORDS/RECORD (IDENTICAL TO VALUE GIVEN
*            IN INITDA)
*
*     PASSWD = STRING OF 4 CHARACTERS. IF IDENTICAL TO PASSWORD GIVEN
*            IN INITDA, WRITE/MODIFY ALLOWED; OTHERWISE READ ONLY
*     A SPECIAL PASSWORD ALLOWS WRITE/MODIFY, IF PASSWD UNKNOWN
*     REQUIRES BUFFER SPACE IN IW OF ABOUT 2*IRECL WORDS
*
*
      COMMON/BCS/IW(1000)
#include "dacom.h"
      INTEGER LUNDAR(24)
      EQUIVALENCE (LUNDA,LUNDAR(1))
#include "param.h"
      CHARACTER*(*) DSN
      CHARACTER*4 PASSWD
      CHARACTER*5 TEXT
      LOGICAL FIRST
      DATA    FIRST/.TRUE./
*     ...

*     CLEAR DACOM FOR FIRST OPEN

      IF(FIRST) THEN
         FIRST=.FALSE.
         DO 05 M=1,24
   05    LUNDAR(M)=0
         CALL DATIME(NDTD,IDUMMY)
      END IF
      IW1=IW(1)
      IW(1)=0
      IW(2)=0

      LUNDA=LUN
*     SKIP OPEN, IF BUFFER BANK EXISTS

      IF(NLINK('+BUF',LUN).NE.0) GOTO 100

      IF(IW(LUP).GT.0) WRITE(IW(LUP),101) LUN,IRECL,DSN

      TEXT='OPEN'
      IF(IW1.GE.2) GOTO 10
      IF(MOD(IW1,2).EQ.1) THEN
#include "openb.h"
      ELSE
#include "openc.h"
      END IF

*     CREATE BUFFER BANK, READ RECORD 3 AND CHECK PASSWORD

   10 IND=NBANK('+BUF',LUN,18)
      IF(IND.EQ.0) GOTO 92
      IW(IND+1)=57
      IF(MOD(IW1,2).EQ.1) IW(IND+2)=1
      IW(IND+4)= 1
      TEXT='READ'
      READ(UNIT=LUN,REC=3,ERR=90) (IW(IND+10+I),I=1,8)
#include "unlock.h"
      IF(IRECL.NE.IW(IND+11)) GOTO 94
      CALL DATIME(IDATE,IDUMMY)
      IW(IND+17)=IDATE
*     RESERVE WORK BANKS AS BUFFER FOR DIRECTORY AND DATA RECORDS
      CALL WBANK(IW,IDR,IRECL,*92)
      CALL WBANK(IW,IDD,IRECL,*92)
      IF(INTCHA(PASSWD).EQ.IW(IND+18).OR.PASSWD.EQ.'BOSS') THEN
*        CORRECT PASSWORD
         IF(IW(LUP).GT.0) WRITE(IW(LUP),103)
      ELSE
*        INCORRECT PASSWORD
         IF(IW(LUP).GT.0) WRITE(IW(LUP),104)
         IW(IND+18)=0
      END IF

      GOTO 100

*     ERROR PRINTOUT

   90 IF(IW(LUP).GT.0) WRITE(IW(LUP),105) TEXT
      GOTO 99
   92 IF(IW(LUP).GT.0) WRITE(IW(LUP),106)
      GOTO 99
   94 IF(IW(LUP).GT.0) WRITE(IW(LUP),107) IRECL,IW(IND+11)
      GOTO 99
   99 IND=NDROP('+BUF',LUN)
      CALL BABEND('BDABF')
  100 RETURN
  101 FORMAT('0-----------  OPENDA  LUN=',I2,5X,' IRECL=',I4,5X,
     1   'DSN=',A,5X,' PASSWD=....')
  102 FORMAT(' -----------  OPEN SUCCESSFULLY COMPLETED')
  103 FORMAT('              CORRECT PASSWORD GIVEN - WRITE/MODIFY',
     1   ' ALLOWED')
  104 FORMAT('              ONLY READ POSSIBLE')
  105 FORMAT(' -----------  IO-ERROR DURING ',A5)
  106 FORMAT(' -----------  NOT ENOUGH SPACE FOR BUFFER BANKS')
  107 FORMAT(' -----------  IRECL CONTRADICTION',2I10)
      END
@


1.1
log
@Initial revision
@
text
@a0 1
*DK bdabf
@


1.1.1.1
log
@import bos77 3089
@
text
@@
