head	1.2;
access;
symbols
	bos3489-1:1.2.0.2
	bos3589:1.2
	bos3489:1.2
	bos3389:1.2
	bos3289:1.2
	bos3189:1.2
	bos3089:1.2
	v3089:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.03.11.12.58.39;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.07.13.58.42;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.07.13.58.43;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@import new version made for cvs on alws.
add eprwnd.F to test the descriptor before calling CFREW. Should be included
into the EPIO next release.
 Added Files:
 	eprwnd.F
@
text
@      SUBROUTINE WSWAP(JW,ID1,ID2)
C
C     SWAP THE WORK BANK INDICES ID1 AND ID2
C
#include "boscom.h"
#include "param.h"
      INTEGER JW(*),ID1(1),ID2(1)
C     ...
      IF(JW(ICK).NE.12345) CALL BBNOT(JW,'WSWAP')
      JW(1)=0
      JW(2)=0
C
C     VERIFY VALUE OF WORK BANK INDEX ID1
C
      LD1=LOCF(ID1(1))-JW(LJW)+1
      IF(ID1(1).GT.JW(IWK).AND.ID1(1).LT.JW(NJW)) THEN
         IF(JW(ID1(1)-1).EQ.LD1) GOTO 10
      END IF
      IF(JW(LUP).GT.0) WRITE(JW(LUP),1001) ID1(1)
      CALL BABEND('WSWAP')
C
C     VERIFY VALUE OF WORK BANK INDEX ID2
C
   10 LD2=LOCF(ID2(1))-JW(LJW)+1
      IF(ID2(1).GT.JW(IWK).AND.ID2(1).LT.JW(NJW)) THEN
         IF(JW(ID2(1)-1).EQ.LD2) GOTO 20
      END IF
      IF(JW(LUP).GT.0) WRITE(JW(LUP),1001) ID2(1)
      CALL BABEND('WSWAP')
C
C     INSERT NEW POINTERS AND EXCHANGE INDICES
C
   20 IF(ID1(1).NE.0) JW(ID1(1)-1)=LD2
      IF(ID2(1).NE.0) JW(ID2(1)-1)=LD1
      JD    =ID1(1)
      ID1(1)=ID2(1)
      ID2(1)=JD
C
  100 RETURN
 1001 FORMAT('0BOS--WSWAP-  INDEX ID INCORRECT - STOP'/
     1 14X,'ID= ',I12)
      END
@


1.1
log
@Initial revision
@
text
@a0 1
*DK wswap
@


1.1.1.1
log
@import bos77 3089
@
text
@@
