head	1.2;
access;
symbols
	look25:1.2
	look24:1.2
	look23:1.2
	look22:1.2
	look21:1.2
	look20:1.2
	v15:1.1.1.1
	flr:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.04.18.09.07.18;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	94.12.09.15.50.30;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	94.12.09.15.50.31;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@change VAX to DEC.AND..NOT.UNIX ==> version 20

 Modified Files:
 	lkevt.h lkfil.h lklast.h lkunpk.h version.h
 Removed Files:
	lookend.h
@
text
@      SUBROUTINE LKSTCOM(PRECOM,NEWCOM,COMNUM)
C -----------------------------------------------------
C! store previous commands to recall them eventually
C - Input: PRECOM  / A  = array to store previous commands
C          NEWCOM  / A  = new command to be stored
C          COMNUM  / I  = number of commands already stored
C -----------------------------------------------------
#ifndef DOC
      CHARACTER*80 PRECOM(20),NEWCOM
      INTEGER COMNUM
C -----------------------------------------------------
      IF (COMNUM.EQ.0) THEN
          COMNUM=COMNUM+1
          PRECOM(COMNUM)=NEWCOM
      ELSEIF (COMNUM.LT.20) THEN
          IF (PRECOM(COMNUM).NE.NEWCOM) THEN
              COMNUM=COMNUM+1
              PRECOM(COMNUM)=NEWCOM
          ENDIF
      ELSE
          IF (PRECOM(20).NE.NEWCOM) THEN
              DO 10 I=2,20
 10           PRECOM(I-1)=PRECOM(I)
              PRECOM(20)=NEWCOM
          ENDIF
      ENDIF
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@a0 1
*DK lkstcom
@


1.1.1.1
log
@import look 15
@
text
@@
