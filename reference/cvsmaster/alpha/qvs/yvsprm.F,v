head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.45;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.46;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE YVSPRM(PAR,DU,EU,DV,EV,UVCR,PMX)
CKEY  QVSRCH / INTERNAL
C ------------------------------------------------------------------------------
C! Finds maximum and error at peak of 6-parameter paraboloid
C     REPRESENTING 2-D LIKELIHOOD PEAK
C  Author : T. MATTISON  U.A.BARCELONA/SLAC  1 DECEMBER 1992
C
C  Input Arguments :
C     F=PAR(1)*DU*DU + PAR(2)*DU + PAR(3) +
C       PAR(4)*DV*DV + PAR(5)*DV + PAR(6)*DU*DV
C  Output Arguments :
C  *  DU,DV STEPS TO MAX IN BIN UNITS
C  *  EU,EV ARE ERROR IN BIN UNITS
C  *  UVCR IS NORMALIZED CORRELATION
C  *  PMX IS INTERPOLATED VALUE AT MAXIMUM
C        IF PROBLEMS LIKE NO MAX, NOT POS-DEFINITE,
C        EU AND/OR EV WILL BE NEGATIVE
C        DU AND/OR DV MAY BE ZERO
C
C ------------------------------------------------------------------------------
#ifndef DOC
      DIMENSION PAR(6)
C ------------------------------------------------------------------------------
      A=PAR(1)
      B=PAR(2)
      C=PAR(3)
      D=PAR(4)
      E=PAR(5)
      F=PAR(6)
C PATHOLOGICAL CASES FIRST
      IF (A .GE. 0. .AND. D .GE. 0.) THEN
C TAKE BIN CENTER, NEGATIVE ERRORS
        DU=0.
        DV=0.
        EU=-1.
        EV=-1.
        UVCR=0.
      ELSEIF (A .GE. 0.) THEN
C SOLVE IN V ONLY, NULL IN U
        DV=-.5*E/D
        EV=-SQRT(-.5/D)
        DU=0.
        EU=-1.
        UVCR=0.
      ELSEIF (D .GE. 0.) THEN
C SOLVE IN U ONLY, NULL IN V
        DU=-.5*B/A
        EU=-SQRT(-.5/A)
        DV=0.
        EV=-1.
        UVCR=0.
      ELSE
C FIND AND CHECK DETERMINANT
        DET=4.*A*D-F*F
        IF (DET .LE. 0.) THEN
C TAKE HALF-STEP IN BOTH U AND V
          DU=-.25*B/A
          DV=-.25*E/D
C USE NEGATIVE INDEPENDENT ERRORS
          EU=-SQRT(-.5/A)
          EV=-SQRT(-.5/D)
C COMPLETELY CORRELATED
          UVCR=SIGN(.99,F)
        ELSE
C THIS IS THE CASE WE HOPE FOR!
          IERR=0
          RDET=1./DET
C FIND DISTANCE TO PARABOLA MAXIMUM
          DU=RDET*(-2.*B*D+E*F)
          DV=RDET*(-2.*A*E+B*F)
C ERROR FROM CURVATURE
          EU=SQRT(-2.*D*RDET)
          EV=SQRT(-2.*A*RDET)
          UVCR=F/SQRT(4.*A*D)
        ENDIF
      ENDIF
C VALUE AT PEAK
      PMX=A*DU*DU+B*DU+C+D*DV*DV+E*DV+F*DU*DV
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
