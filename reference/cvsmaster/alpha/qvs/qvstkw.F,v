head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.41;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.42;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QVSTKW(ITK,DIRA,WTMA)
CKEY  QVSRCH / INTERNAL
C ------------------------------------------------------------------------------
C! Returns track weight matrix in ALEPH system
C  Author : T. MATTISON  U.A.BARCELONA/SLAC  1 DECEMBER 1992
C
C  Input Arguments :
C  *  ITK IS ALPHA TRACK INDEX
C  *  DIRA() IS NORMALIZED TRACK DIRECTION IN ALEPH SYSTEM
C      CAN BE OBTAINED BY QVSTKV
C  Output Argument :
C  *  WTMA(,) IS WEIGHT MATRIX IN ALEPH SYSTEM
C
C     THE CHI SQUARE DISTANCE
C     FROM POINT Y() ON THE TRACK TO POINT X() ANYWHERE ELSE IS
C     FOUND BY SUMMING OVER I,J = 1,3
C     (X(I)-Y(I)) * WTMA(I,J) * (X(J)-Y(J))
C ------------------------------------------------------------------------------
#ifndef DOC
      DIMENSION DIRA(3),WTMA(3,3)
      REAL*8 T1,T2
#include "qcde.h"
#include "qmacro.h"
C ------------------------------------------------------------------------------
C
C GET HELIX PARAMETERS
      TL=QFRFTL(ITK)
      ST=1./SQRT(1.+TL**2)
C
C MAKE COVARIANCE NORMAL TO TRACK DIRECTION
      C11=QFRFEM(ITK,4,4)
      C21=QFRFEM(ITK,5,4)*ST
      C22=QFRFEM(ITK,5,5)*ST*ST
C
C CLEAR WEIGHT MATRIX
      CALL UZERO(WTMA,1,9)
C
C DETERMINANT OF COVARIANCE
      T1=C11
      T1=T1*C22
      T2=C21
      T2=T2*C21
      DET=T1-T2
C
      IF (DET .LE. 0.) THEN
C TRACK WEIGHT MATRIX IS NONSENSE
        WRITE (IW(6),19) DET,ITK,KRUN,KEVT
   19   FORMAT (' QVSTKW: DET=',1PE10.3,
     >   ' ITK=',I3,' KRUN=',I6,' KEVT=',I6)
        COR=SQRT(ABS(C11*C22))
        IF (COR .NE. 0.) COR=C21/COR
        WRITE (IW(6),29) C11,C22,COR
   29   FORMAT (' C11=',1PE10.3,' C22=',1PE10.3,' COR=',0PF10.6)
C SET THE CORRELATION TO ZERO
        C21=0.
        WRITE (IW(6),*) ' ## QVSTKW ## : SETTING CORRELATION TO ZERO'
      ENDIF
C
C FILL CORNER OF WEIGHT MATRIX
      WTMA(1,1)=C11
      WTMA(2,1)=C21
      WTMA(1,2)=WTMA(2,1)
      WTMA(2,2)=C22
C
C INVERT THE SUBMATRIX
      CALL RSINV(2,WTMA,3,IFAIL)
C
C CHECK THE RESULT
      IF (IFAIL .NE. 0) THEN
        WRITE (IW(6),39) IFAIL,ITK,KRUN,KEVT
   39   FORMAT (' QVSTKW: IFAIL=',I3,
     >   ' ITK=',I3,' KRUN=',I6,' KEVT=',I6)
        WRITE (IW(6),29) C11,C22,COR
C FILL MATRIX WITH ZEROES
        CALL UZERO(WTMA,1,9)
C AND QUIT
        RETURN
      ENDIF
C
C ROTATE FROM TRACK SYSTEM TO ALEPH SYSTEM
      CALL YVSRMI(DIRA,WTMA,WTMA)
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
