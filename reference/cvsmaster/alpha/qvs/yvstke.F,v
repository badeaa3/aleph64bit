head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.43;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.44;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE YVSTKE(WTM,VXP,VZP,VXZ)
CKEY  QVSRCH / INTERNAL
C ------------------------------------------------------------------------------
C! Finds track error**2 in jet coordinate system
C  Author : T. MATTISON  U.A.BARCELONA/SLAC  1 DECEMBER 1992
C
C  Input Argument :
C     WTM(,) IS 3D TRACK WEIGHT MATRIX IN JET SYSTEM
C  Output Arguments :
C  *  VXP IS TRACK VARIANCE (SIGMA**2) IN D0-LIKE DIRECTION
C  *  VZP IS TRACK VARIANCE IN Z0-LIKE DIRECTION
C  *  VXZ IS COVARIANCE
C
C ------------------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
      DIMENSION WTM(3,3)
      REAL*8 T1,T2
C ------------------------------------------------------------------------------
C
C ASSUME BIG VARIANCES IN CASE OF FAILURE
      VXP=999.
      VZP=999.
      VXZ=0.
C
C DETERMINANT OF SUBMATRIX
      T1=WTM(1,1)
      T1=T1*WTM(2,2)
      T2=WTM(2,1)
      T2=T2*WTM(1,2)
      DET=T1-T2
      W11=WTM(1,1)
      W22=WTM(2,2)
      COR=SQRT(ABS(W11*W22))
      IF (COR .NE. 0.) COR=WTM(1,2)/COR
C
      IF (DET .LE. 0.) THEN
C TRACK WEIGHT MATRIX IS NONSENSE
CCCC    WRITE (IW(6),19) DET
   19   FORMAT (' ## YVSTKE ## : DET=',1PE10.3)
CCCC    WRITE (IW(6),29) W11,W22,COR
   29   FORMAT (' W11=',1PE10.3,' W22=',1PE10.3,' COR=',0PF10.6)
C GIVE UP
        RETURN
      ELSE
C INVERT THE SUBMATRIX
        CALL RSINV(2,WTM,3,IFAIL)
C CHECK THE RESULT
        IF (IFAIL .NE. 0) THEN
          WRITE (IW(6),39) IFAIL
   39     FORMAT (' ## YVSTKE ## : IFAIL=',I3)
          WRITE (IW(6),29) W11,W22,COR
        ELSE
C COPY THE RESULTS
          VXP=WTM(1,1)
          VZP=WTM(2,2)
          VXZ=WTM(1,2)
        ENDIF
      ENDIF
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
