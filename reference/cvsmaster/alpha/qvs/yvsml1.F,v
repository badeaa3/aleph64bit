head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.44;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.45;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE YVSML1(NB,UL,UH,VLF,UM,EUM,VLFM)
CKEY  QVSRCH / INTERNAL
C ------------------------------------------------------------------------------
C! Finds maximum of 1-dimensional likelhood function
C  Author : T. MATTISON  U.A.BARCELONA/SLAC  1 DECEMBER 1992
C
C  Input Arguments :
C  *  NB,UL,UH ARE NUMBER OF BINS, LOWER AND UPPER LIMITS
C  *  VLF() IS ARRAY CONTAINING LIKELIHOOD FUNCTION
C  Output Arguments :
C      (FROM LOCAL PARABOLA FIT TO 3 BINS AT PEAK)
C  *  UM IS LOCATION OF MAXIMUM
C  *  EUM IS ERROR (NEGATIVE IF NO REAL MAXIMUM FOUND)
C  *  VLFM IS VALUE AT MAXIMUM
C
C ------------------------------------------------------------------------------
#ifndef DOC
      DIMENSION VLF(*)
C ------------------------------------------------------------------------------
C FIND PEAK BIN (AVOID END BINS)
      WMAX=VLF(2)-1.
      DO 150 IB=2,NB-1
        IF (VLF(IB) .GT. WMAX) THEN
          IPEAK=IB
          WMAX=VLF(IB)
        ENDIF
  150 CONTINUE
C FIND COEFFICIENTS OF LOCAL PARABOLA (BIN UNITS)
C A*DU**2+B*DU+C
      C=VLF(IPEAK)
      B=.5*(VLF(IPEAK+1)-VLF(IPEAK-1))
      A=VLF(IPEAK+1)-B-C
C FIND DISTANCE TO PARABOLA MAXIMUM
C AND ERROR FROM CURVATURE (BOTH IN BIN UNITS)
      IF (A .NE. 0.) THEN
        DU=-.5*B/A
C MAKE ERROR NEGATIVE IF REALLY A MINIMUM (CAN HAPPEN AT EDGES)
        EU=SIGN(SQRT(ABS(.5/A)),-A)
      ELSE
C NO CURVATURE, DON'T MOVE
        DU=0.
C SET ERROR TO FULL BIN SIZE
        EU=-1.
      ENDIF
C VALUE AT PEAK
      VLFM=A*DU*DU+B*DU+C
C CONVERT TO REAL UNITS
      BW=(UH-UL)/NB
C PEAK POSITION
      UM=UL+(IPEAK-.5+DU)*BW
C ERROR
      EUM=EU*ABS(BW)
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
