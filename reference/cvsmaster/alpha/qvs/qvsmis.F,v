head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.40;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.41;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QVSMIS(ITK,VTX,D0V,Z0V,R3D)
CKEY  QVSRCH / INTERNAL
C ------------------------------------------------------------------------------
C! Calculates vertex miss distance
C  Author : T. MATTISON  U.A.BARCELONA/SLAC  1 DECEMBER 1992
C
C  Input Arguments :
C  *  ITK IS ALPHA TRACK NUMBER
C  *  VTX() IS VERTEX COORDINATES
C  Output Arguments :
C  *  D0V IS D0 WITH RESPECT TO VERTEX
C  *  Z0V IS Z0 WITH RESPECT TO VERTEX
C  *  R3D IS 3D MISS DISTANCE
C
C ------------------------------------------------------------------------------
#ifndef DOC
      DIMENSION VTX(3)
#include "qcde.h"
#include "qmacro.h"
C ------------------------------------------------------------------------------
C
C XY TRACK DIRECTION
      P0=QFRFP0(ITK)
      SP=SIN(P0)
      CP=COS(P0)
C
C TRACK POSITION AT CLOSEST APPROACH TO ALEPH Z AXIS
      D0=QFRFD0(ITK)
      X0= D0*SP
      Y0=-D0*CP
      Z0=QFRFZ0(ITK)
C
C ROTATE VERTEX TO SYSTEM WHERE TRACK PHI=0
      XV= CP*VTX(1)+SP*VTX(2)
      YV=-SP*VTX(1)+CP*VTX(2)
C
C D0 WITH RESPECT TO VERTEX
      D0V=D0+YV
C
C CURVATURE CORRECTION
      RINV=QFRFIR(ITK)
      D0V=D0V-.5*RINV*XV**2
C
C Z0 AT POINT OF CLOSEST APPROACH TO XV,YV AXIS
      TL=QFRFTL(ITK)
      ZV=Z0+TL*XV
C
C LONGITUDINAL VERTEX MISS
      Z0V=ZV-VTX(3)
C
C ANGLE FROM BEAM DIRECTION
      STH=1./SQRT(1.+TL**2)
      CTH=TL*STH
C
C TRACK DIRECTION AT CLOSEST APPROACH
      DX=CP*STH
      DY=SP*STH
      DZ=CTH
C
C FIND 3D POINT OF CLOSEST APPROACH TO VERTEX
C TRACK LINE IS X+S*D=(X0,Y0,X0)+S*(DX,DY,DZ)
C VERTEX POINT IS V=VTX(1,2,3)
C     DIST**2=(X+S*D-V)**2
C     D/DS   = 2 (X+SMIN*D-V) DOT D = 0
C     SMIN   = ((V-X) DOT D) / (D DOT D) = (V-X) DOT D
C
      SMIN=(VTX(1)-X0)*DX + (VTX(2)-Y0)*DY + (VTX(3)-Z0)*DZ
C
C SHORTEST VECTOR FROM TRACK TO VERTEX
      XC=X0+SMIN*DX-VTX(1)
      YC=Y0+SMIN*DY-VTX(2)
      ZC=Z0+SMIN*DZ-VTX(3)
C
C 3D DISTANCE FROM VERTEX
      R3D=SQRT(XC**2+YC**2+ZC**2)
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
