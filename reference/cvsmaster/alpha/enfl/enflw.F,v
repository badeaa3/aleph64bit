head	1.2;
access;
symbols
	alpha126_22:1.2
	alpha126_21:1.2
	alpha126_20:1.2
	alpha126_19:1.2
	alpha126_18:1.2
	alpha126_17:1.2
	alpha126_16:1.2
	alpha126_15:1.2
	alpha126_14:1.2
	alpha126_13:1.2
	alpha126_12:1.2
	alpha126_11:1.2
	alpha126_10:1.2
	alpha126_09:1.2
	alpha126_08:1.2
	alpha126_07:1.2
	alpha126_06:1.2
	alpha126_05:1.2
	alpha126_04:1.2
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	2001.02.06.07.57.33;	author boucrot;	state Exp;
branches;
next	1.1;

1.1
date	96.03.14.12.42.27;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.28;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@      SUBROUTINE ENFLW(IREJET)
C----------------------------------------------------------------
C! Create the ENFW section if the user wishes
C
C  Inputs:  -- Bank EFOL, EAUX for the MiniDST
C           -- Bank FWEV, FWPA for the MicroDST
C
C  Outputs: -- ALPHA section ENFW
C
C  P. Janot -- 22 august 1992
C  Modified by A. Venturi 30 Nov 2000
C           -- removed cut on maximum charged energy
C----------------------------------------------------------------
#ifndef DOC
#include "parcut.h"
#include "parabank.h"
      LOGICAL lumok, hvok, first
      INTEGER runqua
      COMMON / outmic / lumok, hvok, runqua
      DATA first /.TRUE./
#include "qcde.h"
#include "qmacro.h"
C----------------------------------------------------------------
C  For the Micros
C
      ifwpa = NLINK('FWPA',0)
      IF ( ifwpa .GT. 0 ) THEN
        IF ( first ) THEN
          CALL parset
          first = .FALSE.
        ENDIF
        CALL mdstrd(lumok,hvok,runqua,ier)
        IF ( ier .EQ. 0 ) THEN
          irejet = 1
        ELSE
          irejet = 0
        ENDIF
C
      ELSE
C
C  For the Minis
C
        IF ( first .AND. xmini ) THEN
          CALL parset
          first = .FALSE.
        ENDIF
        CALL buildal
        if ( nefol .EQ. 0 ) THEN
          irejet = 0
        ELSE
          irejet = 1
        ENDIF
      ENDIF
C
C  Preselection
C
      IF ( irejet .EQ. 1 .AND. ( xmini .OR. ifwpa .GT. 0 ) ) THEN
        nchtot = klstot(1)-kfrtot(1)+ 1
        echtot = qe(lch)
        IF ( echtot .LT. echmin .OR. 
     .       nchtot .LT. ntrack .OR. nchtot .GT. mtrack ) irejet = 0
      ENDIF
C
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@d11 2
d60 1
a60 1
        IF ( echtot .LT. echmin .OR. echtot .GT. echmax .OR.
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
