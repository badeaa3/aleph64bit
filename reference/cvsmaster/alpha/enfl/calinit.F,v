head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.26;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.27;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE CALINIT(KEEP)
C----------------------------------------------------------------------
C! Initialize EBNEUT, BOS banks, etc...
C
C  Patrick Janot -- 18 Apr 1990
C----------------------------------------------------------------------
#ifndef DOC
#include "parcut.h"
#include "parabank.h"
      DIMENSION jer(10)
      LOGICAL first
#include "qcde.h"
      DIMENSION QT(KCQVEC,1), KT(KCQVEC,1), QV(KCQVRT,1), KV(KCQVEC,1)
      DATA nmsg/0/
      DATA first/.TRUE./
#include "qmacro.h"
C----------------------------------------------------------------------
      keep = 0
      IF ( idbg .GE. 1 ) CALL looses('CALINIT ',1)
C
C 1-- Bos
C
      CALL bkini(jer)
      IF ( jer(10) .NE. 0 ) THEN
        nmsg = nmsg + 1
        IF ( nmsg .LE. 100 ) THEN
          IF (idbg .GE. 1 ) WRITE (IW(6),1001) jer,krun,kevt
        ELSEIF ( nmsg .EQ. 101 ) THEN
          IF (idbg .GE. 1 ) WRITE (IW(6),*)
     .          '+++ BKINI +++ Maximum nb of msg reached'
        ENDIF
        GOTO 999
      ENDIF
      IF ( idbg .GE. 1 ) CALL looses('CALINIT ',2)
C
C 2-- Too many clusters (--> fake event)
C
      IF ( npeco .GT. 200 .OR. nphco .GT. 200 ) THEN
        IF (idbg .GE. 1 ) WRITE (IW(6),1002) npeco,nphco,krun,kevt
        GOTO 999
      ENDIF
      IF ( idbg .GE. 1 ) CALL looses('CALINIT ',3)
C
C 4-- Good modules
C
      CALL sicamod
      CALL lumimod
      CALL goodmod(keep)
      IF ( keep .EQ. 0 ) GOTO 999
      IF ( idbg .GE. 1 ) CALL looses('CALINIT ',4)
C
C 5-- Initialize HCAL cleaning
C
      CALL quphco(ier)
      IF ( ier .NE. 0 ) GOTO 999
      IF ( idbg .GE. 1 ) CALL looses('CALINIT ',5)
C
      CALL qhmost(ier)
C
      keep = 1
C
  999 RETURN
C-----------------------------------------------------------------------
 1001 FORMAT(1x,'+++ Error in BKINI code ',10I2,
     .          ' +++ Run ',I9,' Evt ',I9)
 1002 FORMAT(1x,'+++ Too many clusters : ',2(I3,1X),
     .         ' +++ Run ',I9,' Evt ',I9)
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
