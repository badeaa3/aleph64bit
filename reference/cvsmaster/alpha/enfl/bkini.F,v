head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.25;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.26;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE BKINI(IER)
C---------------------------------------------------------------------
C! Find BOS bank indices - PHCO, PECO, PCOB, PEST, ETDI, EWHE, PEWI ..
C
C  Patrick Janot -- 18 Apr 1990
C---------------------------------------------------------------------
#ifndef DOC
#include "parcut.h"
#include "parabank.h"
      DIMENSION ier(10),msg(10)
      DATA msg/10*0/,msgmx/20/
#include "qcde.h"
      DIMENSION QT(KCQVEC,1), KT(KCQVEC,1), QV(KCQVRT,1), KV(KCQVEC,1)
#include "qhac.h"
#include "qmacro.h"
C---------------------------------------------------------------------
      CALL vzero(ier(1),10)
      IF ( idbg .GE. 10 ) THEN
        CALL prtabl('PECO',1)
        CALL prtabl('PHCO',0)
        CALL prtabl('PCRL',0)
        CALL prtabl('PGAC',0)
      ENDIF
C
      ipcob = 0
      npcob = 0
      napcob = namind('PCOB')
      IF ( napcob .GT. 0 ) ipcob = iw( napcob )
      IF ( ipcob .GT. 0) THEN
        npcob = lrows(ipcob)
      ELSEIF ( msg(1) .LE. msgmx ) THEN
        msg(1) = msg(1) + 1
        IF ( idbg .GE. 1 ) WRITE (IW(6),1007) krun,kevt
        ier(1) = 1
      ENDIF
C
C     ipeco = 0
C     npeco = 0
C     IF ( napeco .GT. 0 ) ipeco = iw(napeco)
      ipeco = NLINK('PECO',1)
      IF ( ipeco .GT. 0) THEN
        npeco = lrows(ipeco)
      ELSEIF ( msg(2) .LE. msgmx ) THEN
        msg(2) = msg(2) + 1
        IF ( idbg .GE. 1 ) WRITE (IW(6),1002) krun,kevt
        ier(2) = 1
      ENDIF
C
      iphco = 0
      nphco = 0
      IF ( naphco .GT. 0 ) iphco = iw(naphco)
      IF ( iphco .GT. 0) THEN
        nphco = lrows(iphco)
      ELSEIF ( msg(3) .LE. msgmx ) THEN
        msg(3) = msg(3) + 1
        IF ( idbg .GE. 1 ) WRITE (IW(6),1006) krun,kevt
        ier(3) = 1
      ENDIF
C
      ipest = 0
      npest = 0
      IF ( napest .NE. 0 ) ipest = iw(napest)
      IF ( ipest .NE. 0) THEN
        npest = lrows(ipest)
      ELSEIF ( msg(4) .LE. msgmx ) THEN
        msg(4) = msg(4) + 1
        IF ( idbg .GE. 1 ) WRITE (IW(6),1003) krun,kevt
        ier(4) = 1
      ENDIF
C
      ietdi = 0
      netdi = 0
      IF ( naetdi .GT. 0 ) ietdi = iw(naetdi)
      IF ( ietdi .GT. 0) THEN
        netdi = lrows(ietdi)
      ELSEIF ( msg(5) .LE. msgmx ) THEN
        msg(5) = msg(5) + 1
        IF ( idbg .GE. 1 ) WRITE (IW(6),1004) krun,kevt
        ier(5) = 1
      ENDIF
C
      iewhe = 0
      newhe = 0
      naewhe = namind('EWHE')
      IF ( naewhe .GT. 0 ) iewhe = iw( naewhe )
      IF ( iewhe .GT. 0) THEN
        newhe = lrows(iewhe)
      ELSEIF ( msg(6) .LE. msgmx ) THEN
        msg(6) = msg(6) + 1
        IF ( idbg .GE. 1 ) WRITE (IW(6),1001) krun,kevt
        ier(6) = 1
      ENDIF
C
      ipewi = 0
      npewi = 0
      napewi = namind('PEWI')
      napwei = namind('PWEI')
      IF ( napewi .GT. 0 ) ipewi = iw( napewi )
      IF ( napwei .GT. 0 ) ipwei = iw( napwei )
      IF ( ipewi .LE. 0 ) ipewi = ipwei
      IF ( ipewi .GT. 0) THEN
        npewi = lrows(ipewi)
      ELSEIF ( msg(7) .LE. msgmx ) THEN
        msg(7) = msg(7) + 1
        IF ( idbg .GE. 1 ) WRITE (IW(6),1009) krun,kevt
        ier(7) = 1
      ENDIF
C
      iplpd = 0
      nplpd = 0
      naplpd = namind('PLPD')
      IF ( naplpd .GT. 0 ) iplpd = iw( naplpd )
      IF ( iplpd .GT. 0) THEN
        nplpd = lrows(iplpd)
      ELSE
      ENDIF
C
      iplsd = 0
      nplsd = 0
      naplsd = namind('PLSD')
      IF ( naplsd .GT. 0 ) iplsd = iw( naplsd )
      IF ( iplsd .GT. 0) THEN
        nplsd = lrows(iplsd)
      ELSE
      ENDIF
C
      isilu = 0
      nsilu = 0
      nasilu = namind('SILU')
      IF ( nasilu .GT. 0 ) isilu = iw( nasilu )
      IF ( isilu .GT. 0) THEN
        nsilu = lrows(isilu)
      ELSE
      ENDIF
C
C     DO ibk = 1 , 9
C       ier(10) = ier(10) + ier(ibk)
C     ENDDO
C
 999  CONTINUE
      RETURN
C------------------------------------------------------------------
 1001 FORMAT(1X,'EWHE missing in Run #',I5,1x,'in Event #',I5)
 1002 FORMAT(1X,'PECO missing in Run #',I5,1x,'in Event #',I5)
 1003 FORMAT(1X,'PEST missing in Run #',I5,1x,'in Event #',I5)
 1004 FORMAT(1X,'ETDI missing in Run #',I5,1x,'in Event #',I5)
 1006 FORMAT(1x,'PHCO missing in Run #',I5,1x,'in Event #',I5)
 1007 FORMAT(1x,'PCOB missing in Run #',I5,1x,'in Event #',I5)
 1008 FORMAT(1x,'PLPD missing in Run #',I5,1x,'in Event #',I5)
 1009 FORMAT(1x,'PEWI missing in Run #',I5,1x,'in Event #',I5)
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
