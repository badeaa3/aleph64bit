head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.32;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.33;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QUPHPL(ICL,NPL,N10,NHT)
C----------------------------------------------------------------
C!  Scan HTUB bank looking for the number of planes (total and
C!  in the last 10 ) and for the number of hits associated to
C!  a given PHCO.
C
C   Gerardo Ganis -- 1989
C----------------------------------------------------------------
#ifndef DOC
#include "qcde.h"
#include "qhac.h"
      DIMENSION IMOD(2),IPLA(23),NPLA(23),IMFI(2)
#include "qmacro.h"
C----------------------------------------------------------------
      DO L1=1,23
        IF(L1.LE.2) IMFI(L1)= 0
        IPLA(L1)= 0
        NPLA(L1)= 0
      END DO
C----- Get module & region number
      CALL QUHCRG(ICL,IREG,IMOD)
      ISC0= 1
      IMD0= IMOD(1)
      IF(IREG.EQ.3) THEN
        ISC0= 2
        IMD0= IMOD(2)
      END IF
      IF(IREG.GE.4) ISC0= 3
C
        NSC= 0
5     CONTINUE
      NPL= 0
        NSC= NSC+1
      IHTUB= IW(NAMIND('HTUB'))
      IF(IHTUB.EQ.0) RETURN
      NHTUB= LROWS(IHTUB)
      DO 10 L1=1,NHTUB
        ISCL= ITABL(IHTUB,L1,JHTUSN)
        IMDL= ITABL(IHTUB,L1,JHTUMN)
        IF(ISCL.NE.ISC0.OR.IMDL.NE.IMD0) GOTO 10
        IMFI(NSC)= 1
        ILNL= ITABL(IHTUB,L1,JHTULN)
        IPLA(ILNL)= 1
        NFIR= INT(RTABL(IHTUB,L1,JHTUCW))
        NPLA(ILNL)= NPLA(ILNL)+ NFIR
10    CONTINUE
      IF((IREG.EQ.2.AND.ISC0.EQ.1).OR.
     &   (IREG.EQ.4.AND.ISC0.EQ.3))   THEN
        ISC0= 2
        IMD0= IMOD(2)
        GOTO 5
      END IF
C
      IGOO= 1
C- Check if both barrel and endcap tubes are fired for clusters
C- in overlaps
      IF(IREG.EQ.2.OR.IREG.EQ.4) THEN
        IF(IMFI(1).EQ.0.OR.IMFI(2).EQ.0) IGOO= 0
      END IF
C
      NPL= 0
      N10= 0
      NHT= 0
      IF(IGOO.EQ.0) RETURN
      DO 20 L1=1,23
        NPL= NPL+IPLA(L1)
        IF(L1.GT.13) N10= N10+IPLA(L1)
        NHT= NHT+NPLA(L1)
20    CONTINUE
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
