head	1.5;
access;
symbols
	alpha126_22:1.5
	alpha126_21:1.5
	alpha126_20:1.5
	alpha126_19:1.5
	alpha126_18:1.5
	alpha126_17:1.5
	alpha126_16:1.5
	alpha126_15:1.5
	alpha126_14:1.5
	alpha126_13:1.5
	alpha126_12:1.5
	alpha126_11:1.5
	alpha126_10:1.5
	alpha126_09:1.5
	alpha126_08:1.5
	alpha126_07:1.5
	alpha126_06:1.5
	alpha126_05:1.5
	alpha126_04:1.5
	alpha126_03:1.4
	alpha126_02:1.4
	alpha126_1:1.4
	alpha125_17:1.4
	alpha125_16:1.4
	alpha125_15:1.4
	alpha125_14:1.4
	alpha125_13:1.4
	alpha125_12:1.4
	alpha125_11:1.4
	alpha125_10:1.4
	alpha125_09:1.4
	alpha125_08:1.4
	alpha125_07:1.4
	alpha125_06:1.4
	alpha125_05:1.4
	alpha125_04:1.4
	alpha125_03:1.4
	alpha125_02:1.3
	alpha125_01:1.3
	alpha124_19:1.3
	alpha125:1.3
	alpha124_18:1.3
	alpha124_17:1.3
	alpha124_16:1.3
	alpha124_15:1.3
	alpha124_14:1.3
	alpha124_13:1.3
	alpha124_12:1.3
	alpha124_11:1.3
	alpha124_10:1.3
	alpha124_09:1.3
	alpha124_08:1.3
	alpha124_07:1.3
	alpha124_7:1.3
	alpha124_06:1.3
	alpha124_05:1.3
	alpha124_04:1.3
	alpha124_03:1.3
	alpha124_02:1.3
	alpha124_01:1.3
	alpha124:1.2
	alpha123_12:1.2
	alpha123_11:1.2
	alpha123_10:1.2
	alpha123_9:1.2
	alpha123_8:1.2
	alpha123_7:1.2
	alpha123_6:1.2
	alpha123_5:1.2
	alpha123_4:1.2
	alpha123_3:1.2
	alpha123_2:1.2
	alpha123:1.2
	alpha122_48:1.2
	alpha122_47:1.2
	alpha122_46:1.2
	alpha122_45:1.2
	alpha122_44:1.2
	alpha122_43:1.2
	alpha122_42:1.2
	alpha122_41:1.2
	alpha122_40:1.2
	alpha122_39:1.2
	alpha122_38:1.2
	alpha122_37:1.2
	alpha122_36:1.2
	alpha122_35:1.2
	alpha122_34:1.2
	alpha122_33:1.2
	alpha122_32:1.2
	alpha122_31:1.2
	alpha122_30:1.2
	alpha122_29:1.2
	alpha122_28:1.2
	alpha122_27:1.2
	alpha122_26:1.2
	alpha122_25:1.2
	alpha122_24:1.2
	alpha122_23:1.2
	alpha122_22:1.2
	alpha122_21:1.2
	alpha122_20:1.2
	alpha122_19:1.2
	alpha122_18:1.2
	alpha122_17:1.2
	alpha122_16:1.2
	alpha122_15:1.2
	alpha122_14:1.2
	alpha122_13:1.2
	alpha122_12:1.2
	alpha122_11:1.2
	alpha122_10:1.2
	alpha122_9:1.2
	alpha122_8:1.2
	alpha122_6:1.2
	alpha122_5:1.2
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.5
date	2001.02.06.07.58.24;	author boucrot;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.07.07.22.01;	author boucrot;	state Exp;
branches;
next	1.3;

1.3
date	99.03.22.14.10.45;	author boucrot;	state Exp;
branches;
next	1.2;

1.2
date	96.06.25.14.11.18;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.03.14.12.41.51;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.52;	author flr;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@      SUBROUTINE QMTERM (TEXT)
CALPHA TERM /INTERNAL
C----------------------------------------------------------------------
C! system termination
C called from anywhere
C calls : QUTERM (user routine)
C calls : QUTHIS (histogram output)
C                                                   H.Albrecht 20.09.88
C                                   Modified:       E.Blucher  17.04.90
C                                   Modified:       G.Graefe   10.02.95
C                          Modified for PVM on SAGA T. Oest    26.07.95
C                          Add call to QMSTCLR      J.Boucrot  14.02.00 
C                          Add call to QTKIREV      J.Boucrot   5.02.01
C----------------------------------------------------------------------
#ifndef DOC
C
#include "minprd.h"
#include "qcdesh.h"
C
      CHARACTER CFORM*3
      CHARACTER *(*) TEXT
C----------------------------------------------------------------------
      CALL QWMESS (TEXT)
      CALL QWMESS ('_QMTERM_ --- program termination ----------')
#if defined(UNIX)
C_PVM
C
C  PVM: send EOF message
C
      Call QPVMEN
C_PVM
#endif
C
C       protection against recursive calls :
C
      IF (KSTATU .GT. 0)  RETURN
      KSTATU = 1
      CALL TIMEX (QTIMET)
C
C       last event number
C
      IF (KNEVT .NE. 0)
     +    CALL QWMESE ('_QMTERM_ Last event :')
C
C       syntax flag ?
C
      IF (XSYNTX)  THEN
        CALL QWMESS ('_QMTERM_ Syntax flag --> QUTERM not called')
        GO TO 10
      ENDIF
C
C       copy job ?
C
      IF (XCOPYJ)  GO TO 10
C
C       last run
C
      IRNEW=0
      IROLD=KRUN
      CALL QMNEWR (IROLD,IRNEW)
C
C       user termination
C
      CALL QWMESS ('_QMTERM_ Call QUTERM')
      IF (IMIPRD.EQ.1) THEN
         CALL MQUTERM
         GO TO 999
      ENDIF
      CALL QUTERM
      IF (KDEBUG .GT. 0)  CALL QWPARS
C
C        Clear staged files if data card SCLR provided
C
      CALL QMSTCLR
C
C       Statistics of NDSTP if output is a NanoDST
C
      IF (XWNANO) CALL QNTERM
C
C       histogram output
C
      CALL QUTHIS
C
C       BOS statistics
C
   10 IF (KDEBUG .GT. 0)  CALL BOSTA
C
C       output event buffers
C
      IF (KNREOU.GT.0) THEN
         CALL ABWEND
      ENDIF
C
C       statistics
C
C
C-    Summary lepton selection
C
      CALL QLTERM
C
      CALL QWFILE
      CALL QWSUMM
      CALL QTIMEZ
      CALL QWTIME
C
C     Summary Kingal triggers
C
      CALL QTKIREV
#if defined(UNIX)
C_PVM
C
C merge output files ( PVM )
C dispose after hist files are merged
C
      CALL QPVMTE(KUPRNT,XHISTO,CQFHIS)
C_PVM
#endif
      CALL ACLOSE (0, IER)
      CALL QWMESS ('_QMTERM_ Stop.')
#if defined(UNIX)
C_PVM
C  pvm termination
      CALL QPVMEX(KUPRNT)
C_PVM
#endif
 999  CONTINUE 
      STOP
      END
#endif
@


1.4
log
@*** empty log message ***
@
text
@d13 1
d105 4
@


1.3
log
@*** empty log message ***
@
text
@d11 2
a12 1
C                          Modified for PVM on SAGA  T. Oest  26.07.95
d70 4
@


1.2
log
@update alpha122 with corr.file no.5
@
text
@d15 1
d63 4
d116 1
@


1.1
log
@Initial revision
@
text
@d35 1
a35 1
      CALL TIMAX (QTIMET)
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
