head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.41.29;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.30;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QAPTMP
CKEY PART /INTERNAL
C----------------------------------------------------------------------
C! translate old fashioned particle table into the new one.
C  create a new PART bank and a translation table QTMP.
C  delete this routine if old tables do not exist any more.
C  called from QMNEWR
C!                                                  H.Albrecht 12.01.89
C----------------------------------------------------------------------
#ifndef DOC
C
#include "qcde.h"
C       used HAC parameters are the same for old and new table :
#include "partjj.h"
      CHARACTER * 12 CNAME,SPACES
C
      IPART = IW(NAPART)
      LPART = IW(IPART+1)
      NPART = IW(IPART+2)
C
C       temporary bank --> new PART bank
C
      ITEMP = NBANK ('TEMP',0, NPART*KCQPAR+LMHLEN)
      IW(ITEMP+1) = KCQPAR
      IW(ITEMP+2) = NPART
      NKLIN = IW(NAKLIN)
C
C       loop over all particles
C
      IPART = IPART + LMHLEN
      ITEMP = ITEMP + LMHLEN
      DO 80 N=1,NPART
C
C         find row in new table
C
        NNEW = 0
        IF (NKLIN .EQ. 0)  GO TO 10
        IF (N .GT. IW(NKLIN+2))  GO TO 10
        NLUND = IW(NKLIN+N+LMHLEN)
        IF (NLUND .EQ. 0)  GO TO 10
        NNEW = KGLUND (NLUND)
C
C         fill new bank
C
   10   I = IPART
        IF (NNEW .NE. 0)  I = KOQPAR + NNEW * KCQPAR
        IW(ITEMP+JQPANA) = IW(I+JPARNA)
        IW(ITEMP+JQPANA+1) = IW(I+JPARNA+1)
        IW(ITEMP+JQPANA+2) = IW(I+JPARNA+2)
        IW(ITEMP+JQPAGN) = IW(IPART+JPARGN)
        IW(ITEMP+JQPACO) = IW(IPART+JPARCO)
        IW(ITEMP+JQPAMA) = IW(IPART+JPARMA)
        IW(ITEMP+JQPACH) = IW(IPART+JPARCH)
        IW(ITEMP+JQPALT) = IW(IPART+JPARLT)
        RW(ITEMP+JQPAWI) = 0.
        IW(ITEMP+JQPAAN) = N
      ITEMP = ITEMP + KCQPAR
   80 IPART = IPART + LPART
C
C       drop old PART bank and rename TEMP bank
C
      N = NDROP ('PART',0)
      CALL BSWAP (IW,'TEMP','PART')
C
   90 END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
