head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.41.21;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.22;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      FUNCTION KGLUND (LUND)
CKEY PART MC /INTERNAL
C----------------------------------------------------------------------
C! Translate Lund particle code LUND into (new) ALEPH code KGLUND.
C!                                                  H.Albrecht 04.12.88
C----------------------------------------------------------------------
#ifndef DOC
      SAVE INIT,JQPAR
#include "qcdesh.h"
C
      PARAMETER (IMAX = 506)
      DIMENSION IT(IMAX)
      DATA (IT(I),I=  1, 10) /  1, 44, 42, 54,  0,  0,  3, 58,  6, 60/
      DATA (IT(I),I= 11, 20) / 34, 62,  0,  0,  0,  0,  8, 11, 56, 37/
      DATA (IT(I),I= 21, 30) / 35, 39,  7, 17, 69, 75, 76, 78, 80, 82/
      DATA (IT(I),I= 31, 40) / 84, 86, 88, 89, 90, 73, 16, 10,  0,  0/
      DATA (IT(I),I= 41, 50) / 14, 13, 19, 20, 21, 22, 23,169,171,173/
      DATA (IT(I),I= 51, 60) /175,177,179,197,199,201, 18, 41,181,183/
      DATA (IT(I),I= 61, 70) /151,153,155,157,159,161,163,165,167, 24/
      DATA (IT(I),I= 71, 80) /185,187,189,191,193,195,203,205,207,209/
      DATA (IT(I),I= 81, 90) /  0,  0, 55, 96,  0,  0, 94,  0,  0,  0/
      DATA (IT(I),I= 91,100) /  10 * 0 /
      DATA (IT(I),I=101,110) /115,117,119,121,131,133,135,137,139,  0/
      DATA (IT(I),I=111,120) / 10 * 0 /
      DATA (IT(I),I=121,130) /  0,  0,123,125,127,129,141,143,145,147/
      DATA (IT(I),I=131,140) /149, 9 * 0 /
      DATA (IT(I),I=141,150) /  0,  0,  0,  0,211,213,215,217,219,221/
      DATA (IT(I),I=151,160) /223,225,227,229,231,233,235,237,239,241/
      DATA (IT(I),I=161,170) /243,245,247,249,251,253,255,257,333,335/
      DATA (IT(I),I=171,180) /337,339,341,  0,  0,  0,  0,  0,  0,  0/
      DATA (IT(I),I=181,240) / 60 * 0 /
      DATA (IT(I),I=241,250) /259,261,263,265,267,269,271,273,275,277/
      DATA (IT(I),I=251,260) /279,281,343,345,347,349,  0,  0,  0,  0/
      DATA (IT(I),I=261,290) / 30 * 0 /
      DATA (IT(I),I=291,300) /  0,  0,283,285,287,289,291,293,295,297/
      DATA (IT(I),I=301,310) /299,301,351,353,355,357,359,303,305,307/
      DATA (IT(I),I=311,320) /309,311,313,315,317,319,321,323,325,327/
      DATA (IT(I),I=321,330) /329,331,  0,  0,  0,  0,  0,  0,  0,  0/
      DATA (IT(I),I=331,500) / 169 * 0,                           100/
      DATA (IT(I),I=501,506) /101,102,103,104,105,106/
C
      DATA INIT /0/
C
      IF (INIT .EQ. 0)  THEN
        JQPAR = NAMIND ('QPAR')
        INIT = 1
      ENDIF
C
      KGLUND = 0
      L = IABS (LUND)
      IF (L .GT. 0 .AND. L .LE. IMAX)  THEN
        KGLUND = IT(L)
        IF (LUND .LT. 0 .AND. KGLUND .NE. 0)  THEN
          L = IW(JQPAR)
          IF (L .NE. 0)
     +       KGLUND = IW (L+IW(L+1)*(KGLUND-1)+JQPAAN+LMHLEN)
        ENDIF
      ENDIF
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
