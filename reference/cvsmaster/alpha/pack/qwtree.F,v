head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.06;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.07;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QWTREE (ITK,CFL)
CKEY WRITE TREE /USER
C----------------------------------------------------------------------
C! print tree of daughters for track ITK
C
C called from user routines
C                                                   H.Albrecht 20.10.88
C----------------------------------------------------------------------
#ifndef DOC
      SAVE INIT,CV,CP,CM,CB,CY,CZ
C
#include "qcde.h"
      DIMENSION MT(10),MD(10)
      CHARACTER * 12 CHAR
      CHARACTER * 1  C1
      CHARACTER * 2  CY(10),CZ(10),CV,CP,CM,CB,CC
      CHARACTER *(*) CFL
      DATA CV,CP,CM,CB,CY,CZ /'I ','+-','--','  ',10* '--', 10* '  '/
      DATA INIT/0/
#include "qmacro.h"
C----------------------------------------------------------------------
C
      LHEAD = -1
      IF (INDEX (CFL,'H') .NE. 0)  LHEAD = 0
      C1 = ' '
      IF (INDEX (CFL,'0') .NE. 0)  THEN
        C1 = '0'
        LHEAD = 1
      ENDIF
      IF (INDEX (CFL,'1') .NE. 0)  THEN
        C1 = '1'
        LHEAD = 1
      ENDIF
C
      IF (LHEAD .GE. 0)  WRITE (KUPRNT,1001)  C1
      CHAR = CQTPN (ITK)
C
      IVX = KORIV(ITK)
      IF (IVX .NE. 0)  THEN
        WRITE (KUPRNT,1002)
     +    ITK,KTN(ITK),CHAR,QP(ITK),QE(ITK),QM(ITK),QCH(ITK),
     +    QX(ITK),QY(ITK),QZ(ITK),IVX,QVX(IVX),QVY(IVX),QVZ(IVX)
      ELSE
        WRITE (KUPRNT,1002)
     +    ITK,KTN(ITK),CHAR,QP(ITK),QE(ITK),QM(ITK),QCH(ITK),
     +    QX(ITK),QY(ITK),QZ(ITK),IVX
      ENDIF
C
      LH = 0
      NG = 1
      NT = ITK
      CY(1) = CP
      GO TO 20
C
   10 IF (NG .NE. 10 .AND. KNDAU(NT) .NE. 0)  CY(NG+1) = CP
      IF (LH .NE. 0) WRITE (KUPRNT,1004)  CZ
      LH = 0
      CHAR = CQTPN (NT)
      IVX = KORIV(NT)
      IF (IVX .NE. 0)  THEN
        WRITE (KUPRNT,1003)
     +      NT,KTN(NT),CY,CHAR,QP(NT),QE(NT),QM(NT),QCH(NT),
     +      QX(NT),QY(NT),QZ(NT),IVX,QVX(IVX),QVY(IVX),QVZ(IVX)
      ELSE
        WRITE (KUPRNT,1003)
     +      NT,KTN(NT),CY,CHAR,QP(NT),QE(NT),QM(NT),QCH(NT),
     +      QX(NT),QY(NT),QZ(NT),IVX
      ENDIF
      CY(NG) = CC
      CZ(NG) = CC
      NG = NG + 1
      IF (NG .GT. 9)  THEN
        CALL QWMESS ('_QWTREE_ cannot print more than 9 generations')
        GO TO 60
      ENDIF
C
   20 ND = 1
   30 CC = CB
      IF (ND - KNDAU(NT))  40,50,60
C
   40 CC = CV
   50 MT(NG) = NT
      MD(NG) = ND
      NT = KDAU(NT,ND)
      GO TO 10
C
   60 NG = NG - 1
      IF (NG .EQ. 0)  GO TO 100
      IF (ND .NE. 1)  LH = 1
      CY(NG) = CP
      CY(NG+1) = CM
      CZ(NG) = CV
      CZ(NG+1) = CB
      NT = MT(NG)
      ND = MD(NG) + 1
      GO TO 30
C
  100 IF (KUPTER .NE. 0 .AND. INIT .EQ. 0)
     +    WRITE (KUPTER, 1005)
      INIT = 1
C
 1001 FORMAT (A,' ITK KTN  CQTPN',32X,'QP',6X,'QE',6X,
     +  'QM     QCH    QX',
     + 7X,'QY',7X,'QZ  KORIV    QVX',5X,'QVY QVZ(KORIV)')
 1002 FORMAT (I5,I4,1X,A,23('-'),3F8.3,F5.1,3F9.3,I4,3F8.2)
 1003 FORMAT (I5,I4,1X,10A,'-> ',A,3F8.3,F5.1,3F9.3,I4,3F8.2)
 1004 FORMAT ('  ITK KTN ',10A,18X,'QP',6X,'QE',6X,
     +  'QM     QCH    QX',
     + 7X,'QY',7X,'QZ  KORIV    QVX',5X,'QVY QVZ(KORIV)')
 1005 FORMAT (' _QWTREE_ Tree listing written to log file ')
C
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
