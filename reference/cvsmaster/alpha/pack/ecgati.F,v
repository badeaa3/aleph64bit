head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.41.17;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.18;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE ECGATI(NRUN)
C ---------------------------------------------------------------------
C - Author: M.N Minard          940121
C!    Fix Gampek photon
C     Called from FIXGAEN
C-    For all processing JULIA before ALEPHLIB 156
C-    find Gain correction either from ECMC or Bank file
C ---------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
#include "qcnami.h"
#include "rhahjj.h"
      SAVE NAECMC,NAEGAC,IFIRST,IPRRI
      COMMON / ECCMF / ECCM(36) ,NRMIN,NRMAX
      DATA IROLD / -99/
      DATA NMCMX / 2000 /
      DATA IFIRST,IPRRI  / 0 , 0 /
      DATA ILVGCH / 157 /
      EXTERNAL CHAINT
      CHARACTER*4 CHAINT
      CHARACTER*4 NAMJUL
      CHARACTER*8 PRNAM
#include "bmacro.h"
C ---------------------------------------------------------------------
C
C-    Initialise pointers
C
      IF(IFIRST.EQ.0 ) THEN
        NAECMC = NAMIND('ECMC')
        NARHAH = NAMIND('RHAH')
        NAEGAC = NAMIND('EGAC')
        IFIRST = 1
      ENDIF
C
C-    Check if ALEPHLIB version has the correction
C

      IACOR = 0
      KRHAH = IW(NARHAH)
        IMVER = MINGTV(DUM)
        NRHAH=LROWS(KRHAH)
        DO 10 IRHAH = 1, NRHAH
          PRNAM(1:4) = CHAINT(ITABL(KRHAH,IRHAH,JRHAPN))
          PRNAM(5:8) = CHAINT(ITABL(KRHAH,IRHAH,JRHAPN+1))
          IF (PRNAM.EQ.'JULIA') THEN
            IJVER = ITABL(KRHAH,IRHAH,JRHAPV)
            ILVER = ITABL(KRHAH,IRHAH,JRHAAV)
          ENDIF
   10   CONTINUE
C
C-    Look if new run
C
      IMC = 0
      IF(NRUN.LT.NMCMX) IMC = 1
C
C-    Look for ECMC bank
C
      IF (IMC.EQ.1) THEN
        DO IC = 1, 36
        ECCM(IC) = 1.
        ENDDO
        NRMIN = 1
        NRMAX = 2000
      ELSE
        IF (ILVER.GT.ILVGCH ) THEN
        DO IC = 1, 36
        ECCM(IC) = 1.
        ENDDO
        IROLD = NRUN

        NRMIN = NRUN
        NRMAX = NRUN
        ELSE
        IF ( NRUN.NE.IROLD ) THEN
C
C-    ECMC bank exist
C
          KECMC = IW(NAECMC)
          NECMC = 0
          IF ( KECMC.GT.0) THEN
            NECMC = LROWS(KECMC)
            DO IECMC = 1,NECMC
              ECCM(IECMC) = RTABL(KECMC,IECMC,1)
            ENDDO
            CALL CALYEAR(NRUN)
            IROLD = NRUN
            NRMIN = NRUN
            NRMAX = NRUN
          ELSE
C
C-     Look for EGAC bank
C
          IF(NRUN.LT.NRMIN.OR.NRUN.GT.NRMAX) THEN
            KEGAC = IW(NAEGAC)
            NEGAC = 0
            IF ( KEGAC.EQ.0) THEN
              DO IC=1,36
                ECCM (IC) = 1.
              ENDDO
              IROLD=NRUN
              NRMIN=NRUN
              NRMAX=NRUN
              IPRRI=IPRRI+1
              IF (IPRRI.LE.10) WRITE (IW(6),'(///,5(/,10X,A),///)')
     &'+------------------------------------------------------------+',
     &'|  Data Processed no gain correction for photon available    |',
     &'|                                                            |',
     &'+------------------------------------------------------------+'
             CALL CALYEAR(NRUN)
            ELSE
C
C-   Search for new correction factors
C
             NEGAC = LROWS(KEGAC)
             IRMIN = 99999
             IRMAX = 0
             DO IEGAC = 1,NEGAC-1
               IF ( NRUN.GE.ITABL(KEGAC,IEGAC,1).AND.
     &              NRUN.LT.ITABL(KEGAC,IEGAC+1,1)) THEN
               IRMAX = IEGAC
               DO IL =1,36
               ECCM (IL) = RTABL(KEGAC,IEGAC,IL+2)
               NRMIN = ITABL(KEGAC,IEGAC,1)
               NRMAX = ITABL(KEGAC,IEGAC+1,1) -1
               ENDDO
               IROLD = NRUN
               CALL CALYEAR(NRUN)
               ENDIF
             ENDDO
             IF ( IRMAX.EQ.0) THEN
               IPRRI=IPRRI+1
               IF (IPRRI.LE.10) WRITE (IW(6),'(///,5(/,10X,A),///)')
     &'+------------------------------------------------------------+',
     &'|  Data Processed no gain correction for photon available    |',
     &'|                                                            |',
     &'+------------------------------------------------------------+'
              DO IC=1,36
              ECCM (IC) = 1.
              ENDDO
             ENDIF
           ENDIF
         ENDIF
       ENDIF
      ENDIF
      ENDIF
      ENDIF
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
