head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.41.42;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.43;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QFMCMD
CKEY FILL MC /INTERNAL
C-----------------------------------------------------------------------
C! Fill mother - daughter relation for MC particles
C!                                                  H.Albrecht 18.10.88
C called from QFILL
C-----------------------------------------------------------------------
#ifndef DOC
      SAVE INIT
#include "qcdesh.h"
      DATA INIT /0/
C
      JQVRT(I,N) = KOQVRT + I * KCQVRT + N
      JQVEC(I,N) = KOQVEC + I * KCQVEC + N
      IQVEC(I,N) = IW (KOQVEC + I * KCQVEC + N)
      RQVEC(I,N) = RW (KOQVEC + I * KCQVEC + N)
      IMOTH(I)   = IW (KOQLIN + IQVEC(I,JQVEOL) + 1)
C-----------------------------------------------------------------------
C
C       Set number of daughters for particles and vertices
C
      DO 10 ITK=KFMCT,KLMCT
        IF (IQVEC(ITK,JQVENO) .NE. 0)  IW(JQVEC(IMOTH(ITK),JQVEND)) =
     &    IW(JQVEC(IMOTH(ITK),JQVEND)) + 1
   10 IF (IQVEC(ITK,JQVEOV) .NE. 0)
     &    IW(JQVRT(IQVEC(ITK,JQVEOV),JQVRND)) =
     &    IW(JQVRT(IQVEC(ITK,JQVEOV),JQVRND)) + 1
C
C       Number of pointers in QLIN
C
      DO 20 ITK=KFMCT,KLMCT
        NDAU = IQVEC(ITK,JQVEND)
        IF (NDAU .EQ. 0)  GO TO 20
        IW(JQVEC(ITK,JQVEDL)) = KNQLIN - NDAU
C         reason for the next statement : see routine QADAU
        IF (NDAU .GT. 8)  NDAU = ((NDAU + 7) / 8) * 8
        KNQLIN = KNQLIN + NDAU
   20 CONTINUE
C
      DO 30 IVR=KFMCV,KLMCV
        IW(JQVRT(IVR,JQVRDL)) = KNQLIN - IW(JQVRT(IVR,JQVRND))
   30 KNQLIN = KNQLIN + IW(JQVRT(IVR,JQVRND))
C
      IF (KNQLIN .GE. IW(KOQLIN))  CALL QSBANK ('QLIN', KNQLIN + 500)
C
C       fill QLIN with mother -> daughter relation
C
      DO 40 ITK=KFMCT,KLMCT
        IF (IQVEC(ITK,JQVENO) .NE. 0)  THEN
          IW(JQVEC(IMOTH(ITK),JQVEDL)) =
     &    IW(JQVEC(IMOTH(ITK),JQVEDL)) + 1
          IW(KOQLIN+IW(JQVEC(IMOTH(ITK),JQVEDL))+
     &             IW(JQVEC(IMOTH(ITK),JQVEND))) = ITK
        ENDIF
        IVR = IQVEC(ITK,JQVEOV)
        IF (IVR .NE. 0)  THEN
          IM = KOQVRT + IVR * KCQVRT
          IW(JQVRT(IVR,JQVRDL)) = IW(JQVRT(IVR,JQVRDL)) + 1
          IW(KOQLIN+IW(JQVRT(IVR,JQVRDL))+IW(JQVRT(IVR,JQVRND))) = ITK
        ENDIF
   40 CONTINUE
C
   90 END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
