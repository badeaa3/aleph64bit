head	1.17;
access;
symbols
	alpha126_22:1.17
	alpha126_21:1.17
	alpha126_20:1.17
	alpha126_19:1.17
	alpha126_18:1.17
	alpha126_17:1.17
	alpha126_16:1.17
	alpha126_15:1.17
	alpha126_14:1.17
	alpha126_13:1.17
	alpha126_12:1.17
	alpha126_11:1.17
	alpha126_10:1.17
	alpha126_09:1.17
	alpha126_08:1.17
	alpha126_07:1.17
	alpha126_06:1.17
	alpha126_05:1.17
	alpha126_04:1.17
	alpha126_03:1.17
	alpha126_02:1.17
	alpha126_1:1.16
	alpha125_17:1.15
	alpha125_16:1.15
	alpha125_15:1.15
	alpha125_14:1.15
	alpha125_13:1.15
	alpha125_12:1.15
	alpha125_11:1.15
	alpha125_10:1.15
	alpha125_09:1.15
	alpha125_08:1.15
	alpha125_07:1.15
	alpha125_06:1.15
	alpha125_05:1.14
	alpha125_04:1.14
	alpha125_03:1.14
	alpha125_02:1.14
	alpha125_01:1.14
	alpha124_19:1.14
	alpha125:1.14
	alpha124_18:1.14
	alpha124_17:1.14
	alpha124_16:1.14
	alpha124_15:1.14
	alpha124_14:1.14
	alpha124_13:1.14
	alpha124_12:1.14
	alpha124_11:1.14
	alpha124_10:1.14
	alpha124_09:1.14
	alpha124_08:1.14
	alpha124_07:1.14
	alpha124_7:1.14
	alpha124_06:1.13
	alpha124_05:1.13
	alpha124_04:1.13
	alpha124_03:1.13
	alpha124_02:1.13
	alpha124_01:1.13
	alpha124:1.12
	alpha123_12:1.12
	alpha123_11:1.12
	alpha123_10:1.12
	alpha123_9:1.12
	alpha123_8:1.11
	alpha123_7:1.11
	alpha123_6:1.10
	alpha123_5:1.9
	alpha123_4:1.9
	alpha123_3:1.9
	alpha123_2:1.9
	alpha123:1.9
	alpha122_48:1.8
	alpha122_47:1.8
	alpha122_46:1.8
	alpha122_45:1.8
	alpha122_44:1.8
	alpha122_43:1.8
	alpha122_42:1.8
	alpha122_41:1.8
	alpha122_40:1.8
	alpha122_39:1.8
	alpha122_38:1.8
	alpha122_37:1.8
	alpha122_36:1.8
	alpha122_35:1.8
	alpha122_34:1.8
	alpha122_33:1.8
	alpha122_32:1.8
	alpha122_31:1.8
	alpha122_30:1.7
	alpha122_29:1.7
	alpha122_28:1.7
	alpha122_27:1.7
	alpha122_26:1.7
	alpha122_25:1.7
	alpha122_24:1.6
	alpha122_23:1.6
	alpha122_22:1.6
	alpha122_21:1.6
	alpha122_20:1.6
	alpha122_19:1.6
	alpha122_18:1.5
	alpha122_17:1.5
	alpha122_16:1.5
	alpha122_15:1.5
	alpha122_14:1.5
	alpha122_13:1.5
	alpha122_12:1.5
	alpha122_11:1.5
	alpha122_10:1.5
	alpha122_9:1.2
	alpha122_8:1.2
	alpha122_6:1.2
	alpha122_5:1.2
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.17
date	2000.12.12.07.28.23;	author boucrot;	state Exp;
branches;
next	1.16;

1.16
date	2000.11.21.08.46.59;	author boucrot;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.08.09.09.16;	author boucrot;	state Exp;
branches;
next	1.14;

1.14
date	99.05.12.07.21.06;	author boucrot;	state Exp;
branches;
next	1.13;

1.13
date	99.03.22.14.10.37;	author boucrot;	state Exp;
branches;
next	1.12;

1.12
date	99.01.21.13.14.44;	author boucrot;	state Exp;
branches;
next	1.11;

1.11
date	99.01.16.16.44.11;	author boucrot;	state Exp;
branches;
next	1.10;

1.10
date	98.11.05.16.10.17;	author boucrot;	state Exp;
branches;
next	1.9;

1.9
date	98.10.01.15.05.16;	author boucrot;	state Exp;
branches;
next	1.8;

1.8
date	97.05.20.13.53.39;	author boucrot;	state Exp;
branches;
next	1.7;

1.7
date	97.03.06.12.45.15;	author boucrot;	state Exp;
branches;
next	1.6;

1.6
date	97.01.16.09.06.08;	author boucrot;	state Exp;
branches;
next	1.5;

1.5
date	96.09.02.13.02.08;	author boucrot;	state Exp;
branches;
next	1.4;

1.4
date	96.08.28.13.59.15;	author boucrot;	state Exp;
branches;
next	1.3;

1.3
date	96.08.27.14.47.12;	author boucrot;	state Exp;
branches;
next	1.2;

1.2
date	96.06.25.14.11.11;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.03.14.12.41.49;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.50;	author flr;	state Exp;
branches;
next	;


desc
@@


1.17
log
@*** empty log message ***
@
text
@      SUBROUTINE QMNEWR (IROLD,IRNEW)
CKEY RUN /INTERNAL
C----------------------------------------------------------------------
C! called for new run
C! called from QMREAD,QMTERM
C!                                         Author: H.Albrecht 20.09.88
C!                                       Modified: E.Blucher  03.08.90
C!                                       Modified: J.Boucrot  03.05.93
C!                                       Modified: G.Graefe   10.02.95
C!                                       Modified: S.Wasserb. 10.05.95
C!                                       Modified: J.Boucrot. 24.09.98
C!                                       Modified: J.Boucrot. 08.06.00
C----------------------------------------------------------------------
#ifndef DOC
      SAVE IRPAST,IMD93
#include "qcdesh.h"
#include "jsumjj.h"
#include "kjobjj.h"
#include "rhahjj.h"
#include "rlepjj.h"
      COMMON / SCALMO / ISCP93,SCPF93
      COMMON / MINIRAM / QINLUMR,KNBHAMR
      CHARACTER CHAINT*4,PROGN*4
      REAL XYZ(3),DXYZ(3)
      INTEGER IRPAST(3)
      DATA IRPAST / 0, 0, 0 /
      DATA IFR93,ILR93,IMIVR,IAL94 / 20000 , 23546 , 90 , 157  /
      DATA IMD93 ,SCP93 / 0 , 0.996433 /
      DATA ILRMC,ILRLC,IFRL2 / 2000, 16500 , 40000 /
#include "bmacro.h"
C----------------------------------------------------------------------
C
      KRUN = IRNEW
      IF (XCOPYJ)  GO TO 90
      CALL QMCLR 
      IF (IRNEW .EQ. 0)  GO TO 80
      IF (KDEBUG .GT. 0)  CALL PRRHAH
      call qrksec 
C
C       ext. particle table
C
      LPART = IW(NAPART)
      IF (KRUN.LE.ILRMC) THEN
         IF (LPART.EQ.0) THEN
            IND=MDARD(IW,KUCONS,'PART',0)
            LPART = IW(NAPART)
         ENDIF 
      ENDIF
      IF (LPART .EQ. 0)  GO TO 40
C
C       get number of standard particles in PART
C
      NAM1 = INTCHA ('last')
      NAM2 = INTCHA ('_st_')
      NAM3 = INTCHA ('part')
      IADR = LPART + LMHLEN
      DO 10 KNPAST=1,IW(LPART+2)
        IF (IW(IADR+JQPANA) .EQ. NAM1 .AND.
     &      IW(IADR+JQPANA+1) .EQ. NAM2 .AND.
     &      IW(IADR+JQPANA+2) .EQ. NAM3)  GO TO 20
   10 IADR = IADR + IW(LPART+1)
      KNPAST = 0
C
C       reset particle transformation table (MC <-> int. code)
C
   20 DO 30 I = KOQTRA+1, KOQTRA+IW(KOQTRA)
C         don't reset particles set by a PTRA card !
        IF (IAND (IW(KOQPBT+IW(I)), KBIT(5)) .EQ. 0)  IW(I) = 0
   30 CONTINUE
C
C       length of particle transformation table
C
      IF (IW(LPART+2) .GE. IW(KOQTRA))
     &  CALL QSBANK ('QTRA', IW(LPART+2))
C
C Fix the syntax of some neutral antiparticles as given by KINGAL
C to make them understandable by ALPHA
C
      CALL FIXPART
C------------------------------------------------------------------------------
C Number of events in the run : 
C
 40   JJSUM = IW(NAJSUM)
      KRINNE=0
      IF (JJSUM .NE. 0)  THEN
        KRINNE = IW(JJSUM+LMHLEN+JJSUVT)
      ENDIF
C Default values of energy and fill number at run start:
      CALL GETLEP(KRUN,IFOU,KRINLF,NV,QELEP,XYZ,DXYZ)
C Default values for beam position:
      QVXNOM=0.
      QVYNOM=0.
      QVZNOM=0.
      QVXNSG=1.
      QVYNSG=1.
      QVZNSG=4.
      CALL BDROP(IW,'JCAR')
C
C LCAL Luminosity for this run :
C
      CALL GETLUM(KRUN,IOKLU,KRINDQ,KRINNZ,KRINNB,QRINLU,BK,BT)
      IF (IOKLU.NE.0) GO TO 46
C Nothing found in the Database for LCAL Lumi :
      KRINDC = 0
      KRINDQ = 0
      QRINLN = 0.
      QRINLU = 0.
      KRINNZ = 0
      KRINNB = 0
      KRINBM = 0
      KRINFR = KRUN
      KRINLR = KRUN
C
C SICAL Luminosity for this run :
 46   CALL GETSLU(KRUN,IOKSI,KRSLLQ,KRSLNB,QRSLLU,QRSLBK,QRSLEW)
      IF (IOKSI.NE.0) GO TO 48
C Nothing found in the Database for SICAL Lumi :
      KRSLNB = 0
      KRSLLQ = 0
      QRSLLU = 0.
      QRSLBK = 0.
      QRSLEW = 0.
 48   CONTINUE
      XIOKLU=.FALSE.
      XIOKSI=.FALSE.
C Mini-Ramp lumi, if relevant:
      CALL QLMINRP(XLUMRMP,NBHMRMP)
C MCarlo runs :
      IF (KRUN.LT.2000) THEN
         IF (IOKSI.GT.0) XIOKSI=.TRUE.
         IF (IOKLU.GT.0.AND..NOT.XIOKSI) XIOKLU=.TRUE.
         GO TO 50
      ENDIF
C Runs for which LCAL is the reference luminometer :
C ( 1989 -> 1992 up to run 16500 ; then LEP 1.5 and LEP 2 runs )
      IF ((KRUN.GE.2000.AND.KRUN.LE.ILRLC).OR.KRUN.GE.IFRL2) THEN
         IF (IOKLU.NE.0) XIOKLU=.TRUE.
         IF (QRINLU.LE.0.) XIOKLU=.FALSE.
         IF (.NOT.XIOKLU)   WRITE ( KUPRNT , 1011 ) KRUN
         GO TO 50
      ENDIF
C Runs for which SICAL is the reference luminometer :
C ( 1992 after run 16500 -> LEP 1 runs of 1995 )
      IF (KRUN.GT.ILRLC.AND.KRUN.LT.IFRL2) THEN
         IF (IOKSI.NE.0) XIOKSI=.TRUE.
         IF (QRSLLU.LE.0.) XIOKSI=.FALSE.
         IF (.NOT.XIOKSI)   WRITE ( KUPRNT , 1021 ) KRUN
      ENDIF
C
C   Make luminosity, bhabha, and Z totals :
C   protect against errors causing QMNEWR to be called more than once
C   for the same run.  Totals are updated only if run number was not
C   one of the last three runs to be encountered.
C
 50   ISKIP=0
      DO 75 I = 1,3
        IF (KRUN.EQ.IRPAST(I)) ISKIP=1
   75 CONTINUE
      IF (ISKIP.EQ.0) THEN
         IRPAST(1) = IRPAST(2)
         IRPAST(2) = IRPAST(3)
         IRPAST(3) = KRUN
         KNHDRN = KNHDRN + KRINNZ
         IF (XIOKLU) THEN
            QINLUM = QINLUM + QRINLU
            KNBHAB = KNBHAB + KRINNB
         ENDIF
         IF (XIOKSI) THEN
            QSILUM = QSILUM + QRSLLU
            KSBHAB = KSBHAB + KRSLNB
         ENDIF
         IF (XLUMRMP.GT.0) THEN
            QINLUMR = QINLUMR + XLUMRMP 
            KNBHAMR = KNBHAMR + NBHMRMP
         ENDIF
      ENDIF
      IF (KRINLF.EQ.0) THEN
         JRLEP=IW(NAMIND('RLEP'))
         IF (JRLEP.GT.0) KRINLF=ITABL(JRLEP,1,JRLELF)
      ENDIF
C ------------------------------------------------------------------------------
C--- Get BOM constants
C
      CALL QBOMRU
C
   60 QMFLD = ALFIEL (QMFLD)
      IF (QMFLD .LT. -20. .OR. QMFLD .GT. 20.)  THEN
        WRITE (KUPRNT,1001)  QMFLD
        IF (KUPTER .NE. 0)  WRITE (KUPTER,1001)  QMFLD
      ENDIF
      QMFLDC = QMFLD * QQIRP
C
C For all MINIs of 1993 data made before a correct reprocessing in 1994
C with MINI  version 90 and ALEPHLIB version 15.6 and before ,
C all particle momenta must be scaled ( a wrong BFIELD was used ) :
C
      ISCP93 = 0
      SCPF93 = SCP93
      JRHAH=IW(NARHAH)
      IF (JRHAH.GT.0) THEN
         DO 77 IRH = LROWS(JRHAH),1,-1
            KRHAH = KROW(JRHAH,IRH)
            PROGN = CHAINT(IW(KRHAH+JRHAPN))
            IF (INDEX(PROGN,'MIN').EQ.0) GO TO 77
            XMINI = .TRUE. 
            IF (KRUN.LT.IFR93.OR.KRUN.GT.ILR93) GO TO 77
            IF (IW(KRHAH+JRHAPV).NE.IMIVR) GO TO 77
            IF (IW(KRHAH+JRHAAV).GE.IAL94) GO TO 77
            ISCP93 = 1
            GO TO 78
 77      CONTINUE
      ENDIF
 78   IF (ISCP93.EQ.1) THEN
         IMD93 = IMD93 + 1
         IF (IMD93.EQ.1) WRITE ( KUPRNT,1023 ) SCP93
      ENDIF
C -------------------------------------------------------------------
C
C   RUN initializations for some packages :
C
C   QMUIDO initialization
C
      IF (.NOT.XMINI) CALL QMUNEW
C
C   YTOP Initialization
C
      CALL YTOIRU(IRNEW,QMFLD)
C
C
C  QSELEP initialization
C
      CALL QLINIT
      CALL BLIST(IW,'C+','PLSC')
      CALL BLIST(IW,'R+','PLSC')
C
C Initialise the VDET geometry for the current run :
C ( but not for 1989/1990 Real Data ! )
C
      IF (KRUN.GT.2000.AND.KRUN.LE.9114) GO TO 79
      CALL VRDDAF(KUCONS,IRNEW,IFLAG)
      CALL VGRDAL(KUCONS,IRNEW,IFLAG)
 79   CONTINUE
C
C   NanoDST Initialization
C
      IF (XWNANO) CALL QNNEWR(IROLD,IRNEW)
C
C User's initializations for the current run :
C
   80 CALL MQUNEWR
      CALL QUNEWR (IROLD,IRNEW)
C----------------------------------------------------------------------
 1001 FORMAT ('0_QMNEWR_ Caution : Mag. field is',G14.4,
     +        '; set to 15.')
 1011 FORMAT ('0_QMNEWR_ Warning ! LCAL Luminosity NOT KNOWN ',
     +        ' for run :',I7)
 1021 FORMAT ('0_QMNEWR_ Warning ! SICAL Luminosity NOT KNOWN ',
     +        ' for run :',I7)
 1023 FORMAT ('0_QMNEWR_ 1993 data : Scale factor applied for all ',
     +        'charged tracks : ',F9.6)
   90 END
#endif
@


1.16
log
@*** empty log message ***
@
text
@d38 1
a38 2
C  Give Mcarlo cross section for this new run, if known:
      call qrksec(xsec,xsece,nevp) 
@


1.15
log
@*** empty log message ***
@
text
@d38 2
@


1.14
log
@*** empty log message ***
@
text
@a10 1
C!                                       Modified: J.Boucrot. 26.08.96
d12 1
d22 1
d125 2
d171 4
a261 1

@


1.13
log
@*** empty log message ***
@
text
@d34 1
@


1.12
log
@*** empty log message ***
@
text
@d241 2
a242 1
   80 CALL QUNEWR (IROLD,IRNEW)
@


1.11
log
@*** empty log message ***
@
text
@d28 1
a28 1
      DATA ILRLC,IFRL2 / 16500 , 40000 /
d40 6
a45 4
      IF (LPART.EQ.0) THEN
         IND=MDARD(IW,KUCONS,'PART',0)
         LPART = IW(NAPART)
      ENDIF 
@


1.10
log
@*** empty log message ***
@
text
@d40 4
@


1.9
log
@*** empty log message ***
@
text
@d23 2
a24 1
      DIMENSION IRPAST(3)
d79 2
@


1.8
log
@*** empty log message ***
@
text
@d12 1
a22 1
      DIMENSION XYZ(3),DXYZ(3),XYZL(3),DXYZL(3),XYZR(3),DXYZR(3)
d24 1
a24 1
      DATA IRPAST/0,0,0/
d71 1
a71 1
C Fix beam position banks ALPB:
d73 2
a74 5
 40   CALL FIXALPB(KRUN)
C 
C LEP energy and Luminosity from run banks RLUM , LFIL , RSLU
C
      JJSUM = IW(NAJSUM)
d78 8
a85 2
      CALL GETLEP(KRUN,IOKLE,KRINLF,INV,QELEP,XYZL,DXYZL)
      CALL GETOFS(KRUN,OFSL)
d87 1
a87 1
C Beam position from bank 'RXYZ'
a88 47
      CALL GETXYB(KRUN,IOKRU,IFLGR,XYZR,DXYZR,OFSR,VLUM)
C Set status word to tell which kind of beam position is found :
      KBPSTA=0
      IF (IOKLE.GT.0) KBPSTA=3
      IF (IOKLE.GT.0.AND.IOKRU.EQ.1.AND.IFLGR.EQ.-1) KBPSTA=2
      IF (IOKRU.EQ.1.AND.IFLGR.EQ.1) KBPSTA=1
      IF (IFLGR.EQ.-1) IOKRU=0
C
C   Decide which beam position will be used
C
      DO 41 IR=1,3
         XYZ(IR)=0.
 41   DXYZ(IR)=0.
      QDBOFS=0.
      IF (IOKRU.EQ.1) THEN
         CALL UCOPY(XYZR,XYZ,3)
         CALL UCOPY(DXYZR,DXYZ,3)
         QDBOFS=OFSR
         GO TO 42
      ENDIF
      IF (IOKLE.NE.0) THEN
         CALL UCOPY(XYZL,XYZ,3)
         CALL UCOPY(DXYZL,DXYZ,3)
         QDBOFS=OFSL
      ENDIF
 42   IFROK=1
      IF (IOKRU.EQ.0.AND.(IOKLE.EQ.0.OR.(IOKLE.GT.0.AND.INV.LE.2)))
     +    IFROK=0
      IF (IFROK.EQ.0) THEN
        KRINLF=0
        QVXNOM = 0.
        QVYNOM = 0.
        QVZNOM = 0.
        QVXNSG = 1.
        QVYNSG = 1.
        QVZNSG = 4.
        QDBOFS = 0.
      ELSE
        QVXNOM=XYZ(1)
        QVYNOM=XYZ(2)
        QVZNOM=XYZ(3)
        QVXNSG=DXYZ(1)
        QVYNSG=DXYZ(2)
        QVZNSG=DXYZ(3)
      ENDIF
      CALL BDROP(IW,'JCAR')
C LCAL Luminosity :
a91 1
      KRINNE = 0
d102 1
a102 1
C SICAL Luminosity :
d114 1
a114 1
C MCarlo runs
d199 3
d230 2
a232 15
C Provisional correction for LEP 1.5 data of 1995 :
C use by default as FRFT NR = 0 the tracks without VDET
C unless a 'FRF2' data card is provided :
C Correction cancelled on 04 March 1997
C      IFRF2=IW(NAMIND('FRF2'))
C      IF (KRUN.GT.40200.AND.KRUN.LT.40600) THEN
C         IF (IFRF2.EQ.0) THEN
C            XFRF0=.TRUE.
C            XFRF2=.FALSE.
C         ELSE
C            XFRF0=.FALSE.
C            XFRF2=.TRUE.
C         ENDIF
C      ENDIF
C
@


1.7
log
@*** empty log message ***
@
text
@a225 1
      IF (KRUN.LT.IFR93.OR.KRUN.GT.ILR93) GO TO 78
d232 2
d247 1
a247 1
      CALL QMUNEW
@


1.6
log
@*** empty log message ***
@
text
@d275 11
a285 10
      IFRF2=IW(NAMIND('FRF2'))
      IF (KRUN.GT.40200.AND.KRUN.LT.40600) THEN
         IF (IFRF2.EQ.0) THEN
            XFRF0=.TRUE.
            XFRF2=.FALSE.
         ELSE
            XFRF0=.FALSE.
            XFRF2=.TRUE.
         ENDIF
      ENDIF
@


1.5
log
@*** empty log message ***
@
text
@d70 1
a70 1
C
d73 2
a74 2
      CALL FIXALPB(KRUN)
C ------------------------------------------------------------------------------
d77 1
a77 1
   40 JJSUM = IW(NAJSUM)
@


1.4
log
@*** empty log message ***
@
text
@d297 1
@


1.3
log
@*** empty log message ***
@
text
@d296 1
@


1.2
log
@update alpha122 with corr.file no.5
@
text
@d11 1
d27 1
d65 1
d68 1
d71 5
a75 1
C       run information banks RLUM and LFIL
d115 1
a115 1
         KRINLF=0
a131 3

C Fix beam position banks ALPB:
      CALL FIXALPB(KRUN)
a135 1
   45 CONTINUE
a145 5
C---If not MC, print warning if some run information banks were missing.
   46 IF(IOKLU.NE.1.OR.IOKLE.NE.1)THEN
        IF (KRUN .GT. 2000)  CALL QWMESE
     +    ('_QMNEWR_ Some run information banks not available')
      ENDIF
d148 1
a148 1
      CALL GETSLU(KRUN,IOKSI,KRSLLQ,KRSLNB,QRSLLU,QRSLBK,QRSLEW)
d157 25
a181 1
C   keep luminosity, bhabha, and Z totals
d186 10
a195 22
      IF (KRUN.GT.2000.AND.KRUN.LT.16500) THEN
         IF (IOKLU.NE.1) XIOKLU=.FALSE.
         IF (QRINLU.LE.0.) THEN
            XIOKLU = .FALSE.
            WRITE ( KUPRNT , 1011 ) KRUN
         ENDIF
         IF (KRUN.GT.16500) THEN
            XROKSI=.TRUE.
            IF (IOKSI.NE.1) XIOKSI=.FALSE.
            IF (QRSLLU.LE.0.) THEN
               XIOKSI = .FALSE.
               WRITE ( KUPRNT , 1021 ) KRUN
            ENDIF
         ENDIF
         ISKIP=0
         DO 75 I = 1,3
           IF (KRUN.EQ.IRPAST(I)) ISKIP=1
   75    CONTINUE
         IF(ISKIP.EQ.0)THEN
            IRPAST(1) = IRPAST(2)
            IRPAST(2) = IRPAST(3)
            IRPAST(3) = KRUN
a196 1
            KNHDRN = KNHDRN + KRINNZ
d198 2
d208 1
a208 1
C
d269 1
a269 1
      IF(XWNANO)CALL QNNEWR(IROLD,IRNEW)
d272 13
a295 1
#endif
@


1.1
log
@Initial revision
@
text
@a6 2
C!                                       Modified: E.Blucher  23.06.89
C!                                       Modified: H.Albrecht 15.03.90
a7 1
C!                                       Modified: J.Boucrot  28.01.92
a38 18
C       old fashioned particle table ?
C       remove the following statements as soon as those
C       tables do not exist any more
C
C---check the database version used during KINGAL.
C
C
C - If KJOB exists (KINGAL was run) then get database version #
      JKJOB = IW(NAKJOB)
      IDVER  = 0
      IF (JKJOB .NE. 0)  IDVER = ITABL(JKJOB,1,JKJODV)
      IF (IW(LPART+1) .EQ. 8 .OR. IDVER .LT. 114)  THEN
        CALL QAPTMP
        KNPAST = 52
        LPART = IW(NAPART)
        GO TO 20
      ENDIF
C
a259 13
C Provisional correction for LEP 1.5 data of 1995 :
C use by default as FRFT NR = 0 the tracks without VDET
C unless a 'FRF2' data card is provided :
      IFRF2=IW(NAMIND('FRF2'))
      IF (KRUN.GT.40200.AND.KRUN.LT.40600) THEN
         IF (IFRF2.EQ.0) THEN
            XFRF0=.TRUE.
            XFRF2=.FALSE.
         ELSE
            XFRF0=.FALSE.
            XFRF2=.TRUE.
         ENDIF
      ENDIF
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
