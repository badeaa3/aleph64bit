head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.41.32;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.33;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QCABSA(RL,PMOM,ISIDE,IDEL,RLN)
CKEY  FILL / INTERNAL
C ------------------------------------------------------------------------------
C! Recalculates RL for electron - Auxiliary to FIXRTRL
C  Called from FIXRTRL
C                                 Author: M.N Minard 10/11/93
C
C     Input : RL   Estimator stored in preceeding processing
C             PMOM Track momentum
C             ISIDE = 1 Barrel , 2 Endcap , 3 Overlap
C             IDEL  Correction level (1 Monte_carlo 92)
C     Output : New estimator
C ------------------------------------------------------------------------------
#ifndef DOC
      PARAMETER (NVER=2)
      DIMENSION PARMEC(3,NVER),PARMBR(3,NVER)
      DIMENSION PARSEC(3,NVER),PARSBR(3,NVER)
      DIMENSION PECRED(NVER),PBRRED(NVER)
      DATA PARMEC/0.17657,0.020881,0.22670E-2
     1           ,0.17370,0.010945,-0.13903E-2/
      DATA PARSEC/0.53330E-1,0.20732E-1,0.26332E-2
     1           ,13.905,18.305,0./
      DATA PARMBR/0.18826,0.030015,0.31633E-2
     1           ,0.18901,0.025051,0.11433E-2/
      DATA PARSBR/0.61381E-1,0.27413E-1,0.40436E-2
     1           ,13.207,17.319,0./
      DATA PECRED /0.865,0.9018/
      DATA PBRRED /0.888,0.923/
C
      DIMENSION BMEAN(3),BSIG(3)
C ------------------------------------------------------------------------------
      ILAS  = NVER
      IF ( ISIDE.GT.2) THEN
        RLN = RL
        GO TO  999
      ENDIF
C Endcap :
      IF (ISIDE.EQ.2) THEN
        DO I=1,3
          BMEAN(I)=PARMEC(I,IDEL)
          BSIG(I) =PARSEC(I,IDEL)
          RSFACT  =PECRED(IDEL)
        ENDDO
C Barrel :
      ELSEIF (ISIDE.EQ.1) THEN
        DO I=1,3
          BMEAN(I)=PARMBR(I,IDEL)
          BSIG(I) =PARSBR(I,IDEL)
          RSFACT = PBRRED(IDEL)
        ENDDO
      ENDIF
      SIGBSA0=BSIG(1)+BSIG(2)*ALOG(1./PMOM)+BSIG(3)*(ALOG(PMOM))**2
      BSA0=BMEAN(1)+BMEAN(2)*ALOG(1./PMOM)+BMEAN(3)*(ALOG(PMOM))**2
      SIGBSA0=SIGBSA0*RSFACT
      BSA=RL*SIGBSA0+BSA0
C
C-    CALCULATE NEW  RL
C
C Endcap :
      IF (ISIDE.EQ.2) THEN
        DO I=1,3
          BMEAN(I)=PARMEC(I,ILAS)
          BSIG(I) =PARSEC(I,ILAS)
          RSFACT  =PECRED(ILAS)
        ENDDO
C Barrel :
      ELSEIF (ISIDE.EQ.1) THEN
        DO I=1,3
          BMEAN(I)=PARMBR(I,ILAS)
          BSIG(I) =PARSBR(I,ILAS)
          RSFACT = PBRRED(ILAS)
        ENDDO
      ENDIF
      SIGBSA0=1./(BSIG(1)+BSIG(2)*ALOG(PMOM))
      BSA0=BMEAN(1)+BMEAN(2)*ALOG(1./PMOM)+BMEAN(3)*(ALOG(PMOM))**2
      SIGBSA0=SIGBSA0*RSFACT
      RLN = (BSA-BSA0)/SIGBSA0
*
 999  RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
