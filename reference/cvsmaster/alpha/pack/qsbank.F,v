head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.41.52;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.53;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QSBANK (CBANK,N)
CKEY BANKS /INTERNAL
C----------------------------------------------------------------------
C! Create ALPHA banks or increase their size
C called from anywhere
C                                                   H.Albrecht 03.11.88
C----------------------------------------------------------------------
#ifndef DOC
#include "qcdesh.h"
      CHARACTER *(*) CBANK
      COMMON / FINDPA / NAQPSP,NAQAFP,NQAFP
C----------------------------------------------------------------------
C
      IF (CBANK .EQ. 'QLIN')  THEN
        KOQLIN = NBANK ('QLIN', 0, N + LMHLEN) + LMHLEN
        IF (KOQLIN .EQ. LMHLEN)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QLIN')
        IW(KOQLIN-1) = 1
        IW(KOQLIN) = N
C
      ELSE IF (CBANK .EQ. 'QVEC')  THEN
        NOLD = 1
        IF (IW(NAQVEC) .NE. 0)  NOLD = IW(IW(NAQVEC)+2) + 1
        KQVEC = NBANK ('QVEC', 0, N * KCQVEC + LMHLEN)
        IF (KQVEC .EQ. 0)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QVEC')
        IW(KQVEC+1) = KCQVEC
        IW(KQVEC+2) = N
        KOQVEC = KQVEC + LMHLEN - KCQVEC
        KLFRT = N
C         KSAME pointer
        DO 10 I=NOLD,N
   10   IW(KOQVEC+I*KCQVEC+JQVESP) = I
C
      ELSE IF (CBANK .EQ. 'QDET')  THEN
        JOLD = KOQDET
        KOQDET = NBANK ('QDET', 0, N * KCQDET + LMHLEN) + LMHLEN
        IF (KOQDET .EQ. LMHLEN)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QDET')
        IW(KOQDET-1) = KCQDET
        IW(KOQDET) = N
        DO 20 I=KLUST+1,KFFRT-1
   20   IW(KOQVEC+I*KCQVEC+JQVEQD) =
     &    IW(KOQVEC+I*KCQVEC+JQVEQD) + KOQDET - JOLD
C
      ELSE IF (CBANK .EQ. 'QVRT')  THEN
        KQVRT = NBANK ('QVRT', 0, N * KCQVRT + LMHLEN)
        IF (KQVRT .EQ. 0)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QVRT')
        IW(KQVRT+1) = KCQVRT
        IW(KQVRT+2) = N
        KLFRV = N
        KOQVRT = KQVRT + LMHLEN - KCQVRT
C
      ELSE IF (CBANK .EQ. 'QPAR')  THEN
        KQPAR = NBANK ('QPAR', 0, N * KCQPAR + LMHLEN)
        IF (KQPAR .EQ. 0)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QPAR')
        IW(KQPAR+1) = KCQPAR
        IW(KQPAR+2) = N
        KOQPAR = KQPAR + LMHLEN - KCQPAR
        KOQPLI = NBANK ('QPLI', 0, N + LMHLEN) + LMHLEN
        IF (KOQPLI .EQ. LMHLEN)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QPLI')
        IW(KOQPLI-1) = 1
        IW(KOQPLI) = N
        KOQPBT = NBANK ('QPBT', 0, N + LMHLEN) + LMHLEN
        IF (KOQPBT .EQ. LMHLEN)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QPBT')
        IW(KOQPBT-1) = 1
        IW(KOQPBT) = N
C
      ELSE IF (CBANK .EQ. 'QPSP')  THEN
        LENPS = LMHLEN + N * ( JQPANA+1)
        KQPSP = NBANK ('QPSP', 0, LENPS )
        IF (KQPSP .EQ. 0)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QPSP')
        IW(KQPSP+1) = JQPANA + 1
        IW(KQPSP+2) = N
        CALL BKFMT ( 'QPSP' , '(I)' )
        NAQPSP=NAMIND('QPSP')
C
      ELSE IF (CBANK .EQ. 'QAFP')  THEN
        LENPS = LMHLEN + N * ( JQPANA+1)
        KQAFP = NBANK ('QAFP', 0, LENPS )
        IF (KQAFP .EQ. 0)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QAFP')
        IW(KQAFP+1) = JQPANA + 1
        IW(KQAFP+2) = NQAFP
        CALL BKFMT ( 'QAFP' , '(I)' )
        NAQAFP = NAMIND('QAFP')
C
      ELSE IF (CBANK .EQ. 'QTRA')  THEN
        KOQTRA = NBANK ('QTRA', 0, N + LMHLEN) + LMHLEN
        IF (KOQTRA .EQ. LMHLEN)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QTRA')
        IW(KOQTRA-1) = 1
        IW(KOQTRA) = N
C
      ELSE IF (CBANK .EQ. 'QFPA')  THEN
        KOQFPA = NBANK ('QFPA', 0, N * KCQFPA + LMHLEN)
        IF (KOQFPA .EQ. 0)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QFPA')
        IW(KOQFPA+1) = KCQFPA
        IW(KOQFPA+2) = N
        KOQFPA = KOQFPA + LMHLEN - KCQFPA
C
      ELSE IF (CBANK .EQ. 'QMTX')  THEN
        KOQMTL = NBANK ('QMTL', 0, N + LMHLEN) + LMHLEN
        KOQMTS = NBANK ('QMTS', 0, N + LMHLEN) + LMHLEN
        IF (KOQMTS .EQ. LMHLEN)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QMTS')
        IW(KOQMTL-1) = 1
        IW(KOQMTL) = N
        IW(KOQMTS-1) = 1
        IW(KOQMTS) = N
C
      ELSE IF (CBANK .EQ. 'QWRK')  THEN
C                       QWRK has NO mini header !
        KQWRK = NBANK ('QWRK', 0, N)
        IF (KQWRK .EQ. 0)
     +    CALL QMTERM ('0_QSBANK_ Insufficient space for bank QWRK')
      ENDIF
C
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
