head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.04;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.05;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QWPART (IPC,COPT)
CKEY WRITE PART /USER
C----------------------------------------------------------------------
C! print row I in bank QPAR
C                                                   H.Albrecht 27.11.88
C----------------------------------------------------------------------
#ifndef DOC
      SAVE INIT
#include "qcde.h"
      CHARACTER *(*) COPT
      CHARACTER * 1 C1
      CHARACTER * 8 CFLG(4)
      DATA INIT /0/
#include "qmacro.h"
C----------------------------------------------------------------------
C
      LUSE = 0
      IF (INDEX (COPT,'U') .NE. 0)  LUSE = 1
C
      C1 = ' '
      LHEAD = 0
      IF (INDEX (COPT,'0') .NE. 0)  THEN
        C1 = '0'
        LHEAD = 1
      ENDIF
      IF (INDEX (COPT,'1') .NE. 0)  THEN
        C1 = '1'
        LHEAD = 1
      ENDIF
      IF (INDEX (COPT,'H') .NE. 0)  LHEAD = 1
C
      I1 = IPC
      I2 = IPC
      IF (IPC .EQ. 0)  THEN
        I1 = 1
        I2 = KNQPAR
        CALL QWMESS ('0_QWPART_ Particle listing')
      ENDIF
C
      KOQTRA = IW(NAQTRA) + LMHLEN
      KOQPBT = IW(NAQPBT) + LMHLEN
      KOQPAR = IW(NAQPAR) + LMHLEN - KCQPAR
C
      IH = 20
      DO 100 I=I1,I2
C
        DO 10 IEXT=1,IW(KOQTRA)
   10   IF (IW(KOQTRA+IEXT) .EQ. I)  GO TO 20
        IEXT = 0
C
   20   LBIT = IW(KOQPBT+I)
        IF (LUSE .NE. 0 .AND. LBIT .EQ. 0 .AND. IEXT .EQ. 0)
     &      GO TO 100
        IF (LHEAD .NE. 0 .AND. IH .EQ. 20)  THEN
          WRITE (KUPRNT,1001)  C1
          IH = 0
          C1 = ' '
        ENDIF
        IH = IH + 1
C
        NFLG = 0
        IF (IAND (LBIT, KBIT(1)) .EQ. 0)  THEN
          NFLG = 1
          CFLG(1) = 'notused'
        ENDIF
        IF (IAND (LBIT, KBIT(4)) .NE. 0)  THEN
          NFLG = 1
          CFLG(1) = 'pseudo-p'
        ENDIF
        IF (IAND(LBIT, KBIT(2)) .NE. 0)  THEN
          NFLG = NFLG + 1
          CFLG(NFLG) = 'datacard'
        ENDIF
        IF (IAND(LBIT, KBIT(3)) .NE. 0)  THEN
          NFLG = NFLG + 1
          CFLG(NFLG) = 'MCtable'
        ENDIF
        IF (IEXT .NE. 0)  THEN
          NFLG = NFLG + 1
          CFLG(NFLG) = 'MCevent'
        ENDIF
C
        WRITE (KUPRNT,1002)  I,CQPART(I),KCANTI(I,1),
     &    CQPART(KCANTI(I,1)),QCMASS(I),QCCHAR(I),QCLIFE(I),QCWIDT(I),
     &    IEXT,(CFLG(J),J=1,NFLG)
        IF (INIT .EQ. 0 .AND. KUPTER .NE. 0)  WRITE (KUPTER,1003)
        INIT = 1
  100 CONTINUE
C
      IF (LHEAD .NE. 0)  WRITE (KUPRNT,1004)
C
 1001 FORMAT (A,4X,
     +  '# CQPART',6X,'KCANTI anti-CQPART  QCMASS',7X,
     +  'QCCHAR  QCLIFE',6X,'QCWIDT',7X,'MC# FLAGS (see below)')
 1002 FORMAT (2(I6,1X,A12),G13.6,F7.1,2G12.4,I6,4(1X,A))
 1003 FORMAT (' _QWPART_ Particle listing written to log file')
 1004 FORMAT
     &   (' FLAGS : notused  = particle is not used in the program'/
     &  9X,'pseudo-p = used as pseudo particle'/
     &  9X,'datacard = particle attributes from data cards'/
     &  9X,'MCtable  = particle attributes from MC table'/
     &  9X,'MCevent  = particle appears in MC events')
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
