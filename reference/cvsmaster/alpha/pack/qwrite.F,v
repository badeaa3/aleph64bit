head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.04;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.05;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QWRITE
CKEY WRITE EVENT /USER
C----------------------------------------------------------------------
C! event output routine
C                                         Authors: H.Albrecht 08.11.88
C                                        Modified: E. Blucher 11.05.89
C                          Modified for Event Dir. E. Blucher 16.09.89
C                             Modified for NanoDST G. Graefe  10.02.95
C                          Modified for PVM on SAGA  T. Oest  26.07.95
C----------------------------------------------------------------------
#ifndef DOC
      SAVE NERR
#include "qcdesh.h"
      INTEGER BKINCA
      LOGICAL BTEST
      DATA NERR /0/
C----------------------------------------------------------------------
C
      IF (KNEOUT .GE. KNWRLM)  GO TO 90
#if defined(UNIX)
C_PVM
C
C     CALL WRITE ROUTINE FOR PVM
C
      CALL QPVMWR(*90)
C_PVM
#endif
      IF(XWMINI)THEN
        CALL MINDST(CQELST,CQRLST)
      ENDIF
C
      IF (XWNANO) THEN
        CALL QNEVNT(QT,KT,QV,KV)
      ENDIF
C
C       write run record for FILO option SELRUN
C
      IF (XWRRUN)  CALL QWRUNR
C
C       write event record
C
      IF (XWREVT)  GO TO 90
      XWREVT = .TRUE.
C
C++   If we are writing Mini-DST, swop the E list for the Mini list.
C
      IF(XWMINI.OR.XWNANO) THEN
        CALL BLIST(IW,'S+','E')
        CALL BLIST(IW,'E=',CQELST)
      ENDIF
      CALL ABWSEL ('E')
      IF (KEVT .NE. 0)  THEN
        KNEOUT = KNEOUT + 1
        KLEOUT = KEVT
        KLROUT = KRUN
      ENDIF
      KNREOU = KNREOU + 1
      IF (KNEOUT .EQ. 1.AND.KEVT.NE.0)  THEN
        IF (KFEOUT .LT. 0)  CALL QWMESS
     +    ('0_QWRITE_ No FILO card given: NO OUTPUT!')
        CALL QWMESE ('_QWRITE_ First event on output file')
      ENDIF
C
   90 END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
