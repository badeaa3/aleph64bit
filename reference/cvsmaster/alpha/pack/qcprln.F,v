head	1.2;
access;
symbols
	alpha126_22:1.2
	alpha126_21:1.2
	alpha126_20:1.2
	alpha126_19:1.2
	alpha126_18:1.2
	alpha126_17:1.2
	alpha126_16:1.2
	alpha126_15:1.2
	alpha126_14:1.2
	alpha126_13:1.2
	alpha126_12:1.2
	alpha126_11:1.2
	alpha126_10:1.2
	alpha126_09:1.2
	alpha126_08:1.2
	alpha126_07:1.2
	alpha126_06:1.2
	alpha126_05:1.2
	alpha126_04:1.2
	alpha126_03:1.2
	alpha126_02:1.2
	alpha126_1:1.2
	alpha125_17:1.2
	alpha125_16:1.2
	alpha125_15:1.2
	alpha125_14:1.2
	alpha125_13:1.2
	alpha125_12:1.2
	alpha125_11:1.2
	alpha125_10:1.2
	alpha125_09:1.2
	alpha125_08:1.2
	alpha125_07:1.2
	alpha125_06:1.2
	alpha125_05:1.2
	alpha125_04:1.2
	alpha125_03:1.2
	alpha125_02:1.2
	alpha125_01:1.2
	alpha124_19:1.2
	alpha125:1.2
	alpha124_18:1.2
	alpha124_17:1.2
	alpha124_16:1.2
	alpha124_15:1.2
	alpha124_14:1.2
	alpha124_13:1.2
	alpha124_12:1.2
	alpha124_11:1.2
	alpha124_10:1.2
	alpha124_09:1.2
	alpha124_08:1.2
	alpha124_07:1.2
	alpha124_7:1.2
	alpha124_06:1.2
	alpha124_05:1.2
	alpha124_04:1.2
	alpha124_03:1.2
	alpha124_02:1.2
	alpha124_01:1.2
	alpha124:1.2
	alpha123_12:1.2
	alpha123_11:1.2
	alpha123_10:1.2
	alpha123_9:1.2
	alpha123_8:1.2
	alpha123_7:1.2
	alpha123_6:1.2
	alpha123_5:1.2
	alpha123_4:1.2
	alpha123_3:1.2
	alpha123_2:1.2
	alpha123:1.2
	alpha122_48:1.2
	alpha122_47:1.2
	alpha122_46:1.2
	alpha122_45:1.2
	alpha122_44:1.2
	alpha122_43:1.2
	alpha122_42:1.2
	alpha122_41:1.2
	alpha122_40:1.2
	alpha122_39:1.2
	alpha122_38:1.2
	alpha122_37:1.2
	alpha122_36:1.2
	alpha122_35:1.2
	alpha122_34:1.2
	alpha122_33:1.2
	alpha122_32:1.2
	alpha122_31:1.2
	alpha122_30:1.2
	alpha122_29:1.2
	alpha122_28:1.2
	alpha122_27:1.2
	alpha122_26:1.2
	alpha122_25:1.2
	alpha122_24:1.2
	alpha122_23:1.2
	alpha122_22:1.2
	alpha122_21:1.2
	alpha122_20:1.1;
locks; strict;
comment	@c @;


1.2
date	97.02.18.08.36.59;	author boucrot;	state Exp;
branches;
next	1.1;

1.1
date	97.02.18.08.26.40;	author boucrot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@      SUBROUTINE QCPRLN(RL,TETIFL,PMOM,RLnew)
C ----------------------------------------------------------------------
C! computes beta/alpha and Rl for electron - Auxiliary to FIXPRL
C  Called from FIXPRL
C                                 Author: P. Perret  31/01/97
C
C     Input  : RL       Estimator stored in preceeding processing
C              TETIFL   ECAL theta impact in ECAL numbering
C              PMOM     Track momentum
C
C     Output : RLnew    new estimator
C
C ----------------------------------------------------------------------
#ifndef DOC
      implicit none
      real rl,tetifl,pmom,rlnew
      integer nver,nregion,ipar,iregion
      real bsa0,sigbsa0,bsa,bsan,sigbsan
      PARAMETER (NVER=2, nregion=3)
      real PARAMEAN(3,NREGION,NVER), PARASIGM(3,NREGION,NVER)
      real PSIGCOR(2,NREGION,NVER)
      DATA PARAMEAN / 0.1892 ,0.02852 ,0.00205     ! overlap
     >              , 0.18901,0.025051,0.11433E-2  ! barrel
     >              , 0.17370,0.010945,-0.13903E-2 ! end cap
c
     >              , 4.58732,0.701522, 0.         ! overlap new
     >              , 5.09686,0.953056, 0.         ! barrel new
     >              , 5.19404,0.853438, 0.   /     ! end cap new
      DATA PARASIGM / 0.0414 ,0.0015  ,0.00184     ! overlap
     >              ,13.207  ,17.319  ,0.          ! barrel
     >              ,13.903  ,18.305  ,0.          ! end cap
c
     >              ,16.06845,1.06258 , 0.         ! overlap new
     >              ,12.78   ,19.27848, 0.         ! barrel new
     >              ,15.17324,18.32008, 0.   /     ! end cap new
      DATA PSIGCOR  / 1.000 , 0.                   ! overlap
     >              , 0.923 , 0.                   ! barrel
     >              , 0.9018, 0.                   ! end cap
c
     >              ,1.00069, 1.9151               ! overlap new
     >              ,0.98973, 0.32534              ! barrel new
     >              ,0.97593, 0.64457        /     ! end cap new
C ----------------------------------------------------------------------
      real FUNRL2, FUNRL3, FUNSIGC
      EXTERNAL FUNRL2, FUNRL3, FUNSIGC
C ----------------------------------------------------------------------
c
      RLnew = RL
c
      IPAR = 1
      iregion = 0
      IF (TETIFL.GE.44..AND.TETIFL.LE.57.
     >    .OR.TETIFL.GE.172..AND.TETIFL.LE.185.) THEN
C Overlap
        IPAR = 2
        iregion = 1
      ELSE IF (TETIFL.GE.57..AND.TETIFL.LT.172.) THEN
C Barrel
        iregion = 2
      ELSE IF (TETIFL.GE.186..OR.TETIFL.LT.43.) THEN
C End Cap
        iregion = 3
      ENDIF
C
      if(iregion.ne.0) then
c..
c compute from the old parametrisation Beta/Alpha
c..
        IF(IPAR.EQ.1) THEN
          SIGBSA0 = FUNRL2(PMOM,PARASIGM(1,IREGION,1)
     >                    ,PARASIGM(2,IREGION,1))
        ELSE
          SIGBSA0 = FUNRL3(PMOM,PARASIGM(1,IREGION,1)
     >                    ,PARASIGM(2,IREGION,1),PARASIGM(3,IREGION,1))
        ENDIF
c
        BSA0 = FUNRL3(PMOM,PARAMEAN(1,IREGION,1)
     >                    ,PARAMEAN(2,IREGION,1),PARAMEAN(3,IREGION,1))
c
        SIGBSA0=SIGBSA0*PSIGCOR(1,IREGION,1)
c
        BSA=RL*SIGBSA0+BSA0
c..
C compute with the new parametrisation Beta/Alpha and sigma reference
c..
        BSAN = FUNRL2(PMOM,PARAMEAN(1,IREGION,2),PARAMEAN(2,IREGION,2))
        SIGBSAN = FUNRL2(PMOM,PARASIGM(1,IREGION,2)
     >                  ,PARASIGM(2,IREGION,2))
c..
C    new correction for a sigma closer to one on all the momentum range
c..
        SIGBSAN=SIGBSAN*FUNSIGC(PMOM,PSIGCOR(1,IREGION,2)
     >                         ,PSIGCOR(2,IREGION,2))
c ..
C      The new value of Rl :
c..
        RLnew = (BSA - BSAN)/SIGBSAN

      ENDIF
C
      RETURN
      END
C ----------------------------------------------------------------------
      real function funrl2(pmom,par1,par2)
c
c     computes bsa or sigbsa evolution for Rl as a function of P momentum
c     Auxiliary to QCPRLn
c                                 Author: P. Perret  31/01/97
c                                     
      implicit none
      real pmom,par1,par2
      funrl2 = 1./(par1 + par2 * alog(pmom))
      return
      end
C ----------------------------------------------------------------------
      real function funrl3(pmom,par1,par2,par3)
c
c     computes bsa or sigbsa evolution for Rl as a function of P momentum
c     old parametrisation
c     Auxiliary to QCPRLn
c                                 Author: P. Perret  31/01/97
c                                     
      implicit none
      real pmom,par1,par2,par3
      funrl3 = par1 + par2 * alog(1./pmom) + par3*(alog(pmom))**2
      return
      end
C ----------------------------------------------------------------------
      real function funsigc(pmom,par1,par2)
c
c     computes correction for sigbsa evolution as a function of P momentum
c     Auxiliary to QCPRLn
c                                 Author: P. Perret  31/01/97
c                                     
      implicit none
      real pmom,par1,par2
      funsigc = par1/(1. + par2/(pmom*pmom))
      return
      end
#endif

@


1.1
log
@*** empty log message ***
@
text
@d4 1
a4 1
C  Called from FIXRL
d140 2
a141 1
#endif@
