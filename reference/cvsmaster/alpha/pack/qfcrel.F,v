head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.41.38;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.41.39;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QFCREL
CKEY FILL CAL /INTERNAL
C----------------------------------------------------------------------
C! Check the relations between ECAL objects and HCAL objects.
C
C!called from QFCASC
C!                                                   H.Albrecht 27.2.89
C----------------------------------------------------------------------
#ifndef DOC
      SAVE INIT,ICALO,NCALO
      LOGICAL FLAG
#include "qcdesh.h"
      DATA INIT /0/
      JDH(I) = JQDET + NTKH * KCQDET + I
      JDE(I) = JQDET + NTKE * KCQDET + I
      JDC(I) = JQDET + NTKC * KCQDET + I
      JVC(I) = KOQVEC + NTKC * KCQVEC + I
C----------------------------------------------------------------------
C
      JQDET = KOQDET - KLUST * KCQDET
C
      IF (INIT .EQ. 0) THEN
        INIT = 1
        ICALO = KPCOMP ('CALOBJ')
        NCALO = KFPADR (ICALO)
      ENDIF
C
C         loop over all associated ECAL objects assoc. to HCAL :
C
      DO 50 NTKE = KFEHT, KLEHT
        IF (IABS(IW(JDE(JQDECF))) .NE. 1)  GO TO 50
C
        NHCAL = 1
   10   IF (NHCAL .GT. IW(JDE(JQDENH)))  GO TO 40
        NTKH = IW(KOQLIN+IW(JDE(JQDEHL))+NHCAL)
C
C           Last chance to ignore the ECAL/HCAL relation :
C
        CALL QFCOMP (NTKE, NTKH, FLAG)
        IF (FLAG)  THEN
          NHCAL = NHCAL + 1
          GO TO 10
        ENDIF
C
C             remove relations
C
        IW(JDE(JQDENH)) = IW(JDE(JQDENH)) - 1
        NDIF = 0
        DO 20 N = 1, IW(JDE(JQDENH))
          IF (IW(KOQLIN+IW(JDE(JQDEHL))+N) .EQ. NTKH)  NDIF = 1
   20   IW(KOQLIN+IW(JDE(JQDEHL))+N) =
     &      IW(KOQLIN+IW(JDE(JQDEHL))+N+NDIF)
C
        IW(JDH(JQDENE)) = IW(JDH(JQDENE)) - 1
        NDIF = 0
        DO 30 N = 1, IW(JDH(JQDENE))
          IF (IW(KOQLIN+IW(JDH(JQDEEL))+N) .EQ. NTKE)  NDIF = 1
   30   IW(KOQLIN+IW(JDH(JQDEEL))+N) =
     &      IW(KOQLIN+IW(JDH(JQDEEL))+N+NDIF)
C
        GO TO 10
C
   40   IF (IW(JDE(JQDENH)) .NE. 0)  GO TO 50
C
C         ECAL not associated any more to an HCAL :
C
        IF (IW(JDE(JQDENF)) .EQ. 0)  THEN
C
C               ECAL is NOT ass. to a charged track. Copy into OV :
C               Object will be accessible in loops over reco. objects.
C
          IF (KFOVT - 1 .LE. KLUST)  THEN
            CALL QWMESE ('_QFCREL_ Not enough space')
          ELSE
            KFOVT = KFOVT - 1
            NTKC = KFOVT
            CALL QVCOPY (NTKC, NTKE)
            IW(JVC(JQVEPA)) = ICALO
            IW(JVC(JQVENP)) = IW(KOQFPA+NCALO*KCQFPA+1)
            IW(KOQFPA+NCALO*KCQFPA+1) = NTKC
          ENDIF
        ENDIF
C
C               Copy into AS :
C               Object will be accessible in loops over CAL objects.
C
        IF (KLAST + 1 .GE. KFEHT)  THEN
          CALL QWMESE ('_QFCREL_ Not enough space')
        ELSE
          KLAST = KLAST + 1
          NTKC = KLAST
          CALL QVCOPY (NTKC, NTKE)
          IW(JVC(JQVEPA)) = ICALO
          IW(JVC(JQVENP)) = IW(KOQFPA+NCALO*KCQFPA+1)
          IW(KOQFPA+NCALO*KCQFPA+1) = NTKC
        ENDIF
C
   50 CONTINUE
C
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
