head	1.3;
access;
symbols
	alpha126_22:1.3
	alpha126_21:1.3
	alpha126_20:1.3
	alpha126_19:1.3
	alpha126_18:1.3
	alpha126_17:1.3
	alpha126_16:1.3
	alpha126_15:1.3
	alpha126_14:1.3
	alpha126_13:1.3
	alpha126_12:1.3
	alpha126_11:1.3
	alpha126_10:1.3
	alpha126_09:1.3
	alpha126_08:1.3
	alpha126_07:1.3
	alpha126_06:1.3
	alpha126_05:1.3
	alpha126_04:1.3
	alpha126_03:1.3
	alpha126_02:1.3
	alpha126_1:1.3
	alpha125_17:1.3
	alpha125_16:1.3
	alpha125_15:1.3
	alpha125_14:1.3
	alpha125_13:1.3
	alpha125_12:1.3
	alpha125_11:1.3
	alpha125_10:1.3
	alpha125_09:1.3
	alpha125_08:1.3
	alpha125_07:1.3
	alpha125_06:1.3
	alpha125_05:1.3
	alpha125_04:1.3
	alpha125_03:1.3
	alpha125_02:1.3
	alpha125_01:1.3
	alpha124_19:1.3
	alpha125:1.3
	alpha124_18:1.3
	alpha124_17:1.3
	alpha124_16:1.3
	alpha124_15:1.3
	alpha124_14:1.3
	alpha124_13:1.3
	alpha124_12:1.3
	alpha124_11:1.3
	alpha124_10:1.3
	alpha124_09:1.3
	alpha124_08:1.3
	alpha124_07:1.3
	alpha124_7:1.3
	alpha124_06:1.3
	alpha124_05:1.3
	alpha124_04:1.3
	alpha124_03:1.3
	alpha124_02:1.3
	alpha124_01:1.3
	alpha124:1.3
	alpha123_12:1.3
	alpha123_11:1.3
	alpha123_10:1.3
	alpha123_9:1.3
	alpha123_8:1.3
	alpha123_7:1.3
	alpha123_6:1.3
	alpha123_5:1.3
	alpha123_4:1.3
	alpha123_3:1.3
	alpha123_2:1.3
	alpha123:1.3
	alpha122_48:1.3
	alpha122_47:1.3
	alpha122_46:1.3
	alpha122_45:1.3
	alpha122_44:1.3
	alpha122_43:1.3
	alpha122_42:1.3
	alpha122_41:1.3
	alpha122_40:1.3
	alpha122_39:1.3
	alpha122_38:1.3
	alpha122_37:1.3
	alpha122_36:1.3
	alpha122_35:1.3
	alpha122_34:1.3
	alpha122_33:1.3
	alpha122_32:1.3
	alpha122_31:1.3
	alpha122_30:1.3
	alpha122_29:1.3
	alpha122_28:1.3
	alpha122_27:1.3
	alpha122_26:1.3
	alpha122_25:1.3
	alpha122_24:1.3
	alpha122_23:1.3
	alpha122_22:1.3
	alpha122_21:1.3
	alpha122_20:1.3
	alpha122_19:1.3
	alpha122_18:1.3
	alpha122_17:1.3
	alpha122_16:1.3
	alpha122_15:1.2
	alpha122_14:1.2
	alpha122_13:1.2
	alpha122_12:1.2
	alpha122_11:1.2
	alpha122_10:1.2
	alpha122_9:1.2
	alpha122_8:1.2
	alpha122_6:1.2
	alpha122_5:1.2
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.3
date	96.11.12.13.58.14;	author boucrot;	state Exp;
branches;
next	1.2;

1.2
date	96.06.25.14.11.27;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.03.14.12.42.51;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.52;	author flr;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@      SUBROUTINE CHECKQ(MTRA,IPROC,ISTOG,IPOP)
CKEY  QTRUTH/INTERNAL
C ...............................................................
C! Determines the production process in QTRUTH
C  Authors  D. Abbaneo , F. Ligabue 27/07/94  from FINLEP / UPHY
C  Called from QTRUTH
C .                                                             .
C . Input                                                       .
C .   MTRA   / I   Alpha index of the MC track which is the     .
C .                daughter of the string or of the last        .
C .                H.F. hadron                                  .
C .                                                             .
C .   IPROC  / I   Production process                           .
C .                 1    b -> c X                               .
C .                 2    b -> u X                               .
C .                 3    b -> cbar c ; cbar -> X                .
C .                 4    b -> cbar u ; cbar -> X                .
C .                 5    b -> c -> X                            .
C .                 6    c -> X                                 .
C .                 7    fragmentation or uds                   .
C .                                                             .
C .   ISTOG  / I   Flavour of the event                         .
C .                1=d, 2=u, 3=s, 4=c, 5=b                      .
C .                                                             .
C . Output                                                      .
C .   IPOP   / I   Flavour of the quark from gluon splitting    .
C .                4 or 5 if the chain is originating from a    .
C .                       c or a b quark respectively, which    .
C .                       are coming from gluon splitting       .
C .                0      otherwise                             .
C .                                                             .
C ...............................................................
#ifndef DOC
      IMPLICIT NONE
#include "qdecl.h"
#include "qcde.h"
C
C - functions
      LOGICAL FHVFL,FQQUA,FHQUA,FBHAD,ENDCH
C
C - variables
      INTEGER MTRA,IPROC,ISTOG,IPOP,ITRU,NHVH,JSTRI,JQ,JQQ,
     @@     NPARQ,JPARQ,MGM
C
C - macros
#include "qmacro.h"
C----------------------------------------------------------------------
C - check flavour
      IPOP=0
      IF (IPROC.EQ.7) RETURN
C
C - if ISTOG and IPROC do not match set IPOP
      IF (IPROC.LE.5.AND.ISTOG.NE.5) then
        IPOP=5
        RETURN
      ENDIF
      IF (IPROC.EQ.6.AND.ISTOG.NE.4) then
        IPOP=4
        RETURN
      ENDIF
C
C - count H.F. hadrons in the event
      NHVH = 0
      DO ITRU=KFMCT,KLMCT
        IF (FHVFL(ITRU)) THEN
          JSTRI=KMOTH(ITRU,1)
          IF (ENDCH(JSTRI))
     @@         NHVH = NHVH+1
        ENDIF
      ENDDO
      IF (NHVH.NE.4) RETURN
C
C - go back to the first H.F. hadron and to the quark before the string
C   (or quark)
 9    JQ=KMOTH(MTRA,1)
      IF (ENDCH(JQ)) GO TO 10
      MTRA=JQ
      GOTO 9
 10   continue
C go one step upstream only if it's a string and not already a quark
      IF (CQTPN(JQ).EQ.'string'.OR.CQTPN(JQ).EQ.'cluster')
     ^     JQ = KMOTH(JQ,1)
      JQQ = JQ
C
C - see if quark was coming from a gluon
 19   NPARQ=KNMOTH(JQ)
      IF (NPARQ.GT.0) THEN
        JPARQ=KMOTH(JQ,1)
C
C - set IPOP
        IF (CQTPN(JPARQ).EQ.'gluon') THEN
          IF ((.NOT.FQQUA(JQQ)).AND.FHQUA(MTRA)) RETURN
          IF (FQQUA(JQQ).AND.(.NOT.FHQUA(MTRA))) RETURN
          IPOP = ISTOG
          RETURN
        ENDIF
        JQ = JPARQ
        GO TO 19
      ENDIF
      IF (FQQUA(JQQ).AND.FHQUA(MTRA)) RETURN
      IF ((.NOT.FQQUA(JQQ)).AND.(.NOT.FHQUA(MTRA))) RETURN
      IPOP = ISTOG
      RETURN
      END
#endif


@


1.2
log
@update alpha122 with corr.file no.5
@
text
@d43 1
a43 1
     @@        NPARQ,JPARQ,MGM
a64 1
        JSTRI=KMOTH(ITRU,1)
d66 1
d68 1
a68 1
     @@ NHVH = NHVH+1
d75 1
a75 1
9     JQ=KMOTH(MTRA,1)
d79 1
a79 1
10    continue
d82 1
a82 1
     ^ JQ = KMOTH(JQ,1)
d86 1
a86 1
19    NPARQ=KNMOTH(JQ)
d106 2
@


1.1
log
@Initial revision
@
text
@d74 1
d80 3
a82 1
      JQ = KMOTH(JQ,1)
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
