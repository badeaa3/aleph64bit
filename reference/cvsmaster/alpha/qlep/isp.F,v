head	1.4;
access;
symbols
	alpha126_22:1.4
	alpha126_21:1.4
	alpha126_20:1.4
	alpha126_19:1.4
	alpha126_18:1.4
	alpha126_17:1.4
	alpha126_16:1.4
	alpha126_15:1.4
	alpha126_14:1.4
	alpha126_13:1.4
	alpha126_12:1.4
	alpha126_11:1.4
	alpha126_10:1.4
	alpha126_09:1.4
	alpha126_08:1.4
	alpha126_07:1.4
	alpha126_06:1.4
	alpha126_05:1.4
	alpha126_04:1.4
	alpha126_03:1.4
	alpha126_02:1.4
	alpha126_1:1.4
	alpha125_17:1.4
	alpha125_16:1.4
	alpha125_15:1.4
	alpha125_14:1.4
	alpha125_13:1.4
	alpha125_12:1.4
	alpha125_11:1.4
	alpha125_10:1.4
	alpha125_09:1.4
	alpha125_08:1.4
	alpha125_07:1.4
	alpha125_06:1.4
	alpha125_05:1.4
	alpha125_04:1.4
	alpha125_03:1.4
	alpha125_02:1.4
	alpha125_01:1.4
	alpha124_19:1.4
	alpha125:1.4
	alpha124_18:1.4
	alpha124_17:1.4
	alpha124_16:1.4
	alpha124_15:1.4
	alpha124_14:1.4
	alpha124_13:1.4
	alpha124_12:1.4
	alpha124_11:1.4
	alpha124_10:1.4
	alpha124_09:1.4
	alpha124_08:1.4
	alpha124_07:1.4
	alpha124_7:1.4
	alpha124_06:1.4
	alpha124_05:1.4
	alpha124_04:1.4
	alpha124_03:1.4
	alpha124_02:1.4
	alpha124_01:1.4
	alpha124:1.4
	alpha123_12:1.4
	alpha123_11:1.4
	alpha123_10:1.4
	alpha123_9:1.4
	alpha123_8:1.4
	alpha123_7:1.4
	alpha123_6:1.4
	alpha123_5:1.4
	alpha123_4:1.4
	alpha123_3:1.4
	alpha123_2:1.4
	alpha123:1.4
	alpha122_48:1.4
	alpha122_47:1.4
	alpha122_46:1.4
	alpha122_45:1.4
	alpha122_44:1.4
	alpha122_43:1.4
	alpha122_42:1.4
	alpha122_41:1.4
	alpha122_40:1.4
	alpha122_39:1.4
	alpha122_38:1.4
	alpha122_37:1.4
	alpha122_36:1.4
	alpha122_35:1.4
	alpha122_34:1.4
	alpha122_33:1.4
	alpha122_32:1.3
	alpha122_31:1.3
	alpha122_30:1.3
	alpha122_29:1.3
	alpha122_28:1.3
	alpha122_27:1.3
	alpha122_26:1.2
	alpha122_25:1.2
	alpha122_24:1.2
	alpha122_23:1.2
	alpha122_22:1.2
	alpha122_21:1.2
	alpha122_20:1.2
	alpha122_19:1.2
	alpha122_18:1.2
	alpha122_17:1.2
	alpha122_16:1.2
	alpha122_15:1.2
	alpha122_14:1.2
	alpha122_13:1.2
	alpha122_12:1.2
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.4
date	97.08.05.08.44.19;	author boucrot;	state Exp;
branches;
next	1.3;

1.3
date	97.04.23.05.12.22;	author boucrot;	state Exp;
branches;
next	1.2;

1.2
date	96.09.06.05.00.29;	author boucrot;	state Exp;
branches;
next	1.1;

1.1
date	96.03.14.12.42.52;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.53;	author flr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@      SUBROUTINE ISP(MCT,MTRA,ISPLIT)
CKEY  QTRUTH/INTERNAL
C ...............................................................
C! Auxiliary to QTRUTH
C  Authors  D. Abbaneo , F. Ligabue 27/07/94  from FINLEP / UPHY
C  Modified for ISR and FSR 13/10/94
C  Called from QTRUTH
C .                                                             .
C . Input                                                       .
C .   MCT    / I   Alpha index of the true track                .
C .                                                             .
C . Output                                                      .
C .   MTRA   / I   Alpha index of the track mother which is     .
C .                produced by the string or by the last H.F.   .
C .                hadron (may be equal to MCT)                 .
C .                                                             .
C .   ISPLIT / I   End of the decay chain                       .
C .                 0   lepton from H.F. hadron                 .
C .                 1   K -> l                                  .
C .                 2   pi -> l                                 .
C .                 3   gamma -> l                              .
C .                 4   J/psi -> l                              .
C .                 5   psi' -> l                               .
C .                 6   pi0 -> l                                .
C .                 7   other -> l                              .
C .                 8   K                                       .
C .                 9   pi                                      .
C .                10   other                                   .
C .                                                             .
C ...............................................................
#ifndef DOC
      IMPLICIT NONE
#include "qdecl.h"
#include "qcde.h"
C
C - functions
      LOGICAL FHVFL,ENDCH
C
C - variables
      INTEGER MCT,MTRA,ISPLIT,MGM
C
C - macros
#include "qmacro.h"
C
C - anything
      ISPLIT=10
C
C - mother track
      MTRA=KMOTH(MCT,1)
      IF (MTRA.EQ.0) RETURN
      IF (FHVFL(MTRA).or.ENDCH(MTRA)) MTRA = MCT
C
C - pions and kaons
      IF (XPEQOR(MCT,'pi+')) THEN
        ISPLIT = 9
      ELSEIF (XPEQOR(MCT,'K+')) THEN
        ISPLIT = 8
C
C - objects decaying into leptons
      ELSEIF (XPEQOR(MCT,'e+').OR.XPEQOR(MCT,'mu+')
     @@       .OR.XPEQOR(MCT,'tau+')) THEN
C
C - any decaying object
        ISPLIT=7
C
C - particular decaying objects
        IF (XPEQOR(MTRA,'K+'))    ISPLIT = 1
        IF (XPEQOR(MTRA,'pi+'))   ISPLIT = 2
        IF (XPEQOR(MTRA,'gamma')) ISPLIT = 3
        IF (XPEQOR(MTRA,'Jpsi'))  ISPLIT = 4
        IF (XPEQOR(MTRA,'psipr')) ISPLIT = 5
        IF (XPEQOR(MTRA,'pi0'))   ISPLIT = 6
C
C - if lepton coming from a H.F. hadron already set MTRA=MCT
        IF (MTRA.EQ.MCT) ISPLIT = 0
      ENDIF
C
c - recognize photons from ISR
      IF (isplit.eq.3) then
        if(KNMOTH(MTRA).EQ.0) THEN
          isplit = -3
          return
        elseif(xpeqor(kmoth(mtra,1),'Charged')) then
          isplit = -3
          return
        endif
      ENDIF
 79   MGM=KMOTH(MTRA,1)
C
c - recognize photons from FSR
      if(isplit.eq.3) then  
        IF ((KTPCOD(MGM).GE.100.AND.KTPCOD(MGM).LE.112).OR.
     .       (KTPCOD(MGM).EQ.44)) THEN
          ISPLIT = -3
          RETURN
        ENDIF
      endif
c
      IF (MGM.EQ.0) THEN
        MTRA=0
        RETURN
      ENDIF
C
C - go back to just after the string or the last H.F. hadron
      IF (FHVFL(MGM)) RETURN
      IF (ENDCH(MGM)) RETURN
      MTRA=MGM
      GOTO 79
      END
#endif
@


1.3
log
@*** empty log message ***
@
text
@d79 8
a86 3
      IF (isplit.eq.3.and.KNMOTH(MTRA).EQ.0) THEN
        isplit = -3
        return
@


1.2
log
@fix for ISR photons in HVFL05
@
text
@d61 1
a61 1
     @@        .OR.XPEQOR(MCT,'tau+')) THEN
d83 1
a83 1
79    MGM=KMOTH(MTRA,1)
d86 1
d88 1
a88 1
     .      (KTPCOD(MGM).EQ.44)) THEN
d92 6
a97 4
        IF (MGM.EQ.0) THEN
          MTRA=0
          RETURN
        ENDIF
d100 3
a102 3
        IF (FHVFL(MGM)) RETURN
        IF (ENDCH(MGM)) RETURN
        MTRA=MGM
@


1.1
log
@Initial revision
@
text
@d79 1
a79 1
      IF (KNMOTH(MTRA).EQ.0) THEN
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
