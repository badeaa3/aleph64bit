head	1.4;
access;
symbols
	alpha126_22:1.4
	alpha126_21:1.4
	alpha126_20:1.4
	alpha126_19:1.4
	alpha126_18:1.4
	alpha126_17:1.4
	alpha126_16:1.4
	alpha126_15:1.4
	alpha126_14:1.4
	alpha126_13:1.4
	alpha126_12:1.4
	alpha126_11:1.4
	alpha126_10:1.4
	alpha126_09:1.4
	alpha126_08:1.4
	alpha126_07:1.4
	alpha126_06:1.4
	alpha126_05:1.4
	alpha126_04:1.4
	alpha126_03:1.4
	alpha126_02:1.4
	alpha126_1:1.4
	alpha125_17:1.4
	alpha125_16:1.4
	alpha125_15:1.4
	alpha125_14:1.4
	alpha125_13:1.4
	alpha125_12:1.4
	alpha125_11:1.4
	alpha125_10:1.4
	alpha125_09:1.4
	alpha125_08:1.4
	alpha125_07:1.4
	alpha125_06:1.4
	alpha125_05:1.4
	alpha125_04:1.4
	alpha125_03:1.4
	alpha125_02:1.4
	alpha125_01:1.4
	alpha124_19:1.4
	alpha125:1.4
	alpha124_18:1.4
	alpha124_17:1.4
	alpha124_16:1.4
	alpha124_15:1.4
	alpha124_14:1.4
	alpha124_13:1.4
	alpha124_12:1.3
	alpha124_11:1.3
	alpha124_10:1.3
	alpha124_09:1.3
	alpha124_08:1.3
	alpha124_07:1.3
	alpha124_7:1.3
	alpha124_06:1.3
	alpha124_05:1.3
	alpha124_04:1.2
	alpha124_03:1.2
	alpha124_02:1.2
	alpha124_01:1.2
	alpha124:1.2
	alpha123_12:1.2
	alpha123_11:1.2
	alpha123_10:1.2
	alpha123_9:1.2
	alpha123_8:1.2
	alpha123_7:1.2
	alpha123_6:1.2
	alpha123_5:1.2
	alpha123_4:1.2
	alpha123_3:1.2
	alpha123_2:1.2
	alpha123:1.2
	alpha122_48:1.2
	alpha122_47:1.2
	alpha122_46:1.2
	alpha122_45:1.2
	alpha122_44:1.2
	alpha122_43:1.2
	alpha122_42:1.2
	alpha122_41:1.2
	alpha122_40:1.2
	alpha122_39:1.2
	alpha122_38:1.2
	alpha122_37:1.2
	alpha122_36:1.2
	alpha122_35:1.2
	alpha122_34:1.2
	alpha122_33:1.2
	alpha122_32:1.2
	alpha122_31:1.2
	alpha122_30:1.1
	alpha122_29:1.1
	alpha122_28:1.1
	alpha122_27:1.1
	alpha122_26:1.1
	alpha122_25:1.1
	alpha122_24:1.1
	alpha122_23:1.1
	alpha122_22:1.1
	alpha122_21:1.1
	alpha122_20:1.1
	alpha122_19:1.1
	alpha122_18:1.1
	alpha122_17:1.1
	alpha122_16:1.1
	alpha122_15:1.1
	alpha122_14:1.1
	alpha122_13:1.1
	alpha122_12:1.1
	alpha122_11:1.1
	alpha122_10:1.1
	alpha122_9:1.1
	alpha122_8:1.1
	alpha122_6:1.1;
locks; strict;
comment	@c @;


1.4
date	99.08.25.09.42.04;	author boucrot;	state Exp;
branches;
next	1.3;

1.3
date	99.04.19.14.04.38;	author boucrot;	state Exp;
branches;
next	1.2;

1.2
date	97.05.20.13.54.03;	author boucrot;	state Exp;
branches;
next	1.1;

1.1
date	96.06.27.15.15.00;	author flr;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@      SUBROUTINE FIT_DMIN(ITYPE,NUMVIEW,OUTPAR,OUTERR,CHISQ,NOENT)
CKEY   QIPBTAG / INTERNAL
C-----------------------------------------------------------------------
C! Fit the dmin/sig spectrum to the standard function
C  Called from BTAG_FIT
C  Author  Dave Brown  29-1-93
C  Modified Ian Tomalin 7-7-95: Limits changed for simple fit to
C                               prevent crashing.
C  Modified Ian Tomalin 8-3-99: Old fit_dmin96 code greatly streamlined
C                               and included directly here.
C  Modified P-F Giraud 17-8-99: New histogram numbering convention.
C-----------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
#include "bcs.h"
C
C  Input variables; Track type and number of views
C
      INTEGER ITYPE,NUMVIEW
C
C  Output variables
C
      REAL OUTPAR(5),OUTERR(5),CHISQ
      INTEGER NOENT

C  Common with histogram offset.
#include "btpar.h"
C
C  Fit variables.    Notice that we now constrain the
C  fit amplitude to the number of entries in the plot; this eliminates
C  1 variable from the fit, and also eliminates a strong correlation
C  between the first 4 variables, thus making the fit more robust.
C
      REAL STEP(NFIT),STEPS(NFIT)
      REAL PMIN(NFIT),PMAX(NFIT),PMINS(NFIT),PMAXS(NFIT),PERR(NFIT)
      REAL FITPAR(NFIT),SUM
      COMMON/DMIN_FITPAR/FITPAR,SUM
      REAL DMINF,DMINS,HI
      EXTERNAL DMINF,DMINS,DMINF2,DMINS2,HI
C
C  HBOOK fit common
C
      INTEGER IQUEST(100)
      COMMON/QUEST/IQUEST
C
C  Local variables
C
      INTEGER IPAR,IERFLG,MFIT,ID
      REAL*8 DUMMY(10)
      CHARACTER*8 CHOPT
      LOGICAL FIRST_ZERO
      DATA STEP/2*.1,2*.1,.5/
      DATA PMIN/2*0.,3*.25/
      DATA PMAX/2*1.,3*10./
      DATA STEPS/.1,.1,.5,2*0./
      DATA PMINS/0.,2*.25,2*0./
      DATA PMAXS/1.,2*10.,2*0./
      DATA CHOPT/'BRV'/
C  logical for new code
      LOGICAL NEWCOD
C
C  Inline functions
C
      INTEGER ITYP
      LOGICAL SIMPLE_OLD,SIMPLE_NEW
C Old QIPBTAG track types
      SIMPLE_OLD(ITYP) = (NOENT.LT.10000).OR.ITYP.EQ.7
C New QIPBTAG track types.
C     SIMPLE_NEW(ITYP) = (NOENT.LT.10000).OR.ITYPE.EQ.3.OR.ITYPE.GT.5
      SIMPLE_NEW(ITYP) = (NOENT.LT.10000)
C ---------------------------------------------------------------------
C See which version of the code is used, John's modifications or 
C standard?
      CALL CODSEL(NEWCOD)
C
C  Normalize to the number of entries. 
C
      ID = ICHIS+ITYPE
      CALL HNOENT(ID,NOENT)
      IF(NOENT .LE. 100)THEN
        WRITE (IW(6),*)' Not enough entries for histogram ',ID
        RETURN
      END IF
      SUM = NOENT
C
C  Limit the fit range
C
      IQUEST(11) = 1
      IQUEST(12) = 10
      FIRST_ZERO = .TRUE.
      DO WHILE(FIRST_ZERO .OR. HI(ID,IQUEST(12)).GT.0.0)
        IF(HI(ID,IQUEST(12)).LE.0.0)FIRST_ZERO = .FALSE.
        IQUEST(12) = IQUEST(12) + 1
      END DO
C
C  For V0s and no-vdet tracks, use a simpler fit
C
      IF (     NEWCOD.AND.SIMPLE_NEW(ITYPE).OR.
     &    .NOT.NEWCOD.AND.SIMPLE_OLD(ITYPE))
     &THEN
        MFIT = NFIT-2
        FITPAR(1) = OUTPAR(1)
        FITPAR(2) = OUTPAR(3)
        FITPAR(3) = OUTPAR(4)
        IF(NUMVIEW.EQ.2)THEN
          CALL HFITH(ID,DMINS,CHOPT,MFIT,FITPAR,STEPS,PMINS,PMAXS,
     &         PERR,CHISQ)
        ELSE
          CALL HFITH(ID,DMINS2,CHOPT,MFIT,FITPAR,STEPS,PMINS,PMAXS,
     &         PERR,CHISQ)
        END IF
        OUTPAR(1) = FITPAR(1)
        OUTPAR(2) = 0.0
        OUTPAR(3) = FITPAR(2)
        OUTPAR(4) = FITPAR(3)
        OUTPAR(5) = 5.0
      ELSE
        MFIT = NFIT
        DO IPAR=1,5
          FITPAR(IPAR) = OUTPAR(IPAR)
        END DO
        IF(NUMVIEW.EQ.2)THEN
          CALL HFITH(ID,DMINF,CHOPT,MFIT,FITPAR,STEP,PMIN,PMAX,
     &         PERR,CHISQ)
        ELSE
          CALL HFITH(ID,DMINF2,CHOPT,MFIT,FITPAR,STEP,PMIN,PMAX,
     &         PERR,CHISQ)
        END IF
        DO IPAR=1,5
          OUTPAR(IPAR) = FITPAR(IPAR)
        END DO
      END IF
C
      RETURN
      END
C
C Fit function
C
      REAL FUNCTION DMINF(X)
C
      IMPLICIT NONE
      REAL*8 XXXX,P1,P2,P3
      REAL*8 RESOL
      COMMON/DMIN_FITPAR/FITPAR,SUM
      REAL FITPAR(5),SUM
      REAL X
C
C  Inlines
C  Normalized functions used to fit the negative dmin/sig spectrum.
C
      P1(XXXX) = XXXX*EXP(-(XXXX/FITPAR(3))**2/2.)/FITPAR(3)**2
      P2(XXXX) = XXXX*EXP(-XXXX/FITPAR(4))/FITPAR(4)**2
      P3(XXXX) = XXXX*EXP(-XXXX/FITPAR(5))/FITPAR(5)**2
      RESOL(XXXX) = (1.-FITPAR(1)-FITPAR(2))*P1(XXXX)+
     &  FITPAR(1)*P2(XXXX)+FITPAR(2)*P3(XXXX)
C
      XXXX = X
      DMINF = SUM*RESOL(XXXX)
      RETURN
      END
C
C  Low-statistics fit function
C
      REAL FUNCTION DMINS(X)
C
      IMPLICIT NONE
      REAL*8 XXXX,P1,P2
      REAL*8 RESOL
      COMMON/DMIN_FITPAR/FITPAR,SUM
      REAL FITPAR(5),SUM
      REAL X
C
C  Inlines
C  Normalized functions used to fit the negative dmin/sig spectrum.
C
      P1(XXXX) = XXXX*EXP(-(XXXX/FITPAR(2))**2/2.)/FITPAR(2)**2
      P2(XXXX) = XXXX*EXP(-XXXX/FITPAR(3))/FITPAR(3)**2
      RESOL(XXXX) = (1.-FITPAR(1))*P1(XXXX)+FITPAR(1)*P2(XXXX)
C
      XXXX = X
      DMINS = SUM*RESOL(XXXX)
      RETURN
      END
C
C  2-d fit
C
      REAL FUNCTION DMINF2(X)
C
      IMPLICIT NONE
      REAL*8 XXXX,P1,P2,P3
      REAL*8 RESOL
      COMMON/DMIN_FITPAR/FITPAR,SUM
      REAL FITPAR(5),SUM
      REAL X
      REAL R2OVPI/0.79788456/
C
C  Inlines
C  Normalized functions used to fit the negative dmin/sig spectrum.
C
      P1(XXXX) = R2OVPI*EXP(-(XXXX/FITPAR(3))**2/2.)/FITPAR(3)
      P2(XXXX) = EXP(-XXXX/FITPAR(4))/FITPAR(4)
      P3(XXXX) = EXP(-XXXX/FITPAR(5))/FITPAR(5)
      RESOL(XXXX) = (1.-FITPAR(1)-FITPAR(2))*P1(XXXX)+
     &  FITPAR(1)*P2(XXXX)+FITPAR(2)*P3(XXXX)
C
      XXXX = X
      DMINF2 = SUM*RESOL(XXXX)
      RETURN
      END
C
C  Low-statistics 2-d fit function
C
      REAL FUNCTION DMINS2(X)
C
      IMPLICIT NONE
      REAL*8 XXXX,P1,P2
      REAL*8 RESOL
      COMMON/DMIN_FITPAR/FITPAR,SUM
      REAL FITPAR(5),SUM
      REAL X
      REAL R2OVPI/0.79788456/
C
C  Inlines
C  Normalized functions used to fit the negative dmin/sig spectrum.
C
      P1(XXXX) = R2OVPI*EXP(-(XXXX/FITPAR(2))**2/2.)/FITPAR(2)
      P2(XXXX) = EXP(-XXXX/FITPAR(3))/FITPAR(3)
      RESOL(XXXX) = (1.-FITPAR(1))*P1(XXXX)+FITPAR(1)*P2(XXXX)
C
      XXXX = X
      DMINS2 = SUM*RESOL(XXXX)
      RETURN
      END
#endif
@


1.3
log
@*** empty log message ***
@
text
@d11 1
d78 1
a78 1
      ID = ICHIS+150+ITYPE
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
      SUBROUTINE FIT_DMIN(ITYPE,NVIEW,OUTPAR,OUTERR,CHISQ)
d3 1
a3 1
C ------------------------------------------------------------------------------
d7 5
a11 3
C  Modified Ian Tomalin 7-7-95 Limits changed for simple fit to
C                              prevent crashing.
C ------------------------------------------------------------------------------
d18 1
a18 1
      INTEGER ITYPE,NVIEW
d23 4
d33 1
a33 3
      INTEGER NFIT
      PARAMETER(NFIT=5)
      REAL STEP(NFIT)
d35 2
a36 2
      REAL FITP(NFIT)
      COMMON/DMIN_FITP/FITP,SUM
d47 1
a47 2
      INTEGER NOENT,IPAR,IERFLG,MFIT,ID
      REAL SUM
d51 1
a51 1
      DATA STEP/2*5.,3*.001/
d53 2
a54 1
      DATA PMAX/2*0.,3*10./
d56 2
a57 2
      DATA PMAXS/0.,2*10.,2*0./
      DATA CHOPT/'R'/
d64 10
a73 5
      LOGICAL SIMPLE
      SIMPLE(ITYP) = (NOENT.LT.10000).OR.ITYP.EQ.7
C ------------------------------------------------------------------------------
C see which version of the code is to be used,
C John's modifications or standard?
d75 1
a75 9
      CALL CODSEL(NEWCOD)
      IF (NEWCOD) THEN
        WRITE (IW(6),*)'FITDMIN: improved QIPBTAG fitting procedure'
        CALL FIT_DMIN96(ITYPE,NVIEW,OUTPAR,OUTERR,CHISQ)
        RETURN
      ENDIF
C  Normalize to the number of entries.  The 4-pi is just the
C  phase space factor for having integrated over angles in 3 dimensions
C  (dmin is essentially a radius).
d77 1
a77 1
      ID = 150+ITYPE
d83 1
a83 1
      SUM = NOENT*.08
d97 9
a105 10
      IF(.NOT.SIMPLE(ITYPE))THEN
        MFIT = NFIT
        DO IPAR=1,2
          FITP(IPAR) = OUTPAR(IPAR)*SUM
        END DO
        DO IPAR=3,5
          FITP(IPAR) = OUTPAR(IPAR)
        END DO
        IF(NVIEW.EQ.2)THEN
          CALL HFITH(ID,DMINF,CHOPT,MFIT,FITP,STEP,PMIN,PMAX,
d108 1
a108 1
          CALL HFITH(ID,DMINF2,CHOPT,MFIT,FITP,STEP,PMIN,PMAX,
d111 9
a119 2
        DO IPAR=1,2
          OUTPAR(IPAR) = FITP(IPAR)/SUM
d121 2
a122 10
        DO IPAR=3,5
          OUTPAR(IPAR) = FITP(IPAR)
        END DO
      ELSE
        MFIT = NFIT-2
        FITP(1) = OUTPAR(1)*SUM
        FITP(2) = OUTPAR(3)
        FITP(3) = OUTPAR(4)
        IF(NVIEW.EQ.2)THEN
          CALL HFITH(ID,DMINS,CHOPT,MFIT,FITP,STEP,PMINS,PMAXS,
d125 1
a125 1
          CALL HFITH(ID,DMINS2,CHOPT,MFIT,FITP,STEP,PMINS,PMAXS,
d128 3
a130 5
        OUTPAR(1) = FITP(1)/SUM
        OUTPAR(2) = 0.0
        OUTPAR(3) = FITP(2)
        OUTPAR(4) = FITP(3)
        OUTPAR(5) = 1.0
d143 2
a144 2
      COMMON/DMIN_FITP/FITP,SUM
      REAL FITP(5),SUM
d150 5
a154 5
      P1(XXXX) = XXXX*EXP(-(XXXX/FITP(3))**2/2.)/FITP(3)**2
      P2(XXXX) = XXXX*EXP(-XXXX/FITP(4))/FITP(4)**2
      P3(XXXX) = XXXX*EXP(-XXXX/FITP(5))/FITP(5)**2
      RESOL(XXXX) = (SUM-FITP(1)-FITP(2))*P1(XXXX)+
     &  FITP(1)*P2(XXXX)+FITP(2)*P3(XXXX)
d157 1
a157 1
      DMINF = RESOL(XXXX)
d168 2
a169 2
      COMMON/DMIN_FITP/FITP,SUM
      REAL FITP(5),SUM
d175 3
a177 3
      P1(XXXX) = XXXX*EXP(-(XXXX/FITP(2))**2/2.)/FITP(2)**2
      P2(XXXX) = XXXX*EXP(-XXXX/FITP(3))/FITP(3)**2
      RESOL(XXXX) = (SUM-FITP(1))*P1(XXXX)+FITP(1)*P2(XXXX)
d180 1
a180 1
      DMINS = RESOL(XXXX)
d191 2
a192 2
      COMMON/DMIN_FITP/FITP,SUM
      REAL FITP(5),SUM
d199 5
a203 5
      P1(XXXX) = R2OVPI*EXP(-(XXXX/FITP(3))**2/2.)/FITP(3)
      P2(XXXX) = EXP(-XXXX/FITP(4))/FITP(4)
      P3(XXXX) = EXP(-XXXX/FITP(5))/FITP(5)
      RESOL(XXXX) = (SUM-FITP(1)-FITP(2))*P1(XXXX)+
     &  FITP(1)*P2(XXXX)+FITP(2)*P3(XXXX)
d206 1
a206 1
      DMINF2 = RESOL(XXXX)
d217 2
a218 2
      COMMON/DMIN_FITP/FITP,SUM
      REAL FITP(5),SUM
d225 3
a227 3
      P1(XXXX) = R2OVPI*EXP(-(XXXX/FITP(2))**2/2.)/FITP(2)
      P2(XXXX) = EXP(-XXXX/FITP(3))/FITP(3)
      RESOL(XXXX) = (SUM-FITP(1))*P1(XXXX)+FITP(1)*P2(XXXX)
d230 1
a230 1
      DMINS2 = RESOL(XXXX)
@


1.1
log
@remove underscore in file names
@
text
@d54 2
d63 9
@
