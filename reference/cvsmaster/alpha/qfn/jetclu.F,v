head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.36;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.37;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE JETCLU(CNAM,PCUT,NJET,JETS,TRKJ )
CKEY   QFNDIP  QIPBTAG / INTERNAL
C ------------------------------------------------------------------------------
C! Jet clustering for QFNDIP and QIPBTAG
C  New version of jet clustering routine;  Use standard (ENFLW) energy
C  flow, jet algorithm (QJMMCL, E=ELEP), ycut (.01).  This will
C  use DJET banks if they exist, otherwise raw ENFLW objects.  Note that
C  a cut is used to define the jets so that THE LIST OF JETS IS NOT
C  COMPLETE.  The jets returned are useful (high momentum) jets for
C  many applicateions.
C  Called from QFNDIP or QIPBTAG
C                                               Dave Brown, 29,1,93
C  Modified 15-9-93 Dave Brown, ycut=0.01, jet vector not normalized.
C
C     INPUT:
C        CNAM     :   Name of output ALPHA jet objects
C        PCUT     :   Minimal Jet momentum
C     OUTPUT:
C        NJET     :   Number of jets found
C                      (momentum ordered, P>cut)
C        JETS     :   3-Momentum of the jets   i=1,njet
C        TRKJ     :   ALPHA track # of jet with number i
C
C    CALLS :
C      CALL SORTZV
C      CALL QJOPTR
C      CALL QJMMCL
C ------------------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
      SAVE
C
C  Global includes
C
#include "qdecl.h"
#include "qcde.h"
#include "maxtrk.h"
C
C  Output parameters
C
      INTEGER NJET,TRKJ(MAXJET)
      REAL JETS(3,MAXJET),JP(MAXJET)
C
C  Local variables
C
      INTEGER MJET,IJET,JTRK,KJET(MAXJET),ISORT(MAXJET)
      REAL PJET(MAXJET),JMOM
C
C  Jet clustering parameters; these are all default now!!!
C
      REAL YCUT,PCUT
      CHARACTER*8 CNAM
      DATA YCUT/0.01/
C
C  Inline functions
C
#include "qmacro.h"
C ------------------------------------------------------------------------------
C  Drop any existing 'tracks' of the requested name
C
      CALL QVDROP(CNAM,KRECO)
C
C  Try to use the DJET objects; if not present, use ENFL objects
C
      IF(KNJET.GT.0)THEN
        CALL QJOPTR('EJ',' ')
      ELSE
        CALL QJOPTR('EF',' ')
      END IF
C
C  Cluster
C
      CALL QJMMCL(MJET,CNAM,KRECO,YCUT,QELEP)
C
C  Get the ALPHA pointers to these new objects
C
      JTRK=KPDIR(CNAM,KRECO)
      DO IJET = 1 , MJET
        PJET(IJET)  = QP(JTRK)
        KJET(IJET) = JTRK
        JTRK = KFOLLO(JTRK)
      ENDDO
C
C  Sort the array of the jet momenta in descending order :
C
      IF(MJET.GT.0)CALL SORTZV ( PJET,ISORT,MJET,1,1,0 )
C
C  Fill array with 3-momenta of the jets : cut on the momentum
C
      NJET = 0
      DO IJET = 1 , MJET
        IF(PJET(ISORT(IJET)).GE.PCUT)THEN
          NJET = NJET + 1
          TRKJ(NJET) = KJET(ISORT(IJET))
          JTRK = TRKJ(IJET)
          JETS(1,NJET) = QX(JTRK)
          JETS(2,NJET) = QY(JTRK)
          JETS(3,NJET) = QZ(JTRK)
        ENDIF
      END DO
C
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
