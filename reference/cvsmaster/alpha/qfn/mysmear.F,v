head	1.1;
access;
symbols
	alpha126_22:1.1
	alpha122_22:1.1
	alpha126_21:1.1
	alpha126_20:1.1
	alpha126_19:1.1
	alpha126_18:1.1
	alpha126_17:1.1
	alpha126_16:1.1
	alpha126_15:1.1
	alpha126_14:1.1
	alpha126_13:1.1
	alpha126_12:1.1
	alpha126_11:1.1
	alpha126_10:1.1
	alpha126_09:1.1
	alpha126_08:1.1
	alpha126_07:1.1
	alpha126_06:1.1
	alpha126_05:1.1
	alpha126_04:1.1
	alpha126_03:1.1
	alpha126_02:1.1
	alpha126_1:1.1
	alpha125_17:1.1
	alpha125_16:1.1
	alpha125_15:1.1
	alpha125_14:1.1
	alpha125_13:1.1
	alpha125_12:1.1
	alpha125_11:1.1
	alpha125_10:1.1
	alpha125_09:1.1
	alpha125_08:1.1
	alpha125_07:1.1
	alpha125_06:1.1
	alpha125_05:1.1
	alpha125_04:1.1
	alpha125_03:1.1
	alpha125_02:1.1
	alpha125_01:1.1
	alpha124_19:1.1
	alpha125:1.1
	alpha124_18:1.1
	alpha124_17:1.1
	alpha124_16:1.1
	alpha124_15:1.1
	alpha124_14:1.1
	alpha124_13:1.1;
locks; strict;
comment	@c @;


1.1
date	99.08.25.09.42.05;	author boucrot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@      SUBROUTINE MYSMEAR(QSMPAR,PROB,ISBIN,IVIEW,DMIN,S_DMIN)
CKEY QIPBTAG / INTERNAL
C---------------------------------------------------------------------
C Auxiliary to QSMEAR (QIPBTAG package)
C  Generate a smearing value for the impact parameter significance,
C  based on a delta function plus exponential fit comparing the
C  negative impact parameter spectrum between data and MC.
C  Uses random number generator.
C  Author:   Dave Brown, 24-3-92
C  Modified: Ian Tomalin 27-4-95
C  Modified: P-F Giraud 17-8-99
C---------------------------------------------------------------------
#ifndef DOC
      INTEGER KSMIR,TTYPE,IVIEW
      REAL DMIN,S_DMIN
      DIMENSION PROB(3), QSMPAR(4, *)
#include "qcde.h"
#include "qmacro.h"
C---------------------------------------------------------------------
C Unpack appropriate row of SMIR/SMI2 bank.
      SIG1  = QSMPAR(1, ISBIN)
      AMP1  = QSMPAR(2, ISBIN)
      SIG2  = QSMPAR(3, ISBIN)
      AMP2  = QSMPAR(4, ISBIN)
      IF (SIG1.LT.SIG2) THEN
        SIGT = SIG1
        AMPT = AMP1
        SIG1 = SIG2
        AMP1 = AMP2
        SIG2 = SIGT
        AMP2 = AMPT
      END IF
C Find smearing parallel to impact parameter vector.
      DELX = 0.0
      RANX = 2.0*PROB(2) - 1.0
      IF (PROB(1).LT.AMP1) THEN
        DELX = SIG1*SIGN(LOG(MAX(ABS(RANX),1.0E-30)),RANX)
      ELSE IF (PROB(1).LT.AMP1 + AMP2) THEN
        DELX = SIG2*SIGN(LOG(MAX(ABS(RANX),1.0E-30)),RANX)
      END IF
C For 3D tracks, also find smearing perpendicular to impact parameter.
      DELY = 0.0
      RANY = 2.0*PROB(3) - 1.0
      IF (IVIEW.EQ.3) THEN
        IF (PROB(1).LT.AMP1) THEN
          DELY = SIG1*SIGN(LOG(MAX(ABS(RANY),1.0E-30)),RANY)
        ELSE IF (PROB(1).LT.AMP1 + AMP2) THEN
          DELY = SIG2*SIGN(LOG(MAX(ABS(RANY),1.0E-30)),RANY)
        END IF
      END IF
C Smear impact parameter.
      XNEW = DMIN + S_DMIN*DELX
      YNEW =        S_DMIN*DELY
      DMIN = SIGN(SQRT(XNEW**2 + YNEW**2),XNEW)
  999 CONTINUE
      END
#endif
@
