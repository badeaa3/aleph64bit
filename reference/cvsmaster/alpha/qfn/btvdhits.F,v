head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.35;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.36;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE BTVDHITS(HITPAT)
CKEY   QIPBTAG / INTERNAL
C ------------------------------------------------------------------------------
C!  Simple subroutine to count the number of VDET hits by layer and view.
C  Called from TRSEL or QFNDV0
C  Input: none
C          calls VDHITS if POT or DST as input file .
C          else take information from bank DTRA
C
C  Output: HITPAT, an integer array numbered by FRFT track number,
C          of which only the first 8 bits are used, as described below
C          bits:          meaning
C          0-1            number of inner layer U hits on track (0,1,or2)
C          2-3            number of outer layer U hits on track     "
C          4-5            number of inner layer W hits on track     "
C          6-7            number of outer layer W hits on track     "
C          This array must have size at least as large as the number of
C          entries in FRFT; NO CHECK CAN BE MADE HERE, if this isn't
C          the case, the code will bomb.
C
C  created : 24-4-92 M.Frank : READ DTRA bank on mini-dst !
C  Modified  21-10-93 D. Brown, look at mini version to
C                                          decide which word to use
C ------------------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
C
C  Global includes
C
#include "qdecl.h"
#include "qcde.h"
#include "maxtrk.h"
C
C  Output; hit pattern array
C
      INTEGER HITPAT(*)
C
C  Functions
C
      INTEGER NAMIND,MINGTV
C
C  Local variables
C
      INTEGER NDTRA,IDTRA
      INTEGER NTRK,ITRK
      INTEGER MVER,JVI,DUM
      LOGICAL FIRST
      DATA FIRST/.TRUE./
#include "qmacro.h"
C ------------------------------------------------------------------------------
C  Initialize the name indices the first time through
C
      IF ( FIRST ) THEN
        FIRST = .FALSE.
        NDTRA = NAMIND('DTRA')
        IF(XMINI)THEN
          MVER = MINGTV(DUM)
          WRITE (IW(6),*)'QIPBTAG- VDET hits from mini version ',MVER
        END IF
      END IF
C--   mini-dst : bank DTRA
      IF ( XMINI ) THEN
c
c  VDET pattern word position changes as a function of version!!!
c
        MVER = MINGTV(DUM)
        IF (MVER.GE.70) JVI = 34
        IF (MVER.GE.90) JVI = 27
C
C     Loop over the hits
C
        IDTRA=IW(NDTRA)
        NTRK = LROWS(IDTRA)
        DO 500 ITRK = 1 , NTRK
          IF (ITRK.GT.MAXTRK) GO TO 500
          HITPAT(ITRK)=IAND(ITABL(IDTRA,ITRK,JVI),255)
  500   CONTINUE
        RETURN
      ELSE
        CALL VDHITS(HITPAT,MAXTRK)
      END IF
      RETURN
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
