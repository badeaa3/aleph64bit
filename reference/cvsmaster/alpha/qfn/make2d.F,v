head	1.2;
access;
symbols
	alpha126_22:1.2
	alpha126_21:1.2
	alpha126_20:1.2
	alpha126_19:1.2
	alpha126_18:1.2
	alpha126_17:1.2
	alpha126_16:1.2
	alpha126_15:1.2
	alpha126_14:1.2
	alpha126_13:1.2
	alpha126_12:1.2
	alpha126_11:1.2
	alpha126_10:1.2
	alpha126_09:1.2
	alpha126_08:1.2
	alpha126_07:1.2
	alpha126_06:1.2
	alpha126_05:1.2
	alpha126_04:1.2
	alpha126_03:1.2
	alpha126_02:1.2
	alpha126_1:1.2
	alpha125_17:1.2
	alpha125_16:1.2
	alpha125_15:1.2
	alpha125_14:1.2
	alpha125_13:1.2
	alpha125_12:1.2
	alpha125_11:1.2
	alpha125_10:1.2
	alpha125_09:1.2
	alpha125_08:1.2
	alpha125_07:1.2
	alpha125_06:1.2
	alpha125_05:1.2
	alpha125_04:1.2
	alpha125_03:1.2
	alpha125_02:1.2
	alpha125_01:1.2
	alpha124_19:1.2
	alpha125:1.2
	alpha124_18:1.2
	alpha124_17:1.2
	alpha124_16:1.2
	alpha124_15:1.2
	alpha124_14:1.2
	alpha124_13:1.2
	alpha124_12:1.2
	alpha124_11:1.2
	alpha124_10:1.2
	alpha124_09:1.2
	alpha124_08:1.2
	alpha124_07:1.2
	alpha124_7:1.2
	alpha124_06:1.2
	alpha124_05:1.2
	alpha124_04:1.2
	alpha124_03:1.2
	alpha124_02:1.2
	alpha124_01:1.2
	alpha124:1.2
	alpha123_12:1.2
	alpha123_11:1.2
	alpha123_10:1.2
	alpha123_9:1.2
	alpha123_8:1.2
	alpha123_7:1.2
	alpha123_6:1.2
	alpha123_5:1.2
	alpha123_4:1.2
	alpha123_3:1.2
	alpha123_2:1.2
	alpha123:1.2
	alpha122_48:1.2
	alpha122_47:1.2
	alpha122_46:1.2
	alpha122_45:1.2
	alpha122_44:1.2
	alpha122_43:1.2
	alpha122_42:1.2
	alpha122_41:1.2
	alpha122_40:1.2
	alpha122_39:1.2
	alpha122_38:1.2
	alpha122_37:1.2
	alpha122_36:1.2
	alpha122_35:1.2
	alpha122_34:1.2
	alpha122_33:1.2
	alpha122_32:1.2
	alpha122_31:1.2
	alpha122_30:1.2
	alpha122_29:1.2
	alpha122_28:1.2
	alpha122_27:1.2
	alpha122_26:1.2
	alpha122_25:1.2
	alpha122_24:1.2
	alpha122_23:1.2
	alpha122_22:1.2
	alpha122_21:1.2
	alpha122_20:1.2
	alpha122_19:1.2
	alpha122_18:1.2
	alpha122_17:1.2
	alpha122_16:1.2
	alpha122_15:1.2
	alpha122_14:1.2
	alpha122_13:1.2
	alpha122_12:1.2
	alpha122_11:1.2
	alpha122_10:1.2
	alpha122_9:1.2
	alpha122_8:1.2
	alpha122_6:1.2
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.2
date	96.06.27.15.15.02;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.03.14.12.42.36;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.37;	author flr;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove underscore in file names
@
text
@      SUBROUTINE MAKE2D(IFRFT,TPAR,TERR,TFLAG,JETS,PHIP,PERP,
     &     JDIST,DMIN,S_DMIN)
CKEY   QIPBTAG / INTERNAL
C -----------------------------------------------------------------------------
C
C! Convert a 3-d track into a 2-d
C   Author  Dave Brown, 11-12-93
C
C   Called from TRSEL2
C -----------------------------------------------------------------------------
#ifndef DOC
      IMPLICIT NONE
C
C  In/out variables
C
      INTEGER IFRFT,TFLAG
      REAL JETS(3),PHIP,TPAR(5),TERR(4,4)
      REAL PERP(3)
      REAL JDIST,LDIST,DMIN,S_DMIN
C
C  Local variables
C
      INTEGER ICOR,NUSED(2),IVIEW,ITYPE,IPAT
      REAL IP(3),SIG2_IP(3,3)
      REAL NORM,J1(3),JETSIG2,JPERP(3)
      REAL MPHI,SDIST,S_LDIST
      REAL TWOPI/6.28318531/,PI/3.14159265/,HALFPI/1.57079633/
      REAL PHICUT/1.0/
C
C  Inline functions
C
#include "btaginl.h"
C -----------------------------------------------------------------------------
C
C  Get the IP without this track
C
      CALL IPTRK(1,IFRFT,IP,SIG2_IP,NUSED)
C
C  Normalize the jet axis for this jet, and get the jet direction error
C
      NORM = 0.0
      DO ICOR=1,3
        NORM = NORM + JETS(ICOR)**2
      END DO
      NORM = SQRT(NORM)
      DO ICOR=1,3
        J1(ICOR) = JETS(ICOR)/NORM
      END DO
      CALL JETERR(1,JETS,JETSIG2)
C
C  Choose which view based on the direction
C  of the closest approach to the jet
C
      MPHI = ABS(PHIP)
      IF(MPHI.GT.HALFPI)MPHI=PI-MPHI
      IF(MPHI.LE.PHICUT)THEN
C
C  The distance to the jet axis points mostly in the r-z direction;
C  assume there's a pattern recognition error there and take the track
C  only in the r-phi view
C
        IVIEW=1
      ELSE
C
C  Same thing, only take the r-z view
C
        IVIEW=2
      END IF
      CALL DMIN2D(IVIEW,TPAR,IP,J1,JDIST,DMIN,SDIST,PERP)
C
C  Reset the track flag
C
      ITYPE = TTYPE(TFLAG)
      IPAT = TVDPAT(TFLAG)
      IF(ITYPE.EQ.2)THEN
        ITYPE = 4
      ELSE
        IF(IVIEW.EQ.1)THEN
          ITYPE = 5
        ELSE
          ITYPE = 6
        END IF
      END IF
      TFLAG = TPACK(ITYPE,IVIEW,IPAT)
C
C  Copy the perpendicular vector to the jet perpendicular direction
C
      DO ICOR=1,3
        JPERP(ICOR) = PERP(ICOR)
      END DO
C
C  Get the error on the impact parameter
C
      CALL DMINERR(TPAR,TERR,PERP,JPERP,JETSIG2,JDIST,
     &     SDIST,SIG2_IP,S_DMIN,S_LDIST,PHIP)
      RETURN
      END
#endif
@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
#include "btag_inl.h"
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
