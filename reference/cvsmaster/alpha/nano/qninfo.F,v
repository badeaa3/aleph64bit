head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.50;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.51;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QNINFO
CKEY NANO IN ALPHA /USER
C----------------------------------------------------------------------
C!  - Print NanoDST production parameters
C!
C!   Author   :- Yves A. Maumary       11-DEC-1991
C!   Modified :- Yves A. Maumary       29-JAN-1993  Exit if no NDST bank
C!                                                  read yet
C!   Modified :- Gerrit Graefe         13-APR-1994  implemented new banks
C!   Modified :- Gerrit Graefe         05-MAY-1994  put into ALPHA
C!   Modified :- Gerrit Graefe         27-FEB-1995  added new NDCL NDOB bank
C!
C!======================================================================
#ifndef DOC
#include "qcde.h"
#include "qncde.h"
#include "qmacro.h"
#include "qnmacr.h"
C-----------------------------------------------------------------------
      IF(NCPROD.EQ.'    ')THEN
        WRITE(KUPRNT,1000)
 1000   FORMAT(/,' >>>>>>>>>>>>>>>> WARNING <<<<<<<<<<<<<<<<',/,
     &    ' Bank NDST not found >>> no INFO available',/)
        RETURN
      ENDIF
C
      WRITE(KUPRNT,1001)
 1001 FORMAT(/,' >>> INFO  on current run / NanoDST input file <<<',/)
C
      CALL PRRHAH
C
      WRITE(KUPRNT,1201) NCLPOT,NCLRUN
      WRITE(KUPRNT,1202) INDEX(NCLNDS,'NDBM').NE.0,
     &                   INDEX(NCLNDS,'NDCL').NE.0,
     &                   INDEX(NCLNDS,'NDDE').NE.0,
     &                   INDEX(NCLNDS,'NDEJ').NE.0,
     &                   INDEX(NCLNDS,'NDGC').NE.0,
     &                   INDEX(NCLNDS,'NBIP').NE.0,
     &                   INDEX(NCLNDS,'NDJT').NE.0,
     &                   INDEX(NCLNDS,'NDMS').NE.0,
     &                   INDEX(NCLNDS,'NDNT').NE.0,
     &                   INDEX(NCLNDS,'NDOB').NE.0,
     &                   INDEX(NCLNDS,'NDPH').NE.0,
     &                   INDEX(NCLNDS,'NDTK').NE.0,
     &                   INDEX(NCLNDS,'NDLV').NE.0,
     &                   INDEX(NCLNDS,'NDV0').NE.0
 1201 FORMAT(' List of event banks: ',A,/,
     &       ' List of run banks: RUNHRUNRRHAH',A,/)
 1202 FORMAT(L2,' NDBM lepton candidates among trks (LEPTAG)',/,
     &       L2,' NDCL lepton candidates among trks (QSELEP)',/,
     &       L2,' NDDE dE/dx for charged tracks',/,
     &       L2,' NDEJ EFLOW jets',/,
     &       L2,' NDGC gamma conversion candidates',/,
     &       L2,' NBIP QIPBTAG track probabilities',/,
     &       L2,' NDJT jets',/,
     &       L2,' NDMS Monte-Carlo stable particles',/,
     &       L2,' NDNT Monte-Carlo unstable particles',/,
     &       L2,' NDOB EFLOW objects',/,
     &       L2,' NDPH photons',/,
     &       L2,' NDTK charged tracks',/,
     &       L2,' NDLV Monte-Carlo truth V0  vertices',/,
     &       L2,' NDV0 V0 candidates among charged trks',/)
      WRITE(KUPRNT,1301) ECHMIN,MINTRK,PCUTMI,PCUTMA,THCCUT,NITCUT,
     &                   NTPCUT,BD0CUT,BZ0CUT
      WRITE(KUPRNT,1302) PCUMIJ,PCUMAJ,THCCUJ,NITCUJ,NTPCUJ,
     &                   BD0CUJ,BZ0CUJ
      WRITE(KUPRNT,1303) BMYCUT,ENEVIS,RECOOP
C     WRITE(KUPRNT,1304) PHOCUT
      WRITE(KUPRNT,1305) V0CHSI,V0CHBO
 1301 FORMAT(' NanoDST parameters:',/,
     &  ' ECHMIN: MINimum CHarged Energy                              ',
     &  G15.5,/,
     &  ' For the charged tracks bank NDTK:',/,
     &  ' MINTRK: MINimum number of charged TRacKs                    ',
     &  I3,/,
     &  ' PCUTMI: lower momentum CUT for charged tracks               ',
     &  G15.5,/,
     &  ' PCUTMA: upper momentum CUT for charged tracks               ',
     &  G15.5,/,
     &  ' THCCUT: Cosine THeta CUT for charged tracks                 ',
     &  G15.5,/,
     &  ' NITCUT: minimum Number of ITC coordinates for charged Tracks',
     &  I3,/,
     &  ' NTPCUT: minimum Number of TPC coordinates for charged Tracks',
     &  I3,/,
     &  ' BD0CUT: upper D0 CUT for charged tracks                     ',
     &  G15.5,/,
     &  ' BZ0CUT: upper Z0 CUT for charged tracks                     ',
     &  G15.5,/)
 1302 FORMAT(' For the jets bank NDJT:',/,
     &  ' PCUMIJ: lower momentum CUT for charged tracks               ',
     &  G15.5,/,
     &  ' PCUMAJ: upper momentum CUT for charged tracks               ',
     &  G15.5,/,
     &  ' THCCUJ: Cosine THeta CUT for charged tracks                 ',
     &  G15.5,/,
     &  ' NITCUJ: minimum Number of ITC coordinates for charged Tracks',
     &  I3,/,
     &  ' NTPCUJ: minimum Number of TPC coordinates for charged Tracks',
     &  I3,/,
     &  ' BD0CUJ: upper D0 CUT for charged tracks                     ',
     &  G15.5,/,
     &  ' BZ0CUJ: upper Z0 CUT for charged tracks                     ',
     &  G15.5,/)
 1303 FORMAT(' For the jet algorithm:',/,
     &  ' BMYCUT: mass cut for jet algorithm QJMMCL                   ',
     &  G15.5,/,
     &  ' ENEVIS: VISible ENErgy for jet algorithm QJMMCL             ',
     &  G15.5,/,
     &  ' RECOOP: REConstructed Objects OPtion                        ',
     &  A2,/)
C1304 FORMAT(' For the photons bank NDPH:',/,
C    &  ' PHOCUT: lower energy CUT for PHOtons                        ',
C    &  G15.5,/)
C
 1305 FORMAT(' For the V0 bank NDV0:',/,
     &  ' V0CHSI: minimum CHi square increase of SIngle track from V0 ',
     &  /,
     &  '         fitting back to the main vertex.                    ',
     &  G15.5,/,
     &  ' V0CHBO: minimum CHi square increase of BOth tracks from V0  ',
     &  /,
     &  '         fitting back to the main vertex.                    ',
     &  G15.5,/)
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
