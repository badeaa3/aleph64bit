head	1.7;
access;
symbols
	alpha126_22:1.7
	alpha126_21:1.7
	alpha126_20:1.7
	alpha126_19:1.7
	alpha126_18:1.7
	alpha126_17:1.7
	alpha126_16:1.7
	alpha126_15:1.7
	alpha126_14:1.7
	alpha126_13:1.7
	alpha126_12:1.7
	alpha126_11:1.7
	alpha126_10:1.7
	alpha126_09:1.7
	alpha126_08:1.7
	alpha126_07:1.7
	alpha126_06:1.7
	alpha126_05:1.7
	alpha126_04:1.7
	alpha126_03:1.7
	alpha126_02:1.7
	alpha126_1:1.7
	alpha125_17:1.7
	alpha125_16:1.7
	alpha125_15:1.7
	alpha125_14:1.7
	alpha125_13:1.7
	alpha125_12:1.7
	alpha125_11:1.7
	alpha125_10:1.7
	alpha125_09:1.7
	alpha125_08:1.7
	alpha125_07:1.7
	alpha125_06:1.7
	alpha125_05:1.7
	alpha125_04:1.7
	alpha125_03:1.7
	alpha125_02:1.7
	alpha125_01:1.7
	alpha124_19:1.7
	alpha125:1.7
	alpha124_18:1.5
	alpha124_17:1.5
	alpha124_16:1.5
	alpha124_15:1.5
	alpha124_14:1.5
	alpha124_13:1.5
	alpha124_12:1.4
	alpha124_11:1.4
	alpha124_10:1.4
	alpha124_09:1.4
	alpha124_08:1.4
	alpha124_07:1.4
	alpha124_7:1.4
	alpha124_06:1.4
	alpha124_05:1.3
	alpha124_04:1.3
	alpha124_03:1.3
	alpha124_02:1.3
	alpha124_01:1.3
	alpha124:1.3
	alpha123_12:1.3
	alpha123_11:1.3
	alpha123_10:1.3
	alpha123_9:1.3
	alpha123_8:1.3
	alpha123_7:1.3
	alpha123_6:1.3
	alpha123_5:1.3
	alpha123_4:1.3
	alpha123_3:1.3
	alpha123_2:1.3
	alpha123:1.3
	alpha122_48:1.2
	alpha122_47:1.2
	alpha122_46:1.2
	alpha122_45:1.2
	alpha122_44:1.2
	alpha122_43:1.2
	alpha122_42:1.2
	alpha122_41:1.2
	alpha122_40:1.2
	alpha122_39:1.2
	alpha122_38:1.2
	alpha122_37:1.2
	alpha122_36:1.2
	alpha122_35:1.2
	alpha122_34:1.2
	alpha122_33:1.2
	alpha122_32:1.2
	alpha122_31:1.2
	alpha122_30:1.2
	alpha122_29:1.2
	alpha122_28:1.2
	alpha122_27:1.2
	alpha122_26:1.2
	alpha122_25:1.2
	alpha122_24:1.2
	alpha122_23:1.2
	alpha122_22:1.2
	alpha122_21:1.2
	alpha122_20:1.2
	alpha122_19:1.2
	alpha122_18:1.2
	alpha122_17:1.2
	alpha122_16:1.2
	alpha122_15:1.2
	alpha122_14:1.2
	alpha122_13:1.2
	alpha122_12:1.2
	alpha122_11:1.2
	alpha122_10:1.2
	alpha122_9:1.2
	alpha122_8:1.2
	alpha122_6:1.2
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.7
date	99.12.08.10.32.12;	author flr;	state Exp;
branches;
next	1.6;

1.6
date	99.12.08.09.02.26;	author flr;	state Exp;
branches;
next	1.5;

1.5
date	99.08.25.09.39.49;	author boucrot;	state Exp;
branches;
next	1.4;

1.4
date	99.04.28.08.13.53;	author boucrot;	state Exp;
branches;
next	1.3;

1.3
date	98.10.01.15.04.41;	author boucrot;	state Exp;
branches;
next	1.2;

1.2
date	96.06.27.15.14.37;	author flr;	state Exp;
branches;
next	1.1;

1.1
date	96.03.14.12.42.47;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.48;	author flr;	state Exp;
branches;
next	;


desc
@@


1.7
log
@alpha125 - fortran bug in mdipbt
@
text
@      SUBROUTINE MDIPBT
CKEY NANO in ALPHA / INTERNAL
C----------------------------------------------------------------------
C!  - Impact parameter Btag calculation for the MINI (QIPBTAG, D.Brown)
C!
C!   Author   :- Yves A. Maumary (for the NANO )    28-SEP-1992
C!   Modified :- Dave Brown + Gerrit Graefe
C!               02-SEP-1994  fill variables in /NCOMIP/ for MINI/NANO
C!               1998-1999 : remove BTAG_PAR, fix Y2K bug   J. Boucrot
C!               Nov-99: use VDET setup directly            FLR
C!======================================================================
#ifndef DOC
      SAVE FIRST,IYEAR,NASIM,NRUNH,NERR
#include "qdecl.h"
#include "qcde.h"
#include "ncomip.h"
      INTEGER NAMIND
      INTEGER MXTRK,MXJET
      PARAMETER ( MXTRK = 400 , MXJET = 20 )
      INTEGER INJET(MXJET)
      REAL    PROBH(2),PROBJ(MXJET),PROBT(MXTRK)
      CHARACTER*50 MSG
      INTEGER IBIGJ,IJET,IAXIS
      REAL    BIGE,COSA
      INTEGER GTSTUP, VDSTUP
      SAVE VDSTUP
      INTEGER NERR
      DATA NERR/0/
      LOGICAL FIRST
      DATA FIRST/.TRUE./
      INTEGER ITRK,TNUM,IWORD,ISIG
      REAL    BIPTAG,SIG
#include "maxtrk.h"
#include "btagraw.h"
#include "btaginl.h"
#include "qmacro.h"
C-----------------------------------------------------------------------
C
C!.TEST DATA TAKING PERIOD: VDET AVAILABLE ONLY SINCE 1991
      IF(FIRST)THEN
        FIRST = .FALSE.
        CALL ABRUEV(IRUN,IEVT)
        VDSTUP = GTSTUP('VD',IRUN)
        IF(VDSTUP.LT.3) CALL QWMESS
     &    ('0###### No VDet for this period: QIPBTAG will NOT be run')
C
      ENDIF
C
      IF(VDSTUP.LT.3) RETURN
C
      CALL QIPBTAG(IBTRET,NBTTRK,NBTJET,INJET,INTRK,PROBT,PROBJ,PROBH,
     &             BIPTAG)
      IF(IBTRET.GT.0)THEN
        NERR = NERR + 1
        IF(NERR.LE.10 .OR. (KNEVT.GE.KDEBU1.AND.KNEVT.LE.KDEBU2))THEN
          MSG = '+++ MDIPBT +++ Event not useful for QIPBTAG. rc=##'
          WRITE(MSG(49:50),'(I2)') IBTRET
          CALL QWMESE(MSG)
        ENDIF
        CALL HF1(2,61.5,1.)
        RETURN
      ELSEIF(IBTRET.LT.0)THEN
        MSG = '### MDIPBT ### Error in QIPBTAG. rc=##'
        WRITE(MSG(37:38),'(I2)') IBTRET
        CALL QWMESE(MSG)
        CALL HF1(3,25.5,1.)
        RETURN
      ENDIF
C
C!..Pack the track words; save dmin/sig (signed), plus a track flag
C!..including the track,jet,hemisphere, and track type
C
      DO ITRK=1,NBTTRK
        IF(TTYPE(TFLAG(ITRK)).EQ.3)THEN
C
C!..V0 track #s are *10000
C
          TNUM = INTRK(ITRK)/10000
        ELSE
          TNUM = INTRK(ITRK)
        END IF
        IWORD = TNUM                 ! first 8 bits; track #
     &        +ISHFT(TFLAG(ITRK),8)  ! next 14; qipbtag track flag
     &        +ISHFT(JJET(ITRK),22)  ! next 4 bits; jet assignment
     &        +ISHFT(JHEMI(ITRK),26) ! next 2 bits; hemisphere assignment
        INIPAR(ITRK,1) = IWORD
C
C!..Store the significance, integerized in units of 10**6
C
        SIG = DMIN(ITRK)/S_DMIN(ITRK)
        ISIG = NINT(SIG*1.0E6)
        INIPAR(ITRK,2) = ISIG
      END DO
C
C!..Done
C
      END
#endif
@


1.6
log
@alpha125 - Y2K compliant
@
text
@a12 1
      IMPLICIT NONE
@


1.5
log
@*** empty log message ***
@
text
@d10 1
d26 2
a27 1
      INTEGER IYEAR,NASIM,JASIM,NRUNH,JRUNH
a35 2
#include "asimjj.h"
#include "runhjj.h"
d43 3
a45 22
        IYEAR = 0
C!..MONTE CARLO
        IF(XMCEV)THEN
          NASIM = NAMIND('ASIM')
          JASIM = IW(NASIM)
          IF(JASIM.GT.0)THEN
            IYEAR = ITABL(JASIM,1,JASIYM)/100
          ELSE
            NRUNH = NAMIND('RUNH')
            JRUNH = IW(NRUNH)
            IF(JRUNH.GT.0) IYEAR = IW(JRUNH+JRUNSD)/10000
          ENDIF
          IF (IYEAR.LT.10) IYEAR=99  
        ELSE
C!..DATA
          IYEAR = 89
          IF(KRUN.GE. 5910) IYEAR = 90
          IF(KRUN.GE. 9115) IYEAR = 91
          IF(KRUN.GE.13494) IYEAR = 92
          IF(KRUN.GE.17999) IYEAR = 93
        ENDIF
        IF(IYEAR.LT.91) CALL QWMESS
d50 1
a50 1
      IF(IYEAR.LT.91) RETURN
@


1.4
log
@*** empty log message ***
@
text
@d9 1
d55 1
@


1.3
log
@*** empty log message ***
@
text
@a64 1
        call BTAG_PAR
@


1.2
log
@remove underscore in file names
@
text
@d74 1
a74 1
        IF(NERR.LE.10.OR.KDEBUG.GT.0)THEN
@


1.1
log
@Initial revision
@
text
@d35 1
a35 1
#include "btag_inl.h"
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
