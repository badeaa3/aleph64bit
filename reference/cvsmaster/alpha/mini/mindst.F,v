head	1.1;
access;
symbols
	alpha126_22:1.1
	alpha122_22:1.1
	alpha126_21:1.1
	alpha126_20:1.1
	alpha126_19:1.1
	alpha126_18:1.1
	alpha126_17:1.1
	alpha126_16:1.1
	alpha126_15:1.1
	alpha126_14:1.1
	alpha126_13:1.1
	alpha126_12:1.1
	alpha126_11:1.1
	alpha126_10:1.1
	alpha126_09:1.1
	alpha126_08:1.1
	alpha126_07:1.1
	alpha126_06:1.1
	alpha126_05:1.1
	alpha126_04:1.1
	alpha126_03:1.1
	alpha126_02:1.1
	alpha126_1:1.1
	alpha125_17:1.1
	alpha125_16:1.1
	alpha125_15:1.1
	alpha125_14:1.1
	alpha125_13:1.1
	alpha125_12:1.1
	alpha125_11:1.1
	alpha125_10:1.1
	alpha125_09:1.1
	alpha125_08:1.1
	alpha125_07:1.1
	alpha125_06:1.1
	alpha125_05:1.1
	alpha125_04:1.1
	alpha125_03:1.1
	alpha125_02:1.1
	alpha125_01:1.1
	alpha124_19:1.1
	alpha125:1.1
	alpha124_18:1.1
	alpha124_17:1.1
	alpha124_16:1.1
	alpha124_15:1.1
	alpha124_14:1.1
	alpha124_13:1.1
	alpha124_12:1.1
	alpha124_11:1.1
	alpha124_10:1.1
	alpha124_09:1.1
	alpha124_08:1.1
	alpha124_07:1.1
	alpha124_7:1.1
	alpha124_06:1.1
	alpha124_05:1.1
	alpha124_04:1.1
	alpha124_03:1.1
	alpha124_02:1.1
	alpha124_01:1.1;
locks; strict;
comment	@c @;


1.1
date	99.03.22.14.06.53;	author boucrot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@      SUBROUTINE MINDST(ELIST,RLIST)
C
CKEY MDST /USER
C-----------------------------------------------------------------------
C! Steering routine to create Mini-DST banks not already on POT.
C
C     Author: Stephen Haywood      22-Jan-90
C     Modify: Stephen Haywood      06-Jan-93 ! Break up into parts
C
C     Input  : POT banks
C     Output : MDST banks
C              ELIST = event bank-list (character*800)
C              RLIST = run   bank-list (character*800)
C
C     A list of banks which are formed for the event are stored in the
C     string MLISTE in / MINCOM /.
C     The event and run lists are also passed as local variables.
C-----------------------------------------------------------------------
#ifndef DOC
C
#include "bcs.h"
#include "mincom.h"
      CHARACTER*800 ELIST,RLIST,WLIST
      CHARACTER*4 NAME
      LOGICAL FIRST,CLASS
      DIMENSION CLASS(32)
      SAVE FIRST,NWANT,WLIST
      DATA FIRST / .TRUE. /
C
#include "bmacro.h"
C-----------------------------------------------------------------------
C++   Initialisation.
C
      IF(FIRST) THEN
         CALL MININI(NWANT,WLIST)
         FIRST = .FALSE.
      ENDIF
C
C++  Preparation for this event.
C
      CALL MINPRE(WLIST, CLASS,IMINI,KEEP)
C
C++   If we are reading Mini with wish-list, may want to include all
C++   MC banks.
C
      IF (IMINI.EQ.1) GOTO 1000
C
C++   If we are reading Mini without wish-list, E-list is copied in its
C++   entirety - nothing further to do, unless user wishes to add banks.
C
      IF (IMINI.EQ.2) GOTO 2000
C
C++   If event is not destined to be kept, user may still wish to add
C++   his own banks.
C
      IF (KEEP.EQ.0) GOTO 2000
C
C++   Build Mini banks for data.
C
      CALL MINBLD(NWANT,WLIST,KEEP,CLASS)
C
C++   If MC data, then add MC banks, unless NOMC card is used.
C++   The nature of the data is determined in MINRUN.
C
 1000 CONTINUE
      IF(MINIMC) CALL MINBLM
C
C++   Add requested banks to Mini.
C
 2000 CONTINUE
      CALL MINADD
C
C++   Finally, all banks are copied to the local lists.
C
      ELIST = MLISTE
      RLIST = MLISTR
C
      RETURN
      END
#endif
@
