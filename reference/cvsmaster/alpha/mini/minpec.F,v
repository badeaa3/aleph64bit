head	1.2;
access;
symbols
	alpha126_22:1.2
	alpha122_22:1.2
	alpha126_21:1.2
	alpha126_20:1.2
	alpha126_19:1.2
	alpha126_18:1.2
	alpha126_17:1.2
	alpha126_16:1.2
	alpha126_15:1.2
	alpha126_14:1.2
	alpha126_13:1.2
	alpha126_12:1.2
	alpha126_11:1.2
	alpha126_10:1.2
	alpha126_09:1.2
	alpha126_08:1.2
	alpha126_07:1.2
	alpha126_06:1.2
	alpha126_05:1.2
	alpha126_04:1.2
	alpha126_03:1.2
	alpha126_02:1.2
	alpha126_1:1.2
	alpha125_17:1.2
	alpha125_16:1.2
	alpha125_15:1.2
	alpha125_14:1.2
	alpha125_13:1.2
	alpha125_12:1.2
	alpha125_11:1.2
	alpha125_10:1.1
	alpha125_09:1.1
	alpha125_08:1.1
	alpha125_07:1.1
	alpha125_06:1.1
	alpha125_05:1.1
	alpha125_04:1.1
	alpha125_03:1.1
	alpha125_02:1.1
	alpha125_01:1.1
	alpha124_19:1.1
	alpha125:1.1
	alpha124_18:1.1
	alpha124_17:1.1
	alpha124_16:1.1
	alpha124_15:1.1
	alpha124_14:1.1
	alpha124_13:1.1
	alpha124_12:1.1
	alpha124_11:1.1
	alpha124_10:1.1
	alpha124_09:1.1
	alpha124_08:1.1
	alpha124_07:1.1
	alpha124_7:1.1
	alpha124_06:1.1
	alpha124_05:1.1
	alpha124_04:1.1
	alpha124_03:1.1
	alpha124_02:1.1
	alpha124_01:1.1;
locks; strict;
comment	@c @;


1.2
date	2000.10.17.13.01.02;	author boucrot;	state Exp;
branches;
next	1.1;

1.1
date	99.03.22.14.07.15;	author boucrot;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@      SUBROUTINE MINPEC
C
CKEY MDST /USER
C-----------------------------------------------------------------------
C! Fill PECO bank from DECO.
C
C     Author: Stephen Haywood      03-Apr-90
C-----------------------------------------------------------------------
#ifndef DOC
C
#include "bcs.h"
#include "decojj.h"
#include "dcrljj.h"
#include "pecojj.h"
#include "minfac.h"
#include "bmacro.h"
C-----------------------------------------------------------------------
      IF (IW(NAMIND('PECO')).GT.0) RETURN
C
C++   Determine the bank number (not from DECO/100).
C
      KDECO = IW(NAMIND('DECO'))
      NR = IW(KDECO-2)
C
C++   Pick up links.
C
      KDECO = NLINK('DECO',100)
      IF (KDECO.LE.0) THEN
         CALL MINUPD('DECO')
         KDECO = NLINK('DECO',100)
         IF (KDECO.LE.0) RETURN
      ENDIF
C
C++   Create PECO bank.
C
      NPECO = LROWS(KDECO)
      IF(NPECO.LE.0) RETURN
      LEN = LMHLEN + LPECOA * NPECO
      CALL AUBOS('PECO',NR,LEN, KPECO,IGARB)
      CALL BLIST(IW,'S+','PECO')
      IF(IGARB.GE.2) THEN
         RETURN
      ELSE IF(IGARB.NE.0) THEN
         KDECO = NLINK('DECO',100)
      ENDIF
      IW(KPECO+LMHCOL) = LPECOA
      IW(KPECO+LMHROW) = NPECO
C
C++   Fill PECO bank.
C
      DO 100 I=1,NPECO
         RW(KROW(KPECO,I)+JPECEC) = FLOAT(ITABL(KDECO,I,JDECE0))/EFACTM
         RW(KROW(KPECO,I)+JPECTH) = FLOAT(ITABL(KDECO,I,JDECTH))/AFACTM
         RW(KROW(KPECO,I)+JPECPH) = FLOAT(ITABL(KDECO,I,JDECPH))/AFACTM
         RW(KROW(KPECO,I)+JPECE1) = FLOAT(ITABL(KDECO,I,JDECEF+0))/1000.
         RW(KROW(KPECO,I)+JPECE2) = FLOAT(ITABL(KDECO,I,JDECEF+1))/1000.
         IW(KROW(KPECO,I)+JPECCC) = ITABL(KDECO,I,JDECCC)
  100 CONTINUE
C
C++   Now fill relational bits from DCRL.
C
      KDCRL = NLINK('DCRL',0)
      IF(KDCRL.LE.0) RETURN
      NDCRL = LROWS(KDCRL)
      IF(NDCRL.LE.0) RETURN
C
      DO 200 I=1,NDCRL
         IDECO = ITABL(KDCRL,I,JDCRDE)
         IF(IDECO.LE.0) GOTO 200
         IRBIT = ITABL(KPECO,IDECO,JPECRB)
         IF(ITABL(KDCRL,I,JDCRDT).GT.0) CALL SBIT1(IRBIT,1)
         IF(ITABL(KDCRL,I,JDCRDH).GT.0) CALL SBIT1(IRBIT,2)
         IW(KROW(KPECO,IDECO)+JPECRB) = IRBIT
  200 CONTINUE
C
      RETURN
      END
#endif
@


1.1
log
@*** empty log message ***
@
text
@d18 1
@

