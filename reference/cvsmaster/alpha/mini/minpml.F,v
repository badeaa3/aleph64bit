head	1.1;
access;
symbols
	alpha126_22:1.1
	alpha122_22:1.1
	alpha126_21:1.1
	alpha126_20:1.1
	alpha126_19:1.1
	alpha126_18:1.1
	alpha126_17:1.1
	alpha126_16:1.1
	alpha126_15:1.1
	alpha126_14:1.1
	alpha126_13:1.1
	alpha126_12:1.1
	alpha126_11:1.1
	alpha126_10:1.1
	alpha126_09:1.1
	alpha126_08:1.1
	alpha126_07:1.1
	alpha126_06:1.1
	alpha126_05:1.1
	alpha126_04:1.1
	alpha126_03:1.1
	alpha126_02:1.1
	alpha126_1:1.1
	alpha125_17:1.1
	alpha125_16:1.1
	alpha125_15:1.1
	alpha125_14:1.1
	alpha125_13:1.1
	alpha125_12:1.1
	alpha125_11:1.1
	alpha125_10:1.1
	alpha125_09:1.1
	alpha125_08:1.1
	alpha125_07:1.1
	alpha125_06:1.1
	alpha125_05:1.1
	alpha125_04:1.1
	alpha125_03:1.1
	alpha125_02:1.1
	alpha125_01:1.1
	alpha124_19:1.1
	alpha125:1.1
	alpha124_18:1.1
	alpha124_17:1.1
	alpha124_16:1.1
	alpha124_15:1.1
	alpha124_14:1.1
	alpha124_13:1.1
	alpha124_12:1.1
	alpha124_11:1.1
	alpha124_10:1.1
	alpha124_09:1.1
	alpha124_08:1.1
	alpha124_07:1.1
	alpha124_7:1.1
	alpha124_06:1.1
	alpha124_05:1.1
	alpha124_04:1.1
	alpha124_03:1.1
	alpha124_02:1.1
	alpha124_01:1.1;
locks; strict;
comment	@c @;


1.1
date	99.03.22.14.07.18;	author boucrot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@      SUBROUTINE MINPML
C
CKEY MDST /INTERNAL
C-----------------------------------------------------------------------
C! Fill PMLT bank from DMLT.
C
C     Author: Agnieszka Jacholkowska    24-Oct-94
C-----------------------------------------------------------------------
#ifndef DOC
C
#include "bcs.h"
C
      PARAMETER (AFACTM=10000.,DFACTM=10000.,EFACTM=1000.)
#include "pmltjj.h"
#include "dmltjj.h"

C!    set of intrinsic functions to handle BOS banks
#include "bmacro.h"
C-----------------------------------------------------------------------
C
C++   Pick up DMLT bank.
C
      KDMLT = NLINK('DMLT',0)
      IF (KDMLT.LE.0) RETURN
      NDMLT = LROWS(KDMLT)
      IF (NDMLT.LE.0) RETURN
C
C++   Create PMLT bank.
C
      NPMLT = NDMLT
      LEN = LMHLEN + LPMLTA * NDMLT
      CALL AUBOS('PMLT',0,LEN, KPMLT,IGARB)
      CALL BLIST(IW,'S+','PMLT')
      IF (IGARB.GE.2) THEN
         RETURN
      ELSE IF (IGARB.NE.0) THEN
         KDMLT = NLINK('DMLT',0)
      ENDIF
      IW(KPMLT+LMHCOL) = LPMLTA
      IW(KPMLT+LMHROW) = NDMLT
C
C++   Fill PMLT bank.
C
      DO 100 I=1,NDMLT
         IW(KROW(KPMLT,I)+JPMLFL) = ITABL(KDMLT,I,JDMLFL)
         IW(KROW(KPMLT,I)+JPMLPO) = ITABL(KDMLT,I,JDMLPO)
         IW(KROW(KPMLT,I)+JPMLCH) = ITABL(KDMLT,I,JDMLCH)
         IW(KROW(KPMLT,I)+JPMLSP) = ITABL(KDMLT,I,JDMLSP)
         IW(KROW(KPMLT,I)+JPMLLE) = ITABL(KDMLT,I,JDMLLE)
         IW(KROW(KPMLT,I)+JPMLME) = ITABL(KDMLT,I,JDMLME)
         IW(KROW(KPMLT,I)+JPMLKT) = ITABL(KDMLT,I,JDMLKT)

         IW(KROW(KPMLT,I)+JPMLFR) = ITABL(KDMLT,I,JDMLFR)
  100 CONTINUE
C
      RETURN
      END
#endif
@
