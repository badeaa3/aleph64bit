head	1.1;
access;
symbols
	alpha126_22:1.1
	alpha122_22:1.1
	alpha126_21:1.1
	alpha126_20:1.1
	alpha126_19:1.1
	alpha126_18:1.1
	alpha126_17:1.1
	alpha126_16:1.1
	alpha126_15:1.1
	alpha126_14:1.1
	alpha126_13:1.1
	alpha126_12:1.1
	alpha126_11:1.1
	alpha126_10:1.1
	alpha126_09:1.1
	alpha126_08:1.1
	alpha126_07:1.1
	alpha126_06:1.1
	alpha126_05:1.1
	alpha126_04:1.1
	alpha126_03:1.1
	alpha126_02:1.1
	alpha126_1:1.1
	alpha125_17:1.1
	alpha125_16:1.1
	alpha125_15:1.1
	alpha125_14:1.1
	alpha125_13:1.1
	alpha125_12:1.1
	alpha125_11:1.1
	alpha125_10:1.1
	alpha125_09:1.1
	alpha125_08:1.1
	alpha125_07:1.1
	alpha125_06:1.1
	alpha125_05:1.1
	alpha125_04:1.1
	alpha125_03:1.1
	alpha125_02:1.1
	alpha125_01:1.1
	alpha124_19:1.1
	alpha125:1.1
	alpha124_18:1.1
	alpha124_17:1.1
	alpha124_16:1.1
	alpha124_15:1.1
	alpha124_14:1.1
	alpha124_13:1.1
	alpha124_12:1.1
	alpha124_11:1.1
	alpha124_10:1.1
	alpha124_09:1.1
	alpha124_08:1.1
	alpha124_07:1.1
	alpha124_7:1.1
	alpha124_06:1.1
	alpha124_05:1.1
	alpha124_04:1.1
	alpha124_03:1.1
	alpha124_02:1.1
	alpha124_01:1.1;
locks; strict;
comment	@c @;


1.1
date	99.03.22.14.07.14;	author boucrot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@      SUBROUTINE MINPCP
C
CKEY MDST /USER
C-----------------------------------------------------------------------
C! Fill PCPA bank from DNEU and DRES.
C
C     Author: Stephen Haywood      17-Jan-91
C-----------------------------------------------------------------------
#ifndef DOC
C
#include "bcs.h"
#include "dneujj.h"
#include "dresjj.h"
#include "pcpajj.h"
#include "minfac.h"
#include "bmacro.h"
C-----------------------------------------------------------------------
C
      KDNEU = NLINK('DNEU',0)
      IF(KDNEU.GT.0) THEN
         NDNEU = LROWS(KDNEU)
      ELSE
         NDNEU = 0
      ENDIF
C
      KDRES = NLINK('DRES',0)
      IF(KDRES.GT.0) THEN
         NDRES = LROWS(KDRES)
      ELSE
         NDRES = 0
      ENDIF
C
C++   Create PCPA bank.
C
      NPCPA = NDNEU + NDRES
      IF(NPCPA.LE.0) RETURN
      LEN = LMHLEN + LPCPAA * NPCPA
      CALL AUBOS('PCPA',0,LEN, KPCPA,IGARB)
      CALL BLIST(IW,'S+','PCPA')
      IF(IGARB.GE.2) THEN
         RETURN
      ELSE IF(IGARB.NE.0) THEN
         KDNEU = NLINK('DNEU',0)
         KDRES = NLINK('DRES',0)
      ENDIF
      IW(KPCPA+LMHCOL) = LPCPAA
      IW(KPCPA+LMHROW) = NPCPA
C
C++   Fill PCPA bank from DNEU.
C
      J = 0
      DO 100 I=1,NDNEU
         J = J + 1
         IW(KROW(KPCPA,J)+JPCPNA) = ITABL(KDNEU,I,JDNENA)
         RW(KROW(KPCPA,J)+JPCPEN) = FLOAT(ITABL(KDNEU,I,JDNEE0))/EFACTM
         RW(KROW(KPCPA,J)+JPCPTE) = FLOAT(ITABL(KDNEU,I,JDNETH))/AFACTM
         RW(KROW(KPCPA,J)+JPCPFI) = FLOAT(ITABL(KDNEU,I,JDNEPH))/AFACTM
         RW(KROW(KPCPA,J)+JPCPR1) = FLOAT(ITABL(KDNEU,I,JDNER1))/10.
         RW(KROW(KPCPA,J)+JPCPR2) = FLOAT(ITABL(KDNEU,I,JDNER2))/10.
  100 CONTINUE
C
C++   Fill PCPA bank from DRES.
C
      DO 200 I=1,NDRES
         J = J + 1
         IW(KROW(KPCPA,J)+JPCPNA) = ITABL(KDRES,I,JDRENA)
         RW(KROW(KPCPA,J)+JPCPEN) = FLOAT(ITABL(KDRES,I,JDREE0))/EFACTM
         RW(KROW(KPCPA,J)+JPCPTE) = FLOAT(ITABL(KDRES,I,JDRETH))/AFACTM
         RW(KROW(KPCPA,J)+JPCPFI) = FLOAT(ITABL(KDRES,I,JDREPH))/AFACTM
         RW(KROW(KPCPA,J)+JPCPR1) = FLOAT(ITABL(KDRES,I,JDREP0))/EFACTM
         RW(KROW(KPCPA,J)+JPCPR2) = FLOAT(ITABL(KDRES,I,JDREPS))/EFACTM
  200 CONTINUE
C
      RETURN
      END
#endif
@
