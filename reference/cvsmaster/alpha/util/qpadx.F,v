head	1.1;
branch	1.1.1;
access;
symbols
	alpha126_22:1.1.1.1
	alpha126_21:1.1.1.1
	alpha126_20:1.1.1.1
	alpha126_19:1.1.1.1
	alpha126_18:1.1.1.1
	alpha126_17:1.1.1.1
	alpha126_16:1.1.1.1
	alpha126_15:1.1.1.1
	alpha126_14:1.1.1.1
	alpha126_13:1.1.1.1
	alpha126_12:1.1.1.1
	alpha126_11:1.1.1.1
	alpha126_10:1.1.1.1
	alpha126_09:1.1.1.1
	alpha126_08:1.1.1.1
	alpha126_07:1.1.1.1
	alpha126_06:1.1.1.1
	alpha126_05:1.1.1.1
	alpha126_04:1.1.1.1
	alpha126_03:1.1.1.1
	alpha126_02:1.1.1.1
	alpha126_1:1.1.1.1
	alpha125_17:1.1.1.1
	alpha125_16:1.1.1.1
	alpha125_15:1.1.1.1
	alpha125_14:1.1.1.1
	alpha125_13:1.1.1.1
	alpha125_12:1.1.1.1
	alpha125_11:1.1.1.1
	alpha125_10:1.1.1.1
	alpha125_09:1.1.1.1
	alpha125_08:1.1.1.1
	alpha125_07:1.1.1.1
	alpha125_06:1.1.1.1
	alpha125_05:1.1.1.1
	alpha125_04:1.1.1.1
	alpha125_03:1.1.1.1
	alpha125_02:1.1.1.1
	alpha125_01:1.1.1.1
	alpha124_19:1.1.1.1
	alpha125:1.1.1.1
	alpha124_18:1.1.1.1
	alpha124_17:1.1.1.1
	alpha124_16:1.1.1.1
	alpha124_15:1.1.1.1
	alpha124_14:1.1.1.1
	alpha124_13:1.1.1.1
	alpha124_12:1.1.1.1
	alpha124_11:1.1.1.1
	alpha124_10:1.1.1.1
	alpha124_09:1.1.1.1
	alpha124_08:1.1.1.1
	alpha124_07:1.1.1.1
	alpha124_7:1.1.1.1
	alpha124_06:1.1.1.1
	alpha124_05:1.1.1.1
	alpha124_04:1.1.1.1
	alpha124_03:1.1.1.1
	alpha124_02:1.1.1.1
	alpha124_01:1.1.1.1
	alpha124:1.1.1.1
	alpha123_12:1.1.1.1
	alpha123_11:1.1.1.1
	alpha123_10:1.1.1.1
	alpha123_9:1.1.1.1
	alpha123_8:1.1.1.1
	alpha123_7:1.1.1.1
	alpha123_6:1.1.1.1
	alpha123_5:1.1.1.1
	alpha123_4:1.1.1.1
	alpha123_3:1.1.1.1
	alpha123_2:1.1.1.1
	alpha123:1.1.1.1
	alpha122_48:1.1.1.1
	alpha122_47:1.1.1.1
	alpha122_46:1.1.1.1
	alpha122_45:1.1.1.1
	alpha122_44:1.1.1.1
	alpha122_43:1.1.1.1
	alpha122_42:1.1.1.1
	alpha122_41:1.1.1.1
	alpha122_40:1.1.1.1
	alpha122_39:1.1.1.1
	alpha122_38:1.1.1.1
	alpha122_37:1.1.1.1
	alpha122_36:1.1.1.1
	alpha122_35:1.1.1.1
	alpha122_34:1.1.1.1
	alpha122_33:1.1.1.1
	alpha122_32:1.1.1.1
	alpha122_31:1.1.1.1
	alpha122_30:1.1.1.1
	alpha122_29:1.1.1.1
	alpha122_28:1.1.1.1
	alpha122_27:1.1.1.1
	alpha122_26:1.1.1.1
	alpha122_25:1.1.1.1
	alpha122_24:1.1.1.1
	alpha122_23:1.1.1.1
	alpha122_22:1.1.1.1
	alpha122_21:1.1.1.1
	alpha122_20:1.1.1.1
	alpha122_19:1.1.1.1
	alpha122_18:1.1.1.1
	alpha122_17:1.1.1.1
	alpha122_16:1.1.1.1
	alpha122_15:1.1.1.1
	alpha122_14:1.1.1.1
	alpha122_13:1.1.1.1
	alpha122_12:1.1.1.1
	alpha122_11:1.1.1.1
	alpha122_10:1.1.1.1
	alpha122_9:1.1.1.1
	alpha122_8:1.1.1.1
	alpha122_6:1.1.1.1
	alpha122_5:1.1.1.1
	alpha122:1.1.1.1
	alpha212:1.1.1.1
	ALPHA212:1.1.1;
locks; strict;
comment	@c @;


1.1
date	96.03.14.12.42.21;	author flr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.14.12.42.22;	author flr;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@      SUBROUTINE QPADX(ITK,N,RMASS,QH,RI,XNS,TL,RIEXP,SIGMA,IER)
CKEY DEDX /USER
C----------------------------------------------------------------------
C! dE/dx analysis in ALPHA for pad dE/dx
C! ALPHA interface to the ALEPHLIB routine TIDHYP
C
C  Author   :  D. Casper 14-06-95
C
C     Input:   ITK      /I       ALPHA track number
C              N        /I       Number of hypothesis to try
C              RMASS(n) /R       Mass hypotheses
C              QH(n)     /R       Charge hypotheses (sign doesn't matter
C     Output:  RI       /R       Measured ionization (1.O=minion, Q=1)
C              NS       /R       Number of useful wire samples on track
C              TL       /T       Useful length of the track (cm)
C              RIEXP(n) /R       Expected ionization for the given
C                                mass hypothesis (1.0=minion, Q=1)
C              SIGMA(n) /R       Sigma of dE/dx measurement error,
C                                including the momentum error.
C                                Note that one can calculate a
C                                chi-squared with 1 d.o.f. as:
C                                chi2 = ((RI-RIEXP)/SIGMA)**2
C              IER      /I       Error return= 0 for success
C                                1= can't find track bank or not
C                                   a reconstructed charged track
C                                2= can't find dE/dx bank
C                                3= track has no dE/dx information
C                                4= can't find calibration banks
C                                   TC1X, TC2X, TP3X and/or TC3X
C                                5= cannot find RUNH or EVEH bank
C                                   from which to get the run number
C                                6= can't find TCSX,TCGX banks
C                                7= not supported on nano-dst
C-----------------------------------------------------------------------
#ifndef DOC
#include "qcde.h"
      DIMENSION RMASS(N),QH(N),RIEXP(N),SIGMA(N)
#include "qmacro.h"
C----------------------------------------------------------------------
      IF (XNANO) THEN
        IER = 7
C        CALL NADDX(ITK,N,RMASS,QH,RI,NS,TL,RIEXP,SIGMA,IER)
        GOTO 999
      ENDIF
      IF (KCLASS(ITK).NE.KRECO) THEN
        IER=1
        GOTO 999
      ENDIF
      IF (QCH(ITK).EQ.0.) THEN
        IER=1
        GOTO 999
      ENDIF
      IT1=KCHT(ITK)
      CALL TPDHYP('PAD',KTN(IT1),QMFLD,N,RMASS,QH,RI,XNS,
     &   TL,RIEXP,SIGMA,IER)
 999  CONTINUE
      END
#endif
@


1.1.1.1
log
@import alpha122 from alws
@
text
@@
