head	1.1;
access;
symbols
	alpha126_22:1.1
	alpha122_22:1.1
	alpha126_21:1.1
	alpha126_20:1.1
	alpha126_19:1.1
	alpha126_18:1.1
	alpha126_17:1.1
	alpha126_16:1.1
	alpha126_15:1.1
	alpha126_14:1.1
	alpha126_13:1.1
	alpha126_12:1.1
	alpha126_11:1.1
	alpha126_10:1.1
	alpha126_09:1.1
	alpha126_08:1.1
	alpha126_07:1.1
	alpha126_06:1.1
	alpha126_05:1.1
	alpha126_04:1.1
	alpha126_03:1.1
	alpha126_02:1.1
	alpha126_1:1.1
	alpha125_17:1.1
	alpha125_16:1.1
	alpha125_15:1.1
	alpha125_14:1.1
	alpha125_13:1.1
	alpha125_12:1.1
	alpha125_11:1.1
	alpha125_10:1.1
	alpha125_09:1.1
	alpha125_08:1.1
	alpha125_07:1.1
	alpha125_06:1.1
	alpha125_05:1.1
	alpha125_04:1.1
	alpha125_03:1.1
	alpha125_02:1.1
	alpha125_01:1.1
	alpha124_19:1.1
	alpha125:1.1
	alpha124_18:1.1
	alpha124_17:1.1
	alpha124_16:1.1
	alpha124_15:1.1
	alpha124_14:1.1
	alpha124_13:1.1
	alpha124_12:1.1
	alpha124_11:1.1
	alpha124_10:1.1
	alpha124_09:1.1
	alpha124_08:1.1
	alpha124_07:1.1
	alpha124_7:1.1
	alpha124_06:1.1
	alpha124_05:1.1
	alpha124_04:1.1
	alpha124_03:1.1
	alpha124_02:1.1
	alpha124_01:1.1
	alpha124:1.1
	alpha123_12:1.1
	alpha123_11:1.1
	alpha123_10:1.1
	alpha123_9:1.1
	alpha123_8:1.1
	alpha123_7:1.1
	alpha123_6:1.1
	alpha123_5:1.1
	alpha123_4:1.1
	alpha123_3:1.1
	alpha123_2:1.1
	alpha123:1.1
	alpha122_48:1.1
	alpha122_47:1.1
	alpha122_46:1.1
	alpha122_45:1.1
	alpha122_44:1.1
	alpha122_43:1.1
	alpha122_42:1.1
	alpha122_41:1.1
	alpha122_40:1.1
	alpha122_39:1.1
	alpha122_38:1.1
	alpha122_37:1.1
	alpha122_36:1.1
	alpha122_35:1.1
	alpha122_34:1.1
	alpha122_33:1.1
	alpha122_32:1.1
	alpha122_31:1.1
	alpha122_30:1.1
	alpha122_29:1.1;
locks; strict;
comment	@c @;


1.1
date	97.05.13.11.56.33;	author boucrot;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@      SUBROUTINE QEWSUM(eweven,ewodd,ier)
C-----------------------------------------------------------------------------
#ifdef doc
C! CKEY ECAL/USER
C  Gets energy on ECAL wires summed over even/odd planes
C  Authors L.Duflot,J.Boucrot    28-Apr-1997
C
C  Output arguments:
C   eweven = sum of wire energies on even planes for the 36 ECAL modules
C            (in GeV) 
C   ewodd  = sum of wire energies on  odd planes for the 36 ECAL modules
C            (in GeV)
C   eweven and ewodd are REAL*4 arrays 
C   which must be dimensioned to 36 in the calling routine
C
C   ier    = 1 if no banks of wire energies for this event 
C          = 0 if all OK
#else
C-----------------------------------------------------------------------------
#include "pweijj.h"
#include "dwesjj.h"
#include "qcde.h"
      PARAMETER ( NMOD=36 , FACMI = 1000.)
      REAL*4   EWEVEN(NMOD),EWODD(NMOD)
#include "qmacro.h"
C-----------------------------------------------------------------------------
      IER=1
      CALL VZERO(EWEVEN,NMOD)
      CALL VZERO(EWODD,NMOD)
      IF (XNANO) GO TO 999
C
C Reading a MINI: Information is in bank 'DWES' :
C
      IF (XMINI) THEN
        JDWES=IW(NAMIND('DWES'))
        IF(JDWES .EQ. 0) GO TO 999 
        IER=0
        DO 100 IDWES=1,LROWS(JDWES)                     
           KDWES=KROW(JDWES,IDWES)
           IMOD=IW(KDWES+JDWEMN)
           IF (IMOD.LE.0.OR.IMOD.GT.NMOD) GO TO 100
           EWODD(IMOD) =FLOAT(IW(KDWES+JDWESO))/FACMI
           EWEVEN(IMOD)=FLOAT(IW(KDWES+JDWESE))/FACMI
 100    CONTINUE                                                     
        GO TO 999
      ENDIF
C
C Reading a POT or a DST: information in PWEI or PEWI bank:
C
      JPWEI = IW(NAMIND('PWEI'))            
      IF (JPWEI .EQ. 0) JPWEI = IW(NAMIND('PEWI'))
      IF (JPWEI.EQ.0) GO TO 999  
      FACPO = FACMI*FACMI    
C
      DO 200 I = 1,LROWS(JPWEI)
        IMODUL = ITABL(JPWEI,I,JPWEMN)
        IF (IMODUL.LE.0.OR.IMODUL.GT.NMOD) GO TO 200
        IPMIN=JPWEPD-1
        IPMAX=JPWESS-2
        DO IPLA = ipmin,ipmax	
          ENEPL = FLOAT(ITABL(JPWEI,I,IPLA+1))/FACPO
          IF(MOD(IPLA,2).EQ.0) THEN
            EWEVEN(IMODUL) = EWEVEN(IMODUL) + ENEPL 
          ELSE
            EWODD(IMODUL) = EWODD(IMODUL) + ENEPL 
          ENDIF
        ENDDO
 200  CONTINUE
      IER=0
C
 999  RETURN
      END
#endif
@
