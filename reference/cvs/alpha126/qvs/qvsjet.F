      SUBROUTINE QVSJET(DJET,NJETS)
CKEY  QVSRCH / INTERNAL
C ------------------------------------------------------------------------------
C! Finds 2 jet directions in preparation for QVSTVX
C  Called from QVSRCH
C  Author : T. MATTISON  U.A.BARCELONA/SLAC  1 DECEMBER 1992
C
C  Input Arguments :
C  IF ALPHA CARDS CONTAIN 'NQVJ', SETS NJET=2 AND RETURNS
C     ELSE IF 'EFLJ' CARD, STARTS WITH PRE-CLUSTERED JETS
C     ELSE IF 'EFLW' CARD, USES JANOT ENERGY FLOW OBJECTS
C     ELSE USES CHARGED TRACKS AND PCPA CALORIMETER OBJECTS
C     UNLESS THERE IS A 'NOPC' CARD
C  Output Arguments :
C  *  DJET(3,2) IS NORMALIZED 3-VECTORS OF JET DIRECTIONS
C       JET 1 IS HIGHEST ENERGY JET
C       JET 2 IS ONE WITH LARGEST MASS RELATIVE TO FIRST JET
C       ALPHA JETS WITH NAME 'QVSJETS' ARE CREATED
C  *  NJETS IS TOTAL NUMBER OF JETS FOUND
C
C ------------------------------------------------------------------------------
#ifndef DOC
      DIMENSION DJET(3,2)
      LOGICAL FIRST
      DATA FIRST/.TRUE./
      LOGICAL CHGONLY
C
#include "qcde.h"
#include "qmacro.h"
C ------------------------------------------------------------------------------
C
C  EXAMINE BOS BANKS TO CHECK ALPHA CARDS
C
C CHECK FOR NQVJ CARD
      INQVJ=IW(NAMIND('NQVJ'))
C CHECK IF PRECLUSTERED JETS EXIST
      IEFLJ=IW(NAMIND('EFLJ'))
C CHECK FOR MASK OPTION
      IEFLJ2=IW(IEFLJ+1)
C CHECK IF ENERGY FLOW OBJECTS EXIST
      IEFLW=IW(NAMIND('EFLW'))
C CHECK FOR MASK OPTION
      IEFLW2=IW(IEFLW+1)
C CHECK IF PCPA OBJECTS EXIST
      INOPC=IW(NAMIND('NOPC'))
C
      CHGONLY=.FALSE.
C
C SET JET FINDING OPTIONS
      IF     (INQVJ .NE. 0) THEN
        IF (FIRST) WRITE (IW(6),*) ' QVSJET: USING YOUR JET DIRECTIONS'
C
      ELSEIF (IEFLJ .NE. 0) THEN
        IF (FIRST) WRITE (IW(6),*) ' QVSJET: USING PRECLUSTERED JETS'
        IF (FIRST .AND. (IEFLJ2 .EQ. 2 .OR. IEFLW2 .EQ. 2) )
     >    WRITE (IW(6),*) '         FROM MASK ENERGY FLOW'
        CALL QJOPTR('EJ','  ')
C
      ELSEIF (IEFLW2 .EQ. 2) THEN
        IF (FIRST) WRITE (IW(6),*) ' QVSJET: USING MASK ENERGY FLOW'
        CALL QJOPTR('EF','  ')
C
      ELSEIF (IEFLW .NE. 0) THEN
        IF (FIRST) WRITE (IW(6),*) ' QVSJET: USING JANOT ENERGY FLOW'
        CALL QJOPTR('EF','  ')
C
      ELSEIF (INOPC .EQ. 0) THEN
        IF (FIRST)
     >    WRITE (IW(6),*) ' QVSJET: USING PCPA + SEL. CHARGED TRACKS'
        CALL QJOPTR('PC','  ')
C
      ELSE
        IF (FIRST) WRITE (IW(6),*) ' QVSJET: USING CHARGED TRACKS ONLY'
        CALL QJOPTR('CH','  ')
        CHGONLY=.TRUE.
      ENDIF
      FIRST=.FALSE.
C
C PUNT IF NQVJ CARD
      IF (INQVJ .NE. 0) THEN
        NJETS=2
        RETURN
      ENDIF
C
      IF (CHGONLY) THEN
C USE VISIBLE ENERGY
        EVIS=0.
      ELSE
C USE NOMINAL Z MASS
        EVIS=91.173
      ENDIF
C
C QCD-TYPE YCUT (B PHYSICS OFTEN DONE WITH MUCH SMALLER YCUT)
C BUT DAVE BROWN'S STUDIES SAY THIS GIVES BETTER ANGLE RESOLUTION
      YCUT=0.02
C
C SCALED INVARIANT MASS CLUSTERING
      CALL QJMMCL(NJ,'QVSJETS',KRECO,YCUT,EVIS)
C
C GET FIRST JET INDEX
      JF=KPDIR('QVSJETS',KRECO)
C
C FIND HIGHEST ENERGY JET (AND COUNT JETS)
      EJ1=0.
      NJETS=0
      JET=JF
      IF (JET .NE. 0) THEN
  125   CONTINUE
        NJETS=NJETS+1
        IF (QE(JET) .GT. EJ1) THEN
          EJ1=QE(JET)
          J1=JET
        ENDIF
C       NEXT JET
        JET=KFOLLO(JET)
        IF (JET .NE. 0) GOTO 125
      ENDIF
C
C PUNT IF NOT 2 OR MORE JETS
      IF (NJETS .LT. 2) RETURN
C
C NOW FIND JET THAT GIVES LARGEST INVARIANT MASS
      WTMX=0.
      JET=JF
      IF (JET .NE. 0) THEN
  135   CONTINUE
C       DON'T USE THE SAME JET
        IF (JET .NE. J1) THEN
C INVARIANT MASS
          WT=QDOT4(J1,JET)
          IF (WT .GT. WTMX) THEN
            J2=JET
            WTMX=WT
          ENDIF
        ENDIF
C       NEXT JET
        JET=KFOLLO(JET)
        IF (JET .NE. 0) GOTO 135
      ENDIF
C
C SAVE THE JET DIRECTIONS (NORMALIZED MOMENTUM)
      RP=1.
      IF (QP(J1) .NE. 0.)  RP=1./QP(J1)
      DJET(1,1)=QX(J1)*RP
      DJET(2,1)=QY(J1)*RP
      DJET(3,1)=QZ(J1)*RP
      RP=1.
      IF (QP(J2) .NE. 0.)  RP=1./QP(J2)
      DJET(1,2)=QX(J2)*RP
      DJET(2,2)=QY(J2)*RP
      DJET(3,2)=QZ(J2)*RP
      RETURN
      END
#endif
