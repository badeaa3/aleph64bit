#! /bin/csh
#============================================================================
#                             ALINSTAL
#                                                       F.Blin
#============================================================================
# To reset links with new version
# All ALEPH libraries on file -> ${alib_dir}/pub/progl
#============================================================================
# P1 -> prog_name eg: alephlib
# P2 -> cycle eg: 140
#============================================================================
# 01/03/93 add remove src$prog_name before new ln src$file_name (FBL)
# 22/06/93 add all remove before a new link (FBL)
# alinstal2.0
# 17/08/93 add remove the oldest version if required (FLR)
#          latest cycle number is kept on ${prog_dir}/alib.log
# alinstal2.1
# 30/08/93 on no MASTER machine create a link to standard include files (FLR)
# alinstal2.2
# 14/09/93 write on prog_dir/spy and not on prog_dir/alib.log
#============================================================================
# set echo on
unset noclobber
set UNAME = `uname`
set exec_name = "alinstal"
set alib_dir = "/aleph/alib"
set prog_dir = `pwd`
set cycle = ""
set mnemonic = ""
#===> first parameter
if ($1 == "") then
  echo -n "Enter Aleph program name [eg:alephlib <CR>=exit]-> "
   set prog_name = $<
   if (${prog_name} == "") goto exec_end
else
   set prog_name = $1
endif
 
set idir = `egrep ^" ${prog_name} " ${alib_dir}/pub/progl | awk '{print $2}'`
set mnemonic = `egrep ^" ${prog_name} " ${alib_dir}/pub/progl | awk '{print $4}'`
if (${idir} == "") then
   echo "*** WARNING not official ALEPH program"
   goto exec_end
else
   set prog_dir = "/aleph/${idir}"
   set cycle = `egrep ^" ${prog_name} " ${prog_dir}/alib.log | awk '{print $3}'`
endif
 
#===> second parameter
if ($2 == "") then
   echo -n "Enter new cycle [<CR>=${cycle}]-> "
   set cycle_ask = $<
   if (${cycle_ask} == "") set cycle_ask = ${cycle}
else
   set cycle_ask = $2
endif
 
#*******> links
cd ${prog_dir}
set file_name = ${mnemonic}${cycle_ask}
if (-e lib${file_name}.a) then
   rm lib${prog_name}.a
   echo "Now -> ln -fs lib${file_name}.a lib${prog_name}.a"
   ln -fs lib${file_name}.a lib${prog_name}.a
else
  echo "Sorry bad file -> lib${file_name}.a"
   goto exec_end
endif
if (-e ${file_name}.news) then
   rm ${prog_name}.news
   echo "Now -> ln -fs ${file_name}.news ${prog_name}.news"
   ln -fs ${file_name}.news ${prog_name}.news
endif
if (-e ${file_name}) then
   rm lib${prog_name}
   echo "Now -> ln -fs ${file_name} ${prog_name}"
   ln -fs ${file_name} lib${prog_name}
endif
if (-d src${file_name}) then
   rm src${prog_name}
   echo "Now -> ln -fs src${file_name} src${prog_name}"
   ln -fs src${file_name} src${prog_name}
endif
set file_corr = `echo ${prog_name} | awk '{print substr($0,1,1) "cor"}'`
 
#>> JULIA
if (${prog_name} == "julia") then
   if (-e jmuid${cycle_ask}.o) then
      rm jmuid.o
      echo "Now -> ln -fs jmuid${cycle_ask}.o jmuid.o"
      ln -fs jmuid${cycle_ask}.o jmuid.o
   endif
endif

#>> ALPHA
if (${prog_name} == "alpha") then
   set file_corr = `echo ${prog_name} | awk '{print substr($0,1,2) "cor"}'`
   set file_type_inc = "inc${cycle_ask}"
   set inc_dir = "/al/${MASTER}/${idir}"
   if (-e ${inc_dir}/qcde.${file_type_inc}) then
      rm qcde.inc
      echo "Now -> ln -fs ${inc_dir}/qcde.${file_type_inc} qcde.inc"
      ln -fs ${inc_dir}/qcde.${file_type_inc} qcde.inc
   endif
   if (-e ${inc_dir}/qdecl.${file_type_inc}) then
      rm qdecl.inc
      echo "Now -> ln -fs ${inc_dir}/qdecl.${file_type_inc} qdecl.inc"
      ln -fs ${inc_dir}/qdecl.${file_type_inc} qdecl.inc
   endif
   if (-e ${inc_dir}/qhac.${file_type_inc}) then
      rm qhac.inc
      echo "Now -> ln -fs ${inc_dir}/qhac.${file_type_inc} qhac.inc"
      ln -fs ${inc_dir}/qhac.${file_type_inc} qhac.inc
   endif
   if (-e ${inc_dir}/qmacro.${file_type_inc}) then
      rm qmacro.inc
      echo "Now -> ln -fs ${inc_dir}/qmacro.${file_type_inc} qmacro.inc"
      ln -fs ${inc_dir}/qmacro.${file_type_inc} qmacro.inc
   endif
endif
#>> ALL
if (-e ${file_corr}${cycle_ask}.f) then
   rm ${file_corr}.f
   echo "Now -> ln -fs ${file_corr}${cycle_ask}.f ${file_corr}.f"
   ln -fs ${file_corr}${cycle_ask}.f ${file_corr}.f
endif
if (-e ${file_corr}${cycle_ask}.o) then
   rm ${file_corr}.o
   echo "Now -> ln -fs ${file_corr}${cycle_ask}.o ${file_corr}.o"
   ln -fs ${file_corr}${cycle_ask}.o ${file_corr}.o
endif

#*******> spy
set dmyh = `date '+%d-%h-19%y %T'`
echo "${exec_name} ${UNAME} ${user} ${dmyh} ${prog_name} ${file_name}" >> ${prog_dir}/spy
 
#******> remove old version if required
alremove ${prog_name}

#*******> exec_end
exec_end:
 exit
 
 
