#! /bin/csh
#==========================================================
# 930609                                 F.Ranjard
#                       UPHYINSTAL
#==========================================================
#
#set echo on
if ($#argv < 1) then
  echo " "
  echo "usage: " 
  echo " uphyinstal <IBM fortran filename> [<lib>]"
  echo " "
  echo " the IBM fortran file with filetype FORTRAN and filemode UPHY is"
  echo " imported using ftp under the filename IBMfilename.fortran"
  echo " "
  echo " the existing IBM INCLUDE statments are replaced by UNIX INCLUDE statments"
  echo " and the file IBMfilename.f is created"
  echo " IBMfilename.f is compiled using the f77_options file"
  echo " a library is created with name libIBMfilename.a if the second argument is lib"
  echo " "
  echo " example"
  echo " uphyinstal obspos "
  echo " will import CERNVM: OBSPOS FORTRAN UPHY under obspos.fortran "
  echo " INCLUDE statments will be changed using getfor and obspos.f will be created"
  echo " obspos.f will be compiled to obspos.o"
  exit(1)
else
  set file = $1
  set flag = "nolib"
  if ($#argv > 1) set flag = $2
endif
#
if (${file} == "") then
  echo " uphyinstal : no file name given - exit"
  exit(1)
endif 
#
#********
#
set UNAME = `uname`
# set input and output filename for getfor
if (${UNAME} == "HP-UX") then
   set f1 = "ftn01"
   set f2 = "ftn02"
else
   set f1 = "fort.1"
   set f2 = "fort.2"
endif
#
set uphy_dir = "/aleph/uphy"
set ascii_transfert = "ascii"
# 
set disk_ibm_uphy = "pubxu.204"
#  
cd ${uphy_dir}

# remove previous files if any
if (-e ftp_tmp) rm ftp_tmp
if (-e {file}.fortran) rm {file}.fortran
if (-e {file}.fold) rm {file}.fold
if (-e {file}.oold) rm {file}.oold
if (-e lib{file}.aold) rm lib{file}.aold
#
# =========   build ftp_tmp input file to ftp
#
echo -n "Enter ibm user [<CR>=${USER}]-> "
set ibm_user = $<
if (${ibm_user} == "") then
   set ibm_user = ${USER}
endif
echo "Enter password for ${ibm_user} on ibm [<CR>=exit]-> "
stty -echo
set ibm_pass = $<
stty echo
if (${ibm_pass} == "") goto error_end
echo "cd ${disk_ibm_uphy}" > ftp_tmp
echo "${ascii_transfert}" >> ftp_tmp
echo "get ${file}.fortran ${uphy_dir}/${file}.fortran" >> ftp_tmp
echo "quit" >> ftp_tmp
#
# ========= build $HOME/.netrc file which contains ibm_user and ibm_pass for ftp
#           if it exists then save it to restore it afterwards 
#  
set mv_tmp = "NO"
if (-e $HOME/.netrc) then
   mv -f $HOME/.netrc $HOME/.netrc_tmp
   set mv_tmp = "YES"
endif
echo "#! /bin.csh " > $HOME/.netrc
echo "machine cernvm.cern.ch login ${ibm_user} password ${ibm_pass}" >> $HOME/.netrc
chmod 600 $HOME/.netrc
#
#
# =============     get files from UPHY
#  call ftp with ftp_tmp input file and $HOME/.netrc
ftp cernvm.cern.ch < ftp_tmp
#
#  restore previous $HOME/.netrc
if ($mv_tmp == "YES") then
   mv -f $HOME/.netrc_tmp $HOME/.netrc
else
   rm -f $HOME/.netrc
endif
#
# ============ check existence of files 
#
cd ${uphy_dir}
if !(-f ${file}.fortran) then
   echo " *** ftp FATAL error -> ${file}.fortran is not here"
   goto error_end
endif
# 
# ========   replace IBM INCLUDE statments by unix include
#            create  ${uphy_dir}/${file}.f
#
# keep old file.f if any as file.fold
if (-e ${file}.f) mv ${file}.f ${file}.fold
echo "run getfor to create -> ${uphy_dir}/${file}.f "
mv ${file}.fortran ${f1}
/aleph/bin/getfor
mv ${f2} ${file}.f
if !(-f ${file}.f) then
   echo " *** getfor FATAL error -> file ${file}.f not here"
   goto error_end
endif
#
# ========= get f77 option file
set file_para = /aleph/phy/f77_options 
set all_para  = `egrep "alpha " ${file_para} | awk '{print substr($0,15)}'`
#
# ========= compile
if (${flag} == "nolib") then
echo "compile to create -> ${uphy_dir}/${file}.o "
# keep old file.o if any as file.oold
   if (-e ${file}.o) mv ${file}.o ${file}.oold
# compile the full file and keep the .o
   f77 ${all_para} ${file}.f
   if !(-f ${file}.o) then
      echo "*** FATAL compilation errors -> ${file}.o is not there"
      goto error_end
   endif
else   
# compile and make a library
# create a temporary directory
# move file to this temp dir
# fnice and fsplit    
echo "compile and  create -> ${uphy_dir}/lib${file}.a "
   mkdir ${file}.srctmp
   cd ${file}.srctmp
   rm *
   cp ../${file}.f tmp.f
   fnice tmp.f
   fsplit tmp.f
   rm tmp.*
# change to lower case
   set listf = `ls *.f`
   foreach f ($listf[*])
     set tmp = `echo ${f} | tr '[A-Z]' '[a-z]'`
     mv -f ${f} ${tmp}
   end
# compile one routine at a time
   set listf = `ls *.f`
   foreach f ($listf[*])
     f77 ${all_para} ${f} | & tee -a compile.log
   end
# check compile.log for 'ERROR'
   grep -n 'ERROR' compile.log > error.log
   grep -n 'Error' compile.log >> error.log
   if !(-z error.log) then
      echo " FATAL error(s) during compilation, look at "
      echo "       ${uphy_dir}/${file}.srctmp/compile.log file"
      goto error_end
   endif 
# make a library in the upper directory
   if (-e ../lib${file}.a) mv ../lib${file}.a ../lib${file}.aold
   ar rls ../lib${file}.a *.o
# release temp directory
   rm *
   cd ..
   rmdir ${file}.srctmp
endif
# ==========================================> normal exit
#  remove temporary files
#
cd ${uphy_dir}
rm -f ftp_tmp
rm -f ${file}.fortran
rm -f ${file}.fold
rm -f ${file}.oold
#
echo "uphyinstal normal exit"
exit
#=============================================> abnormal exit
error_end:
echo "uphyinstal abnormal exit - restore previous files if any "
cd ${uphy_dir}
if (-e ${file}.fold) mv ${file}.fold ${file}.f
if (-e ${file}.oold) mv ${file}.oold ${file}.o
if (-e lib${file}.aold) mv lib${file}.aold lib${file}.a
exit
 
 











